<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:18) (1 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(232,52,35)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(222,2,23)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(205,8,53)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(213,65,53)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(254,210,20)"/><text x="13.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(225,45,0)"/><text x="13.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(231,92,48)"/><text x="13.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.37%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(243,224,42)"/><text x="13.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.37%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(250,27,42)"/><text x="13.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.37%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(209,44,13)"/><text x="13.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.37%)</title><rect x="40" y="164" width="5" height="15" fill="rgb(247,102,28)"/><text x="43.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.37%)</title><rect x="45" y="164" width="4" height="15" fill="rgb(221,156,10)"/><text x="48.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="45" y="180" width="4" height="15" fill="rgb(229,141,15)"/><text x="48.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.49%)</title><rect x="54" y="180" width="17" height="15" fill="rgb(214,54,33)"/><text x="57.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.75%)</title><rect x="62" y="196" width="9" height="15" fill="rgb(247,14,46)"/><text x="65.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (9 samples, 3.36%)</title><rect x="40" y="148" width="40" height="15" fill="rgb(231,106,26)"/><text x="43.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.61%)</title><rect x="49" y="164" width="31" height="15" fill="rgb(209,169,4)"/><text x="52.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.75%)</title><rect x="71" y="180" width="9" height="15" fill="rgb(207,141,42)"/><text x="74.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.37%)</title><rect x="80" y="148" width="4" height="15" fill="rgb(210,150,22)"/><text x="83.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.37%)</title><rect x="93" y="196" width="5" height="15" fill="rgb(218,49,0)"/><text x="96.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="93" y="212" width="5" height="15" fill="rgb(249,88,32)"/><text x="96.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.37%)</title><rect x="98" y="196" width="4" height="15" fill="rgb(215,143,51)"/><text x="101.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.37%)</title><rect x="111" y="228" width="4" height="15" fill="rgb(242,186,44)"/><text x="114.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (7 samples, 2.61%)</title><rect x="93" y="180" width="31" height="15" fill="rgb(249,185,13)"/><text x="96.00" y="190.50">de..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.87%)</title><rect x="102" y="196" width="22" height="15" fill="rgb(247,41,50)"/><text x="105.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.87%)</title><rect x="102" y="212" width="22" height="15" fill="rgb(215,75,27)"/><text x="105.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.75%)</title><rect x="115" y="228" width="9" height="15" fill="rgb(226,28,1)"/><text x="118.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.37%)</title><rect x="128" y="196" width="5" height="15" fill="rgb(247,118,10)"/><text x="131.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.37%)</title><rect x="133" y="196" width="4" height="15" fill="rgb(252,145,17)"/><text x="136.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.12%)</title><rect x="137" y="196" width="13" height="15" fill="rgb(224,154,48)"/><text x="140.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.37%)</title><rect x="146" y="212" width="4" height="15" fill="rgb(246,30,37)"/><text x="149.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.12%)</title><rect x="150" y="228" width="14" height="15" fill="rgb(236,218,21)"/><text x="153.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.49%)</title><rect x="150" y="196" width="18" height="15" fill="rgb(219,113,42)"/><text x="153.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.49%)</title><rect x="150" y="212" width="18" height="15" fill="rgb(224,41,16)"/><text x="153.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.37%)</title><rect x="164" y="228" width="4" height="15" fill="rgb(222,152,44)"/><text x="167.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.37%)</title><rect x="168" y="196" width="4" height="15" fill="rgb(231,86,20)"/><text x="171.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.75%)</title><rect x="172" y="196" width="9" height="15" fill="rgb(246,53,10)"/><text x="175.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.75%)</title><rect x="172" y="212" width="9" height="15" fill="rgb(240,165,27)"/><text x="175.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.37%)</title><rect x="181" y="196" width="5" height="15" fill="rgb(228,69,31)"/><text x="184.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.37%)</title><rect x="181" y="212" width="5" height="15" fill="rgb(243,110,32)"/><text x="184.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.37%)</title><rect x="186" y="212" width="4" height="15" fill="rgb(216,181,1)"/><text x="189.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.12%)</title><rect x="186" y="196" width="13" height="15" fill="rgb(229,180,48)"/><text x="189.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.75%)</title><rect x="190" y="212" width="9" height="15" fill="rgb(244,171,16)"/><text x="193.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 1.12%)</title><rect x="199" y="212" width="13" height="15" fill="rgb(245,10,11)"/><text x="202.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (2 samples, 0.75%)</title><rect x="203" y="228" width="9" height="15" fill="rgb(230,212,33)"/><text x="206.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.37%)</title><rect x="212" y="212" width="4" height="15" fill="rgb(232,163,41)"/><text x="215.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.37%)</title><rect x="212" y="228" width="4" height="15" fill="rgb(249,95,31)"/><text x="215.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.37%)</title><rect x="216" y="212" width="5" height="15" fill="rgb(209,162,43)"/><text x="219.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.37%)</title><rect x="216" y="228" width="5" height="15" fill="rgb(210,12,4)"/><text x="219.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (6 samples, 2.24%)</title><rect x="199" y="196" width="26" height="15" fill="rgb(248,39,20)"/><text x="202.00" y="206.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.37%)</title><rect x="221" y="212" width="4" height="15" fill="rgb(252,67,18)"/><text x="224.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.37%)</title><rect x="225" y="196" width="5" height="15" fill="rgb(212,95,35)"/><text x="228.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.87%)</title><rect x="230" y="196" width="22" height="15" fill="rgb(254,105,29)"/><text x="233.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.49%)</title><rect x="234" y="212" width="18" height="15" fill="rgb(248,202,52)"/><text x="237.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.37%)</title><rect x="247" y="228" width="5" height="15" fill="rgb(245,128,21)"/><text x="250.00" y="238.50"></text></g><g><title>0x7fefc9dfee7a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="247" y="244" width="5" height="15" fill="rgb(214,55,20)"/><text x="250.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.37%)</title><rect x="252" y="212" width="4" height="15" fill="rgb(252,220,9)"/><text x="255.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.37%)</title><rect x="256" y="212" width="4" height="15" fill="rgb(230,81,38)"/><text x="259.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 0.75%)</title><rect x="260" y="212" width="9" height="15" fill="rgb(239,190,22)"/><text x="263.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (38 samples, 14.18%)</title><rect x="124" y="180" width="167" height="15" fill="rgb(215,37,50)"/><text x="127.00" y="190.50">decision_function (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 3.36%)</title><rect x="252" y="196" width="39" height="15" fill="rgb(253,152,50)"/><text x="255.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.87%)</title><rect x="269" y="212" width="22" height="15" fill="rgb(225,40,12)"/><text x="272.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.12%)</title><rect x="278" y="228" width="13" height="15" fill="rgb(210,49,47)"/><text x="281.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.37%)</title><rect x="291" y="180" width="5" height="15" fill="rgb(208,167,9)"/><text x="294.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.37%)</title><rect x="296" y="180" width="4" height="15" fill="rgb(211,79,0)"/><text x="299.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.37%)</title><rect x="296" y="196" width="4" height="15" fill="rgb(242,61,44)"/><text x="299.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.37%)</title><rect x="296" y="212" width="4" height="15" fill="rgb(206,146,46)"/><text x="299.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.37%)</title><rect x="296" y="228" width="4" height="15" fill="rgb(214,55,11)"/><text x="299.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:231) (1 samples, 0.37%)</title><rect x="296" y="244" width="4" height="15" fill="rgb(232,66,4)"/><text x="299.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1515) (1 samples, 0.37%)</title><rect x="305" y="260" width="4" height="15" fill="rgb(240,118,33)"/><text x="308.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="309" y="276" width="4" height="15" fill="rgb(209,8,45)"/><text x="312.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.37%)</title><rect x="313" y="292" width="5" height="15" fill="rgb(207,59,3)"/><text x="316.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.37%)</title><rect x="313" y="308" width="5" height="15" fill="rgb(245,58,8)"/><text x="316.00" y="318.50"></text></g><g><title>array_add (number.c:330) (4 samples, 1.49%)</title><rect x="305" y="196" width="17" height="15" fill="rgb(211,127,46)"/><text x="308.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.49%)</title><rect x="305" y="212" width="17" height="15" fill="rgb(244,150,13)"/><text x="308.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.49%)</title><rect x="305" y="228" width="17" height="15" fill="rgb(231,3,17)"/><text x="308.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.49%)</title><rect x="305" y="244" width="17" height="15" fill="rgb(247,113,53)"/><text x="308.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.12%)</title><rect x="309" y="260" width="13" height="15" fill="rgb(225,79,21)"/><text x="312.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.75%)</title><rect x="313" y="276" width="9" height="15" fill="rgb(250,144,18)"/><text x="316.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3047) (1 samples, 0.37%)</title><rect x="318" y="292" width="4" height="15" fill="rgb(246,106,34)"/><text x="321.00" y="302.50"></text></g><g><title>array_matrix_multiply (number.c:388) (1 samples, 0.37%)</title><rect x="322" y="212" width="5" height="15" fill="rgb(214,38,52)"/><text x="325.00" y="222.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.75%)</title><rect x="327" y="212" width="8" height="15" fill="rgb(243,119,42)"/><text x="330.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.37%)</title><rect x="335" y="228" width="5" height="15" fill="rgb(210,104,41)"/><text x="338.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.37%)</title><rect x="340" y="260" width="4" height="15" fill="rgb(230,135,22)"/><text x="343.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.75%)</title><rect x="340" y="244" width="9" height="15" fill="rgb(242,159,39)"/><text x="343.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.37%)</title><rect x="344" y="260" width="5" height="15" fill="rgb(213,154,28)"/><text x="347.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.37%)</title><rect x="344" y="276" width="5" height="15" fill="rgb(242,11,12)"/><text x="347.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.37%)</title><rect x="344" y="292" width="5" height="15" fill="rgb(214,153,10)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.37%)</title><rect x="344" y="308" width="5" height="15" fill="rgb(229,155,33)"/><text x="347.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.37%)</title><rect x="344" y="324" width="5" height="15" fill="rgb(209,5,5)"/><text x="347.00" y="334.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.37%)</title><rect x="344" y="340" width="5" height="15" fill="rgb(210,70,36)"/><text x="347.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.37%)</title><rect x="349" y="244" width="4" height="15" fill="rgb(229,98,46)"/><text x="352.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.37%)</title><rect x="349" y="260" width="4" height="15" fill="rgb(223,208,6)"/><text x="352.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.37%)</title><rect x="349" y="276" width="4" height="15" fill="rgb(246,84,9)"/><text x="352.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.37%)</title><rect x="353" y="244" width="4" height="15" fill="rgb(214,142,54)"/><text x="356.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 4.10%)</title><rect x="322" y="196" width="49" height="15" fill="rgb(224,42,13)"/><text x="325.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.99%)</title><rect x="335" y="212" width="36" height="15" fill="rgb(212,25,19)"/><text x="338.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (7 samples, 2.61%)</title><rect x="340" y="228" width="31" height="15" fill="rgb(251,24,39)"/><text x="343.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (3 samples, 1.12%)</title><rect x="357" y="244" width="14" height="15" fill="rgb(220,37,2)"/><text x="360.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.75%)</title><rect x="362" y="260" width="9" height="15" fill="rgb(210,221,27)"/><text x="365.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.75%)</title><rect x="362" y="276" width="9" height="15" fill="rgb(213,200,17)"/><text x="365.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.75%)</title><rect x="362" y="292" width="9" height="15" fill="rgb(251,199,52)"/><text x="365.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.75%)</title><rect x="362" y="308" width="9" height="15" fill="rgb(228,41,17)"/><text x="365.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (18 samples, 6.72%)</title><rect x="300" y="180" width="79" height="15" fill="rgb(234,113,3)"/><text x="303.00" y="190.50">decision_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.75%)</title><rect x="371" y="196" width="8" height="15" fill="rgb(227,85,46)"/><text x="374.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.37%)</title><rect x="375" y="212" width="4" height="15" fill="rgb(209,208,31)"/><text x="378.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (68 samples, 25.37%)</title><rect x="93" y="164" width="300" height="15" fill="rgb(215,94,41)"/><text x="96.00" y="174.50">_predict_proba_lr (sklearn/linear_model/..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (3 samples, 1.12%)</title><rect x="379" y="180" width="14" height="15" fill="rgb(219,171,36)"/><text x="382.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.37%)</title><rect x="388" y="196" width="5" height="15" fill="rgb(220,84,17)"/><text x="391.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="393" y="180" width="4" height="15" fill="rgb(248,7,54)"/><text x="396.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:581) (1 samples, 0.37%)</title><rect x="393" y="196" width="4" height="15" fill="rgb(229,219,10)"/><text x="396.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="397" y="196" width="4" height="15" fill="rgb(225,124,12)"/><text x="400.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.37%)</title><rect x="397" y="212" width="4" height="15" fill="rgb(211,227,52)"/><text x="400.00" y="222.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1745) (1 samples, 0.37%)</title><rect x="397" y="228" width="4" height="15" fill="rgb(205,43,10)"/><text x="400.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.37%)</title><rect x="401" y="212" width="5" height="15" fill="rgb(253,41,40)"/><text x="404.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.37%)</title><rect x="401" y="228" width="5" height="15" fill="rgb(243,86,41)"/><text x="404.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.37%)</title><rect x="401" y="244" width="5" height="15" fill="rgb(233,79,15)"/><text x="404.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.37%)</title><rect x="401" y="260" width="5" height="15" fill="rgb(249,17,52)"/><text x="404.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:370) (1 samples, 0.37%)</title><rect x="401" y="276" width="5" height="15" fill="rgb(214,105,47)"/><text x="404.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h:96) (1 samples, 0.37%)</title><rect x="401" y="292" width="5" height="15" fill="rgb(237,13,43)"/><text x="404.00" y="302.50"></text></g><g><title>to_128 (npy_extint128.h:67) (1 samples, 0.37%)</title><rect x="401" y="308" width="5" height="15" fill="rgb(235,220,52)"/><text x="404.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.75%)</title><rect x="401" y="196" width="9" height="15" fill="rgb(214,69,28)"/><text x="404.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.37%)</title><rect x="406" y="212" width="4" height="15" fill="rgb(226,192,22)"/><text x="409.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.37%)</title><rect x="406" y="228" width="4" height="15" fill="rgb(253,168,28)"/><text x="409.00" y="238.50"></text></g><g><title>0x7fefb50f213e (?) (1 samples, 0.37%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(238,123,36)"/><text x="409.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c:111) (1 samples, 0.37%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(213,215,10)"/><text x="409.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.37%)</title><rect x="406" y="276" width="4" height="15" fill="rgb(231,150,9)"/><text x="409.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.37%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(249,156,28)"/><text x="409.00" y="302.50"></text></g><g><title>0x7fefc900ae80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="406" y="308" width="4" height="15" fill="rgb(221,95,27)"/><text x="409.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.87%)</title><rect x="393" y="164" width="22" height="15" fill="rgb(226,33,10)"/><text x="396.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.49%)</title><rect x="397" y="180" width="18" height="15" fill="rgb(228,47,54)"/><text x="400.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3283) (1 samples, 0.37%)</title><rect x="410" y="196" width="5" height="15" fill="rgb(232,71,47)"/><text x="413.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.37%)</title><rect x="423" y="196" width="5" height="15" fill="rgb(244,21,42)"/><text x="426.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.75%)</title><rect x="423" y="180" width="9" height="15" fill="rgb(206,104,23)"/><text x="426.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.37%)</title><rect x="428" y="196" width="4" height="15" fill="rgb(233,47,44)"/><text x="431.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.37%)</title><rect x="428" y="212" width="4" height="15" fill="rgb(215,27,40)"/><text x="431.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.37%)</title><rect x="445" y="308" width="5" height="15" fill="rgb(227,79,45)"/><text x="448.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 1.87%)</title><rect x="445" y="228" width="22" height="15" fill="rgb(237,32,39)"/><text x="448.00" y="238.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 1.87%)</title><rect x="445" y="244" width="22" height="15" fill="rgb(253,184,14)"/><text x="448.00" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 1.87%)</title><rect x="445" y="260" width="22" height="15" fill="rgb(248,89,23)"/><text x="448.00" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 1.87%)</title><rect x="445" y="276" width="22" height="15" fill="rgb(240,115,15)"/><text x="448.00" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 1.87%)</title><rect x="445" y="292" width="22" height="15" fill="rgb(219,189,1)"/><text x="448.00" y="302.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (4 samples, 1.49%)</title><rect x="450" y="308" width="17" height="15" fill="rgb(228,101,10)"/><text x="453.00" y="318.50"></text></g><g><title>0x7fefc9dfee7a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="463" y="324" width="4" height="15" fill="rgb(224,123,27)"/><text x="466.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.37%)</title><rect x="467" y="244" width="5" height="15" fill="rgb(232,120,29)"/><text x="470.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.73%)</title><rect x="432" y="180" width="44" height="15" fill="rgb(229,222,48)"/><text x="435.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.73%)</title><rect x="432" y="196" width="44" height="15" fill="rgb(223,90,47)"/><text x="435.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 2.61%)</title><rect x="445" y="212" width="31" height="15" fill="rgb(236,17,28)"/><text x="448.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.75%)</title><rect x="467" y="228" width="9" height="15" fill="rgb(239,131,27)"/><text x="470.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.37%)</title><rect x="472" y="244" width="4" height="15" fill="rgb(226,37,26)"/><text x="475.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.37%)</title><rect x="472" y="260" width="4" height="15" fill="rgb(243,215,24)"/><text x="475.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.37%)</title><rect x="472" y="276" width="4" height="15" fill="rgb(236,142,24)"/><text x="475.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.37%)</title><rect x="476" y="196" width="5" height="15" fill="rgb(234,221,37)"/><text x="479.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.37%)</title><rect x="481" y="244" width="4" height="15" fill="rgb(220,196,12)"/><text x="484.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="481" y="260" width="4" height="15" fill="rgb(221,193,51)"/><text x="484.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.75%)</title><rect x="481" y="228" width="8" height="15" fill="rgb(219,116,21)"/><text x="484.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="485" y="244" width="4" height="15" fill="rgb(218,134,27)"/><text x="488.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="485" y="260" width="4" height="15" fill="rgb(233,98,19)"/><text x="488.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1049) (1 samples, 0.37%)</title><rect x="485" y="276" width="4" height="15" fill="rgb(221,86,36)"/><text x="488.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1742) (1 samples, 0.37%)</title><rect x="489" y="244" width="5" height="15" fill="rgb(234,63,48)"/><text x="492.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.49%)</title><rect x="481" y="196" width="17" height="15" fill="rgb(215,204,43)"/><text x="484.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.49%)</title><rect x="481" y="212" width="17" height="15" fill="rgb(254,62,15)"/><text x="484.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.75%)</title><rect x="489" y="228" width="9" height="15" fill="rgb(219,205,51)"/><text x="492.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:763) (1 samples, 0.37%)</title><rect x="494" y="244" width="4" height="15" fill="rgb(245,102,43)"/><text x="497.00" y="254.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h:468) (1 samples, 0.37%)</title><rect x="494" y="260" width="4" height="15" fill="rgb(254,53,13)"/><text x="497.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (105 samples, 39.18%)</title><rect x="40" y="132" width="463" height="15" fill="rgb(226,57,32)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (95 samples, 35.45%)</title><rect x="84" y="148" width="419" height="15" fill="rgb(241,28,25)"/><text x="87.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (20 samples, 7.46%)</title><rect x="415" y="164" width="88" height="15" fill="rgb(235,186,50)"/><text x="418.00" y="174.50">_predict_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.24%)</title><rect x="476" y="180" width="27" height="15" fill="rgb(235,167,5)"/><text x="479.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.37%)</title><rect x="498" y="196" width="5" height="15" fill="rgb(253,18,17)"/><text x="501.00" y="206.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="503" y="132" width="4" height="15" fill="rgb(216,202,17)"/><text x="506.00" y="142.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.37%)</title><rect x="507" y="132" width="4" height="15" fill="rgb(236,62,24)"/><text x="510.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:38) (115 samples, 42.91%)</title><rect x="10" y="52" width="506" height="15" fill="rgb(243,187,3)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_5..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:37) (115 samples, 42.91%)</title><rect x="10" y="68" width="506" height="15" fill="rgb(241,171,12)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:29) (115 samples, 42.91%)</title><rect x="10" y="84" width="506" height="15" fill="rgb(216,91,34)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinea..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:23) (114 samples, 42.54%)</title><rect x="14" y="100" width="502" height="15" fill="rgb(216,55,27)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (112 samples, 41.79%)</title><rect x="23" y="116" width="493" height="15" fill="rgb(216,165,10)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="511" y="132" width="5" height="15" fill="rgb(221,191,33)"/><text x="514.00" y="142.50"></text></g><g><title>0x7fefc9ec6130 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="511" y="148" width="5" height="15" fill="rgb(211,41,46)"/><text x="514.00" y="158.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.37%)</title><rect x="516" y="852" width="4" height="15" fill="rgb(214,91,54)"/><text x="519.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.37%)</title><rect x="516" y="868" width="4" height="15" fill="rgb(245,160,23)"/><text x="519.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.37%)</title><rect x="516" y="884" width="4" height="15" fill="rgb(228,35,27)"/><text x="519.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.37%)</title><rect x="516" y="900" width="4" height="15" fill="rgb(248,170,39)"/><text x="519.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.37%)</title><rect x="516" y="916" width="4" height="15" fill="rgb(229,206,29)"/><text x="519.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.37%)</title><rect x="516" y="932" width="4" height="15" fill="rgb(219,148,21)"/><text x="519.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.37%)</title><rect x="516" y="948" width="4" height="15" fill="rgb(232,222,3)"/><text x="519.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.37%)</title><rect x="516" y="964" width="4" height="15" fill="rgb(218,46,40)"/><text x="519.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.37%)</title><rect x="516" y="980" width="4" height="15" fill="rgb(226,132,47)"/><text x="519.00" y="990.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.37%)</title><rect x="520" y="900" width="5" height="15" fill="rgb(219,23,9)"/><text x="523.00" y="910.50"></text></g><g><title>basename (posixpath.py:147) (1 samples, 0.37%)</title><rect x="520" y="916" width="5" height="15" fill="rgb(235,81,19)"/><text x="523.00" y="926.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.37%)</title><rect x="520" y="932" width="5" height="15" fill="rgb(215,2,16)"/><text x="523.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.37%)</title><rect x="525" y="932" width="4" height="15" fill="rgb(211,209,44)"/><text x="528.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.49%)</title><rect x="516" y="820" width="17" height="15" fill="rgb(248,59,46)"/><text x="519.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.49%)</title><rect x="516" y="836" width="17" height="15" fill="rgb(218,20,12)"/><text x="519.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.12%)</title><rect x="520" y="852" width="13" height="15" fill="rgb(207,73,52)"/><text x="523.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.12%)</title><rect x="520" y="868" width="13" height="15" fill="rgb(253,229,31)"/><text x="523.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 1.12%)</title><rect x="520" y="884" width="13" height="15" fill="rgb(241,105,5)"/><text x="523.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.75%)</title><rect x="525" y="900" width="8" height="15" fill="rgb(217,91,24)"/><text x="528.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.75%)</title><rect x="525" y="916" width="8" height="15" fill="rgb(215,179,7)"/><text x="528.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.37%)</title><rect x="529" y="932" width="4" height="15" fill="rgb(245,44,26)"/><text x="532.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.37%)</title><rect x="529" y="948" width="4" height="15" fill="rgb(206,40,38)"/><text x="532.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.37%)</title><rect x="529" y="964" width="4" height="15" fill="rgb(206,178,41)"/><text x="532.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.37%)</title><rect x="529" y="980" width="4" height="15" fill="rgb(253,152,48)"/><text x="532.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.87%)</title><rect x="516" y="580" width="22" height="15" fill="rgb(207,188,27)"/><text x="519.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.87%)</title><rect x="516" y="596" width="22" height="15" fill="rgb(237,168,12)"/><text x="519.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.87%)</title><rect x="516" y="612" width="22" height="15" fill="rgb(234,208,6)"/><text x="519.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.87%)</title><rect x="516" y="628" width="22" height="15" fill="rgb(233,155,27)"/><text x="519.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.87%)</title><rect x="516" y="644" width="22" height="15" fill="rgb(235,219,13)"/><text x="519.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.87%)</title><rect x="516" y="660" width="22" height="15" fill="rgb(253,189,44)"/><text x="519.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.87%)</title><rect x="516" y="676" width="22" height="15" fill="rgb(207,55,37)"/><text x="519.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.87%)</title><rect x="516" y="692" width="22" height="15" fill="rgb(229,126,0)"/><text x="519.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.87%)</title><rect x="516" y="708" width="22" height="15" fill="rgb(209,152,33)"/><text x="519.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.87%)</title><rect x="516" y="724" width="22" height="15" fill="rgb(253,139,48)"/><text x="519.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.87%)</title><rect x="516" y="740" width="22" height="15" fill="rgb(210,134,17)"/><text x="519.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.87%)</title><rect x="516" y="756" width="22" height="15" fill="rgb(249,113,18)"/><text x="519.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.87%)</title><rect x="516" y="772" width="22" height="15" fill="rgb(233,149,40)"/><text x="519.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.87%)</title><rect x="516" y="788" width="22" height="15" fill="rgb(253,49,22)"/><text x="519.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.87%)</title><rect x="516" y="804" width="22" height="15" fill="rgb(229,214,32)"/><text x="519.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (1 samples, 0.37%)</title><rect x="533" y="820" width="5" height="15" fill="rgb(253,196,43)"/><text x="536.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="533" y="836" width="5" height="15" fill="rgb(235,61,20)"/><text x="536.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="533" y="852" width="5" height="15" fill="rgb(219,190,15)"/><text x="536.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="533" y="868" width="5" height="15" fill="rgb(211,141,41)"/><text x="536.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="533" y="884" width="5" height="15" fill="rgb(226,29,48)"/><text x="536.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="533" y="900" width="5" height="15" fill="rgb(207,211,5)"/><text x="536.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py:65) (1 samples, 0.37%)</title><rect x="533" y="916" width="5" height="15" fill="rgb(248,96,22)"/><text x="536.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="533" y="932" width="5" height="15" fill="rgb(227,94,43)"/><text x="536.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="533" y="948" width="5" height="15" fill="rgb(217,96,15)"/><text x="536.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="533" y="964" width="5" height="15" fill="rgb(216,111,22)"/><text x="536.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="533" y="980" width="5" height="15" fill="rgb(242,191,0)"/><text x="536.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="533" y="996" width="5" height="15" fill="rgb(244,58,47)"/><text x="536.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="533" y="1012" width="5" height="15" fill="rgb(244,193,23)"/><text x="536.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="533" y="1028" width="5" height="15" fill="rgb(245,96,28)"/><text x="536.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.37%)</title><rect x="533" y="1044" width="5" height="15" fill="rgb(234,111,33)"/><text x="536.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.37%)</title><rect x="533" y="1060" width="5" height="15" fill="rgb(234,207,31)"/><text x="536.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.37%)</title><rect x="533" y="1076" width="5" height="15" fill="rgb(232,3,39)"/><text x="536.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.37%)</title><rect x="533" y="1092" width="5" height="15" fill="rgb(208,60,4)"/><text x="536.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.37%)</title><rect x="533" y="1108" width="5" height="15" fill="rgb(218,152,15)"/><text x="536.00" y="1118.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.37%)</title><rect x="533" y="1124" width="5" height="15" fill="rgb(212,160,34)"/><text x="536.00" y="1134.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (6 samples, 2.24%)</title><rect x="516" y="148" width="26" height="15" fill="rgb(247,165,52)"/><text x="519.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="516" y="164" width="26" height="15" fill="rgb(229,16,40)"/><text x="519.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.24%)</title><rect x="516" y="180" width="26" height="15" fill="rgb(225,40,32)"/><text x="519.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="516" y="196" width="26" height="15" fill="rgb(219,191,44)"/><text x="519.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="516" y="212" width="26" height="15" fill="rgb(252,48,46)"/><text x="519.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="516" y="228" width="26" height="15" fill="rgb(250,223,7)"/><text x="519.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="516" y="244" width="26" height="15" fill="rgb(236,54,47)"/><text x="519.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="516" y="260" width="26" height="15" fill="rgb(221,1,4)"/><text x="519.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="516" y="276" width="26" height="15" fill="rgb(229,151,4)"/><text x="519.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.24%)</title><rect x="516" y="292" width="26" height="15" fill="rgb(217,132,3)"/><text x="519.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="516" y="308" width="26" height="15" fill="rgb(247,49,36)"/><text x="519.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="516" y="324" width="26" height="15" fill="rgb(249,37,39)"/><text x="519.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="516" y="340" width="26" height="15" fill="rgb(234,150,46)"/><text x="519.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="516" y="356" width="26" height="15" fill="rgb(220,172,50)"/><text x="519.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="516" y="372" width="26" height="15" fill="rgb(250,94,13)"/><text x="519.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.24%)</title><rect x="516" y="388" width="26" height="15" fill="rgb(218,174,4)"/><text x="519.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="516" y="404" width="26" height="15" fill="rgb(220,36,54)"/><text x="519.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="516" y="420" width="26" height="15" fill="rgb(213,29,36)"/><text x="519.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="516" y="436" width="26" height="15" fill="rgb(213,1,40)"/><text x="519.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="516" y="452" width="26" height="15" fill="rgb(241,100,50)"/><text x="519.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="516" y="468" width="26" height="15" fill="rgb(206,173,47)"/><text x="519.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.24%)</title><rect x="516" y="484" width="26" height="15" fill="rgb(254,212,40)"/><text x="519.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="516" y="500" width="26" height="15" fill="rgb(226,40,11)"/><text x="519.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="516" y="516" width="26" height="15" fill="rgb(222,173,31)"/><text x="519.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="516" y="532" width="26" height="15" fill="rgb(252,173,32)"/><text x="519.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="516" y="548" width="26" height="15" fill="rgb(246,227,34)"/><text x="519.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="516" y="564" width="26" height="15" fill="rgb(206,64,27)"/><text x="519.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.37%)</title><rect x="538" y="580" width="4" height="15" fill="rgb(211,7,44)"/><text x="541.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="538" y="596" width="4" height="15" fill="rgb(230,18,5)"/><text x="541.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="538" y="612" width="4" height="15" fill="rgb(236,167,48)"/><text x="541.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="538" y="628" width="4" height="15" fill="rgb(253,148,24)"/><text x="541.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.37%)</title><rect x="538" y="644" width="4" height="15" fill="rgb(254,108,10)"/><text x="541.00" y="654.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.37%)</title><rect x="538" y="660" width="4" height="15" fill="rgb(215,217,42)"/><text x="541.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.37%)</title><rect x="538" y="676" width="4" height="15" fill="rgb(232,122,34)"/><text x="541.00" y="686.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.37%)</title><rect x="538" y="692" width="4" height="15" fill="rgb(233,80,54)"/><text x="541.00" y="702.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.37%)</title><rect x="538" y="708" width="4" height="15" fill="rgb(241,30,21)"/><text x="541.00" y="718.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1352) (1 samples, 0.37%)</title><rect x="538" y="724" width="4" height="15" fill="rgb(227,210,32)"/><text x="541.00" y="734.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4189) (1 samples, 0.37%)</title><rect x="542" y="1028" width="5" height="15" fill="rgb(205,44,39)"/><text x="545.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.37%)</title><rect x="542" y="1044" width="5" height="15" fill="rgb(249,122,0)"/><text x="545.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.37%)</title><rect x="542" y="1060" width="5" height="15" fill="rgb(254,48,10)"/><text x="545.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.37%)</title><rect x="542" y="1076" width="5" height="15" fill="rgb(206,79,0)"/><text x="545.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.37%)</title><rect x="542" y="1092" width="5" height="15" fill="rgb(212,170,47)"/><text x="545.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (2 samples, 0.75%)</title><rect x="542" y="148" width="9" height="15" fill="rgb(232,122,28)"/><text x="545.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="164" width="9" height="15" fill="rgb(254,129,54)"/><text x="545.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.75%)</title><rect x="542" y="180" width="9" height="15" fill="rgb(248,95,53)"/><text x="545.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="196" width="9" height="15" fill="rgb(241,219,34)"/><text x="545.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="212" width="9" height="15" fill="rgb(217,222,48)"/><text x="545.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="228" width="9" height="15" fill="rgb(240,150,23)"/><text x="545.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="244" width="9" height="15" fill="rgb(246,122,48)"/><text x="545.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="260" width="9" height="15" fill="rgb(235,150,50)"/><text x="545.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="276" width="9" height="15" fill="rgb(247,8,11)"/><text x="545.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.75%)</title><rect x="542" y="292" width="9" height="15" fill="rgb(224,172,36)"/><text x="545.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="308" width="9" height="15" fill="rgb(248,91,13)"/><text x="545.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="324" width="9" height="15" fill="rgb(206,130,4)"/><text x="545.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="340" width="9" height="15" fill="rgb(240,131,4)"/><text x="545.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="356" width="9" height="15" fill="rgb(230,61,18)"/><text x="545.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="372" width="9" height="15" fill="rgb(214,129,6)"/><text x="545.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.75%)</title><rect x="542" y="388" width="9" height="15" fill="rgb(205,16,10)"/><text x="545.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="404" width="9" height="15" fill="rgb(215,15,32)"/><text x="545.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="420" width="9" height="15" fill="rgb(207,118,37)"/><text x="545.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="436" width="9" height="15" fill="rgb(252,56,43)"/><text x="545.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="452" width="9" height="15" fill="rgb(213,125,23)"/><text x="545.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="468" width="9" height="15" fill="rgb(209,167,5)"/><text x="545.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.75%)</title><rect x="542" y="484" width="9" height="15" fill="rgb(232,189,50)"/><text x="545.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="500" width="9" height="15" fill="rgb(220,30,38)"/><text x="545.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="516" width="9" height="15" fill="rgb(250,183,34)"/><text x="545.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="532" width="9" height="15" fill="rgb(235,130,42)"/><text x="545.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="548" width="9" height="15" fill="rgb(250,60,42)"/><text x="545.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="564" width="9" height="15" fill="rgb(238,82,36)"/><text x="545.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.75%)</title><rect x="542" y="580" width="9" height="15" fill="rgb(244,19,52)"/><text x="545.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="596" width="9" height="15" fill="rgb(206,30,17)"/><text x="545.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="612" width="9" height="15" fill="rgb(244,186,0)"/><text x="545.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="628" width="9" height="15" fill="rgb(236,151,48)"/><text x="545.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="644" width="9" height="15" fill="rgb(229,66,13)"/><text x="545.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="660" width="9" height="15" fill="rgb(245,83,19)"/><text x="545.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.75%)</title><rect x="542" y="676" width="9" height="15" fill="rgb(236,155,26)"/><text x="545.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="692" width="9" height="15" fill="rgb(235,42,28)"/><text x="545.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="708" width="9" height="15" fill="rgb(234,193,5)"/><text x="545.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="724" width="9" height="15" fill="rgb(240,91,52)"/><text x="545.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="740" width="9" height="15" fill="rgb(219,228,16)"/><text x="545.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="756" width="9" height="15" fill="rgb(212,16,49)"/><text x="545.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.75%)</title><rect x="542" y="772" width="9" height="15" fill="rgb(215,64,53)"/><text x="545.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.75%)</title><rect x="542" y="788" width="9" height="15" fill="rgb(243,157,36)"/><text x="545.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="804" width="9" height="15" fill="rgb(217,85,13)"/><text x="545.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="820" width="9" height="15" fill="rgb(252,208,37)"/><text x="545.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="836" width="9" height="15" fill="rgb(235,128,13)"/><text x="545.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="852" width="9" height="15" fill="rgb(234,122,50)"/><text x="545.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="868" width="9" height="15" fill="rgb(235,218,41)"/><text x="545.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="884" width="9" height="15" fill="rgb(236,146,12)"/><text x="545.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.75%)</title><rect x="542" y="900" width="9" height="15" fill="rgb(248,62,8)"/><text x="545.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.75%)</title><rect x="542" y="916" width="9" height="15" fill="rgb(216,17,13)"/><text x="545.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="932" width="9" height="15" fill="rgb(212,170,46)"/><text x="545.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="542" y="948" width="9" height="15" fill="rgb(205,182,54)"/><text x="545.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="542" y="964" width="9" height="15" fill="rgb(235,119,43)"/><text x="545.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="542" y="980" width="9" height="15" fill="rgb(229,121,48)"/><text x="545.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="542" y="996" width="9" height="15" fill="rgb(219,65,20)"/><text x="545.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="542" y="1012" width="9" height="15" fill="rgb(212,195,25)"/><text x="545.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:872) (1 samples, 0.37%)</title><rect x="547" y="1028" width="4" height="15" fill="rgb(218,191,16)"/><text x="550.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.37%)</title><rect x="547" y="1044" width="4" height="15" fill="rgb(225,212,4)"/><text x="550.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.37%)</title><rect x="547" y="1060" width="4" height="15" fill="rgb(240,173,19)"/><text x="550.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.37%)</title><rect x="547" y="1076" width="4" height="15" fill="rgb(243,207,54)"/><text x="550.00" y="1086.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.37%)</title><rect x="547" y="1092" width="4" height="15" fill="rgb(224,163,39)"/><text x="550.00" y="1102.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.37%)</title><rect x="551" y="772" width="4" height="15" fill="rgb(222,224,29)"/><text x="554.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="788" width="4" height="15" fill="rgb(233,95,14)"/><text x="554.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="804" width="4" height="15" fill="rgb(208,135,53)"/><text x="554.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="820" width="4" height="15" fill="rgb(239,29,4)"/><text x="554.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="836" width="4" height="15" fill="rgb(213,29,12)"/><text x="554.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="852" width="4" height="15" fill="rgb(214,228,12)"/><text x="554.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.37%)</title><rect x="551" y="868" width="4" height="15" fill="rgb(238,8,24)"/><text x="554.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="884" width="4" height="15" fill="rgb(235,31,34)"/><text x="554.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="900" width="4" height="15" fill="rgb(212,80,49)"/><text x="554.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="916" width="4" height="15" fill="rgb(221,140,39)"/><text x="554.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="932" width="4" height="15" fill="rgb(225,169,10)"/><text x="554.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="948" width="4" height="15" fill="rgb(229,135,45)"/><text x="554.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.37%)</title><rect x="551" y="964" width="4" height="15" fill="rgb(249,83,41)"/><text x="554.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="980" width="4" height="15" fill="rgb(219,21,18)"/><text x="554.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="996" width="4" height="15" fill="rgb(206,117,21)"/><text x="554.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="1012" width="4" height="15" fill="rgb(246,168,18)"/><text x="554.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="1028" width="4" height="15" fill="rgb(252,146,24)"/><text x="554.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="1044" width="4" height="15" fill="rgb(250,202,16)"/><text x="554.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.37%)</title><rect x="551" y="1060" width="4" height="15" fill="rgb(237,11,7)"/><text x="554.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="1076" width="4" height="15" fill="rgb(211,23,36)"/><text x="554.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="551" y="1092" width="4" height="15" fill="rgb(206,18,49)"/><text x="554.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="1108" width="4" height="15" fill="rgb(225,86,32)"/><text x="554.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="1124" width="4" height="15" fill="rgb(224,114,29)"/><text x="554.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="1140" width="4" height="15" fill="rgb(219,14,22)"/><text x="554.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="1156" width="4" height="15" fill="rgb(240,142,48)"/><text x="554.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="1172" width="4" height="15" fill="rgb(236,55,0)"/><text x="554.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="1188" width="4" height="15" fill="rgb(235,96,52)"/><text x="554.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.37%)</title><rect x="551" y="1204" width="4" height="15" fill="rgb(241,172,13)"/><text x="554.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="1220" width="4" height="15" fill="rgb(233,69,27)"/><text x="554.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="1236" width="4" height="15" fill="rgb(224,36,37)"/><text x="554.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="1252" width="4" height="15" fill="rgb(238,52,1)"/><text x="554.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="1268" width="4" height="15" fill="rgb(222,16,36)"/><text x="554.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="1284" width="4" height="15" fill="rgb(208,49,3)"/><text x="554.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.37%)</title><rect x="551" y="1300" width="4" height="15" fill="rgb(249,7,3)"/><text x="554.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="551" y="1316" width="4" height="15" fill="rgb(205,100,12)"/><text x="554.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="551" y="1332" width="4" height="15" fill="rgb(248,156,16)"/><text x="554.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="551" y="1348" width="4" height="15" fill="rgb(232,122,24)"/><text x="554.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="551" y="1364" width="4" height="15" fill="rgb(213,184,45)"/><text x="554.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="551" y="1380" width="4" height="15" fill="rgb(213,157,52)"/><text x="554.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.37%)</title><rect x="551" y="1396" width="4" height="15" fill="rgb(243,151,4)"/><text x="554.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.37%)</title><rect x="551" y="1412" width="4" height="15" fill="rgb(206,118,10)"/><text x="554.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="551" y="1428" width="4" height="15" fill="rgb(215,14,10)"/><text x="554.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.37%)</title><rect x="551" y="1444" width="4" height="15" fill="rgb(232,129,39)"/><text x="554.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.37%)</title><rect x="551" y="1460" width="4" height="15" fill="rgb(232,93,12)"/><text x="554.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="551" y="1476" width="4" height="15" fill="rgb(230,57,17)"/><text x="554.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.37%)</title><rect x="551" y="1492" width="4" height="15" fill="rgb(210,101,45)"/><text x="554.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="551" y="1508" width="4" height="15" fill="rgb(219,147,54)"/><text x="554.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.37%)</title><rect x="551" y="1524" width="4" height="15" fill="rgb(249,48,38)"/><text x="554.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="551" y="1540" width="4" height="15" fill="rgb(231,136,21)"/><text x="554.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.37%)</title><rect x="551" y="1556" width="4" height="15" fill="rgb(252,213,47)"/><text x="554.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="551" y="1572" width="4" height="15" fill="rgb(246,136,20)"/><text x="554.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:550) (1 samples, 0.37%)</title><rect x="551" y="1588" width="4" height="15" fill="rgb(218,218,52)"/><text x="554.00" y="1598.50"></text></g><g><title>match (sre_parse.py:251) (1 samples, 0.37%)</title><rect x="551" y="1604" width="4" height="15" fill="rgb(232,74,12)"/><text x="554.00" y="1614.50"></text></g><g><title>__next (sre_parse.py:240) (1 samples, 0.37%)</title><rect x="551" y="1620" width="4" height="15" fill="rgb(232,103,6)"/><text x="554.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.75%)</title><rect x="551" y="244" width="9" height="15" fill="rgb(228,160,6)"/><text x="554.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="260" width="9" height="15" fill="rgb(235,213,22)"/><text x="554.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="551" y="276" width="9" height="15" fill="rgb(242,48,21)"/><text x="554.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="551" y="292" width="9" height="15" fill="rgb(254,194,44)"/><text x="554.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="551" y="308" width="9" height="15" fill="rgb(212,50,1)"/><text x="554.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="324" width="9" height="15" fill="rgb(254,86,43)"/><text x="554.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.75%)</title><rect x="551" y="340" width="9" height="15" fill="rgb(220,184,39)"/><text x="554.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="356" width="9" height="15" fill="rgb(233,84,32)"/><text x="554.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.75%)</title><rect x="551" y="372" width="9" height="15" fill="rgb(242,33,28)"/><text x="554.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="388" width="9" height="15" fill="rgb(210,153,10)"/><text x="554.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="404" width="9" height="15" fill="rgb(218,124,15)"/><text x="554.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="551" y="420" width="9" height="15" fill="rgb(235,150,49)"/><text x="554.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="551" y="436" width="9" height="15" fill="rgb(206,143,52)"/><text x="554.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="551" y="452" width="9" height="15" fill="rgb(237,72,39)"/><text x="554.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="468" width="9" height="15" fill="rgb(220,101,31)"/><text x="554.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.75%)</title><rect x="551" y="484" width="9" height="15" fill="rgb(235,179,51)"/><text x="554.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="500" width="9" height="15" fill="rgb(251,204,26)"/><text x="554.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="551" y="516" width="9" height="15" fill="rgb(228,110,6)"/><text x="554.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="551" y="532" width="9" height="15" fill="rgb(236,22,35)"/><text x="554.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="551" y="548" width="9" height="15" fill="rgb(225,20,54)"/><text x="554.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="564" width="9" height="15" fill="rgb(216,80,47)"/><text x="554.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.75%)</title><rect x="551" y="580" width="9" height="15" fill="rgb(243,102,46)"/><text x="554.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="596" width="9" height="15" fill="rgb(237,205,12)"/><text x="554.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="551" y="612" width="9" height="15" fill="rgb(237,180,45)"/><text x="554.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="551" y="628" width="9" height="15" fill="rgb(229,130,29)"/><text x="554.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="551" y="644" width="9" height="15" fill="rgb(236,27,21)"/><text x="554.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="660" width="9" height="15" fill="rgb(228,192,42)"/><text x="554.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.75%)</title><rect x="551" y="676" width="9" height="15" fill="rgb(239,37,30)"/><text x="554.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="551" y="692" width="9" height="15" fill="rgb(238,218,44)"/><text x="554.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="551" y="708" width="9" height="15" fill="rgb(232,138,13)"/><text x="554.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="551" y="724" width="9" height="15" fill="rgb(230,13,43)"/><text x="554.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="551" y="740" width="9" height="15" fill="rgb(235,23,20)"/><text x="554.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="551" y="756" width="9" height="15" fill="rgb(239,22,11)"/><text x="554.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.37%)</title><rect x="555" y="772" width="5" height="15" fill="rgb(226,39,37)"/><text x="558.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="555" y="788" width="5" height="15" fill="rgb(248,0,23)"/><text x="558.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="555" y="804" width="5" height="15" fill="rgb(219,128,9)"/><text x="558.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="555" y="820" width="5" height="15" fill="rgb(219,92,26)"/><text x="558.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="555" y="836" width="5" height="15" fill="rgb(206,172,23)"/><text x="558.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="555" y="852" width="5" height="15" fill="rgb(217,38,32)"/><text x="558.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:19) (1 samples, 0.37%)</title><rect x="555" y="868" width="5" height="15" fill="rgb(212,39,44)"/><text x="558.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="555" y="884" width="5" height="15" fill="rgb(205,163,4)"/><text x="558.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.37%)</title><rect x="555" y="900" width="5" height="15" fill="rgb(205,99,7)"/><text x="558.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.37%)</title><rect x="555" y="916" width="5" height="15" fill="rgb(205,124,24)"/><text x="558.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.37%)</title><rect x="555" y="932" width="5" height="15" fill="rgb(230,196,3)"/><text x="558.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1257) (1 samples, 0.37%)</title><rect x="555" y="948" width="5" height="15" fill="rgb(234,85,22)"/><text x="558.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.37%)</title><rect x="560" y="1492" width="4" height="15" fill="rgb(227,208,40)"/><text x="563.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="560" y="1508" width="4" height="15" fill="rgb(208,52,50)"/><text x="563.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="560" y="1524" width="4" height="15" fill="rgb(215,169,53)"/><text x="563.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="560" y="1540" width="4" height="15" fill="rgb(241,165,24)"/><text x="563.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="560" y="1556" width="4" height="15" fill="rgb(222,154,34)"/><text x="563.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="560" y="1572" width="4" height="15" fill="rgb(253,111,20)"/><text x="563.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="560" y="1588" width="4" height="15" fill="rgb(244,110,19)"/><text x="563.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="560" y="1604" width="4" height="15" fill="rgb(233,197,48)"/><text x="563.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.37%)</title><rect x="560" y="1620" width="4" height="15" fill="rgb(233,108,16)"/><text x="563.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="560" y="1636" width="4" height="15" fill="rgb(237,112,17)"/><text x="563.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="560" y="1652" width="4" height="15" fill="rgb(233,141,18)"/><text x="563.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="560" y="1668" width="4" height="15" fill="rgb(239,72,19)"/><text x="563.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="560" y="1684" width="4" height="15" fill="rgb(211,65,23)"/><text x="563.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="560" y="1700" width="4" height="15" fill="rgb(213,48,23)"/><text x="563.00" y="1710.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="560" y="1716" width="4" height="15" fill="rgb(249,139,13)"/><text x="563.00" y="1726.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.75%)</title><rect x="560" y="820" width="9" height="15" fill="rgb(207,151,21)"/><text x="563.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="836" width="9" height="15" fill="rgb(218,42,32)"/><text x="563.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="852" width="9" height="15" fill="rgb(243,26,42)"/><text x="563.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="868" width="9" height="15" fill="rgb(217,139,39)"/><text x="563.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="884" width="9" height="15" fill="rgb(252,22,33)"/><text x="563.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="900" width="9" height="15" fill="rgb(234,158,35)"/><text x="563.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.75%)</title><rect x="560" y="916" width="9" height="15" fill="rgb(250,79,22)"/><text x="563.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="932" width="9" height="15" fill="rgb(219,189,3)"/><text x="563.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="948" width="9" height="15" fill="rgb(223,8,29)"/><text x="563.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="964" width="9" height="15" fill="rgb(242,133,21)"/><text x="563.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="980" width="9" height="15" fill="rgb(226,139,37)"/><text x="563.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="996" width="9" height="15" fill="rgb(214,169,53)"/><text x="563.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.75%)</title><rect x="560" y="1012" width="9" height="15" fill="rgb(224,147,39)"/><text x="563.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="1028" width="9" height="15" fill="rgb(246,91,25)"/><text x="563.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="1044" width="9" height="15" fill="rgb(237,160,9)"/><text x="563.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="1060" width="9" height="15" fill="rgb(208,113,2)"/><text x="563.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="1076" width="9" height="15" fill="rgb(254,174,25)"/><text x="563.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="1092" width="9" height="15" fill="rgb(217,160,9)"/><text x="563.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.75%)</title><rect x="560" y="1108" width="9" height="15" fill="rgb(238,207,41)"/><text x="563.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="1124" width="9" height="15" fill="rgb(231,181,46)"/><text x="563.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="1140" width="9" height="15" fill="rgb(215,194,42)"/><text x="563.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="1156" width="9" height="15" fill="rgb(231,219,1)"/><text x="563.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="1172" width="9" height="15" fill="rgb(209,209,5)"/><text x="563.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="1188" width="9" height="15" fill="rgb(234,209,49)"/><text x="563.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.75%)</title><rect x="560" y="1204" width="9" height="15" fill="rgb(211,214,8)"/><text x="563.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="1220" width="9" height="15" fill="rgb(206,188,47)"/><text x="563.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="1236" width="9" height="15" fill="rgb(218,163,26)"/><text x="563.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="1252" width="9" height="15" fill="rgb(237,69,16)"/><text x="563.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="1268" width="9" height="15" fill="rgb(237,159,29)"/><text x="563.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="1284" width="9" height="15" fill="rgb(213,101,38)"/><text x="563.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.75%)</title><rect x="560" y="1300" width="9" height="15" fill="rgb(229,195,32)"/><text x="563.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="1316" width="9" height="15" fill="rgb(226,33,4)"/><text x="563.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="1332" width="9" height="15" fill="rgb(207,103,27)"/><text x="563.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="1348" width="9" height="15" fill="rgb(218,223,45)"/><text x="563.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="1364" width="9" height="15" fill="rgb(209,41,39)"/><text x="563.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="1380" width="9" height="15" fill="rgb(254,10,42)"/><text x="563.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.75%)</title><rect x="560" y="1396" width="9" height="15" fill="rgb(208,184,14)"/><text x="563.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="560" y="1412" width="9" height="15" fill="rgb(244,35,14)"/><text x="563.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="560" y="1428" width="9" height="15" fill="rgb(242,100,36)"/><text x="563.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="560" y="1444" width="9" height="15" fill="rgb(207,26,13)"/><text x="563.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="560" y="1460" width="9" height="15" fill="rgb(224,23,32)"/><text x="563.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="560" y="1476" width="9" height="15" fill="rgb(231,1,32)"/><text x="563.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.37%)</title><rect x="564" y="1492" width="5" height="15" fill="rgb(246,1,16)"/><text x="567.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="564" y="1508" width="5" height="15" fill="rgb(216,200,19)"/><text x="567.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="564" y="1524" width="5" height="15" fill="rgb(219,86,29)"/><text x="567.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="564" y="1540" width="5" height="15" fill="rgb(212,4,28)"/><text x="567.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="564" y="1556" width="5" height="15" fill="rgb(219,133,15)"/><text x="567.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="564" y="1572" width="5" height="15" fill="rgb(221,127,23)"/><text x="567.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.37%)</title><rect x="564" y="1588" width="5" height="15" fill="rgb(244,201,48)"/><text x="567.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="564" y="1604" width="5" height="15" fill="rgb(231,227,11)"/><text x="567.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="564" y="1620" width="5" height="15" fill="rgb(216,166,53)"/><text x="567.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="564" y="1636" width="5" height="15" fill="rgb(234,66,25)"/><text x="567.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="564" y="1652" width="5" height="15" fill="rgb(210,173,1)"/><text x="567.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="564" y="1668" width="5" height="15" fill="rgb(251,24,45)"/><text x="567.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.37%)</title><rect x="564" y="1684" width="5" height="15" fill="rgb(244,121,4)"/><text x="567.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="564" y="1700" width="5" height="15" fill="rgb(232,71,34)"/><text x="567.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="564" y="1716" width="5" height="15" fill="rgb(249,108,20)"/><text x="567.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="564" y="1732" width="5" height="15" fill="rgb(236,165,16)"/><text x="567.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="564" y="1748" width="5" height="15" fill="rgb(227,68,50)"/><text x="567.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="564" y="1764" width="5" height="15" fill="rgb(212,20,50)"/><text x="567.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.37%)</title><rect x="564" y="1780" width="5" height="15" fill="rgb(222,197,0)"/><text x="567.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.37%)</title><rect x="564" y="1796" width="5" height="15" fill="rgb(214,0,35)"/><text x="567.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:758) (1 samples, 0.37%)</title><rect x="564" y="1812" width="5" height="15" fill="rgb(229,97,1)"/><text x="567.00" y="1822.50"></text></g><g><title>__init__ (matplotlib/colors.py:704) (1 samples, 0.37%)</title><rect x="564" y="1828" width="5" height="15" fill="rgb(253,196,35)"/><text x="567.00" y="1838.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.12%)</title><rect x="560" y="436" width="13" height="15" fill="rgb(241,48,53)"/><text x="563.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="560" y="452" width="13" height="15" fill="rgb(225,5,8)"/><text x="563.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="560" y="468" width="13" height="15" fill="rgb(239,148,48)"/><text x="563.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="560" y="484" width="13" height="15" fill="rgb(236,170,10)"/><text x="563.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="560" y="500" width="13" height="15" fill="rgb(224,177,22)"/><text x="563.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="560" y="516" width="13" height="15" fill="rgb(212,166,47)"/><text x="563.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.12%)</title><rect x="560" y="532" width="13" height="15" fill="rgb(212,4,4)"/><text x="563.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="560" y="548" width="13" height="15" fill="rgb(248,14,50)"/><text x="563.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="560" y="564" width="13" height="15" fill="rgb(206,106,1)"/><text x="563.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="560" y="580" width="13" height="15" fill="rgb(243,144,53)"/><text x="563.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="560" y="596" width="13" height="15" fill="rgb(224,64,19)"/><text x="563.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="560" y="612" width="13" height="15" fill="rgb(223,188,38)"/><text x="563.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.12%)</title><rect x="560" y="628" width="13" height="15" fill="rgb(243,106,51)"/><text x="563.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="560" y="644" width="13" height="15" fill="rgb(209,143,19)"/><text x="563.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="560" y="660" width="13" height="15" fill="rgb(246,30,48)"/><text x="563.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="560" y="676" width="13" height="15" fill="rgb(232,118,26)"/><text x="563.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="560" y="692" width="13" height="15" fill="rgb(205,9,10)"/><text x="563.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="560" y="708" width="13" height="15" fill="rgb(246,2,17)"/><text x="563.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.12%)</title><rect x="560" y="724" width="13" height="15" fill="rgb(208,25,33)"/><text x="563.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="560" y="740" width="13" height="15" fill="rgb(223,100,53)"/><text x="563.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="560" y="756" width="13" height="15" fill="rgb(225,72,26)"/><text x="563.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="560" y="772" width="13" height="15" fill="rgb(209,148,50)"/><text x="563.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="560" y="788" width="13" height="15" fill="rgb(226,110,29)"/><text x="563.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="560" y="804" width="13" height="15" fill="rgb(250,149,19)"/><text x="563.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:7) (1 samples, 0.37%)</title><rect x="569" y="820" width="4" height="15" fill="rgb(211,24,43)"/><text x="572.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="569" y="836" width="4" height="15" fill="rgb(222,126,30)"/><text x="572.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="569" y="852" width="4" height="15" fill="rgb(251,152,11)"/><text x="572.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="569" y="868" width="4" height="15" fill="rgb(220,182,35)"/><text x="572.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="569" y="884" width="4" height="15" fill="rgb(210,108,28)"/><text x="572.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="569" y="900" width="4" height="15" fill="rgb(244,112,33)"/><text x="572.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="569" y="916" width="4" height="15" fill="rgb(225,7,44)"/><text x="572.00" y="926.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:20) (1 samples, 0.37%)</title><rect x="573" y="1204" width="4" height="15" fill="rgb(219,168,11)"/><text x="576.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="573" y="1220" width="4" height="15" fill="rgb(208,79,1)"/><text x="576.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="573" y="1236" width="4" height="15" fill="rgb(243,40,43)"/><text x="576.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="573" y="1252" width="4" height="15" fill="rgb(210,92,30)"/><text x="576.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="573" y="1268" width="4" height="15" fill="rgb(245,30,11)"/><text x="576.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="573" y="1284" width="4" height="15" fill="rgb(227,195,24)"/><text x="576.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/__init__.py:13) (1 samples, 0.37%)</title><rect x="573" y="1300" width="4" height="15" fill="rgb(206,182,21)"/><text x="576.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="573" y="1316" width="4" height="15" fill="rgb(241,205,44)"/><text x="576.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="573" y="1332" width="4" height="15" fill="rgb(226,106,16)"/><text x="576.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="573" y="1348" width="4" height="15" fill="rgb(246,205,21)"/><text x="576.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="573" y="1364" width="4" height="15" fill="rgb(230,62,17)"/><text x="576.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="573" y="1380" width="4" height="15" fill="rgb(227,93,52)"/><text x="576.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/_gpr.py:16) (1 samples, 0.37%)</title><rect x="573" y="1396" width="4" height="15" fill="rgb(228,116,10)"/><text x="576.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="573" y="1412" width="4" height="15" fill="rgb(230,58,6)"/><text x="576.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="573" y="1428" width="4" height="15" fill="rgb(237,219,3)"/><text x="576.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="573" y="1444" width="4" height="15" fill="rgb(246,30,37)"/><text x="576.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="573" y="1460" width="4" height="15" fill="rgb(227,180,52)"/><text x="576.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="573" y="1476" width="4" height="15" fill="rgb(222,108,47)"/><text x="576.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="573" y="1492" width="4" height="15" fill="rgb(251,129,53)"/><text x="576.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.75%)</title><rect x="573" y="1108" width="9" height="15" fill="rgb(229,222,49)"/><text x="576.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="573" y="1124" width="9" height="15" fill="rgb(223,30,40)"/><text x="576.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="573" y="1140" width="9" height="15" fill="rgb(245,205,40)"/><text x="576.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="573" y="1156" width="9" height="15" fill="rgb(251,224,34)"/><text x="576.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="573" y="1172" width="9" height="15" fill="rgb(209,179,54)"/><text x="576.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="573" y="1188" width="9" height="15" fill="rgb(217,30,44)"/><text x="576.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.37%)</title><rect x="577" y="1204" width="5" height="15" fill="rgb(249,112,1)"/><text x="580.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="577" y="1220" width="5" height="15" fill="rgb(236,213,30)"/><text x="580.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="577" y="1236" width="5" height="15" fill="rgb(205,152,40)"/><text x="580.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="577" y="1252" width="5" height="15" fill="rgb(245,66,53)"/><text x="580.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="577" y="1268" width="5" height="15" fill="rgb(219,105,11)"/><text x="580.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="577" y="1284" width="5" height="15" fill="rgb(241,179,3)"/><text x="580.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:120) (1 samples, 0.37%)</title><rect x="577" y="1300" width="5" height="15" fill="rgb(218,53,25)"/><text x="580.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="577" y="1316" width="5" height="15" fill="rgb(214,164,17)"/><text x="580.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="577" y="1332" width="5" height="15" fill="rgb(229,78,54)"/><text x="580.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="577" y="1348" width="5" height="15" fill="rgb(216,49,54)"/><text x="580.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="577" y="1364" width="5" height="15" fill="rgb(250,197,7)"/><text x="580.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="577" y="1380" width="5" height="15" fill="rgb(234,112,28)"/><text x="580.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py:3) (1 samples, 0.37%)</title><rect x="577" y="1396" width="5" height="15" fill="rgb(229,108,34)"/><text x="580.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="577" y="1412" width="5" height="15" fill="rgb(213,71,54)"/><text x="580.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="577" y="1428" width="5" height="15" fill="rgb(239,213,29)"/><text x="580.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="577" y="1444" width="5" height="15" fill="rgb(227,171,45)"/><text x="580.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="577" y="1460" width="5" height="15" fill="rgb(251,57,43)"/><text x="580.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="577" y="1476" width="5" height="15" fill="rgb(207,125,5)"/><text x="580.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="577" y="1492" width="5" height="15" fill="rgb(206,130,53)"/><text x="580.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:4) (16 samples, 5.97%)</title><rect x="516" y="52" width="70" height="15" fill="rgb(239,23,42)"/><text x="519.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 5.97%)</title><rect x="516" y="68" width="70" height="15" fill="rgb(222,157,46)"/><text x="519.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 5.97%)</title><rect x="516" y="84" width="70" height="15" fill="rgb(233,16,12)"/><text x="519.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 5.97%)</title><rect x="516" y="100" width="70" height="15" fill="rgb(240,220,38)"/><text x="519.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 5.97%)</title><rect x="516" y="116" width="70" height="15" fill="rgb(205,216,7)"/><text x="519.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 5.97%)</title><rect x="516" y="132" width="70" height="15" fill="rgb(250,21,45)"/><text x="519.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (8 samples, 2.99%)</title><rect x="551" y="148" width="35" height="15" fill="rgb(235,87,15)"/><text x="554.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.99%)</title><rect x="551" y="164" width="35" height="15" fill="rgb(205,77,29)"/><text x="554.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.99%)</title><rect x="551" y="180" width="35" height="15" fill="rgb(237,96,21)"/><text x="554.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.99%)</title><rect x="551" y="196" width="35" height="15" fill="rgb(236,5,5)"/><text x="554.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.99%)</title><rect x="551" y="212" width="35" height="15" fill="rgb(206,175,52)"/><text x="554.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.99%)</title><rect x="551" y="228" width="35" height="15" fill="rgb(205,209,7)"/><text x="554.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 2.24%)</title><rect x="560" y="244" width="26" height="15" fill="rgb(252,187,42)"/><text x="563.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="560" y="260" width="26" height="15" fill="rgb(239,133,2)"/><text x="563.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="560" y="276" width="26" height="15" fill="rgb(231,132,25)"/><text x="563.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="560" y="292" width="26" height="15" fill="rgb(225,154,10)"/><text x="563.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="560" y="308" width="26" height="15" fill="rgb(234,38,37)"/><text x="563.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="560" y="324" width="26" height="15" fill="rgb(249,106,47)"/><text x="563.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 2.24%)</title><rect x="560" y="340" width="26" height="15" fill="rgb(250,101,17)"/><text x="563.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="560" y="356" width="26" height="15" fill="rgb(216,224,3)"/><text x="563.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="560" y="372" width="26" height="15" fill="rgb(221,165,36)"/><text x="563.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="560" y="388" width="26" height="15" fill="rgb(234,48,13)"/><text x="563.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="560" y="404" width="26" height="15" fill="rgb(227,191,44)"/><text x="563.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="560" y="420" width="26" height="15" fill="rgb(220,192,8)"/><text x="563.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.12%)</title><rect x="573" y="436" width="13" height="15" fill="rgb(220,157,44)"/><text x="576.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="452" width="13" height="15" fill="rgb(243,215,0)"/><text x="576.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.12%)</title><rect x="573" y="468" width="13" height="15" fill="rgb(227,122,47)"/><text x="576.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="484" width="13" height="15" fill="rgb(248,153,18)"/><text x="576.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="500" width="13" height="15" fill="rgb(232,79,54)"/><text x="576.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="516" width="13" height="15" fill="rgb(237,152,38)"/><text x="576.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="532" width="13" height="15" fill="rgb(218,89,16)"/><text x="576.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="548" width="13" height="15" fill="rgb(219,45,20)"/><text x="576.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="564" width="13" height="15" fill="rgb(217,34,39)"/><text x="576.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.12%)</title><rect x="573" y="580" width="13" height="15" fill="rgb(246,176,51)"/><text x="576.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="596" width="13" height="15" fill="rgb(208,78,33)"/><text x="576.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="612" width="13" height="15" fill="rgb(208,103,4)"/><text x="576.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="628" width="13" height="15" fill="rgb(220,198,9)"/><text x="576.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="644" width="13" height="15" fill="rgb(234,4,11)"/><text x="576.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="660" width="13" height="15" fill="rgb(241,220,53)"/><text x="576.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.12%)</title><rect x="573" y="676" width="13" height="15" fill="rgb(251,133,50)"/><text x="576.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="692" width="13" height="15" fill="rgb(210,141,26)"/><text x="576.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="708" width="13" height="15" fill="rgb(217,217,53)"/><text x="576.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="724" width="13" height="15" fill="rgb(234,50,6)"/><text x="576.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="740" width="13" height="15" fill="rgb(240,41,24)"/><text x="576.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="756" width="13" height="15" fill="rgb(239,29,51)"/><text x="576.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.12%)</title><rect x="573" y="772" width="13" height="15" fill="rgb(221,11,8)"/><text x="576.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="788" width="13" height="15" fill="rgb(214,20,47)"/><text x="576.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="804" width="13" height="15" fill="rgb(231,36,39)"/><text x="576.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="820" width="13" height="15" fill="rgb(224,145,8)"/><text x="576.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="836" width="13" height="15" fill="rgb(232,77,37)"/><text x="576.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="852" width="13" height="15" fill="rgb(226,187,16)"/><text x="576.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.12%)</title><rect x="573" y="868" width="13" height="15" fill="rgb(229,214,44)"/><text x="576.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="884" width="13" height="15" fill="rgb(247,47,8)"/><text x="576.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.12%)</title><rect x="573" y="900" width="13" height="15" fill="rgb(246,29,5)"/><text x="576.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="916" width="13" height="15" fill="rgb(240,93,35)"/><text x="576.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="932" width="13" height="15" fill="rgb(234,48,31)"/><text x="576.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="948" width="13" height="15" fill="rgb(243,99,26)"/><text x="576.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="964" width="13" height="15" fill="rgb(208,98,51)"/><text x="576.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="980" width="13" height="15" fill="rgb(247,213,24)"/><text x="576.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="996" width="13" height="15" fill="rgb(213,87,53)"/><text x="576.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.12%)</title><rect x="573" y="1012" width="13" height="15" fill="rgb(225,108,29)"/><text x="576.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="573" y="1028" width="13" height="15" fill="rgb(224,224,19)"/><text x="576.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="573" y="1044" width="13" height="15" fill="rgb(230,177,4)"/><text x="576.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="573" y="1060" width="13" height="15" fill="rgb(220,141,31)"/><text x="576.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="573" y="1076" width="13" height="15" fill="rgb(205,165,15)"/><text x="576.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="573" y="1092" width="13" height="15" fill="rgb(216,127,24)"/><text x="576.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.37%)</title><rect x="582" y="1108" width="4" height="15" fill="rgb(237,1,9)"/><text x="585.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="582" y="1124" width="4" height="15" fill="rgb(225,172,24)"/><text x="585.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="582" y="1140" width="4" height="15" fill="rgb(230,174,37)"/><text x="585.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="582" y="1156" width="4" height="15" fill="rgb(237,13,46)"/><text x="585.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="582" y="1172" width="4" height="15" fill="rgb(221,129,43)"/><text x="585.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="582" y="1188" width="4" height="15" fill="rgb(245,38,8)"/><text x="585.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="582" y="1204" width="4" height="15" fill="rgb(230,72,19)"/><text x="585.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="582" y="1220" width="4" height="15" fill="rgb(216,96,37)"/><text x="585.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:35) (1 samples, 0.37%)</title><rect x="582" y="1236" width="4" height="15" fill="rgb(241,97,54)"/><text x="585.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="582" y="1252" width="4" height="15" fill="rgb(242,28,29)"/><text x="585.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="582" y="1268" width="4" height="15" fill="rgb(227,35,8)"/><text x="585.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="582" y="1284" width="4" height="15" fill="rgb(220,223,26)"/><text x="585.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.37%)</title><rect x="582" y="1300" width="4" height="15" fill="rgb(218,101,52)"/><text x="585.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.37%)</title><rect x="582" y="1316" width="4" height="15" fill="rgb(217,137,46)"/><text x="585.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.37%)</title><rect x="582" y="1332" width="4" height="15" fill="rgb(240,111,41)"/><text x="585.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.37%)</title><rect x="582" y="1348" width="4" height="15" fill="rgb(241,174,11)"/><text x="585.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.37%)</title><rect x="582" y="1364" width="4" height="15" fill="rgb(232,187,47)"/><text x="585.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.37%)</title><rect x="582" y="1380" width="4" height="15" fill="rgb(239,27,17)"/><text x="585.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="582" y="1396" width="4" height="15" fill="rgb(230,0,28)"/><text x="585.00" y="1406.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.37%)</title><rect x="582" y="1412" width="4" height="15" fill="rgb(234,217,47)"/><text x="585.00" y="1422.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.37%)</title><rect x="604" y="148" width="4" height="15" fill="rgb(227,216,18)"/><text x="607.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.37%)</title><rect x="613" y="164" width="4" height="15" fill="rgb(226,212,3)"/><text x="616.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (4 samples, 1.49%)</title><rect x="617" y="164" width="18" height="15" fill="rgb(252,63,28)"/><text x="620.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (2 samples, 0.75%)</title><rect x="635" y="164" width="9" height="15" fill="rgb(251,186,21)"/><text x="638.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 2.24%)</title><rect x="666" y="180" width="26" height="15" fill="rgb(227,152,44)"/><text x="669.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.37%)</title><rect x="688" y="196" width="4" height="15" fill="rgb(229,211,50)"/><text x="691.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.37%)</title><rect x="714" y="244" width="4" height="15" fill="rgb(239,184,22)"/><text x="717.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.37%)</title><rect x="714" y="260" width="4" height="15" fill="rgb(222,110,3)"/><text x="717.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.49%)</title><rect x="705" y="212" width="18" height="15" fill="rgb(234,131,2)"/><text x="708.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 1.12%)</title><rect x="710" y="228" width="13" height="15" fill="rgb(211,216,19)"/><text x="713.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.37%)</title><rect x="718" y="244" width="5" height="15" fill="rgb(225,176,29)"/><text x="721.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="718" y="260" width="5" height="15" fill="rgb(243,7,40)"/><text x="721.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.37%)</title><rect x="718" y="276" width="5" height="15" fill="rgb(247,193,38)"/><text x="721.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3977) (1 samples, 0.37%)</title><rect x="718" y="292" width="5" height="15" fill="rgb(250,101,0)"/><text x="721.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 2.61%)</title><rect x="701" y="196" width="31" height="15" fill="rgb(211,44,26)"/><text x="704.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.75%)</title><rect x="723" y="212" width="9" height="15" fill="rgb(221,10,8)"/><text x="726.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:108) (1 samples, 0.37%)</title><rect x="727" y="228" width="5" height="15" fill="rgb(210,220,17)"/><text x="730.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="740" y="260" width="5" height="15" fill="rgb(208,21,8)"/><text x="743.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="740" y="276" width="5" height="15" fill="rgb(213,71,40)"/><text x="743.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="740" y="292" width="5" height="15" fill="rgb(211,47,4)"/><text x="743.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.37%)</title><rect x="745" y="260" width="4" height="15" fill="rgb(212,35,28)"/><text x="748.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.37%)</title><rect x="745" y="276" width="4" height="15" fill="rgb(227,201,2)"/><text x="748.00" y="286.50"></text></g><g><title>0x7fefc9dfe734 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="745" y="292" width="4" height="15" fill="rgb(215,188,25)"/><text x="748.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.37%)</title><rect x="754" y="388" width="4" height="15" fill="rgb(211,15,26)"/><text x="757.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.12%)</title><rect x="754" y="308" width="13" height="15" fill="rgb(218,150,23)"/><text x="757.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.12%)</title><rect x="754" y="324" width="13" height="15" fill="rgb(253,91,31)"/><text x="757.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.12%)</title><rect x="754" y="340" width="13" height="15" fill="rgb(226,53,17)"/><text x="757.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.12%)</title><rect x="754" y="356" width="13" height="15" fill="rgb(244,109,29)"/><text x="757.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.12%)</title><rect x="754" y="372" width="13" height="15" fill="rgb(226,191,38)"/><text x="757.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.75%)</title><rect x="758" y="388" width="9" height="15" fill="rgb(221,108,13)"/><text x="761.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.37%)</title><rect x="767" y="324" width="4" height="15" fill="rgb(232,198,17)"/><text x="770.00" y="334.50"></text></g><g><title>0x7fefc9dfe757 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="767" y="340" width="4" height="15" fill="rgb(229,184,32)"/><text x="770.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.37%)</title><rect x="771" y="324" width="5" height="15" fill="rgb(244,0,23)"/><text x="774.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.37%)</title><rect x="771" y="340" width="5" height="15" fill="rgb(222,52,5)"/><text x="774.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.37%)</title><rect x="771" y="356" width="5" height="15" fill="rgb(221,229,14)"/><text x="774.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.37%)</title><rect x="771" y="372" width="5" height="15" fill="rgb(229,227,26)"/><text x="774.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.37%)</title><rect x="780" y="388" width="4" height="15" fill="rgb(215,163,50)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1485) (1 samples, 0.37%)</title><rect x="780" y="404" width="4" height="15" fill="rgb(235,55,41)"/><text x="783.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 1.12%)</title><rect x="776" y="356" width="13" height="15" fill="rgb(215,78,33)"/><text x="779.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 1.12%)</title><rect x="776" y="372" width="13" height="15" fill="rgb(227,82,20)"/><text x="779.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="784" y="388" width="5" height="15" fill="rgb(209,107,10)"/><text x="787.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.37%)</title><rect x="784" y="404" width="5" height="15" fill="rgb(217,224,39)"/><text x="787.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:720) (1 samples, 0.37%)</title><rect x="784" y="420" width="5" height="15" fill="rgb(211,30,41)"/><text x="787.00" y="430.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.73%)</title><rect x="749" y="260" width="44" height="15" fill="rgb(229,63,42)"/><text x="752.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.73%)</title><rect x="749" y="276" width="44" height="15" fill="rgb(252,6,48)"/><text x="752.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.73%)</title><rect x="749" y="292" width="44" height="15" fill="rgb(218,136,1)"/><text x="752.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 2.24%)</title><rect x="767" y="308" width="26" height="15" fill="rgb(243,66,26)"/><text x="770.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.49%)</title><rect x="776" y="324" width="17" height="15" fill="rgb(239,75,26)"/><text x="779.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.49%)</title><rect x="776" y="340" width="17" height="15" fill="rgb(225,146,41)"/><text x="779.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="789" y="356" width="4" height="15" fill="rgb(220,94,22)"/><text x="792.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="789" y="372" width="4" height="15" fill="rgb(209,97,18)"/><text x="792.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="789" y="388" width="4" height="15" fill="rgb(218,173,25)"/><text x="792.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.37%)</title><rect x="789" y="404" width="4" height="15" fill="rgb(235,126,23)"/><text x="792.00" y="414.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.37%)</title><rect x="789" y="420" width="4" height="15" fill="rgb(215,132,51)"/><text x="792.00" y="430.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (14 samples, 5.22%)</title><rect x="736" y="244" width="62" height="15" fill="rgb(209,173,33)"/><text x="739.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="793" y="260" width="5" height="15" fill="rgb(247,5,50)"/><text x="796.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="793" y="276" width="5" height="15" fill="rgb(219,221,29)"/><text x="796.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:85) (1 samples, 0.37%)</title><rect x="793" y="292" width="5" height="15" fill="rgb(223,57,46)"/><text x="796.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="802" y="260" width="4" height="15" fill="rgb(247,96,0)"/><text x="805.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(242,134,41)"/><text x="805.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="802" y="292" width="4" height="15" fill="rgb(212,106,26)"/><text x="805.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="806" y="276" width="5" height="15" fill="rgb(252,145,10)"/><text x="809.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.37%)</title><rect x="806" y="292" width="5" height="15" fill="rgb(229,147,54)"/><text x="809.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.37%)</title><rect x="806" y="308" width="5" height="15" fill="rgb(207,153,41)"/><text x="809.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.37%)</title><rect x="811" y="276" width="4" height="15" fill="rgb(206,130,6)"/><text x="814.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.37%)</title><rect x="811" y="292" width="4" height="15" fill="rgb(243,121,40)"/><text x="814.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.37%)</title><rect x="815" y="324" width="5" height="15" fill="rgb(239,99,51)"/><text x="818.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.37%)</title><rect x="815" y="340" width="5" height="15" fill="rgb(250,137,36)"/><text x="818.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.37%)</title><rect x="815" y="356" width="5" height="15" fill="rgb(219,162,7)"/><text x="818.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.75%)</title><rect x="815" y="308" width="9" height="15" fill="rgb(247,82,38)"/><text x="818.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.37%)</title><rect x="820" y="324" width="4" height="15" fill="rgb(250,139,23)"/><text x="823.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.37%)</title><rect x="820" y="340" width="4" height="15" fill="rgb(254,2,16)"/><text x="823.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 8.21%)</title><rect x="732" y="196" width="96" height="15" fill="rgb(242,119,4)"/><text x="735.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 8.21%)</title><rect x="732" y="212" width="96" height="15" fill="rgb(246,14,3)"/><text x="735.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (22 samples, 8.21%)</title><rect x="732" y="228" width="96" height="15" fill="rgb(250,223,11)"/><text x="735.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.61%)</title><rect x="798" y="244" width="30" height="15" fill="rgb(212,145,52)"/><text x="801.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.87%)</title><rect x="806" y="260" width="22" height="15" fill="rgb(231,216,46)"/><text x="809.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.12%)</title><rect x="815" y="276" width="13" height="15" fill="rgb(207,89,23)"/><text x="818.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.12%)</title><rect x="815" y="292" width="13" height="15" fill="rgb(248,196,38)"/><text x="818.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.37%)</title><rect x="824" y="308" width="4" height="15" fill="rgb(252,26,39)"/><text x="827.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1741) (1 samples, 0.37%)</title><rect x="824" y="324" width="4" height="15" fill="rgb(217,7,44)"/><text x="827.00" y="334.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.37%)</title><rect x="846" y="260" width="4" height="15" fill="rgb(218,28,6)"/><text x="849.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.37%)</title><rect x="850" y="292" width="5" height="15" fill="rgb(206,16,3)"/><text x="853.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.75%)</title><rect x="850" y="276" width="9" height="15" fill="rgb(236,106,24)"/><text x="853.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (1 samples, 0.37%)</title><rect x="855" y="292" width="4" height="15" fill="rgb(208,116,4)"/><text x="858.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.37%)</title><rect x="855" y="308" width="4" height="15" fill="rgb(233,1,41)"/><text x="858.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.37%)</title><rect x="855" y="324" width="4" height="15" fill="rgb(247,54,40)"/><text x="858.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.37%)</title><rect x="855" y="340" width="4" height="15" fill="rgb(222,175,5)"/><text x="858.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.37%)</title><rect x="855" y="356" width="4" height="15" fill="rgb(250,79,24)"/><text x="858.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.37%)</title><rect x="855" y="372" width="4" height="15" fill="rgb(240,191,0)"/><text x="858.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.37%)</title><rect x="855" y="388" width="4" height="15" fill="rgb(212,171,31)"/><text x="858.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (6 samples, 2.24%)</title><rect x="837" y="228" width="27" height="15" fill="rgb(207,81,0)"/><text x="840.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 2.24%)</title><rect x="837" y="244" width="27" height="15" fill="rgb(223,119,19)"/><text x="840.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 1.12%)</title><rect x="850" y="260" width="14" height="15" fill="rgb(228,86,6)"/><text x="853.00" y="270.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.37%)</title><rect x="859" y="276" width="5" height="15" fill="rgb(225,107,46)"/><text x="862.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.37%)</title><rect x="859" y="292" width="5" height="15" fill="rgb(233,219,35)"/><text x="862.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.37%)</title><rect x="859" y="308" width="5" height="15" fill="rgb(237,103,39)"/><text x="862.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.37%)</title><rect x="864" y="260" width="4" height="15" fill="rgb(242,206,26)"/><text x="867.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:380) (1 samples, 0.37%)</title><rect x="864" y="276" width="4" height="15" fill="rgb(254,133,28)"/><text x="867.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.37%)</title><rect x="868" y="324" width="4" height="15" fill="rgb(229,55,29)"/><text x="871.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.75%)</title><rect x="868" y="260" width="9" height="15" fill="rgb(211,138,50)"/><text x="871.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.75%)</title><rect x="868" y="276" width="9" height="15" fill="rgb(211,34,15)"/><text x="871.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.75%)</title><rect x="868" y="292" width="9" height="15" fill="rgb(226,34,21)"/><text x="871.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.75%)</title><rect x="868" y="308" width="9" height="15" fill="rgb(244,103,40)"/><text x="871.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.37%)</title><rect x="872" y="324" width="5" height="15" fill="rgb(242,63,28)"/><text x="875.00" y="334.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.37%)</title><rect x="872" y="340" width="5" height="15" fill="rgb(241,37,53)"/><text x="875.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.49%)</title><rect x="864" y="228" width="17" height="15" fill="rgb(223,87,45)"/><text x="867.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.49%)</title><rect x="864" y="244" width="17" height="15" fill="rgb(212,182,4)"/><text x="867.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.37%)</title><rect x="877" y="260" width="4" height="15" fill="rgb(229,155,30)"/><text x="880.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:276) (1 samples, 0.37%)</title><rect x="877" y="276" width="4" height="15" fill="rgb(244,76,47)"/><text x="880.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="881" y="260" width="5" height="15" fill="rgb(220,124,24)"/><text x="884.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.37%)</title><rect x="881" y="276" width="5" height="15" fill="rgb(247,154,28)"/><text x="884.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.37%)</title><rect x="886" y="276" width="4" height="15" fill="rgb(219,50,7)"/><text x="889.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.37%)</title><rect x="886" y="292" width="4" height="15" fill="rgb(210,203,38)"/><text x="889.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.37%)</title><rect x="886" y="308" width="4" height="15" fill="rgb(220,134,14)"/><text x="889.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:560) (1 samples, 0.37%)</title><rect x="886" y="324" width="4" height="15" fill="rgb(251,178,16)"/><text x="889.00" y="334.50"></text></g><g><title>0x7fefc9de8965 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="886" y="340" width="4" height="15" fill="rgb(233,75,37)"/><text x="889.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.75%)</title><rect x="886" y="260" width="9" height="15" fill="rgb(225,158,28)"/><text x="889.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.37%)</title><rect x="890" y="276" width="5" height="15" fill="rgb(239,223,21)"/><text x="893.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.37%)</title><rect x="890" y="292" width="5" height="15" fill="rgb(228,151,35)"/><text x="893.00" y="302.50"></text></g><g><title>0x7fefb50f213e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="890" y="308" width="5" height="15" fill="rgb(252,169,52)"/><text x="893.00" y="318.50"></text></g><g><title>0x7fefb50f1efe (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="890" y="324" width="5" height="15" fill="rgb(213,110,46)"/><text x="893.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.49%)</title><rect x="881" y="244" width="18" height="15" fill="rgb(250,10,36)"/><text x="884.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.37%)</title><rect x="895" y="260" width="4" height="15" fill="rgb(205,6,22)"/><text x="898.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (5 samples, 1.87%)</title><rect x="881" y="228" width="22" height="15" fill="rgb(240,117,43)"/><text x="884.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.37%)</title><rect x="899" y="244" width="4" height="15" fill="rgb(227,71,32)"/><text x="902.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.37%)</title><rect x="899" y="260" width="4" height="15" fill="rgb(243,25,14)"/><text x="902.00" y="270.50"></text></g><g><title>0x7fefc9ec774a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="912" y="292" width="5" height="15" fill="rgb(231,206,34)"/><text x="915.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (3 samples, 1.12%)</title><rect x="917" y="292" width="13" height="15" fill="rgb(220,50,33)"/><text x="920.00" y="302.50"></text></g><g><title>array_argmax (methods.c:292) (1 samples, 0.37%)</title><rect x="930" y="308" width="4" height="15" fill="rgb(218,210,44)"/><text x="933.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 9.33%)</title><rect x="828" y="196" width="111" height="15" fill="rgb(218,143,3)"/><text x="831.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 8.96%)</title><rect x="833" y="212" width="106" height="15" fill="rgb(223,71,28)"/><text x="836.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 2.99%)</title><rect x="903" y="228" width="36" height="15" fill="rgb(228,51,17)"/><text x="906.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (8 samples, 2.99%)</title><rect x="903" y="244" width="36" height="15" fill="rgb(222,211,4)"/><text x="906.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.99%)</title><rect x="903" y="260" width="36" height="15" fill="rgb(205,186,3)"/><text x="906.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.24%)</title><rect x="912" y="276" width="27" height="15" fill="rgb(227,80,37)"/><text x="915.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.75%)</title><rect x="930" y="292" width="9" height="15" fill="rgb(237,5,15)"/><text x="933.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.37%)</title><rect x="934" y="308" width="5" height="15" fill="rgb(221,145,35)"/><text x="937.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.37%)</title><rect x="934" y="324" width="5" height="15" fill="rgb(224,27,35)"/><text x="937.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.37%)</title><rect x="934" y="340" width="5" height="15" fill="rgb(227,43,6)"/><text x="937.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.37%)</title><rect x="934" y="356" width="5" height="15" fill="rgb(251,143,53)"/><text x="937.00" y="366.50"></text></g><g><title>0x7fefc900b0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="934" y="372" width="5" height="15" fill="rgb(230,155,35)"/><text x="937.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (57 samples, 21.27%)</title><rect x="692" y="180" width="251" height="15" fill="rgb(220,21,18)"/><text x="695.00" y="190.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.37%)</title><rect x="939" y="196" width="4" height="15" fill="rgb(253,119,54)"/><text x="942.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.75%)</title><rect x="943" y="180" width="9" height="15" fill="rgb(233,197,28)"/><text x="946.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.75%)</title><rect x="952" y="180" width="9" height="15" fill="rgb(239,108,37)"/><text x="955.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.75%)</title><rect x="961" y="180" width="8" height="15" fill="rgb(243,130,41)"/><text x="964.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.37%)</title><rect x="969" y="180" width="5" height="15" fill="rgb(234,102,25)"/><text x="972.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (76 samples, 28.36%)</title><rect x="644" y="164" width="334" height="15" fill="rgb(236,210,47)"/><text x="647.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.37%)</title><rect x="974" y="180" width="4" height="15" fill="rgb(249,180,1)"/><text x="977.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (86 samples, 32.09%)</title><rect x="604" y="132" width="379" height="15" fill="rgb(209,98,48)"/><text x="607.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (85 samples, 31.72%)</title><rect x="608" y="148" width="375" height="15" fill="rgb(205,26,19)"/><text x="611.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.37%)</title><rect x="978" y="164" width="5" height="15" fill="rgb(238,80,40)"/><text x="981.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.37%)</title><rect x="978" y="180" width="5" height="15" fill="rgb(233,184,15)"/><text x="981.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:45) (91 samples, 33.96%)</title><rect x="586" y="52" width="401" height="15" fill="rgb(243,198,3)"/><text x="589.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:44) (91 samples, 33.96%)</title><rect x="586" y="68" width="401" height="15" fill="rgb(233,48,22)"/><text x="589.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:29) (91 samples, 33.96%)</title><rect x="586" y="84" width="401" height="15" fill="rgb(252,192,39)"/><text x="589.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:23) (91 samples, 33.96%)</title><rect x="586" y="100" width="401" height="15" fill="rgb(244,49,31)"/><text x="589.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (89 samples, 33.21%)</title><rect x="595" y="116" width="392" height="15" fill="rgb(235,73,23)"/><text x="598.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="983" y="132" width="4" height="15" fill="rgb(206,210,5)"/><text x="986.00" y="142.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:28) (1 samples, 0.37%)</title><rect x="987" y="84" width="4" height="15" fill="rgb(243,20,50)"/><text x="990.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="987" y="100" width="4" height="15" fill="rgb(233,8,47)"/><text x="990.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.37%)</title><rect x="987" y="116" width="4" height="15" fill="rgb(225,126,15)"/><text x="990.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.37%)</title><rect x="987" y="132" width="4" height="15" fill="rgb(211,187,21)"/><text x="990.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.37%)</title><rect x="987" y="148" width="4" height="15" fill="rgb(248,112,9)"/><text x="990.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.37%)</title><rect x="987" y="164" width="4" height="15" fill="rgb(244,104,13)"/><text x="990.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.37%)</title><rect x="987" y="180" width="4" height="15" fill="rgb(229,90,14)"/><text x="990.00" y="190.50"></text></g><g><title>convert_sklearn_zipmap (skl2onnx/operator_converters/zip_map.py:27) (1 samples, 0.37%)</title><rect x="987" y="196" width="4" height="15" fill="rgb(239,188,42)"/><text x="990.00" y="206.50"></text></g><g><title>apply_cast (onnxconverter_common/onnx_ops.py:145) (1 samples, 0.37%)</title><rect x="987" y="212" width="4" height="15" fill="rgb(218,102,45)"/><text x="990.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:18) (1 samples, 0.37%)</title><rect x="991" y="100" width="5" height="15" fill="rgb(234,85,47)"/><text x="994.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.37%)</title><rect x="991" y="116" width="5" height="15" fill="rgb(219,127,0)"/><text x="994.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.37%)</title><rect x="991" y="132" width="5" height="15" fill="rgb(252,206,51)"/><text x="994.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.37%)</title><rect x="991" y="148" width="5" height="15" fill="rgb(252,95,28)"/><text x="994.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="1005" y="116" width="4" height="15" fill="rgb(228,117,30)"/><text x="1008.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="1005" y="132" width="4" height="15" fill="rgb(246,182,25)"/><text x="1008.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.37%)</title><rect x="1005" y="148" width="4" height="15" fill="rgb(217,60,33)"/><text x="1008.00" y="158.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1035" y="260" width="5" height="15" fill="rgb(226,165,12)"/><text x="1038.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1035" y="276" width="5" height="15" fill="rgb(254,29,15)"/><text x="1038.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1035" y="292" width="5" height="15" fill="rgb(232,85,19)"/><text x="1038.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1040" y="260" width="4" height="15" fill="rgb(212,15,33)"/><text x="1043.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.87%)</title><rect x="1031" y="196" width="22" height="15" fill="rgb(205,116,54)"/><text x="1034.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.87%)</title><rect x="1031" y="212" width="22" height="15" fill="rgb(217,142,4)"/><text x="1034.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.87%)</title><rect x="1031" y="228" width="22" height="15" fill="rgb(245,86,31)"/><text x="1034.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.87%)</title><rect x="1031" y="244" width="22" height="15" fill="rgb(229,95,25)"/><text x="1034.00" y="254.50">v..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1044" y="260" width="9" height="15" fill="rgb(211,184,3)"/><text x="1047.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1044" y="276" width="9" height="15" fill="rgb(222,58,42)"/><text x="1047.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1049" y="292" width="4" height="15" fill="rgb(233,15,42)"/><text x="1052.00" y="302.50"></text></g><g><title>0x7fef89e18ff9 (?) (1 samples, 0.37%)</title><rect x="1057" y="212" width="5" height="15" fill="rgb(216,222,13)"/><text x="1060.00" y="222.50"></text></g><g><title>0x7fef89e13ef6 (?) (1 samples, 0.37%)</title><rect x="1057" y="228" width="5" height="15" fill="rgb(226,60,38)"/><text x="1060.00" y="238.50"></text></g><g><title>0x7fef89e08962 (?) (1 samples, 0.37%)</title><rect x="1057" y="244" width="5" height="15" fill="rgb(248,192,47)"/><text x="1060.00" y="254.50"></text></g><g><title>0x7fef89e3c7a7 (?) (1 samples, 0.37%)</title><rect x="1057" y="260" width="5" height="15" fill="rgb(212,142,29)"/><text x="1060.00" y="270.50"></text></g><g><title>0x7fef89e3bf9c (?) (1 samples, 0.37%)</title><rect x="1057" y="276" width="5" height="15" fill="rgb(241,15,16)"/><text x="1060.00" y="286.50"></text></g><g><title>0x7fef8a25698e (?) (1 samples, 0.37%)</title><rect x="1057" y="292" width="5" height="15" fill="rgb(242,70,20)"/><text x="1060.00" y="302.50"></text></g><g><title>0x7fef8a256492 (?) (1 samples, 0.37%)</title><rect x="1057" y="308" width="5" height="15" fill="rgb(223,93,29)"/><text x="1060.00" y="318.50"></text></g><g><title>0x7fefc9de8991 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1071" y="292" width="4" height="15" fill="rgb(247,107,33)"/><text x="1074.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1075" y="308" width="4" height="15" fill="rgb(221,228,8)"/><text x="1078.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1075" y="324" width="4" height="15" fill="rgb(211,61,15)"/><text x="1078.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.49%)</title><rect x="1075" y="292" width="18" height="15" fill="rgb(219,160,37)"/><text x="1078.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.12%)</title><rect x="1079" y="308" width="14" height="15" fill="rgb(233,204,42)"/><text x="1082.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 1.12%)</title><rect x="1079" y="324" width="14" height="15" fill="rgb(214,110,8)"/><text x="1082.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.12%)</title><rect x="1079" y="340" width="14" height="15" fill="rgb(240,143,1)"/><text x="1082.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1093" y="308" width="4" height="15" fill="rgb(233,215,38)"/><text x="1096.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1093" y="324" width="4" height="15" fill="rgb(217,60,30)"/><text x="1096.00" y="334.50"></text></g><g><title>0x7fefc9de9b12 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(247,97,33)"/><text x="1096.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1093" y="292" width="8" height="15" fill="rgb(242,156,25)"/><text x="1096.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1097" y="308" width="4" height="15" fill="rgb(206,101,40)"/><text x="1100.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1097" y="324" width="4" height="15" fill="rgb(244,4,44)"/><text x="1100.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1097" y="340" width="4" height="15" fill="rgb(214,99,27)"/><text x="1100.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1101" y="292" width="5" height="15" fill="rgb(253,110,38)"/><text x="1104.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1106" y="292" width="4" height="15" fill="rgb(230,133,44)"/><text x="1109.00" y="302.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="356" width="5" height="15" fill="rgb(214,109,16)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="372" width="5" height="15" fill="rgb(217,45,39)"/><text x="1113.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="388" width="5" height="15" fill="rgb(215,212,31)"/><text x="1113.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="404" width="5" height="15" fill="rgb(247,104,22)"/><text x="1113.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="420" width="5" height="15" fill="rgb(234,86,30)"/><text x="1113.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="436" width="5" height="15" fill="rgb(245,206,40)"/><text x="1113.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="452" width="5" height="15" fill="rgb(250,99,28)"/><text x="1113.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="468" width="5" height="15" fill="rgb(242,79,24)"/><text x="1113.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="484" width="5" height="15" fill="rgb(206,142,15)"/><text x="1113.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="500" width="5" height="15" fill="rgb(246,177,24)"/><text x="1113.00" y="510.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1110" y="340" width="9" height="15" fill="rgb(248,80,4)"/><text x="1113.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1115" y="356" width="4" height="15" fill="rgb(225,131,41)"/><text x="1118.00" y="366.50"></text></g><g><title>0x7fefc9e08dbb (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(240,99,32)"/><text x="1118.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1119" y="340" width="4" height="15" fill="rgb(244,167,1)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1119" y="356" width="4" height="15" fill="rgb(237,141,40)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1119" y="372" width="4" height="15" fill="rgb(210,135,21)"/><text x="1122.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1123" y="340" width="9" height="15" fill="rgb(210,173,52)"/><text x="1126.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="356" width="4" height="15" fill="rgb(210,61,28)"/><text x="1131.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="372" width="4" height="15" fill="rgb(241,169,43)"/><text x="1131.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="388" width="4" height="15" fill="rgb(211,143,54)"/><text x="1131.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="404" width="4" height="15" fill="rgb(245,177,49)"/><text x="1131.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1132" y="356" width="5" height="15" fill="rgb(229,148,42)"/><text x="1135.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.34%)</title><rect x="1066" y="260" width="75" height="15" fill="rgb(225,185,42)"/><text x="1069.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.97%)</title><rect x="1071" y="276" width="70" height="15" fill="rgb(215,102,33)"/><text x="1074.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.61%)</title><rect x="1110" y="292" width="31" height="15" fill="rgb(230,9,13)"/><text x="1113.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.61%)</title><rect x="1110" y="308" width="31" height="15" fill="rgb(254,102,30)"/><text x="1113.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.61%)</title><rect x="1110" y="324" width="31" height="15" fill="rgb(229,127,44)"/><text x="1113.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1132" y="340" width="9" height="15" fill="rgb(225,66,1)"/><text x="1135.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1137" y="356" width="4" height="15" fill="rgb(253,129,48)"/><text x="1140.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1137" y="372" width="4" height="15" fill="rgb(242,14,30)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1150" y="276" width="9" height="15" fill="rgb(218,177,52)"/><text x="1153.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1154" y="292" width="5" height="15" fill="rgb(205,75,48)"/><text x="1157.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1154" y="308" width="5" height="15" fill="rgb(236,53,40)"/><text x="1157.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1154" y="324" width="5" height="15" fill="rgb(205,22,1)"/><text x="1157.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.87%)</title><rect x="1141" y="260" width="22" height="15" fill="rgb(243,192,1)"/><text x="1144.00" y="270.50">o..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="1159" y="276" width="4" height="15" fill="rgb(237,92,25)"/><text x="1162.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 8.58%)</title><rect x="1066" y="244" width="101" height="15" fill="rgb(250,227,4)"/><text x="1069.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1163" y="260" width="4" height="15" fill="rgb(237,212,45)"/><text x="1166.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.37%)</title><rect x="1163" y="276" width="4" height="15" fill="rgb(244,85,9)"/><text x="1166.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.37%)</title><rect x="1163" y="292" width="4" height="15" fill="rgb(226,158,52)"/><text x="1166.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.37%)</title><rect x="1163" y="308" width="4" height="15" fill="rgb(209,143,1)"/><text x="1166.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="244" width="5" height="15" fill="rgb(236,8,2)"/><text x="1170.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="260" width="5" height="15" fill="rgb(227,94,40)"/><text x="1170.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="276" width="5" height="15" fill="rgb(232,107,3)"/><text x="1170.00" y="286.50"></text></g><g><title>0x7fefb98b4840 (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1167" y="292" width="5" height="15" fill="rgb(225,113,27)"/><text x="1170.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1172" y="244" width="4" height="15" fill="rgb(235,130,1)"/><text x="1175.00" y="254.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1176" y="244" width="5" height="15" fill="rgb(233,224,53)"/><text x="1179.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1176" y="260" width="5" height="15" fill="rgb(220,99,46)"/><text x="1179.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (37 samples, 13.81%)</title><rect x="1022" y="164" width="163" height="15" fill="rgb(217,12,25)"/><text x="1025.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (37 samples, 13.81%)</title><rect x="1022" y="180" width="163" height="15" fill="rgb(239,10,47)"/><text x="1025.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:136) (30 samples, 11.19%)</title><rect x="1053" y="196" width="132" height="15" fill="rgb(242,199,37)"/><text x="1056.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 10.45%)</title><rect x="1062" y="212" width="123" height="15" fill="rgb(217,18,12)"/><text x="1065.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 10.45%)</title><rect x="1062" y="228" width="123" height="15" fill="rgb(215,30,11)"/><text x="1065.00" y="238.50">void pybind11::..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(236,199,49)"/><text x="1184.00" y="254.50"></text></g><g><title>all (268 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,70,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:52) (46 samples, 17.16%)</title><rect x="987" y="52" width="203" height="15" fill="rgb(243,52,50)"/><text x="990.00" y="62.50">&lt;module&gt; (bench_LogisticRe..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:51) (46 samples, 17.16%)</title><rect x="987" y="68" width="203" height="15" fill="rgb(216,47,43)"/><text x="990.00" y="78.50">profile_ort (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:29) (45 samples, 16.79%)</title><rect x="991" y="84" width="199" height="15" fill="rgb(211,36,12)"/><text x="994.00" y="94.50">setup_profile (bench_Logis..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_50_12_float_.py:23) (44 samples, 16.42%)</title><rect x="996" y="100" width="194" height="15" fill="rgb(228,212,13)"/><text x="999.00" y="110.50">profile (bench_LogisticRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (41 samples, 15.30%)</title><rect x="1009" y="116" width="181" height="15" fill="rgb(234,201,41)"/><text x="1012.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (39 samples, 14.55%)</title><rect x="1018" y="132" width="172" height="15" fill="rgb(222,50,47)"/><text x="1021.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (38 samples, 14.18%)</title><rect x="1022" y="148" width="168" height="15" fill="rgb(242,224,50)"/><text x="1025.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.37%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(237,161,53)"/><text x="1188.00" y="174.50"></text></g></g></svg>