<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2454" onload="init(evt)" viewBox="0 0 1200 2454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2454" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2437.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2437.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:28) (1 samples, 0.39%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(209,195,14)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.39%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(233,7,37)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.39%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(219,148,18)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.39%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(251,173,7)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(242,203,33)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(252,105,17)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(212,201,52)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(210,52,49)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(208,227,43)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:12) (1 samples, 0.39%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(237,20,35)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(208,194,17)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(206,189,1)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(241,213,1)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.39%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(229,166,36)"/><text x="13.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.39%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(248,182,8)"/><text x="13.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.39%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(206,173,40)"/><text x="13.00" y="334.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.39%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(212,105,12)"/><text x="17.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.39%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(223,99,37)"/><text x="17.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.39%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(207,158,5)"/><text x="17.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:18) (2 samples, 0.78%)</title><rect x="14" y="100" width="9" height="15" fill="rgb(234,10,33)"/><text x="17.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.78%)</title><rect x="14" y="116" width="9" height="15" fill="rgb(240,175,38)"/><text x="17.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.78%)</title><rect x="14" y="132" width="9" height="15" fill="rgb(210,113,6)"/><text x="17.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.78%)</title><rect x="14" y="148" width="9" height="15" fill="rgb(217,101,52)"/><text x="17.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.39%)</title><rect x="19" y="164" width="4" height="15" fill="rgb(229,65,35)"/><text x="22.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.39%)</title><rect x="19" y="180" width="4" height="15" fill="rgb(225,36,32)"/><text x="22.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.39%)</title><rect x="19" y="196" width="4" height="15" fill="rgb(211,202,9)"/><text x="22.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.39%)</title><rect x="19" y="212" width="4" height="15" fill="rgb(221,34,35)"/><text x="22.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.39%)</title><rect x="19" y="228" width="4" height="15" fill="rgb(217,95,41)"/><text x="22.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.39%)</title><rect x="19" y="244" width="4" height="15" fill="rgb(247,51,13)"/><text x="22.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.39%)</title><rect x="19" y="260" width="4" height="15" fill="rgb(212,75,9)"/><text x="22.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.39%)</title><rect x="19" y="276" width="4" height="15" fill="rgb(208,198,32)"/><text x="22.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.39%)</title><rect x="19" y="292" width="4" height="15" fill="rgb(210,93,52)"/><text x="22.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2722) (1 samples, 0.39%)</title><rect x="19" y="308" width="4" height="15" fill="rgb(233,88,2)"/><text x="22.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.56%)</title><rect x="32" y="180" width="19" height="15" fill="rgb(247,112,21)"/><text x="35.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.39%)</title><rect x="46" y="196" width="5" height="15" fill="rgb(250,1,3)"/><text x="49.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 2.33%)</title><rect x="28" y="148" width="27" height="15" fill="rgb(215,119,37)"/><text x="31.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 2.33%)</title><rect x="28" y="164" width="27" height="15" fill="rgb(238,20,9)"/><text x="31.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.39%)</title><rect x="51" y="180" width="4" height="15" fill="rgb(216,194,35)"/><text x="54.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.39%)</title><rect x="51" y="196" width="4" height="15" fill="rgb(253,174,37)"/><text x="54.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.39%)</title><rect x="55" y="148" width="5" height="15" fill="rgb(241,118,29)"/><text x="58.00" y="158.50"></text></g><g><title>0x7ffb53510151 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="60" y="164" width="5" height="15" fill="rgb(237,147,18)"/><text x="63.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (2 samples, 0.78%)</title><rect x="60" y="148" width="9" height="15" fill="rgb(209,16,25)"/><text x="63.00" y="158.50"></text></g><g><title>0x7ffb53510da2 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="65" y="164" width="4" height="15" fill="rgb(208,184,3)"/><text x="68.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.39%)</title><rect x="78" y="196" width="5" height="15" fill="rgb(237,126,3)"/><text x="81.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.39%)</title><rect x="88" y="212" width="4" height="15" fill="rgb(217,127,34)"/><text x="91.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.39%)</title><rect x="101" y="228" width="5" height="15" fill="rgb(214,133,19)"/><text x="104.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.56%)</title><rect x="92" y="212" width="19" height="15" fill="rgb(243,133,28)"/><text x="95.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.39%)</title><rect x="106" y="228" width="5" height="15" fill="rgb(251,191,12)"/><text x="109.00" y="238.50"></text></g><g><title>0x7ffb5345312f (libc-2.29.so) (1 samples, 0.39%)</title><rect x="111" y="228" width="4" height="15" fill="rgb(222,19,10)"/><text x="114.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (9 samples, 3.50%)</title><rect x="78" y="180" width="42" height="15" fill="rgb(224,178,7)"/><text x="81.00" y="190.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 3.11%)</title><rect x="83" y="196" width="37" height="15" fill="rgb(217,132,3)"/><text x="86.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.78%)</title><rect x="111" y="212" width="9" height="15" fill="rgb(218,183,52)"/><text x="114.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.39%)</title><rect x="115" y="228" width="5" height="15" fill="rgb(238,66,27)"/><text x="118.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.78%)</title><rect x="120" y="196" width="9" height="15" fill="rgb(237,36,32)"/><text x="123.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 1.17%)</title><rect x="138" y="212" width="14" height="15" fill="rgb(243,128,45)"/><text x="141.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.39%)</title><rect x="152" y="212" width="4" height="15" fill="rgb(250,32,22)"/><text x="155.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.39%)</title><rect x="156" y="212" width="5" height="15" fill="rgb(238,118,43)"/><text x="159.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 3.11%)</title><rect x="129" y="196" width="37" height="15" fill="rgb(234,142,47)"/><text x="132.00" y="206.50">che..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.39%)</title><rect x="161" y="212" width="5" height="15" fill="rgb(225,142,13)"/><text x="164.00" y="222.50"></text></g><g><title>0x7ffb53453186 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="161" y="228" width="5" height="15" fill="rgb(251,171,43)"/><text x="164.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.39%)</title><rect x="166" y="212" width="4" height="15" fill="rgb(244,45,20)"/><text x="169.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.78%)</title><rect x="166" y="196" width="9" height="15" fill="rgb(247,29,39)"/><text x="169.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.39%)</title><rect x="170" y="212" width="5" height="15" fill="rgb(236,213,29)"/><text x="173.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.39%)</title><rect x="170" y="228" width="5" height="15" fill="rgb(234,113,3)"/><text x="173.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.17%)</title><rect x="175" y="196" width="14" height="15" fill="rgb(218,142,53)"/><text x="178.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.78%)</title><rect x="179" y="212" width="10" height="15" fill="rgb(251,52,37)"/><text x="182.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.39%)</title><rect x="184" y="228" width="5" height="15" fill="rgb(208,4,28)"/><text x="187.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.39%)</title><rect x="193" y="212" width="5" height="15" fill="rgb(245,63,29)"/><text x="196.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.39%)</title><rect x="193" y="228" width="5" height="15" fill="rgb(240,55,49)"/><text x="196.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 1.17%)</title><rect x="189" y="196" width="13" height="15" fill="rgb(242,192,6)"/><text x="192.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.39%)</title><rect x="198" y="212" width="4" height="15" fill="rgb(218,170,27)"/><text x="201.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.39%)</title><rect x="198" y="228" width="4" height="15" fill="rgb(208,131,43)"/><text x="201.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.39%)</title><rect x="202" y="196" width="5" height="15" fill="rgb(229,115,25)"/><text x="205.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:560) (1 samples, 0.39%)</title><rect x="207" y="196" width="5" height="15" fill="rgb(253,170,28)"/><text x="210.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.39%)</title><rect x="225" y="228" width="5" height="15" fill="rgb(244,187,15)"/><text x="228.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.39%)</title><rect x="230" y="228" width="4" height="15" fill="rgb(238,25,54)"/><text x="233.00" y="238.50"></text></g><g><title>0x7ffb534436d4 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="230" y="244" width="4" height="15" fill="rgb(205,134,30)"/><text x="233.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.33%)</title><rect x="216" y="212" width="28" height="15" fill="rgb(241,19,16)"/><text x="219.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.78%)</title><rect x="234" y="228" width="10" height="15" fill="rgb(213,101,27)"/><text x="237.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 3.11%)</title><rect x="212" y="196" width="36" height="15" fill="rgb(223,184,48)"/><text x="215.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.39%)</title><rect x="244" y="212" width="4" height="15" fill="rgb(238,224,22)"/><text x="247.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.95%)</title><rect x="248" y="212" width="23" height="15" fill="rgb(225,63,34)"/><text x="251.00" y="222.50">_..</text></g><g><title>0x7ffb53510df0 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="267" y="228" width="4" height="15" fill="rgb(234,97,28)"/><text x="270.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.39%)</title><rect x="271" y="212" width="5" height="15" fill="rgb(232,1,53)"/><text x="274.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.39%)</title><rect x="271" y="228" width="5" height="15" fill="rgb(206,172,48)"/><text x="274.00" y="238.50"></text></g><g><title>0x7ffb53453144 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="271" y="244" width="5" height="15" fill="rgb(221,63,35)"/><text x="274.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 4.67%)</title><rect x="248" y="196" width="55" height="15" fill="rgb(223,4,19)"/><text x="251.00" y="206.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.33%)</title><rect x="276" y="212" width="27" height="15" fill="rgb(247,38,36)"/><text x="279.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (6 samples, 2.33%)</title><rect x="276" y="228" width="27" height="15" fill="rgb(235,41,31)"/><text x="279.00" y="238.50">_..</text></g><g><title>__subclasscheck__ (abc.py:143) (3 samples, 1.17%)</title><rect x="290" y="244" width="13" height="15" fill="rgb(230,58,11)"/><text x="293.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.39%)</title><rect x="303" y="196" width="5" height="15" fill="rgb(232,198,13)"/><text x="306.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (42 samples, 16.34%)</title><rect x="120" y="180" width="193" height="15" fill="rgb(209,26,39)"/><text x="123.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.39%)</title><rect x="308" y="196" width="5" height="15" fill="rgb(253,222,1)"/><text x="311.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.39%)</title><rect x="313" y="180" width="4" height="15" fill="rgb(240,203,6)"/><text x="316.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.39%)</title><rect x="317" y="180" width="5" height="15" fill="rgb(237,152,8)"/><text x="320.00" y="190.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.39%)</title><rect x="345" y="260" width="4" height="15" fill="rgb(212,72,41)"/><text x="348.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.39%)</title><rect x="345" y="276" width="4" height="15" fill="rgb(210,220,7)"/><text x="348.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.78%)</title><rect x="345" y="244" width="9" height="15" fill="rgb(239,49,50)"/><text x="348.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.39%)</title><rect x="349" y="260" width="5" height="15" fill="rgb(223,127,31)"/><text x="352.00" y="270.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.39%)</title><rect x="349" y="276" width="5" height="15" fill="rgb(227,110,54)"/><text x="352.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.17%)</title><rect x="345" y="228" width="13" height="15" fill="rgb(215,119,37)"/><text x="348.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.39%)</title><rect x="354" y="244" width="4" height="15" fill="rgb(238,208,2)"/><text x="357.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.39%)</title><rect x="354" y="260" width="4" height="15" fill="rgb(237,75,25)"/><text x="357.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.39%)</title><rect x="354" y="276" width="4" height="15" fill="rgb(254,51,15)"/><text x="357.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.56%)</title><rect x="345" y="212" width="18" height="15" fill="rgb(241,167,24)"/><text x="348.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.39%)</title><rect x="358" y="228" width="5" height="15" fill="rgb(236,171,40)"/><text x="361.00" y="238.50"></text></g><g><title>array_add (number.c:330) (6 samples, 2.33%)</title><rect x="340" y="196" width="28" height="15" fill="rgb(221,225,4)"/><text x="343.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.39%)</title><rect x="363" y="212" width="5" height="15" fill="rgb(225,175,0)"/><text x="366.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.39%)</title><rect x="363" y="228" width="5" height="15" fill="rgb(254,119,11)"/><text x="366.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2621) (1 samples, 0.39%)</title><rect x="368" y="244" width="4" height="15" fill="rgb(251,119,36)"/><text x="371.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.39%)</title><rect x="372" y="244" width="5" height="15" fill="rgb(223,31,9)"/><text x="375.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.39%)</title><rect x="372" y="260" width="5" height="15" fill="rgb(234,228,0)"/><text x="375.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.39%)</title><rect x="372" y="276" width="5" height="15" fill="rgb(237,218,53)"/><text x="375.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.39%)</title><rect x="372" y="292" width="5" height="15" fill="rgb(223,10,39)"/><text x="375.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.39%)</title><rect x="372" y="308" width="5" height="15" fill="rgb(241,195,7)"/><text x="375.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.39%)</title><rect x="377" y="244" width="4" height="15" fill="rgb(236,61,36)"/><text x="380.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.39%)</title><rect x="377" y="260" width="4" height="15" fill="rgb(215,197,8)"/><text x="380.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.39%)</title><rect x="381" y="276" width="5" height="15" fill="rgb(205,117,54)"/><text x="384.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.39%)</title><rect x="381" y="292" width="5" height="15" fill="rgb(231,73,32)"/><text x="384.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.39%)</title><rect x="381" y="308" width="5" height="15" fill="rgb(211,62,42)"/><text x="384.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.39%)</title><rect x="381" y="324" width="5" height="15" fill="rgb(246,5,20)"/><text x="384.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.39%)</title><rect x="381" y="340" width="5" height="15" fill="rgb(237,81,32)"/><text x="384.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.39%)</title><rect x="381" y="356" width="5" height="15" fill="rgb(221,172,52)"/><text x="384.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.39%)</title><rect x="386" y="308" width="5" height="15" fill="rgb(238,130,28)"/><text x="389.00" y="318.50"></text></g><g><title>0x7ffb53452d50 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="391" y="356" width="4" height="15" fill="rgb(234,134,52)"/><text x="394.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 1.17%)</title><rect x="386" y="276" width="14" height="15" fill="rgb(207,120,13)"/><text x="389.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.17%)</title><rect x="386" y="292" width="14" height="15" fill="rgb(231,64,31)"/><text x="389.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.78%)</title><rect x="391" y="308" width="9" height="15" fill="rgb(226,180,15)"/><text x="394.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.78%)</title><rect x="391" y="324" width="9" height="15" fill="rgb(254,9,24)"/><text x="394.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.78%)</title><rect x="391" y="340" width="9" height="15" fill="rgb(219,85,49)"/><text x="394.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.39%)</title><rect x="395" y="356" width="5" height="15" fill="rgb(228,182,42)"/><text x="398.00" y="366.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.39%)</title><rect x="400" y="292" width="4" height="15" fill="rgb(230,166,32)"/><text x="403.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.39%)</title><rect x="400" y="308" width="4" height="15" fill="rgb(228,39,25)"/><text x="403.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (9 samples, 3.50%)</title><rect x="368" y="196" width="41" height="15" fill="rgb(239,223,47)"/><text x="371.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.50%)</title><rect x="368" y="212" width="41" height="15" fill="rgb(208,164,46)"/><text x="371.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 3.50%)</title><rect x="368" y="228" width="41" height="15" fill="rgb(207,43,15)"/><text x="371.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 2.33%)</title><rect x="381" y="244" width="28" height="15" fill="rgb(235,116,27)"/><text x="384.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 2.33%)</title><rect x="381" y="260" width="28" height="15" fill="rgb(249,108,54)"/><text x="384.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (2 samples, 0.78%)</title><rect x="400" y="276" width="9" height="15" fill="rgb(247,89,41)"/><text x="403.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1937) (1 samples, 0.39%)</title><rect x="404" y="292" width="5" height="15" fill="rgb(233,130,20)"/><text x="407.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (74 samples, 28.79%)</title><rect x="78" y="164" width="340" height="15" fill="rgb(216,166,54)"/><text x="81.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base...</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (21 samples, 8.17%)</title><rect x="322" y="180" width="96" height="15" fill="rgb(221,63,51)"/><text x="325.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.78%)</title><rect x="409" y="196" width="9" height="15" fill="rgb(213,111,18)"/><text x="412.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.39%)</title><rect x="414" y="212" width="4" height="15" fill="rgb(238,133,32)"/><text x="417.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.39%)</title><rect x="423" y="212" width="4" height="15" fill="rgb(242,85,29)"/><text x="426.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.39%)</title><rect x="423" y="228" width="4" height="15" fill="rgb(222,127,52)"/><text x="426.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.39%)</title><rect x="423" y="244" width="4" height="15" fill="rgb(222,105,0)"/><text x="426.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.78%)</title><rect x="423" y="180" width="9" height="15" fill="rgb(224,60,28)"/><text x="426.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.78%)</title><rect x="423" y="196" width="9" height="15" fill="rgb(254,164,12)"/><text x="426.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:54) (1 samples, 0.39%)</title><rect x="427" y="212" width="5" height="15" fill="rgb(210,171,19)"/><text x="430.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.39%)</title><rect x="432" y="196" width="5" height="15" fill="rgb(230,36,3)"/><text x="435.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.39%)</title><rect x="432" y="212" width="5" height="15" fill="rgb(236,120,17)"/><text x="435.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.39%)</title><rect x="437" y="212" width="4" height="15" fill="rgb(239,176,50)"/><text x="440.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.39%)</title><rect x="437" y="228" width="4" height="15" fill="rgb(209,79,44)"/><text x="440.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.39%)</title><rect x="437" y="244" width="4" height="15" fill="rgb(254,123,54)"/><text x="440.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.39%)</title><rect x="437" y="260" width="4" height="15" fill="rgb(250,101,9)"/><text x="440.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.39%)</title><rect x="437" y="276" width="4" height="15" fill="rgb(223,84,21)"/><text x="440.00" y="286.50"></text></g><g><title>0x7ffb533ea7a5 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="437" y="292" width="4" height="15" fill="rgb(235,39,51)"/><text x="440.00" y="302.50"></text></g><g><title>0x7ffb533ea769 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="437" y="308" width="4" height="15" fill="rgb(211,91,45)"/><text x="440.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (6 samples, 2.33%)</title><rect x="418" y="164" width="28" height="15" fill="rgb(214,72,27)"/><text x="421.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.17%)</title><rect x="432" y="180" width="14" height="15" fill="rgb(224,121,38)"/><text x="435.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.78%)</title><rect x="437" y="196" width="9" height="15" fill="rgb(247,149,51)"/><text x="440.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.39%)</title><rect x="441" y="212" width="5" height="15" fill="rgb(219,129,54)"/><text x="444.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.39%)</title><rect x="441" y="228" width="5" height="15" fill="rgb(213,203,47)"/><text x="444.00" y="238.50"></text></g><g><title>0x7ffb3e73c13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.39%)</title><rect x="441" y="244" width="5" height="15" fill="rgb(240,10,20)"/><text x="444.00" y="254.50"></text></g><g><title>0x7ffb3e73bef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.39%)</title><rect x="441" y="260" width="5" height="15" fill="rgb(216,157,27)"/><text x="444.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.39%)</title><rect x="455" y="180" width="4" height="15" fill="rgb(243,32,53)"/><text x="458.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.39%)</title><rect x="455" y="196" width="4" height="15" fill="rgb(206,181,20)"/><text x="458.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:266) (1 samples, 0.39%)</title><rect x="455" y="212" width="4" height="15" fill="rgb(237,160,33)"/><text x="458.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.39%)</title><rect x="464" y="276" width="5" height="15" fill="rgb(211,153,19)"/><text x="467.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.39%)</title><rect x="469" y="308" width="4" height="15" fill="rgb(249,90,47)"/><text x="472.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.39%)</title><rect x="473" y="308" width="5" height="15" fill="rgb(208,220,52)"/><text x="476.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (6 samples, 2.33%)</title><rect x="464" y="228" width="28" height="15" fill="rgb(242,154,14)"/><text x="467.00" y="238.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (6 samples, 2.33%)</title><rect x="464" y="244" width="28" height="15" fill="rgb(246,19,51)"/><text x="467.00" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (6 samples, 2.33%)</title><rect x="464" y="260" width="28" height="15" fill="rgb(245,90,8)"/><text x="467.00" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 1.95%)</title><rect x="469" y="276" width="23" height="15" fill="rgb(227,44,4)"/><text x="472.00" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 1.95%)</title><rect x="469" y="292" width="23" height="15" fill="rgb(252,191,37)"/><text x="472.00" y="302.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.17%)</title><rect x="478" y="308" width="14" height="15" fill="rgb(217,63,21)"/><text x="481.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.39%)</title><rect x="492" y="244" width="4" height="15" fill="rgb(235,220,4)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.39%)</title><rect x="492" y="260" width="4" height="15" fill="rgb(243,3,0)"/><text x="495.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1402) (1 samples, 0.39%)</title><rect x="492" y="276" width="4" height="15" fill="rgb(221,22,3)"/><text x="495.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.39%)</title><rect x="496" y="276" width="5" height="15" fill="rgb(239,115,30)"/><text x="499.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (2 samples, 0.78%)</title><rect x="496" y="260" width="9" height="15" fill="rgb(237,75,28)"/><text x="499.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.39%)</title><rect x="501" y="276" width="4" height="15" fill="rgb(215,196,42)"/><text x="504.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.39%)</title><rect x="505" y="276" width="5" height="15" fill="rgb(240,9,19)"/><text x="508.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.39%)</title><rect x="505" y="292" width="5" height="15" fill="rgb(226,120,52)"/><text x="508.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.39%)</title><rect x="505" y="308" width="5" height="15" fill="rgb(249,5,11)"/><text x="508.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.39%)</title><rect x="505" y="324" width="5" height="15" fill="rgb(210,166,6)"/><text x="508.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.39%)</title><rect x="505" y="340" width="5" height="15" fill="rgb(212,208,24)"/><text x="508.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.39%)</title><rect x="505" y="356" width="5" height="15" fill="rgb(207,176,19)"/><text x="508.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.39%)</title><rect x="505" y="372" width="5" height="15" fill="rgb(215,143,31)"/><text x="508.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:199) (1 samples, 0.39%)</title><rect x="510" y="308" width="5" height="15" fill="rgb(214,3,10)"/><text x="513.00" y="318.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.39%)</title><rect x="510" y="324" width="5" height="15" fill="rgb(251,5,51)"/><text x="513.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.78%)</title><rect x="510" y="276" width="9" height="15" fill="rgb(238,123,14)"/><text x="513.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.78%)</title><rect x="510" y="292" width="9" height="15" fill="rgb(241,148,2)"/><text x="513.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.39%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(241,156,53)"/><text x="518.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.39%)</title><rect x="515" y="324" width="4" height="15" fill="rgb(216,37,25)"/><text x="518.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.39%)</title><rect x="515" y="340" width="4" height="15" fill="rgb(238,133,29)"/><text x="518.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.39%)</title><rect x="519" y="276" width="5" height="15" fill="rgb(207,128,36)"/><text x="522.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.39%)</title><rect x="519" y="292" width="5" height="15" fill="rgb(226,88,14)"/><text x="522.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.39%)</title><rect x="524" y="292" width="4" height="15" fill="rgb(205,6,41)"/><text x="527.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.39%)</title><rect x="524" y="308" width="4" height="15" fill="rgb(216,93,29)"/><text x="527.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.78%)</title><rect x="524" y="276" width="9" height="15" fill="rgb(248,187,35)"/><text x="527.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.39%)</title><rect x="528" y="292" width="5" height="15" fill="rgb(219,3,30)"/><text x="531.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.39%)</title><rect x="528" y="308" width="5" height="15" fill="rgb(216,66,23)"/><text x="531.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1850) (1 samples, 0.39%)</title><rect x="528" y="324" width="5" height="15" fill="rgb(211,92,44)"/><text x="531.00" y="334.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 6.61%)</title><rect x="459" y="196" width="79" height="15" fill="rgb(238,182,42)"/><text x="462.00" y="206.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 6.61%)</title><rect x="459" y="212" width="79" height="15" fill="rgb(207,127,54)"/><text x="462.00" y="222.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.89%)</title><rect x="492" y="228" width="46" height="15" fill="rgb(214,23,38)"/><text x="495.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 3.50%)</title><rect x="496" y="244" width="42" height="15" fill="rgb(246,102,25)"/><text x="499.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.72%)</title><rect x="505" y="260" width="33" height="15" fill="rgb(244,17,41)"/><text x="508.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.39%)</title><rect x="533" y="276" width="5" height="15" fill="rgb(250,178,51)"/><text x="536.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.39%)</title><rect x="533" y="292" width="5" height="15" fill="rgb(244,68,44)"/><text x="536.00" y="302.50"></text></g><g><title>0x7ffb526559c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.39%)</title><rect x="533" y="308" width="5" height="15" fill="rgb(243,15,23)"/><text x="536.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 7.00%)</title><rect x="459" y="180" width="83" height="15" fill="rgb(244,186,47)"/><text x="462.00" y="190.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c:93) (1 samples, 0.39%)</title><rect x="538" y="196" width="4" height="15" fill="rgb(224,175,3)"/><text x="541.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.39%)</title><rect x="542" y="196" width="5" height="15" fill="rgb(229,180,48)"/><text x="545.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.39%)</title><rect x="542" y="212" width="5" height="15" fill="rgb(247,108,28)"/><text x="545.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.39%)</title><rect x="542" y="228" width="5" height="15" fill="rgb(245,215,22)"/><text x="545.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.39%)</title><rect x="542" y="244" width="5" height="15" fill="rgb(228,47,17)"/><text x="545.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.39%)</title><rect x="542" y="260" width="5" height="15" fill="rgb(239,40,12)"/><text x="545.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.39%)</title><rect x="547" y="212" width="4" height="15" fill="rgb(229,18,18)"/><text x="550.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.39%)</title><rect x="551" y="244" width="5" height="15" fill="rgb(212,79,42)"/><text x="554.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.39%)</title><rect x="551" y="260" width="5" height="15" fill="rgb(239,19,28)"/><text x="554.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.78%)</title><rect x="551" y="228" width="9" height="15" fill="rgb(227,37,20)"/><text x="554.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.39%)</title><rect x="556" y="244" width="4" height="15" fill="rgb(207,80,36)"/><text x="559.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.39%)</title><rect x="556" y="260" width="4" height="15" fill="rgb(207,218,11)"/><text x="559.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.39%)</title><rect x="556" y="276" width="4" height="15" fill="rgb(226,99,27)"/><text x="559.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.39%)</title><rect x="560" y="228" width="5" height="15" fill="rgb(238,100,5)"/><text x="563.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.39%)</title><rect x="560" y="244" width="5" height="15" fill="rgb(239,103,18)"/><text x="563.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.39%)</title><rect x="560" y="260" width="5" height="15" fill="rgb(229,135,9)"/><text x="563.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.39%)</title><rect x="565" y="244" width="5" height="15" fill="rgb(231,185,4)"/><text x="568.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:245) (1 samples, 0.39%)</title><rect x="565" y="260" width="5" height="15" fill="rgb(245,92,18)"/><text x="568.00" y="270.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.39%)</title><rect x="565" y="276" width="5" height="15" fill="rgb(239,92,37)"/><text x="568.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (120 samples, 46.69%)</title><rect x="23" y="132" width="551" height="15" fill="rgb(254,102,51)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (110 samples, 42.80%)</title><rect x="69" y="148" width="505" height="15" fill="rgb(242,17,25)"/><text x="72.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (28 samples, 10.89%)</title><rect x="446" y="164" width="128" height="15" fill="rgb(237,35,4)"/><text x="449.00" y="174.50">_predict_proba_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.72%)</title><rect x="542" y="180" width="32" height="15" fill="rgb(245,138,11)"/><text x="545.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 2.33%)</title><rect x="547" y="196" width="27" height="15" fill="rgb(254,78,47)"/><text x="550.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.95%)</title><rect x="551" y="212" width="23" height="15" fill="rgb(236,175,38)"/><text x="554.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.78%)</title><rect x="565" y="228" width="9" height="15" fill="rgb(224,57,33)"/><text x="568.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:718) (1 samples, 0.39%)</title><rect x="570" y="244" width="4" height="15" fill="rgb(205,112,37)"/><text x="573.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:38) (124 samples, 48.25%)</title><rect x="10" y="52" width="569" height="15" fill="rgb(216,164,45)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:37) (124 samples, 48.25%)</title><rect x="10" y="68" width="569" height="15" fill="rgb(216,101,15)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_fl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:29) (123 samples, 47.86%)</title><rect x="14" y="84" width="565" height="15" fill="rgb(206,194,14)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:23) (121 samples, 47.08%)</title><rect x="23" y="100" width="556" height="15" fill="rgb(232,77,53)"/><text x="26.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (121 samples, 47.08%)</title><rect x="23" y="116" width="556" height="15" fill="rgb(254,70,53)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.39%)</title><rect x="574" y="132" width="5" height="15" fill="rgb(212,109,45)"/><text x="577.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 1.17%)</title><rect x="579" y="852" width="14" height="15" fill="rgb(209,49,30)"/><text x="582.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 1.17%)</title><rect x="579" y="868" width="14" height="15" fill="rgb(246,140,2)"/><text x="582.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 1.17%)</title><rect x="579" y="884" width="14" height="15" fill="rgb(253,96,27)"/><text x="582.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 1.17%)</title><rect x="579" y="900" width="14" height="15" fill="rgb(207,73,17)"/><text x="582.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 1.17%)</title><rect x="579" y="916" width="14" height="15" fill="rgb(248,3,3)"/><text x="582.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 1.17%)</title><rect x="579" y="932" width="14" height="15" fill="rgb(216,216,14)"/><text x="582.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 1.17%)</title><rect x="579" y="948" width="14" height="15" fill="rgb(209,107,38)"/><text x="582.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (3 samples, 1.17%)</title><rect x="579" y="964" width="14" height="15" fill="rgb(219,209,21)"/><text x="582.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (3 samples, 1.17%)</title><rect x="579" y="980" width="14" height="15" fill="rgb(220,113,13)"/><text x="582.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (3 samples, 1.17%)</title><rect x="579" y="996" width="14" height="15" fill="rgb(250,8,16)"/><text x="582.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.78%)</title><rect x="583" y="1012" width="10" height="15" fill="rgb(220,77,51)"/><text x="586.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.78%)</title><rect x="583" y="1028" width="10" height="15" fill="rgb(226,171,38)"/><text x="586.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.39%)</title><rect x="588" y="1044" width="5" height="15" fill="rgb(232,218,47)"/><text x="591.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.39%)</title><rect x="588" y="1060" width="5" height="15" fill="rgb(244,113,49)"/><text x="591.00" y="1070.50"></text></g><g><title>0x7ffb533e36b3 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="588" y="1076" width="5" height="15" fill="rgb(225,70,41)"/><text x="591.00" y="1086.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.39%)</title><rect x="593" y="884" width="4" height="15" fill="rgb(216,79,6)"/><text x="596.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.39%)</title><rect x="593" y="900" width="4" height="15" fill="rgb(242,120,47)"/><text x="596.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.39%)</title><rect x="593" y="916" width="4" height="15" fill="rgb(249,152,29)"/><text x="596.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.39%)</title><rect x="593" y="932" width="4" height="15" fill="rgb(231,81,18)"/><text x="596.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.39%)</title><rect x="593" y="948" width="4" height="15" fill="rgb(237,86,51)"/><text x="596.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.39%)</title><rect x="593" y="964" width="4" height="15" fill="rgb(233,229,24)"/><text x="596.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.39%)</title><rect x="593" y="980" width="4" height="15" fill="rgb(242,83,42)"/><text x="596.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.39%)</title><rect x="593" y="996" width="4" height="15" fill="rgb(207,15,24)"/><text x="596.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (6 samples, 2.33%)</title><rect x="579" y="148" width="27" height="15" fill="rgb(214,17,25)"/><text x="582.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="164" width="27" height="15" fill="rgb(227,106,18)"/><text x="582.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.33%)</title><rect x="579" y="180" width="27" height="15" fill="rgb(251,131,42)"/><text x="582.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="196" width="27" height="15" fill="rgb(232,69,44)"/><text x="582.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="212" width="27" height="15" fill="rgb(213,210,10)"/><text x="582.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="228" width="27" height="15" fill="rgb(223,141,29)"/><text x="582.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="244" width="27" height="15" fill="rgb(232,228,14)"/><text x="582.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="260" width="27" height="15" fill="rgb(254,104,12)"/><text x="582.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="276" width="27" height="15" fill="rgb(223,70,22)"/><text x="582.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.33%)</title><rect x="579" y="292" width="27" height="15" fill="rgb(249,193,35)"/><text x="582.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="308" width="27" height="15" fill="rgb(237,190,3)"/><text x="582.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="324" width="27" height="15" fill="rgb(233,103,49)"/><text x="582.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="340" width="27" height="15" fill="rgb(215,222,39)"/><text x="582.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="356" width="27" height="15" fill="rgb(246,176,28)"/><text x="582.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="372" width="27" height="15" fill="rgb(210,187,3)"/><text x="582.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.33%)</title><rect x="579" y="388" width="27" height="15" fill="rgb(247,108,24)"/><text x="582.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="404" width="27" height="15" fill="rgb(206,102,17)"/><text x="582.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="420" width="27" height="15" fill="rgb(206,226,53)"/><text x="582.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="436" width="27" height="15" fill="rgb(240,55,16)"/><text x="582.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="452" width="27" height="15" fill="rgb(220,48,12)"/><text x="582.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="468" width="27" height="15" fill="rgb(242,152,38)"/><text x="582.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.33%)</title><rect x="579" y="484" width="27" height="15" fill="rgb(236,190,32)"/><text x="582.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="500" width="27" height="15" fill="rgb(217,179,8)"/><text x="582.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="516" width="27" height="15" fill="rgb(208,72,14)"/><text x="582.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="532" width="27" height="15" fill="rgb(212,178,35)"/><text x="582.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="548" width="27" height="15" fill="rgb(242,21,22)"/><text x="582.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="564" width="27" height="15" fill="rgb(252,208,17)"/><text x="582.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.33%)</title><rect x="579" y="580" width="27" height="15" fill="rgb(234,183,15)"/><text x="582.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="596" width="27" height="15" fill="rgb(236,206,10)"/><text x="582.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.33%)</title><rect x="579" y="612" width="27" height="15" fill="rgb(222,82,1)"/><text x="582.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="628" width="27" height="15" fill="rgb(225,34,34)"/><text x="582.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="644" width="27" height="15" fill="rgb(230,147,54)"/><text x="582.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="660" width="27" height="15" fill="rgb(242,57,34)"/><text x="582.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="676" width="27" height="15" fill="rgb(248,157,0)"/><text x="582.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="692" width="27" height="15" fill="rgb(224,4,0)"/><text x="582.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="708" width="27" height="15" fill="rgb(206,194,16)"/><text x="582.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.33%)</title><rect x="579" y="724" width="27" height="15" fill="rgb(231,158,30)"/><text x="582.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.33%)</title><rect x="579" y="740" width="27" height="15" fill="rgb(207,214,53)"/><text x="582.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.33%)</title><rect x="579" y="756" width="27" height="15" fill="rgb(247,20,11)"/><text x="582.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.33%)</title><rect x="579" y="772" width="27" height="15" fill="rgb(213,127,17)"/><text x="582.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.33%)</title><rect x="579" y="788" width="27" height="15" fill="rgb(233,136,29)"/><text x="582.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.33%)</title><rect x="579" y="804" width="27" height="15" fill="rgb(221,209,5)"/><text x="582.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.33%)</title><rect x="579" y="820" width="27" height="15" fill="rgb(237,48,54)"/><text x="582.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.33%)</title><rect x="579" y="836" width="27" height="15" fill="rgb(251,36,49)"/><text x="582.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.17%)</title><rect x="593" y="852" width="13" height="15" fill="rgb(224,79,54)"/><text x="596.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.17%)</title><rect x="593" y="868" width="13" height="15" fill="rgb(231,35,40)"/><text x="596.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.78%)</title><rect x="597" y="884" width="9" height="15" fill="rgb(207,44,40)"/><text x="600.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.39%)</title><rect x="602" y="900" width="4" height="15" fill="rgb(244,91,29)"/><text x="605.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.39%)</title><rect x="602" y="916" width="4" height="15" fill="rgb(239,83,7)"/><text x="605.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.39%)</title><rect x="602" y="932" width="4" height="15" fill="rgb(224,70,9)"/><text x="605.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.39%)</title><rect x="602" y="948" width="4" height="15" fill="rgb(223,153,20)"/><text x="605.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.39%)</title><rect x="602" y="964" width="4" height="15" fill="rgb(245,226,47)"/><text x="605.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.39%)</title><rect x="602" y="980" width="4" height="15" fill="rgb(221,154,23)"/><text x="605.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.39%)</title><rect x="606" y="180" width="5" height="15" fill="rgb(229,76,4)"/><text x="609.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="196" width="5" height="15" fill="rgb(242,200,52)"/><text x="609.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="212" width="5" height="15" fill="rgb(245,127,26)"/><text x="609.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="228" width="5" height="15" fill="rgb(233,48,10)"/><text x="609.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="244" width="5" height="15" fill="rgb(230,163,7)"/><text x="609.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="260" width="5" height="15" fill="rgb(231,74,41)"/><text x="609.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="276" width="5" height="15" fill="rgb(206,216,30)"/><text x="609.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.39%)</title><rect x="606" y="292" width="5" height="15" fill="rgb(238,31,10)"/><text x="609.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="308" width="5" height="15" fill="rgb(226,183,2)"/><text x="609.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="324" width="5" height="15" fill="rgb(228,192,18)"/><text x="609.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="340" width="5" height="15" fill="rgb(229,69,0)"/><text x="609.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="356" width="5" height="15" fill="rgb(242,187,51)"/><text x="609.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="372" width="5" height="15" fill="rgb(232,112,13)"/><text x="609.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.39%)</title><rect x="606" y="388" width="5" height="15" fill="rgb(212,90,11)"/><text x="609.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="404" width="5" height="15" fill="rgb(221,19,12)"/><text x="609.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="420" width="5" height="15" fill="rgb(215,212,15)"/><text x="609.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="436" width="5" height="15" fill="rgb(222,35,23)"/><text x="609.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="452" width="5" height="15" fill="rgb(219,41,18)"/><text x="609.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="468" width="5" height="15" fill="rgb(212,22,0)"/><text x="609.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.39%)</title><rect x="606" y="484" width="5" height="15" fill="rgb(219,229,11)"/><text x="609.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="500" width="5" height="15" fill="rgb(218,60,7)"/><text x="609.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="516" width="5" height="15" fill="rgb(247,208,43)"/><text x="609.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="532" width="5" height="15" fill="rgb(211,33,28)"/><text x="609.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="548" width="5" height="15" fill="rgb(229,127,30)"/><text x="609.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="564" width="5" height="15" fill="rgb(211,153,11)"/><text x="609.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.39%)</title><rect x="606" y="580" width="5" height="15" fill="rgb(223,4,13)"/><text x="609.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="596" width="5" height="15" fill="rgb(243,9,23)"/><text x="609.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="612" width="5" height="15" fill="rgb(243,77,13)"/><text x="609.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="628" width="5" height="15" fill="rgb(243,168,27)"/><text x="609.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="644" width="5" height="15" fill="rgb(246,161,5)"/><text x="609.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="660" width="5" height="15" fill="rgb(220,47,15)"/><text x="609.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.39%)</title><rect x="606" y="676" width="5" height="15" fill="rgb(220,165,1)"/><text x="609.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="692" width="5" height="15" fill="rgb(247,102,27)"/><text x="609.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="708" width="5" height="15" fill="rgb(247,123,35)"/><text x="609.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="724" width="5" height="15" fill="rgb(209,57,29)"/><text x="609.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="740" width="5" height="15" fill="rgb(250,33,22)"/><text x="609.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="756" width="5" height="15" fill="rgb(205,150,49)"/><text x="609.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.39%)</title><rect x="606" y="772" width="5" height="15" fill="rgb(242,221,47)"/><text x="609.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="606" y="788" width="5" height="15" fill="rgb(224,215,1)"/><text x="609.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="804" width="5" height="15" fill="rgb(229,74,4)"/><text x="609.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="820" width="5" height="15" fill="rgb(252,99,6)"/><text x="609.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="836" width="5" height="15" fill="rgb(250,150,54)"/><text x="609.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="852" width="5" height="15" fill="rgb(210,108,2)"/><text x="609.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="868" width="5" height="15" fill="rgb(208,100,39)"/><text x="609.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="884" width="5" height="15" fill="rgb(223,169,32)"/><text x="609.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.39%)</title><rect x="606" y="900" width="5" height="15" fill="rgb(229,46,6)"/><text x="609.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="606" y="916" width="5" height="15" fill="rgb(233,119,39)"/><text x="609.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="932" width="5" height="15" fill="rgb(211,63,13)"/><text x="609.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="606" y="948" width="5" height="15" fill="rgb(226,145,19)"/><text x="609.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="606" y="964" width="5" height="15" fill="rgb(210,23,48)"/><text x="609.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="606" y="980" width="5" height="15" fill="rgb(212,180,22)"/><text x="609.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="606" y="996" width="5" height="15" fill="rgb(212,42,20)"/><text x="609.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="606" y="1012" width="5" height="15" fill="rgb(225,142,4)"/><text x="609.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5847) (1 samples, 0.39%)</title><rect x="606" y="1028" width="5" height="15" fill="rgb(225,127,10)"/><text x="609.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.39%)</title><rect x="606" y="1044" width="5" height="15" fill="rgb(246,71,45)"/><text x="609.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.39%)</title><rect x="606" y="1060" width="5" height="15" fill="rgb(252,214,29)"/><text x="609.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.39%)</title><rect x="606" y="1076" width="5" height="15" fill="rgb(240,92,53)"/><text x="609.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.39%)</title><rect x="606" y="1092" width="5" height="15" fill="rgb(239,159,23)"/><text x="609.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.39%)</title><rect x="606" y="1108" width="5" height="15" fill="rgb(217,209,54)"/><text x="609.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.39%)</title><rect x="606" y="1124" width="5" height="15" fill="rgb(249,206,28)"/><text x="609.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.39%)</title><rect x="606" y="1140" width="5" height="15" fill="rgb(253,86,19)"/><text x="609.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.39%)</title><rect x="606" y="1156" width="5" height="15" fill="rgb(230,168,43)"/><text x="609.00" y="1166.50"></text></g><g><title>__init__ (inspect.py:2802) (1 samples, 0.39%)</title><rect x="606" y="1172" width="5" height="15" fill="rgb(216,66,26)"/><text x="609.00" y="1182.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (2 samples, 0.78%)</title><rect x="606" y="148" width="10" height="15" fill="rgb(233,138,36)"/><text x="609.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="606" y="164" width="10" height="15" fill="rgb(242,75,35)"/><text x="609.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="611" y="180" width="5" height="15" fill="rgb(229,174,15)"/><text x="614.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="611" y="196" width="5" height="15" fill="rgb(240,79,8)"/><text x="614.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="611" y="212" width="5" height="15" fill="rgb(222,216,48)"/><text x="614.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="611" y="228" width="5" height="15" fill="rgb(223,97,53)"/><text x="614.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:9) (1 samples, 0.39%)</title><rect x="611" y="244" width="5" height="15" fill="rgb(214,61,54)"/><text x="614.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="611" y="260" width="5" height="15" fill="rgb(254,179,39)"/><text x="614.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="611" y="276" width="5" height="15" fill="rgb(252,136,13)"/><text x="614.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="611" y="292" width="5" height="15" fill="rgb(241,54,45)"/><text x="614.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="611" y="308" width="5" height="15" fill="rgb(212,116,31)"/><text x="614.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="611" y="324" width="5" height="15" fill="rgb(214,24,21)"/><text x="614.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py:32) (1 samples, 0.39%)</title><rect x="611" y="340" width="5" height="15" fill="rgb(252,212,0)"/><text x="614.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="611" y="356" width="5" height="15" fill="rgb(236,59,43)"/><text x="614.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="611" y="372" width="5" height="15" fill="rgb(233,43,17)"/><text x="614.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="611" y="388" width="5" height="15" fill="rgb(232,46,8)"/><text x="614.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="611" y="404" width="5" height="15" fill="rgb(228,33,8)"/><text x="614.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="611" y="420" width="5" height="15" fill="rgb(247,168,3)"/><text x="614.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/extmath.py:21) (1 samples, 0.39%)</title><rect x="611" y="436" width="5" height="15" fill="rgb(241,108,41)"/><text x="614.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="611" y="452" width="5" height="15" fill="rgb(250,28,41)"/><text x="614.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.39%)</title><rect x="611" y="468" width="5" height="15" fill="rgb(231,126,43)"/><text x="614.00" y="478.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.39%)</title><rect x="611" y="484" width="5" height="15" fill="rgb(225,104,46)"/><text x="614.00" y="494.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.39%)</title><rect x="611" y="500" width="5" height="15" fill="rgb(214,165,44)"/><text x="614.00" y="510.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.39%)</title><rect x="611" y="516" width="5" height="15" fill="rgb(245,186,48)"/><text x="614.00" y="526.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.39%)</title><rect x="611" y="532" width="5" height="15" fill="rgb(208,153,44)"/><text x="614.00" y="542.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.39%)</title><rect x="611" y="548" width="5" height="15" fill="rgb(253,175,7)"/><text x="614.00" y="558.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.39%)</title><rect x="611" y="564" width="5" height="15" fill="rgb(250,219,35)"/><text x="614.00" y="574.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.39%)</title><rect x="611" y="580" width="5" height="15" fill="rgb(215,8,54)"/><text x="614.00" y="590.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.39%)</title><rect x="611" y="596" width="5" height="15" fill="rgb(217,86,1)"/><text x="614.00" y="606.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.39%)</title><rect x="611" y="612" width="5" height="15" fill="rgb(231,19,37)"/><text x="614.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.39%)</title><rect x="616" y="244" width="4" height="15" fill="rgb(251,4,3)"/><text x="619.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="260" width="4" height="15" fill="rgb(209,188,33)"/><text x="619.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="276" width="4" height="15" fill="rgb(223,139,13)"/><text x="619.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="292" width="4" height="15" fill="rgb(250,173,27)"/><text x="619.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="308" width="4" height="15" fill="rgb(218,225,27)"/><text x="619.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="324" width="4" height="15" fill="rgb(251,222,2)"/><text x="619.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.39%)</title><rect x="616" y="340" width="4" height="15" fill="rgb(221,105,40)"/><text x="619.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="356" width="4" height="15" fill="rgb(228,115,25)"/><text x="619.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.39%)</title><rect x="616" y="372" width="4" height="15" fill="rgb(253,155,7)"/><text x="619.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="388" width="4" height="15" fill="rgb(213,174,17)"/><text x="619.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="404" width="4" height="15" fill="rgb(254,42,27)"/><text x="619.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="420" width="4" height="15" fill="rgb(208,90,37)"/><text x="619.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="436" width="4" height="15" fill="rgb(238,68,38)"/><text x="619.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="452" width="4" height="15" fill="rgb(238,227,29)"/><text x="619.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="468" width="4" height="15" fill="rgb(238,170,8)"/><text x="619.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.39%)</title><rect x="616" y="484" width="4" height="15" fill="rgb(216,53,29)"/><text x="619.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="500" width="4" height="15" fill="rgb(207,227,35)"/><text x="619.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="516" width="4" height="15" fill="rgb(244,51,44)"/><text x="619.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="532" width="4" height="15" fill="rgb(247,23,47)"/><text x="619.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="548" width="4" height="15" fill="rgb(249,180,15)"/><text x="619.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="564" width="4" height="15" fill="rgb(206,139,34)"/><text x="619.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.39%)</title><rect x="616" y="580" width="4" height="15" fill="rgb(230,229,48)"/><text x="619.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="596" width="4" height="15" fill="rgb(225,200,14)"/><text x="619.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="612" width="4" height="15" fill="rgb(221,146,20)"/><text x="619.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="628" width="4" height="15" fill="rgb(213,65,48)"/><text x="619.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="644" width="4" height="15" fill="rgb(214,136,53)"/><text x="619.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="660" width="4" height="15" fill="rgb(206,215,40)"/><text x="619.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.39%)</title><rect x="616" y="676" width="4" height="15" fill="rgb(245,190,11)"/><text x="619.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="692" width="4" height="15" fill="rgb(237,204,2)"/><text x="619.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="708" width="4" height="15" fill="rgb(231,171,36)"/><text x="619.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="724" width="4" height="15" fill="rgb(252,113,44)"/><text x="619.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="740" width="4" height="15" fill="rgb(244,53,19)"/><text x="619.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="756" width="4" height="15" fill="rgb(242,24,11)"/><text x="619.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.39%)</title><rect x="616" y="772" width="4" height="15" fill="rgb(233,187,31)"/><text x="619.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="788" width="4" height="15" fill="rgb(211,23,35)"/><text x="619.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="804" width="4" height="15" fill="rgb(214,68,13)"/><text x="619.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="820" width="4" height="15" fill="rgb(234,51,40)"/><text x="619.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="836" width="4" height="15" fill="rgb(249,77,0)"/><text x="619.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="852" width="4" height="15" fill="rgb(224,85,3)"/><text x="619.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.39%)</title><rect x="616" y="868" width="4" height="15" fill="rgb(236,83,3)"/><text x="619.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="884" width="4" height="15" fill="rgb(238,229,42)"/><text x="619.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="900" width="4" height="15" fill="rgb(252,216,44)"/><text x="619.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="916" width="4" height="15" fill="rgb(233,69,7)"/><text x="619.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="932" width="4" height="15" fill="rgb(245,58,52)"/><text x="619.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="948" width="4" height="15" fill="rgb(231,225,54)"/><text x="619.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.39%)</title><rect x="616" y="964" width="4" height="15" fill="rgb(233,40,9)"/><text x="619.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="980" width="4" height="15" fill="rgb(230,186,27)"/><text x="619.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="996" width="4" height="15" fill="rgb(239,26,51)"/><text x="619.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="1012" width="4" height="15" fill="rgb(227,193,31)"/><text x="619.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="616" y="1028" width="4" height="15" fill="rgb(243,85,41)"/><text x="619.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="616" y="1044" width="4" height="15" fill="rgb(235,102,44)"/><text x="619.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py:37) (1 samples, 0.39%)</title><rect x="616" y="1060" width="4" height="15" fill="rgb(243,136,1)"/><text x="619.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="616" y="1076" width="4" height="15" fill="rgb(215,42,51)"/><text x="619.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="616" y="1092" width="4" height="15" fill="rgb(207,200,0)"/><text x="619.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="616" y="1108" width="4" height="15" fill="rgb(208,98,49)"/><text x="619.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.39%)</title><rect x="616" y="1124" width="4" height="15" fill="rgb(230,217,35)"/><text x="619.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.39%)</title><rect x="616" y="1140" width="4" height="15" fill="rgb(251,30,44)"/><text x="619.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.39%)</title><rect x="616" y="1156" width="4" height="15" fill="rgb(242,39,39)"/><text x="619.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.39%)</title><rect x="620" y="1268" width="5" height="15" fill="rgb(220,157,52)"/><text x="623.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.39%)</title><rect x="620" y="1284" width="5" height="15" fill="rgb(252,68,28)"/><text x="623.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.39%)</title><rect x="620" y="1300" width="5" height="15" fill="rgb(230,172,26)"/><text x="623.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.78%)</title><rect x="620" y="724" width="9" height="15" fill="rgb(213,27,8)"/><text x="623.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="740" width="9" height="15" fill="rgb(223,56,38)"/><text x="623.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="756" width="9" height="15" fill="rgb(212,124,23)"/><text x="623.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="772" width="9" height="15" fill="rgb(234,101,42)"/><text x="623.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="620" y="788" width="9" height="15" fill="rgb(243,177,54)"/><text x="623.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="620" y="804" width="9" height="15" fill="rgb(211,207,35)"/><text x="623.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.78%)</title><rect x="620" y="820" width="9" height="15" fill="rgb(244,34,21)"/><text x="623.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="836" width="9" height="15" fill="rgb(239,221,6)"/><text x="623.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="852" width="9" height="15" fill="rgb(214,186,14)"/><text x="623.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="868" width="9" height="15" fill="rgb(211,149,13)"/><text x="623.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="620" y="884" width="9" height="15" fill="rgb(235,81,50)"/><text x="623.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="620" y="900" width="9" height="15" fill="rgb(206,118,35)"/><text x="623.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.78%)</title><rect x="620" y="916" width="9" height="15" fill="rgb(211,33,3)"/><text x="623.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="932" width="9" height="15" fill="rgb(213,95,42)"/><text x="623.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="948" width="9" height="15" fill="rgb(242,111,35)"/><text x="623.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="964" width="9" height="15" fill="rgb(244,160,39)"/><text x="623.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="620" y="980" width="9" height="15" fill="rgb(254,89,48)"/><text x="623.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="620" y="996" width="9" height="15" fill="rgb(223,222,36)"/><text x="623.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.78%)</title><rect x="620" y="1012" width="9" height="15" fill="rgb(221,203,2)"/><text x="623.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="1028" width="9" height="15" fill="rgb(231,79,45)"/><text x="623.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="1044" width="9" height="15" fill="rgb(234,16,20)"/><text x="623.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="1060" width="9" height="15" fill="rgb(245,55,1)"/><text x="623.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="620" y="1076" width="9" height="15" fill="rgb(224,98,1)"/><text x="623.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="620" y="1092" width="9" height="15" fill="rgb(244,85,51)"/><text x="623.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.78%)</title><rect x="620" y="1108" width="9" height="15" fill="rgb(245,38,5)"/><text x="623.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="1124" width="9" height="15" fill="rgb(206,221,24)"/><text x="623.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="1140" width="9" height="15" fill="rgb(240,34,13)"/><text x="623.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="1156" width="9" height="15" fill="rgb(240,169,44)"/><text x="623.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="620" y="1172" width="9" height="15" fill="rgb(239,22,13)"/><text x="623.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="620" y="1188" width="9" height="15" fill="rgb(224,114,18)"/><text x="623.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.78%)</title><rect x="620" y="1204" width="9" height="15" fill="rgb(234,83,7)"/><text x="623.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="620" y="1220" width="9" height="15" fill="rgb(243,16,28)"/><text x="623.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="620" y="1236" width="9" height="15" fill="rgb(214,95,37)"/><text x="623.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="620" y="1252" width="9" height="15" fill="rgb(242,121,8)"/><text x="623.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1268" width="4" height="15" fill="rgb(243,9,38)"/><text x="628.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1284" width="4" height="15" fill="rgb(234,186,5)"/><text x="628.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.39%)</title><rect x="625" y="1300" width="4" height="15" fill="rgb(231,150,38)"/><text x="628.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="625" y="1316" width="4" height="15" fill="rgb(219,10,2)"/><text x="628.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="625" y="1332" width="4" height="15" fill="rgb(206,165,15)"/><text x="628.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="625" y="1348" width="4" height="15" fill="rgb(221,171,39)"/><text x="628.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1364" width="4" height="15" fill="rgb(252,143,18)"/><text x="628.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1380" width="4" height="15" fill="rgb(232,159,10)"/><text x="628.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.39%)</title><rect x="625" y="1396" width="4" height="15" fill="rgb(216,213,43)"/><text x="628.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="625" y="1412" width="4" height="15" fill="rgb(220,120,7)"/><text x="628.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="625" y="1428" width="4" height="15" fill="rgb(209,26,23)"/><text x="628.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="625" y="1444" width="4" height="15" fill="rgb(226,214,28)"/><text x="628.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1460" width="4" height="15" fill="rgb(247,23,0)"/><text x="628.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1476" width="4" height="15" fill="rgb(221,112,43)"/><text x="628.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.39%)</title><rect x="625" y="1492" width="4" height="15" fill="rgb(227,206,24)"/><text x="628.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="625" y="1508" width="4" height="15" fill="rgb(248,87,14)"/><text x="628.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="625" y="1524" width="4" height="15" fill="rgb(233,113,35)"/><text x="628.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="625" y="1540" width="4" height="15" fill="rgb(224,82,25)"/><text x="628.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1556" width="4" height="15" fill="rgb(247,226,34)"/><text x="628.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1572" width="4" height="15" fill="rgb(231,19,18)"/><text x="628.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.39%)</title><rect x="625" y="1588" width="4" height="15" fill="rgb(253,36,8)"/><text x="628.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="625" y="1604" width="4" height="15" fill="rgb(226,96,39)"/><text x="628.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="625" y="1620" width="4" height="15" fill="rgb(241,135,23)"/><text x="628.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="625" y="1636" width="4" height="15" fill="rgb(210,209,54)"/><text x="628.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1652" width="4" height="15" fill="rgb(240,98,29)"/><text x="628.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1668" width="4" height="15" fill="rgb(218,64,50)"/><text x="628.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.39%)</title><rect x="625" y="1684" width="4" height="15" fill="rgb(228,61,47)"/><text x="628.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="625" y="1700" width="4" height="15" fill="rgb(254,22,45)"/><text x="628.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="625" y="1716" width="4" height="15" fill="rgb(224,44,52)"/><text x="628.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="625" y="1732" width="4" height="15" fill="rgb(226,29,17)"/><text x="628.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="625" y="1748" width="4" height="15" fill="rgb(219,124,4)"/><text x="628.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="625" y="1764" width="4" height="15" fill="rgb(252,93,2)"/><text x="628.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:656) (1 samples, 0.39%)</title><rect x="625" y="1780" width="4" height="15" fill="rgb(238,161,43)"/><text x="628.00" y="1790.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.39%)</title><rect x="625" y="1796" width="4" height="15" fill="rgb(231,102,23)"/><text x="628.00" y="1806.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.39%)</title><rect x="625" y="1812" width="4" height="15" fill="rgb(248,91,29)"/><text x="628.00" y="1822.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1230) (1 samples, 0.39%)</title><rect x="625" y="1828" width="4" height="15" fill="rgb(248,60,31)"/><text x="628.00" y="1838.50"></text></g><g><title>is_alias (matplotlib/artist.py:1321) (1 samples, 0.39%)</title><rect x="625" y="1844" width="4" height="15" fill="rgb(207,177,9)"/><text x="628.00" y="1854.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.39%)</title><rect x="625" y="1860" width="4" height="15" fill="rgb(207,210,22)"/><text x="628.00" y="1870.50"></text></g><g><title>cleandoc (inspect.py:638) (1 samples, 0.39%)</title><rect x="625" y="1876" width="4" height="15" fill="rgb(249,93,17)"/><text x="628.00" y="1886.50"></text></g><g><title>unicode_length (python3.7) (1 samples, 0.39%)</title><rect x="625" y="1892" width="4" height="15" fill="rgb(253,220,20)"/><text x="628.00" y="1902.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.17%)</title><rect x="620" y="436" width="14" height="15" fill="rgb(218,217,22)"/><text x="623.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.17%)</title><rect x="620" y="452" width="14" height="15" fill="rgb(240,224,44)"/><text x="623.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.17%)</title><rect x="620" y="468" width="14" height="15" fill="rgb(221,10,34)"/><text x="623.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.17%)</title><rect x="620" y="484" width="14" height="15" fill="rgb(248,32,19)"/><text x="623.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.17%)</title><rect x="620" y="500" width="14" height="15" fill="rgb(219,97,5)"/><text x="623.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.17%)</title><rect x="620" y="516" width="14" height="15" fill="rgb(219,49,5)"/><text x="623.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.17%)</title><rect x="620" y="532" width="14" height="15" fill="rgb(213,106,18)"/><text x="623.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.17%)</title><rect x="620" y="548" width="14" height="15" fill="rgb(254,50,10)"/><text x="623.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.17%)</title><rect x="620" y="564" width="14" height="15" fill="rgb(215,18,35)"/><text x="623.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.17%)</title><rect x="620" y="580" width="14" height="15" fill="rgb(246,64,43)"/><text x="623.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.17%)</title><rect x="620" y="596" width="14" height="15" fill="rgb(234,64,46)"/><text x="623.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.17%)</title><rect x="620" y="612" width="14" height="15" fill="rgb(220,199,32)"/><text x="623.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.17%)</title><rect x="620" y="628" width="14" height="15" fill="rgb(242,86,21)"/><text x="623.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.17%)</title><rect x="620" y="644" width="14" height="15" fill="rgb(250,94,42)"/><text x="623.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.17%)</title><rect x="620" y="660" width="14" height="15" fill="rgb(210,11,14)"/><text x="623.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.17%)</title><rect x="620" y="676" width="14" height="15" fill="rgb(210,120,5)"/><text x="623.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.17%)</title><rect x="620" y="692" width="14" height="15" fill="rgb(224,192,52)"/><text x="623.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.17%)</title><rect x="620" y="708" width="14" height="15" fill="rgb(220,10,18)"/><text x="623.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.39%)</title><rect x="629" y="724" width="5" height="15" fill="rgb(205,33,21)"/><text x="632.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="740" width="5" height="15" fill="rgb(211,167,45)"/><text x="632.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.39%)</title><rect x="629" y="756" width="5" height="15" fill="rgb(213,159,9)"/><text x="632.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="772" width="5" height="15" fill="rgb(228,191,39)"/><text x="632.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="788" width="5" height="15" fill="rgb(227,73,8)"/><text x="632.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="629" y="804" width="5" height="15" fill="rgb(238,176,25)"/><text x="632.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="629" y="820" width="5" height="15" fill="rgb(226,83,34)"/><text x="632.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="629" y="836" width="5" height="15" fill="rgb(242,212,39)"/><text x="632.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="852" width="5" height="15" fill="rgb(230,95,17)"/><text x="632.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:8) (1 samples, 0.39%)</title><rect x="629" y="868" width="5" height="15" fill="rgb(250,77,2)"/><text x="632.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="884" width="5" height="15" fill="rgb(210,55,23)"/><text x="632.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="629" y="900" width="5" height="15" fill="rgb(244,215,1)"/><text x="632.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="629" y="916" width="5" height="15" fill="rgb(248,6,0)"/><text x="632.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="629" y="932" width="5" height="15" fill="rgb(209,203,18)"/><text x="632.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="948" width="5" height="15" fill="rgb(246,107,36)"/><text x="632.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py:53) (1 samples, 0.39%)</title><rect x="629" y="964" width="5" height="15" fill="rgb(247,18,26)"/><text x="632.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="629" y="980" width="5" height="15" fill="rgb(240,13,40)"/><text x="632.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="996" width="5" height="15" fill="rgb(252,41,50)"/><text x="632.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="1012" width="5" height="15" fill="rgb(238,189,28)"/><text x="632.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="629" y="1028" width="5" height="15" fill="rgb(223,98,49)"/><text x="632.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="629" y="1044" width="5" height="15" fill="rgb(239,38,27)"/><text x="632.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="629" y="1060" width="5" height="15" fill="rgb(239,171,30)"/><text x="632.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="1076" width="5" height="15" fill="rgb(213,123,31)"/><text x="632.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py:46) (1 samples, 0.39%)</title><rect x="629" y="1092" width="5" height="15" fill="rgb(212,1,17)"/><text x="632.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="629" y="1108" width="5" height="15" fill="rgb(214,153,29)"/><text x="632.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="1124" width="5" height="15" fill="rgb(230,191,27)"/><text x="632.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="1140" width="5" height="15" fill="rgb(245,215,52)"/><text x="632.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="629" y="1156" width="5" height="15" fill="rgb(249,194,2)"/><text x="632.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="629" y="1172" width="5" height="15" fill="rgb(229,201,39)"/><text x="632.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="629" y="1188" width="5" height="15" fill="rgb(233,181,6)"/><text x="632.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="629" y="1204" width="5" height="15" fill="rgb(215,45,45)"/><text x="632.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py:29) (1 samples, 0.39%)</title><rect x="629" y="1220" width="5" height="15" fill="rgb(245,32,51)"/><text x="632.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="629" y="1236" width="5" height="15" fill="rgb(252,23,44)"/><text x="632.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="629" y="1252" width="5" height="15" fill="rgb(215,194,22)"/><text x="632.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="629" y="1268" width="5" height="15" fill="rgb(252,206,35)"/><text x="632.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.39%)</title><rect x="629" y="1284" width="5" height="15" fill="rgb(215,76,19)"/><text x="632.00" y="1294.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.39%)</title><rect x="629" y="1300" width="5" height="15" fill="rgb(235,38,22)"/><text x="632.00" y="1310.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.39%)</title><rect x="629" y="1316" width="5" height="15" fill="rgb(252,186,39)"/><text x="632.00" y="1326.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.39%)</title><rect x="634" y="1380" width="5" height="15" fill="rgb(217,135,11)"/><text x="637.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.39%)</title><rect x="634" y="1396" width="5" height="15" fill="rgb(245,167,2)"/><text x="637.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.39%)</title><rect x="634" y="1412" width="5" height="15" fill="rgb(248,63,23)"/><text x="637.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.78%)</title><rect x="634" y="1108" width="9" height="15" fill="rgb(249,126,43)"/><text x="637.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="634" y="1124" width="9" height="15" fill="rgb(245,153,26)"/><text x="637.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="634" y="1140" width="9" height="15" fill="rgb(243,210,13)"/><text x="637.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="634" y="1156" width="9" height="15" fill="rgb(215,185,33)"/><text x="637.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="634" y="1172" width="9" height="15" fill="rgb(210,11,0)"/><text x="637.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="634" y="1188" width="9" height="15" fill="rgb(228,41,29)"/><text x="637.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.78%)</title><rect x="634" y="1204" width="9" height="15" fill="rgb(209,81,46)"/><text x="637.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.78%)</title><rect x="634" y="1220" width="9" height="15" fill="rgb(254,111,0)"/><text x="637.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.78%)</title><rect x="634" y="1236" width="9" height="15" fill="rgb(232,131,12)"/><text x="637.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.78%)</title><rect x="634" y="1252" width="9" height="15" fill="rgb(250,98,33)"/><text x="637.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.78%)</title><rect x="634" y="1268" width="9" height="15" fill="rgb(206,169,53)"/><text x="637.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.78%)</title><rect x="634" y="1284" width="9" height="15" fill="rgb(206,129,2)"/><text x="637.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.78%)</title><rect x="634" y="1300" width="9" height="15" fill="rgb(248,211,21)"/><text x="637.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.78%)</title><rect x="634" y="1316" width="9" height="15" fill="rgb(254,75,51)"/><text x="637.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.78%)</title><rect x="634" y="1332" width="9" height="15" fill="rgb(252,193,31)"/><text x="637.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.78%)</title><rect x="634" y="1348" width="9" height="15" fill="rgb(226,185,22)"/><text x="637.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.78%)</title><rect x="634" y="1364" width="9" height="15" fill="rgb(212,167,26)"/><text x="637.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:585) (1 samples, 0.39%)</title><rect x="639" y="1380" width="4" height="15" fill="rgb(216,224,20)"/><text x="642.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:13) (1 samples, 0.39%)</title><rect x="643" y="1236" width="5" height="15" fill="rgb(226,22,9)"/><text x="646.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="643" y="1252" width="5" height="15" fill="rgb(225,229,20)"/><text x="646.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="643" y="1268" width="5" height="15" fill="rgb(206,197,41)"/><text x="646.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="643" y="1284" width="5" height="15" fill="rgb(232,26,16)"/><text x="646.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="643" y="1300" width="5" height="15" fill="rgb(229,117,52)"/><text x="646.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="643" y="1316" width="5" height="15" fill="rgb(207,120,41)"/><text x="646.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.39%)</title><rect x="643" y="1332" width="5" height="15" fill="rgb(253,53,16)"/><text x="646.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.39%)</title><rect x="643" y="1348" width="5" height="15" fill="rgb(217,28,26)"/><text x="646.00" y="1358.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.39%)</title><rect x="643" y="1364" width="5" height="15" fill="rgb(231,113,42)"/><text x="646.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.39%)</title><rect x="643" y="1380" width="5" height="15" fill="rgb(237,193,19)"/><text x="646.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.39%)</title><rect x="643" y="1396" width="5" height="15" fill="rgb(230,226,23)"/><text x="646.00" y="1406.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.39%)</title><rect x="648" y="1572" width="4" height="15" fill="rgb(236,127,17)"/><text x="651.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.39%)</title><rect x="648" y="1588" width="4" height="15" fill="rgb(246,149,6)"/><text x="651.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.39%)</title><rect x="648" y="1604" width="4" height="15" fill="rgb(240,93,25)"/><text x="651.00" y="1614.50"></text></g><g><title>pybind11_meta_getattro (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.39%)</title><rect x="648" y="1620" width="4" height="15" fill="rgb(237,147,40)"/><text x="651.00" y="1630.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.39%)</title><rect x="652" y="1572" width="5" height="15" fill="rgb(212,147,29)"/><text x="655.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.39%)</title><rect x="652" y="1588" width="5" height="15" fill="rgb(227,70,3)"/><text x="655.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.17%)</title><rect x="648" y="1460" width="13" height="15" fill="rgb(241,128,12)"/><text x="651.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.17%)</title><rect x="648" y="1476" width="13" height="15" fill="rgb(249,8,19)"/><text x="651.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.17%)</title><rect x="648" y="1492" width="13" height="15" fill="rgb(220,106,36)"/><text x="651.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.17%)</title><rect x="648" y="1508" width="13" height="15" fill="rgb(252,204,11)"/><text x="651.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.17%)</title><rect x="648" y="1524" width="13" height="15" fill="rgb(213,168,51)"/><text x="651.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.17%)</title><rect x="648" y="1540" width="13" height="15" fill="rgb(218,210,53)"/><text x="651.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.17%)</title><rect x="648" y="1556" width="13" height="15" fill="rgb(251,149,20)"/><text x="651.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.39%)</title><rect x="657" y="1572" width="4" height="15" fill="rgb(206,9,37)"/><text x="660.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.39%)</title><rect x="657" y="1588" width="4" height="15" fill="rgb(210,107,47)"/><text x="660.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.39%)</title><rect x="657" y="1604" width="4" height="15" fill="rgb(225,192,21)"/><text x="660.00" y="1614.50"></text></g><g><title>0x7ffb41786100 (?) (1 samples, 0.39%)</title><rect x="657" y="1620" width="4" height="15" fill="rgb(205,11,23)"/><text x="660.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:4) (19 samples, 7.39%)</title><rect x="579" y="52" width="87" height="15" fill="rgb(230,152,34)"/><text x="582.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 7.39%)</title><rect x="579" y="68" width="87" height="15" fill="rgb(248,133,35)"/><text x="582.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 7.39%)</title><rect x="579" y="84" width="87" height="15" fill="rgb(234,111,54)"/><text x="582.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 7.39%)</title><rect x="579" y="100" width="87" height="15" fill="rgb(229,19,3)"/><text x="582.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (19 samples, 7.39%)</title><rect x="579" y="116" width="87" height="15" fill="rgb(225,140,46)"/><text x="582.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 7.39%)</title><rect x="579" y="132" width="87" height="15" fill="rgb(238,213,14)"/><text x="582.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (11 samples, 4.28%)</title><rect x="616" y="148" width="50" height="15" fill="rgb(248,116,54)"/><text x="619.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 4.28%)</title><rect x="616" y="164" width="50" height="15" fill="rgb(241,195,53)"/><text x="619.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 4.28%)</title><rect x="616" y="180" width="50" height="15" fill="rgb(206,115,28)"/><text x="619.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 4.28%)</title><rect x="616" y="196" width="50" height="15" fill="rgb(235,214,22)"/><text x="619.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 4.28%)</title><rect x="616" y="212" width="50" height="15" fill="rgb(215,38,16)"/><text x="619.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 4.28%)</title><rect x="616" y="228" width="50" height="15" fill="rgb(205,168,43)"/><text x="619.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (10 samples, 3.89%)</title><rect x="620" y="244" width="46" height="15" fill="rgb(206,91,51)"/><text x="623.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.89%)</title><rect x="620" y="260" width="46" height="15" fill="rgb(219,123,30)"/><text x="623.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.89%)</title><rect x="620" y="276" width="46" height="15" fill="rgb(249,144,29)"/><text x="623.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.89%)</title><rect x="620" y="292" width="46" height="15" fill="rgb(207,23,43)"/><text x="623.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.89%)</title><rect x="620" y="308" width="46" height="15" fill="rgb(238,22,50)"/><text x="623.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.89%)</title><rect x="620" y="324" width="46" height="15" fill="rgb(250,5,52)"/><text x="623.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (10 samples, 3.89%)</title><rect x="620" y="340" width="46" height="15" fill="rgb(240,99,35)"/><text x="623.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.89%)</title><rect x="620" y="356" width="46" height="15" fill="rgb(254,143,11)"/><text x="623.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.89%)</title><rect x="620" y="372" width="46" height="15" fill="rgb(229,175,53)"/><text x="623.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.89%)</title><rect x="620" y="388" width="46" height="15" fill="rgb(216,118,5)"/><text x="623.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.89%)</title><rect x="620" y="404" width="46" height="15" fill="rgb(226,3,18)"/><text x="623.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.89%)</title><rect x="620" y="420" width="46" height="15" fill="rgb(207,147,29)"/><text x="623.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 2.72%)</title><rect x="634" y="436" width="32" height="15" fill="rgb(252,95,17)"/><text x="637.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="452" width="32" height="15" fill="rgb(207,150,11)"/><text x="637.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.72%)</title><rect x="634" y="468" width="32" height="15" fill="rgb(221,86,3)"/><text x="637.00" y="478.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="484" width="32" height="15" fill="rgb(227,110,8)"/><text x="637.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="500" width="32" height="15" fill="rgb(233,101,10)"/><text x="637.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="516" width="32" height="15" fill="rgb(219,28,29)"/><text x="637.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="532" width="32" height="15" fill="rgb(219,127,46)"/><text x="637.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="548" width="32" height="15" fill="rgb(213,72,52)"/><text x="637.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="564" width="32" height="15" fill="rgb(248,222,27)"/><text x="637.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 2.72%)</title><rect x="634" y="580" width="32" height="15" fill="rgb(226,62,17)"/><text x="637.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="596" width="32" height="15" fill="rgb(214,178,0)"/><text x="637.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="612" width="32" height="15" fill="rgb(210,194,35)"/><text x="637.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="628" width="32" height="15" fill="rgb(232,157,37)"/><text x="637.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="644" width="32" height="15" fill="rgb(224,95,47)"/><text x="637.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="660" width="32" height="15" fill="rgb(239,213,19)"/><text x="637.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (7 samples, 2.72%)</title><rect x="634" y="676" width="32" height="15" fill="rgb(226,110,20)"/><text x="637.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="692" width="32" height="15" fill="rgb(205,188,20)"/><text x="637.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="708" width="32" height="15" fill="rgb(226,77,42)"/><text x="637.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="724" width="32" height="15" fill="rgb(225,134,16)"/><text x="637.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="740" width="32" height="15" fill="rgb(215,157,22)"/><text x="637.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="756" width="32" height="15" fill="rgb(230,150,7)"/><text x="637.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (7 samples, 2.72%)</title><rect x="634" y="772" width="32" height="15" fill="rgb(244,116,32)"/><text x="637.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="788" width="32" height="15" fill="rgb(219,22,19)"/><text x="637.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="804" width="32" height="15" fill="rgb(249,15,6)"/><text x="637.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="820" width="32" height="15" fill="rgb(215,53,19)"/><text x="637.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="836" width="32" height="15" fill="rgb(227,186,42)"/><text x="637.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="852" width="32" height="15" fill="rgb(223,134,44)"/><text x="637.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (7 samples, 2.72%)</title><rect x="634" y="868" width="32" height="15" fill="rgb(250,56,14)"/><text x="637.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="884" width="32" height="15" fill="rgb(208,190,33)"/><text x="637.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.72%)</title><rect x="634" y="900" width="32" height="15" fill="rgb(249,91,22)"/><text x="637.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="916" width="32" height="15" fill="rgb(206,141,49)"/><text x="637.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="932" width="32" height="15" fill="rgb(252,32,5)"/><text x="637.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="948" width="32" height="15" fill="rgb(217,124,42)"/><text x="637.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="964" width="32" height="15" fill="rgb(251,166,0)"/><text x="637.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="980" width="32" height="15" fill="rgb(213,33,33)"/><text x="637.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="996" width="32" height="15" fill="rgb(211,194,37)"/><text x="637.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (7 samples, 2.72%)</title><rect x="634" y="1012" width="32" height="15" fill="rgb(238,109,14)"/><text x="637.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.72%)</title><rect x="634" y="1028" width="32" height="15" fill="rgb(246,143,25)"/><text x="637.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.72%)</title><rect x="634" y="1044" width="32" height="15" fill="rgb(235,151,45)"/><text x="637.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.72%)</title><rect x="634" y="1060" width="32" height="15" fill="rgb(211,135,27)"/><text x="637.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.72%)</title><rect x="634" y="1076" width="32" height="15" fill="rgb(211,160,49)"/><text x="637.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.72%)</title><rect x="634" y="1092" width="32" height="15" fill="rgb(214,111,48)"/><text x="637.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.95%)</title><rect x="643" y="1108" width="23" height="15" fill="rgb(241,136,38)"/><text x="646.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.95%)</title><rect x="643" y="1124" width="23" height="15" fill="rgb(249,43,28)"/><text x="646.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.95%)</title><rect x="643" y="1140" width="23" height="15" fill="rgb(205,157,45)"/><text x="646.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.95%)</title><rect x="643" y="1156" width="23" height="15" fill="rgb(245,25,1)"/><text x="646.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.95%)</title><rect x="643" y="1172" width="23" height="15" fill="rgb(248,20,16)"/><text x="646.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.95%)</title><rect x="643" y="1188" width="23" height="15" fill="rgb(231,92,25)"/><text x="646.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.95%)</title><rect x="643" y="1204" width="23" height="15" fill="rgb(219,25,43)"/><text x="646.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.95%)</title><rect x="643" y="1220" width="23" height="15" fill="rgb(215,178,9)"/><text x="646.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.56%)</title><rect x="648" y="1236" width="18" height="15" fill="rgb(237,81,37)"/><text x="651.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.56%)</title><rect x="648" y="1252" width="18" height="15" fill="rgb(239,152,29)"/><text x="651.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.56%)</title><rect x="648" y="1268" width="18" height="15" fill="rgb(228,123,42)"/><text x="651.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.56%)</title><rect x="648" y="1284" width="18" height="15" fill="rgb(216,108,29)"/><text x="651.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.56%)</title><rect x="648" y="1300" width="18" height="15" fill="rgb(222,227,11)"/><text x="651.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.56%)</title><rect x="648" y="1316" width="18" height="15" fill="rgb(215,116,46)"/><text x="651.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.56%)</title><rect x="648" y="1332" width="18" height="15" fill="rgb(207,40,14)"/><text x="651.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.56%)</title><rect x="648" y="1348" width="18" height="15" fill="rgb(220,161,32)"/><text x="651.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.56%)</title><rect x="648" y="1364" width="18" height="15" fill="rgb(232,82,21)"/><text x="651.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.56%)</title><rect x="648" y="1380" width="18" height="15" fill="rgb(244,181,49)"/><text x="651.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.56%)</title><rect x="648" y="1396" width="18" height="15" fill="rgb(226,177,50)"/><text x="651.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.56%)</title><rect x="648" y="1412" width="18" height="15" fill="rgb(207,192,19)"/><text x="651.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.56%)</title><rect x="648" y="1428" width="18" height="15" fill="rgb(240,81,1)"/><text x="651.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.56%)</title><rect x="648" y="1444" width="18" height="15" fill="rgb(238,29,37)"/><text x="651.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.39%)</title><rect x="661" y="1460" width="5" height="15" fill="rgb(251,86,52)"/><text x="664.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="1476" width="5" height="15" fill="rgb(227,38,49)"/><text x="664.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="1492" width="5" height="15" fill="rgb(254,34,16)"/><text x="664.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="1508" width="5" height="15" fill="rgb(250,145,47)"/><text x="664.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="1524" width="5" height="15" fill="rgb(208,83,17)"/><text x="664.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1540" width="5" height="15" fill="rgb(215,136,18)"/><text x="664.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.39%)</title><rect x="661" y="1556" width="5" height="15" fill="rgb(251,157,28)"/><text x="664.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.39%)</title><rect x="661" y="1572" width="5" height="15" fill="rgb(218,207,38)"/><text x="664.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="1588" width="5" height="15" fill="rgb(228,226,10)"/><text x="664.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="1604" width="5" height="15" fill="rgb(213,87,4)"/><text x="664.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="1620" width="5" height="15" fill="rgb(232,157,14)"/><text x="664.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="1636" width="5" height="15" fill="rgb(244,11,23)"/><text x="664.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1652" width="5" height="15" fill="rgb(248,53,27)"/><text x="664.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.39%)</title><rect x="661" y="1668" width="5" height="15" fill="rgb(251,24,8)"/><text x="664.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="1684" width="5" height="15" fill="rgb(229,213,0)"/><text x="664.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="1700" width="5" height="15" fill="rgb(243,222,1)"/><text x="664.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="1716" width="5" height="15" fill="rgb(225,204,20)"/><text x="664.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="1732" width="5" height="15" fill="rgb(209,78,31)"/><text x="664.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1748" width="5" height="15" fill="rgb(214,167,36)"/><text x="664.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.39%)</title><rect x="661" y="1764" width="5" height="15" fill="rgb(223,209,2)"/><text x="664.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.39%)</title><rect x="661" y="1780" width="5" height="15" fill="rgb(245,31,24)"/><text x="664.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1796" width="5" height="15" fill="rgb(239,88,13)"/><text x="664.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="1812" width="5" height="15" fill="rgb(253,97,33)"/><text x="664.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="1828" width="5" height="15" fill="rgb(251,48,27)"/><text x="664.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="1844" width="5" height="15" fill="rgb(245,44,54)"/><text x="664.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="1860" width="5" height="15" fill="rgb(244,13,2)"/><text x="664.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1876" width="5" height="15" fill="rgb(240,146,25)"/><text x="664.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.39%)</title><rect x="661" y="1892" width="5" height="15" fill="rgb(247,198,0)"/><text x="664.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="1908" width="5" height="15" fill="rgb(211,172,49)"/><text x="664.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="1924" width="5" height="15" fill="rgb(233,192,45)"/><text x="664.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="1940" width="5" height="15" fill="rgb(224,115,4)"/><text x="664.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="1956" width="5" height="15" fill="rgb(208,123,40)"/><text x="664.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="1972" width="5" height="15" fill="rgb(209,217,10)"/><text x="664.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:642) (1 samples, 0.39%)</title><rect x="661" y="1988" width="5" height="15" fill="rgb(241,221,46)"/><text x="664.00" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="2004" width="5" height="15" fill="rgb(207,220,16)"/><text x="664.00" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="2020" width="5" height="15" fill="rgb(252,188,21)"/><text x="664.00" y="2030.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.39%)</title><rect x="661" y="2036" width="5" height="15" fill="rgb(221,179,21)"/><text x="664.00" y="2046.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.39%)</title><rect x="661" y="2052" width="5" height="15" fill="rgb(225,66,1)"/><text x="664.00" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="2068" width="5" height="15" fill="rgb(211,159,5)"/><text x="664.00" y="2078.50"></text></g><g><title>&lt;module&gt; (markupsafe/__init__.py:321) (1 samples, 0.39%)</title><rect x="661" y="2084" width="5" height="15" fill="rgb(245,63,51)"/><text x="664.00" y="2094.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.39%)</title><rect x="661" y="2100" width="5" height="15" fill="rgb(206,167,11)"/><text x="664.00" y="2110.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.39%)</title><rect x="661" y="2116" width="5" height="15" fill="rgb(227,68,33)"/><text x="664.00" y="2126.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.39%)</title><rect x="661" y="2132" width="5" height="15" fill="rgb(254,190,15)"/><text x="664.00" y="2142.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.39%)</title><rect x="661" y="2148" width="5" height="15" fill="rgb(240,229,19)"/><text x="664.00" y="2158.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.39%)</title><rect x="661" y="2164" width="5" height="15" fill="rgb(251,202,49)"/><text x="664.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.39%)</title><rect x="661" y="2180" width="5" height="15" fill="rgb(233,161,30)"/><text x="664.00" y="2190.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2196" width="5" height="15" fill="rgb(238,93,49)"/><text x="664.00" y="2206.50"></text></g><g><title>0x7ffb536ba995 (libdl-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2212" width="5" height="15" fill="rgb(242,75,9)"/><text x="664.00" y="2222.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2228" width="5" height="15" fill="rgb(224,153,23)"/><text x="664.00" y="2238.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2244" width="5" height="15" fill="rgb(235,86,13)"/><text x="664.00" y="2254.50"></text></g><g><title>0x7ffb536ba258 (libdl-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2260" width="5" height="15" fill="rgb(226,219,20)"/><text x="664.00" y="2270.50"></text></g><g><title>0x7ffb53707d7a (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2276" width="5" height="15" fill="rgb(233,149,41)"/><text x="664.00" y="2286.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2292" width="5" height="15" fill="rgb(209,191,18)"/><text x="664.00" y="2302.50"></text></g><g><title>0x7ffb537081f0 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2308" width="5" height="15" fill="rgb(242,83,48)"/><text x="664.00" y="2318.50"></text></g><g><title>0x7ffb53702876 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2324" width="5" height="15" fill="rgb(250,138,11)"/><text x="664.00" y="2334.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2340" width="5" height="15" fill="rgb(207,35,32)"/><text x="664.00" y="2350.50"></text></g><g><title>0x7ffb53702501 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2356" width="5" height="15" fill="rgb(234,60,20)"/><text x="664.00" y="2366.50"></text></g><g><title>0x7ffb536fdad9 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2372" width="5" height="15" fill="rgb(234,54,47)"/><text x="664.00" y="2382.50"></text></g><g><title>0x7ffb537054c5 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2388" width="5" height="15" fill="rgb(208,101,21)"/><text x="664.00" y="2398.50"></text></g><g><title>0x7ffb53710053 (ld-2.29.so) (1 samples, 0.39%)</title><rect x="661" y="2404" width="5" height="15" fill="rgb(226,186,5)"/><text x="664.00" y="2414.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.39%)</title><rect x="675" y="116" width="5" height="15" fill="rgb(219,39,21)"/><text x="678.00" y="126.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.39%)</title><rect x="694" y="164" width="4" height="15" fill="rgb(246,50,0)"/><text x="697.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (3 samples, 1.17%)</title><rect x="698" y="164" width="14" height="15" fill="rgb(216,39,40)"/><text x="701.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.39%)</title><rect x="712" y="164" width="5" height="15" fill="rgb(250,227,6)"/><text x="715.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 2.33%)</title><rect x="726" y="180" width="27" height="15" fill="rgb(253,109,40)"/><text x="729.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.39%)</title><rect x="749" y="196" width="4" height="15" fill="rgb(233,41,45)"/><text x="752.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:117) (1 samples, 0.39%)</title><rect x="767" y="196" width="5" height="15" fill="rgb(218,78,44)"/><text x="770.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.39%)</title><rect x="776" y="244" width="5" height="15" fill="rgb(235,166,27)"/><text x="779.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.39%)</title><rect x="781" y="276" width="4" height="15" fill="rgb(229,159,28)"/><text x="784.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.39%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(234,185,35)"/><text x="784.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.56%)</title><rect x="772" y="212" width="18" height="15" fill="rgb(212,204,4)"/><text x="775.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 1.17%)</title><rect x="776" y="228" width="14" height="15" fill="rgb(237,214,51)"/><text x="779.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.78%)</title><rect x="781" y="244" width="9" height="15" fill="rgb(221,168,33)"/><text x="784.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.78%)</title><rect x="781" y="260" width="9" height="15" fill="rgb(248,33,36)"/><text x="784.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.39%)</title><rect x="785" y="276" width="5" height="15" fill="rgb(237,63,39)"/><text x="788.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.39%)</title><rect x="785" y="292" width="5" height="15" fill="rgb(215,212,5)"/><text x="788.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.39%)</title><rect x="790" y="228" width="5" height="15" fill="rgb(242,110,44)"/><text x="793.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 2.33%)</title><rect x="772" y="196" width="27" height="15" fill="rgb(250,150,13)"/><text x="775.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.78%)</title><rect x="790" y="212" width="9" height="15" fill="rgb(235,22,13)"/><text x="793.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.39%)</title><rect x="795" y="228" width="4" height="15" fill="rgb(254,161,20)"/><text x="798.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.39%)</title><rect x="799" y="260" width="5" height="15" fill="rgb(250,13,54)"/><text x="802.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.39%)</title><rect x="799" y="276" width="5" height="15" fill="rgb(212,126,17)"/><text x="802.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.39%)</title><rect x="804" y="260" width="4" height="15" fill="rgb(243,162,31)"/><text x="807.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.78%)</title><rect x="813" y="308" width="9" height="15" fill="rgb(253,180,5)"/><text x="816.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.78%)</title><rect x="813" y="324" width="9" height="15" fill="rgb(212,81,31)"/><text x="816.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.78%)</title><rect x="813" y="340" width="9" height="15" fill="rgb(213,81,43)"/><text x="816.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.78%)</title><rect x="813" y="356" width="9" height="15" fill="rgb(237,146,45)"/><text x="816.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.78%)</title><rect x="813" y="372" width="9" height="15" fill="rgb(248,199,7)"/><text x="816.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.78%)</title><rect x="813" y="388" width="9" height="15" fill="rgb(208,206,30)"/><text x="816.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.39%)</title><rect x="822" y="420" width="5" height="15" fill="rgb(210,9,35)"/><text x="825.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.39%)</title><rect x="822" y="436" width="5" height="15" fill="rgb(237,11,32)"/><text x="825.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.78%)</title><rect x="822" y="356" width="9" height="15" fill="rgb(247,194,32)"/><text x="825.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.78%)</title><rect x="822" y="372" width="9" height="15" fill="rgb(230,150,17)"/><text x="825.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.78%)</title><rect x="822" y="388" width="9" height="15" fill="rgb(205,65,40)"/><text x="825.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.78%)</title><rect x="822" y="404" width="9" height="15" fill="rgb(220,106,0)"/><text x="825.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.39%)</title><rect x="827" y="420" width="4" height="15" fill="rgb(214,66,28)"/><text x="830.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.39%)</title><rect x="827" y="436" width="4" height="15" fill="rgb(251,110,4)"/><text x="830.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.39%)</title><rect x="827" y="452" width="4" height="15" fill="rgb(245,105,41)"/><text x="830.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.39%)</title><rect x="827" y="468" width="4" height="15" fill="rgb(212,168,22)"/><text x="830.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.39%)</title><rect x="831" y="356" width="5" height="15" fill="rgb(218,97,41)"/><text x="834.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.39%)</title><rect x="831" y="372" width="5" height="15" fill="rgb(252,107,48)"/><text x="834.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.39%)</title><rect x="836" y="372" width="5" height="15" fill="rgb(209,44,41)"/><text x="839.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.39%)</title><rect x="836" y="388" width="5" height="15" fill="rgb(227,9,30)"/><text x="839.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.39%)</title><rect x="841" y="372" width="4" height="15" fill="rgb(235,61,32)"/><text x="844.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.39%)</title><rect x="841" y="388" width="4" height="15" fill="rgb(245,61,5)"/><text x="844.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.39%)</title><rect x="845" y="372" width="5" height="15" fill="rgb(216,1,16)"/><text x="848.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.39%)</title><rect x="845" y="388" width="5" height="15" fill="rgb(206,69,31)"/><text x="848.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 1.56%)</title><rect x="836" y="356" width="18" height="15" fill="rgb(224,144,4)"/><text x="839.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.39%)</title><rect x="850" y="372" width="4" height="15" fill="rgb(222,130,39)"/><text x="853.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.39%)</title><rect x="850" y="388" width="4" height="15" fill="rgb(205,10,36)"/><text x="853.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 4.28%)</title><rect x="808" y="260" width="51" height="15" fill="rgb(247,219,32)"/><text x="811.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 4.28%)</title><rect x="808" y="276" width="51" height="15" fill="rgb(227,109,49)"/><text x="811.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.89%)</title><rect x="813" y="292" width="46" height="15" fill="rgb(247,14,5)"/><text x="816.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 3.11%)</title><rect x="822" y="308" width="37" height="15" fill="rgb(220,121,49)"/><text x="825.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 3.11%)</title><rect x="822" y="324" width="37" height="15" fill="rgb(236,47,12)"/><text x="825.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 3.11%)</title><rect x="822" y="340" width="37" height="15" fill="rgb(218,53,31)"/><text x="825.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.39%)</title><rect x="854" y="356" width="5" height="15" fill="rgb(223,198,54)"/><text x="857.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.39%)</title><rect x="854" y="372" width="5" height="15" fill="rgb(249,47,4)"/><text x="857.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.39%)</title><rect x="859" y="324" width="5" height="15" fill="rgb(241,74,18)"/><text x="862.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.39%)</title><rect x="859" y="340" width="5" height="15" fill="rgb(238,4,43)"/><text x="862.00" y="350.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (15 samples, 5.84%)</title><rect x="799" y="244" width="69" height="15" fill="rgb(224,193,23)"/><text x="802.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.78%)</title><rect x="859" y="260" width="9" height="15" fill="rgb(250,13,43)"/><text x="862.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.78%)</title><rect x="859" y="276" width="9" height="15" fill="rgb(220,122,18)"/><text x="862.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.78%)</title><rect x="859" y="292" width="9" height="15" fill="rgb(242,30,3)"/><text x="862.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.78%)</title><rect x="859" y="308" width="9" height="15" fill="rgb(230,139,18)"/><text x="862.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.39%)</title><rect x="864" y="324" width="4" height="15" fill="rgb(252,164,24)"/><text x="867.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.39%)</title><rect x="864" y="340" width="4" height="15" fill="rgb(245,50,12)"/><text x="867.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:169) (1 samples, 0.39%)</title><rect x="864" y="356" width="4" height="15" fill="rgb(217,40,10)"/><text x="867.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.39%)</title><rect x="873" y="276" width="4" height="15" fill="rgb(249,38,54)"/><text x="876.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.39%)</title><rect x="873" y="292" width="4" height="15" fill="rgb(226,129,13)"/><text x="876.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.39%)</title><rect x="873" y="308" width="4" height="15" fill="rgb(253,204,17)"/><text x="876.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.39%)</title><rect x="873" y="324" width="4" height="15" fill="rgb(225,226,0)"/><text x="876.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.39%)</title><rect x="873" y="340" width="4" height="15" fill="rgb(245,74,9)"/><text x="876.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.39%)</title><rect x="873" y="356" width="4" height="15" fill="rgb(226,7,7)"/><text x="876.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.39%)</title><rect x="873" y="372" width="4" height="15" fill="rgb(237,123,45)"/><text x="876.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (18 samples, 7.00%)</title><rect x="799" y="196" width="83" height="15" fill="rgb(216,35,5)"/><text x="802.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 7.00%)</title><rect x="799" y="212" width="83" height="15" fill="rgb(235,42,18)"/><text x="802.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (18 samples, 7.00%)</title><rect x="799" y="228" width="83" height="15" fill="rgb(224,171,54)"/><text x="802.00" y="238.50">_run (mlp..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (3 samples, 1.17%)</title><rect x="868" y="244" width="14" height="15" fill="rgb(240,200,13)"/><text x="871.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.78%)</title><rect x="873" y="260" width="9" height="15" fill="rgb(221,1,12)"/><text x="876.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.39%)</title><rect x="877" y="276" width="5" height="15" fill="rgb(220,171,12)"/><text x="880.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.39%)</title><rect x="877" y="292" width="5" height="15" fill="rgb(239,68,40)"/><text x="880.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.39%)</title><rect x="877" y="308" width="5" height="15" fill="rgb(214,192,54)"/><text x="880.00" y="318.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.39%)</title><rect x="886" y="260" width="5" height="15" fill="rgb(237,71,12)"/><text x="889.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:707) (1 samples, 0.39%)</title><rect x="886" y="276" width="5" height="15" fill="rgb(241,48,2)"/><text x="889.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2216) (1 samples, 0.39%)</title><rect x="900" y="292" width="5" height="15" fill="rgb(241,211,42)"/><text x="903.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.39%)</title><rect x="905" y="292" width="4" height="15" fill="rgb(205,136,12)"/><text x="908.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.39%)</title><rect x="909" y="324" width="5" height="15" fill="rgb(219,206,5)"/><text x="912.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.39%)</title><rect x="909" y="340" width="5" height="15" fill="rgb(249,223,36)"/><text x="912.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.39%)</title><rect x="909" y="356" width="5" height="15" fill="rgb(253,212,31)"/><text x="912.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.39%)</title><rect x="909" y="372" width="5" height="15" fill="rgb(211,133,12)"/><text x="912.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.39%)</title><rect x="909" y="388" width="5" height="15" fill="rgb(224,123,21)"/><text x="912.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.39%)</title><rect x="909" y="404" width="5" height="15" fill="rgb(225,19,41)"/><text x="912.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (8 samples, 3.11%)</title><rect x="882" y="228" width="37" height="15" fill="rgb(217,81,54)"/><text x="885.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (8 samples, 3.11%)</title><rect x="882" y="244" width="37" height="15" fill="rgb(252,218,24)"/><text x="885.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 2.33%)</title><rect x="891" y="260" width="28" height="15" fill="rgb(239,15,11)"/><text x="894.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.56%)</title><rect x="900" y="276" width="19" height="15" fill="rgb(207,165,30)"/><text x="903.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.78%)</title><rect x="909" y="292" width="10" height="15" fill="rgb(246,162,8)"/><text x="912.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.78%)</title><rect x="909" y="308" width="10" height="15" fill="rgb(219,194,11)"/><text x="912.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.39%)</title><rect x="914" y="324" width="5" height="15" fill="rgb(250,190,4)"/><text x="917.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.39%)</title><rect x="914" y="340" width="5" height="15" fill="rgb(209,4,34)"/><text x="917.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.39%)</title><rect x="914" y="356" width="5" height="15" fill="rgb(212,61,12)"/><text x="917.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.39%)</title><rect x="914" y="372" width="5" height="15" fill="rgb(205,101,14)"/><text x="917.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.39%)</title><rect x="914" y="388" width="5" height="15" fill="rgb(234,38,26)"/><text x="917.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.39%)</title><rect x="919" y="308" width="4" height="15" fill="rgb(244,27,8)"/><text x="922.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.39%)</title><rect x="919" y="324" width="4" height="15" fill="rgb(215,0,28)"/><text x="922.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.78%)</title><rect x="919" y="292" width="9" height="15" fill="rgb(222,88,18)"/><text x="922.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.39%)</title><rect x="923" y="308" width="5" height="15" fill="rgb(251,65,47)"/><text x="926.00" y="318.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.39%)</title><rect x="923" y="324" width="5" height="15" fill="rgb(246,207,9)"/><text x="926.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (3 samples, 1.17%)</title><rect x="919" y="228" width="13" height="15" fill="rgb(240,155,9)"/><text x="922.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.17%)</title><rect x="919" y="244" width="13" height="15" fill="rgb(225,162,36)"/><text x="922.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.17%)</title><rect x="919" y="260" width="13" height="15" fill="rgb(243,118,24)"/><text x="922.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.17%)</title><rect x="919" y="276" width="13" height="15" fill="rgb(218,180,39)"/><text x="922.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.39%)</title><rect x="928" y="292" width="4" height="15" fill="rgb(221,175,40)"/><text x="931.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.39%)</title><rect x="928" y="308" width="4" height="15" fill="rgb(243,178,30)"/><text x="931.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.39%)</title><rect x="928" y="324" width="4" height="15" fill="rgb(225,28,37)"/><text x="931.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.39%)</title><rect x="932" y="228" width="5" height="15" fill="rgb(231,13,43)"/><text x="935.00" y="238.50"></text></g><g><title>0x7ffb53448e50 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="946" y="308" width="5" height="15" fill="rgb(208,36,27)"/><text x="949.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 1.17%)</title><rect x="942" y="244" width="13" height="15" fill="rgb(211,199,3)"/><text x="945.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.17%)</title><rect x="942" y="260" width="13" height="15" fill="rgb(253,213,1)"/><text x="945.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (3 samples, 1.17%)</title><rect x="942" y="276" width="13" height="15" fill="rgb(246,115,4)"/><text x="945.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (3 samples, 1.17%)</title><rect x="942" y="292" width="13" height="15" fill="rgb(250,228,10)"/><text x="945.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.39%)</title><rect x="951" y="308" width="4" height="15" fill="rgb(240,212,8)"/><text x="954.00" y="318.50"></text></g><g><title>0x7ffb53510151 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="951" y="324" width="4" height="15" fill="rgb(238,28,44)"/><text x="954.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.39%)</title><rect x="955" y="308" width="5" height="15" fill="rgb(229,42,54)"/><text x="958.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.39%)</title><rect x="955" y="324" width="5" height="15" fill="rgb(209,113,14)"/><text x="958.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.39%)</title><rect x="955" y="340" width="5" height="15" fill="rgb(236,21,14)"/><text x="958.00" y="350.50"></text></g><g><title>0x7ffb533ea7a5 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="955" y="356" width="5" height="15" fill="rgb(251,208,6)"/><text x="958.00" y="366.50"></text></g><g><title>0x7ffb533ea9f1 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="955" y="372" width="5" height="15" fill="rgb(228,106,14)"/><text x="958.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:333) (1 samples, 0.39%)</title><rect x="960" y="340" width="5" height="15" fill="rgb(217,134,33)"/><text x="963.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.39%)</title><rect x="965" y="340" width="4" height="15" fill="rgb(212,229,6)"/><text x="968.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.39%)</title><rect x="965" y="356" width="4" height="15" fill="rgb(240,147,43)"/><text x="968.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.39%)</title><rect x="965" y="372" width="4" height="15" fill="rgb(253,113,31)"/><text x="968.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.39%)</title><rect x="969" y="340" width="5" height="15" fill="rgb(219,107,9)"/><text x="972.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.39%)</title><rect x="969" y="356" width="5" height="15" fill="rgb(216,121,41)"/><text x="972.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.39%)</title><rect x="969" y="372" width="5" height="15" fill="rgb(254,134,10)"/><text x="972.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (9 samples, 3.50%)</title><rect x="937" y="228" width="41" height="15" fill="rgb(240,6,26)"/><text x="940.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.95%)</title><rect x="955" y="244" width="23" height="15" fill="rgb(254,176,40)"/><text x="958.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.95%)</title><rect x="955" y="260" width="23" height="15" fill="rgb(208,44,23)"/><text x="958.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (5 samples, 1.95%)</title><rect x="955" y="276" width="23" height="15" fill="rgb(218,68,0)"/><text x="958.00" y="286.50">e..</text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (5 samples, 1.95%)</title><rect x="955" y="292" width="23" height="15" fill="rgb(209,15,1)"/><text x="958.00" y="302.50">P..</text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (4 samples, 1.56%)</title><rect x="960" y="308" width="18" height="15" fill="rgb(235,99,4)"/><text x="963.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (4 samples, 1.56%)</title><rect x="960" y="324" width="18" height="15" fill="rgb(248,109,1)"/><text x="963.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.39%)</title><rect x="974" y="340" width="4" height="15" fill="rgb(250,126,9)"/><text x="977.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.39%)</title><rect x="974" y="356" width="4" height="15" fill="rgb(233,39,5)"/><text x="977.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:135) (1 samples, 0.39%)</title><rect x="974" y="372" width="4" height="15" fill="rgb(231,139,45)"/><text x="977.00" y="382.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.39%)</title><rect x="992" y="292" width="5" height="15" fill="rgb(247,63,8)"/><text x="995.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (26 samples, 10.12%)</title><rect x="882" y="196" width="119" height="15" fill="rgb(247,216,35)"/><text x="885.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 10.12%)</title><rect x="882" y="212" width="119" height="15" fill="rgb(227,98,35)"/><text x="885.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 1.95%)</title><rect x="978" y="228" width="23" height="15" fill="rgb(254,174,35)"/><text x="981.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 1.56%)</title><rect x="983" y="244" width="18" height="15" fill="rgb(208,90,45)"/><text x="986.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.17%)</title><rect x="987" y="260" width="14" height="15" fill="rgb(242,1,7)"/><text x="990.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 1.17%)</title><rect x="987" y="276" width="14" height="15" fill="rgb(205,69,43)"/><text x="990.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.39%)</title><rect x="997" y="292" width="4" height="15" fill="rgb(249,99,38)"/><text x="1000.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.39%)</title><rect x="997" y="308" width="4" height="15" fill="rgb(233,213,42)"/><text x="1000.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.39%)</title><rect x="997" y="324" width="4" height="15" fill="rgb(241,169,9)"/><text x="1000.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.39%)</title><rect x="997" y="340" width="4" height="15" fill="rgb(208,171,6)"/><text x="1000.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.39%)</title><rect x="997" y="356" width="4" height="15" fill="rgb(213,114,6)"/><text x="1000.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.39%)</title><rect x="997" y="372" width="4" height="15" fill="rgb(222,72,4)"/><text x="1000.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (55 samples, 21.40%)</title><rect x="753" y="180" width="253" height="15" fill="rgb(217,56,36)"/><text x="756.00" y="190.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.39%)</title><rect x="1001" y="196" width="5" height="15" fill="rgb(254,213,51)"/><text x="1004.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.39%)</title><rect x="1001" y="212" width="5" height="15" fill="rgb(227,164,46)"/><text x="1004.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.39%)</title><rect x="1006" y="180" width="4" height="15" fill="rgb(218,113,20)"/><text x="1009.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.78%)</title><rect x="1010" y="180" width="10" height="15" fill="rgb(216,209,7)"/><text x="1013.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.39%)</title><rect x="1020" y="180" width="4" height="15" fill="rgb(215,84,38)"/><text x="1023.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.56%)</title><rect x="1024" y="180" width="19" height="15" fill="rgb(243,41,27)"/><text x="1027.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (72 samples, 28.02%)</title><rect x="717" y="164" width="330" height="15" fill="rgb(209,158,2)"/><text x="720.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.39%)</title><rect x="1043" y="180" width="4" height="15" fill="rgb(223,223,44)"/><text x="1046.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:45) (87 samples, 33.85%)</title><rect x="666" y="52" width="400" height="15" fill="rgb(208,56,51)"/><text x="669.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:44) (87 samples, 33.85%)</title><rect x="666" y="68" width="400" height="15" fill="rgb(245,212,49)"/><text x="669.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:29) (87 samples, 33.85%)</title><rect x="666" y="84" width="400" height="15" fill="rgb(221,19,18)"/><text x="669.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:23) (87 samples, 33.85%)</title><rect x="666" y="100" width="400" height="15" fill="rgb(237,190,30)"/><text x="669.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (84 samples, 32.68%)</title><rect x="680" y="116" width="386" height="15" fill="rgb(238,1,26)"/><text x="683.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (83 samples, 32.30%)</title><rect x="684" y="132" width="382" height="15" fill="rgb(209,35,15)"/><text x="687.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (82 samples, 31.91%)</title><rect x="689" y="148" width="377" height="15" fill="rgb(253,172,35)"/><text x="692.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.56%)</title><rect x="1047" y="164" width="19" height="15" fill="rgb(223,228,25)"/><text x="1050.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.78%)</title><rect x="1056" y="180" width="10" height="15" fill="rgb(211,209,38)"/><text x="1059.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.39%)</title><rect x="1061" y="196" width="5" height="15" fill="rgb(239,135,35)"/><text x="1064.00" y="206.50"></text></g><g><title>0x7ffb53510e61 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="1061" y="212" width="5" height="15" fill="rgb(249,121,32)"/><text x="1064.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.39%)</title><rect x="1084" y="148" width="4" height="15" fill="rgb(252,159,4)"/><text x="1087.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.39%)</title><rect x="1088" y="196" width="5" height="15" fill="rgb(239,44,0)"/><text x="1091.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.39%)</title><rect x="1088" y="212" width="5" height="15" fill="rgb(227,17,22)"/><text x="1091.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1088" y="228" width="5" height="15" fill="rgb(253,18,8)"/><text x="1091.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1088" y="244" width="5" height="15" fill="rgb(245,50,14)"/><text x="1091.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1088" y="260" width="5" height="15" fill="rgb(242,205,17)"/><text x="1091.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1088" y="276" width="5" height="15" fill="rgb(251,216,32)"/><text x="1091.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.39%)</title><rect x="1088" y="292" width="5" height="15" fill="rgb(205,73,33)"/><text x="1091.00" y="302.50"></text></g><g><title>0x7ffb134a2ff9 (?) (1 samples, 0.39%)</title><rect x="1098" y="212" width="4" height="15" fill="rgb(240,208,18)"/><text x="1101.00" y="222.50"></text></g><g><title>0x7ffb1349def6 (?) (1 samples, 0.39%)</title><rect x="1098" y="228" width="4" height="15" fill="rgb(247,207,25)"/><text x="1101.00" y="238.50"></text></g><g><title>0x7ffb13492962 (?) (1 samples, 0.39%)</title><rect x="1098" y="244" width="4" height="15" fill="rgb(220,156,44)"/><text x="1101.00" y="254.50"></text></g><g><title>0x7ffb134c67a7 (?) (1 samples, 0.39%)</title><rect x="1098" y="260" width="4" height="15" fill="rgb(231,228,15)"/><text x="1101.00" y="270.50"></text></g><g><title>0x7ffb134c6379 (?) (1 samples, 0.39%)</title><rect x="1098" y="276" width="4" height="15" fill="rgb(207,172,42)"/><text x="1101.00" y="286.50"></text></g><g><title>0x7ffb139248b8 (?) (1 samples, 0.39%)</title><rect x="1098" y="292" width="4" height="15" fill="rgb(217,212,36)"/><text x="1101.00" y="302.50"></text></g><g><title>0x7ffb139227d3 (?) (1 samples, 0.39%)</title><rect x="1098" y="308" width="4" height="15" fill="rgb(252,3,26)"/><text x="1101.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.39%)</title><rect x="1098" y="324" width="4" height="15" fill="rgb(251,95,3)"/><text x="1101.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1102" y="260" width="5" height="15" fill="rgb(237,121,45)"/><text x="1105.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1102" y="276" width="5" height="15" fill="rgb(247,16,3)"/><text x="1105.00" y="286.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceAllocate (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1111" y="452" width="5" height="15" fill="rgb(239,35,0)"/><text x="1114.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="340" width="10" height="15" fill="rgb(231,93,29)"/><text x="1114.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="356" width="10" height="15" fill="rgb(213,66,14)"/><text x="1114.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="372" width="10" height="15" fill="rgb(239,30,7)"/><text x="1114.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="388" width="10" height="15" fill="rgb(217,12,49)"/><text x="1114.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="404" width="10" height="15" fill="rgb(250,164,27)"/><text x="1114.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="420" width="10" height="15" fill="rgb(248,69,42)"/><text x="1114.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1111" y="436" width="10" height="15" fill="rgb(248,110,33)"/><text x="1114.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1116" y="452" width="5" height="15" fill="rgb(228,6,29)"/><text x="1119.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1121" y="340" width="4" height="15" fill="rgb(210,142,14)"/><text x="1124.00" y="350.50"></text></g><g><title>0x7ffb53432a4c (libc-2.29.so) (1 samples, 0.39%)</title><rect x="1121" y="356" width="4" height="15" fill="rgb(233,24,19)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1125" y="340" width="5" height="15" fill="rgb(252,96,8)"/><text x="1128.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1125" y="356" width="5" height="15" fill="rgb(215,147,21)"/><text x="1128.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1125" y="372" width="5" height="15" fill="rgb(219,188,30)"/><text x="1128.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="340" width="4" height="15" fill="rgb(206,166,36)"/><text x="1133.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="356" width="4" height="15" fill="rgb(253,152,35)"/><text x="1133.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="372" width="4" height="15" fill="rgb(232,199,6)"/><text x="1133.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="388" width="4" height="15" fill="rgb(237,76,42)"/><text x="1133.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="404" width="4" height="15" fill="rgb(248,216,0)"/><text x="1133.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="420" width="4" height="15" fill="rgb(220,175,6)"/><text x="1133.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="436" width="4" height="15" fill="rgb(210,18,34)"/><text x="1133.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="452" width="4" height="15" fill="rgb(243,185,49)"/><text x="1133.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="468" width="4" height="15" fill="rgb(213,77,5)"/><text x="1133.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1130" y="484" width="4" height="15" fill="rgb(214,145,45)"/><text x="1133.00" y="494.50"></text></g><g><title>0x7ffb534416d2 (libc-2.29.so) (1 samples, 0.39%)</title><rect x="1130" y="500" width="4" height="15" fill="rgb(215,32,1)"/><text x="1133.00" y="510.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.72%)</title><rect x="1111" y="292" width="33" height="15" fill="rgb(244,136,14)"/><text x="1114.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.72%)</title><rect x="1111" y="308" width="33" height="15" fill="rgb(237,212,50)"/><text x="1114.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.72%)</title><rect x="1111" y="324" width="33" height="15" fill="rgb(227,140,33)"/><text x="1114.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1134" y="340" width="10" height="15" fill="rgb(222,105,47)"/><text x="1137.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1134" y="356" width="10" height="15" fill="rgb(244,23,27)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="372" width="5" height="15" fill="rgb(220,71,18)"/><text x="1142.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="388" width="5" height="15" fill="rgb(233,224,48)"/><text x="1142.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="404" width="5" height="15" fill="rgb(213,203,33)"/><text x="1142.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="420" width="5" height="15" fill="rgb(218,151,43)"/><text x="1142.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="436" width="5" height="15" fill="rgb(233,86,10)"/><text x="1142.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="452" width="5" height="15" fill="rgb(247,183,1)"/><text x="1142.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="468" width="5" height="15" fill="rgb(231,20,24)"/><text x="1142.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="484" width="5" height="15" fill="rgb(252,197,43)"/><text x="1142.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="500" width="5" height="15" fill="rgb(241,153,49)"/><text x="1142.00" y="510.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1139" y="516" width="5" height="15" fill="rgb(250,109,29)"/><text x="1142.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.50%)</title><rect x="1107" y="260" width="41" height="15" fill="rgb(254,118,27)"/><text x="1110.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.50%)</title><rect x="1107" y="276" width="41" height="15" fill="rgb(208,109,0)"/><text x="1110.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.39%)</title><rect x="1144" y="292" width="4" height="15" fill="rgb(251,155,53)"/><text x="1147.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1148" y="260" width="5" height="15" fill="rgb(217,108,51)"/><text x="1151.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1148" y="276" width="5" height="15" fill="rgb(236,131,16)"/><text x="1151.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1148" y="292" width="5" height="15" fill="rgb(245,127,23)"/><text x="1151.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1148" y="308" width="5" height="15" fill="rgb(242,143,16)"/><text x="1151.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1148" y="324" width="5" height="15" fill="rgb(218,201,47)"/><text x="1151.00" y="334.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1153" y="260" width="4" height="15" fill="rgb(247,65,26)"/><text x="1156.00" y="270.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.78%)</title><rect x="1157" y="260" width="10" height="15" fill="rgb(218,68,50)"/><text x="1160.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.84%)</title><rect x="1102" y="244" width="69" height="15" fill="rgb(205,1,45)"/><text x="1105.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1167" y="260" width="4" height="15" fill="rgb(227,103,41)"/><text x="1170.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1167" y="276" width="4" height="15" fill="rgb(207,126,44)"/><text x="1170.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1167" y="292" width="4" height="15" fill="rgb(239,45,17)"/><text x="1170.00" y="302.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1171" y="244" width="5" height="15" fill="rgb(218,51,47)"/><text x="1174.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1171" y="260" width="5" height="15" fill="rgb(224,93,52)"/><text x="1174.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (20 samples, 7.78%)</title><rect x="1088" y="164" width="92" height="15" fill="rgb(237,12,23)"/><text x="1091.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (20 samples, 7.78%)</title><rect x="1088" y="180" width="92" height="15" fill="rgb(237,16,27)"/><text x="1091.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (19 samples, 7.39%)</title><rect x="1093" y="196" width="87" height="15" fill="rgb(241,31,28)"/><text x="1096.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.61%)</title><rect x="1102" y="212" width="78" height="15" fill="rgb(207,121,47)"/><text x="1105.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.61%)</title><rect x="1102" y="228" width="78" height="15" fill="rgb(247,210,31)"/><text x="1105.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1176" y="244" width="4" height="15" fill="rgb(221,56,32)"/><text x="1179.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.39%)</title><rect x="1176" y="260" width="4" height="15" fill="rgb(225,135,22)"/><text x="1179.00" y="270.50"></text></g><g><title>all (257 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,23,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:52) (27 samples, 10.51%)</title><rect x="1066" y="52" width="124" height="15" fill="rgb(215,46,54)"/><text x="1069.00" y="62.50">&lt;module&gt; (bench..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:51) (27 samples, 10.51%)</title><rect x="1066" y="68" width="124" height="15" fill="rgb(244,73,52)"/><text x="1069.00" y="78.50">profile_ort (be..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:29) (27 samples, 10.51%)</title><rect x="1066" y="84" width="124" height="15" fill="rgb(236,193,23)"/><text x="1069.00" y="94.50">setup_profile (..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_4_12_float_.py:23) (27 samples, 10.51%)</title><rect x="1066" y="100" width="124" height="15" fill="rgb(222,175,38)"/><text x="1069.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (26 samples, 10.12%)</title><rect x="1070" y="116" width="120" height="15" fill="rgb(211,52,39)"/><text x="1073.00" y="126.50">time_predict (..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (24 samples, 9.34%)</title><rect x="1079" y="132" width="111" height="15" fill="rgb(237,141,22)"/><text x="1082.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (22 samples, 8.56%)</title><rect x="1088" y="148" width="102" height="15" fill="rgb(248,175,34)"/><text x="1091.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.78%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(211,89,30)"/><text x="1183.00" y="174.50"></text></g></g></svg>