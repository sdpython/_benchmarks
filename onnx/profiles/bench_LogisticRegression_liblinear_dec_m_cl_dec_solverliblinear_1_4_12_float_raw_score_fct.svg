<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2326" onload="init(evt)" viewBox="0 0 1200 2326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2326" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2309.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2309.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(242,96,3)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(205,173,15)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(228,215,23)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(210,212,25)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(248,176,17)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(213,137,17)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(242,192,50)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="10" y="980" width="6" height="15" fill="rgb(246,49,32)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="10" y="996" width="6" height="15" fill="rgb(251,149,9)"/><text x="13.00" y="1006.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.51%)</title><rect x="10" y="1012" width="6" height="15" fill="rgb(254,122,30)"/><text x="13.00" y="1022.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(228,82,45)"/><text x="19.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(249,78,0)"/><text x="19.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(247,78,13)"/><text x="19.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(238,179,9)"/><text x="19.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(240,146,13)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(225,35,6)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(223,212,35)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="244" width="24" height="15" fill="rgb(210,11,42)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="260" width="24" height="15" fill="rgb(231,216,19)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="276" width="24" height="15" fill="rgb(240,101,35)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(243,56,47)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(254,146,10)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(222,78,16)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(243,73,46)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="356" width="24" height="15" fill="rgb(254,106,27)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="372" width="24" height="15" fill="rgb(214,96,0)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 2.05%)</title><rect x="10" y="388" width="24" height="15" fill="rgb(215,83,52)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="404" width="24" height="15" fill="rgb(218,60,31)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="420" width="24" height="15" fill="rgb(237,159,32)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="436" width="24" height="15" fill="rgb(210,43,26)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="452" width="24" height="15" fill="rgb(229,99,8)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="468" width="24" height="15" fill="rgb(220,44,16)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 2.05%)</title><rect x="10" y="484" width="24" height="15" fill="rgb(245,220,40)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="500" width="24" height="15" fill="rgb(235,94,26)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="516" width="24" height="15" fill="rgb(211,41,15)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="532" width="24" height="15" fill="rgb(226,3,48)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="548" width="24" height="15" fill="rgb(227,198,50)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="564" width="24" height="15" fill="rgb(211,2,21)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 2.05%)</title><rect x="10" y="580" width="24" height="15" fill="rgb(238,103,6)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="596" width="24" height="15" fill="rgb(228,35,4)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="612" width="24" height="15" fill="rgb(235,90,16)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="628" width="24" height="15" fill="rgb(237,13,33)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="644" width="24" height="15" fill="rgb(239,228,0)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="660" width="24" height="15" fill="rgb(251,118,53)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="676" width="24" height="15" fill="rgb(224,135,29)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="692" width="24" height="15" fill="rgb(205,11,52)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="708" width="24" height="15" fill="rgb(252,155,53)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="724" width="24" height="15" fill="rgb(239,155,38)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="740" width="24" height="15" fill="rgb(243,204,31)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="756" width="24" height="15" fill="rgb(207,43,18)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="772" width="24" height="15" fill="rgb(223,160,19)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="10" y="788" width="24" height="15" fill="rgb(253,149,4)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="10" y="804" width="24" height="15" fill="rgb(215,69,48)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="820" width="24" height="15" fill="rgb(210,192,15)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="836" width="24" height="15" fill="rgb(228,224,16)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 2.05%)</title><rect x="10" y="852" width="24" height="15" fill="rgb(236,6,43)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.54%)</title><rect x="16" y="868" width="18" height="15" fill="rgb(205,109,49)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.54%)</title><rect x="16" y="884" width="18" height="15" fill="rgb(209,4,16)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="22" y="900" width="12" height="15" fill="rgb(210,217,5)"/><text x="25.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 1.03%)</title><rect x="22" y="916" width="12" height="15" fill="rgb(226,162,28)"/><text x="25.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="28" y="932" width="6" height="15" fill="rgb(253,14,16)"/><text x="31.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.51%)</title><rect x="28" y="948" width="6" height="15" fill="rgb(253,157,12)"/><text x="31.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.51%)</title><rect x="28" y="964" width="6" height="15" fill="rgb(205,76,50)"/><text x="31.00" y="974.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.51%)</title><rect x="28" y="980" width="6" height="15" fill="rgb(225,213,28)"/><text x="31.00" y="990.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.51%)</title><rect x="34" y="1636" width="6" height="15" fill="rgb(241,178,21)"/><text x="37.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.51%)</title><rect x="34" y="1652" width="6" height="15" fill="rgb(233,78,48)"/><text x="37.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.51%)</title><rect x="34" y="1668" width="6" height="15" fill="rgb(218,55,23)"/><text x="37.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.51%)</title><rect x="34" y="1684" width="6" height="15" fill="rgb(216,176,50)"/><text x="37.00" y="1694.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.51%)</title><rect x="34" y="1700" width="6" height="15" fill="rgb(238,87,3)"/><text x="37.00" y="1710.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.51%)</title><rect x="34" y="1716" width="6" height="15" fill="rgb(231,136,7)"/><text x="37.00" y="1726.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.51%)</title><rect x="34" y="1732" width="6" height="15" fill="rgb(245,58,9)"/><text x="37.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="484" width="12" height="15" fill="rgb(236,69,23)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="500" width="12" height="15" fill="rgb(205,208,2)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="516" width="12" height="15" fill="rgb(234,124,4)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="532" width="12" height="15" fill="rgb(226,217,52)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="548" width="12" height="15" fill="rgb(236,46,37)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="564" width="12" height="15" fill="rgb(209,134,40)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 1.03%)</title><rect x="34" y="580" width="12" height="15" fill="rgb(212,201,43)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="596" width="12" height="15" fill="rgb(212,212,22)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="612" width="12" height="15" fill="rgb(240,191,17)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="628" width="12" height="15" fill="rgb(210,151,5)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="644" width="12" height="15" fill="rgb(215,81,8)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="660" width="12" height="15" fill="rgb(221,219,14)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 1.03%)</title><rect x="34" y="676" width="12" height="15" fill="rgb(246,63,23)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="692" width="12" height="15" fill="rgb(210,65,1)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="708" width="12" height="15" fill="rgb(230,71,3)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="724" width="12" height="15" fill="rgb(228,76,39)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="740" width="12" height="15" fill="rgb(237,189,41)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="756" width="12" height="15" fill="rgb(253,100,9)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 1.03%)</title><rect x="34" y="772" width="12" height="15" fill="rgb(216,206,40)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="788" width="12" height="15" fill="rgb(243,216,6)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="804" width="12" height="15" fill="rgb(217,31,19)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="820" width="12" height="15" fill="rgb(206,217,10)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="836" width="12" height="15" fill="rgb(217,191,4)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="852" width="12" height="15" fill="rgb(206,154,31)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 1.03%)</title><rect x="34" y="868" width="12" height="15" fill="rgb(237,25,16)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="884" width="12" height="15" fill="rgb(227,194,53)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="900" width="12" height="15" fill="rgb(221,128,42)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="916" width="12" height="15" fill="rgb(232,115,30)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="932" width="12" height="15" fill="rgb(218,33,21)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="948" width="12" height="15" fill="rgb(235,73,46)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="964" width="12" height="15" fill="rgb(241,110,8)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="980" width="12" height="15" fill="rgb(220,26,29)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="996" width="12" height="15" fill="rgb(249,207,33)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 1.03%)</title><rect x="34" y="1012" width="12" height="15" fill="rgb(212,113,13)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1028" width="12" height="15" fill="rgb(219,185,39)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1044" width="12" height="15" fill="rgb(211,113,13)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1060" width="12" height="15" fill="rgb(206,45,37)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="1076" width="12" height="15" fill="rgb(219,204,15)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1092" width="12" height="15" fill="rgb(247,146,5)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 1.03%)</title><rect x="34" y="1108" width="12" height="15" fill="rgb(206,74,21)"/><text x="37.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1124" width="12" height="15" fill="rgb(243,10,10)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1140" width="12" height="15" fill="rgb(230,198,53)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1156" width="12" height="15" fill="rgb(220,27,48)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1172" width="12" height="15" fill="rgb(230,127,5)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1188" width="12" height="15" fill="rgb(251,45,13)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="1204" width="12" height="15" fill="rgb(224,222,38)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1220" width="12" height="15" fill="rgb(250,92,53)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 1.03%)</title><rect x="34" y="1236" width="12" height="15" fill="rgb(223,82,1)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1252" width="12" height="15" fill="rgb(234,171,15)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1268" width="12" height="15" fill="rgb(250,159,2)"/><text x="37.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1284" width="12" height="15" fill="rgb(220,13,35)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1300" width="12" height="15" fill="rgb(205,81,49)"/><text x="37.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1316" width="12" height="15" fill="rgb(213,219,21)"/><text x="37.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="1332" width="12" height="15" fill="rgb(249,195,6)"/><text x="37.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1348" width="12" height="15" fill="rgb(232,39,17)"/><text x="37.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 1.03%)</title><rect x="34" y="1364" width="12" height="15" fill="rgb(211,212,5)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1380" width="12" height="15" fill="rgb(247,101,14)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1396" width="12" height="15" fill="rgb(242,204,19)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1412" width="12" height="15" fill="rgb(218,145,26)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="1428" width="12" height="15" fill="rgb(245,197,1)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1444" width="12" height="15" fill="rgb(249,77,47)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 1.03%)</title><rect x="34" y="1460" width="12" height="15" fill="rgb(218,192,26)"/><text x="37.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1476" width="12" height="15" fill="rgb(235,156,40)"/><text x="37.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1492" width="12" height="15" fill="rgb(241,162,22)"/><text x="37.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1508" width="12" height="15" fill="rgb(206,145,8)"/><text x="37.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="34" y="1524" width="12" height="15" fill="rgb(225,147,23)"/><text x="37.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="34" y="1540" width="12" height="15" fill="rgb(221,172,6)"/><text x="37.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 1.03%)</title><rect x="34" y="1556" width="12" height="15" fill="rgb(233,83,5)"/><text x="37.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 1.03%)</title><rect x="34" y="1572" width="12" height="15" fill="rgb(228,208,6)"/><text x="37.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 1.03%)</title><rect x="34" y="1588" width="12" height="15" fill="rgb(216,66,29)"/><text x="37.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 1.03%)</title><rect x="34" y="1604" width="12" height="15" fill="rgb(215,59,28)"/><text x="37.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 1.03%)</title><rect x="34" y="1620" width="12" height="15" fill="rgb(230,185,9)"/><text x="37.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.51%)</title><rect x="40" y="1636" width="6" height="15" fill="rgb(205,157,7)"/><text x="43.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1652" width="6" height="15" fill="rgb(211,20,38)"/><text x="43.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1668" width="6" height="15" fill="rgb(244,1,48)"/><text x="43.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1684" width="6" height="15" fill="rgb(212,183,19)"/><text x="43.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1700" width="6" height="15" fill="rgb(240,184,44)"/><text x="43.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1716" width="6" height="15" fill="rgb(231,42,39)"/><text x="43.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1732" width="6" height="15" fill="rgb(219,164,8)"/><text x="43.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1748" width="6" height="15" fill="rgb(227,23,38)"/><text x="43.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1764" width="6" height="15" fill="rgb(253,110,45)"/><text x="43.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1780" width="6" height="15" fill="rgb(214,117,44)"/><text x="43.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1796" width="6" height="15" fill="rgb(251,34,44)"/><text x="43.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1812" width="6" height="15" fill="rgb(231,25,31)"/><text x="43.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1828" width="6" height="15" fill="rgb(253,123,5)"/><text x="43.00" y="1838.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1844" width="6" height="15" fill="rgb(208,6,25)"/><text x="43.00" y="1854.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1860" width="6" height="15" fill="rgb(234,111,17)"/><text x="43.00" y="1870.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1876" width="6" height="15" fill="rgb(217,119,15)"/><text x="43.00" y="1886.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1892" width="6" height="15" fill="rgb(205,180,16)"/><text x="43.00" y="1902.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1908" width="6" height="15" fill="rgb(241,78,31)"/><text x="43.00" y="1918.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1924" width="6" height="15" fill="rgb(221,50,2)"/><text x="43.00" y="1934.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1940" width="6" height="15" fill="rgb(218,103,40)"/><text x="43.00" y="1950.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1956" width="6" height="15" fill="rgb(251,191,13)"/><text x="43.00" y="1966.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1972" width="6" height="15" fill="rgb(215,95,7)"/><text x="43.00" y="1982.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="1988" width="6" height="15" fill="rgb(252,137,36)"/><text x="43.00" y="1998.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2004" width="6" height="15" fill="rgb(230,172,45)"/><text x="43.00" y="2014.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2020" width="6" height="15" fill="rgb(252,3,35)"/><text x="43.00" y="2030.50"></text></g><g><title>parse_postfix (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2036" width="6" height="15" fill="rgb(217,72,44)"/><text x="43.00" y="2046.50"></text></g><g><title>parse_call (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2052" width="6" height="15" fill="rgb(251,66,4)"/><text x="43.00" y="2062.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2068" width="6" height="15" fill="rgb(251,36,11)"/><text x="43.00" y="2078.50"></text></g><g><title>parse_condexpr (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2084" width="6" height="15" fill="rgb(230,223,48)"/><text x="43.00" y="2094.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2100" width="6" height="15" fill="rgb(211,106,26)"/><text x="43.00" y="2110.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2116" width="6" height="15" fill="rgb(234,172,22)"/><text x="43.00" y="2126.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2132" width="6" height="15" fill="rgb(248,173,20)"/><text x="43.00" y="2142.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2148" width="6" height="15" fill="rgb(237,169,53)"/><text x="43.00" y="2158.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2164" width="6" height="15" fill="rgb(214,116,16)"/><text x="43.00" y="2174.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2180" width="6" height="15" fill="rgb(226,121,2)"/><text x="43.00" y="2190.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2196" width="6" height="15" fill="rgb(243,175,25)"/><text x="43.00" y="2206.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2212" width="6" height="15" fill="rgb(227,215,29)"/><text x="43.00" y="2222.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2228" width="6" height="15" fill="rgb(249,211,48)"/><text x="43.00" y="2238.50"></text></g><g><title>parse_postfix (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2244" width="6" height="15" fill="rgb(248,75,16)"/><text x="43.00" y="2254.50"></text></g><g><title>parse_subscript (jinja2/parser.py) (1 samples, 0.51%)</title><rect x="40" y="2260" width="6" height="15" fill="rgb(221,124,37)"/><text x="43.00" y="2270.50"></text></g><g><title>__init__ (jinja2/nodes.py) (1 samples, 0.51%)</title><rect x="40" y="2276" width="6" height="15" fill="rgb(233,131,32)"/><text x="43.00" y="2286.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.51%)</title><rect x="46" y="1108" width="6" height="15" fill="rgb(210,12,45)"/><text x="49.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.51%)</title><rect x="46" y="1124" width="6" height="15" fill="rgb(230,89,9)"/><text x="49.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.51%)</title><rect x="46" y="1140" width="6" height="15" fill="rgb(213,215,52)"/><text x="49.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.51%)</title><rect x="46" y="1156" width="6" height="15" fill="rgb(210,42,16)"/><text x="49.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.51%)</title><rect x="46" y="1172" width="6" height="15" fill="rgb(212,136,40)"/><text x="49.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.51%)</title><rect x="46" y="1188" width="6" height="15" fill="rgb(236,39,30)"/><text x="49.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.51%)</title><rect x="46" y="1204" width="6" height="15" fill="rgb(236,198,51)"/><text x="49.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.51%)</title><rect x="46" y="1220" width="6" height="15" fill="rgb(239,185,30)"/><text x="49.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 2.05%)</title><rect x="34" y="244" width="24" height="15" fill="rgb(212,101,13)"/><text x="37.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="260" width="24" height="15" fill="rgb(225,145,43)"/><text x="37.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="276" width="24" height="15" fill="rgb(226,33,41)"/><text x="37.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="292" width="24" height="15" fill="rgb(205,45,7)"/><text x="37.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="34" y="308" width="24" height="15" fill="rgb(207,141,27)"/><text x="37.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="324" width="24" height="15" fill="rgb(218,35,44)"/><text x="37.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 2.05%)</title><rect x="34" y="340" width="24" height="15" fill="rgb(251,32,54)"/><text x="37.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="356" width="24" height="15" fill="rgb(218,18,41)"/><text x="37.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="372" width="24" height="15" fill="rgb(244,201,11)"/><text x="37.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="388" width="24" height="15" fill="rgb(221,213,47)"/><text x="37.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.05%)</title><rect x="34" y="404" width="24" height="15" fill="rgb(251,110,54)"/><text x="37.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="420" width="24" height="15" fill="rgb(247,132,47)"/><text x="37.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 2.05%)</title><rect x="34" y="436" width="24" height="15" fill="rgb(252,141,40)"/><text x="37.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="452" width="24" height="15" fill="rgb(249,47,20)"/><text x="37.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.05%)</title><rect x="34" y="468" width="24" height="15" fill="rgb(243,23,25)"/><text x="37.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="484" width="12" height="15" fill="rgb(245,80,48)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="500" width="12" height="15" fill="rgb(207,208,20)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="516" width="12" height="15" fill="rgb(206,48,10)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.03%)</title><rect x="46" y="532" width="12" height="15" fill="rgb(215,162,24)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="548" width="12" height="15" fill="rgb(215,94,17)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="564" width="12" height="15" fill="rgb(241,91,52)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="580" width="12" height="15" fill="rgb(242,20,34)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="596" width="12" height="15" fill="rgb(234,133,29)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="612" width="12" height="15" fill="rgb(211,183,2)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 1.03%)</title><rect x="46" y="628" width="12" height="15" fill="rgb(235,180,46)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="644" width="12" height="15" fill="rgb(207,210,14)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="660" width="12" height="15" fill="rgb(232,65,6)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="676" width="12" height="15" fill="rgb(252,132,6)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="692" width="12" height="15" fill="rgb(253,4,1)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="708" width="12" height="15" fill="rgb(237,46,3)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 1.03%)</title><rect x="46" y="724" width="12" height="15" fill="rgb(214,221,13)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="740" width="12" height="15" fill="rgb(222,131,29)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="756" width="12" height="15" fill="rgb(206,214,24)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="772" width="12" height="15" fill="rgb(237,208,52)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="788" width="12" height="15" fill="rgb(250,9,3)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="804" width="12" height="15" fill="rgb(252,202,0)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 1.03%)</title><rect x="46" y="820" width="12" height="15" fill="rgb(206,181,39)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="836" width="12" height="15" fill="rgb(210,182,11)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="852" width="12" height="15" fill="rgb(246,118,50)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="868" width="12" height="15" fill="rgb(243,46,6)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="884" width="12" height="15" fill="rgb(230,208,8)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="900" width="12" height="15" fill="rgb(230,216,42)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 1.03%)</title><rect x="46" y="916" width="12" height="15" fill="rgb(220,97,32)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="932" width="12" height="15" fill="rgb(246,113,33)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="948" width="12" height="15" fill="rgb(249,173,35)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="964" width="12" height="15" fill="rgb(249,169,25)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="980" width="12" height="15" fill="rgb(226,75,1)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="996" width="12" height="15" fill="rgb(240,212,7)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 1.03%)</title><rect x="46" y="1012" width="12" height="15" fill="rgb(212,182,53)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1028" width="12" height="15" fill="rgb(223,149,47)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1044" width="12" height="15" fill="rgb(245,113,51)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1060" width="12" height="15" fill="rgb(252,60,17)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="46" y="1076" width="12" height="15" fill="rgb(241,126,11)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="46" y="1092" width="12" height="15" fill="rgb(230,96,29)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.51%)</title><rect x="52" y="1108" width="6" height="15" fill="rgb(230,147,46)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1124" width="6" height="15" fill="rgb(224,101,42)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1140" width="6" height="15" fill="rgb(235,139,8)"/><text x="55.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1156" width="6" height="15" fill="rgb(209,1,19)"/><text x="55.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1172" width="6" height="15" fill="rgb(254,70,53)"/><text x="55.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1188" width="6" height="15" fill="rgb(220,143,47)"/><text x="55.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.51%)</title><rect x="52" y="1204" width="6" height="15" fill="rgb(210,116,0)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1220" width="6" height="15" fill="rgb(251,206,14)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1236" width="6" height="15" fill="rgb(224,131,49)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1252" width="6" height="15" fill="rgb(251,165,33)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1268" width="6" height="15" fill="rgb(254,207,15)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1284" width="6" height="15" fill="rgb(242,128,0)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.51%)</title><rect x="52" y="1300" width="6" height="15" fill="rgb(234,163,51)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1316" width="6" height="15" fill="rgb(229,28,15)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1332" width="6" height="15" fill="rgb(237,108,10)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1348" width="6" height="15" fill="rgb(218,140,6)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1364" width="6" height="15" fill="rgb(206,188,6)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1380" width="6" height="15" fill="rgb(212,90,13)"/><text x="55.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.51%)</title><rect x="52" y="1396" width="6" height="15" fill="rgb(223,224,10)"/><text x="55.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1412" width="6" height="15" fill="rgb(245,50,38)"/><text x="55.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1428" width="6" height="15" fill="rgb(241,24,18)"/><text x="55.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1444" width="6" height="15" fill="rgb(232,172,23)"/><text x="55.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1460" width="6" height="15" fill="rgb(224,137,25)"/><text x="55.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1476" width="6" height="15" fill="rgb(254,15,41)"/><text x="55.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.51%)</title><rect x="52" y="1492" width="6" height="15" fill="rgb(209,47,40)"/><text x="55.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1508" width="6" height="15" fill="rgb(251,140,20)"/><text x="55.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1524" width="6" height="15" fill="rgb(219,215,8)"/><text x="55.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1540" width="6" height="15" fill="rgb(224,28,30)"/><text x="55.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1556" width="6" height="15" fill="rgb(241,37,46)"/><text x="55.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1572" width="6" height="15" fill="rgb(247,132,1)"/><text x="55.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.51%)</title><rect x="52" y="1588" width="6" height="15" fill="rgb(236,45,52)"/><text x="55.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1604" width="6" height="15" fill="rgb(225,119,16)"/><text x="55.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1620" width="6" height="15" fill="rgb(229,14,18)"/><text x="55.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1636" width="6" height="15" fill="rgb(205,121,38)"/><text x="55.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1652" width="6" height="15" fill="rgb(214,66,42)"/><text x="55.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1668" width="6" height="15" fill="rgb(254,110,3)"/><text x="55.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.51%)</title><rect x="52" y="1684" width="6" height="15" fill="rgb(244,42,5)"/><text x="55.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1700" width="6" height="15" fill="rgb(206,116,2)"/><text x="55.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1716" width="6" height="15" fill="rgb(208,14,38)"/><text x="55.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1732" width="6" height="15" fill="rgb(253,137,40)"/><text x="55.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1748" width="6" height="15" fill="rgb(228,196,3)"/><text x="55.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1764" width="6" height="15" fill="rgb(206,30,11)"/><text x="55.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.51%)</title><rect x="52" y="1780" width="6" height="15" fill="rgb(242,135,11)"/><text x="55.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1796" width="6" height="15" fill="rgb(232,39,47)"/><text x="55.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1812" width="6" height="15" fill="rgb(232,192,50)"/><text x="55.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1828" width="6" height="15" fill="rgb(214,43,42)"/><text x="55.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="52" y="1844" width="6" height="15" fill="rgb(249,158,23)"/><text x="55.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="52" y="1860" width="6" height="15" fill="rgb(205,206,24)"/><text x="55.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.51%)</title><rect x="52" y="1876" width="6" height="15" fill="rgb(217,2,23)"/><text x="55.00" y="1886.50"></text></g><g><title>BoxStyle (matplotlib/patches.py) (1 samples, 0.51%)</title><rect x="52" y="1892" width="6" height="15" fill="rgb(241,131,49)"/><text x="55.00" y="1902.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.51%)</title><rect x="52" y="1908" width="6" height="15" fill="rgb(214,12,50)"/><text x="55.00" y="1918.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.51%)</title><rect x="58" y="372" width="6" height="15" fill="rgb(236,162,28)"/><text x="61.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="388" width="6" height="15" fill="rgb(208,85,36)"/><text x="61.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="404" width="6" height="15" fill="rgb(207,182,5)"/><text x="61.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="420" width="6" height="15" fill="rgb(232,14,15)"/><text x="61.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="436" width="6" height="15" fill="rgb(252,75,9)"/><text x="61.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="452" width="6" height="15" fill="rgb(215,171,28)"/><text x="61.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="468" width="6" height="15" fill="rgb(223,224,34)"/><text x="61.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="484" width="6" height="15" fill="rgb(217,42,38)"/><text x="61.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.51%)</title><rect x="58" y="500" width="6" height="15" fill="rgb(236,57,11)"/><text x="61.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="516" width="6" height="15" fill="rgb(231,151,52)"/><text x="61.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="532" width="6" height="15" fill="rgb(209,84,35)"/><text x="61.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="548" width="6" height="15" fill="rgb(243,16,18)"/><text x="61.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="58" y="564" width="6" height="15" fill="rgb(220,179,28)"/><text x="61.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="58" y="580" width="6" height="15" fill="rgb(211,174,32)"/><text x="61.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.51%)</title><rect x="58" y="596" width="6" height="15" fill="rgb(230,100,2)"/><text x="61.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.51%)</title><rect x="58" y="612" width="6" height="15" fill="rgb(254,158,19)"/><text x="61.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.51%)</title><rect x="58" y="628" width="6" height="15" fill="rgb(226,25,27)"/><text x="61.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.51%)</title><rect x="58" y="644" width="6" height="15" fill="rgb(209,70,52)"/><text x="61.00" y="654.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.51%)</title><rect x="58" y="660" width="6" height="15" fill="rgb(254,209,41)"/><text x="61.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.51%)</title><rect x="58" y="676" width="6" height="15" fill="rgb(218,65,5)"/><text x="61.00" y="686.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.51%)</title><rect x="58" y="692" width="6" height="15" fill="rgb(238,29,18)"/><text x="61.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="68" width="60" height="15" fill="rgb(232,210,16)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="84" width="60" height="15" fill="rgb(251,124,8)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="100" width="60" height="15" fill="rgb(224,124,44)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 5.13%)</title><rect x="10" y="116" width="60" height="15" fill="rgb(250,55,25)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="132" width="60" height="15" fill="rgb(254,128,41)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py) (10 samples, 5.13%)</title><rect x="10" y="148" width="60" height="15" fill="rgb(239,126,2)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="164" width="60" height="15" fill="rgb(250,67,50)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 5.13%)</title><rect x="10" y="180" width="60" height="15" fill="rgb(239,133,0)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="34" y="196" width="36" height="15" fill="rgb(231,193,25)"/><text x="37.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.08%)</title><rect x="34" y="212" width="36" height="15" fill="rgb(212,134,18)"/><text x="37.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.08%)</title><rect x="34" y="228" width="36" height="15" fill="rgb(237,179,15)"/><text x="37.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 1.03%)</title><rect x="58" y="244" width="12" height="15" fill="rgb(211,184,21)"/><text x="61.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="260" width="12" height="15" fill="rgb(235,128,40)"/><text x="61.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="276" width="12" height="15" fill="rgb(215,109,1)"/><text x="61.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="292" width="12" height="15" fill="rgb(250,126,39)"/><text x="61.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="308" width="12" height="15" fill="rgb(210,173,4)"/><text x="61.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="324" width="12" height="15" fill="rgb(227,174,11)"/><text x="61.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.03%)</title><rect x="58" y="340" width="12" height="15" fill="rgb(232,101,1)"/><text x="61.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.03%)</title><rect x="58" y="356" width="12" height="15" fill="rgb(237,8,39)"/><text x="61.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.51%)</title><rect x="64" y="372" width="6" height="15" fill="rgb(252,152,49)"/><text x="67.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="388" width="6" height="15" fill="rgb(205,73,49)"/><text x="67.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="404" width="6" height="15" fill="rgb(241,168,4)"/><text x="67.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="420" width="6" height="15" fill="rgb(250,24,31)"/><text x="67.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.51%)</title><rect x="64" y="436" width="6" height="15" fill="rgb(225,70,11)"/><text x="67.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="64" y="452" width="6" height="15" fill="rgb(223,66,45)"/><text x="67.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py) (1 samples, 0.51%)</title><rect x="64" y="468" width="6" height="15" fill="rgb(231,158,36)"/><text x="67.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.51%)</title><rect x="64" y="484" width="6" height="15" fill="rgb(245,20,24)"/><text x="67.00" y="494.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.51%)</title><rect x="64" y="500" width="6" height="15" fill="rgb(210,203,36)"/><text x="67.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.54%)</title><rect x="70" y="116" width="18" height="15" fill="rgb(207,129,1)"/><text x="73.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.54%)</title><rect x="70" y="132" width="18" height="15" fill="rgb(210,132,49)"/><text x="73.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.54%)</title><rect x="70" y="148" width="18" height="15" fill="rgb(207,163,1)"/><text x="73.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.03%)</title><rect x="137" y="180" width="12" height="15" fill="rgb(224,22,13)"/><text x="140.00" y="190.50"></text></g><g><title>0x7f5aeadd8ff9 (?) (1 samples, 0.51%)</title><rect x="161" y="212" width="6" height="15" fill="rgb(220,198,14)"/><text x="164.00" y="222.50"></text></g><g><title>0x7f5aeadd3ef6 (?) (1 samples, 0.51%)</title><rect x="161" y="228" width="6" height="15" fill="rgb(211,201,43)"/><text x="164.00" y="238.50"></text></g><g><title>0x7f5aeadc8962 (?) (1 samples, 0.51%)</title><rect x="161" y="244" width="6" height="15" fill="rgb(210,18,18)"/><text x="164.00" y="254.50"></text></g><g><title>0x7f5aeadfc7a7 (?) (1 samples, 0.51%)</title><rect x="161" y="260" width="6" height="15" fill="rgb(227,148,34)"/><text x="164.00" y="270.50"></text></g><g><title>0x7f5aeadfc379 (?) (1 samples, 0.51%)</title><rect x="161" y="276" width="6" height="15" fill="rgb(228,99,14)"/><text x="164.00" y="286.50"></text></g><g><title>0x7f5aeb25a8b8 (?) (1 samples, 0.51%)</title><rect x="161" y="292" width="6" height="15" fill="rgb(230,180,32)"/><text x="164.00" y="302.50"></text></g><g><title>0x7f5aeb258c7f (?) (1 samples, 0.51%)</title><rect x="161" y="308" width="6" height="15" fill="rgb(253,192,2)"/><text x="164.00" y="318.50"></text></g><g><title>0x7f5aeb26cf25 (?) (1 samples, 0.51%)</title><rect x="161" y="324" width="6" height="15" fill="rgb(244,74,20)"/><text x="164.00" y="334.50"></text></g><g><title>0x7f5aeb212d53 (?) (1 samples, 0.51%)</title><rect x="161" y="340" width="6" height="15" fill="rgb(231,191,13)"/><text x="164.00" y="350.50"></text></g><g><title>0x7f5aead9fc40 (?) (1 samples, 0.51%)</title><rect x="161" y="356" width="6" height="15" fill="rgb(207,91,21)"/><text x="164.00" y="366.50"></text></g><g><title>0x7ffd4a9f2a01 ([vdso]) (1 samples, 0.51%)</title><rect x="167" y="212" width="6" height="15" fill="rgb(206,205,32)"/><text x="170.00" y="222.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="173" y="244" width="6" height="15" fill="rgb(225,12,49)"/><text x="176.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.54%)</title><rect x="173" y="212" width="18" height="15" fill="rgb(239,206,50)"/><text x="176.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="173" y="228" width="18" height="15" fill="rgb(237,165,29)"/><text x="176.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="179" y="244" width="12" height="15" fill="rgb(239,82,15)"/><text x="182.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.03%)</title><rect x="179" y="260" width="12" height="15" fill="rgb(239,189,50)"/><text x="182.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="203" y="292" width="6" height="15" fill="rgb(238,219,31)"/><text x="206.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="203" y="308" width="6" height="15" fill="rgb(213,76,22)"/><text x="206.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="203" y="324" width="6" height="15" fill="rgb(236,218,20)"/><text x="206.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="203" y="340" width="6" height="15" fill="rgb(254,141,26)"/><text x="206.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="203" y="356" width="6" height="15" fill="rgb(232,177,37)"/><text x="206.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="209" y="292" width="6" height="15" fill="rgb(209,177,28)"/><text x="212.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="209" y="308" width="6" height="15" fill="rgb(250,79,13)"/><text x="212.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="209" y="324" width="6" height="15" fill="rgb(215,147,38)"/><text x="212.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="209" y="340" width="6" height="15" fill="rgb(220,152,6)"/><text x="212.00" y="350.50"></text></g><g><title>0x7f5b2ad6a003 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="209" y="356" width="6" height="15" fill="rgb(227,106,17)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="215" y="340" width="6" height="15" fill="rgb(245,89,34)"/><text x="218.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="215" y="356" width="6" height="15" fill="rgb(217,120,28)"/><text x="218.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="221" y="340" width="6" height="15" fill="rgb(213,56,47)"/><text x="224.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="221" y="356" width="6" height="15" fill="rgb(251,68,16)"/><text x="224.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="221" y="372" width="6" height="15" fill="rgb(217,175,47)"/><text x="224.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="221" y="388" width="6" height="15" fill="rgb(237,153,46)"/><text x="224.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="233" y="452" width="6" height="15" fill="rgb(209,35,51)"/><text x="236.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="233" y="468" width="6" height="15" fill="rgb(229,189,42)"/><text x="236.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="233" y="484" width="6" height="15" fill="rgb(251,165,12)"/><text x="236.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.59%)</title><rect x="203" y="260" width="43" height="15" fill="rgb(249,119,4)"/><text x="206.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.59%)</title><rect x="203" y="276" width="43" height="15" fill="rgb(219,152,24)"/><text x="206.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.56%)</title><rect x="215" y="292" width="31" height="15" fill="rgb(209,199,26)"/><text x="218.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.56%)</title><rect x="215" y="308" width="31" height="15" fill="rgb(249,187,34)"/><text x="218.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.56%)</title><rect x="215" y="324" width="31" height="15" fill="rgb(224,122,39)"/><text x="218.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="340" width="19" height="15" fill="rgb(244,210,54)"/><text x="230.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="356" width="19" height="15" fill="rgb(223,135,6)"/><text x="230.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="372" width="19" height="15" fill="rgb(214,154,35)"/><text x="230.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="388" width="19" height="15" fill="rgb(249,118,29)"/><text x="230.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="404" width="19" height="15" fill="rgb(225,198,33)"/><text x="230.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="420" width="19" height="15" fill="rgb(218,194,17)"/><text x="230.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="227" y="436" width="19" height="15" fill="rgb(232,51,17)"/><text x="230.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="239" y="452" width="7" height="15" fill="rgb(219,106,14)"/><text x="242.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="239" y="468" width="7" height="15" fill="rgb(232,47,36)"/><text x="242.00" y="478.50"></text></g><g><title>0x7f5b2ad69b12 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="239" y="484" width="7" height="15" fill="rgb(238,38,28)"/><text x="242.00" y="494.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="246" y="260" width="6" height="15" fill="rgb(249,111,39)"/><text x="249.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 1.03%)</title><rect x="252" y="276" width="12" height="15" fill="rgb(229,74,13)"/><text x="255.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.51%)</title><rect x="258" y="292" width="6" height="15" fill="rgb(217,40,25)"/><text x="261.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.51%)</title><rect x="258" y="308" width="6" height="15" fill="rgb(242,14,8)"/><text x="261.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="252" y="260" width="18" height="15" fill="rgb(232,114,51)"/><text x="255.00" y="270.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="264" y="276" width="6" height="15" fill="rgb(254,137,48)"/><text x="267.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="270" y="260" width="6" height="15" fill="rgb(211,200,27)"/><text x="273.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="276" y="308" width="6" height="15" fill="rgb(241,221,29)"/><text x="279.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.51%)</title><rect x="282" y="308" width="6" height="15" fill="rgb(209,218,16)"/><text x="285.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 8.72%)</title><rect x="191" y="244" width="103" height="15" fill="rgb(239,197,16)"/><text x="194.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="276" y="260" width="18" height="15" fill="rgb(211,59,42)"/><text x="279.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="276" y="276" width="18" height="15" fill="rgb(208,103,50)"/><text x="279.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.54%)</title><rect x="276" y="292" width="18" height="15" fill="rgb(230,173,44)"/><text x="279.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="308" width="6" height="15" fill="rgb(221,226,30)"/><text x="291.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="324" width="6" height="15" fill="rgb(232,92,8)"/><text x="291.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="340" width="6" height="15" fill="rgb(206,204,37)"/><text x="291.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="356" width="6" height="15" fill="rgb(237,228,53)"/><text x="291.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="288" y="372" width="6" height="15" fill="rgb(253,92,10)"/><text x="291.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.51%)</title><rect x="288" y="388" width="6" height="15" fill="rgb(245,80,2)"/><text x="291.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="288" y="404" width="6" height="15" fill="rgb(222,46,34)"/><text x="291.00" y="414.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (38 samples, 19.49%)</title><rect x="70" y="68" width="230" height="15" fill="rgb(216,78,28)"/><text x="73.00" y="78.50">profile_ort (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (38 samples, 19.49%)</title><rect x="70" y="84" width="230" height="15" fill="rgb(229,150,44)"/><text x="73.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (38 samples, 19.49%)</title><rect x="70" y="100" width="230" height="15" fill="rgb(218,110,35)"/><text x="73.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 17.95%)</title><rect x="88" y="116" width="212" height="15" fill="rgb(248,112,30)"/><text x="91.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (34 samples, 17.44%)</title><rect x="94" y="132" width="206" height="15" fill="rgb(215,224,12)"/><text x="97.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (33 samples, 16.92%)</title><rect x="100" y="148" width="200" height="15" fill="rgb(207,184,19)"/><text x="103.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (31 samples, 15.90%)</title><rect x="112" y="164" width="188" height="15" fill="rgb(241,178,44)"/><text x="115.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (25 samples, 12.82%)</title><rect x="149" y="180" width="151" height="15" fill="rgb(245,97,52)"/><text x="152.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (onnxruntime/capi/session.py) (24 samples, 12.31%)</title><rect x="155" y="196" width="145" height="15" fill="rgb(229,108,43)"/><text x="158.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 9.23%)</title><rect x="191" y="212" width="109" height="15" fill="rgb(224,94,44)"/><text x="194.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 9.23%)</title><rect x="191" y="228" width="109" height="15" fill="rgb(233,168,36)"/><text x="194.00" y="238.50">void pybind11..</text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="294" y="244" width="6" height="15" fill="rgb(222,76,46)"/><text x="297.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.51%)</title><rect x="294" y="260" width="6" height="15" fill="rgb(222,196,3)"/><text x="297.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.51%)</title><rect x="306" y="132" width="6" height="15" fill="rgb(215,74,17)"/><text x="309.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 1.03%)</title><rect x="306" y="116" width="12" height="15" fill="rgb(221,36,20)"/><text x="309.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.51%)</title><rect x="312" y="132" width="6" height="15" fill="rgb(215,144,43)"/><text x="315.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.51%)</title><rect x="312" y="148" width="6" height="15" fill="rgb(232,155,45)"/><text x="315.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.51%)</title><rect x="409" y="180" width="6" height="15" fill="rgb(225,15,50)"/><text x="412.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.51%)</title><rect x="469" y="196" width="6" height="15" fill="rgb(236,18,34)"/><text x="472.00" y="206.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.51%)</title><rect x="494" y="212" width="6" height="15" fill="rgb(254,43,20)"/><text x="497.00" y="222.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.51%)</title><rect x="494" y="228" width="6" height="15" fill="rgb(252,117,38)"/><text x="497.00" y="238.50"></text></g><g><title>0x7f5b2ad7ee50 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="530" y="324" width="6" height="15" fill="rgb(206,23,33)"/><text x="533.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.51%)</title><rect x="536" y="324" width="6" height="15" fill="rgb(234,99,2)"/><text x="539.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 3.08%)</title><rect x="512" y="244" width="36" height="15" fill="rgb(207,118,28)"/><text x="515.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 3.08%)</title><rect x="512" y="260" width="36" height="15" fill="rgb(243,21,31)"/><text x="515.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 3.08%)</title><rect x="512" y="276" width="36" height="15" fill="rgb(206,218,37)"/><text x="515.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 3.08%)</title><rect x="512" y="292" width="36" height="15" fill="rgb(220,150,12)"/><text x="515.00" y="302.50">_wr..</text></g><g><title>array_argmax (methods.c) (5 samples, 2.56%)</title><rect x="518" y="308" width="30" height="15" fill="rgb(217,55,40)"/><text x="521.00" y="318.50">ar..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.51%)</title><rect x="542" y="324" width="6" height="15" fill="rgb(246,221,45)"/><text x="545.00" y="334.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.51%)</title><rect x="572" y="324" width="6" height="15" fill="rgb(244,111,29)"/><text x="575.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.51%)</title><rect x="572" y="340" width="6" height="15" fill="rgb(253,214,13)"/><text x="575.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.51%)</title><rect x="572" y="356" width="6" height="15" fill="rgb(213,107,2)"/><text x="575.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.51%)</title><rect x="572" y="372" width="6" height="15" fill="rgb(230,191,12)"/><text x="575.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="578" y="340" width="6" height="15" fill="rgb(231,33,26)"/><text x="581.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.51%)</title><rect x="584" y="340" width="6" height="15" fill="rgb(239,214,46)"/><text x="587.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (8 samples, 4.10%)</title><rect x="548" y="244" width="48" height="15" fill="rgb(222,98,41)"/><text x="551.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (4 samples, 2.05%)</title><rect x="572" y="260" width="24" height="15" fill="rgb(247,183,7)"/><text x="575.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 2.05%)</title><rect x="572" y="276" width="24" height="15" fill="rgb(247,190,40)"/><text x="575.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 2.05%)</title><rect x="572" y="292" width="24" height="15" fill="rgb(247,125,19)"/><text x="575.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 2.05%)</title><rect x="572" y="308" width="24" height="15" fill="rgb(224,175,24)"/><text x="575.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 1.54%)</title><rect x="578" y="324" width="18" height="15" fill="rgb(215,180,29)"/><text x="581.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.51%)</title><rect x="590" y="340" width="6" height="15" fill="rgb(222,145,44)"/><text x="593.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.51%)</title><rect x="590" y="356" width="6" height="15" fill="rgb(235,210,1)"/><text x="593.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.51%)</title><rect x="590" y="372" width="6" height="15" fill="rgb(230,32,17)"/><text x="593.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.51%)</title><rect x="590" y="388" width="6" height="15" fill="rgb(206,83,53)"/><text x="593.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.51%)</title><rect x="609" y="324" width="6" height="15" fill="rgb(249,26,23)"/><text x="612.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.51%)</title><rect x="615" y="324" width="6" height="15" fill="rgb(222,131,47)"/><text x="618.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 2.05%)</title><rect x="609" y="276" width="24" height="15" fill="rgb(245,164,28)"/><text x="612.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 2.05%)</title><rect x="609" y="292" width="24" height="15" fill="rgb(210,192,38)"/><text x="612.00" y="302.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 2.05%)</title><rect x="609" y="308" width="24" height="15" fill="rgb(221,181,48)"/><text x="612.00" y="318.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 1.03%)</title><rect x="621" y="324" width="12" height="15" fill="rgb(231,98,42)"/><text x="624.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (51 samples, 26.15%)</title><rect x="330" y="132" width="309" height="15" fill="rgb(208,25,18)"/><text x="333.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (49 samples, 25.13%)</title><rect x="342" y="148" width="297" height="15" fill="rgb(221,138,1)"/><text x="345.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (45 samples, 23.08%)</title><rect x="367" y="164" width="272" height="15" fill="rgb(243,62,53)"/><text x="370.00" y="174.50">_run_sequence_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (37 samples, 18.97%)</title><rect x="415" y="180" width="224" height="15" fill="rgb(221,65,4)"/><text x="418.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 13.85%)</title><rect x="475" y="196" width="164" height="15" fill="rgb(241,106,9)"/><text x="478.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (23 samples, 11.79%)</title><rect x="500" y="212" width="139" height="15" fill="rgb(235,85,35)"/><text x="503.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (22 samples, 11.28%)</title><rect x="506" y="228" width="133" height="15" fill="rgb(238,90,45)"/><text x="509.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 3.59%)</title><rect x="596" y="244" width="43" height="15" fill="rgb(252,155,29)"/><text x="599.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 3.08%)</title><rect x="603" y="260" width="36" height="15" fill="rgb(230,25,52)"/><text x="606.00" y="270.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.51%)</title><rect x="633" y="276" width="6" height="15" fill="rgb(211,137,31)"/><text x="636.00" y="286.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (57 samples, 29.23%)</title><rect x="300" y="68" width="345" height="15" fill="rgb(242,38,26)"/><text x="303.00" y="78.50">profile_pyrt (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (57 samples, 29.23%)</title><rect x="300" y="84" width="345" height="15" fill="rgb(228,138,53)"/><text x="303.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (57 samples, 29.23%)</title><rect x="300" y="100" width="345" height="15" fill="rgb(247,97,52)"/><text x="303.00" y="110.50">profile (bench_LogisticRegression_liblinear_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (54 samples, 27.69%)</title><rect x="318" y="116" width="327" height="15" fill="rgb(238,107,28)"/><text x="321.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.51%)</title><rect x="639" y="132" width="6" height="15" fill="rgb(208,40,40)"/><text x="642.00" y="142.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 1.03%)</title><rect x="681" y="212" width="12" height="15" fill="rgb(253,111,28)"/><text x="684.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 1.03%)</title><rect x="681" y="228" width="12" height="15" fill="rgb(224,229,8)"/><text x="684.00" y="238.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.51%)</title><rect x="687" y="244" width="6" height="15" fill="rgb(218,55,35)"/><text x="690.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.51%)</title><rect x="687" y="260" width="6" height="15" fill="rgb(223,193,19)"/><text x="690.00" y="270.50"></text></g><g><title>array_add (number.c) (5 samples, 2.56%)</title><rect x="669" y="164" width="30" height="15" fill="rgb(233,54,19)"/><text x="672.00" y="174.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 2.05%)</title><rect x="675" y="180" width="24" height="15" fill="rgb(216,191,26)"/><text x="678.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 2.05%)</title><rect x="675" y="196" width="24" height="15" fill="rgb(248,213,11)"/><text x="678.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.51%)</title><rect x="693" y="212" width="6" height="15" fill="rgb(216,196,8)"/><text x="696.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.51%)</title><rect x="699" y="164" width="6" height="15" fill="rgb(229,168,10)"/><text x="702.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.51%)</title><rect x="699" y="180" width="6" height="15" fill="rgb(254,223,8)"/><text x="702.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.51%)</title><rect x="699" y="196" width="6" height="15" fill="rgb(243,134,35)"/><text x="702.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 2.56%)</title><rect x="796" y="180" width="30" height="15" fill="rgb(221,126,5)"/><text x="799.00" y="190.50">__..</text></g><g><title>__init__ (warnings.py) (2 samples, 1.03%)</title><rect x="826" y="180" width="13" height="15" fill="rgb(218,64,42)"/><text x="829.00" y="190.50"></text></g><g><title>0x7f5b2ae470e6 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="857" y="196" width="6" height="15" fill="rgb(248,223,43)"/><text x="860.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.54%)</title><rect x="863" y="196" width="18" height="15" fill="rgb(205,113,31)"/><text x="866.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.51%)</title><rect x="881" y="196" width="6" height="15" fill="rgb(238,226,38)"/><text x="884.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 4.62%)</title><rect x="839" y="180" width="54" height="15" fill="rgb(231,117,11)"/><text x="842.00" y="190.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.51%)</title><rect x="887" y="196" width="6" height="15" fill="rgb(224,67,35)"/><text x="890.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.51%)</title><rect x="893" y="180" width="6" height="15" fill="rgb(220,138,42)"/><text x="896.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 3.59%)</title><rect x="899" y="180" width="42" height="15" fill="rgb(233,225,9)"/><text x="902.00" y="190.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 2.05%)</title><rect x="917" y="196" width="24" height="15" fill="rgb(214,181,46)"/><text x="920.00" y="206.50">_..</text></g><g><title>array_ndim_get (getset.c) (1 samples, 0.51%)</title><rect x="941" y="180" width="6" height="15" fill="rgb(234,210,12)"/><text x="944.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.51%)</title><rect x="947" y="180" width="7" height="15" fill="rgb(250,162,16)"/><text x="950.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.51%)</title><rect x="954" y="180" width="6" height="15" fill="rgb(221,10,28)"/><text x="957.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 2.05%)</title><rect x="960" y="180" width="24" height="15" fill="rgb(240,129,5)"/><text x="963.00" y="190.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 1.03%)</title><rect x="972" y="196" width="12" height="15" fill="rgb(232,10,31)"/><text x="975.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (54 samples, 27.69%)</title><rect x="705" y="164" width="327" height="15" fill="rgb(210,97,52)"/><text x="708.00" y="174.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (8 samples, 4.10%)</title><rect x="984" y="180" width="48" height="15" fill="rgb(205,24,36)"/><text x="987.00" y="190.50">simp..</text></g><g><title>_add_filter (warnings.py) (6 samples, 3.08%)</title><rect x="996" y="196" width="36" height="15" fill="rgb(224,19,40)"/><text x="999.00" y="206.50">_ad..</text></g><g><title>0x7f5b2ad7eed6 (libc-2.29.so) (1 samples, 0.51%)</title><rect x="1026" y="212" width="6" height="15" fill="rgb(214,67,34)"/><text x="1029.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.51%)</title><rect x="1099" y="196" width="6" height="15" fill="rgb(235,221,15)"/><text x="1102.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 6.67%)</title><rect x="1032" y="164" width="79" height="15" fill="rgb(223,116,18)"/><text x="1035.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 4.62%)</title><rect x="1056" y="180" width="55" height="15" fill="rgb(227,202,22)"/><text x="1059.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.51%)</title><rect x="1105" y="196" width="6" height="15" fill="rgb(253,173,2)"/><text x="1108.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.51%)</title><rect x="1129" y="292" width="6" height="15" fill="rgb(219,32,53)"/><text x="1132.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 1.54%)</title><rect x="1123" y="244" width="18" height="15" fill="rgb(232,27,51)"/><text x="1126.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.54%)</title><rect x="1123" y="260" width="18" height="15" fill="rgb(218,23,42)"/><text x="1126.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.54%)</title><rect x="1123" y="276" width="18" height="15" fill="rgb(216,73,7)"/><text x="1126.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.51%)</title><rect x="1135" y="292" width="6" height="15" fill="rgb(211,52,48)"/><text x="1138.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 2.05%)</title><rect x="1123" y="228" width="24" height="15" fill="rgb(244,41,25)"/><text x="1126.00" y="238.50">N..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.51%)</title><rect x="1141" y="244" width="6" height="15" fill="rgb(244,226,7)"/><text x="1144.00" y="254.50"></text></g><g><title>0x7f5b29f8b1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.51%)</title><rect x="1141" y="260" width="6" height="15" fill="rgb(242,145,41)"/><text x="1144.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.51%)</title><rect x="1147" y="228" width="6" height="15" fill="rgb(250,196,47)"/><text x="1150.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.51%)</title><rect x="1147" y="244" width="6" height="15" fill="rgb(241,91,5)"/><text x="1150.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.51%)</title><rect x="1147" y="260" width="6" height="15" fill="rgb(231,203,42)"/><text x="1150.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.51%)</title><rect x="1147" y="276" width="6" height="15" fill="rgb(220,98,19)"/><text x="1150.00" y="286.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.51%)</title><rect x="1153" y="228" width="6" height="15" fill="rgb(229,126,15)"/><text x="1156.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 1.03%)</title><rect x="1159" y="228" width="12" height="15" fill="rgb(205,149,52)"/><text x="1162.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 1.03%)</title><rect x="1159" y="244" width="12" height="15" fill="rgb(244,69,27)"/><text x="1162.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 1.03%)</title><rect x="1159" y="260" width="12" height="15" fill="rgb(230,85,3)"/><text x="1162.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 1.03%)</title><rect x="1159" y="276" width="12" height="15" fill="rgb(249,174,50)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (2 samples, 1.03%)</title><rect x="1159" y="292" width="12" height="15" fill="rgb(231,56,23)"/><text x="1162.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.51%)</title><rect x="1165" y="308" width="6" height="15" fill="rgb(209,229,5)"/><text x="1168.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (87 samples, 44.62%)</title><rect x="651" y="132" width="526" height="15" fill="rgb(206,211,41)"/><text x="654.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (87 samples, 44.62%)</title><rect x="651" y="148" width="526" height="15" fill="rgb(250,27,41)"/><text x="654.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (11 samples, 5.64%)</title><rect x="1111" y="164" width="66" height="15" fill="rgb(237,173,45)"/><text x="1114.00" y="174.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 5.13%)</title><rect x="1117" y="180" width="60" height="15" fill="rgb(218,53,2)"/><text x="1120.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 5.13%)</title><rect x="1117" y="196" width="60" height="15" fill="rgb(225,156,34)"/><text x="1120.00" y="206.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (10 samples, 5.13%)</title><rect x="1117" y="212" width="60" height="15" fill="rgb(240,214,31)"/><text x="1120.00" y="222.50">PyUFun..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.51%)</title><rect x="1171" y="228" width="6" height="15" fill="rgb(222,4,19)"/><text x="1174.00" y="238.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (89 samples, 45.64%)</title><rect x="645" y="68" width="538" height="15" fill="rgb(244,221,8)"/><text x="648.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblin..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (89 samples, 45.64%)</title><rect x="645" y="84" width="538" height="15" fill="rgb(209,52,5)"/><text x="648.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverlibl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (89 samples, 45.64%)</title><rect x="645" y="100" width="538" height="15" fill="rgb(226,94,52)"/><text x="648.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 45.13%)</title><rect x="651" y="116" width="532" height="15" fill="rgb(213,75,18)"/><text x="654.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.51%)</title><rect x="1177" y="132" width="6" height="15" fill="rgb(214,72,32)"/><text x="1180.00" y="142.50"></text></g><g><title>all (195 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,95,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (195 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,83,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_4_12_float_raw_score.py) (1 samples, 0.51%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(243,58,5)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py) (1 samples, 0.51%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(213,185,31)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(232,103,52)"/><text x="1186.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.51%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(241,35,11)"/><text x="1186.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.51%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(244,161,3)"/><text x="1186.00" y="142.50"></text></g><g><title>0x7f5b1d63ce61 (?) (1 samples, 0.51%)</title><rect x="1183" y="148" width="7" height="15" fill="rgb(239,200,31)"/><text x="1186.00" y="158.50"></text></g><g><title>0x7f5b1d636867 (?) (1 samples, 0.51%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(233,154,16)"/><text x="1186.00" y="174.50"></text></g><g><title>0x7f5b1d414c7a (?) (1 samples, 0.51%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(233,92,4)"/><text x="1186.00" y="190.50"></text></g><g><title>0x7f5b1d3eabdb (?) (1 samples, 0.51%)</title><rect x="1183" y="196" width="7" height="15" fill="rgb(212,84,11)"/><text x="1186.00" y="206.50"></text></g><g><title>0x7f5b1d3e6930 (?) (1 samples, 0.51%)</title><rect x="1183" y="212" width="7" height="15" fill="rgb(229,198,0)"/><text x="1186.00" y="222.50"></text></g><g><title>0x7f5b1d3e9ea9 (?) (1 samples, 0.51%)</title><rect x="1183" y="228" width="7" height="15" fill="rgb(206,19,6)"/><text x="1186.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.51%)</title><rect x="1183" y="244" width="7" height="15" fill="rgb(221,159,7)"/><text x="1186.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.51%)</title><rect x="1183" y="260" width="7" height="15" fill="rgb(206,227,33)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.51%)</title><rect x="1183" y="276" width="7" height="15" fill="rgb(220,23,51)"/><text x="1186.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.51%)</title><rect x="1183" y="292" width="7" height="15" fill="rgb(231,107,3)"/><text x="1186.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.51%)</title><rect x="1183" y="308" width="7" height="15" fill="rgb(225,188,54)"/><text x="1186.00" y="318.50"></text></g></g></svg>