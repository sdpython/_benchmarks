<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(252,17,7)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(253,8,17)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(235,55,50)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(236,223,35)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(229,51,54)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(252,96,37)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(233,63,11)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(216,146,39)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(247,117,12)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(209,51,13)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(236,94,3)"/><text x="13.00" y="1038.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(237,181,4)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(214,67,41)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(216,210,17)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(224,152,36)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(251,210,43)"/><text x="14.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(226,179,44)"/><text x="14.00" y="1022.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(228,156,5)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(242,214,0)"/><text x="16.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(230,185,38)"/><text x="16.00" y="990.50"></text></g><g><title>sub (re.py) (1 samples, 0.15%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(229,80,28)"/><text x="16.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.15%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(219,224,9)"/><text x="16.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="11" y="868" width="5" height="15" fill="rgb(214,152,13)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="11" y="884" width="5" height="15" fill="rgb(250,166,1)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="11" y="900" width="5" height="15" fill="rgb(227,213,19)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="11" y="916" width="5" height="15" fill="rgb(223,53,17)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.29%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(216,136,31)"/><text x="16.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(242,127,35)"/><text x="18.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(232,209,28)"/><text x="18.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(215,133,25)"/><text x="19.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(243,4,16)"/><text x="19.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(240,141,48)"/><text x="19.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(254,222,30)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(209,207,2)"/><text x="19.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.15%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(238,176,13)"/><text x="19.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.15%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(214,26,10)"/><text x="19.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(219,98,19)"/><text x="19.00" y="1022.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(235,221,15)"/><text x="19.00" y="1038.50"></text></g><g><title>0x7f220372711e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(220,4,42)"/><text x="19.00" y="1054.50"></text></g><g><title>0x7f2203725b23 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(253,155,48)"/><text x="19.00" y="1070.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(206,126,14)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.03%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(223,111,9)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(219,76,23)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(235,57,9)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(219,25,11)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.03%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(231,38,14)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(252,62,27)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.03%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(248,29,41)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(234,8,54)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(211,85,43)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(224,198,36)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.03%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(242,195,40)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(254,142,28)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.03%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(253,181,11)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(205,65,32)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(241,41,36)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(239,144,32)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.03%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(241,170,39)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(245,153,17)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.03%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(229,116,14)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(207,199,5)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(218,112,5)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="628" width="12" height="15" fill="rgb(254,102,8)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="644" width="12" height="15" fill="rgb(246,208,52)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="660" width="12" height="15" fill="rgb(209,163,13)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="676" width="12" height="15" fill="rgb(237,2,13)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.03%)</title><rect x="10" y="692" width="12" height="15" fill="rgb(240,94,10)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="708" width="12" height="15" fill="rgb(234,84,37)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.03%)</title><rect x="10" y="724" width="12" height="15" fill="rgb(245,66,27)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="740" width="12" height="15" fill="rgb(211,127,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="756" width="12" height="15" fill="rgb(209,122,1)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="772" width="12" height="15" fill="rgb(207,86,51)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.03%)</title><rect x="10" y="788" width="12" height="15" fill="rgb(218,175,3)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.03%)</title><rect x="10" y="804" width="12" height="15" fill="rgb(252,202,38)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.03%)</title><rect x="10" y="820" width="12" height="15" fill="rgb(214,203,53)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.03%)</title><rect x="10" y="836" width="12" height="15" fill="rgb(243,43,28)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.03%)</title><rect x="10" y="852" width="12" height="15" fill="rgb(228,14,2)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(240,146,21)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.44%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(248,103,46)"/><text x="19.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.15%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(214,165,19)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_binned_statistic.py) (1 samples, 0.15%)</title><rect x="22" y="772" width="1" height="15" fill="rgb(242,28,31)"/><text x="25.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.15%)</title><rect x="22" y="788" width="1" height="15" fill="rgb(214,82,30)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(213,173,40)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(207,109,42)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(207,159,40)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(244,50,44)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(235,58,26)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.15%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(241,200,43)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(248,113,20)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(228,37,32)"/><text x="26.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(245,31,54)"/><text x="26.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(238,216,25)"/><text x="26.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(217,219,0)"/><text x="26.00" y="958.50"></text></g><g><title>0x7f21ee9ee933 (?) (1 samples, 0.15%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(242,102,16)"/><text x="26.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="10" y="196" width="17" height="15" fill="rgb(250,86,21)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="10" y="212" width="17" height="15" fill="rgb(231,48,11)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="10" y="228" width="17" height="15" fill="rgb(206,82,46)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="10" y="244" width="17" height="15" fill="rgb(252,18,21)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.47%)</title><rect x="10" y="260" width="17" height="15" fill="rgb(215,101,21)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="10" y="276" width="17" height="15" fill="rgb(245,214,7)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.44%)</title><rect x="22" y="292" width="5" height="15" fill="rgb(242,92,34)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="308" width="5" height="15" fill="rgb(231,38,35)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="324" width="5" height="15" fill="rgb(224,145,34)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="340" width="5" height="15" fill="rgb(221,141,36)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="22" y="356" width="5" height="15" fill="rgb(243,165,41)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="372" width="5" height="15" fill="rgb(226,55,7)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.44%)</title><rect x="22" y="388" width="5" height="15" fill="rgb(209,76,54)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="404" width="5" height="15" fill="rgb(248,16,37)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="420" width="5" height="15" fill="rgb(235,121,11)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="436" width="5" height="15" fill="rgb(215,59,38)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="22" y="452" width="5" height="15" fill="rgb(225,57,25)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="468" width="5" height="15" fill="rgb(239,118,15)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.44%)</title><rect x="22" y="484" width="5" height="15" fill="rgb(214,3,44)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="500" width="5" height="15" fill="rgb(226,210,25)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="516" width="5" height="15" fill="rgb(242,124,51)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="532" width="5" height="15" fill="rgb(219,165,12)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="22" y="548" width="5" height="15" fill="rgb(237,74,16)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="564" width="5" height="15" fill="rgb(230,24,51)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.44%)</title><rect x="22" y="580" width="5" height="15" fill="rgb(243,160,39)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="596" width="5" height="15" fill="rgb(249,113,31)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="612" width="5" height="15" fill="rgb(212,102,33)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="628" width="5" height="15" fill="rgb(218,115,31)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="22" y="644" width="5" height="15" fill="rgb(236,16,23)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="660" width="5" height="15" fill="rgb(248,57,35)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.44%)</title><rect x="22" y="676" width="5" height="15" fill="rgb(210,121,3)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="692" width="5" height="15" fill="rgb(250,147,2)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="708" width="5" height="15" fill="rgb(224,181,2)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="724" width="5" height="15" fill="rgb(229,226,21)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="22" y="740" width="5" height="15" fill="rgb(252,228,38)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="22" y="756" width="5" height="15" fill="rgb(243,124,27)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.29%)</title><rect x="23" y="772" width="4" height="15" fill="rgb(208,63,32)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(208,166,48)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(231,167,30)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(215,152,17)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(218,33,45)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(214,203,21)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(243,7,15)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(238,92,47)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.15%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(245,69,1)"/><text x="28.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(227,49,21)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(230,174,45)"/><text x="28.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(209,55,32)"/><text x="28.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(240,180,1)"/><text x="28.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(240,109,50)"/><text x="28.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(231,195,4)"/><text x="28.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(247,211,54)"/><text x="28.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(252,199,35)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(229,29,38)"/><text x="28.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(215,153,20)"/><text x="28.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(227,7,52)"/><text x="28.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(252,168,18)"/><text x="28.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(212,199,48)"/><text x="28.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.15%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(222,20,53)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(218,226,7)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(205,148,13)"/><text x="28.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(218,44,52)"/><text x="28.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(205,137,29)"/><text x="28.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(206,142,22)"/><text x="28.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.15%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(207,182,44)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(237,44,37)"/><text x="28.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(240,211,25)"/><text x="28.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(215,15,14)"/><text x="28.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(242,174,11)"/><text x="28.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(224,208,51)"/><text x="28.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py) (1 samples, 0.15%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(254,92,31)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1332" width="2" height="15" fill="rgb(252,84,42)"/><text x="28.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1348" width="2" height="15" fill="rgb(230,33,49)"/><text x="28.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1364" width="2" height="15" fill="rgb(205,138,12)"/><text x="28.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1380" width="2" height="15" fill="rgb(253,6,30)"/><text x="28.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1396" width="2" height="15" fill="rgb(232,114,38)"/><text x="28.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py) (1 samples, 0.15%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(242,125,11)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1428" width="2" height="15" fill="rgb(240,196,10)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1444" width="2" height="15" fill="rgb(215,39,40)"/><text x="28.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1460" width="2" height="15" fill="rgb(237,58,42)"/><text x="28.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1476" width="2" height="15" fill="rgb(254,108,49)"/><text x="28.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1492" width="2" height="15" fill="rgb(211,177,54)"/><text x="28.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/least_squares.py) (1 samples, 0.15%)</title><rect x="25" y="1508" width="2" height="15" fill="rgb(230,177,53)"/><text x="28.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1524" width="2" height="15" fill="rgb(225,67,20)"/><text x="28.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(248,176,41)"/><text x="28.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(222,72,28)"/><text x="28.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(206,176,16)"/><text x="28.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(208,133,51)"/><text x="28.00" y="1598.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(214,14,49)"/><text x="28.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(235,26,11)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(245,59,15)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(209,210,43)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(210,129,43)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="27" y="1188" width="2" height="15" fill="rgb(209,128,10)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(250,150,27)"/><text x="30.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(218,127,32)"/><text x="30.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(245,177,51)"/><text x="30.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(225,175,29)"/><text x="30.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(210,10,50)"/><text x="30.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(215,174,25)"/><text x="30.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.15%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(212,11,10)"/><text x="30.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(215,192,3)"/><text x="30.00" y="1326.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(215,49,17)"/><text x="30.00" y="1342.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(236,210,35)"/><text x="30.00" y="1358.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(235,156,27)"/><text x="30.00" y="1374.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(226,76,6)"/><text x="30.00" y="1390.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(246,95,54)"/><text x="30.00" y="1406.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1412" width="2" height="15" fill="rgb(221,166,3)"/><text x="30.00" y="1422.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1428" width="2" height="15" fill="rgb(235,84,52)"/><text x="30.00" y="1438.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1444" width="2" height="15" fill="rgb(251,24,16)"/><text x="30.00" y="1454.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1460" width="2" height="15" fill="rgb(206,13,48)"/><text x="30.00" y="1470.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1476" width="2" height="15" fill="rgb(254,189,23)"/><text x="30.00" y="1486.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1492" width="2" height="15" fill="rgb(227,169,8)"/><text x="30.00" y="1502.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1508" width="2" height="15" fill="rgb(249,14,37)"/><text x="30.00" y="1518.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1524" width="2" height="15" fill="rgb(240,165,35)"/><text x="30.00" y="1534.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(207,178,27)"/><text x="30.00" y="1550.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(229,124,15)"/><text x="30.00" y="1566.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.15%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(214,44,53)"/><text x="30.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1412" width="1" height="15" fill="rgb(222,65,54)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1428" width="1" height="15" fill="rgb(206,151,6)"/><text x="32.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1444" width="1" height="15" fill="rgb(219,54,25)"/><text x="32.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1460" width="1" height="15" fill="rgb(215,130,3)"/><text x="32.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="29" y="1476" width="1" height="15" fill="rgb(254,113,37)"/><text x="32.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1492" width="1" height="15" fill="rgb(229,80,54)"/><text x="32.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="1508" width="1" height="15" fill="rgb(211,200,12)"/><text x="32.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1524" width="1" height="15" fill="rgb(233,194,49)"/><text x="32.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1540" width="1" height="15" fill="rgb(226,11,43)"/><text x="32.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1556" width="1" height="15" fill="rgb(207,224,29)"/><text x="32.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="29" y="1572" width="1" height="15" fill="rgb(239,37,8)"/><text x="32.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1588" width="1" height="15" fill="rgb(215,113,8)"/><text x="32.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.15%)</title><rect x="29" y="1604" width="1" height="15" fill="rgb(225,139,39)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1620" width="1" height="15" fill="rgb(247,191,34)"/><text x="32.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1636" width="1" height="15" fill="rgb(214,81,8)"/><text x="32.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1652" width="1" height="15" fill="rgb(214,180,46)"/><text x="32.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1668" width="1" height="15" fill="rgb(229,184,52)"/><text x="32.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1684" width="1" height="15" fill="rgb(230,206,21)"/><text x="32.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1700" width="1" height="15" fill="rgb(245,120,38)"/><text x="32.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="29" y="1716" width="1" height="15" fill="rgb(238,118,1)"/><text x="32.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1732" width="1" height="15" fill="rgb(208,190,22)"/><text x="32.00" y="1742.50"></text></g><g><title>&lt;module&gt; (skl2onnx/helpers/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="1748" width="1" height="15" fill="rgb(237,96,10)"/><text x="32.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1764" width="1" height="15" fill="rgb(232,217,42)"/><text x="32.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1780" width="1" height="15" fill="rgb(214,168,54)"/><text x="32.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1796" width="1" height="15" fill="rgb(249,123,48)"/><text x="32.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="29" y="1812" width="1" height="15" fill="rgb(232,168,34)"/><text x="32.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="29" y="1828" width="1" height="15" fill="rgb(253,18,35)"/><text x="32.00" y="1838.50"></text></g><g><title>&lt;module&gt; (skl2onnx/helpers/investigate.py) (1 samples, 0.15%)</title><rect x="29" y="1844" width="1" height="15" fill="rgb(228,7,24)"/><text x="32.00" y="1854.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(241,20,1)"/><text x="33.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(252,131,0)"/><text x="33.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(235,20,1)"/><text x="33.00" y="1646.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(232,165,14)"/><text x="33.00" y="1662.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(214,108,36)"/><text x="33.00" y="1678.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(222,217,5)"/><text x="33.00" y="1694.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(228,227,1)"/><text x="33.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="484" width="7" height="15" fill="rgb(233,150,24)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="500" width="7" height="15" fill="rgb(241,220,5)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="516" width="7" height="15" fill="rgb(243,1,33)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="532" width="7" height="15" fill="rgb(209,6,36)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="548" width="7" height="15" fill="rgb(247,113,35)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="564" width="7" height="15" fill="rgb(223,39,33)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.59%)</title><rect x="27" y="580" width="7" height="15" fill="rgb(235,32,49)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="596" width="7" height="15" fill="rgb(208,3,4)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="612" width="7" height="15" fill="rgb(221,186,5)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="628" width="7" height="15" fill="rgb(245,186,50)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="644" width="7" height="15" fill="rgb(222,128,27)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="660" width="7" height="15" fill="rgb(207,73,39)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.59%)</title><rect x="27" y="676" width="7" height="15" fill="rgb(250,110,17)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="692" width="7" height="15" fill="rgb(213,38,27)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="708" width="7" height="15" fill="rgb(252,7,22)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="724" width="7" height="15" fill="rgb(211,124,48)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="740" width="7" height="15" fill="rgb(246,142,26)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="756" width="7" height="15" fill="rgb(217,110,52)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.59%)</title><rect x="27" y="772" width="7" height="15" fill="rgb(239,216,48)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="788" width="7" height="15" fill="rgb(232,2,38)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="804" width="7" height="15" fill="rgb(210,227,33)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="820" width="7" height="15" fill="rgb(219,12,29)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="836" width="7" height="15" fill="rgb(205,110,7)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="852" width="7" height="15" fill="rgb(226,229,38)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.59%)</title><rect x="27" y="868" width="7" height="15" fill="rgb(223,18,21)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="884" width="7" height="15" fill="rgb(243,188,45)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="900" width="7" height="15" fill="rgb(224,172,36)"/><text x="30.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="916" width="7" height="15" fill="rgb(239,89,49)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="932" width="7" height="15" fill="rgb(253,12,54)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="948" width="7" height="15" fill="rgb(239,3,41)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="964" width="7" height="15" fill="rgb(222,59,26)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="980" width="7" height="15" fill="rgb(212,221,10)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="996" width="7" height="15" fill="rgb(254,177,29)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.59%)</title><rect x="27" y="1012" width="7" height="15" fill="rgb(222,175,42)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="1028" width="7" height="15" fill="rgb(239,8,21)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="1044" width="7" height="15" fill="rgb(210,5,23)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="1060" width="7" height="15" fill="rgb(216,131,52)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="27" y="1076" width="7" height="15" fill="rgb(239,74,30)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="27" y="1092" width="7" height="15" fill="rgb(230,192,36)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.59%)</title><rect x="27" y="1108" width="7" height="15" fill="rgb(242,146,41)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1124" width="5" height="15" fill="rgb(215,224,33)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1140" width="5" height="15" fill="rgb(218,213,49)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1156" width="5" height="15" fill="rgb(206,90,0)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1172" width="5" height="15" fill="rgb(252,160,11)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1188" width="5" height="15" fill="rgb(223,134,32)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="29" y="1204" width="5" height="15" fill="rgb(211,16,36)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1220" width="5" height="15" fill="rgb(237,222,2)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.44%)</title><rect x="29" y="1236" width="5" height="15" fill="rgb(223,15,14)"/><text x="32.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1252" width="5" height="15" fill="rgb(226,214,33)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1268" width="5" height="15" fill="rgb(214,184,41)"/><text x="32.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1284" width="5" height="15" fill="rgb(245,81,8)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1300" width="5" height="15" fill="rgb(218,28,54)"/><text x="32.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1316" width="5" height="15" fill="rgb(251,225,42)"/><text x="32.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.44%)</title><rect x="29" y="1332" width="5" height="15" fill="rgb(245,79,26)"/><text x="32.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1348" width="5" height="15" fill="rgb(225,162,45)"/><text x="32.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.44%)</title><rect x="29" y="1364" width="5" height="15" fill="rgb(236,71,11)"/><text x="32.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1380" width="5" height="15" fill="rgb(210,18,36)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.44%)</title><rect x="29" y="1396" width="5" height="15" fill="rgb(242,181,24)"/><text x="32.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1412" width="4" height="15" fill="rgb(241,167,10)"/><text x="33.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="30" y="1428" width="4" height="15" fill="rgb(229,45,46)"/><text x="33.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="30" y="1444" width="4" height="15" fill="rgb(217,168,20)"/><text x="33.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.29%)</title><rect x="30" y="1460" width="4" height="15" fill="rgb(231,225,40)"/><text x="33.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.29%)</title><rect x="30" y="1476" width="4" height="15" fill="rgb(254,60,41)"/><text x="33.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.29%)</title><rect x="30" y="1492" width="4" height="15" fill="rgb(228,157,31)"/><text x="33.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.29%)</title><rect x="30" y="1508" width="4" height="15" fill="rgb(206,210,52)"/><text x="33.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.29%)</title><rect x="30" y="1524" width="4" height="15" fill="rgb(215,151,32)"/><text x="33.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.29%)</title><rect x="30" y="1540" width="4" height="15" fill="rgb(206,79,23)"/><text x="33.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.29%)</title><rect x="30" y="1556" width="4" height="15" fill="rgb(212,189,9)"/><text x="33.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.29%)</title><rect x="30" y="1572" width="4" height="15" fill="rgb(223,126,44)"/><text x="33.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.29%)</title><rect x="30" y="1588" width="4" height="15" fill="rgb(243,68,8)"/><text x="33.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="32" y="1604" width="2" height="15" fill="rgb(241,94,25)"/><text x="35.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.15%)</title><rect x="32" y="1620" width="2" height="15" fill="rgb(235,15,38)"/><text x="35.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.15%)</title><rect x="32" y="1636" width="2" height="15" fill="rgb(240,103,46)"/><text x="35.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="32" y="1652" width="2" height="15" fill="rgb(246,222,11)"/><text x="35.00" y="1662.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.15%)</title><rect x="34" y="724" width="1" height="15" fill="rgb(251,50,4)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="740" width="1" height="15" fill="rgb(246,130,1)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="756" width="1" height="15" fill="rgb(214,61,40)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="772" width="1" height="15" fill="rgb(250,135,31)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="788" width="1" height="15" fill="rgb(249,117,3)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="804" width="1" height="15" fill="rgb(239,212,49)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.15%)</title><rect x="34" y="820" width="1" height="15" fill="rgb(239,221,25)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="836" width="1" height="15" fill="rgb(218,95,20)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="852" width="1" height="15" fill="rgb(216,168,36)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="868" width="1" height="15" fill="rgb(229,151,31)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="884" width="1" height="15" fill="rgb(206,87,49)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="900" width="1" height="15" fill="rgb(208,109,53)"/><text x="37.00" y="910.50"></text></g><g><title>0x7f21dbfcd40e (?) (1 samples, 0.15%)</title><rect x="34" y="916" width="1" height="15" fill="rgb(209,80,38)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="932" width="1" height="15" fill="rgb(253,116,19)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="948" width="1" height="15" fill="rgb(222,104,36)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="964" width="1" height="15" fill="rgb(210,161,33)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="980" width="1" height="15" fill="rgb(243,80,49)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="996" width="1" height="15" fill="rgb(239,87,37)"/><text x="37.00" y="1006.50"></text></g><g><title>0x7f21dbd86cd2 (?) (1 samples, 0.15%)</title><rect x="34" y="1012" width="1" height="15" fill="rgb(215,124,32)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1028" width="1" height="15" fill="rgb(222,95,24)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1044" width="1" height="15" fill="rgb(219,5,21)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1060" width="1" height="15" fill="rgb(241,54,41)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="1076" width="1" height="15" fill="rgb(229,172,35)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1092" width="1" height="15" fill="rgb(222,201,29)"/><text x="37.00" y="1102.50"></text></g><g><title>0x7f21db47c0e5 (?) (1 samples, 0.15%)</title><rect x="34" y="1108" width="1" height="15" fill="rgb(222,97,38)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1124" width="1" height="15" fill="rgb(205,125,27)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1140" width="1" height="15" fill="rgb(210,135,37)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1156" width="1" height="15" fill="rgb(247,172,34)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="1172" width="1" height="15" fill="rgb(230,2,44)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1188" width="1" height="15" fill="rgb(232,19,48)"/><text x="37.00" y="1198.50"></text></g><g><title>0x7f21db200e68 (?) (1 samples, 0.15%)</title><rect x="34" y="1204" width="1" height="15" fill="rgb(233,28,28)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1220" width="1" height="15" fill="rgb(251,73,21)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1236" width="1" height="15" fill="rgb(238,13,9)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1252" width="1" height="15" fill="rgb(243,93,37)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="1268" width="1" height="15" fill="rgb(222,212,0)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1284" width="1" height="15" fill="rgb(219,128,6)"/><text x="37.00" y="1294.50"></text></g><g><title>0x7f21daf912fb (?) (1 samples, 0.15%)</title><rect x="34" y="1300" width="1" height="15" fill="rgb(232,192,22)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1316" width="1" height="15" fill="rgb(216,171,43)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1332" width="1" height="15" fill="rgb(226,15,50)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1348" width="1" height="15" fill="rgb(227,212,44)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="1364" width="1" height="15" fill="rgb(246,53,10)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1380" width="1" height="15" fill="rgb(207,98,6)"/><text x="37.00" y="1390.50"></text></g><g><title>0x7f21dad75153 (?) (1 samples, 0.15%)</title><rect x="34" y="1396" width="1" height="15" fill="rgb(230,16,17)"/><text x="37.00" y="1406.50"></text></g><g><title>0x7f21dad73c13 (?) (1 samples, 0.15%)</title><rect x="34" y="1412" width="1" height="15" fill="rgb(243,204,12)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1428" width="1" height="15" fill="rgb(215,216,16)"/><text x="37.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1444" width="1" height="15" fill="rgb(216,29,1)"/><text x="37.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1460" width="1" height="15" fill="rgb(239,153,37)"/><text x="37.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="34" y="1476" width="1" height="15" fill="rgb(235,147,19)"/><text x="37.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="34" y="1492" width="1" height="15" fill="rgb(220,77,18)"/><text x="37.00" y="1502.50"></text></g><g><title>0x7f21daad0181 (?) (1 samples, 0.15%)</title><rect x="34" y="1508" width="1" height="15" fill="rgb(246,162,4)"/><text x="37.00" y="1518.50"></text></g><g><title>0x7f21daad31c9 (?) (1 samples, 0.15%)</title><rect x="34" y="1524" width="1" height="15" fill="rgb(243,149,46)"/><text x="37.00" y="1534.50"></text></g><g><title>0x7f21daaff167 (?) (1 samples, 0.15%)</title><rect x="34" y="1540" width="1" height="15" fill="rgb(254,101,5)"/><text x="37.00" y="1550.50"></text></g><g><title>0x7f21daafab64 (?) (1 samples, 0.15%)</title><rect x="34" y="1556" width="1" height="15" fill="rgb(215,1,1)"/><text x="37.00" y="1566.50"></text></g><g><title>0x7f21daade07b (?) (1 samples, 0.15%)</title><rect x="34" y="1572" width="1" height="15" fill="rgb(250,172,50)"/><text x="37.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.15%)</title><rect x="34" y="1588" width="1" height="15" fill="rgb(205,184,2)"/><text x="37.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="34" y="1604" width="1" height="15" fill="rgb(229,186,44)"/><text x="37.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="34" y="1620" width="1" height="15" fill="rgb(206,30,22)"/><text x="37.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.15%)</title><rect x="34" y="1636" width="1" height="15" fill="rgb(249,177,13)"/><text x="37.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.15%)</title><rect x="34" y="1652" width="1" height="15" fill="rgb(210,49,4)"/><text x="37.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="34" y="1668" width="1" height="15" fill="rgb(251,79,23)"/><text x="37.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.15%)</title><rect x="35" y="1012" width="2" height="15" fill="rgb(249,182,29)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1028" width="2" height="15" fill="rgb(227,48,40)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1044" width="2" height="15" fill="rgb(232,39,14)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1060" width="2" height="15" fill="rgb(218,33,5)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1076" width="2" height="15" fill="rgb(215,163,5)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1092" width="2" height="15" fill="rgb(237,92,33)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.15%)</title><rect x="35" y="1108" width="2" height="15" fill="rgb(250,210,34)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1124" width="2" height="15" fill="rgb(231,55,34)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1140" width="2" height="15" fill="rgb(218,118,18)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1156" width="2" height="15" fill="rgb(213,183,17)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1172" width="2" height="15" fill="rgb(221,52,51)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1188" width="2" height="15" fill="rgb(232,36,43)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.15%)</title><rect x="35" y="1204" width="2" height="15" fill="rgb(224,114,49)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1220" width="2" height="15" fill="rgb(240,34,42)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1236" width="2" height="15" fill="rgb(247,194,14)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="35" y="1252" width="2" height="15" fill="rgb(230,143,45)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1268" width="2" height="15" fill="rgb(243,168,49)"/><text x="38.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1284" width="2" height="15" fill="rgb(221,218,47)"/><text x="38.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="35" y="1300" width="2" height="15" fill="rgb(220,51,27)"/><text x="38.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.29%)</title><rect x="35" y="724" width="4" height="15" fill="rgb(239,23,14)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="740" width="4" height="15" fill="rgb(242,164,23)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="756" width="4" height="15" fill="rgb(235,134,47)"/><text x="38.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="772" width="4" height="15" fill="rgb(234,181,24)"/><text x="38.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="35" y="788" width="4" height="15" fill="rgb(248,123,24)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="804" width="4" height="15" fill="rgb(245,175,21)"/><text x="38.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.29%)</title><rect x="35" y="820" width="4" height="15" fill="rgb(241,39,20)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="836" width="4" height="15" fill="rgb(213,115,15)"/><text x="38.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="852" width="4" height="15" fill="rgb(222,59,34)"/><text x="38.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="868" width="4" height="15" fill="rgb(235,91,48)"/><text x="38.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="35" y="884" width="4" height="15" fill="rgb(251,217,27)"/><text x="38.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="900" width="4" height="15" fill="rgb(230,5,0)"/><text x="38.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.29%)</title><rect x="35" y="916" width="4" height="15" fill="rgb(243,160,48)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="932" width="4" height="15" fill="rgb(207,143,23)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="948" width="4" height="15" fill="rgb(245,101,44)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="964" width="4" height="15" fill="rgb(210,127,39)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.29%)</title><rect x="35" y="980" width="4" height="15" fill="rgb(218,157,12)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.29%)</title><rect x="35" y="996" width="4" height="15" fill="rgb(251,175,14)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.15%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(235,77,0)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(239,147,4)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(211,70,21)"/><text x="40.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(236,178,14)"/><text x="40.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(243,199,21)"/><text x="40.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(224,5,35)"/><text x="40.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(241,203,27)"/><text x="40.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(234,84,49)"/><text x="40.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(253,187,0)"/><text x="40.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(230,175,26)"/><text x="40.00" y="1166.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1172" width="2" height="15" fill="rgb(246,4,10)"/><text x="40.00" y="1182.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="37" y="1188" width="2" height="15" fill="rgb(214,178,45)"/><text x="40.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.17%)</title><rect x="27" y="436" width="14" height="15" fill="rgb(250,74,0)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.17%)</title><rect x="27" y="452" width="14" height="15" fill="rgb(228,16,21)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.17%)</title><rect x="27" y="468" width="14" height="15" fill="rgb(226,71,13)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="484" width="7" height="15" fill="rgb(238,5,41)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="34" y="500" width="7" height="15" fill="rgb(243,83,47)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="516" width="7" height="15" fill="rgb(223,30,32)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.59%)</title><rect x="34" y="532" width="7" height="15" fill="rgb(218,106,24)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="548" width="7" height="15" fill="rgb(234,132,22)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="564" width="7" height="15" fill="rgb(207,111,10)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="580" width="7" height="15" fill="rgb(248,37,19)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="34" y="596" width="7" height="15" fill="rgb(254,130,43)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="612" width="7" height="15" fill="rgb(236,55,27)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.59%)</title><rect x="34" y="628" width="7" height="15" fill="rgb(241,203,45)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="644" width="7" height="15" fill="rgb(252,212,27)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="660" width="7" height="15" fill="rgb(242,175,41)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="676" width="7" height="15" fill="rgb(218,188,14)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.59%)</title><rect x="34" y="692" width="7" height="15" fill="rgb(237,86,50)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.59%)</title><rect x="34" y="708" width="7" height="15" fill="rgb(242,49,32)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.15%)</title><rect x="39" y="724" width="2" height="15" fill="rgb(246,164,47)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="740" width="2" height="15" fill="rgb(207,135,20)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="756" width="2" height="15" fill="rgb(218,113,16)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="772" width="2" height="15" fill="rgb(235,31,35)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="788" width="2" height="15" fill="rgb(230,153,53)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="804" width="2" height="15" fill="rgb(248,105,4)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.15%)</title><rect x="39" y="820" width="2" height="15" fill="rgb(236,156,32)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="836" width="2" height="15" fill="rgb(217,208,27)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="852" width="2" height="15" fill="rgb(216,218,9)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="868" width="2" height="15" fill="rgb(241,21,16)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="884" width="2" height="15" fill="rgb(239,68,30)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="900" width="2" height="15" fill="rgb(227,159,16)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/pytables.py) (1 samples, 0.15%)</title><rect x="39" y="916" width="2" height="15" fill="rgb(238,142,30)"/><text x="42.00" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="932" width="2" height="15" fill="rgb(245,18,28)"/><text x="42.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="948" width="2" height="15" fill="rgb(247,148,5)"/><text x="42.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="964" width="2" height="15" fill="rgb(216,30,36)"/><text x="42.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="980" width="2" height="15" fill="rgb(247,161,46)"/><text x="42.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="996" width="2" height="15" fill="rgb(254,51,9)"/><text x="42.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="1012" width="2" height="15" fill="rgb(221,62,52)"/><text x="42.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="1028" width="2" height="15" fill="rgb(232,168,54)"/><text x="42.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/expr.py) (1 samples, 0.15%)</title><rect x="39" y="1044" width="2" height="15" fill="rgb(212,174,54)"/><text x="42.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 1.32%)</title><rect x="27" y="340" width="15" height="15" fill="rgb(246,218,32)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.32%)</title><rect x="27" y="356" width="15" height="15" fill="rgb(243,19,46)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.32%)</title><rect x="27" y="372" width="15" height="15" fill="rgb(226,148,51)"/><text x="30.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.32%)</title><rect x="27" y="388" width="15" height="15" fill="rgb(208,95,50)"/><text x="30.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.32%)</title><rect x="27" y="404" width="15" height="15" fill="rgb(214,69,41)"/><text x="30.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.32%)</title><rect x="27" y="420" width="15" height="15" fill="rgb(243,136,20)"/><text x="30.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.15%)</title><rect x="41" y="436" width="1" height="15" fill="rgb(249,37,17)"/><text x="44.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="452" width="1" height="15" fill="rgb(223,183,37)"/><text x="44.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="468" width="1" height="15" fill="rgb(235,87,13)"/><text x="44.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="484" width="1" height="15" fill="rgb(227,197,42)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="41" y="500" width="1" height="15" fill="rgb(228,4,22)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="516" width="1" height="15" fill="rgb(245,205,51)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.15%)</title><rect x="41" y="532" width="1" height="15" fill="rgb(213,34,26)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="548" width="1" height="15" fill="rgb(224,214,14)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="564" width="1" height="15" fill="rgb(219,0,8)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="580" width="1" height="15" fill="rgb(219,182,38)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="41" y="596" width="1" height="15" fill="rgb(216,213,7)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="612" width="1" height="15" fill="rgb(248,167,29)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.15%)</title><rect x="41" y="628" width="1" height="15" fill="rgb(237,150,26)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="644" width="1" height="15" fill="rgb(232,112,43)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="660" width="1" height="15" fill="rgb(220,221,29)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="676" width="1" height="15" fill="rgb(238,45,44)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="41" y="692" width="1" height="15" fill="rgb(249,120,52)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="41" y="708" width="1" height="15" fill="rgb(238,61,38)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.15%)</title><rect x="41" y="724" width="1" height="15" fill="rgb(214,47,16)"/><text x="44.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 1.47%)</title><rect x="27" y="244" width="17" height="15" fill="rgb(254,127,35)"/><text x="30.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="27" y="260" width="17" height="15" fill="rgb(220,104,13)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="27" y="276" width="17" height="15" fill="rgb(212,141,25)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="27" y="292" width="17" height="15" fill="rgb(211,157,38)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.47%)</title><rect x="27" y="308" width="17" height="15" fill="rgb(225,136,28)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.47%)</title><rect x="27" y="324" width="17" height="15" fill="rgb(223,208,40)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.15%)</title><rect x="42" y="340" width="2" height="15" fill="rgb(228,227,29)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="356" width="2" height="15" fill="rgb(224,171,0)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="372" width="2" height="15" fill="rgb(207,113,38)"/><text x="45.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="388" width="2" height="15" fill="rgb(215,215,23)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="404" width="2" height="15" fill="rgb(252,80,10)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="420" width="2" height="15" fill="rgb(229,38,7)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="436" width="2" height="15" fill="rgb(232,129,7)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="452" width="2" height="15" fill="rgb(247,30,27)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="468" width="2" height="15" fill="rgb(250,91,32)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.15%)</title><rect x="42" y="484" width="2" height="15" fill="rgb(223,149,18)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="500" width="2" height="15" fill="rgb(216,140,49)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="516" width="2" height="15" fill="rgb(240,7,15)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="532" width="2" height="15" fill="rgb(229,98,48)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="548" width="2" height="15" fill="rgb(205,206,43)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="564" width="2" height="15" fill="rgb(225,165,22)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="42" y="580" width="2" height="15" fill="rgb(216,153,41)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="596" width="2" height="15" fill="rgb(224,97,45)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="612" width="2" height="15" fill="rgb(254,9,27)"/><text x="45.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="628" width="2" height="15" fill="rgb(223,193,45)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="644" width="2" height="15" fill="rgb(220,52,11)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="660" width="2" height="15" fill="rgb(210,109,38)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="676" width="2" height="15" fill="rgb(212,74,18)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="692" width="2" height="15" fill="rgb(253,107,28)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="708" width="2" height="15" fill="rgb(220,163,4)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.15%)</title><rect x="42" y="724" width="2" height="15" fill="rgb(223,87,25)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="740" width="2" height="15" fill="rgb(244,204,28)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="756" width="2" height="15" fill="rgb(215,133,17)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="772" width="2" height="15" fill="rgb(248,135,25)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="788" width="2" height="15" fill="rgb(210,67,18)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="804" width="2" height="15" fill="rgb(210,229,7)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.15%)</title><rect x="42" y="820" width="2" height="15" fill="rgb(214,118,4)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="836" width="2" height="15" fill="rgb(226,158,11)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="852" width="2" height="15" fill="rgb(251,208,49)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="868" width="2" height="15" fill="rgb(241,31,43)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="884" width="2" height="15" fill="rgb(217,162,12)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="900" width="2" height="15" fill="rgb(219,215,14)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.15%)</title><rect x="42" y="916" width="2" height="15" fill="rgb(254,150,14)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="932" width="2" height="15" fill="rgb(208,220,26)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="948" width="2" height="15" fill="rgb(212,163,45)"/><text x="45.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="964" width="2" height="15" fill="rgb(247,77,5)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="980" width="2" height="15" fill="rgb(248,110,38)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="996" width="2" height="15" fill="rgb(207,158,42)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1012" width="2" height="15" fill="rgb(222,49,43)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1028" width="2" height="15" fill="rgb(230,222,14)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1044" width="2" height="15" fill="rgb(244,100,30)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.15%)</title><rect x="42" y="1060" width="2" height="15" fill="rgb(244,170,11)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1076" width="2" height="15" fill="rgb(249,160,54)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1092" width="2" height="15" fill="rgb(249,180,10)"/><text x="45.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1108" width="2" height="15" fill="rgb(234,99,32)"/><text x="45.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1124" width="2" height="15" fill="rgb(207,49,30)"/><text x="45.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1140" width="2" height="15" fill="rgb(244,83,12)"/><text x="45.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="1156" width="2" height="15" fill="rgb(207,60,29)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="68" width="36" height="15" fill="rgb(232,197,53)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="84" width="36" height="15" fill="rgb(222,138,28)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="100" width="36" height="15" fill="rgb(222,202,32)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 3.08%)</title><rect x="10" y="116" width="36" height="15" fill="rgb(210,197,23)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="132" width="36" height="15" fill="rgb(232,50,36)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (21 samples, 3.08%)</title><rect x="10" y="148" width="36" height="15" fill="rgb(244,18,47)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="164" width="36" height="15" fill="rgb(223,196,27)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.08%)</title><rect x="10" y="180" width="36" height="15" fill="rgb(237,138,40)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.61%)</title><rect x="27" y="196" width="19" height="15" fill="rgb(246,104,8)"/><text x="30.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.61%)</title><rect x="27" y="212" width="19" height="15" fill="rgb(228,161,24)"/><text x="30.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.61%)</title><rect x="27" y="228" width="19" height="15" fill="rgb(233,193,14)"/><text x="30.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.15%)</title><rect x="44" y="244" width="2" height="15" fill="rgb(238,16,26)"/><text x="47.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="260" width="2" height="15" fill="rgb(245,104,3)"/><text x="47.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="276" width="2" height="15" fill="rgb(223,201,37)"/><text x="47.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="292" width="2" height="15" fill="rgb(254,107,47)"/><text x="47.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="308" width="2" height="15" fill="rgb(238,215,52)"/><text x="47.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="324" width="2" height="15" fill="rgb(205,17,35)"/><text x="47.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="340" width="2" height="15" fill="rgb(246,151,5)"/><text x="47.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="356" width="2" height="15" fill="rgb(229,221,10)"/><text x="47.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.15%)</title><rect x="44" y="372" width="2" height="15" fill="rgb(246,205,31)"/><text x="47.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="388" width="2" height="15" fill="rgb(212,120,4)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="404" width="2" height="15" fill="rgb(236,144,17)"/><text x="47.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="420" width="2" height="15" fill="rgb(254,202,15)"/><text x="47.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="436" width="2" height="15" fill="rgb(206,6,10)"/><text x="47.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="452" width="2" height="15" fill="rgb(216,156,4)"/><text x="47.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.15%)</title><rect x="44" y="468" width="2" height="15" fill="rgb(253,25,6)"/><text x="47.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="484" width="2" height="15" fill="rgb(245,152,37)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="500" width="2" height="15" fill="rgb(242,95,29)"/><text x="47.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="516" width="2" height="15" fill="rgb(241,203,13)"/><text x="47.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="532" width="2" height="15" fill="rgb(212,61,35)"/><text x="47.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="548" width="2" height="15" fill="rgb(227,222,13)"/><text x="47.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.15%)</title><rect x="44" y="564" width="2" height="15" fill="rgb(252,97,13)"/><text x="47.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="580" width="2" height="15" fill="rgb(249,89,41)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="596" width="2" height="15" fill="rgb(246,190,5)"/><text x="47.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="612" width="2" height="15" fill="rgb(225,110,31)"/><text x="47.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="628" width="2" height="15" fill="rgb(218,146,22)"/><text x="47.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="644" width="2" height="15" fill="rgb(222,25,18)"/><text x="47.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.15%)</title><rect x="44" y="660" width="2" height="15" fill="rgb(237,179,39)"/><text x="47.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(237,142,36)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(243,130,1)"/><text x="47.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(252,77,20)"/><text x="47.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(235,66,16)"/><text x="47.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(242,123,16)"/><text x="47.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.15%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(251,99,25)"/><text x="47.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(211,212,2)"/><text x="47.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(222,58,25)"/><text x="47.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(231,161,25)"/><text x="47.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(229,206,1)"/><text x="47.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(228,171,18)"/><text x="47.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.15%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(235,137,19)"/><text x="47.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(241,214,23)"/><text x="47.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(232,66,38)"/><text x="47.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(223,179,48)"/><text x="47.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(237,59,43)"/><text x="47.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(238,203,50)"/><text x="47.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.15%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(227,62,50)"/><text x="47.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.15%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(207,181,12)"/><text x="47.00" y="974.50"></text></g><g><title>0x7f2203723bc6 (libc-2.29.so) (2 samples, 0.29%)</title><rect x="60" y="132" width="3" height="15" fill="rgb(219,65,53)"/><text x="63.00" y="142.50"></text></g><g><title>0x7f2203723c04 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="63" y="132" width="2" height="15" fill="rgb(242,159,33)"/><text x="66.00" y="142.50"></text></g><g><title>0x7f2203723c2d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="65" y="132" width="2" height="15" fill="rgb(231,100,2)"/><text x="68.00" y="142.50"></text></g><g><title>0x7f2203723c36 (libc-2.29.so) (2 samples, 0.29%)</title><rect x="67" y="132" width="3" height="15" fill="rgb(238,131,9)"/><text x="70.00" y="142.50"></text></g><g><title>0x7f2203723c5a (libc-2.29.so) (2 samples, 0.29%)</title><rect x="70" y="132" width="4" height="15" fill="rgb(222,200,51)"/><text x="73.00" y="142.50"></text></g><g><title>0x7f2203723aaf (libc-2.29.so) (2 samples, 0.29%)</title><rect x="74" y="148" width="3" height="15" fill="rgb(210,115,3)"/><text x="77.00" y="158.50"></text></g><g><title>0x7f2203724eb0 (libc-2.29.so) (11 samples, 1.61%)</title><rect x="60" y="116" width="19" height="15" fill="rgb(237,164,9)"/><text x="63.00" y="126.50"></text></g><g><title>0x7f2203723c73 (libc-2.29.so) (3 samples, 0.44%)</title><rect x="74" y="132" width="5" height="15" fill="rgb(210,222,41)"/><text x="77.00" y="142.50"></text></g><g><title>0x7f2203723ac1 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="77" y="148" width="2" height="15" fill="rgb(212,98,46)"/><text x="80.00" y="158.50"></text></g><g><title>0x7f21c16e7ff9 (?) (1 samples, 0.15%)</title><rect x="84" y="212" width="2" height="15" fill="rgb(236,12,0)"/><text x="87.00" y="222.50"></text></g><g><title>0x7f21c16e2ef6 (?) (1 samples, 0.15%)</title><rect x="84" y="228" width="2" height="15" fill="rgb(212,139,49)"/><text x="87.00" y="238.50"></text></g><g><title>0x7f21c16d7d49 (?) (1 samples, 0.15%)</title><rect x="84" y="244" width="2" height="15" fill="rgb(251,44,53)"/><text x="87.00" y="254.50"></text></g><g><title>0x7f21c16e5c1a (?) (1 samples, 0.15%)</title><rect x="84" y="260" width="2" height="15" fill="rgb(227,36,39)"/><text x="87.00" y="270.50"></text></g><g><title>0x7f21c1b0e66c (?) (1 samples, 0.15%)</title><rect x="84" y="276" width="2" height="15" fill="rgb(226,184,31)"/><text x="87.00" y="286.50"></text></g><g><title>0x7f21c16c5e08 (?) (1 samples, 0.15%)</title><rect x="84" y="292" width="2" height="15" fill="rgb(215,181,52)"/><text x="87.00" y="302.50"></text></g><g><title>0x7f220372499b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="84" y="308" width="2" height="15" fill="rgb(211,63,30)"/><text x="87.00" y="318.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (12 samples, 1.76%)</title><rect x="86" y="212" width="20" height="15" fill="rgb(251,153,10)"/><text x="89.00" y="222.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="106" y="228" width="2" height="15" fill="rgb(227,182,39)"/><text x="109.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="106" y="244" width="2" height="15" fill="rgb(236,28,39)"/><text x="109.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="110" y="292" width="2" height="15" fill="rgb(210,52,18)"/><text x="113.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="110" y="308" width="2" height="15" fill="rgb(250,23,51)"/><text x="113.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="110" y="324" width="2" height="15" fill="rgb(207,112,17)"/><text x="113.00" y="334.50"></text></g><g><title>0x7f2203726554 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(231,167,8)"/><text x="113.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="112" y="292" width="1" height="15" fill="rgb(229,145,50)"/><text x="115.00" y="302.50"></text></g><g><title>0x7f2203724d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="112" y="308" width="1" height="15" fill="rgb(236,175,3)"/><text x="115.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="113" y="292" width="2" height="15" fill="rgb(226,0,14)"/><text x="116.00" y="302.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="113" y="308" width="2" height="15" fill="rgb(243,24,16)"/><text x="116.00" y="318.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="115" y="340" width="2" height="15" fill="rgb(247,107,31)"/><text x="118.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="115" y="356" width="2" height="15" fill="rgb(246,31,33)"/><text x="118.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.44%)</title><rect x="117" y="340" width="5" height="15" fill="rgb(213,158,48)"/><text x="120.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="120" y="356" width="2" height="15" fill="rgb(238,179,44)"/><text x="123.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="122" y="340" width="2" height="15" fill="rgb(207,76,41)"/><text x="125.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="122" y="356" width="2" height="15" fill="rgb(218,81,44)"/><text x="125.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="124" y="340" width="1" height="15" fill="rgb(241,43,6)"/><text x="127.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="124" y="356" width="1" height="15" fill="rgb(211,72,3)"/><text x="127.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="124" y="372" width="1" height="15" fill="rgb(246,166,14)"/><text x="127.00" y="382.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.29%)</title><rect x="136" y="564" width="3" height="15" fill="rgb(253,75,21)"/><text x="139.00" y="574.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (4 samples, 0.59%)</title><rect x="136" y="452" width="7" height="15" fill="rgb(231,153,33)"/><text x="139.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (4 samples, 0.59%)</title><rect x="136" y="468" width="7" height="15" fill="rgb(237,214,6)"/><text x="139.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (4 samples, 0.59%)</title><rect x="136" y="484" width="7" height="15" fill="rgb(208,220,18)"/><text x="139.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.59%)</title><rect x="136" y="500" width="7" height="15" fill="rgb(238,105,5)"/><text x="139.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.59%)</title><rect x="136" y="516" width="7" height="15" fill="rgb(214,87,27)"/><text x="139.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.59%)</title><rect x="136" y="532" width="7" height="15" fill="rgb(245,17,9)"/><text x="139.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.59%)</title><rect x="136" y="548" width="7" height="15" fill="rgb(235,141,13)"/><text x="139.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.29%)</title><rect x="139" y="564" width="4" height="15" fill="rgb(221,159,44)"/><text x="142.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.29%)</title><rect x="139" y="580" width="4" height="15" fill="rgb(216,99,27)"/><text x="142.00" y="590.50"></text></g><g><title>__kmpc_fork_call (libiomp5.so) (28 samples, 4.11%)</title><rect x="136" y="436" width="48" height="15" fill="rgb(243,197,30)"/><text x="139.00" y="446.50">__km..</text></g><g><title>__kmp_join_call (libiomp5.so) (24 samples, 3.52%)</title><rect x="143" y="452" width="41" height="15" fill="rgb(225,144,12)"/><text x="146.00" y="462.50">__k..</text></g><g><title>__kmp_internal_join (libiomp5.so) (24 samples, 3.52%)</title><rect x="143" y="468" width="41" height="15" fill="rgb(236,40,0)"/><text x="146.00" y="478.50">__k..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (24 samples, 3.52%)</title><rect x="143" y="484" width="41" height="15" fill="rgb(206,77,48)"/><text x="146.00" y="494.50">__k..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (24 samples, 3.52%)</title><rect x="143" y="500" width="41" height="15" fill="rgb(242,221,49)"/><text x="146.00" y="510.50">_IN..</text></g><g><title>sched_yield (libc-2.29.so) (3 samples, 0.44%)</title><rect x="179" y="516" width="5" height="15" fill="rgb(230,25,45)"/><text x="182.00" y="526.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 8.65%)</title><rect x="125" y="340" width="103" height="15" fill="rgb(205,132,4)"/><text x="128.00" y="350.50">onnxruntime:..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 7.92%)</title><rect x="134" y="356" width="94" height="15" fill="rgb(240,82,43)"/><text x="137.00" y="366.50">onnxruntime..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (54 samples, 7.92%)</title><rect x="134" y="372" width="94" height="15" fill="rgb(250,62,53)"/><text x="137.00" y="382.50">cblas_sgemm..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (54 samples, 7.92%)</title><rect x="134" y="388" width="94" height="15" fill="rgb(242,148,21)"/><text x="137.00" y="398.50">sgemm_ (onn..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (54 samples, 7.92%)</title><rect x="134" y="404" width="94" height="15" fill="rgb(252,21,47)"/><text x="137.00" y="414.50">mkl_blas_sg..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (54 samples, 7.92%)</title><rect x="134" y="420" width="94" height="15" fill="rgb(229,70,48)"/><text x="137.00" y="430.50">mkl_blas_sg..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (25 samples, 3.67%)</title><rect x="184" y="436" width="44" height="15" fill="rgb(232,49,17)"/><text x="187.00" y="446.50">mkl_..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (25 samples, 3.67%)</title><rect x="184" y="452" width="44" height="15" fill="rgb(227,47,13)"/><text x="187.00" y="462.50">mkl_..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (25 samples, 3.67%)</title><rect x="184" y="468" width="44" height="15" fill="rgb(242,167,36)"/><text x="187.00" y="478.50">mkl_..</text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="228" y="340" width="1" height="15" fill="rgb(250,208,41)"/><text x="231.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="228" y="356" width="1" height="15" fill="rgb(233,17,33)"/><text x="231.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="228" y="372" width="1" height="15" fill="rgb(210,214,5)"/><text x="231.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="228" y="388" width="1" height="15" fill="rgb(252,59,37)"/><text x="231.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="228" y="404" width="1" height="15" fill="rgb(209,190,6)"/><text x="231.00" y="414.50"></text></g><g><title>0x7f21f31f17a0 (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="228" y="420" width="1" height="15" fill="rgb(211,51,36)"/><text x="231.00" y="430.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseUnaryIO&lt;Eigen::internal::scalar_exp_op&lt;float&gt;, long, float, 2, 1&gt;::Run&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="229" y="420" width="4" height="15" fill="rgb(217,82,8)"/><text x="232.00" y="430.50"></text></g><g><title>Eigen::internal::TensorBlockCwiseBinaryIO&lt;Eigen::internal::scalar_difference_op&lt;float const, float const&gt;, long, float, 2, 1&gt;::Run&lt;float, float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="233" y="436" width="1" height="15" fill="rgb(241,94,32)"/><text x="236.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal20scalar_difference_opIKfS4_EEKNS_9TensorMapINS_6TensorIS4_Li2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS2_10MaxReducerIfEEKNSD_ISF_JEEESB_S9_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="233" y="420" width="3" height="15" fill="rgb(233,47,27)"/><text x="236.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS_8internal10MaxReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIKfLi2ELi1ElEELi16ENS_11MakePointerEEESL_EEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="234" y="436" width="2" height="15" fill="rgb(214,152,52)"/><text x="237.00" y="446.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.73%)</title><rect x="229" y="372" width="9" height="15" fill="rgb(242,121,38)"/><text x="232.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.73%)</title><rect x="229" y="388" width="9" height="15" fill="rgb(211,111,0)"/><text x="232.00" y="398.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_18TensorCwiseUnaryOpINS2_13scalar_exp_opIfEEKNS1_19TensorCwiseBinaryOpINS2_20scalar_difference_opIKfSF_EEKNS5_INS6_ISF_Li2ELi1ElEELi16ES8_EEKNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSL_IiJSN_EEEKNS1_18TensorForcedEvalOpIKNS1_17TensorReductionOpINS2_10MaxReducerIfEEKNSL_ISN_JEEESJ_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS1C_RKS1D_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1N_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.73%)</title><rect x="229" y="404" width="9" height="15" fill="rgb(247,26,24)"/><text x="232.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="236" y="420" width="2" height="15" fill="rgb(240,92,52)"/><text x="239.00" y="430.50"></text></g><g><title>0x7f22037262b6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="236" y="436" width="2" height="15" fill="rgb(245,49,41)"/><text x="239.00" y="446.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="238" y="372" width="2" height="15" fill="rgb(231,82,27)"/><text x="241.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="238" y="388" width="2" height="15" fill="rgb(229,63,40)"/><text x="241.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run(Eigen::TensorEvalToOp&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&amp;, Eigen::ThreadPoolDevice const&amp;)::{lambda(long, long)#1}&gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="238" y="404" width="2" height="15" fill="rgb(244,70,6)"/><text x="241.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="388" width="1" height="15" fill="rgb(222,159,11)"/><text x="243.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="404" width="1" height="15" fill="rgb(228,13,14)"/><text x="243.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="420" width="1" height="15" fill="rgb(220,58,40)"/><text x="243.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="436" width="1" height="15" fill="rgb(216,19,18)"/><text x="243.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="452" width="1" height="15" fill="rgb(231,61,37)"/><text x="243.00" y="462.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE14BroadcastBlockERKNS_6DSizesIlLi2EEERKNS12_IlLi4EEES18_S18_lPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="468" width="1" height="15" fill="rgb(227,189,32)"/><text x="243.00" y="478.50"></text></g><g><title>Eigen::internal::TensorBlockReader&lt;float, long, 4, 1&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="484" width="1" height="15" fill="rgb(221,61,2)"/><text x="243.00" y="494.50"></text></g><g><title>Eigen::internal::TensorBlockCopyOp&lt;float, long&gt;::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="240" y="500" width="1" height="15" fill="rgb(223,159,30)"/><text x="243.00" y="510.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.32%)</title><rect x="229" y="340" width="16" height="15" fill="rgb(249,69,39)"/><text x="232.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.32%)</title><rect x="229" y="356" width="16" height="15" fill="rgb(223,65,20)"/><text x="232.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.44%)</title><rect x="240" y="372" width="5" height="15" fill="rgb(210,22,48)"/><text x="243.00" y="382.50"></text></g><g><title>Eigen::internal::TensorExecutor&lt;Eigen::TensorEvalToOp&lt;Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_inverse_op&lt;float&gt;, Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;, Eigen::IndexList&lt;Eigen::type2index&lt;(long)1&gt;, &gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 1, long&gt;, 16, Eigen::MakePointer&gt; const, Eigen::MakePointer&gt; const&gt; const, Eigen::MakePointer&gt; const, Eigen::ThreadPoolDevice, true, false&gt;::run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="241" y="388" width="4" height="15" fill="rgb(224,67,9)"/><text x="244.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="241" y="404" width="4" height="15" fill="rgb(244,165,51)"/><text x="244.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorEvalToOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNS1_9IndexListINS1_10type2indexILl1EEEJEEEKNS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEESJ_EEEESJ_EENS1_16ThreadPoolDeviceELb1ELb0EE3runERSR_RKSS_EUlllE_E9_M_invokeERKSt9_Any_dataOlS12_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.29%)</title><rect x="241" y="420" width="4" height="15" fill="rgb(227,21,19)"/><text x="244.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="340" width="2" height="15" fill="rgb(222,171,28)"/><text x="248.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(237,12,47)"/><text x="248.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="372" width="2" height="15" fill="rgb(211,161,27)"/><text x="248.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="388" width="2" height="15" fill="rgb(217,27,42)"/><text x="248.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="404" width="2" height="15" fill="rgb(232,10,31)"/><text x="248.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="420" width="2" height="15" fill="rgb(221,187,44)"/><text x="248.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="245" y="436" width="2" height="15" fill="rgb(222,141,6)"/><text x="248.00" y="446.50"></text></g><g><title>0x7f22037336df (libc-2.29.so) (1 samples, 0.15%)</title><rect x="245" y="452" width="2" height="15" fill="rgb(212,29,9)"/><text x="248.00" y="462.50"></text></g><g><title>0x7f2203725b49 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="278" y="388" width="1" height="15" fill="rgb(242,204,53)"/><text x="281.00" y="398.50"></text></g><g><title>0x7f2203725d36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="279" y="388" width="2" height="15" fill="rgb(211,229,18)"/><text x="282.00" y="398.50"></text></g><g><title>0x7f2203725d81 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="281" y="388" width="2" height="15" fill="rgb(209,53,53)"/><text x="284.00" y="398.50"></text></g><g><title>0x7f2203725d8d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="283" y="388" width="2" height="15" fill="rgb(232,61,0)"/><text x="286.00" y="398.50"></text></g><g><title>0x7f2203725d9f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="285" y="388" width="1" height="15" fill="rgb(236,197,48)"/><text x="288.00" y="398.50"></text></g><g><title>0x7f2203725dd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="286" y="388" width="2" height="15" fill="rgb(212,229,28)"/><text x="289.00" y="398.50"></text></g><g><title>0x7f2203725f2a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="288" y="388" width="2" height="15" fill="rgb(240,124,1)"/><text x="291.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (24 samples, 3.52%)</title><rect x="250" y="356" width="42" height="15" fill="rgb(224,38,50)"/><text x="253.00" y="366.50">ope..</text></g><g><title>malloc (libc-2.29.so) (23 samples, 3.37%)</title><rect x="252" y="372" width="40" height="15" fill="rgb(223,38,3)"/><text x="255.00" y="382.50">mal..</text></g><g><title>0x7f2203725fe6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="290" y="388" width="2" height="15" fill="rgb(228,15,4)"/><text x="293.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.59%)</title><rect x="292" y="356" width="6" height="15" fill="rgb(211,108,40)"/><text x="295.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="297" y="372" width="1" height="15" fill="rgb(246,27,37)"/><text x="300.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="298" y="356" width="2" height="15" fill="rgb(212,198,8)"/><text x="301.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 16.28%)</title><rect x="110" y="260" width="192" height="15" fill="rgb(205,37,38)"/><text x="113.00" y="270.50">onnxruntime::InferenceSes..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 16.28%)</title><rect x="110" y="276" width="192" height="15" fill="rgb(229,185,40)"/><text x="113.00" y="286.50">onnxruntime::InferenceSes..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 15.84%)</title><rect x="115" y="292" width="187" height="15" fill="rgb(228,21,29)"/><text x="118.00" y="302.50">onnxruntime::utils::Exec..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 15.84%)</title><rect x="115" y="308" width="187" height="15" fill="rgb(247,162,38)"/><text x="118.00" y="318.50">onnxruntime::utils::Exec..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 15.84%)</title><rect x="115" y="324" width="187" height="15" fill="rgb(212,161,39)"/><text x="118.00" y="334.50">onnxruntime::SequentialE..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 4.69%)</title><rect x="247" y="340" width="55" height="15" fill="rgb(205,126,26)"/><text x="250.00" y="350.50">onnxr..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="300" y="356" width="2" height="15" fill="rgb(254,123,48)"/><text x="303.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="302" y="260" width="2" height="15" fill="rgb(248,217,39)"/><text x="305.00" y="270.50"></text></g><g><title>0x7f2203744d94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="302" y="276" width="2" height="15" fill="rgb(240,97,13)"/><text x="305.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.05%)</title><rect x="350" y="276" width="25" height="15" fill="rgb(239,176,13)"/><text x="353.00" y="286.50">p..</text></g><g><title>mmap64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="373" y="292" width="2" height="15" fill="rgb(253,51,21)"/><text x="376.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 6.30%)</title><rect x="304" y="260" width="74" height="15" fill="rgb(214,11,9)"/><text x="307.00" y="270.50">pybind11..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.29%)</title><rect x="375" y="276" width="3" height="15" fill="rgb(242,14,0)"/><text x="378.00" y="286.50"></text></g><g><title>0x7f220372499b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(233,20,44)"/><text x="388.00" y="302.50"></text></g><g><title>0x7f2203724d07 (libc-2.29.so) (3 samples, 0.44%)</title><rect x="387" y="292" width="5" height="15" fill="rgb(229,120,48)"/><text x="390.00" y="302.50"></text></g><g><title>0x7f220372492c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="392" y="308" width="2" height="15" fill="rgb(233,221,31)"/><text x="395.00" y="318.50"></text></g><g><title>0x7f2203724d07 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="394" y="308" width="1" height="15" fill="rgb(241,48,17)"/><text x="397.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 24.49%)</title><rect x="108" y="244" width="289" height="15" fill="rgb(249,192,38)"/><text x="111.00" y="254.50">onnxruntime::python::addObjectMethods(..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.61%)</title><rect x="378" y="260" width="19" height="15" fill="rgb(249,173,37)"/><text x="381.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.47%)</title><rect x="380" y="276" width="17" height="15" fill="rgb(212,81,24)"/><text x="383.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.44%)</title><rect x="392" y="292" width="5" height="15" fill="rgb(239,99,5)"/><text x="395.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="395" y="308" width="2" height="15" fill="rgb(231,107,3)"/><text x="398.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (185 samples, 27.13%)</title><rect x="79" y="132" width="320" height="15" fill="rgb(247,171,9)"/><text x="82.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (184 samples, 26.98%)</title><rect x="80" y="148" width="319" height="15" fill="rgb(217,157,36)"/><text x="83.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (183 samples, 26.83%)</title><rect x="82" y="164" width="317" height="15" fill="rgb(212,90,1)"/><text x="85.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (182 samples, 26.69%)</title><rect x="84" y="180" width="315" height="15" fill="rgb(221,22,12)"/><text x="87.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (182 samples, 26.69%)</title><rect x="84" y="196" width="315" height="15" fill="rgb(228,3,12)"/><text x="87.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (169 samples, 24.78%)</title><rect x="106" y="212" width="293" height="15" fill="rgb(238,83,30)"/><text x="109.00" y="222.50">pybind11::cpp_function::dispatcher (onn..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 24.63%)</title><rect x="108" y="228" width="291" height="15" fill="rgb(242,100,1)"/><text x="111.00" y="238.50">void pybind11::cpp_function::initialize..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="397" y="244" width="2" height="15" fill="rgb(226,148,15)"/><text x="400.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="397" y="260" width="2" height="15" fill="rgb(251,0,51)"/><text x="400.00" y="270.50"></text></g><g><title>profile_ort (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (205 samples, 30.06%)</title><rect x="46" y="68" width="355" height="15" fill="rgb(214,189,53)"/><text x="49.00" y="78.50">profile_ort (bench_MLPClassifier_default_b_cl_10..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (205 samples, 30.06%)</title><rect x="46" y="84" width="355" height="15" fill="rgb(208,163,34)"/><text x="49.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (205 samples, 30.06%)</title><rect x="46" y="100" width="355" height="15" fill="rgb(224,36,34)"/><text x="49.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (186 samples, 27.27%)</title><rect x="79" y="116" width="322" height="15" fill="rgb(246,37,25)"/><text x="82.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="399" y="132" width="2" height="15" fill="rgb(237,143,4)"/><text x="402.00" y="142.50"></text></g><g><title>0x7f2203802151 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="399" y="148" width="2" height="15" fill="rgb(232,90,16)"/><text x="402.00" y="158.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="423" y="260" width="2" height="15" fill="rgb(242,94,29)"/><text x="426.00" y="270.50"></text></g><g><title>PyArray_ToList (convert.c) (4 samples, 0.59%)</title><rect x="423" y="228" width="7" height="15" fill="rgb(245,187,45)"/><text x="426.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (4 samples, 0.59%)</title><rect x="423" y="244" width="7" height="15" fill="rgb(250,164,22)"/><text x="426.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.44%)</title><rect x="425" y="260" width="5" height="15" fill="rgb(242,147,12)"/><text x="428.00" y="270.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.15%)</title><rect x="430" y="228" width="2" height="15" fill="rgb(221,211,52)"/><text x="433.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.15%)</title><rect x="430" y="244" width="2" height="15" fill="rgb(209,130,41)"/><text x="433.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.15%)</title><rect x="430" y="260" width="2" height="15" fill="rgb(223,125,17)"/><text x="433.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="430" y="276" width="2" height="15" fill="rgb(233,209,32)"/><text x="433.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="430" y="292" width="2" height="15" fill="rgb(207,222,14)"/><text x="433.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.15%)</title><rect x="432" y="228" width="1" height="15" fill="rgb(223,34,41)"/><text x="435.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="432" y="244" width="1" height="15" fill="rgb(209,136,49)"/><text x="435.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.15%)</title><rect x="433" y="244" width="2" height="15" fill="rgb(214,177,26)"/><text x="436.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="435" y="244" width="2" height="15" fill="rgb(223,45,1)"/><text x="438.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.15%)</title><rect x="435" y="260" width="2" height="15" fill="rgb(243,152,31)"/><text x="438.00" y="270.50"></text></g><g><title>0x7f22029467c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="444" y="340" width="2" height="15" fill="rgb(212,20,4)"/><text x="447.00" y="350.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (7 samples, 1.03%)</title><rect x="437" y="276" width="12" height="15" fill="rgb(211,217,33)"/><text x="440.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (7 samples, 1.03%)</title><rect x="437" y="292" width="12" height="15" fill="rgb(247,135,10)"/><text x="440.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (6 samples, 0.88%)</title><rect x="439" y="308" width="10" height="15" fill="rgb(245,180,24)"/><text x="442.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (5 samples, 0.73%)</title><rect x="440" y="324" width="9" height="15" fill="rgb(242,221,0)"/><text x="443.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (2 samples, 0.29%)</title><rect x="446" y="340" width="3" height="15" fill="rgb(251,24,28)"/><text x="449.00" y="350.50"></text></g><g><title>0x7f22029470a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(231,138,4)"/><text x="452.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.15%)</title><rect x="456" y="340" width="2" height="15" fill="rgb(210,129,44)"/><text x="459.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (10 samples, 1.47%)</title><rect x="449" y="292" width="17" height="15" fill="rgb(216,35,30)"/><text x="452.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (10 samples, 1.47%)</title><rect x="449" y="308" width="17" height="15" fill="rgb(252,191,38)"/><text x="452.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (9 samples, 1.32%)</title><rect x="451" y="324" width="15" height="15" fill="rgb(247,11,46)"/><text x="454.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (5 samples, 0.73%)</title><rect x="458" y="340" width="8" height="15" fill="rgb(253,51,35)"/><text x="461.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="465" y="356" width="1" height="15" fill="rgb(216,132,27)"/><text x="468.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (32 samples, 4.69%)</title><rect x="421" y="212" width="56" height="15" fill="rgb(249,125,7)"/><text x="424.00" y="222.50">_run ..</text></g><g><title>array_subscript (mapping.c) (25 samples, 3.67%)</title><rect x="433" y="228" width="44" height="15" fill="rgb(213,6,39)"/><text x="436.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c) (23 samples, 3.37%)</title><rect x="437" y="244" width="40" height="15" fill="rgb(250,175,40)"/><text x="440.00" y="254.50">pre..</text></g><g><title>PyArray_FromAny (ctors.c) (23 samples, 3.37%)</title><rect x="437" y="260" width="40" height="15" fill="rgb(243,18,32)"/><text x="440.00" y="270.50">PyA..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (16 samples, 2.35%)</title><rect x="449" y="276" width="28" height="15" fill="rgb(221,124,8)"/><text x="452.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (6 samples, 0.88%)</title><rect x="466" y="292" width="11" height="15" fill="rgb(249,57,31)"/><text x="469.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (6 samples, 0.88%)</title><rect x="466" y="308" width="11" height="15" fill="rgb(218,133,22)"/><text x="469.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.15%)</title><rect x="477" y="212" width="1" height="15" fill="rgb(241,152,41)"/><text x="480.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.15%)</title><rect x="478" y="212" width="2" height="15" fill="rgb(245,9,13)"/><text x="481.00" y="222.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.15%)</title><rect x="480" y="308" width="2" height="15" fill="rgb(221,131,49)"/><text x="483.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="480" y="324" width="2" height="15" fill="rgb(219,46,9)"/><text x="483.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="480" y="340" width="2" height="15" fill="rgb(222,172,12)"/><text x="483.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.15%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(207,72,17)"/><text x="483.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.29%)</title><rect x="480" y="228" width="4" height="15" fill="rgb(239,104,47)"/><text x="483.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.29%)</title><rect x="480" y="244" width="4" height="15" fill="rgb(245,159,2)"/><text x="483.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.29%)</title><rect x="480" y="260" width="4" height="15" fill="rgb(205,221,15)"/><text x="483.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.29%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(230,56,43)"/><text x="483.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.29%)</title><rect x="480" y="292" width="4" height="15" fill="rgb(221,210,52)"/><text x="483.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="482" y="308" width="2" height="15" fill="rgb(222,41,26)"/><text x="485.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(232,13,1)"/><text x="485.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(253,196,45)"/><text x="485.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="484" y="276" width="1" height="15" fill="rgb(210,174,49)"/><text x="487.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="484" y="292" width="1" height="15" fill="rgb(232,101,35)"/><text x="487.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="484" y="308" width="1" height="15" fill="rgb(221,69,47)"/><text x="487.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="484" y="324" width="1" height="15" fill="rgb(226,188,45)"/><text x="487.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.15%)</title><rect x="484" y="340" width="1" height="15" fill="rgb(229,129,12)"/><text x="487.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.15%)</title><rect x="484" y="356" width="1" height="15" fill="rgb(243,189,39)"/><text x="487.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.29%)</title><rect x="484" y="228" width="3" height="15" fill="rgb(212,56,23)"/><text x="487.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.29%)</title><rect x="484" y="244" width="3" height="15" fill="rgb(230,15,23)"/><text x="487.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (2 samples, 0.29%)</title><rect x="484" y="260" width="3" height="15" fill="rgb(212,79,29)"/><text x="487.00" y="270.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.15%)</title><rect x="485" y="276" width="2" height="15" fill="rgb(241,38,31)"/><text x="488.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="485" y="292" width="2" height="15" fill="rgb(225,196,24)"/><text x="488.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.15%)</title><rect x="485" y="308" width="2" height="15" fill="rgb(251,34,51)"/><text x="488.00" y="318.50"></text></g><g><title>0x7f2203744d94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="485" y="324" width="2" height="15" fill="rgb(219,16,36)"/><text x="488.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_identity.py) (1 samples, 0.15%)</title><rect x="487" y="228" width="2" height="15" fill="rgb(247,112,33)"/><text x="490.00" y="238.50"></text></g><g><title>0x7f2203745103 (libc-2.29.so) (6 samples, 0.88%)</title><rect x="494" y="340" width="10" height="15" fill="rgb(247,174,0)"/><text x="497.00" y="350.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="504" y="420" width="2" height="15" fill="rgb(222,193,8)"/><text x="507.00" y="430.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="504" y="436" width="2" height="15" fill="rgb(235,185,54)"/><text x="507.00" y="446.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="506" y="436" width="2" height="15" fill="rgb(220,108,0)"/><text x="509.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.72%)</title><rect x="506" y="420" width="68" height="15" fill="rgb(226,144,28)"/><text x="509.00" y="430.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (38 samples, 5.57%)</title><rect x="508" y="436" width="66" height="15" fill="rgb(220,173,34)"/><text x="511.00" y="446.50">sched_y..</text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.29%)</title><rect x="577" y="436" width="3" height="15" fill="rgb(213,19,14)"/><text x="580.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (57 samples, 8.36%)</title><rect x="494" y="276" width="99" height="15" fill="rgb(210,105,38)"/><text x="497.00" y="286.50">array_imple..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (57 samples, 8.36%)</title><rect x="494" y="292" width="99" height="15" fill="rgb(221,103,35)"/><text x="497.00" y="302.50">array_matri..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (57 samples, 8.36%)</title><rect x="494" y="308" width="99" height="15" fill="rgb(230,94,39)"/><text x="497.00" y="318.50">PyArray_Mat..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (57 samples, 8.36%)</title><rect x="494" y="324" width="99" height="15" fill="rgb(244,159,47)"/><text x="497.00" y="334.50">cblas_matri..</text></g><g><title>gemm (cblasfuncs.c) (51 samples, 7.48%)</title><rect x="504" y="340" width="89" height="15" fill="rgb(228,189,37)"/><text x="507.00" y="350.50">gemm (cbla..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (51 samples, 7.48%)</title><rect x="504" y="356" width="89" height="15" fill="rgb(220,191,54)"/><text x="507.00" y="366.50">cblas_sgem..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (51 samples, 7.48%)</title><rect x="504" y="372" width="89" height="15" fill="rgb(205,5,45)"/><text x="507.00" y="382.50">sgemm_thre..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (51 samples, 7.48%)</title><rect x="504" y="388" width="89" height="15" fill="rgb(216,133,27)"/><text x="507.00" y="398.50">gemm_drive..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (51 samples, 7.48%)</title><rect x="504" y="404" width="89" height="15" fill="rgb(208,205,14)"/><text x="507.00" y="414.50">exec_blas ..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.61%)</title><rect x="574" y="420" width="19" height="15" fill="rgb(208,23,2)"/><text x="577.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.03%)</title><rect x="580" y="436" width="13" height="15" fill="rgb(253,81,0)"/><text x="583.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.44%)</title><rect x="593" y="276" width="5" height="15" fill="rgb(240,117,46)"/><text x="596.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (101 samples, 14.81%)</title><rect x="489" y="228" width="175" height="15" fill="rgb(221,223,28)"/><text x="492.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (101 samples, 14.81%)</title><rect x="489" y="244" width="175" height="15" fill="rgb(244,224,35)"/><text x="492.00" y="254.50">numpy_dot_inplace (mlp..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (98 samples, 14.37%)</title><rect x="494" y="260" width="170" height="15" fill="rgb(253,183,8)"/><text x="497.00" y="270.50">dot (&lt;__array_function..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 5.57%)</title><rect x="598" y="276" width="66" height="15" fill="rgb(235,118,23)"/><text x="601.00" y="286.50">sgemm_k..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (44 samples, 6.45%)</title><rect x="664" y="228" width="76" height="15" fill="rgb(226,164,13)"/><text x="667.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (44 samples, 6.45%)</title><rect x="664" y="244" width="76" height="15" fill="rgb(224,106,9)"/><text x="667.00" y="254.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (44 samples, 6.45%)</title><rect x="664" y="260" width="76" height="15" fill="rgb(209,60,46)"/><text x="667.00" y="270.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (44 samples, 6.45%)</title><rect x="664" y="276" width="76" height="15" fill="rgb(207,212,37)"/><text x="667.00" y="286.50">execute_..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (44 samples, 6.45%)</title><rect x="664" y="292" width="76" height="15" fill="rgb(253,8,11)"/><text x="667.00" y="302.50">trivial_..</text></g><g><title>FLOAT_maximum (loops.c.src) (44 samples, 6.45%)</title><rect x="664" y="308" width="76" height="15" fill="rgb(211,131,44)"/><text x="667.00" y="318.50">FLOAT_ma..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="741" y="356" width="2" height="15" fill="rgb(207,123,1)"/><text x="744.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="741" y="372" width="2" height="15" fill="rgb(254,33,9)"/><text x="744.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="741" y="388" width="2" height="15" fill="rgb(209,93,43)"/><text x="744.00" y="398.50"></text></g><g><title>0x7f2203725e84 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="741" y="404" width="2" height="15" fill="rgb(216,106,15)"/><text x="744.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="743" y="388" width="2" height="15" fill="rgb(225,141,24)"/><text x="746.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="743" y="404" width="2" height="15" fill="rgb(252,18,43)"/><text x="746.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="743" y="420" width="2" height="15" fill="rgb(237,118,54)"/><text x="746.00" y="430.50"></text></g><g><title>0x7f2202945f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="745" y="420" width="2" height="15" fill="rgb(210,213,7)"/><text x="748.00" y="430.50"></text></g><g><title>array_max (methods.c) (5 samples, 0.73%)</title><rect x="741" y="244" width="9" height="15" fill="rgb(248,223,37)"/><text x="744.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (5 samples, 0.73%)</title><rect x="741" y="260" width="9" height="15" fill="rgb(218,146,23)"/><text x="744.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py) (5 samples, 0.73%)</title><rect x="741" y="276" width="9" height="15" fill="rgb(205,36,35)"/><text x="744.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 0.73%)</title><rect x="741" y="292" width="9" height="15" fill="rgb(213,126,16)"/><text x="744.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 0.73%)</title><rect x="741" y="308" width="9" height="15" fill="rgb(238,216,36)"/><text x="744.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 0.73%)</title><rect x="741" y="324" width="9" height="15" fill="rgb(242,169,26)"/><text x="744.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 0.73%)</title><rect x="741" y="340" width="9" height="15" fill="rgb(241,156,33)"/><text x="744.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (4 samples, 0.59%)</title><rect x="743" y="356" width="7" height="15" fill="rgb(247,196,30)"/><text x="746.00" y="366.50"></text></g><g><title>FLOAT_maximum (loops.c.src) (4 samples, 0.59%)</title><rect x="743" y="372" width="7" height="15" fill="rgb(235,10,0)"/><text x="746.00" y="382.50"></text></g><g><title>run_unary_reduce_simd_maximum_FLOAT (simd.inc.src) (3 samples, 0.44%)</title><rect x="745" y="388" width="5" height="15" fill="rgb(250,182,37)"/><text x="748.00" y="398.50"></text></g><g><title>sse2_maximum_FLOAT (simd.inc.src) (3 samples, 0.44%)</title><rect x="745" y="404" width="5" height="15" fill="rgb(246,136,24)"/><text x="748.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.29%)</title><rect x="747" y="420" width="3" height="15" fill="rgb(231,89,31)"/><text x="750.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.29%)</title><rect x="747" y="436" width="3" height="15" fill="rgb(230,123,23)"/><text x="750.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.29%)</title><rect x="747" y="452" width="3" height="15" fill="rgb(222,71,23)"/><text x="750.00" y="462.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.15%)</title><rect x="750" y="244" width="2" height="15" fill="rgb(207,11,45)"/><text x="753.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="752" y="356" width="1" height="15" fill="rgb(235,117,42)"/><text x="755.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="752" y="372" width="1" height="15" fill="rgb(234,181,3)"/><text x="755.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="752" y="388" width="1" height="15" fill="rgb(208,70,47)"/><text x="755.00" y="398.50"></text></g><g><title>0x7f2203725cb6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="752" y="404" width="1" height="15" fill="rgb(226,106,10)"/><text x="755.00" y="414.50"></text></g><g><title>0x7f2203725cc2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="753" y="484" width="2" height="15" fill="rgb(236,91,17)"/><text x="756.00" y="494.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.29%)</title><rect x="753" y="356" width="4" height="15" fill="rgb(243,152,13)"/><text x="756.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.29%)</title><rect x="753" y="372" width="4" height="15" fill="rgb(207,55,8)"/><text x="756.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.29%)</title><rect x="753" y="388" width="4" height="15" fill="rgb(241,17,33)"/><text x="756.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.29%)</title><rect x="753" y="404" width="4" height="15" fill="rgb(231,87,44)"/><text x="756.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.29%)</title><rect x="753" y="420" width="4" height="15" fill="rgb(227,2,42)"/><text x="756.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.29%)</title><rect x="753" y="436" width="4" height="15" fill="rgb(249,75,45)"/><text x="756.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.29%)</title><rect x="753" y="452" width="4" height="15" fill="rgb(224,88,24)"/><text x="756.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.29%)</title><rect x="753" y="468" width="4" height="15" fill="rgb(215,164,48)"/><text x="756.00" y="478.50"></text></g><g><title>0x7f22037262d0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="755" y="484" width="2" height="15" fill="rgb(254,194,33)"/><text x="758.00" y="494.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.29%)</title><rect x="759" y="372" width="3" height="15" fill="rgb(235,203,16)"/><text x="762.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="762" y="372" width="2" height="15" fill="rgb(228,28,18)"/><text x="765.00" y="382.50"></text></g><g><title>array_sum (methods.c) (8 samples, 1.17%)</title><rect x="752" y="244" width="14" height="15" fill="rgb(245,200,36)"/><text x="755.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 1.17%)</title><rect x="752" y="260" width="14" height="15" fill="rgb(240,162,19)"/><text x="755.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py) (8 samples, 1.17%)</title><rect x="752" y="276" width="14" height="15" fill="rgb(253,33,17)"/><text x="755.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.17%)</title><rect x="752" y="292" width="14" height="15" fill="rgb(237,183,21)"/><text x="755.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 1.17%)</title><rect x="752" y="308" width="14" height="15" fill="rgb(205,57,14)"/><text x="755.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.17%)</title><rect x="752" y="324" width="14" height="15" fill="rgb(232,51,51)"/><text x="755.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.17%)</title><rect x="752" y="340" width="14" height="15" fill="rgb(251,206,13)"/><text x="755.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (5 samples, 0.73%)</title><rect x="757" y="356" width="9" height="15" fill="rgb(209,198,25)"/><text x="760.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="764" y="372" width="2" height="15" fill="rgb(249,20,13)"/><text x="767.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="766" y="292" width="1" height="15" fill="rgb(248,226,24)"/><text x="769.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="766" y="308" width="1" height="15" fill="rgb(237,10,19)"/><text x="769.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="766" y="324" width="1" height="15" fill="rgb(226,198,8)"/><text x="769.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="766" y="340" width="1" height="15" fill="rgb(241,56,43)"/><text x="769.00" y="350.50"></text></g><g><title>0x7f22036dc7a5 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="766" y="356" width="1" height="15" fill="rgb(220,203,8)"/><text x="769.00" y="366.50"></text></g><g><title>0x7f22036dc7c2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="766" y="372" width="1" height="15" fill="rgb(238,70,11)"/><text x="769.00" y="382.50"></text></g><g><title>0x7f22036dca6f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="766" y="388" width="1" height="15" fill="rgb(212,5,17)"/><text x="769.00" y="398.50"></text></g><g><title>0x7f2203744d50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="766" y="404" width="1" height="15" fill="rgb(249,175,27)"/><text x="769.00" y="414.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.29%)</title><rect x="767" y="308" width="4" height="15" fill="rgb(218,147,50)"/><text x="770.00" y="318.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.29%)</title><rect x="767" y="324" width="4" height="15" fill="rgb(239,66,51)"/><text x="770.00" y="334.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.29%)</title><rect x="767" y="340" width="4" height="15" fill="rgb(246,91,44)"/><text x="770.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.29%)</title><rect x="767" y="356" width="4" height="15" fill="rgb(221,159,22)"/><text x="770.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="767" y="292" width="6" height="15" fill="rgb(216,56,41)"/><text x="770.00" y="302.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.15%)</title><rect x="771" y="308" width="2" height="15" fill="rgb(212,153,37)"/><text x="774.00" y="318.50"></text></g><g><title>0x7f22038701a0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="774" y="340" width="2" height="15" fill="rgb(231,222,32)"/><text x="777.00" y="350.50"></text></g><g><title>0x7f22038a3e0e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="776" y="340" width="2" height="15" fill="rgb(246,209,7)"/><text x="779.00" y="350.50"></text></g><g><title>0x7f22038a3e37 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="778" y="340" width="1" height="15" fill="rgb(221,96,18)"/><text x="781.00" y="350.50"></text></g><g><title>0x7f22038a3e62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="779" y="340" width="2" height="15" fill="rgb(228,144,37)"/><text x="782.00" y="350.50"></text></g><g><title>0x7f22038a3ea2 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="781" y="340" width="2" height="15" fill="rgb(240,52,53)"/><text x="784.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 1.76%)</title><rect x="766" y="276" width="20" height="15" fill="rgb(239,216,24)"/><text x="769.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (8 samples, 1.17%)</title><rect x="773" y="292" width="13" height="15" fill="rgb(212,22,29)"/><text x="776.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (8 samples, 1.17%)</title><rect x="773" y="308" width="13" height="15" fill="rgb(232,160,51)"/><text x="776.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (8 samples, 1.17%)</title><rect x="773" y="324" width="13" height="15" fill="rgb(214,203,7)"/><text x="776.00" y="334.50"></text></g><g><title>0x7f22038a3ea6 (libm-2.29.so) (2 samples, 0.29%)</title><rect x="783" y="340" width="3" height="15" fill="rgb(209,127,25)"/><text x="786.00" y="350.50"></text></g><g><title>profile_pyrt (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (224 samples, 32.84%)</title><rect x="401" y="68" width="387" height="15" fill="rgb(215,55,7)"/><text x="404.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_b_cl_1000_..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (224 samples, 32.84%)</title><rect x="401" y="84" width="387" height="15" fill="rgb(218,168,29)"/><text x="404.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1000..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (224 samples, 32.84%)</title><rect x="401" y="100" width="387" height="15" fill="rgb(231,196,20)"/><text x="404.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_50_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 32.84%)</title><rect x="401" y="116" width="387" height="15" fill="rgb(209,58,32)"/><text x="404.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 32.84%)</title><rect x="401" y="132" width="387" height="15" fill="rgb(252,112,13)"/><text x="404.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (224 samples, 32.84%)</title><rect x="401" y="148" width="387" height="15" fill="rgb(246,148,23)"/><text x="404.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (223 samples, 32.70%)</title><rect x="402" y="164" width="386" height="15" fill="rgb(254,15,21)"/><text x="405.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (221 samples, 32.40%)</title><rect x="406" y="180" width="382" height="15" fill="rgb(231,195,2)"/><text x="409.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (212 samples, 31.09%)</title><rect x="421" y="196" width="367" height="15" fill="rgb(232,221,50)"/><text x="424.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (178 samples, 26.10%)</title><rect x="480" y="212" width="308" height="15" fill="rgb(254,45,32)"/><text x="483.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py) (28 samples, 4.11%)</title><rect x="740" y="228" width="48" height="15" fill="rgb(216,133,43)"/><text x="743.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.91%)</title><rect x="766" y="244" width="22" height="15" fill="rgb(224,172,43)"/><text x="769.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.91%)</title><rect x="766" y="260" width="22" height="15" fill="rgb(223,205,43)"/><text x="769.00" y="270.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="786" y="276" width="2" height="15" fill="rgb(250,211,35)"/><text x="789.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="786" y="292" width="2" height="15" fill="rgb(207,206,15)"/><text x="789.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="786" y="308" width="2" height="15" fill="rgb(213,208,46)"/><text x="789.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="786" y="324" width="2" height="15" fill="rgb(249,50,5)"/><text x="789.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="786" y="340" width="2" height="15" fill="rgb(219,126,21)"/><text x="789.00" y="350.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.15%)</title><rect x="793" y="180" width="2" height="15" fill="rgb(252,122,36)"/><text x="796.00" y="190.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="804" y="372" width="1" height="15" fill="rgb(229,96,25)"/><text x="807.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="804" y="388" width="1" height="15" fill="rgb(240,41,37)"/><text x="807.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="804" y="404" width="1" height="15" fill="rgb(218,10,40)"/><text x="807.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.15%)</title><rect x="804" y="420" width="1" height="15" fill="rgb(218,147,28)"/><text x="807.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.15%)</title><rect x="804" y="436" width="1" height="15" fill="rgb(212,168,7)"/><text x="807.00" y="446.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.15%)</title><rect x="805" y="372" width="2" height="15" fill="rgb(216,162,23)"/><text x="808.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="805" y="388" width="2" height="15" fill="rgb(214,221,50)"/><text x="808.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="805" y="404" width="2" height="15" fill="rgb(207,99,38)"/><text x="808.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (37 samples, 5.43%)</title><rect x="807" y="372" width="64" height="15" fill="rgb(234,202,12)"/><text x="810.00" y="382.50">execute..</text></g><g><title>iterator_loop (ufunc_object.c) (37 samples, 5.43%)</title><rect x="807" y="388" width="64" height="15" fill="rgb(247,42,22)"/><text x="810.00" y="398.50">iterato..</text></g><g><title>DOUBLE_clip (clip.c.src) (37 samples, 5.43%)</title><rect x="807" y="404" width="64" height="15" fill="rgb(221,7,6)"/><text x="810.00" y="414.50">DOUBLE_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (41 samples, 6.01%)</title><rect x="802" y="324" width="71" height="15" fill="rgb(205,118,16)"/><text x="805.00" y="334.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 6.01%)</title><rect x="802" y="340" width="71" height="15" fill="rgb(233,154,27)"/><text x="805.00" y="350.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (41 samples, 6.01%)</title><rect x="802" y="356" width="71" height="15" fill="rgb(226,36,31)"/><text x="805.00" y="366.50">PyUFunc_..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="871" y="372" width="2" height="15" fill="rgb(213,10,9)"/><text x="874.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="871" y="388" width="2" height="15" fill="rgb(212,64,17)"/><text x="874.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.15%)</title><rect x="871" y="404" width="2" height="15" fill="rgb(225,58,3)"/><text x="874.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.15%)</title><rect x="871" y="420" width="2" height="15" fill="rgb(224,181,13)"/><text x="874.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.15%)</title><rect x="871" y="436" width="2" height="15" fill="rgb(216,45,47)"/><text x="874.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="871" y="452" width="2" height="15" fill="rgb(226,124,48)"/><text x="874.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="871" y="468" width="2" height="15" fill="rgb(223,32,22)"/><text x="874.00" y="478.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="873" y="340" width="2" height="15" fill="rgb(242,210,29)"/><text x="876.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.59%)</title><rect x="875" y="340" width="7" height="15" fill="rgb(231,208,46)"/><text x="878.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.59%)</title><rect x="875" y="356" width="7" height="15" fill="rgb(208,97,8)"/><text x="878.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (3 samples, 0.44%)</title><rect x="876" y="372" width="6" height="15" fill="rgb(220,219,3)"/><text x="879.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.15%)</title><rect x="880" y="388" width="2" height="15" fill="rgb(213,180,21)"/><text x="883.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="880" y="404" width="2" height="15" fill="rgb(214,145,16)"/><text x="883.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.15%)</title><rect x="880" y="420" width="2" height="15" fill="rgb(248,150,20)"/><text x="883.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="880" y="436" width="2" height="15" fill="rgb(225,94,12)"/><text x="883.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="880" y="452" width="2" height="15" fill="rgb(210,126,4)"/><text x="883.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="880" y="468" width="2" height="15" fill="rgb(232,39,48)"/><text x="883.00" y="478.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (48 samples, 7.04%)</title><rect x="800" y="244" width="83" height="15" fill="rgb(219,40,47)"/><text x="803.00" y="254.50">clip (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (48 samples, 7.04%)</title><rect x="800" y="260" width="83" height="15" fill="rgb(244,82,33)"/><text x="803.00" y="270.50">_wrapfunc..</text></g><g><title>array_clip (methods.c) (48 samples, 7.04%)</title><rect x="800" y="276" width="83" height="15" fill="rgb(212,20,1)"/><text x="803.00" y="286.50">array_cli..</text></g><g><title>forward_ndarray_method (methods.c) (48 samples, 7.04%)</title><rect x="800" y="292" width="83" height="15" fill="rgb(249,8,25)"/><text x="803.00" y="302.50">forward_n..</text></g><g><title>_clip (numpy/core/_methods.py) (48 samples, 7.04%)</title><rect x="800" y="308" width="83" height="15" fill="rgb(237,203,7)"/><text x="803.00" y="318.50">_clip (nu..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (6 samples, 0.88%)</title><rect x="873" y="324" width="10" height="15" fill="rgb(242,184,30)"/><text x="876.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="882" y="340" width="1" height="15" fill="rgb(236,89,51)"/><text x="885.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="882" y="356" width="1" height="15" fill="rgb(249,170,52)"/><text x="885.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="882" y="372" width="1" height="15" fill="rgb(219,195,14)"/><text x="885.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="882" y="388" width="1" height="15" fill="rgb(239,153,12)"/><text x="885.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (50 samples, 7.33%)</title><rect x="798" y="196" width="87" height="15" fill="rgb(216,117,14)"/><text x="801.00" y="206.50">relu (skle..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 7.18%)</title><rect x="800" y="212" width="85" height="15" fill="rgb(206,113,50)"/><text x="803.00" y="222.50">clip (&lt;__a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (49 samples, 7.18%)</title><rect x="800" y="228" width="85" height="15" fill="rgb(235,183,38)"/><text x="803.00" y="238.50">array_impl..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="883" y="244" width="2" height="15" fill="rgb(244,123,0)"/><text x="886.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="883" y="260" width="2" height="15" fill="rgb(249,197,24)"/><text x="886.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="883" y="276" width="2" height="15" fill="rgb(239,53,50)"/><text x="886.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="883" y="292" width="2" height="15" fill="rgb(249,113,42)"/><text x="886.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.73%)</title><rect x="885" y="212" width="9" height="15" fill="rgb(241,106,51)"/><text x="888.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 5.72%)</title><rect x="894" y="212" width="67" height="15" fill="rgb(213,105,13)"/><text x="897.00" y="222.50">dgemm_k..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="961" y="292" width="2" height="15" fill="rgb(224,87,34)"/><text x="964.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="961" y="308" width="2" height="15" fill="rgb(232,11,52)"/><text x="964.00" y="318.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="963" y="340" width="2" height="15" fill="rgb(241,195,47)"/><text x="966.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="963" y="356" width="2" height="15" fill="rgb(238,33,52)"/><text x="966.00" y="366.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="963" y="372" width="2" height="15" fill="rgb(233,219,10)"/><text x="966.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (40 samples, 5.87%)</title><rect x="965" y="340" width="69" height="15" fill="rgb(240,164,17)"/><text x="968.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (40 samples, 5.87%)</title><rect x="965" y="356" width="69" height="15" fill="rgb(221,172,2)"/><text x="968.00" y="366.50">sched_y..</text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="1036" y="356" width="1" height="15" fill="rgb(234,115,41)"/><text x="1039.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (53 samples, 7.77%)</title><rect x="961" y="260" width="92" height="15" fill="rgb(207,212,14)"/><text x="964.00" y="270.50">DOUBLE_mat..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (53 samples, 7.77%)</title><rect x="961" y="276" width="92" height="15" fill="rgb(216,127,14)"/><text x="964.00" y="286.50">cblas_dgem..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 7.62%)</title><rect x="963" y="292" width="90" height="15" fill="rgb(249,116,2)"/><text x="966.00" y="302.50">dgemm_thre..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 7.62%)</title><rect x="963" y="308" width="90" height="15" fill="rgb(239,227,17)"/><text x="966.00" y="318.50">gemm_drive..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (52 samples, 7.62%)</title><rect x="963" y="324" width="90" height="15" fill="rgb(225,155,38)"/><text x="966.00" y="334.50">exec_blas ..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.61%)</title><rect x="1034" y="340" width="19" height="15" fill="rgb(229,1,3)"/><text x="1037.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.32%)</title><rect x="1037" y="356" width="16" height="15" fill="rgb(253,190,45)"/><text x="1040.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1053" y="324" width="2" height="15" fill="rgb(216,158,19)"/><text x="1056.00" y="334.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (6 samples, 0.88%)</title><rect x="1055" y="324" width="10" height="15" fill="rgb(231,12,42)"/><text x="1058.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (105 samples, 15.40%)</title><rect x="885" y="196" width="182" height="15" fill="rgb(242,189,42)"/><text x="888.00" y="206.50">safe_sparse_dot (sklear..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (61 samples, 8.94%)</title><rect x="961" y="212" width="106" height="15" fill="rgb(254,210,16)"/><text x="964.00" y="222.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (61 samples, 8.94%)</title><rect x="961" y="228" width="106" height="15" fill="rgb(218,217,35)"/><text x="964.00" y="238.50">PyUFunc_Gene..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (61 samples, 8.94%)</title><rect x="961" y="244" width="106" height="15" fill="rgb(236,197,33)"/><text x="964.00" y="254.50">PyUFunc_Gene..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 1.17%)</title><rect x="1053" y="260" width="14" height="15" fill="rgb(213,164,2)"/><text x="1056.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (8 samples, 1.17%)</title><rect x="1053" y="276" width="14" height="15" fill="rgb(246,70,4)"/><text x="1056.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (8 samples, 1.17%)</title><rect x="1053" y="292" width="14" height="15" fill="rgb(232,203,1)"/><text x="1056.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (8 samples, 1.17%)</title><rect x="1053" y="308" width="14" height="15" fill="rgb(216,96,25)"/><text x="1056.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.15%)</title><rect x="1065" y="324" width="2" height="15" fill="rgb(225,1,12)"/><text x="1068.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.15%)</title><rect x="1070" y="340" width="2" height="15" fill="rgb(211,24,47)"/><text x="1073.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1070" y="356" width="2" height="15" fill="rgb(245,197,41)"/><text x="1073.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1070" y="372" width="2" height="15" fill="rgb(211,162,45)"/><text x="1073.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1070" y="388" width="2" height="15" fill="rgb(242,12,40)"/><text x="1073.00" y="398.50"></text></g><g><title>array_max (methods.c) (2 samples, 0.29%)</title><rect x="1070" y="212" width="4" height="15" fill="rgb(251,19,19)"/><text x="1073.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.29%)</title><rect x="1070" y="228" width="4" height="15" fill="rgb(243,198,52)"/><text x="1073.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py) (2 samples, 0.29%)</title><rect x="1070" y="244" width="4" height="15" fill="rgb(205,101,22)"/><text x="1073.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1070" y="260" width="4" height="15" fill="rgb(216,21,29)"/><text x="1073.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1070" y="276" width="4" height="15" fill="rgb(205,71,1)"/><text x="1073.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1070" y="292" width="4" height="15" fill="rgb(220,50,26)"/><text x="1073.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.29%)</title><rect x="1070" y="308" width="4" height="15" fill="rgb(250,3,26)"/><text x="1073.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1070" y="324" width="4" height="15" fill="rgb(224,89,48)"/><text x="1073.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="1072" y="340" width="2" height="15" fill="rgb(253,98,22)"/><text x="1075.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1072" y="356" width="2" height="15" fill="rgb(213,148,23)"/><text x="1075.00" y="366.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.15%)</title><rect x="1074" y="212" width="1" height="15" fill="rgb(235,172,7)"/><text x="1077.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.15%)</title><rect x="1074" y="228" width="1" height="15" fill="rgb(220,201,21)"/><text x="1077.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1075" y="308" width="2" height="15" fill="rgb(221,166,47)"/><text x="1078.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1075" y="324" width="2" height="15" fill="rgb(213,43,6)"/><text x="1078.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="1075" y="340" width="2" height="15" fill="rgb(246,126,11)"/><text x="1078.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="1075" y="356" width="2" height="15" fill="rgb(242,172,49)"/><text x="1078.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(254,166,36)"/><text x="1078.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="1075" y="388" width="2" height="15" fill="rgb(205,88,42)"/><text x="1078.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="1075" y="404" width="2" height="15" fill="rgb(228,56,9)"/><text x="1078.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1075" y="420" width="2" height="15" fill="rgb(241,216,4)"/><text x="1078.00" y="430.50"></text></g><g><title>0x7f2203725b14 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1075" y="436" width="2" height="15" fill="rgb(208,140,1)"/><text x="1078.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.29%)</title><rect x="1075" y="292" width="4" height="15" fill="rgb(232,167,30)"/><text x="1078.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1077" y="308" width="2" height="15" fill="rgb(250,101,7)"/><text x="1080.00" y="318.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.44%)</title><rect x="1075" y="212" width="5" height="15" fill="rgb(215,122,4)"/><text x="1078.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.44%)</title><rect x="1075" y="228" width="5" height="15" fill="rgb(213,47,33)"/><text x="1078.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.44%)</title><rect x="1075" y="244" width="5" height="15" fill="rgb(253,6,9)"/><text x="1078.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="1075" y="260" width="5" height="15" fill="rgb(247,144,5)"/><text x="1078.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.44%)</title><rect x="1075" y="276" width="5" height="15" fill="rgb(241,220,20)"/><text x="1078.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1079" y="292" width="1" height="15" fill="rgb(214,91,20)"/><text x="1082.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="1079" y="308" width="1" height="15" fill="rgb(214,172,10)"/><text x="1082.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1079" y="324" width="1" height="15" fill="rgb(205,141,40)"/><text x="1082.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1079" y="340" width="1" height="15" fill="rgb(233,142,6)"/><text x="1082.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1080" y="276" width="2" height="15" fill="rgb(214,82,40)"/><text x="1083.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="1080" y="292" width="2" height="15" fill="rgb(246,219,51)"/><text x="1083.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="1080" y="308" width="2" height="15" fill="rgb(238,185,29)"/><text x="1083.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1080" y="324" width="2" height="15" fill="rgb(224,58,36)"/><text x="1083.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1080" y="340" width="2" height="15" fill="rgb(236,96,48)"/><text x="1083.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.29%)</title><rect x="1082" y="324" width="4" height="15" fill="rgb(206,1,4)"/><text x="1085.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1084" y="340" width="2" height="15" fill="rgb(206,165,36)"/><text x="1087.00" y="350.50"></text></g><g><title>array_sum (methods.c) (5 samples, 0.73%)</title><rect x="1080" y="212" width="9" height="15" fill="rgb(219,92,6)"/><text x="1083.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (5 samples, 0.73%)</title><rect x="1080" y="228" width="9" height="15" fill="rgb(215,28,11)"/><text x="1083.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (5 samples, 0.73%)</title><rect x="1080" y="244" width="9" height="15" fill="rgb(214,33,41)"/><text x="1083.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 0.73%)</title><rect x="1080" y="260" width="9" height="15" fill="rgb(214,189,8)"/><text x="1083.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.59%)</title><rect x="1082" y="276" width="7" height="15" fill="rgb(210,198,18)"/><text x="1085.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.59%)</title><rect x="1082" y="292" width="7" height="15" fill="rgb(208,126,0)"/><text x="1085.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.59%)</title><rect x="1082" y="308" width="7" height="15" fill="rgb(236,110,16)"/><text x="1085.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1086" y="324" width="3" height="15" fill="rgb(253,12,8)"/><text x="1089.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="1087" y="340" width="2" height="15" fill="rgb(215,127,12)"/><text x="1090.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (4 samples, 0.59%)</title><rect x="1091" y="276" width="7" height="15" fill="rgb(228,107,28)"/><text x="1094.00" y="286.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (4 samples, 0.59%)</title><rect x="1091" y="292" width="7" height="15" fill="rgb(223,25,28)"/><text x="1094.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (4 samples, 0.59%)</title><rect x="1091" y="308" width="7" height="15" fill="rgb(214,113,8)"/><text x="1094.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.44%)</title><rect x="1093" y="324" width="5" height="15" fill="rgb(227,215,18)"/><text x="1096.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.03%)</title><rect x="1091" y="260" width="12" height="15" fill="rgb(246,123,19)"/><text x="1094.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.44%)</title><rect x="1098" y="276" width="5" height="15" fill="rgb(213,7,34)"/><text x="1101.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.44%)</title><rect x="1098" y="292" width="5" height="15" fill="rgb(223,220,22)"/><text x="1101.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.44%)</title><rect x="1098" y="308" width="5" height="15" fill="rgb(205,45,28)"/><text x="1101.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.29%)</title><rect x="1100" y="324" width="3" height="15" fill="rgb(217,194,26)"/><text x="1103.00" y="334.50"></text></g><g><title>0x7f22038f6c04 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1108" y="308" width="2" height="15" fill="rgb(211,150,16)"/><text x="1111.00" y="318.50"></text></g><g><title>0x7f22038f6c0c (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1110" y="308" width="2" height="15" fill="rgb(221,39,3)"/><text x="1113.00" y="318.50"></text></g><g><title>0x7f22038f6c28 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1112" y="308" width="1" height="15" fill="rgb(247,54,5)"/><text x="1115.00" y="318.50"></text></g><g><title>0x7f22038f6c6e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1113" y="308" width="2" height="15" fill="rgb(212,24,37)"/><text x="1116.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (29 samples, 4.25%)</title><rect x="1067" y="196" width="50" height="15" fill="rgb(245,85,19)"/><text x="1070.00" y="206.50">softm..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.35%)</title><rect x="1089" y="212" width="28" height="15" fill="rgb(237,148,22)"/><text x="1092.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.35%)</title><rect x="1089" y="228" width="28" height="15" fill="rgb(219,111,2)"/><text x="1092.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.20%)</title><rect x="1091" y="244" width="26" height="15" fill="rgb(252,196,44)"/><text x="1094.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (8 samples, 1.17%)</title><rect x="1103" y="260" width="14" height="15" fill="rgb(244,41,19)"/><text x="1106.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (8 samples, 1.17%)</title><rect x="1103" y="276" width="14" height="15" fill="rgb(254,67,31)"/><text x="1106.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.17%)</title><rect x="1103" y="292" width="14" height="15" fill="rgb(218,66,44)"/><text x="1106.00" y="302.50"></text></g><g><title>0x7f22038f6c7b (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1115" y="308" width="2" height="15" fill="rgb(220,59,54)"/><text x="1118.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (8 samples, 1.17%)</title><rect x="1119" y="308" width="13" height="15" fill="rgb(232,176,34)"/><text x="1122.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (14 samples, 2.05%)</title><rect x="1119" y="260" width="24" height="15" fill="rgb(224,228,25)"/><text x="1122.00" y="270.50">D..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (14 samples, 2.05%)</title><rect x="1119" y="276" width="24" height="15" fill="rgb(252,202,10)"/><text x="1122.00" y="286.50">r..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (14 samples, 2.05%)</title><rect x="1119" y="292" width="24" height="15" fill="rgb(227,3,54)"/><text x="1122.00" y="302.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 0.88%)</title><rect x="1132" y="308" width="11" height="15" fill="rgb(228,171,48)"/><text x="1135.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1143" y="260" width="2" height="15" fill="rgb(241,148,12)"/><text x="1146.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1143" y="276" width="2" height="15" fill="rgb(212,108,11)"/><text x="1146.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1145" y="260" width="1" height="15" fill="rgb(216,165,35)"/><text x="1148.00" y="270.50"></text></g><g><title>0x7f2203744d50 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1146" y="308" width="2" height="15" fill="rgb(244,164,38)"/><text x="1149.00" y="318.50"></text></g><g><title>0x7f2203744f42 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1148" y="308" width="2" height="15" fill="rgb(243,109,43)"/><text x="1151.00" y="318.50"></text></g><g><title>0x7f2203744f53 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1150" y="308" width="1" height="15" fill="rgb(222,189,33)"/><text x="1153.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.93%)</title><rect x="1119" y="212" width="34" height="15" fill="rgb(237,159,36)"/><text x="1122.00" y="222.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.93%)</title><rect x="1119" y="228" width="34" height="15" fill="rgb(205,144,35)"/><text x="1122.00" y="238.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.93%)</title><rect x="1119" y="244" width="34" height="15" fill="rgb(213,139,29)"/><text x="1122.00" y="254.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (4 samples, 0.59%)</title><rect x="1146" y="260" width="7" height="15" fill="rgb(220,54,34)"/><text x="1149.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.59%)</title><rect x="1146" y="276" width="7" height="15" fill="rgb(254,163,38)"/><text x="1149.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.59%)</title><rect x="1146" y="292" width="7" height="15" fill="rgb(234,227,54)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f2203744f72 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1151" y="308" width="2" height="15" fill="rgb(209,71,42)"/><text x="1154.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (208 samples, 30.50%)</title><rect x="795" y="180" width="360" height="15" fill="rgb(208,130,36)"/><text x="798.00" y="190.50">_forward_pass (sklearn/neural_network/_multilaye..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 3.23%)</title><rect x="1117" y="196" width="38" height="15" fill="rgb(237,50,38)"/><text x="1120.00" y="206.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1153" y="212" width="2" height="15" fill="rgb(208,130,37)"/><text x="1156.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="1160" y="196" width="2" height="15" fill="rgb(243,183,50)"/><text x="1163.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="1162" y="196" width="2" height="15" fill="rgb(216,73,0)"/><text x="1165.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (220 samples, 32.26%)</title><rect x="790" y="164" width="380" height="15" fill="rgb(215,227,31)"/><text x="793.00" y="174.50">_predict (sklearn/neural_network/_multilayer_percep..</text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 1.32%)</title><rect x="1155" y="180" width="15" height="15" fill="rgb(205,35,51)"/><text x="1158.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (4 samples, 0.59%)</title><rect x="1164" y="196" width="6" height="15" fill="rgb(211,107,39)"/><text x="1167.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.29%)</title><rect x="1167" y="212" width="3" height="15" fill="rgb(205,93,51)"/><text x="1170.00" y="222.50"></text></g><g><title>profile_skl (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (225 samples, 32.99%)</title><rect x="788" y="68" width="389" height="15" fill="rgb(234,24,1)"/><text x="791.00" y="78.50">profile_skl (bench_MLPClassifier_default_b_cl_1000_5..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (225 samples, 32.99%)</title><rect x="788" y="84" width="389" height="15" fill="rgb(234,115,30)"/><text x="791.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1000..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (225 samples, 32.99%)</title><rect x="788" y="100" width="389" height="15" fill="rgb(218,39,39)"/><text x="791.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1000_50_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 32.84%)</title><rect x="790" y="116" width="387" height="15" fill="rgb(210,145,38)"/><text x="793.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 32.84%)</title><rect x="790" y="132" width="387" height="15" fill="rgb(207,136,26)"/><text x="793.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py) (224 samples, 32.84%)</title><rect x="790" y="148" width="387" height="15" fill="rgb(207,216,33)"/><text x="793.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_pe..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.59%)</title><rect x="1170" y="164" width="7" height="15" fill="rgb(249,21,30)"/><text x="1173.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.44%)</title><rect x="1172" y="180" width="5" height="15" fill="rgb(222,158,29)"/><text x="1175.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.29%)</title><rect x="1174" y="196" width="3" height="15" fill="rgb(244,78,8)"/><text x="1177.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1177" y="276" width="2" height="15" fill="rgb(218,150,8)"/><text x="1180.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="1177" y="292" width="2" height="15" fill="rgb(211,28,52)"/><text x="1180.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="1177" y="308" width="2" height="15" fill="rgb(249,117,23)"/><text x="1180.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1177" y="324" width="2" height="15" fill="rgb(226,32,10)"/><text x="1180.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="1177" y="340" width="2" height="15" fill="rgb(232,175,16)"/><text x="1180.00" y="350.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="1177" y="356" width="2" height="15" fill="rgb(211,49,16)"/><text x="1180.00" y="366.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (2 samples, 0.29%)</title><rect x="1177" y="164" width="4" height="15" fill="rgb(208,128,9)"/><text x="1180.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (2 samples, 0.29%)</title><rect x="1177" y="180" width="4" height="15" fill="rgb(238,33,24)"/><text x="1180.00" y="190.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py) (2 samples, 0.29%)</title><rect x="1177" y="196" width="4" height="15" fill="rgb(206,204,11)"/><text x="1180.00" y="206.50"></text></g><g><title>array_max (methods.c) (2 samples, 0.29%)</title><rect x="1177" y="212" width="4" height="15" fill="rgb(243,16,44)"/><text x="1180.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.29%)</title><rect x="1177" y="228" width="4" height="15" fill="rgb(233,1,15)"/><text x="1180.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py) (2 samples, 0.29%)</title><rect x="1177" y="244" width="4" height="15" fill="rgb(252,95,27)"/><text x="1180.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.29%)</title><rect x="1177" y="260" width="4" height="15" fill="rgb(229,89,37)"/><text x="1180.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(253,35,40)"/><text x="1182.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(235,148,15)"/><text x="1182.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.15%)</title><rect x="1179" y="308" width="2" height="15" fill="rgb(234,188,12)"/><text x="1182.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.15%)</title><rect x="1179" y="324" width="2" height="15" fill="rgb(220,185,24)"/><text x="1182.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(217,61,51)"/><text x="1182.00" y="350.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.15%)</title><rect x="1179" y="356" width="2" height="15" fill="rgb(205,2,4)"/><text x="1182.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(205,23,21)"/><text x="1184.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1181" y="276" width="2" height="15" fill="rgb(211,32,33)"/><text x="1184.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="1181" y="292" width="2" height="15" fill="rgb(220,173,44)"/><text x="1184.00" y="302.50"></text></g><g><title>_array_indexing (sklearn/utils/__init__.py) (2 samples, 0.29%)</title><rect x="1181" y="228" width="3" height="15" fill="rgb(253,2,5)"/><text x="1184.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.29%)</title><rect x="1181" y="244" width="3" height="15" fill="rgb(223,197,45)"/><text x="1184.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.15%)</title><rect x="1183" y="260" width="1" height="15" fill="rgb(207,13,46)"/><text x="1186.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.15%)</title><rect x="1183" y="276" width="1" height="15" fill="rgb(251,34,26)"/><text x="1186.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="1183" y="292" width="1" height="15" fill="rgb(205,85,18)"/><text x="1186.00" y="302.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py) (3 samples, 0.44%)</title><rect x="1181" y="164" width="5" height="15" fill="rgb(241,198,9)"/><text x="1184.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py) (3 samples, 0.44%)</title><rect x="1181" y="180" width="5" height="15" fill="rgb(205,123,28)"/><text x="1184.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/__init__.py) (3 samples, 0.44%)</title><rect x="1181" y="196" width="5" height="15" fill="rgb(224,19,29)"/><text x="1184.00" y="206.50"></text></g><g><title>_safe_indexing (sklearn/utils/__init__.py) (3 samples, 0.44%)</title><rect x="1181" y="212" width="5" height="15" fill="rgb(225,197,2)"/><text x="1184.00" y="222.50"></text></g><g><title>_determine_key_type (sklearn/utils/__init__.py) (1 samples, 0.15%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(252,57,25)"/><text x="1187.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (681 samples, 99.85%)</title><rect x="10" y="52" width="1178" height="15" fill="rgb(207,130,29)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_MLPClassifier_default_b_cl_1000_50_12_float_.py) (6 samples, 0.88%)</title><rect x="1177" y="68" width="11" height="15" fill="rgb(227,126,52)"/><text x="1180.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py) (6 samples, 0.88%)</title><rect x="1177" y="84" width="11" height="15" fill="rgb(221,99,17)"/><text x="1180.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.88%)</title><rect x="1177" y="100" width="11" height="15" fill="rgb(245,122,32)"/><text x="1180.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (6 samples, 0.88%)</title><rect x="1177" y="116" width="11" height="15" fill="rgb(212,97,12)"/><text x="1180.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (6 samples, 0.88%)</title><rect x="1177" y="132" width="11" height="15" fill="rgb(211,199,25)"/><text x="1180.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (6 samples, 0.88%)</title><rect x="1177" y="148" width="11" height="15" fill="rgb(241,109,22)"/><text x="1180.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.15%)</title><rect x="1186" y="164" width="2" height="15" fill="rgb(223,126,41)"/><text x="1189.00" y="174.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.15%)</title><rect x="1186" y="180" width="2" height="15" fill="rgb(246,111,14)"/><text x="1189.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.15%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(237,86,32)"/><text x="1189.00" y="206.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.15%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(246,40,1)"/><text x="1189.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(222,150,2)"/><text x="1189.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(231,80,5)"/><text x="1189.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(247,1,53)"/><text x="1189.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(222,45,32)"/><text x="1189.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(247,67,28)"/><text x="1189.00" y="302.50"></text></g><g><title>all (682 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,218,38)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(252,86,11)"/><text x="1191.00" y="62.50"></text></g></g></svg>