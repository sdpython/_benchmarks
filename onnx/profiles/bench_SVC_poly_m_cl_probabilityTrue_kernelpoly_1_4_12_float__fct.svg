<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>EntryPoint (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(238,131,27)"/><text x="13.00" y="846.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(242,28,33)"/><text x="13.00" y="862.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(223,169,15)"/><text x="13.00" y="878.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(212,212,47)"/><text x="13.00" y="894.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(234,72,27)"/><text x="13.00" y="910.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(245,78,24)"/><text x="13.00" y="926.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(235,220,32)"/><text x="13.00" y="942.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(245,98,42)"/><text x="13.00" y="958.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(233,70,51)"/><text x="13.00" y="974.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(206,118,29)"/><text x="13.00" y="990.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.33%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(240,14,44)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(250,88,40)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(216,153,12)"/><text x="16.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(228,54,3)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(219,112,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(234,94,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(224,6,13)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(211,65,49)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(251,174,35)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(246,82,11)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(210,132,42)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(218,153,0)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(220,113,12)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(243,57,32)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(241,162,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(223,210,7)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(214,51,13)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(205,157,12)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="836" width="8" height="15" fill="rgb(254,100,6)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="852" width="8" height="15" fill="rgb(225,61,4)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="868" width="8" height="15" fill="rgb(209,140,5)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(216,180,17)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(246,199,42)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="13" y="916" width="8" height="15" fill="rgb(228,47,5)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="13" y="932" width="8" height="15" fill="rgb(232,73,32)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="13" y="948" width="8" height="15" fill="rgb(241,160,50)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="13" y="964" width="8" height="15" fill="rgb(213,79,34)"/><text x="16.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(248,207,10)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.33%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(251,162,45)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(250,72,51)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="324" width="15" height="15" fill="rgb(214,91,2)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(245,63,48)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(218,29,30)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(241,71,11)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.33%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(253,39,3)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(236,221,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(210,85,15)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(210,131,26)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(220,32,10)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(241,204,49)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.33%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(232,65,0)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(230,5,45)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(234,183,25)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(234,53,1)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(235,149,18)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(253,0,53)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.33%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(228,208,13)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="596" width="4" height="15" fill="rgb(211,194,1)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="612" width="4" height="15" fill="rgb(238,222,21)"/><text x="24.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="628" width="4" height="15" fill="rgb(239,218,19)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="644" width="4" height="15" fill="rgb(229,51,20)"/><text x="24.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="660" width="4" height="15" fill="rgb(226,33,15)"/><text x="24.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="676" width="4" height="15" fill="rgb(207,40,6)"/><text x="24.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="692" width="4" height="15" fill="rgb(213,113,36)"/><text x="24.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.33%)</title><rect x="21" y="708" width="4" height="15" fill="rgb(209,59,54)"/><text x="24.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="724" width="4" height="15" fill="rgb(244,206,16)"/><text x="24.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="740" width="4" height="15" fill="rgb(245,121,34)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="756" width="4" height="15" fill="rgb(218,116,23)"/><text x="24.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="772" width="4" height="15" fill="rgb(238,216,15)"/><text x="24.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="788" width="4" height="15" fill="rgb(222,79,35)"/><text x="24.00" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="804" width="4" height="15" fill="rgb(219,134,33)"/><text x="24.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="820" width="4" height="15" fill="rgb(233,2,14)"/><text x="24.00" y="830.50"></text></g><g><title>&lt;module&gt; (protobuf/internal/api_implementation.py) (1 samples, 0.33%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(229,50,46)"/><text x="24.00" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(246,130,28)"/><text x="24.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(226,38,11)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(248,14,41)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(210,22,17)"/><text x="24.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(249,196,34)"/><text x="24.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(219,132,46)"/><text x="24.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(221,180,47)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(236,119,51)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(232,11,9)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(218,7,50)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(254,193,25)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(246,68,46)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(234,220,10)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(219,127,36)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(230,69,23)"/><text x="28.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(212,171,3)"/><text x="28.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(244,133,9)"/><text x="28.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(225,159,14)"/><text x="28.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(247,30,39)"/><text x="28.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(233,63,27)"/><text x="28.00" y="990.50"></text></g><g><title>0x7f60a7ffd995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(230,107,22)"/><text x="28.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(243,51,6)"/><text x="28.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(242,195,23)"/><text x="28.00" y="1038.50"></text></g><g><title>0x7f60a7ffd258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(213,169,14)"/><text x="28.00" y="1054.50"></text></g><g><title>0x7f60a804ad7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(233,214,17)"/><text x="28.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(237,174,1)"/><text x="28.00" y="1086.50"></text></g><g><title>0x7f60a804b345 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(252,131,54)"/><text x="28.00" y="1102.50"></text></g><g><title>0x7f60a8043fec (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(220,196,15)"/><text x="28.00" y="1118.50"></text></g><g><title>0x7f60a804256b (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(215,190,15)"/><text x="28.00" y="1134.50"></text></g><g><title>0x7f60a8041c6d (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(219,85,3)"/><text x="28.00" y="1150.50"></text></g><g><title>0x7f60a804170f (ld-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(209,3,37)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(244,212,51)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(216,227,27)"/><text x="32.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(229,3,27)"/><text x="32.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(236,183,43)"/><text x="32.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(226,130,30)"/><text x="32.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="29" y="996" width="4" height="15" fill="rgb(250,209,26)"/><text x="32.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1012" width="4" height="15" fill="rgb(206,38,14)"/><text x="32.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1028" width="4" height="15" fill="rgb(232,197,14)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1044" width="4" height="15" fill="rgb(227,20,17)"/><text x="32.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1060" width="4" height="15" fill="rgb(246,211,36)"/><text x="32.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1076" width="4" height="15" fill="rgb(216,111,14)"/><text x="32.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1092" width="4" height="15" fill="rgb(249,163,23)"/><text x="32.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1108" width="4" height="15" fill="rgb(206,167,26)"/><text x="32.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(207,124,17)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(244,194,45)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(241,126,45)"/><text x="32.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(253,116,39)"/><text x="32.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(232,147,34)"/><text x="32.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(216,128,21)"/><text x="32.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(224,48,43)"/><text x="32.00" y="1230.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="33" y="1060" width="4" height="15" fill="rgb(229,197,3)"/><text x="36.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.33%)</title><rect x="33" y="1076" width="4" height="15" fill="rgb(217,157,51)"/><text x="36.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1092" width="4" height="15" fill="rgb(219,127,14)"/><text x="36.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1108" width="4" height="15" fill="rgb(218,216,6)"/><text x="36.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1124" width="4" height="15" fill="rgb(233,55,26)"/><text x="36.00" y="1134.50"></text></g><g><title>_signature_bound_method (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1140" width="4" height="15" fill="rgb(212,229,2)"/><text x="36.00" y="1150.50"></text></g><g><title>replace (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1156" width="4" height="15" fill="rgb(209,77,23)"/><text x="36.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.33%)</title><rect x="33" y="1172" width="4" height="15" fill="rgb(227,86,11)"/><text x="36.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="500" width="16" height="15" fill="rgb(253,40,26)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="516" width="16" height="15" fill="rgb(250,48,46)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="532" width="16" height="15" fill="rgb(238,64,6)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="25" y="548" width="16" height="15" fill="rgb(241,134,27)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="564" width="16" height="15" fill="rgb(248,131,39)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.33%)</title><rect x="25" y="580" width="16" height="15" fill="rgb(212,58,1)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="596" width="16" height="15" fill="rgb(231,80,1)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="612" width="16" height="15" fill="rgb(243,17,37)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="628" width="16" height="15" fill="rgb(230,183,38)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="25" y="644" width="16" height="15" fill="rgb(238,27,37)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="660" width="16" height="15" fill="rgb(253,127,18)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 1.33%)</title><rect x="25" y="676" width="16" height="15" fill="rgb(215,203,6)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="692" width="16" height="15" fill="rgb(205,77,27)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="708" width="16" height="15" fill="rgb(230,132,16)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="724" width="16" height="15" fill="rgb(248,47,36)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="25" y="740" width="16" height="15" fill="rgb(241,170,11)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="25" y="756" width="16" height="15" fill="rgb(213,33,2)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 1.33%)</title><rect x="25" y="772" width="16" height="15" fill="rgb(254,27,52)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="788" width="12" height="15" fill="rgb(207,120,45)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="804" width="12" height="15" fill="rgb(237,5,48)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="820" width="12" height="15" fill="rgb(237,123,44)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="836" width="12" height="15" fill="rgb(240,143,45)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="852" width="12" height="15" fill="rgb(252,79,13)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="29" y="868" width="12" height="15" fill="rgb(219,84,32)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="29" y="884" width="12" height="15" fill="rgb(228,0,24)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 1.00%)</title><rect x="29" y="900" width="12" height="15" fill="rgb(211,202,12)"/><text x="32.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="916" width="8" height="15" fill="rgb(225,119,8)"/><text x="36.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="932" width="8" height="15" fill="rgb(228,70,6)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="948" width="8" height="15" fill="rgb(216,17,28)"/><text x="36.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="964" width="8" height="15" fill="rgb(220,57,4)"/><text x="36.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="980" width="8" height="15" fill="rgb(237,1,11)"/><text x="36.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="33" y="996" width="8" height="15" fill="rgb(233,100,32)"/><text x="36.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="33" y="1012" width="8" height="15" fill="rgb(226,228,33)"/><text x="36.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.66%)</title><rect x="33" y="1028" width="8" height="15" fill="rgb(215,63,0)"/><text x="36.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.66%)</title><rect x="33" y="1044" width="8" height="15" fill="rgb(221,104,0)"/><text x="36.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="37" y="1060" width="4" height="15" fill="rgb(214,38,52)"/><text x="40.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.33%)</title><rect x="37" y="1076" width="4" height="15" fill="rgb(247,20,18)"/><text x="40.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.33%)</title><rect x="37" y="1092" width="4" height="15" fill="rgb(217,61,30)"/><text x="40.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="10" y="196" width="35" height="15" fill="rgb(223,120,20)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="10" y="212" width="35" height="15" fill="rgb(238,164,26)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="10" y="228" width="35" height="15" fill="rgb(241,132,17)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="10" y="244" width="35" height="15" fill="rgb(219,174,30)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.99%)</title><rect x="10" y="260" width="35" height="15" fill="rgb(253,195,38)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="10" y="276" width="35" height="15" fill="rgb(238,212,36)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 1.66%)</title><rect x="25" y="292" width="20" height="15" fill="rgb(227,126,8)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="308" width="20" height="15" fill="rgb(247,154,35)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="324" width="20" height="15" fill="rgb(241,186,33)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="340" width="20" height="15" fill="rgb(205,156,27)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.66%)</title><rect x="25" y="356" width="20" height="15" fill="rgb(207,224,12)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="372" width="20" height="15" fill="rgb(214,197,1)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (5 samples, 1.66%)</title><rect x="25" y="388" width="20" height="15" fill="rgb(220,23,24)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="404" width="20" height="15" fill="rgb(221,48,33)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="420" width="20" height="15" fill="rgb(206,156,33)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="436" width="20" height="15" fill="rgb(253,103,50)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.66%)</title><rect x="25" y="452" width="20" height="15" fill="rgb(236,108,36)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="25" y="468" width="20" height="15" fill="rgb(223,196,31)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (5 samples, 1.66%)</title><rect x="25" y="484" width="20" height="15" fill="rgb(231,113,38)"/><text x="28.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="500" width="4" height="15" fill="rgb(222,202,54)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="516" width="4" height="15" fill="rgb(254,65,31)"/><text x="44.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="532" width="4" height="15" fill="rgb(239,121,39)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="548" width="4" height="15" fill="rgb(223,53,13)"/><text x="44.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="564" width="4" height="15" fill="rgb(248,26,51)"/><text x="44.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="580" width="4" height="15" fill="rgb(234,71,38)"/><text x="44.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="596" width="4" height="15" fill="rgb(244,205,6)"/><text x="44.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.33%)</title><rect x="41" y="612" width="4" height="15" fill="rgb(212,196,3)"/><text x="44.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="628" width="4" height="15" fill="rgb(227,160,13)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="644" width="4" height="15" fill="rgb(234,19,35)"/><text x="44.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="660" width="4" height="15" fill="rgb(245,62,54)"/><text x="44.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="676" width="4" height="15" fill="rgb(245,20,31)"/><text x="44.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="692" width="4" height="15" fill="rgb(207,75,47)"/><text x="44.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="708" width="4" height="15" fill="rgb(238,138,47)"/><text x="44.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="724" width="4" height="15" fill="rgb(214,155,27)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="740" width="4" height="15" fill="rgb(212,52,20)"/><text x="44.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="756" width="4" height="15" fill="rgb(233,224,46)"/><text x="44.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="772" width="4" height="15" fill="rgb(209,115,24)"/><text x="44.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="788" width="4" height="15" fill="rgb(234,37,17)"/><text x="44.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.33%)</title><rect x="41" y="804" width="4" height="15" fill="rgb(220,39,1)"/><text x="44.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="820" width="4" height="15" fill="rgb(232,71,46)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="836" width="4" height="15" fill="rgb(227,215,39)"/><text x="44.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="852" width="4" height="15" fill="rgb(215,221,53)"/><text x="44.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="868" width="4" height="15" fill="rgb(206,92,12)"/><text x="44.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="884" width="4" height="15" fill="rgb(222,76,17)"/><text x="44.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.33%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(238,75,14)"/><text x="44.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(206,65,26)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(251,82,51)"/><text x="44.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(236,210,52)"/><text x="44.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(206,104,48)"/><text x="44.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="980" width="4" height="15" fill="rgb(216,135,18)"/><text x="44.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/pool.py) (1 samples, 0.33%)</title><rect x="41" y="996" width="4" height="15" fill="rgb(236,14,5)"/><text x="44.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1012" width="4" height="15" fill="rgb(252,70,49)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1028" width="4" height="15" fill="rgb(223,98,20)"/><text x="44.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1044" width="4" height="15" fill="rgb(229,168,28)"/><text x="44.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1060" width="4" height="15" fill="rgb(207,76,24)"/><text x="44.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1076" width="4" height="15" fill="rgb(241,8,11)"/><text x="44.00" y="1086.50"></text></g><g><title>&lt;module&gt; (joblib/_memmapping_reducer.py) (1 samples, 0.33%)</title><rect x="41" y="1092" width="4" height="15" fill="rgb(216,180,14)"/><text x="44.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(214,107,50)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(208,85,37)"/><text x="44.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(233,171,0)"/><text x="44.00" y="1150.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(232,219,36)"/><text x="44.00" y="1166.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(233,229,36)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(206,85,4)"/><text x="44.00" y="1198.50"></text></g><g><title>0x7f6093b79a2e (?) (1 samples, 0.33%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(208,186,6)"/><text x="44.00" y="1214.50"></text></g><g><title>0x7f6093b783c8 (?) (1 samples, 0.33%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(238,16,44)"/><text x="44.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.33%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(220,179,49)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(211,154,26)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(215,211,35)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(219,67,26)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(243,66,6)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(211,85,36)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(208,97,5)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(214,130,38)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(237,100,12)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(218,116,26)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(213,153,2)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(232,153,33)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.33%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(215,7,32)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(236,100,7)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1428" width="4" height="15" fill="rgb(234,93,26)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1444" width="4" height="15" fill="rgb(227,167,36)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1460" width="4" height="15" fill="rgb(233,53,0)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1476" width="4" height="15" fill="rgb(214,27,18)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.33%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(214,76,32)"/><text x="48.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(229,86,29)"/><text x="48.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1524" width="4" height="15" fill="rgb(227,168,19)"/><text x="48.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1540" width="4" height="15" fill="rgb(245,5,5)"/><text x="48.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1556" width="4" height="15" fill="rgb(244,64,30)"/><text x="48.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1572" width="4" height="15" fill="rgb(211,24,42)"/><text x="48.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1588" width="4" height="15" fill="rgb(234,49,11)"/><text x="48.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1604" width="4" height="15" fill="rgb(236,93,42)"/><text x="48.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="1620" width="4" height="15" fill="rgb(239,140,15)"/><text x="48.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1636" width="4" height="15" fill="rgb(221,101,54)"/><text x="48.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1652" width="4" height="15" fill="rgb(231,163,48)"/><text x="48.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1668" width="4" height="15" fill="rgb(245,197,0)"/><text x="48.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1684" width="4" height="15" fill="rgb(231,6,9)"/><text x="48.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1700" width="4" height="15" fill="rgb(235,151,14)"/><text x="48.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_hierarchical.py) (1 samples, 0.33%)</title><rect x="45" y="1716" width="4" height="15" fill="rgb(242,200,42)"/><text x="48.00" y="1726.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1732" width="4" height="15" fill="rgb(206,62,26)"/><text x="48.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1748" width="4" height="15" fill="rgb(205,93,3)"/><text x="48.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1764" width="4" height="15" fill="rgb(251,135,37)"/><text x="48.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1780" width="4" height="15" fill="rgb(206,218,21)"/><text x="48.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1796" width="4" height="15" fill="rgb(240,35,27)"/><text x="48.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1812" width="4" height="15" fill="rgb(226,8,10)"/><text x="48.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1828" width="4" height="15" fill="rgb(223,222,34)"/><text x="48.00" y="1838.50"></text></g><g><title>0x7f6074f21989 (?) (1 samples, 0.33%)</title><rect x="45" y="1844" width="4" height="15" fill="rgb(238,53,17)"/><text x="48.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1860" width="4" height="15" fill="rgb(226,75,15)"/><text x="48.00" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1876" width="4" height="15" fill="rgb(214,173,51)"/><text x="48.00" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1892" width="4" height="15" fill="rgb(207,156,45)"/><text x="48.00" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1908" width="4" height="15" fill="rgb(250,90,45)"/><text x="48.00" y="1918.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1924" width="4" height="15" fill="rgb(237,29,44)"/><text x="48.00" y="1934.50"></text></g><g><title>0x7f6074ce3718 (?) (1 samples, 0.33%)</title><rect x="45" y="1940" width="4" height="15" fill="rgb(210,225,8)"/><text x="48.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="45" y="1124" width="8" height="15" fill="rgb(252,175,13)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="45" y="1140" width="8" height="15" fill="rgb(242,140,18)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="45" y="1156" width="8" height="15" fill="rgb(230,138,0)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="45" y="1172" width="8" height="15" fill="rgb(236,205,53)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="45" y="1188" width="8" height="15" fill="rgb(217,13,22)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(248,137,10)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(228,12,46)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(215,120,21)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(250,225,34)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(233,123,42)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(240,73,33)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(237,83,54)"/><text x="52.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(242,9,46)"/><text x="52.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.33%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(208,101,13)"/><text x="52.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.33%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(239,78,36)"/><text x="52.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.33%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(253,83,3)"/><text x="52.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.33%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(245,228,7)"/><text x="52.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="484" width="12" height="15" fill="rgb(251,225,11)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="500" width="12" height="15" fill="rgb(206,99,44)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="516" width="12" height="15" fill="rgb(253,2,3)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="532" width="12" height="15" fill="rgb(211,54,13)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="548" width="12" height="15" fill="rgb(226,24,47)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="564" width="12" height="15" fill="rgb(213,105,33)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="580" width="12" height="15" fill="rgb(235,81,5)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="596" width="12" height="15" fill="rgb(217,106,31)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="612" width="12" height="15" fill="rgb(225,101,40)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="628" width="12" height="15" fill="rgb(247,218,45)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="644" width="12" height="15" fill="rgb(224,34,11)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="660" width="12" height="15" fill="rgb(252,183,25)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.00%)</title><rect x="45" y="676" width="12" height="15" fill="rgb(236,224,30)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="692" width="12" height="15" fill="rgb(207,187,34)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="708" width="12" height="15" fill="rgb(251,27,3)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="724" width="12" height="15" fill="rgb(235,197,42)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="740" width="12" height="15" fill="rgb(249,109,20)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="756" width="12" height="15" fill="rgb(240,28,32)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="772" width="12" height="15" fill="rgb(242,108,43)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="788" width="12" height="15" fill="rgb(251,87,8)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="804" width="12" height="15" fill="rgb(232,52,28)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="820" width="12" height="15" fill="rgb(220,99,4)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="836" width="12" height="15" fill="rgb(210,86,2)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="852" width="12" height="15" fill="rgb(240,34,7)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.00%)</title><rect x="45" y="868" width="12" height="15" fill="rgb(205,98,5)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="884" width="12" height="15" fill="rgb(230,81,3)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="900" width="12" height="15" fill="rgb(251,184,21)"/><text x="48.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="916" width="12" height="15" fill="rgb(236,134,16)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="932" width="12" height="15" fill="rgb(210,229,2)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="948" width="12" height="15" fill="rgb(222,117,24)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="964" width="12" height="15" fill="rgb(214,75,30)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="980" width="12" height="15" fill="rgb(253,165,6)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="996" width="12" height="15" fill="rgb(217,52,50)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="1012" width="12" height="15" fill="rgb(231,196,35)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1028" width="12" height="15" fill="rgb(219,52,5)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1044" width="12" height="15" fill="rgb(239,6,40)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1060" width="12" height="15" fill="rgb(228,220,42)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="1076" width="12" height="15" fill="rgb(251,229,24)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1092" width="12" height="15" fill="rgb(245,144,3)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.00%)</title><rect x="45" y="1108" width="12" height="15" fill="rgb(235,176,18)"/><text x="48.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(251,125,38)"/><text x="56.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(223,1,46)"/><text x="56.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(254,16,40)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(205,141,40)"/><text x="56.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(215,130,16)"/><text x="56.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(252,125,0)"/><text x="56.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(247,123,41)"/><text x="56.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.33%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(207,131,21)"/><text x="56.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(249,16,2)"/><text x="56.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(243,109,48)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1284" width="4" height="15" fill="rgb(251,138,36)"/><text x="56.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1300" width="4" height="15" fill="rgb(253,56,49)"/><text x="56.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1316" width="4" height="15" fill="rgb(223,29,15)"/><text x="56.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="53" y="1332" width="4" height="15" fill="rgb(248,223,17)"/><text x="56.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1348" width="4" height="15" fill="rgb(212,111,19)"/><text x="56.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.33%)</title><rect x="53" y="1364" width="4" height="15" fill="rgb(232,141,44)"/><text x="56.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1380" width="4" height="15" fill="rgb(219,103,27)"/><text x="56.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1396" width="4" height="15" fill="rgb(225,132,10)"/><text x="56.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1412" width="4" height="15" fill="rgb(208,128,47)"/><text x="56.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="53" y="1428" width="4" height="15" fill="rgb(218,201,5)"/><text x="56.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1444" width="4" height="15" fill="rgb(249,80,31)"/><text x="56.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1460" width="4" height="15" fill="rgb(236,30,16)"/><text x="56.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(208,135,13)"/><text x="56.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(237,117,28)"/><text x="56.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="53" y="1508" width="4" height="15" fill="rgb(231,218,40)"/><text x="56.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="53" y="1524" width="4" height="15" fill="rgb(240,174,18)"/><text x="56.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="53" y="1540" width="4" height="15" fill="rgb(224,114,27)"/><text x="56.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="53" y="1556" width="4" height="15" fill="rgb(215,8,28)"/><text x="56.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.33%)</title><rect x="53" y="1572" width="4" height="15" fill="rgb(250,14,31)"/><text x="56.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1476" width="3" height="15" fill="rgb(216,213,52)"/><text x="60.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1492" width="3" height="15" fill="rgb(249,11,41)"/><text x="60.00" y="1502.50"></text></g><g><title>0x7f607d9ff181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="57" y="1508" width="3" height="15" fill="rgb(250,116,45)"/><text x="60.00" y="1518.50"></text></g><g><title>0x7f607da021c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="57" y="1524" width="3" height="15" fill="rgb(209,223,17)"/><text x="60.00" y="1534.50"></text></g><g><title>0x7f607da2e167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="57" y="1540" width="3" height="15" fill="rgb(249,32,44)"/><text x="60.00" y="1550.50"></text></g><g><title>0x7f607da29b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="57" y="1556" width="3" height="15" fill="rgb(234,113,14)"/><text x="60.00" y="1566.50"></text></g><g><title>0x7f607da0d07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="57" y="1572" width="3" height="15" fill="rgb(221,63,50)"/><text x="60.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.33%)</title><rect x="57" y="1588" width="3" height="15" fill="rgb(253,7,28)"/><text x="60.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1604" width="3" height="15" fill="rgb(245,49,51)"/><text x="60.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1620" width="3" height="15" fill="rgb(239,160,35)"/><text x="60.00" y="1630.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.66%)</title><rect x="57" y="724" width="7" height="15" fill="rgb(229,109,11)"/><text x="60.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="740" width="7" height="15" fill="rgb(238,87,0)"/><text x="60.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="756" width="7" height="15" fill="rgb(223,211,4)"/><text x="60.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="772" width="7" height="15" fill="rgb(230,178,29)"/><text x="60.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="788" width="7" height="15" fill="rgb(231,179,21)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="804" width="7" height="15" fill="rgb(215,91,33)"/><text x="60.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.66%)</title><rect x="57" y="820" width="7" height="15" fill="rgb(241,91,23)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="836" width="7" height="15" fill="rgb(253,173,14)"/><text x="60.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="852" width="7" height="15" fill="rgb(236,208,12)"/><text x="60.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="868" width="7" height="15" fill="rgb(224,114,36)"/><text x="60.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="884" width="7" height="15" fill="rgb(219,56,11)"/><text x="60.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="900" width="7" height="15" fill="rgb(206,66,21)"/><text x="60.00" y="910.50"></text></g><g><title>0x7f607eefc40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="916" width="7" height="15" fill="rgb(225,105,47)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="932" width="7" height="15" fill="rgb(241,9,17)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="948" width="7" height="15" fill="rgb(217,118,14)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="964" width="7" height="15" fill="rgb(249,13,34)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="980" width="7" height="15" fill="rgb(220,106,32)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="996" width="7" height="15" fill="rgb(216,134,51)"/><text x="60.00" y="1006.50"></text></g><g><title>0x7f607ecb5cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1012" width="7" height="15" fill="rgb(237,134,45)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1028" width="7" height="15" fill="rgb(253,101,13)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1044" width="7" height="15" fill="rgb(251,130,12)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1060" width="7" height="15" fill="rgb(217,110,54)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="1076" width="7" height="15" fill="rgb(235,89,19)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1092" width="7" height="15" fill="rgb(229,199,2)"/><text x="60.00" y="1102.50"></text></g><g><title>0x7f607e3ab0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1108" width="7" height="15" fill="rgb(249,200,31)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1124" width="7" height="15" fill="rgb(244,145,43)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1140" width="7" height="15" fill="rgb(248,109,40)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1156" width="7" height="15" fill="rgb(232,206,36)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="1172" width="7" height="15" fill="rgb(225,228,12)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1188" width="7" height="15" fill="rgb(239,39,22)"/><text x="60.00" y="1198.50"></text></g><g><title>0x7f607e12fe68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1204" width="7" height="15" fill="rgb(251,103,30)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1220" width="7" height="15" fill="rgb(229,36,51)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1236" width="7" height="15" fill="rgb(233,65,41)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1252" width="7" height="15" fill="rgb(217,106,0)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="1268" width="7" height="15" fill="rgb(209,174,52)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1284" width="7" height="15" fill="rgb(216,149,32)"/><text x="60.00" y="1294.50"></text></g><g><title>0x7f607dec02fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1300" width="7" height="15" fill="rgb(211,79,34)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1316" width="7" height="15" fill="rgb(235,212,39)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1332" width="7" height="15" fill="rgb(242,8,0)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1348" width="7" height="15" fill="rgb(232,181,38)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="57" y="1364" width="7" height="15" fill="rgb(212,18,6)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1380" width="7" height="15" fill="rgb(234,177,30)"/><text x="60.00" y="1390.50"></text></g><g><title>0x7f607dca4153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1396" width="7" height="15" fill="rgb(248,98,4)"/><text x="60.00" y="1406.50"></text></g><g><title>0x7f607dca2c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="57" y="1412" width="7" height="15" fill="rgb(236,122,34)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1428" width="7" height="15" fill="rgb(238,151,6)"/><text x="60.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1444" width="7" height="15" fill="rgb(213,155,23)"/><text x="60.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="57" y="1460" width="7" height="15" fill="rgb(226,123,40)"/><text x="60.00" y="1470.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1476" width="4" height="15" fill="rgb(242,151,24)"/><text x="63.00" y="1486.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="60" y="1492" width="4" height="15" fill="rgb(234,79,15)"/><text x="63.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="1508" width="4" height="15" fill="rgb(220,133,16)"/><text x="63.00" y="1518.50"></text></g><g><title>0x7f607d9faf2c (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="60" y="1524" width="4" height="15" fill="rgb(247,219,45)"/><text x="63.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py) (1 samples, 0.33%)</title><rect x="64" y="964" width="4" height="15" fill="rgb(233,5,1)"/><text x="67.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="980" width="4" height="15" fill="rgb(217,78,17)"/><text x="67.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="996" width="4" height="15" fill="rgb(217,7,17)"/><text x="67.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1012" width="4" height="15" fill="rgb(212,227,12)"/><text x="67.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="1028" width="4" height="15" fill="rgb(234,120,11)"/><text x="67.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1044" width="4" height="15" fill="rgb(206,164,31)"/><text x="67.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py) (1 samples, 0.33%)</title><rect x="64" y="1060" width="4" height="15" fill="rgb(216,171,23)"/><text x="67.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1076" width="4" height="15" fill="rgb(253,27,38)"/><text x="67.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1092" width="4" height="15" fill="rgb(207,107,7)"/><text x="67.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1108" width="4" height="15" fill="rgb(239,16,25)"/><text x="67.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="1124" width="4" height="15" fill="rgb(251,165,47)"/><text x="67.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1140" width="4" height="15" fill="rgb(237,11,23)"/><text x="67.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py) (1 samples, 0.33%)</title><rect x="64" y="1156" width="4" height="15" fill="rgb(216,54,52)"/><text x="67.00" y="1166.50"></text></g><g><title>import_optional_dependency (pandas/compat/_optional.py) (1 samples, 0.33%)</title><rect x="64" y="1172" width="4" height="15" fill="rgb(233,89,37)"/><text x="67.00" y="1182.50"></text></g><g><title>import_module (importlib/__init__.py) (1 samples, 0.33%)</title><rect x="64" y="1188" width="4" height="15" fill="rgb(234,193,17)"/><text x="67.00" y="1198.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1204" width="4" height="15" fill="rgb(241,224,15)"/><text x="67.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1220" width="4" height="15" fill="rgb(250,122,6)"/><text x="67.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1236" width="4" height="15" fill="rgb(225,18,6)"/><text x="67.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1252" width="4" height="15" fill="rgb(206,77,1)"/><text x="67.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="1268" width="4" height="15" fill="rgb(209,65,52)"/><text x="67.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1284" width="4" height="15" fill="rgb(225,40,44)"/><text x="67.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bottleneck/__init__.py) (1 samples, 0.33%)</title><rect x="64" y="1300" width="4" height="15" fill="rgb(210,61,38)"/><text x="67.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1316" width="4" height="15" fill="rgb(210,21,31)"/><text x="67.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1332" width="4" height="15" fill="rgb(248,103,25)"/><text x="67.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1348" width="4" height="15" fill="rgb(231,135,47)"/><text x="67.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1364" width="4" height="15" fill="rgb(217,141,34)"/><text x="67.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1380" width="4" height="15" fill="rgb(210,187,10)"/><text x="67.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="1396" width="4" height="15" fill="rgb(205,23,54)"/><text x="67.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1412" width="4" height="15" fill="rgb(248,96,16)"/><text x="67.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bottleneck/slow/__init__.py) (1 samples, 0.33%)</title><rect x="64" y="1428" width="4" height="15" fill="rgb(253,140,28)"/><text x="67.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1444" width="4" height="15" fill="rgb(232,204,25)"/><text x="67.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1460" width="4" height="15" fill="rgb(215,158,49)"/><text x="67.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1476" width="4" height="15" fill="rgb(208,145,11)"/><text x="67.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="1492" width="4" height="15" fill="rgb(226,43,28)"/><text x="67.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="1508" width="4" height="15" fill="rgb(232,227,15)"/><text x="67.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bottleneck/slow/reduce.py) (1 samples, 0.33%)</title><rect x="64" y="1524" width="4" height="15" fill="rgb(210,161,0)"/><text x="67.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="772" width="8" height="15" fill="rgb(239,220,8)"/><text x="67.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="788" width="8" height="15" fill="rgb(215,8,43)"/><text x="67.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="804" width="8" height="15" fill="rgb(221,64,10)"/><text x="67.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="820" width="8" height="15" fill="rgb(239,34,10)"/><text x="67.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="64" y="836" width="8" height="15" fill="rgb(238,92,4)"/><text x="67.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="852" width="8" height="15" fill="rgb(248,151,49)"/><text x="67.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.66%)</title><rect x="64" y="868" width="8" height="15" fill="rgb(236,217,32)"/><text x="67.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="884" width="8" height="15" fill="rgb(221,161,39)"/><text x="67.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="900" width="8" height="15" fill="rgb(243,161,34)"/><text x="67.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="916" width="8" height="15" fill="rgb(238,25,38)"/><text x="67.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="64" y="932" width="8" height="15" fill="rgb(248,223,13)"/><text x="67.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="64" y="948" width="8" height="15" fill="rgb(223,162,16)"/><text x="67.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.33%)</title><rect x="68" y="964" width="4" height="15" fill="rgb(241,34,35)"/><text x="71.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="980" width="4" height="15" fill="rgb(233,102,49)"/><text x="71.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="996" width="4" height="15" fill="rgb(205,83,49)"/><text x="71.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1012" width="4" height="15" fill="rgb(225,113,42)"/><text x="71.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1028" width="4" height="15" fill="rgb(254,95,44)"/><text x="71.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1044" width="4" height="15" fill="rgb(228,49,33)"/><text x="71.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="1060" width="4" height="15" fill="rgb(238,11,46)"/><text x="71.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1076" width="4" height="15" fill="rgb(250,165,25)"/><text x="71.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.33%)</title><rect x="68" y="1092" width="4" height="15" fill="rgb(206,227,10)"/><text x="71.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1108" width="4" height="15" fill="rgb(219,210,1)"/><text x="71.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1124" width="4" height="15" fill="rgb(215,205,10)"/><text x="71.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1140" width="4" height="15" fill="rgb(215,130,31)"/><text x="71.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1156" width="4" height="15" fill="rgb(230,58,12)"/><text x="71.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1172" width="4" height="15" fill="rgb(211,21,0)"/><text x="71.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="1188" width="4" height="15" fill="rgb(230,201,52)"/><text x="71.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1204" width="4" height="15" fill="rgb(236,39,35)"/><text x="71.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (1 samples, 0.33%)</title><rect x="68" y="1220" width="4" height="15" fill="rgb(223,161,19)"/><text x="71.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1236" width="4" height="15" fill="rgb(213,21,53)"/><text x="71.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1252" width="4" height="15" fill="rgb(235,135,53)"/><text x="71.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1268" width="4" height="15" fill="rgb(249,123,34)"/><text x="71.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="1284" width="4" height="15" fill="rgb(215,195,4)"/><text x="71.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1300" width="4" height="15" fill="rgb(232,135,48)"/><text x="71.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (1 samples, 0.33%)</title><rect x="68" y="1316" width="4" height="15" fill="rgb(216,194,4)"/><text x="71.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1332" width="4" height="15" fill="rgb(213,176,23)"/><text x="71.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1348" width="4" height="15" fill="rgb(220,218,29)"/><text x="71.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1364" width="4" height="15" fill="rgb(240,109,25)"/><text x="71.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="1380" width="4" height="15" fill="rgb(207,5,11)"/><text x="71.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="1396" width="4" height="15" fill="rgb(229,156,49)"/><text x="71.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/core/tools/datetimes.py) (1 samples, 0.33%)</title><rect x="68" y="1412" width="4" height="15" fill="rgb(227,82,18)"/><text x="71.00" y="1422.50"></text></g><g><title>inner (typing.py) (1 samples, 0.33%)</title><rect x="68" y="1428" width="4" height="15" fill="rgb(226,140,48)"/><text x="71.00" y="1438.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.33%)</title><rect x="68" y="1444" width="4" height="15" fill="rgb(246,67,37)"/><text x="71.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="57" y="708" width="19" height="15" fill="rgb(234,125,7)"/><text x="60.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.00%)</title><rect x="64" y="724" width="12" height="15" fill="rgb(223,158,52)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="64" y="740" width="12" height="15" fill="rgb(211,76,29)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="64" y="756" width="12" height="15" fill="rgb(220,34,46)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="772" width="4" height="15" fill="rgb(219,134,43)"/><text x="75.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="788" width="4" height="15" fill="rgb(232,209,31)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="804" width="4" height="15" fill="rgb(211,43,19)"/><text x="75.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="820" width="4" height="15" fill="rgb(227,54,42)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="836" width="4" height="15" fill="rgb(227,22,14)"/><text x="75.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="852" width="4" height="15" fill="rgb(247,101,33)"/><text x="75.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="868" width="4" height="15" fill="rgb(232,13,14)"/><text x="75.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="884" width="4" height="15" fill="rgb(246,136,38)"/><text x="75.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="900" width="4" height="15" fill="rgb(237,102,12)"/><text x="75.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.33%)</title><rect x="72" y="916" width="4" height="15" fill="rgb(239,183,7)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="932" width="4" height="15" fill="rgb(212,128,4)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="948" width="4" height="15" fill="rgb(214,81,33)"/><text x="75.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="964" width="4" height="15" fill="rgb(230,28,27)"/><text x="75.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="980" width="4" height="15" fill="rgb(246,170,50)"/><text x="75.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="996" width="4" height="15" fill="rgb(246,51,23)"/><text x="75.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.33%)</title><rect x="72" y="1012" width="4" height="15" fill="rgb(249,213,39)"/><text x="75.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="1028" width="4" height="15" fill="rgb(228,33,3)"/><text x="75.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="1044" width="4" height="15" fill="rgb(247,29,8)"/><text x="75.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="1060" width="4" height="15" fill="rgb(232,149,36)"/><text x="75.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="1076" width="4" height="15" fill="rgb(233,119,16)"/><text x="75.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="1092" width="4" height="15" fill="rgb(225,92,28)"/><text x="75.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="1108" width="4" height="15" fill="rgb(206,123,6)"/><text x="75.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 2.99%)</title><rect x="45" y="244" width="35" height="15" fill="rgb(237,4,40)"/><text x="48.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="260" width="35" height="15" fill="rgb(242,191,19)"/><text x="48.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="276" width="35" height="15" fill="rgb(207,91,21)"/><text x="48.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="292" width="35" height="15" fill="rgb(205,18,50)"/><text x="48.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.99%)</title><rect x="45" y="308" width="35" height="15" fill="rgb(205,100,30)"/><text x="48.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="324" width="35" height="15" fill="rgb(205,136,49)"/><text x="48.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.99%)</title><rect x="45" y="340" width="35" height="15" fill="rgb(216,61,53)"/><text x="48.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="356" width="35" height="15" fill="rgb(226,114,47)"/><text x="48.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="372" width="35" height="15" fill="rgb(217,178,20)"/><text x="48.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="388" width="35" height="15" fill="rgb(223,111,26)"/><text x="48.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.99%)</title><rect x="45" y="404" width="35" height="15" fill="rgb(224,189,1)"/><text x="48.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="420" width="35" height="15" fill="rgb(218,131,27)"/><text x="48.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.99%)</title><rect x="45" y="436" width="35" height="15" fill="rgb(252,83,24)"/><text x="48.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="452" width="35" height="15" fill="rgb(250,136,11)"/><text x="48.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="45" y="468" width="35" height="15" fill="rgb(229,225,4)"/><text x="48.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="484" width="23" height="15" fill="rgb(225,41,39)"/><text x="60.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.99%)</title><rect x="57" y="500" width="23" height="15" fill="rgb(226,201,9)"/><text x="60.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="516" width="23" height="15" fill="rgb(248,207,51)"/><text x="60.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 1.99%)</title><rect x="57" y="532" width="23" height="15" fill="rgb(248,206,15)"/><text x="60.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="548" width="23" height="15" fill="rgb(226,145,17)"/><text x="60.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="564" width="23" height="15" fill="rgb(221,30,21)"/><text x="60.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="580" width="23" height="15" fill="rgb(221,202,16)"/><text x="60.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.99%)</title><rect x="57" y="596" width="23" height="15" fill="rgb(230,217,29)"/><text x="60.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="612" width="23" height="15" fill="rgb(253,36,28)"/><text x="60.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 1.99%)</title><rect x="57" y="628" width="23" height="15" fill="rgb(227,181,30)"/><text x="60.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="644" width="23" height="15" fill="rgb(225,30,21)"/><text x="60.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="660" width="23" height="15" fill="rgb(254,21,9)"/><text x="60.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.99%)</title><rect x="57" y="676" width="23" height="15" fill="rgb(208,168,32)"/><text x="60.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.99%)</title><rect x="57" y="692" width="23" height="15" fill="rgb(209,60,41)"/><text x="60.00" y="702.50">e..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="708" width="4" height="15" fill="rgb(245,70,40)"/><text x="79.00" y="718.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="724" width="4" height="15" fill="rgb(212,218,49)"/><text x="79.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="68" width="74" height="15" fill="rgb(211,80,17)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="84" width="74" height="15" fill="rgb(252,204,23)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="100" width="74" height="15" fill="rgb(214,76,38)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 6.31%)</title><rect x="10" y="116" width="74" height="15" fill="rgb(221,69,23)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="132" width="74" height="15" fill="rgb(208,128,36)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py) (19 samples, 6.31%)</title><rect x="10" y="148" width="74" height="15" fill="rgb(218,205,13)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="164" width="74" height="15" fill="rgb(244,8,34)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.31%)</title><rect x="10" y="180" width="74" height="15" fill="rgb(245,116,47)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.32%)</title><rect x="45" y="196" width="39" height="15" fill="rgb(225,226,10)"/><text x="48.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.32%)</title><rect x="45" y="212" width="39" height="15" fill="rgb(217,189,28)"/><text x="48.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.32%)</title><rect x="45" y="228" width="39" height="15" fill="rgb(244,181,5)"/><text x="48.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (1 samples, 0.33%)</title><rect x="80" y="244" width="4" height="15" fill="rgb(240,15,41)"/><text x="83.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="260" width="4" height="15" fill="rgb(210,197,51)"/><text x="83.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="276" width="4" height="15" fill="rgb(219,44,53)"/><text x="83.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="292" width="4" height="15" fill="rgb(249,181,3)"/><text x="83.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="80" y="308" width="4" height="15" fill="rgb(250,216,27)"/><text x="83.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="324" width="4" height="15" fill="rgb(208,48,5)"/><text x="83.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (1 samples, 0.33%)</title><rect x="80" y="340" width="4" height="15" fill="rgb(249,180,21)"/><text x="83.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="356" width="4" height="15" fill="rgb(241,97,43)"/><text x="83.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="372" width="4" height="15" fill="rgb(219,8,48)"/><text x="83.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="388" width="4" height="15" fill="rgb(244,209,38)"/><text x="83.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="404" width="4" height="15" fill="rgb(213,195,36)"/><text x="83.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="420" width="4" height="15" fill="rgb(216,23,44)"/><text x="83.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="436" width="4" height="15" fill="rgb(210,7,30)"/><text x="83.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="80" y="452" width="4" height="15" fill="rgb(229,69,16)"/><text x="83.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="468" width="4" height="15" fill="rgb(246,196,24)"/><text x="83.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.33%)</title><rect x="80" y="484" width="4" height="15" fill="rgb(251,93,10)"/><text x="83.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="500" width="4" height="15" fill="rgb(249,165,46)"/><text x="83.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="516" width="4" height="15" fill="rgb(210,203,35)"/><text x="83.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="532" width="4" height="15" fill="rgb(205,9,2)"/><text x="83.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="80" y="548" width="4" height="15" fill="rgb(206,56,9)"/><text x="83.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="564" width="4" height="15" fill="rgb(252,79,1)"/><text x="83.00" y="574.50"></text></g><g><title>0x7f6080990a5b (?) (1 samples, 0.33%)</title><rect x="80" y="580" width="4" height="15" fill="rgb(242,46,18)"/><text x="83.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="596" width="4" height="15" fill="rgb(222,27,23)"/><text x="83.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="612" width="4" height="15" fill="rgb(226,143,41)"/><text x="83.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="628" width="4" height="15" fill="rgb(240,182,26)"/><text x="83.00" y="638.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="644" width="4" height="15" fill="rgb(247,131,5)"/><text x="83.00" y="654.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="84" y="132" width="4" height="15" fill="rgb(212,88,2)"/><text x="87.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.66%)</title><rect x="84" y="116" width="8" height="15" fill="rgb(229,169,17)"/><text x="87.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="88" y="132" width="4" height="15" fill="rgb(253,188,3)"/><text x="91.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="88" y="148" width="4" height="15" fill="rgb(243,92,23)"/><text x="91.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.66%)</title><rect x="127" y="180" width="8" height="15" fill="rgb(216,201,46)"/><text x="130.00" y="190.50"></text></g><g><title>0x7f6067de5ff9 (?) (1 samples, 0.33%)</title><rect x="151" y="212" width="4" height="15" fill="rgb(217,62,10)"/><text x="154.00" y="222.50"></text></g><g><title>0x7f6067de0ef6 (?) (1 samples, 0.33%)</title><rect x="151" y="228" width="4" height="15" fill="rgb(242,59,52)"/><text x="154.00" y="238.50"></text></g><g><title>0x7f6067dd5962 (?) (1 samples, 0.33%)</title><rect x="151" y="244" width="4" height="15" fill="rgb(218,60,19)"/><text x="154.00" y="254.50"></text></g><g><title>0x7f6067e09613 (?) (1 samples, 0.33%)</title><rect x="151" y="260" width="4" height="15" fill="rgb(225,171,49)"/><text x="154.00" y="270.50"></text></g><g><title>0x7f6067e037f4 (?) (1 samples, 0.33%)</title><rect x="151" y="276" width="4" height="15" fill="rgb(225,89,11)"/><text x="154.00" y="286.50"></text></g><g><title>0x7ffeeb850880 (?) (1 samples, 0.33%)</title><rect x="155" y="212" width="3" height="15" fill="rgb(211,219,44)"/><text x="158.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.33%)</title><rect x="155" y="228" width="3" height="15" fill="rgb(248,149,18)"/><text x="158.00" y="238.50"></text></g><g><title>0x7ffeeb962a5e ([vdso]) (1 samples, 0.33%)</title><rect x="155" y="244" width="3" height="15" fill="rgb(219,4,20)"/><text x="158.00" y="254.50"></text></g><g><title>0x7ffeeb962a01 ([vdso]) (1 samples, 0.33%)</title><rect x="158" y="212" width="4" height="15" fill="rgb(245,126,47)"/><text x="161.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.33%)</title><rect x="162" y="212" width="16" height="15" fill="rgb(243,228,13)"/><text x="165.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="170" y="228" width="8" height="15" fill="rgb(250,200,48)"/><text x="173.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="174" y="244" width="4" height="15" fill="rgb(235,41,3)"/><text x="177.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="174" y="260" width="4" height="15" fill="rgb(246,41,20)"/><text x="177.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="178" y="292" width="4" height="15" fill="rgb(205,183,4)"/><text x="181.00" y="302.50"></text></g><g><title>0x7f60a7d75d07 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="178" y="308" width="4" height="15" fill="rgb(217,55,23)"/><text x="181.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="182" y="292" width="4" height="15" fill="rgb(253,89,44)"/><text x="185.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="182" y="308" width="4" height="15" fill="rgb(249,109,39)"/><text x="185.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="182" y="324" width="4" height="15" fill="rgb(223,99,31)"/><text x="185.00" y="334.50"></text></g><g><title>0x7f60a7d7700a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="182" y="340" width="4" height="15" fill="rgb(208,30,24)"/><text x="185.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="186" y="292" width="4" height="15" fill="rgb(235,200,19)"/><text x="189.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="186" y="308" width="4" height="15" fill="rgb(253,37,13)"/><text x="189.00" y="318.50"></text></g><g><title>0x7f60a7d75957 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="186" y="324" width="4" height="15" fill="rgb(250,67,41)"/><text x="189.00" y="334.50"></text></g><g><title>0x7f60a7d75d07 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="194" y="324" width="4" height="15" fill="rgb(205,163,7)"/><text x="197.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="202" y="340" width="4" height="15" fill="rgb(224,141,0)"/><text x="205.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="213" y="356" width="4" height="15" fill="rgb(239,186,39)"/><text x="216.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="213" y="372" width="4" height="15" fill="rgb(229,131,9)"/><text x="216.00" y="382.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="217" y="356" width="8" height="15" fill="rgb(211,186,42)"/><text x="220.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="221" y="372" width="4" height="15" fill="rgb(206,206,14)"/><text x="224.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="225" y="356" width="4" height="15" fill="rgb(252,224,52)"/><text x="228.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="225" y="372" width="4" height="15" fill="rgb(245,116,36)"/><text x="228.00" y="382.50"></text></g><g><title>0x7f60a7d76c48 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="225" y="388" width="4" height="15" fill="rgb(208,58,41)"/><text x="228.00" y="398.50"></text></g><g><title>0x7f60a7edfb32 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="229" y="372" width="4" height="15" fill="rgb(242,29,36)"/><text x="232.00" y="382.50"></text></g><g><title>0x7f60a7edfc10 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="233" y="372" width="4" height="15" fill="rgb(245,85,13)"/><text x="236.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.99%)</title><rect x="206" y="340" width="35" height="15" fill="rgb(234,86,41)"/><text x="209.00" y="350.50">on..</text></g><g><title>powf32x (libm-2.29.so) (3 samples, 1.00%)</title><rect x="229" y="356" width="12" height="15" fill="rgb(233,158,45)"/><text x="232.00" y="366.50"></text></g><g><title>0x7f60a7edfdb6 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="237" y="372" width="4" height="15" fill="rgb(208,182,36)"/><text x="240.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.65%)</title><rect x="178" y="276" width="67" height="15" fill="rgb(232,149,21)"/><text x="181.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.65%)</title><rect x="190" y="292" width="55" height="15" fill="rgb(250,199,4)"/><text x="193.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.65%)</title><rect x="190" y="308" width="55" height="15" fill="rgb(243,65,20)"/><text x="193.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.99%)</title><rect x="198" y="324" width="47" height="15" fill="rgb(224,50,3)"/><text x="201.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="241" y="340" width="4" height="15" fill="rgb(249,220,53)"/><text x="244.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="241" y="356" width="4" height="15" fill="rgb(237,109,13)"/><text x="244.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="241" y="372" width="4" height="15" fill="rgb(243,17,18)"/><text x="244.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.98%)</title><rect x="178" y="260" width="71" height="15" fill="rgb(226,114,53)"/><text x="181.00" y="270.50">onnxrunt..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="245" y="276" width="4" height="15" fill="rgb(223,191,29)"/><text x="248.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="245" y="292" width="4" height="15" fill="rgb(235,151,42)"/><text x="248.00" y="302.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="249" y="260" width="4" height="15" fill="rgb(224,145,6)"/><text x="252.00" y="270.50"></text></g><g><title>onnxruntime::CPUAllocator::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="256" y="292" width="4" height="15" fill="rgb(215,143,2)"/><text x="259.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="256" y="276" width="8" height="15" fill="rgb(219,91,52)"/><text x="259.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="260" y="292" width="4" height="15" fill="rgb(252,18,42)"/><text x="263.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="260" y="308" width="4" height="15" fill="rgb(243,32,25)"/><text x="263.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="260" y="324" width="4" height="15" fill="rgb(245,214,38)"/><text x="263.00" y="334.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="264" y="276" width="4" height="15" fill="rgb(252,35,2)"/><text x="267.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.66%)</title><rect x="253" y="260" width="19" height="15" fill="rgb(240,51,24)"/><text x="256.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="268" y="276" width="4" height="15" fill="rgb(216,130,11)"/><text x="271.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="272" y="260" width="4" height="15" fill="rgb(252,152,40)"/><text x="275.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.33%)</title><rect x="272" y="276" width="4" height="15" fill="rgb(248,103,28)"/><text x="275.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="272" y="292" width="4" height="15" fill="rgb(230,27,18)"/><text x="275.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="272" y="308" width="4" height="15" fill="rgb(245,86,50)"/><text x="275.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="272" y="324" width="4" height="15" fill="rgb(253,110,51)"/><text x="275.00" y="334.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="276" y="260" width="4" height="15" fill="rgb(254,24,17)"/><text x="279.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="276" y="276" width="4" height="15" fill="rgb(239,37,18)"/><text x="279.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="280" y="260" width="4" height="15" fill="rgb(253,193,49)"/><text x="283.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 9.97%)</title><rect x="178" y="244" width="118" height="15" fill="rgb(212,179,21)"/><text x="181.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="260" width="12" height="15" fill="rgb(210,14,49)"/><text x="287.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="276" width="12" height="15" fill="rgb(220,224,17)"/><text x="287.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="292" width="12" height="15" fill="rgb(209,122,50)"/><text x="287.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="308" width="12" height="15" fill="rgb(227,149,30)"/><text x="287.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="324" width="12" height="15" fill="rgb(249,229,16)"/><text x="287.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="340" width="12" height="15" fill="rgb(218,146,30)"/><text x="287.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="356" width="12" height="15" fill="rgb(211,209,39)"/><text x="287.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="284" y="372" width="12" height="15" fill="rgb(212,206,5)"/><text x="287.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="292" y="388" width="4" height="15" fill="rgb(245,158,32)"/><text x="295.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 17.61%)</title><rect x="100" y="132" width="207" height="15" fill="rgb(206,190,38)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (50 samples, 16.61%)</title><rect x="111" y="148" width="196" height="15" fill="rgb(248,224,7)"/><text x="114.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (49 samples, 16.28%)</title><rect x="115" y="164" width="192" height="15" fill="rgb(209,196,18)"/><text x="118.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (44 samples, 14.62%)</title><rect x="135" y="180" width="172" height="15" fill="rgb(242,14,35)"/><text x="138.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (42 samples, 13.95%)</title><rect x="143" y="196" width="164" height="15" fill="rgb(221,197,9)"/><text x="146.00" y="206.50">run (onnxruntime/capi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 10.96%)</title><rect x="178" y="212" width="129" height="15" fill="rgb(225,196,9)"/><text x="181.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 10.96%)</title><rect x="178" y="228" width="129" height="15" fill="rgb(219,53,3)"/><text x="181.00" y="238.50">void pybind11::c..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="296" y="244" width="11" height="15" fill="rgb(243,224,2)"/><text x="299.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="300" y="260" width="7" height="15" fill="rgb(212,36,20)"/><text x="303.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="304" y="276" width="3" height="15" fill="rgb(207,75,32)"/><text x="307.00" y="286.50"></text></g><g><title>profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (58 samples, 19.27%)</title><rect x="84" y="68" width="227" height="15" fill="rgb(206,79,34)"/><text x="87.00" y="78.50">profile_ort (bench_SVC_poly_m_..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (58 samples, 19.27%)</title><rect x="84" y="84" width="227" height="15" fill="rgb(227,180,28)"/><text x="87.00" y="94.50">setup_profile (bench_SVC_poly_..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (58 samples, 19.27%)</title><rect x="84" y="100" width="227" height="15" fill="rgb(209,224,24)"/><text x="87.00" y="110.50">profile (bench_SVC_poly_m_cl_p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (56 samples, 18.60%)</title><rect x="92" y="116" width="219" height="15" fill="rgb(229,157,52)"/><text x="95.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="307" y="132" width="4" height="15" fill="rgb(227,177,42)"/><text x="310.00" y="142.50"></text></g><g><title>0x7f60a7e53151 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="307" y="148" width="4" height="15" fill="rgb(215,75,16)"/><text x="310.00" y="158.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="398" y="196" width="4" height="15" fill="rgb(234,14,40)"/><text x="401.00" y="206.50"></text></g><g><title>0x7f60a7d9614e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="425" y="212" width="4" height="15" fill="rgb(231,110,44)"/><text x="428.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 1.00%)</title><rect x="429" y="212" width="12" height="15" fill="rgb(248,20,24)"/><text x="432.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.66%)</title><rect x="433" y="228" width="8" height="15" fill="rgb(214,104,5)"/><text x="436.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.66%)</title><rect x="433" y="244" width="8" height="15" fill="rgb(240,186,36)"/><text x="436.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.33%)</title><rect x="437" y="260" width="4" height="15" fill="rgb(206,194,22)"/><text x="440.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (4 samples, 1.33%)</title><rect x="441" y="212" width="15" height="15" fill="rgb(242,212,41)"/><text x="444.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.33%)</title><rect x="456" y="212" width="4" height="15" fill="rgb(210,13,17)"/><text x="459.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="456" y="228" width="4" height="15" fill="rgb(223,143,52)"/><text x="459.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.33%)</title><rect x="456" y="244" width="4" height="15" fill="rgb(210,28,35)"/><text x="459.00" y="254.50"></text></g><g><title>0x7f6068ee4c29 (?) (1 samples, 0.33%)</title><rect x="472" y="244" width="4" height="15" fill="rgb(225,67,28)"/><text x="475.00" y="254.50"></text></g><g><title>0x7f6068eebd9e (?) (1 samples, 0.33%)</title><rect x="472" y="260" width="4" height="15" fill="rgb(218,148,16)"/><text x="475.00" y="270.50"></text></g><g><title>0x7f6068eebc04 (?) (1 samples, 0.33%)</title><rect x="472" y="276" width="4" height="15" fill="rgb(234,48,21)"/><text x="475.00" y="286.50"></text></g><g><title>0x7f6068eeba17 (?) (1 samples, 0.33%)</title><rect x="472" y="292" width="4" height="15" fill="rgb(222,128,32)"/><text x="475.00" y="302.50"></text></g><g><title>PyArray_FromAny (ndarraytypes.h) (1 samples, 0.33%)</title><rect x="472" y="308" width="4" height="15" fill="rgb(226,149,1)"/><text x="475.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="476" y="244" width="4" height="15" fill="rgb(222,82,9)"/><text x="479.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="480" y="260" width="4" height="15" fill="rgb(244,199,9)"/><text x="483.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.66%)</title><rect x="480" y="244" width="8" height="15" fill="rgb(248,77,41)"/><text x="483.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.33%)</title><rect x="484" y="260" width="4" height="15" fill="rgb(221,58,44)"/><text x="487.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.33%)</title><rect x="484" y="276" width="4" height="15" fill="rgb(241,204,42)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="484" y="292" width="4" height="15" fill="rgb(238,212,41)"/><text x="487.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.33%)</title><rect x="484" y="308" width="4" height="15" fill="rgb(210,137,22)"/><text x="487.00" y="318.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.33%)</title><rect x="488" y="292" width="4" height="15" fill="rgb(228,138,46)"/><text x="491.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.33%)</title><rect x="488" y="308" width="4" height="15" fill="rgb(241,193,22)"/><text x="491.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.33%)</title><rect x="488" y="324" width="4" height="15" fill="rgb(209,144,15)"/><text x="491.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.33%)</title><rect x="488" y="340" width="4" height="15" fill="rgb(207,11,41)"/><text x="491.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h) (1 samples, 0.33%)</title><rect x="488" y="356" width="4" height="15" fill="rgb(216,90,14)"/><text x="491.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.33%)</title><rect x="488" y="372" width="4" height="15" fill="rgb(222,44,19)"/><text x="491.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.33%)</title><rect x="488" y="388" width="4" height="15" fill="rgb(209,226,48)"/><text x="491.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.33%)</title><rect x="488" y="404" width="4" height="15" fill="rgb(215,201,53)"/><text x="491.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.33%)</title><rect x="488" y="420" width="4" height="15" fill="rgb(215,226,45)"/><text x="491.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.33%)</title><rect x="488" y="436" width="4" height="15" fill="rgb(247,91,41)"/><text x="491.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.33%)</title><rect x="488" y="452" width="4" height="15" fill="rgb(236,229,12)"/><text x="491.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.33%)</title><rect x="488" y="468" width="4" height="15" fill="rgb(246,214,16)"/><text x="491.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.33%)</title><rect x="488" y="484" width="4" height="15" fill="rgb(229,175,52)"/><text x="491.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="488" y="500" width="4" height="15" fill="rgb(219,66,28)"/><text x="491.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="488" y="516" width="4" height="15" fill="rgb(223,3,14)"/><text x="491.00" y="526.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="488" y="532" width="4" height="15" fill="rgb(242,89,28)"/><text x="491.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="488" y="548" width="4" height="15" fill="rgb(226,147,34)"/><text x="491.00" y="558.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.33%)</title><rect x="492" y="436" width="4" height="15" fill="rgb(207,92,5)"/><text x="495.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.33%)</title><rect x="492" y="452" width="4" height="15" fill="rgb(239,96,4)"/><text x="495.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.33%)</title><rect x="492" y="468" width="4" height="15" fill="rgb(251,44,2)"/><text x="495.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.33%)</title><rect x="492" y="484" width="4" height="15" fill="rgb(234,124,13)"/><text x="495.00" y="494.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.33%)</title><rect x="492" y="500" width="4" height="15" fill="rgb(218,197,22)"/><text x="495.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.33%)</title><rect x="492" y="516" width="4" height="15" fill="rgb(240,189,5)"/><text x="495.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::~_Vector_base (stl_vector.h) (1 samples, 0.33%)</title><rect x="492" y="532" width="4" height="15" fill="rgb(251,102,23)"/><text x="495.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.33%)</title><rect x="492" y="548" width="4" height="15" fill="rgb(216,216,26)"/><text x="495.00" y="558.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::deallocate (alloc_traits.h) (1 samples, 0.33%)</title><rect x="492" y="564" width="4" height="15" fill="rgb(225,68,2)"/><text x="495.00" y="574.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::deallocate (new_allocator.h) (1 samples, 0.33%)</title><rect x="492" y="580" width="4" height="15" fill="rgb(220,69,29)"/><text x="495.00" y="590.50"></text></g><g><title>0x7f6068ed4440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="500" y="468" width="3" height="15" fill="rgb(252,133,52)"/><text x="503.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.66%)</title><rect x="503" y="468" width="8" height="15" fill="rgb(254,165,22)"/><text x="506.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (1 samples, 0.33%)</title><rect x="507" y="484" width="4" height="15" fill="rgb(224,50,10)"/><text x="510.00" y="494.50"></text></g><g><title>0x7f60a7d75998 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="511" y="516" width="4" height="15" fill="rgb(243,67,15)"/><text x="514.00" y="526.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (7 samples, 2.33%)</title><rect x="492" y="292" width="27" height="15" fill="rgb(211,138,34)"/><text x="495.00" y="302.50">p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (7 samples, 2.33%)</title><rect x="492" y="308" width="27" height="15" fill="rgb(210,158,25)"/><text x="495.00" y="318.50">p..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (7 samples, 2.33%)</title><rect x="492" y="324" width="27" height="15" fill="rgb(248,45,15)"/><text x="495.00" y="334.50">p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (7 samples, 2.33%)</title><rect x="492" y="340" width="27" height="15" fill="rgb(209,165,38)"/><text x="495.00" y="350.50">p..</text></g><g><title>pybind11::array::~array (numpy.h) (7 samples, 2.33%)</title><rect x="492" y="356" width="27" height="15" fill="rgb(254,37,20)"/><text x="495.00" y="366.50">p..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (7 samples, 2.33%)</title><rect x="492" y="372" width="27" height="15" fill="rgb(222,148,43)"/><text x="495.00" y="382.50">p..</text></g><g><title>pybind11::object::~object (pytypes.h) (7 samples, 2.33%)</title><rect x="492" y="388" width="27" height="15" fill="rgb(238,179,24)"/><text x="495.00" y="398.50">p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (7 samples, 2.33%)</title><rect x="492" y="404" width="27" height="15" fill="rgb(216,134,45)"/><text x="495.00" y="414.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (7 samples, 2.33%)</title><rect x="492" y="420" width="27" height="15" fill="rgb(211,18,43)"/><text x="495.00" y="430.50">R..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (6 samples, 1.99%)</title><rect x="496" y="436" width="23" height="15" fill="rgb(216,162,10)"/><text x="499.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (6 samples, 1.99%)</title><rect x="496" y="452" width="23" height="15" fill="rgb(238,94,38)"/><text x="499.00" y="462.50">R..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.66%)</title><rect x="511" y="468" width="8" height="15" fill="rgb(207,179,12)"/><text x="514.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.66%)</title><rect x="511" y="484" width="8" height="15" fill="rgb(219,76,5)"/><text x="514.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (2 samples, 0.66%)</title><rect x="511" y="500" width="8" height="15" fill="rgb(249,83,46)"/><text x="514.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.33%)</title><rect x="515" y="516" width="4" height="15" fill="rgb(252,100,45)"/><text x="518.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.33%)</title><rect x="515" y="532" width="4" height="15" fill="rgb(246,19,26)"/><text x="518.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.33%)</title><rect x="515" y="548" width="4" height="15" fill="rgb(236,15,42)"/><text x="518.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="515" y="564" width="4" height="15" fill="rgb(219,28,10)"/><text x="518.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="515" y="580" width="4" height="15" fill="rgb(254,14,24)"/><text x="518.00" y="590.50"></text></g><g><title>0x7f60a7d7700a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="515" y="596" width="4" height="15" fill="rgb(241,207,39)"/><text x="518.00" y="606.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.33%)</title><rect x="519" y="324" width="4" height="15" fill="rgb(207,158,46)"/><text x="522.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.33%)</title><rect x="519" y="340" width="4" height="15" fill="rgb(220,164,17)"/><text x="522.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="519" y="356" width="4" height="15" fill="rgb(232,172,41)"/><text x="522.00" y="366.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.33%)</title><rect x="519" y="372" width="4" height="15" fill="rgb(229,155,19)"/><text x="522.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="519" y="388" width="4" height="15" fill="rgb(214,116,14)"/><text x="522.00" y="398.50"></text></g><g><title>pybind11::detail::get_global_type_info (cast.h) (1 samples, 0.33%)</title><rect x="523" y="372" width="4" height="15" fill="rgb(243,146,23)"/><text x="526.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (1 samples, 0.33%)</title><rect x="523" y="388" width="4" height="15" fill="rgb(240,72,6)"/><text x="526.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (1 samples, 0.33%)</title><rect x="523" y="404" width="4" height="15" fill="rgb(235,110,39)"/><text x="526.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.33%)</title><rect x="523" y="420" width="4" height="15" fill="rgb(215,212,6)"/><text x="526.00" y="430.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.33%)</title><rect x="523" y="436" width="4" height="15" fill="rgb(219,218,38)"/><text x="526.00" y="446.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.33%)</title><rect x="523" y="452" width="4" height="15" fill="rgb(206,169,1)"/><text x="526.00" y="462.50"></text></g><g><title>profile_pyrt (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (56 samples, 18.60%)</title><rect x="311" y="68" width="220" height="15" fill="rgb(254,129,27)"/><text x="314.00" y="78.50">profile_pyrt (bench_SVC_poly_..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (56 samples, 18.60%)</title><rect x="311" y="84" width="220" height="15" fill="rgb(249,19,49)"/><text x="314.00" y="94.50">setup_profile (bench_SVC_poly..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (56 samples, 18.60%)</title><rect x="311" y="100" width="220" height="15" fill="rgb(221,1,10)"/><text x="314.00" y="110.50">profile (bench_SVC_poly_m_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (54 samples, 17.94%)</title><rect x="319" y="116" width="212" height="15" fill="rgb(254,223,25)"/><text x="322.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 17.61%)</title><rect x="323" y="132" width="208" height="15" fill="rgb(248,18,53)"/><text x="326.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (53 samples, 17.61%)</title><rect x="323" y="148" width="208" height="15" fill="rgb(224,97,45)"/><text x="326.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (49 samples, 16.28%)</title><rect x="339" y="164" width="192" height="15" fill="rgb(239,192,49)"/><text x="342.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (46 samples, 15.28%)</title><rect x="351" y="180" width="180" height="15" fill="rgb(210,44,31)"/><text x="354.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (33 samples, 10.96%)</title><rect x="402" y="196" width="129" height="15" fill="rgb(238,72,3)"/><text x="405.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (18 samples, 5.98%)</title><rect x="460" y="212" width="71" height="15" fill="rgb(239,173,23)"/><text x="463.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (18 samples, 5.98%)</title><rect x="460" y="228" width="71" height="15" fill="rgb(240,153,38)"/><text x="463.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (11 samples, 3.65%)</title><rect x="488" y="244" width="43" height="15" fill="rgb(223,64,31)"/><text x="491.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (11 samples, 3.65%)</title><rect x="488" y="260" width="43" height="15" fill="rgb(228,148,39)"/><text x="491.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (11 samples, 3.65%)</title><rect x="488" y="276" width="43" height="15" fill="rgb(233,36,23)"/><text x="491.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (3 samples, 1.00%)</title><rect x="519" y="292" width="12" height="15" fill="rgb(216,43,35)"/><text x="522.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (3 samples, 1.00%)</title><rect x="519" y="308" width="12" height="15" fill="rgb(239,105,19)"/><text x="522.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h) (2 samples, 0.66%)</title><rect x="523" y="324" width="8" height="15" fill="rgb(206,0,6)"/><text x="526.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h) (2 samples, 0.66%)</title><rect x="523" y="340" width="8" height="15" fill="rgb(228,171,45)"/><text x="526.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h) (2 samples, 0.66%)</title><rect x="523" y="356" width="8" height="15" fill="rgb(241,40,29)"/><text x="526.00" y="366.50"></text></g><g><title>pybind11::detail::get_local_type_info (cast.h) (1 samples, 0.33%)</title><rect x="527" y="372" width="4" height="15" fill="rgb(210,225,33)"/><text x="530.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (1 samples, 0.33%)</title><rect x="527" y="388" width="4" height="15" fill="rgb(248,58,0)"/><text x="530.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (1 samples, 0.33%)</title><rect x="527" y="404" width="4" height="15" fill="rgb(219,144,46)"/><text x="530.00" y="414.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (hashtable_policy.h) (1 samples, 0.33%)</title><rect x="527" y="420" width="4" height="15" fill="rgb(242,214,46)"/><text x="530.00" y="430.50"></text></g><g><title>std::hash&lt;std::type_index&gt;::operator() (typeindex) (1 samples, 0.33%)</title><rect x="527" y="436" width="4" height="15" fill="rgb(225,177,54)"/><text x="530.00" y="446.50"></text></g><g><title>std::type_index::hash_code (typeindex) (1 samples, 0.33%)</title><rect x="527" y="452" width="4" height="15" fill="rgb(206,7,52)"/><text x="530.00" y="462.50"></text></g><g><title>std::type_info::hash_code (typeinfo) (1 samples, 0.33%)</title><rect x="527" y="468" width="4" height="15" fill="rgb(215,68,37)"/><text x="530.00" y="478.50"></text></g><g><title>0x7f60a7d8be54 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="527" y="484" width="4" height="15" fill="rgb(250,194,37)"/><text x="530.00" y="494.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="586" y="212" width="12" height="15" fill="rgb(241,15,15)"/><text x="589.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.00%)</title><rect x="586" y="228" width="12" height="15" fill="rgb(237,196,9)"/><text x="589.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.00%)</title><rect x="586" y="244" width="12" height="15" fill="rgb(239,112,4)"/><text x="589.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="594" y="260" width="4" height="15" fill="rgb(224,196,32)"/><text x="597.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="594" y="276" width="4" height="15" fill="rgb(210,218,13)"/><text x="597.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.33%)</title><rect x="594" y="292" width="4" height="15" fill="rgb(208,141,15)"/><text x="597.00" y="302.50"></text></g><g><title>0x7f6082863d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.33%)</title><rect x="586" y="196" width="15" height="15" fill="rgb(217,226,13)"/><text x="589.00" y="206.50"></text></g><g><title>0x7f608284df13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="598" y="212" width="3" height="15" fill="rgb(249,226,44)"/><text x="601.00" y="222.50"></text></g><g><title>0x7f608284d052 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(205,27,52)"/><text x="601.00" y="238.50"></text></g><g><title>0x7f608284d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="601" y="212" width="8" height="15" fill="rgb(242,42,26)"/><text x="604.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.66%)</title><rect x="601" y="228" width="8" height="15" fill="rgb(247,39,44)"/><text x="604.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.66%)</title><rect x="601" y="244" width="8" height="15" fill="rgb(227,18,7)"/><text x="604.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="605" y="260" width="4" height="15" fill="rgb(219,23,29)"/><text x="608.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="605" y="276" width="4" height="15" fill="rgb(235,93,28)"/><text x="608.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.33%)</title><rect x="605" y="292" width="4" height="15" fill="rgb(206,191,53)"/><text x="608.00" y="302.50"></text></g><g><title>0x7f6082863d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="601" y="196" width="12" height="15" fill="rgb(231,208,24)"/><text x="604.00" y="206.50"></text></g><g><title>0x7f608284d5f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="609" y="212" width="4" height="15" fill="rgb(213,121,8)"/><text x="612.00" y="222.50"></text></g><g><title>0x7f6082863d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="613" y="196" width="4" height="15" fill="rgb(250,192,37)"/><text x="616.00" y="206.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="613" y="212" width="4" height="15" fill="rgb(242,13,32)"/><text x="616.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="613" y="228" width="4" height="15" fill="rgb(253,159,38)"/><text x="616.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="613" y="244" width="4" height="15" fill="rgb(254,196,19)"/><text x="616.00" y="254.50"></text></g><g><title>0x7f6082863de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="617" y="196" width="4" height="15" fill="rgb(210,55,36)"/><text x="620.00" y="206.50"></text></g><g><title>0x7f608284d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="617" y="212" width="4" height="15" fill="rgb(212,152,10)"/><text x="620.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="617" y="228" width="4" height="15" fill="rgb(226,111,54)"/><text x="620.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="617" y="244" width="4" height="15" fill="rgb(232,168,9)"/><text x="620.00" y="254.50"></text></g><g><title>0x7f6082863e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="621" y="196" width="4" height="15" fill="rgb(229,62,43)"/><text x="624.00" y="206.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="621" y="212" width="4" height="15" fill="rgb(252,44,29)"/><text x="624.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="621" y="228" width="4" height="15" fill="rgb(248,38,35)"/><text x="624.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="621" y="244" width="4" height="15" fill="rgb(222,94,16)"/><text x="624.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="621" y="260" width="4" height="15" fill="rgb(218,40,49)"/><text x="624.00" y="270.50"></text></g><g><title>0x7f6082863eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="625" y="196" width="8" height="15" fill="rgb(247,20,39)"/><text x="628.00" y="206.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="625" y="212" width="8" height="15" fill="rgb(247,22,49)"/><text x="628.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.66%)</title><rect x="625" y="228" width="8" height="15" fill="rgb(223,0,34)"/><text x="628.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="629" y="244" width="4" height="15" fill="rgb(241,162,44)"/><text x="632.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="629" y="260" width="4" height="15" fill="rgb(241,144,14)"/><text x="632.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="629" y="276" width="4" height="15" fill="rgb(218,97,42)"/><text x="632.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.33%)</title><rect x="629" y="292" width="4" height="15" fill="rgb(218,171,20)"/><text x="632.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.33%)</title><rect x="633" y="260" width="4" height="15" fill="rgb(231,53,48)"/><text x="636.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="633" y="276" width="4" height="15" fill="rgb(254,203,53)"/><text x="636.00" y="286.50"></text></g><g><title>0x7f6082863f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="633" y="196" width="8" height="15" fill="rgb(249,5,0)"/><text x="636.00" y="206.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="633" y="212" width="8" height="15" fill="rgb(231,160,25)"/><text x="636.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.66%)</title><rect x="633" y="228" width="8" height="15" fill="rgb(221,162,33)"/><text x="636.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.66%)</title><rect x="633" y="244" width="8" height="15" fill="rgb(230,206,48)"/><text x="636.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="637" y="260" width="4" height="15" fill="rgb(238,51,28)"/><text x="640.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.33%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(254,107,9)"/><text x="640.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.33%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(239,156,29)"/><text x="640.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="637" y="308" width="4" height="15" fill="rgb(241,94,16)"/><text x="640.00" y="318.50"></text></g><g><title>0x7f60a6f977c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="645" y="244" width="4" height="15" fill="rgb(234,222,4)"/><text x="648.00" y="254.50"></text></g><g><title>0x7f608286412f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.99%)</title><rect x="641" y="196" width="23" height="15" fill="rgb(215,178,45)"/><text x="644.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c) (6 samples, 1.99%)</title><rect x="641" y="212" width="23" height="15" fill="rgb(247,126,8)"/><text x="644.00" y="222.50">a..</text></g><g><title>PyArray_ArangeObj (ctors.c) (5 samples, 1.66%)</title><rect x="645" y="228" width="19" height="15" fill="rgb(209,69,18)"/><text x="648.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (4 samples, 1.33%)</title><rect x="649" y="244" width="15" height="15" fill="rgb(214,0,41)"/><text x="652.00" y="254.50"></text></g><g><title>0x7f60a6f98350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="660" y="260" width="4" height="15" fill="rgb(205,42,53)"/><text x="663.00" y="270.50"></text></g><g><title>0x7f6082864237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="664" y="196" width="8" height="15" fill="rgb(219,159,31)"/><text x="667.00" y="206.50"></text></g><g><title>0x7f608284e7c1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="664" y="212" width="8" height="15" fill="rgb(214,65,47)"/><text x="667.00" y="222.50"></text></g><g><title>0x7f60828643f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="672" y="196" width="8" height="15" fill="rgb(221,115,27)"/><text x="675.00" y="206.50"></text></g><g><title>0x7f6082864528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="680" y="196" width="8" height="15" fill="rgb(226,104,21)"/><text x="683.00" y="206.50"></text></g><g><title>0x7f608284de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="680" y="212" width="8" height="15" fill="rgb(231,31,35)"/><text x="683.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.66%)</title><rect x="680" y="228" width="8" height="15" fill="rgb(215,143,53)"/><text x="683.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.66%)</title><rect x="680" y="244" width="8" height="15" fill="rgb(217,144,37)"/><text x="683.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.33%)</title><rect x="684" y="260" width="4" height="15" fill="rgb(244,32,48)"/><text x="687.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="684" y="276" width="4" height="15" fill="rgb(212,160,4)"/><text x="687.00" y="286.50"></text></g><g><title>0x7f6082864535 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="688" y="196" width="8" height="15" fill="rgb(205,199,12)"/><text x="691.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="692" y="212" width="4" height="15" fill="rgb(245,90,3)"/><text x="695.00" y="222.50"></text></g><g><title>0x7f60a7d75991 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="696" y="244" width="3" height="15" fill="rgb(227,4,0)"/><text x="699.00" y="254.50"></text></g><g><title>0x7f60a7d759d3 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="699" y="244" width="4" height="15" fill="rgb(241,96,44)"/><text x="702.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.33%)</title><rect x="703" y="244" width="4" height="15" fill="rgb(230,94,43)"/><text x="706.00" y="254.50"></text></g><g><title>0x7f60a7ec11b0 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="703" y="260" width="4" height="15" fill="rgb(248,217,28)"/><text x="706.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="707" y="244" width="4" height="15" fill="rgb(232,23,44)"/><text x="710.00" y="254.50"></text></g><g><title>0x7f6082864553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.99%)</title><rect x="696" y="196" width="23" height="15" fill="rgb(238,66,24)"/><text x="699.00" y="206.50">0..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.99%)</title><rect x="696" y="212" width="23" height="15" fill="rgb(224,118,47)"/><text x="699.00" y="222.50">c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.99%)</title><rect x="696" y="228" width="23" height="15" fill="rgb(226,79,4)"/><text x="699.00" y="238.50">s..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="711" y="244" width="8" height="15" fill="rgb(233,44,7)"/><text x="714.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="715" y="260" width="4" height="15" fill="rgb(219,49,28)"/><text x="718.00" y="270.50"></text></g><g><title>0x7f608286455e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="719" y="196" width="4" height="15" fill="rgb(237,150,43)"/><text x="722.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="719" y="212" width="4" height="15" fill="rgb(207,149,49)"/><text x="722.00" y="222.50"></text></g><g><title>0x7f6082864571 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="723" y="196" width="8" height="15" fill="rgb(231,22,10)"/><text x="726.00" y="206.50"></text></g><g><title>free_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="723" y="212" width="8" height="15" fill="rgb(245,35,25)"/><text x="726.00" y="222.50"></text></g><g><title>0x7f60a7d75d07 (libc-2.29.so) (2 samples, 0.66%)</title><rect x="723" y="228" width="8" height="15" fill="rgb(210,216,24)"/><text x="726.00" y="238.50"></text></g><g><title>0x7f6082864791 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="731" y="196" width="4" height="15" fill="rgb(223,168,19)"/><text x="734.00" y="206.50"></text></g><g><title>0x7f60828647b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="735" y="196" width="8" height="15" fill="rgb(250,15,36)"/><text x="738.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.66%)</title><rect x="735" y="212" width="8" height="15" fill="rgb(206,138,10)"/><text x="738.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.66%)</title><rect x="735" y="228" width="8" height="15" fill="rgb(218,87,14)"/><text x="738.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.66%)</title><rect x="735" y="244" width="8" height="15" fill="rgb(249,226,36)"/><text x="738.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.33%)</title><rect x="739" y="260" width="4" height="15" fill="rgb(235,195,1)"/><text x="742.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="739" y="276" width="4" height="15" fill="rgb(241,121,50)"/><text x="742.00" y="286.50"></text></g><g><title>0x7f6082864baa (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="743" y="196" width="4" height="15" fill="rgb(236,27,21)"/><text x="746.00" y="206.50"></text></g><g><title>0x7f6082864bba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="747" y="196" width="3" height="15" fill="rgb(215,6,47)"/><text x="750.00" y="206.50"></text></g><g><title>0x7f6082864c20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="750" y="196" width="4" height="15" fill="rgb(240,46,36)"/><text x="753.00" y="206.50"></text></g><g><title>0x7f60828663fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (44 samples, 14.62%)</title><rect x="586" y="180" width="172" height="15" fill="rgb(213,177,49)"/><text x="589.00" y="190.50">0x7f60828663fd (sklear..</text></g><g><title>0x7f6082865d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="754" y="196" width="4" height="15" fill="rgb(237,217,47)"/><text x="757.00" y="206.50"></text></g><g><title>0x7f608284d580 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="754" y="212" width="4" height="15" fill="rgb(224,25,52)"/><text x="757.00" y="222.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (51 samples, 16.94%)</title><rect x="562" y="164" width="200" height="15" fill="rgb(239,4,16)"/><text x="565.00" y="174.50">_dense_predict_proba (skle..</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.33%)</title><rect x="758" y="180" width="4" height="15" fill="rgb(218,55,10)"/><text x="761.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.33%)</title><rect x="809" y="196" width="16" height="15" fill="rgb(242,85,40)"/><text x="812.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.33%)</title><rect x="825" y="196" width="4" height="15" fill="rgb(232,39,49)"/><text x="828.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 1.33%)</title><rect x="829" y="196" width="16" height="15" fill="rgb(226,219,7)"/><text x="832.00" y="206.50"></text></g><g><title>0x7f60a7e540e6 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="864" y="212" width="4" height="15" fill="rgb(228,152,14)"/><text x="867.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="868" y="212" width="16" height="15" fill="rgb(206,192,49)"/><text x="871.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.33%)</title><rect x="884" y="212" width="4" height="15" fill="rgb(220,96,27)"/><text x="887.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 3.99%)</title><rect x="845" y="196" width="47" height="15" fill="rgb(246,135,19)"/><text x="848.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="888" y="212" width="4" height="15" fill="rgb(245,1,50)"/><text x="891.00" y="222.50"></text></g><g><title>0x7f60a7d866d0 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="888" y="228" width="4" height="15" fill="rgb(246,106,34)"/><text x="891.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.66%)</title><rect x="892" y="196" width="7" height="15" fill="rgb(216,11,24)"/><text x="895.00" y="206.50"></text></g><g><title>0x7f60a7d8bb60 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="935" y="212" width="4" height="15" fill="rgb(250,83,21)"/><text x="938.00" y="222.50"></text></g><g><title>0x7f60a7d8bb85 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="939" y="212" width="4" height="15" fill="rgb(231,32,53)"/><text x="942.00" y="222.50"></text></g><g><title>0x7f60a7d8bb89 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="943" y="212" width="3" height="15" fill="rgb(254,192,24)"/><text x="946.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="946" y="212" width="4" height="15" fill="rgb(228,6,48)"/><text x="949.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 4.98%)</title><rect x="899" y="196" width="59" height="15" fill="rgb(254,111,7)"/><text x="902.00" y="206.50">_num_s..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.66%)</title><rect x="950" y="212" width="8" height="15" fill="rgb(233,124,1)"/><text x="953.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.33%)</title><rect x="954" y="228" width="4" height="15" fill="rgb(223,32,13)"/><text x="957.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="958" y="196" width="4" height="15" fill="rgb(221,47,4)"/><text x="961.00" y="206.50"></text></g><g><title>0x7f60a7d8b730 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="958" y="212" width="4" height="15" fill="rgb(234,119,25)"/><text x="961.00" y="222.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.33%)</title><rect x="978" y="292" width="4" height="15" fill="rgb(211,135,26)"/><text x="981.00" y="302.50"></text></g><g><title>0x7f60a7d96120 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="982" y="308" width="4" height="15" fill="rgb(229,53,48)"/><text x="985.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="986" y="308" width="4" height="15" fill="rgb(232,32,18)"/><text x="989.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.66%)</title><rect x="990" y="308" width="7" height="15" fill="rgb(227,24,29)"/><text x="993.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="997" y="308" width="4" height="15" fill="rgb(251,70,37)"/><text x="1000.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.33%)</title><rect x="1001" y="308" width="4" height="15" fill="rgb(212,175,9)"/><text x="1004.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (12 samples, 3.99%)</title><rect x="962" y="196" width="47" height="15" fill="rgb(248,88,19)"/><text x="965.00" y="206.50">asar..</text></g><g><title>_array_fromobject (multiarraymodule.c) (9 samples, 2.99%)</title><rect x="974" y="212" width="35" height="15" fill="rgb(231,2,12)"/><text x="977.00" y="222.50">_a..</text></g><g><title>PyArray_CheckFromAny (ctors.c) (8 samples, 2.66%)</title><rect x="978" y="228" width="31" height="15" fill="rgb(212,182,40)"/><text x="981.00" y="238.50">Py..</text></g><g><title>PyArray_FromAny (ctors.c) (8 samples, 2.66%)</title><rect x="978" y="244" width="31" height="15" fill="rgb(220,210,21)"/><text x="981.00" y="254.50">Py..</text></g><g><title>PyArray_FromArray (ctors.c) (8 samples, 2.66%)</title><rect x="978" y="260" width="31" height="15" fill="rgb(222,9,0)"/><text x="981.00" y="270.50">Py..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (8 samples, 2.66%)</title><rect x="978" y="276" width="31" height="15" fill="rgb(249,219,1)"/><text x="981.00" y="286.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 2.33%)</title><rect x="982" y="292" width="27" height="15" fill="rgb(225,98,9)"/><text x="985.00" y="302.50">r..</text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1005" y="308" width="4" height="15" fill="rgb(225,5,37)"/><text x="1008.00" y="318.50"></text></g><g><title>simplefilter (warnings.py) (9 samples, 2.99%)</title><rect x="1009" y="196" width="35" height="15" fill="rgb(241,111,50)"/><text x="1012.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py) (8 samples, 2.66%)</title><rect x="1013" y="212" width="31" height="15" fill="rgb(249,196,51)"/><text x="1016.00" y="222.50">_a..</text></g><g><title>check_array (sklearn/utils/validation.py) (71 samples, 23.59%)</title><rect x="770" y="180" width="278" height="15" fill="rgb(229,144,9)"/><text x="773.00" y="190.50">check_array (sklearn/utils/validation..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.33%)</title><rect x="1044" y="196" width="4" height="15" fill="rgb(225,204,3)"/><text x="1047.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.00%)</title><rect x="1142" y="212" width="12" height="15" fill="rgb(211,101,42)"/><text x="1145.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (157 samples, 52.16%)</title><rect x="558" y="148" width="616" height="15" fill="rgb(240,21,35)"/><text x="561.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (105 samples, 34.88%)</title><rect x="762" y="164" width="412" height="15" fill="rgb(213,61,12)"/><text x="765.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (32 samples, 10.63%)</title><rect x="1048" y="180" width="126" height="15" fill="rgb(231,59,5)"/><text x="1051.00" y="190.50">check_is_fitted..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (24 samples, 7.97%)</title><rect x="1080" y="196" width="94" height="15" fill="rgb(221,80,21)"/><text x="1083.00" y="206.50">&lt;listcomp&gt; ..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.66%)</title><rect x="1154" y="212" width="20" height="15" fill="rgb(238,1,26)"/><text x="1157.00" y="222.50"></text></g><g><title>all (301 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(224,197,7)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (301 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(245,86,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (168 samples, 55.81%)</title><rect x="531" y="68" width="659" height="15" fill="rgb(206,196,54)"/><text x="534.00" y="78.50">profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (168 samples, 55.81%)</title><rect x="531" y="84" width="659" height="15" fill="rgb(222,195,24)"/><text x="534.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (168 samples, 55.81%)</title><rect x="531" y="100" width="659" height="15" fill="rgb(211,112,18)"/><text x="534.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (166 samples, 55.15%)</title><rect x="539" y="116" width="651" height="15" fill="rgb(207,220,8)"/><text x="542.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (164 samples, 54.49%)</title><rect x="547" y="132" width="643" height="15" fill="rgb(223,50,53)"/><text x="550.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (4 samples, 1.33%)</title><rect x="1174" y="148" width="16" height="15" fill="rgb(226,221,33)"/><text x="1177.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (4 samples, 1.33%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(247,85,12)"/><text x="1177.00" y="174.50"></text></g></g></svg>