<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(218,111,12)"/><text x="13.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(236,212,5)"/><text x="13.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="868" width="8" height="15" fill="rgb(212,221,11)"/><text x="13.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="10" y="884" width="8" height="15" fill="rgb(234,174,4)"/><text x="13.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="900" width="8" height="15" fill="rgb(232,176,4)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.74%)</title><rect x="10" y="916" width="8" height="15" fill="rgb(247,222,24)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="932" width="8" height="15" fill="rgb(251,219,45)"/><text x="13.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="948" width="8" height="15" fill="rgb(232,128,23)"/><text x="13.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="964" width="8" height="15" fill="rgb(241,122,2)"/><text x="13.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="10" y="980" width="8" height="15" fill="rgb(211,75,9)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="996" width="8" height="15" fill="rgb(228,63,44)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.74%)</title><rect x="10" y="1012" width="8" height="15" fill="rgb(218,123,4)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1028" width="8" height="15" fill="rgb(247,224,2)"/><text x="13.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1044" width="8" height="15" fill="rgb(215,188,35)"/><text x="13.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1060" width="8" height="15" fill="rgb(222,101,5)"/><text x="13.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="10" y="1076" width="8" height="15" fill="rgb(248,72,43)"/><text x="13.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1092" width="8" height="15" fill="rgb(229,137,8)"/><text x="13.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.74%)</title><rect x="10" y="1108" width="8" height="15" fill="rgb(210,155,41)"/><text x="13.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1124" width="8" height="15" fill="rgb(229,197,43)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1140" width="8" height="15" fill="rgb(217,1,10)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1156" width="8" height="15" fill="rgb(237,186,40)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1172" width="8" height="15" fill="rgb(220,105,53)"/><text x="13.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1188" width="8" height="15" fill="rgb(206,119,6)"/><text x="13.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="10" y="1204" width="8" height="15" fill="rgb(219,17,21)"/><text x="13.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1220" width="8" height="15" fill="rgb(205,159,16)"/><text x="13.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.74%)</title><rect x="10" y="1236" width="8" height="15" fill="rgb(205,46,53)"/><text x="13.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1252" width="8" height="15" fill="rgb(211,224,27)"/><text x="13.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1268" width="8" height="15" fill="rgb(225,221,47)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1284" width="8" height="15" fill="rgb(216,211,6)"/><text x="13.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1300" width="8" height="15" fill="rgb(235,106,8)"/><text x="13.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1316" width="8" height="15" fill="rgb(236,107,46)"/><text x="13.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="10" y="1332" width="8" height="15" fill="rgb(233,23,19)"/><text x="13.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="10" y="1348" width="8" height="15" fill="rgb(228,80,16)"/><text x="13.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.74%)</title><rect x="10" y="1364" width="8" height="15" fill="rgb(214,188,37)"/><text x="13.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.37%)</title><rect x="14" y="1380" width="4" height="15" fill="rgb(252,101,5)"/><text x="17.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.37%)</title><rect x="14" y="1396" width="4" height="15" fill="rgb(234,71,31)"/><text x="17.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.37%)</title><rect x="14" y="1412" width="4" height="15" fill="rgb(245,150,23)"/><text x="17.00" y="1422.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="14" y="1428" width="4" height="15" fill="rgb(218,78,31)"/><text x="17.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="340" width="17" height="15" fill="rgb(231,196,11)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="356" width="17" height="15" fill="rgb(205,135,23)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="372" width="17" height="15" fill="rgb(240,80,9)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="388" width="17" height="15" fill="rgb(213,49,37)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.47%)</title><rect x="10" y="404" width="17" height="15" fill="rgb(239,177,40)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="420" width="17" height="15" fill="rgb(244,171,1)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.47%)</title><rect x="10" y="436" width="17" height="15" fill="rgb(237,203,41)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="452" width="17" height="15" fill="rgb(242,161,11)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="468" width="17" height="15" fill="rgb(231,210,27)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="484" width="17" height="15" fill="rgb(222,87,53)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.47%)</title><rect x="10" y="500" width="17" height="15" fill="rgb(215,94,44)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="516" width="17" height="15" fill="rgb(245,133,22)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.47%)</title><rect x="10" y="532" width="17" height="15" fill="rgb(210,88,13)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="548" width="17" height="15" fill="rgb(236,56,54)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="564" width="17" height="15" fill="rgb(240,208,52)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="580" width="17" height="15" fill="rgb(246,224,2)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.47%)</title><rect x="10" y="596" width="17" height="15" fill="rgb(205,164,41)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="612" width="17" height="15" fill="rgb(216,151,5)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.47%)</title><rect x="10" y="628" width="17" height="15" fill="rgb(234,229,43)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="644" width="17" height="15" fill="rgb(253,18,0)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="660" width="17" height="15" fill="rgb(246,158,14)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="676" width="17" height="15" fill="rgb(238,215,38)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.47%)</title><rect x="10" y="692" width="17" height="15" fill="rgb(210,24,16)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="708" width="17" height="15" fill="rgb(247,18,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.47%)</title><rect x="10" y="724" width="17" height="15" fill="rgb(214,49,7)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="740" width="17" height="15" fill="rgb(236,73,42)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="756" width="17" height="15" fill="rgb(226,184,45)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="772" width="17" height="15" fill="rgb(242,206,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.47%)</title><rect x="10" y="788" width="17" height="15" fill="rgb(231,87,51)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.47%)</title><rect x="10" y="804" width="17" height="15" fill="rgb(240,113,13)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.47%)</title><rect x="10" y="820" width="17" height="15" fill="rgb(236,104,44)"/><text x="13.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="836" width="9" height="15" fill="rgb(222,162,43)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="852" width="9" height="15" fill="rgb(214,107,34)"/><text x="21.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="868" width="9" height="15" fill="rgb(216,145,19)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="884" width="9" height="15" fill="rgb(223,13,11)"/><text x="21.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="900" width="9" height="15" fill="rgb(220,30,17)"/><text x="21.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="916" width="9" height="15" fill="rgb(224,204,8)"/><text x="21.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="932" width="9" height="15" fill="rgb(230,204,42)"/><text x="21.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.74%)</title><rect x="18" y="948" width="9" height="15" fill="rgb(217,20,10)"/><text x="21.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="964" width="9" height="15" fill="rgb(208,179,17)"/><text x="21.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="980" width="9" height="15" fill="rgb(236,113,4)"/><text x="21.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="996" width="9" height="15" fill="rgb(209,216,44)"/><text x="21.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1012" width="9" height="15" fill="rgb(232,186,50)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1028" width="9" height="15" fill="rgb(215,133,33)"/><text x="21.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.74%)</title><rect x="18" y="1044" width="9" height="15" fill="rgb(233,29,2)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1060" width="9" height="15" fill="rgb(213,147,7)"/><text x="21.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1076" width="9" height="15" fill="rgb(223,120,14)"/><text x="21.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1092" width="9" height="15" fill="rgb(210,180,14)"/><text x="21.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1108" width="9" height="15" fill="rgb(232,29,25)"/><text x="21.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1124" width="9" height="15" fill="rgb(237,45,34)"/><text x="21.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (2 samples, 0.74%)</title><rect x="18" y="1140" width="9" height="15" fill="rgb(253,187,20)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1156" width="9" height="15" fill="rgb(217,148,22)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1172" width="9" height="15" fill="rgb(251,67,47)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1188" width="9" height="15" fill="rgb(234,115,54)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1204" width="9" height="15" fill="rgb(228,53,9)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1220" width="9" height="15" fill="rgb(235,26,32)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (2 samples, 0.74%)</title><rect x="18" y="1236" width="9" height="15" fill="rgb(205,226,24)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1252" width="9" height="15" fill="rgb(205,53,24)"/><text x="21.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1268" width="9" height="15" fill="rgb(247,143,7)"/><text x="21.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1284" width="9" height="15" fill="rgb(238,1,39)"/><text x="21.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1300" width="9" height="15" fill="rgb(239,175,9)"/><text x="21.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1316" width="9" height="15" fill="rgb(237,200,16)"/><text x="21.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (2 samples, 0.74%)</title><rect x="18" y="1332" width="9" height="15" fill="rgb(231,226,35)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1348" width="9" height="15" fill="rgb(216,140,21)"/><text x="21.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1364" width="9" height="15" fill="rgb(228,41,28)"/><text x="21.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1380" width="9" height="15" fill="rgb(229,155,50)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1396" width="9" height="15" fill="rgb(225,106,24)"/><text x="21.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1412" width="9" height="15" fill="rgb(230,62,12)"/><text x="21.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1428" width="9" height="15" fill="rgb(240,33,24)"/><text x="21.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1444" width="9" height="15" fill="rgb(251,37,36)"/><text x="21.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1460" width="9" height="15" fill="rgb(232,110,23)"/><text x="21.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (2 samples, 0.74%)</title><rect x="18" y="1476" width="9" height="15" fill="rgb(252,153,28)"/><text x="21.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1492" width="9" height="15" fill="rgb(206,177,34)"/><text x="21.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1508" width="9" height="15" fill="rgb(218,95,35)"/><text x="21.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="18" y="1524" width="9" height="15" fill="rgb(217,30,45)"/><text x="21.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1540" width="9" height="15" fill="rgb(205,62,27)"/><text x="21.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1556" width="9" height="15" fill="rgb(246,200,25)"/><text x="21.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="18" y="1572" width="9" height="15" fill="rgb(212,76,31)"/><text x="21.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.37%)</title><rect x="27" y="484" width="4" height="15" fill="rgb(212,125,39)"/><text x="30.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="500" width="4" height="15" fill="rgb(215,211,1)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="516" width="4" height="15" fill="rgb(253,144,20)"/><text x="30.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="532" width="4" height="15" fill="rgb(226,14,18)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="548" width="4" height="15" fill="rgb(225,59,14)"/><text x="30.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="564" width="4" height="15" fill="rgb(251,46,30)"/><text x="30.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="27" y="580" width="4" height="15" fill="rgb(225,212,1)"/><text x="30.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="27" y="596" width="4" height="15" fill="rgb(238,193,18)"/><text x="30.00" y="606.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.37%)</title><rect x="27" y="612" width="4" height="15" fill="rgb(225,166,43)"/><text x="30.00" y="622.50"></text></g><g><title>system (platform.py) (1 samples, 0.37%)</title><rect x="27" y="628" width="4" height="15" fill="rgb(214,50,41)"/><text x="30.00" y="638.50"></text></g><g><title>uname (platform.py) (1 samples, 0.37%)</title><rect x="27" y="644" width="4" height="15" fill="rgb(239,163,30)"/><text x="30.00" y="654.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.37%)</title><rect x="27" y="660" width="4" height="15" fill="rgb(245,14,33)"/><text x="30.00" y="670.50"></text></g><g><title>popen (os.py) (1 samples, 0.37%)</title><rect x="27" y="676" width="4" height="15" fill="rgb(243,35,8)"/><text x="30.00" y="686.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.37%)</title><rect x="31" y="580" width="5" height="15" fill="rgb(222,151,44)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="596" width="5" height="15" fill="rgb(227,69,1)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="612" width="5" height="15" fill="rgb(250,9,28)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="628" width="5" height="15" fill="rgb(251,116,46)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="31" y="644" width="5" height="15" fill="rgb(234,169,9)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="660" width="5" height="15" fill="rgb(233,214,24)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.37%)</title><rect x="31" y="676" width="5" height="15" fill="rgb(233,1,7)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="692" width="5" height="15" fill="rgb(219,205,51)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="708" width="5" height="15" fill="rgb(253,179,31)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="724" width="5" height="15" fill="rgb(221,85,49)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="31" y="740" width="5" height="15" fill="rgb(242,127,38)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="756" width="5" height="15" fill="rgb(237,75,19)"/><text x="34.00" y="766.50"></text></g><g><title>0x7f6dd912840e (?) (1 samples, 0.37%)</title><rect x="31" y="772" width="5" height="15" fill="rgb(223,46,12)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="788" width="5" height="15" fill="rgb(236,188,33)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="804" width="5" height="15" fill="rgb(240,94,14)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(247,50,35)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(233,54,26)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(214,45,2)"/><text x="34.00" y="862.50"></text></g><g><title>0x7f6dd8ee1104 (?) (1 samples, 0.37%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(239,36,49)"/><text x="34.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 2.57%)</title><rect x="10" y="292" width="30" height="15" fill="rgb(231,185,37)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.57%)</title><rect x="10" y="308" width="30" height="15" fill="rgb(215,8,15)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.57%)</title><rect x="10" y="324" width="30" height="15" fill="rgb(249,112,30)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="340" width="13" height="15" fill="rgb(223,126,20)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="27" y="356" width="13" height="15" fill="rgb(239,82,18)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="372" width="13" height="15" fill="rgb(254,107,0)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.10%)</title><rect x="27" y="388" width="13" height="15" fill="rgb(207,168,47)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="404" width="13" height="15" fill="rgb(210,88,47)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="420" width="13" height="15" fill="rgb(215,168,24)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="436" width="13" height="15" fill="rgb(220,141,1)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="27" y="452" width="13" height="15" fill="rgb(206,10,7)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="27" y="468" width="13" height="15" fill="rgb(218,170,17)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.74%)</title><rect x="31" y="484" width="9" height="15" fill="rgb(241,42,33)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="500" width="9" height="15" fill="rgb(236,183,51)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="516" width="9" height="15" fill="rgb(232,193,45)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="532" width="9" height="15" fill="rgb(220,204,20)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="31" y="548" width="9" height="15" fill="rgb(234,196,35)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="564" width="9" height="15" fill="rgb(243,70,26)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.37%)</title><rect x="36" y="580" width="4" height="15" fill="rgb(241,44,20)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="596" width="4" height="15" fill="rgb(212,126,14)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="612" width="4" height="15" fill="rgb(245,151,46)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(237,47,7)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(223,1,44)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(236,167,40)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.37%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(248,161,52)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(220,199,10)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(250,32,15)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(230,179,32)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(216,26,20)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(214,29,40)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.37%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(235,64,7)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(207,148,33)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(224,42,12)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(254,81,14)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(232,158,6)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(205,197,38)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.37%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(231,70,40)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(210,4,35)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(207,229,36)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(242,183,15)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(229,35,51)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(208,223,32)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.37%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(219,135,26)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(242,176,2)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(214,194,29)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(243,123,14)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(217,171,36)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(220,73,24)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.37%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(213,118,48)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(252,169,42)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(238,179,20)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(249,124,22)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(231,133,21)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(242,179,33)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.37%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(210,23,54)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(221,31,45)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(241,39,49)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(251,223,47)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(225,98,37)"/><text x="39.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(229,82,9)"/><text x="39.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.37%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(253,174,20)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(208,94,15)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(217,132,28)"/><text x="39.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(237,90,32)"/><text x="39.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(236,90,31)"/><text x="39.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(249,208,9)"/><text x="39.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.37%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(225,196,43)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(217,19,1)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1380" width="4" height="15" fill="rgb(232,168,30)"/><text x="39.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1396" width="4" height="15" fill="rgb(230,128,5)"/><text x="39.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1412" width="4" height="15" fill="rgb(244,25,43)"/><text x="39.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1428" width="4" height="15" fill="rgb(250,66,42)"/><text x="39.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.37%)</title><rect x="36" y="1444" width="4" height="15" fill="rgb(243,169,34)"/><text x="39.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1460" width="4" height="15" fill="rgb(238,50,29)"/><text x="39.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(224,40,42)"/><text x="39.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(211,37,4)"/><text x="39.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(218,72,29)"/><text x="39.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(248,19,13)"/><text x="39.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.37%)</title><rect x="36" y="1540" width="4" height="15" fill="rgb(235,148,28)"/><text x="39.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1556" width="4" height="15" fill="rgb(221,39,48)"/><text x="39.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1572" width="4" height="15" fill="rgb(227,143,42)"/><text x="39.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(205,45,35)"/><text x="39.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(234,135,11)"/><text x="39.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1620" width="4" height="15" fill="rgb(210,89,11)"/><text x="39.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.37%)</title><rect x="36" y="1636" width="4" height="15" fill="rgb(232,22,47)"/><text x="39.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1652" width="4" height="15" fill="rgb(246,212,7)"/><text x="39.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1668" width="4" height="15" fill="rgb(217,24,1)"/><text x="39.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1684" width="4" height="15" fill="rgb(212,133,52)"/><text x="39.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1700" width="4" height="15" fill="rgb(216,165,26)"/><text x="39.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1716" width="4" height="15" fill="rgb(244,197,39)"/><text x="39.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.37%)</title><rect x="36" y="1732" width="4" height="15" fill="rgb(220,86,29)"/><text x="39.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1748" width="4" height="15" fill="rgb(248,83,29)"/><text x="39.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1764" width="4" height="15" fill="rgb(215,101,47)"/><text x="39.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="36" y="1780" width="4" height="15" fill="rgb(248,195,14)"/><text x="39.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1796" width="4" height="15" fill="rgb(246,140,5)"/><text x="39.00" y="1806.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1812" width="4" height="15" fill="rgb(248,89,27)"/><text x="39.00" y="1822.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1828" width="4" height="15" fill="rgb(223,125,7)"/><text x="39.00" y="1838.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(224,172,17)"/><text x="43.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(248,30,23)"/><text x="43.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(212,49,7)"/><text x="43.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(210,56,27)"/><text x="43.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(214,146,14)"/><text x="43.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(205,134,6)"/><text x="43.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(249,65,31)"/><text x="43.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(234,128,50)"/><text x="43.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(227,147,40)"/><text x="43.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(246,158,49)"/><text x="43.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="868" width="5" height="15" fill="rgb(254,78,47)"/><text x="47.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="884" width="5" height="15" fill="rgb(219,95,3)"/><text x="47.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="900" width="5" height="15" fill="rgb(224,179,0)"/><text x="47.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="916" width="5" height="15" fill="rgb(208,208,48)"/><text x="47.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="932" width="5" height="15" fill="rgb(243,15,10)"/><text x="47.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="948" width="5" height="15" fill="rgb(225,121,53)"/><text x="47.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="964" width="5" height="15" fill="rgb(205,45,22)"/><text x="47.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.37%)</title><rect x="44" y="980" width="5" height="15" fill="rgb(215,149,23)"/><text x="47.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.37%)</title><rect x="44" y="996" width="5" height="15" fill="rgb(205,15,15)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.37%)</title><rect x="44" y="1012" width="5" height="15" fill="rgb(230,226,5)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="68" width="43" height="15" fill="rgb(238,131,28)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="84" width="43" height="15" fill="rgb(239,24,28)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="100" width="43" height="15" fill="rgb(227,196,30)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.68%)</title><rect x="10" y="116" width="43" height="15" fill="rgb(224,25,34)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="132" width="43" height="15" fill="rgb(240,125,46)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (10 samples, 3.68%)</title><rect x="10" y="148" width="43" height="15" fill="rgb(246,129,27)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="164" width="43" height="15" fill="rgb(232,217,26)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="180" width="43" height="15" fill="rgb(205,166,49)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="196" width="43" height="15" fill="rgb(225,153,48)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="212" width="43" height="15" fill="rgb(230,211,22)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="228" width="43" height="15" fill="rgb(241,8,14)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="244" width="43" height="15" fill="rgb(228,72,31)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.68%)</title><rect x="10" y="260" width="43" height="15" fill="rgb(236,163,39)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.68%)</title><rect x="10" y="276" width="43" height="15" fill="rgb(247,87,1)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.10%)</title><rect x="40" y="292" width="13" height="15" fill="rgb(237,68,32)"/><text x="43.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="308" width="13" height="15" fill="rgb(220,0,10)"/><text x="43.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="324" width="13" height="15" fill="rgb(224,224,29)"/><text x="43.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="340" width="13" height="15" fill="rgb(206,39,45)"/><text x="43.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="40" y="356" width="13" height="15" fill="rgb(214,155,18)"/><text x="43.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="372" width="13" height="15" fill="rgb(224,211,53)"/><text x="43.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.10%)</title><rect x="40" y="388" width="13" height="15" fill="rgb(232,195,50)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="404" width="13" height="15" fill="rgb(250,167,48)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="420" width="13" height="15" fill="rgb(253,1,10)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="436" width="13" height="15" fill="rgb(223,192,34)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="40" y="452" width="13" height="15" fill="rgb(206,64,35)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="468" width="13" height="15" fill="rgb(252,50,50)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.10%)</title><rect x="40" y="484" width="13" height="15" fill="rgb(221,10,31)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="500" width="13" height="15" fill="rgb(240,195,51)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="516" width="13" height="15" fill="rgb(243,49,47)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="532" width="13" height="15" fill="rgb(230,91,14)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="40" y="548" width="13" height="15" fill="rgb(253,146,36)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="564" width="13" height="15" fill="rgb(248,23,12)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.10%)</title><rect x="40" y="580" width="13" height="15" fill="rgb(221,57,18)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="596" width="13" height="15" fill="rgb(246,119,35)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="612" width="13" height="15" fill="rgb(254,139,12)"/><text x="43.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="628" width="13" height="15" fill="rgb(247,155,45)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="644" width="13" height="15" fill="rgb(220,199,10)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="660" width="13" height="15" fill="rgb(210,29,15)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="676" width="13" height="15" fill="rgb(237,69,9)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="40" y="692" width="13" height="15" fill="rgb(246,226,12)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="708" width="13" height="15" fill="rgb(237,79,19)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.10%)</title><rect x="40" y="724" width="13" height="15" fill="rgb(235,108,8)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="740" width="13" height="15" fill="rgb(245,208,31)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="756" width="13" height="15" fill="rgb(249,215,31)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="772" width="13" height="15" fill="rgb(242,154,5)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.10%)</title><rect x="40" y="788" width="13" height="15" fill="rgb(248,82,11)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.10%)</title><rect x="40" y="804" width="13" height="15" fill="rgb(251,167,33)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.10%)</title><rect x="40" y="820" width="13" height="15" fill="rgb(207,39,10)"/><text x="43.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.10%)</title><rect x="40" y="836" width="13" height="15" fill="rgb(251,94,27)"/><text x="43.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.10%)</title><rect x="40" y="852" width="13" height="15" fill="rgb(239,59,9)"/><text x="43.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(241,31,27)"/><text x="52.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(206,167,13)"/><text x="52.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.37%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(211,96,28)"/><text x="52.00" y="910.50"></text></g><g><title>0x7f6dad18bff9 (?) (1 samples, 0.37%)</title><rect x="105" y="212" width="4" height="15" fill="rgb(252,168,5)"/><text x="108.00" y="222.50"></text></g><g><title>0x7f6dad186ef6 (?) (1 samples, 0.37%)</title><rect x="105" y="228" width="4" height="15" fill="rgb(230,155,41)"/><text x="108.00" y="238.50"></text></g><g><title>0x7f6dad17b458 (?) (1 samples, 0.37%)</title><rect x="105" y="244" width="4" height="15" fill="rgb(225,10,45)"/><text x="108.00" y="254.50"></text></g><g><title>0x7f6dad16bd1e (?) (1 samples, 0.37%)</title><rect x="105" y="260" width="4" height="15" fill="rgb(236,6,33)"/><text x="108.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.37%)</title><rect x="109" y="212" width="5" height="15" fill="rgb(234,7,37)"/><text x="112.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="109" y="228" width="5" height="15" fill="rgb(249,227,54)"/><text x="112.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="109" y="244" width="5" height="15" fill="rgb(242,111,11)"/><text x="112.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="109" y="260" width="5" height="15" fill="rgb(227,219,54)"/><text x="112.00" y="270.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="114" y="228" width="4" height="15" fill="rgb(214,77,49)"/><text x="117.00" y="238.50"></text></g><g><title>0x7f6dad1538a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="122" y="260" width="5" height="15" fill="rgb(214,55,14)"/><text x="125.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="127" y="260" width="4" height="15" fill="rgb(209,83,31)"/><text x="130.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="127" y="276" width="4" height="15" fill="rgb(213,99,11)"/><text x="130.00" y="286.50"></text></g><g><title>0x7f6dad152ba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="127" y="292" width="4" height="15" fill="rgb(217,75,22)"/><text x="130.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="135" y="292" width="5" height="15" fill="rgb(218,173,1)"/><text x="138.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="135" y="308" width="5" height="15" fill="rgb(233,227,48)"/><text x="138.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="135" y="324" width="5" height="15" fill="rgb(208,161,42)"/><text x="138.00" y="334.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="135" y="340" width="5" height="15" fill="rgb(227,117,47)"/><text x="138.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="140" y="292" width="4" height="15" fill="rgb(250,193,0)"/><text x="143.00" y="302.50"></text></g><g><title>0x7f6ddc3af7a0 (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="140" y="308" width="4" height="15" fill="rgb(209,79,39)"/><text x="143.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="144" y="292" width="4" height="15" fill="rgb(210,8,27)"/><text x="147.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="144" y="308" width="4" height="15" fill="rgb(238,115,24)"/><text x="147.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="157" y="340" width="4" height="15" fill="rgb(247,60,16)"/><text x="160.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="157" y="356" width="4" height="15" fill="rgb(207,88,26)"/><text x="160.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="161" y="340" width="5" height="15" fill="rgb(235,208,10)"/><text x="164.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="166" y="452" width="4" height="15" fill="rgb(247,12,3)"/><text x="169.00" y="462.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="166" y="468" width="4" height="15" fill="rgb(206,176,47)"/><text x="169.00" y="478.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="340" width="8" height="15" fill="rgb(224,27,53)"/><text x="169.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="356" width="8" height="15" fill="rgb(254,31,19)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="372" width="8" height="15" fill="rgb(252,96,19)"/><text x="169.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="388" width="8" height="15" fill="rgb(210,87,29)"/><text x="169.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="404" width="8" height="15" fill="rgb(211,71,50)"/><text x="169.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="420" width="8" height="15" fill="rgb(206,77,40)"/><text x="169.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="166" y="436" width="8" height="15" fill="rgb(210,217,5)"/><text x="169.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="170" y="452" width="4" height="15" fill="rgb(254,47,25)"/><text x="173.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="170" y="468" width="4" height="15" fill="rgb(218,28,24)"/><text x="173.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="170" y="484" width="4" height="15" fill="rgb(235,220,40)"/><text x="173.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="170" y="500" width="4" height="15" fill="rgb(247,192,37)"/><text x="173.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="179" y="484" width="4" height="15" fill="rgb(211,210,17)"/><text x="182.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="179" y="500" width="4" height="15" fill="rgb(232,44,30)"/><text x="182.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.78%)</title><rect x="131" y="260" width="56" height="15" fill="rgb(214,0,3)"/><text x="134.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.41%)</title><rect x="135" y="276" width="52" height="15" fill="rgb(244,228,6)"/><text x="138.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.31%)</title><rect x="148" y="292" width="39" height="15" fill="rgb(230,45,36)"/><text x="151.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.31%)</title><rect x="148" y="308" width="39" height="15" fill="rgb(210,91,46)"/><text x="151.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.31%)</title><rect x="148" y="324" width="39" height="15" fill="rgb(210,177,17)"/><text x="151.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.10%)</title><rect x="174" y="340" width="13" height="15" fill="rgb(222,224,5)"/><text x="177.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="356" width="8" height="15" fill="rgb(253,189,25)"/><text x="182.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="372" width="8" height="15" fill="rgb(214,185,40)"/><text x="182.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="388" width="8" height="15" fill="rgb(221,203,3)"/><text x="182.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="404" width="8" height="15" fill="rgb(209,109,51)"/><text x="182.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="420" width="8" height="15" fill="rgb(239,224,40)"/><text x="182.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="436" width="8" height="15" fill="rgb(223,133,19)"/><text x="182.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="452" width="8" height="15" fill="rgb(219,197,16)"/><text x="182.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="179" y="468" width="8" height="15" fill="rgb(218,24,3)"/><text x="182.00" y="478.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="183" y="484" width="4" height="15" fill="rgb(216,95,20)"/><text x="186.00" y="494.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.37%)</title><rect x="187" y="276" width="5" height="15" fill="rgb(208,61,19)"/><text x="190.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.37%)</title><rect x="187" y="292" width="5" height="15" fill="rgb(249,226,39)"/><text x="190.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="187" y="260" width="9" height="15" fill="rgb(247,27,11)"/><text x="190.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="192" y="276" width="4" height="15" fill="rgb(207,201,50)"/><text x="195.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="196" y="260" width="4" height="15" fill="rgb(218,61,14)"/><text x="199.00" y="270.50"></text></g><g><title>0x7f6ddc3aef70 (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="200" y="276" width="5" height="15" fill="rgb(227,127,21)"/><text x="203.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.72%)</title><rect x="118" y="244" width="91" height="15" fill="rgb(235,128,28)"/><text x="121.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="200" y="260" width="9" height="15" fill="rgb(252,51,47)"/><text x="203.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="276" width="4" height="15" fill="rgb(250,136,15)"/><text x="208.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="292" width="4" height="15" fill="rgb(209,91,10)"/><text x="208.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="308" width="4" height="15" fill="rgb(222,195,1)"/><text x="208.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="324" width="4" height="15" fill="rgb(253,74,4)"/><text x="208.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="340" width="4" height="15" fill="rgb(222,65,11)"/><text x="208.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="356" width="4" height="15" fill="rgb(251,164,18)"/><text x="208.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="372" width="4" height="15" fill="rgb(216,226,5)"/><text x="208.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="205" y="388" width="4" height="15" fill="rgb(218,227,43)"/><text x="208.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 12.87%)</title><rect x="62" y="132" width="151" height="15" fill="rgb(216,200,4)"/><text x="65.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (34 samples, 12.50%)</title><rect x="66" y="148" width="147" height="15" fill="rgb(233,100,46)"/><text x="69.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (32 samples, 11.76%)</title><rect x="75" y="164" width="138" height="15" fill="rgb(210,50,32)"/><text x="78.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (29 samples, 10.66%)</title><rect x="88" y="180" width="125" height="15" fill="rgb(242,90,29)"/><text x="91.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py) (28 samples, 10.29%)</title><rect x="92" y="196" width="121" height="15" fill="rgb(210,19,17)"/><text x="95.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 8.46%)</title><rect x="114" y="212" width="99" height="15" fill="rgb(220,194,42)"/><text x="117.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.09%)</title><rect x="118" y="228" width="95" height="15" fill="rgb(216,157,32)"/><text x="121.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="209" y="244" width="4" height="15" fill="rgb(248,195,11)"/><text x="212.00" y="254.50"></text></g><g><title>0x7f6dec9c0130 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="213" y="148" width="5" height="15" fill="rgb(243,40,25)"/><text x="216.00" y="158.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (39 samples, 14.34%)</title><rect x="53" y="68" width="169" height="15" fill="rgb(214,188,16)"/><text x="56.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (39 samples, 14.34%)</title><rect x="53" y="84" width="169" height="15" fill="rgb(234,188,27)"/><text x="56.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (39 samples, 14.34%)</title><rect x="53" y="100" width="169" height="15" fill="rgb(253,180,31)"/><text x="56.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 13.97%)</title><rect x="57" y="116" width="165" height="15" fill="rgb(249,45,17)"/><text x="60.00" y="126.50">time_predict (mlprodi..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.74%)</title><rect x="213" y="132" width="9" height="15" fill="rgb(239,157,32)"/><text x="216.00" y="142.50"></text></g><g><title>0x7f6dec9c013a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="218" y="148" width="4" height="15" fill="rgb(216,72,7)"/><text x="221.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.37%)</title><rect x="231" y="116" width="4" height="15" fill="rgb(244,186,29)"/><text x="234.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="231" y="132" width="4" height="15" fill="rgb(213,21,7)"/><text x="234.00" y="142.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.84%)</title><rect x="361" y="244" width="22" height="15" fill="rgb(238,106,44)"/><text x="364.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.10%)</title><rect x="370" y="260" width="13" height="15" fill="rgb(223,186,17)"/><text x="373.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 1.10%)</title><rect x="370" y="276" width="13" height="15" fill="rgb(209,168,30)"/><text x="373.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.74%)</title><rect x="374" y="292" width="9" height="15" fill="rgb(251,119,3)"/><text x="377.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.37%)</title><rect x="378" y="308" width="5" height="15" fill="rgb(254,118,19)"/><text x="381.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (3 samples, 1.10%)</title><rect x="383" y="244" width="13" height="15" fill="rgb(233,227,20)"/><text x="386.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;) (1 samples, 0.37%)</title><rect x="391" y="260" width="5" height="15" fill="rgb(219,224,14)"/><text x="394.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.37%)</title><rect x="391" y="276" width="5" height="15" fill="rgb(206,138,25)"/><text x="394.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (1 samples, 0.37%)</title><rect x="391" y="292" width="5" height="15" fill="rgb(241,51,23)"/><text x="394.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (1 samples, 0.37%)</title><rect x="391" y="308" width="5" height="15" fill="rgb(221,122,19)"/><text x="394.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.37%)</title><rect x="391" y="324" width="5" height="15" fill="rgb(245,26,3)"/><text x="394.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.37%)</title><rect x="391" y="340" width="5" height="15" fill="rgb(208,214,47)"/><text x="394.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.37%)</title><rect x="391" y="356" width="5" height="15" fill="rgb(207,25,32)"/><text x="394.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.37%)</title><rect x="391" y="372" width="5" height="15" fill="rgb(230,148,8)"/><text x="394.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.37%)</title><rect x="391" y="388" width="5" height="15" fill="rgb(214,26,19)"/><text x="394.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.37%)</title><rect x="391" y="404" width="5" height="15" fill="rgb(209,1,36)"/><text x="394.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.37%)</title><rect x="396" y="260" width="4" height="15" fill="rgb(252,210,23)"/><text x="399.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.37%)</title><rect x="396" y="276" width="4" height="15" fill="rgb(236,41,3)"/><text x="399.00" y="286.50"></text></g><g><title>0x7f6dec903120 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="404" y="276" width="5" height="15" fill="rgb(205,34,23)"/><text x="407.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.37%)</title><rect x="413" y="356" width="4" height="15" fill="rgb(223,151,39)"/><text x="416.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.37%)</title><rect x="413" y="372" width="4" height="15" fill="rgb(246,210,54)"/><text x="416.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.10%)</title><rect x="409" y="292" width="13" height="15" fill="rgb(218,151,13)"/><text x="412.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.10%)</title><rect x="409" y="308" width="13" height="15" fill="rgb(212,203,20)"/><text x="412.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 1.10%)</title><rect x="409" y="324" width="13" height="15" fill="rgb(242,114,49)"/><text x="412.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.74%)</title><rect x="413" y="340" width="9" height="15" fill="rgb(229,3,12)"/><text x="416.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.37%)</title><rect x="417" y="356" width="5" height="15" fill="rgb(243,116,15)"/><text x="420.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.37%)</title><rect x="422" y="308" width="4" height="15" fill="rgb(230,107,32)"/><text x="425.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (22 samples, 8.09%)</title><rect x="335" y="228" width="95" height="15" fill="rgb(212,121,43)"/><text x="338.00" y="238.50">_run (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.94%)</title><rect x="396" y="244" width="34" height="15" fill="rgb(254,85,53)"/><text x="399.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.57%)</title><rect x="400" y="260" width="30" height="15" fill="rgb(223,214,8)"/><text x="403.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.84%)</title><rect x="409" y="276" width="21" height="15" fill="rgb(220,109,45)"/><text x="412.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.74%)</title><rect x="422" y="292" width="8" height="15" fill="rgb(239,112,44)"/><text x="425.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.37%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(228,86,28)"/><text x="429.00" y="318.50"></text></g><g><title>0x7f6dec8e2be0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="426" y="324" width="4" height="15" fill="rgb(236,111,1)"/><text x="429.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.47%)</title><rect x="439" y="324" width="17" height="15" fill="rgb(235,145,41)"/><text x="442.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.47%)</title><rect x="439" y="340" width="17" height="15" fill="rgb(225,37,25)"/><text x="442.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.47%)</title><rect x="439" y="356" width="17" height="15" fill="rgb(245,149,12)"/><text x="442.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.47%)</title><rect x="439" y="372" width="17" height="15" fill="rgb(233,194,17)"/><text x="442.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.47%)</title><rect x="439" y="388" width="17" height="15" fill="rgb(220,120,16)"/><text x="442.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.37%)</title><rect x="469" y="372" width="5" height="15" fill="rgb(237,172,8)"/><text x="472.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.37%)</title><rect x="469" y="388" width="5" height="15" fill="rgb(244,8,47)"/><text x="472.00" y="398.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.37%)</title><rect x="474" y="420" width="4" height="15" fill="rgb(231,166,21)"/><text x="477.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.74%)</title><rect x="474" y="372" width="8" height="15" fill="rgb(254,122,20)"/><text x="477.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.74%)</title><rect x="474" y="388" width="8" height="15" fill="rgb(232,169,51)"/><text x="477.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.74%)</title><rect x="474" y="404" width="8" height="15" fill="rgb(248,168,12)"/><text x="477.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.37%)</title><rect x="478" y="420" width="4" height="15" fill="rgb(247,200,9)"/><text x="481.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.37%)</title><rect x="478" y="436" width="4" height="15" fill="rgb(222,73,26)"/><text x="481.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.37%)</title><rect x="478" y="452" width="4" height="15" fill="rgb(250,109,50)"/><text x="481.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.37%)</title><rect x="482" y="372" width="5" height="15" fill="rgb(242,87,47)"/><text x="485.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.37%)</title><rect x="482" y="388" width="5" height="15" fill="rgb(210,160,16)"/><text x="485.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.37%)</title><rect x="482" y="404" width="5" height="15" fill="rgb(249,212,47)"/><text x="485.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.37%)</title><rect x="482" y="420" width="5" height="15" fill="rgb(224,150,9)"/><text x="485.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="482" y="436" width="5" height="15" fill="rgb(220,119,49)"/><text x="485.00" y="446.50"></text></g><g><title>0x7f6dec884318 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="482" y="452" width="5" height="15" fill="rgb(223,93,26)"/><text x="485.00" y="462.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.37%)</title><rect x="487" y="372" width="4" height="15" fill="rgb(246,14,35)"/><text x="490.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 2.21%)</title><rect x="469" y="356" width="26" height="15" fill="rgb(222,181,43)"/><text x="472.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.37%)</title><rect x="491" y="372" width="4" height="15" fill="rgb(246,47,7)"/><text x="494.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.37%)</title><rect x="491" y="388" width="4" height="15" fill="rgb(230,88,17)"/><text x="494.00" y="398.50"></text></g><g><title>array_sum (methods.c) (14 samples, 5.15%)</title><rect x="439" y="260" width="61" height="15" fill="rgb(211,207,14)"/><text x="442.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 5.15%)</title><rect x="439" y="276" width="61" height="15" fill="rgb(219,90,26)"/><text x="442.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 5.15%)</title><rect x="439" y="292" width="61" height="15" fill="rgb(219,165,31)"/><text x="442.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 5.15%)</title><rect x="439" y="308" width="61" height="15" fill="rgb(232,197,19)"/><text x="442.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 3.68%)</title><rect x="456" y="324" width="44" height="15" fill="rgb(243,113,53)"/><text x="459.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 2.94%)</title><rect x="465" y="340" width="35" height="15" fill="rgb(232,176,36)"/><text x="468.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.37%)</title><rect x="495" y="356" width="5" height="15" fill="rgb(249,114,20)"/><text x="498.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.37%)</title><rect x="495" y="372" width="5" height="15" fill="rgb(227,115,23)"/><text x="498.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.74%)</title><rect x="500" y="276" width="8" height="15" fill="rgb(245,16,38)"/><text x="503.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.74%)</title><rect x="500" y="292" width="8" height="15" fill="rgb(215,81,7)"/><text x="503.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.74%)</title><rect x="500" y="308" width="8" height="15" fill="rgb(220,71,2)"/><text x="503.00" y="318.50"></text></g><g><title>0x7f6dec8f8e50 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="504" y="324" width="4" height="15" fill="rgb(250,198,38)"/><text x="507.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.37%)</title><rect x="508" y="292" width="5" height="15" fill="rgb(241,3,26)"/><text x="511.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.37%)</title><rect x="508" y="308" width="5" height="15" fill="rgb(250,190,21)"/><text x="511.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.37%)</title><rect x="508" y="324" width="5" height="15" fill="rgb(218,191,25)"/><text x="511.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.37%)</title><rect x="508" y="340" width="5" height="15" fill="rgb(223,156,5)"/><text x="511.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (68 samples, 25.00%)</title><rect x="222" y="68" width="295" height="15" fill="rgb(224,69,25)"/><text x="225.00" y="78.50">profile_pyrt (bench_LogisticRegression_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (68 samples, 25.00%)</title><rect x="222" y="84" width="295" height="15" fill="rgb(251,167,16)"/><text x="225.00" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (68 samples, 25.00%)</title><rect x="222" y="100" width="295" height="15" fill="rgb(237,41,1)"/><text x="225.00" y="110.50">profile (bench_LogisticRegression_libli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 23.90%)</title><rect x="235" y="116" width="282" height="15" fill="rgb(246,96,30)"/><text x="238.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (65 samples, 23.90%)</title><rect x="235" y="132" width="282" height="15" fill="rgb(238,209,41)"/><text x="238.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (65 samples, 23.90%)</title><rect x="235" y="148" width="282" height="15" fill="rgb(218,161,18)"/><text x="238.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (65 samples, 23.90%)</title><rect x="235" y="164" width="282" height="15" fill="rgb(214,125,28)"/><text x="238.00" y="174.50">_run_sequence_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (57 samples, 20.96%)</title><rect x="270" y="180" width="247" height="15" fill="rgb(210,83,22)"/><text x="273.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 16.54%)</title><rect x="322" y="196" width="195" height="15" fill="rgb(217,190,3)"/><text x="325.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (43 samples, 15.81%)</title><rect x="331" y="212" width="186" height="15" fill="rgb(246,34,13)"/><text x="334.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (20 samples, 7.35%)</title><rect x="430" y="228" width="87" height="15" fill="rgb(242,56,47)"/><text x="433.00" y="238.50">_run (mlpr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (19 samples, 6.99%)</title><rect x="435" y="244" width="82" height="15" fill="rgb(208,92,46)"/><text x="438.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.47%)</title><rect x="500" y="260" width="17" height="15" fill="rgb(249,134,52)"/><text x="503.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.74%)</title><rect x="508" y="276" width="9" height="15" fill="rgb(243,178,17)"/><text x="511.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.37%)</title><rect x="513" y="292" width="4" height="15" fill="rgb(253,151,24)"/><text x="516.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.37%)</title><rect x="513" y="308" width="4" height="15" fill="rgb(233,182,4)"/><text x="516.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.37%)</title><rect x="513" y="324" width="4" height="15" fill="rgb(228,190,6)"/><text x="516.00" y="334.50"></text></g><g><title>0x7f6dec9c0130 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="543" y="164" width="4" height="15" fill="rgb(249,106,36)"/><text x="546.00" y="174.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.37%)</title><rect x="560" y="244" width="5" height="15" fill="rgb(216,172,24)"/><text x="563.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.37%)</title><rect x="560" y="260" width="5" height="15" fill="rgb(218,43,22)"/><text x="563.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.37%)</title><rect x="560" y="276" width="5" height="15" fill="rgb(230,219,54)"/><text x="563.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.37%)</title><rect x="560" y="292" width="5" height="15" fill="rgb(227,144,2)"/><text x="563.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.37%)</title><rect x="560" y="308" width="5" height="15" fill="rgb(245,153,36)"/><text x="563.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.37%)</title><rect x="569" y="292" width="4" height="15" fill="rgb(208,21,54)"/><text x="572.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="569" y="308" width="4" height="15" fill="rgb(216,180,16)"/><text x="572.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.37%)</title><rect x="573" y="292" width="5" height="15" fill="rgb(213,4,30)"/><text x="576.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.37%)</title><rect x="573" y="308" width="5" height="15" fill="rgb(229,197,3)"/><text x="576.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="573" y="324" width="5" height="15" fill="rgb(218,179,46)"/><text x="576.00" y="334.50"></text></g><g><title>0x7f6dec902d53 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="573" y="340" width="5" height="15" fill="rgb(215,16,52)"/><text x="576.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.37%)</title><rect x="582" y="340" width="4" height="15" fill="rgb(212,17,1)"/><text x="585.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="582" y="356" width="4" height="15" fill="rgb(233,132,28)"/><text x="585.00" y="366.50"></text></g><g><title>0x7f6dec902d62 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="582" y="372" width="4" height="15" fill="rgb(246,204,49)"/><text x="585.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 1.10%)</title><rect x="578" y="292" width="13" height="15" fill="rgb(234,169,32)"/><text x="581.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 1.10%)</title><rect x="578" y="308" width="13" height="15" fill="rgb(210,31,17)"/><text x="581.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 1.10%)</title><rect x="578" y="324" width="13" height="15" fill="rgb(211,57,22)"/><text x="581.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.37%)</title><rect x="586" y="340" width="5" height="15" fill="rgb(235,121,25)"/><text x="589.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.57%)</title><rect x="569" y="276" width="31" height="15" fill="rgb(248,192,1)"/><text x="572.00" y="286.50">Py..</text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (2 samples, 0.74%)</title><rect x="591" y="292" width="9" height="15" fill="rgb(213,124,16)"/><text x="594.00" y="302.50"></text></g><g><title>array_sum (methods.c) (10 samples, 3.68%)</title><rect x="560" y="180" width="44" height="15" fill="rgb(240,189,11)"/><text x="563.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 3.68%)</title><rect x="560" y="196" width="44" height="15" fill="rgb(214,134,3)"/><text x="563.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 3.68%)</title><rect x="560" y="212" width="44" height="15" fill="rgb(245,178,24)"/><text x="563.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 3.68%)</title><rect x="560" y="228" width="44" height="15" fill="rgb(210,11,28)"/><text x="563.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.31%)</title><rect x="565" y="244" width="39" height="15" fill="rgb(252,70,52)"/><text x="568.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 2.94%)</title><rect x="569" y="260" width="35" height="15" fill="rgb(230,155,14)"/><text x="572.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.37%)</title><rect x="600" y="276" width="4" height="15" fill="rgb(237,88,27)"/><text x="603.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="600" y="292" width="4" height="15" fill="rgb(216,57,10)"/><text x="603.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="600" y="308" width="4" height="15" fill="rgb(232,159,26)"/><text x="603.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.37%)</title><rect x="643" y="196" width="4" height="15" fill="rgb(253,111,6)"/><text x="646.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.37%)</title><rect x="643" y="212" width="4" height="15" fill="rgb(228,154,33)"/><text x="646.00" y="222.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.37%)</title><rect x="643" y="228" width="4" height="15" fill="rgb(209,206,8)"/><text x="646.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.37%)</title><rect x="665" y="292" width="4" height="15" fill="rgb(224,83,1)"/><text x="668.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.37%)</title><rect x="665" y="308" width="4" height="15" fill="rgb(252,224,47)"/><text x="668.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.37%)</title><rect x="665" y="324" width="4" height="15" fill="rgb(210,83,2)"/><text x="668.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.37%)</title><rect x="665" y="340" width="4" height="15" fill="rgb(220,140,46)"/><text x="668.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.74%)</title><rect x="665" y="276" width="8" height="15" fill="rgb(209,35,52)"/><text x="668.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.37%)</title><rect x="669" y="292" width="4" height="15" fill="rgb(207,161,26)"/><text x="672.00" y="302.50"></text></g><g><title>array_add (number.c) (7 samples, 2.57%)</title><rect x="647" y="196" width="31" height="15" fill="rgb(225,112,8)"/><text x="650.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.21%)</title><rect x="652" y="212" width="26" height="15" fill="rgb(233,159,26)"/><text x="655.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.21%)</title><rect x="652" y="228" width="26" height="15" fill="rgb(253,16,31)"/><text x="655.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.84%)</title><rect x="656" y="244" width="22" height="15" fill="rgb(240,154,42)"/><text x="659.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.47%)</title><rect x="660" y="260" width="18" height="15" fill="rgb(237,147,29)"/><text x="663.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.37%)</title><rect x="673" y="276" width="5" height="15" fill="rgb(223,166,14)"/><text x="676.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="673" y="292" width="5" height="15" fill="rgb(239,123,9)"/><text x="676.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.74%)</title><rect x="678" y="196" width="8" height="15" fill="rgb(248,53,49)"/><text x="681.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.74%)</title><rect x="678" y="212" width="8" height="15" fill="rgb(250,168,51)"/><text x="681.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.74%)</title><rect x="678" y="228" width="8" height="15" fill="rgb(214,55,52)"/><text x="681.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.74%)</title><rect x="734" y="212" width="9" height="15" fill="rgb(227,57,38)"/><text x="737.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.37%)</title><rect x="743" y="212" width="4" height="15" fill="rgb(228,192,48)"/><text x="746.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.37%)</title><rect x="747" y="212" width="4" height="15" fill="rgb(216,0,17)"/><text x="750.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="773" y="228" width="9" height="15" fill="rgb(213,34,51)"/><text x="776.00" y="238.50"></text></g><g><title>0x7f6dec8f8e7a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="777" y="244" width="5" height="15" fill="rgb(241,218,41)"/><text x="780.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 2.94%)</title><rect x="751" y="212" width="35" height="15" fill="rgb(220,98,1)"/><text x="754.00" y="222.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="782" y="228" width="4" height="15" fill="rgb(230,190,39)"/><text x="785.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.37%)</title><rect x="786" y="212" width="4" height="15" fill="rgb(243,80,1)"/><text x="789.00" y="222.50"></text></g><g><title>0x7f6dec9031ef (libc-2.29.so) (1 samples, 0.37%)</title><rect x="825" y="228" width="4" height="15" fill="rgb(250,149,41)"/><text x="828.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (11 samples, 4.04%)</title><rect x="790" y="212" width="48" height="15" fill="rgb(252,147,38)"/><text x="793.00" y="222.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.74%)</title><rect x="829" y="228" width="9" height="15" fill="rgb(251,188,4)"/><text x="832.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.37%)</title><rect x="834" y="244" width="4" height="15" fill="rgb(237,7,45)"/><text x="837.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.74%)</title><rect x="838" y="212" width="9" height="15" fill="rgb(210,10,31)"/><text x="841.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.74%)</title><rect x="838" y="228" width="9" height="15" fill="rgb(223,79,13)"/><text x="841.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (41 samples, 15.07%)</title><rect x="686" y="196" width="178" height="15" fill="rgb(215,216,30)"/><text x="689.00" y="206.50">check_array (sklearn/ut..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.47%)</title><rect x="847" y="212" width="17" height="15" fill="rgb(239,198,30)"/><text x="850.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.74%)</title><rect x="855" y="228" width="9" height="15" fill="rgb(242,188,50)"/><text x="858.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.47%)</title><rect x="903" y="228" width="18" height="15" fill="rgb(216,202,40)"/><text x="906.00" y="238.50"></text></g><g><title>0x7f6dec9c0163 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="916" y="244" width="5" height="15" fill="rgb(233,39,15)"/><text x="919.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 4.41%)</title><rect x="873" y="212" width="52" height="15" fill="rgb(221,26,49)"/><text x="876.00" y="222.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="921" y="228" width="4" height="15" fill="rgb(246,193,21)"/><text x="924.00" y="238.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.37%)</title><rect x="925" y="212" width="4" height="15" fill="rgb(219,72,6)"/><text x="928.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 6.62%)</title><rect x="864" y="196" width="78" height="15" fill="rgb(241,130,54)"/><text x="867.00" y="206.50">check_is_..</text></g><g><title>mmap64 (libc-2.29.so) (3 samples, 1.10%)</title><rect x="929" y="212" width="13" height="15" fill="rgb(233,42,46)"/><text x="932.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.37%)</title><rect x="951" y="212" width="4" height="15" fill="rgb(252,96,34)"/><text x="954.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.74%)</title><rect x="960" y="260" width="8" height="15" fill="rgb(252,29,8)"/><text x="963.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (2 samples, 0.74%)</title><rect x="960" y="276" width="8" height="15" fill="rgb(240,128,27)"/><text x="963.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.74%)</title><rect x="960" y="292" width="8" height="15" fill="rgb(234,218,49)"/><text x="963.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.37%)</title><rect x="973" y="308" width="4" height="15" fill="rgb(229,69,23)"/><text x="976.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.10%)</title><rect x="968" y="260" width="13" height="15" fill="rgb(222,170,42)"/><text x="971.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.74%)</title><rect x="973" y="276" width="8" height="15" fill="rgb(236,217,10)"/><text x="976.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.74%)</title><rect x="973" y="292" width="8" height="15" fill="rgb(251,11,23)"/><text x="976.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.37%)</title><rect x="977" y="308" width="4" height="15" fill="rgb(228,212,26)"/><text x="980.00" y="318.50"></text></g><g><title>0x7f6dec903124 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="977" y="324" width="4" height="15" fill="rgb(237,74,46)"/><text x="980.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.37%)</title><rect x="981" y="260" width="5" height="15" fill="rgb(226,225,11)"/><text x="984.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.37%)</title><rect x="981" y="276" width="5" height="15" fill="rgb(217,169,5)"/><text x="984.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.37%)</title><rect x="981" y="292" width="5" height="15" fill="rgb(246,194,35)"/><text x="984.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.37%)</title><rect x="981" y="308" width="5" height="15" fill="rgb(253,16,10)"/><text x="984.00" y="318.50"></text></g><g><title>0x7f6dec902d97 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="990" y="276" width="4" height="15" fill="rgb(223,63,37)"/><text x="993.00" y="286.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (3 samples, 1.10%)</title><rect x="986" y="260" width="13" height="15" fill="rgb(222,2,24)"/><text x="989.00" y="270.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.37%)</title><rect x="994" y="276" width="5" height="15" fill="rgb(232,20,18)"/><text x="997.00" y="286.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.37%)</title><rect x="999" y="260" width="4" height="15" fill="rgb(244,70,4)"/><text x="1002.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 4.41%)</title><rect x="955" y="228" width="52" height="15" fill="rgb(209,209,49)"/><text x="958.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 4.41%)</title><rect x="955" y="244" width="52" height="15" fill="rgb(214,188,32)"/><text x="958.00" y="254.50">PyUFu..</text></g><g><title>_validate_num_dims (ufunc_object.c) (1 samples, 0.37%)</title><rect x="1003" y="260" width="4" height="15" fill="rgb(243,12,49)"/><text x="1006.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (94 samples, 34.56%)</title><rect x="604" y="180" width="408" height="15" fill="rgb(213,94,47)"/><text x="607.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (16 samples, 5.88%)</title><rect x="942" y="196" width="70" height="15" fill="rgb(242,199,26)"/><text x="945.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.78%)</title><rect x="955" y="212" width="57" height="15" fill="rgb(212,69,38)"/><text x="958.00" y="222.50">ufunc_..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.37%)</title><rect x="1007" y="228" width="5" height="15" fill="rgb(228,33,5)"/><text x="1010.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.37%)</title><rect x="1012" y="196" width="4" height="15" fill="rgb(232,79,12)"/><text x="1015.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.37%)</title><rect x="1012" y="212" width="4" height="15" fill="rgb(206,75,5)"/><text x="1015.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.37%)</title><rect x="1012" y="228" width="4" height="15" fill="rgb(241,189,20)"/><text x="1015.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="1012" y="244" width="4" height="15" fill="rgb(212,219,53)"/><text x="1015.00" y="254.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.37%)</title><rect x="1020" y="276" width="5" height="15" fill="rgb(252,90,37)"/><text x="1023.00" y="286.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.37%)</title><rect x="1020" y="292" width="5" height="15" fill="rgb(215,95,23)"/><text x="1023.00" y="302.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.74%)</title><rect x="1020" y="260" width="9" height="15" fill="rgb(251,167,42)"/><text x="1023.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1025" y="276" width="4" height="15" fill="rgb(210,165,34)"/><text x="1028.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.10%)</title><rect x="1020" y="228" width="13" height="15" fill="rgb(248,28,37)"/><text x="1023.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.10%)</title><rect x="1020" y="244" width="13" height="15" fill="rgb(226,74,27)"/><text x="1023.00" y="254.50"></text></g><g><title>strides_to_terms (mem_overlap.c) (1 samples, 0.37%)</title><rect x="1029" y="260" width="4" height="15" fill="rgb(207,130,44)"/><text x="1032.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="1033" y="228" width="5" height="15" fill="rgb(208,214,33)"/><text x="1036.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1038" y="260" width="4" height="15" fill="rgb(240,159,34)"/><text x="1041.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.74%)</title><rect x="1038" y="244" width="8" height="15" fill="rgb(232,114,15)"/><text x="1041.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1042" y="260" width="4" height="15" fill="rgb(217,215,8)"/><text x="1045.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.74%)</title><rect x="1046" y="244" width="9" height="15" fill="rgb(241,193,51)"/><text x="1049.00" y="254.50"></text></g><g><title>0x7f6dec8e2902 (libc-2.29.so) (2 samples, 0.74%)</title><rect x="1046" y="260" width="9" height="15" fill="rgb(209,100,50)"/><text x="1049.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 3.31%)</title><rect x="1020" y="212" width="39" height="15" fill="rgb(240,197,28)"/><text x="1023.00" y="222.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.84%)</title><rect x="1038" y="228" width="21" height="15" fill="rgb(240,47,10)"/><text x="1041.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.37%)</title><rect x="1055" y="244" width="4" height="15" fill="rgb(236,26,24)"/><text x="1058.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.37%)</title><rect x="1055" y="260" width="4" height="15" fill="rgb(233,10,25)"/><text x="1058.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.37%)</title><rect x="1059" y="212" width="5" height="15" fill="rgb(224,18,5)"/><text x="1062.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="1064" y="212" width="4" height="15" fill="rgb(227,219,36)"/><text x="1067.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="1064" y="228" width="4" height="15" fill="rgb(242,145,10)"/><text x="1067.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.37%)</title><rect x="1064" y="244" width="4" height="15" fill="rgb(238,170,49)"/><text x="1067.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (121 samples, 44.49%)</title><rect x="547" y="164" width="525" height="15" fill="rgb(209,159,49)"/><text x="550.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 5.15%)</title><rect x="1012" y="180" width="60" height="15" fill="rgb(219,152,3)"/><text x="1015.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 4.78%)</title><rect x="1016" y="196" width="56" height="15" fill="rgb(218,46,4)"/><text x="1019.00" y="206.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.37%)</title><rect x="1068" y="212" width="4" height="15" fill="rgb(245,152,31)"/><text x="1071.00" y="222.50"></text></g><g><title>0x7f6dec903124 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1068" y="228" width="4" height="15" fill="rgb(246,63,36)"/><text x="1071.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.37%)</title><rect x="1133" y="196" width="4" height="15" fill="rgb(227,183,5)"/><text x="1136.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.84%)</title><rect x="1120" y="180" width="22" height="15" fill="rgb(233,174,32)"/><text x="1123.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="1137" y="196" width="5" height="15" fill="rgb(239,184,41)"/><text x="1140.00" y="206.50"></text></g><g><title>__munmap (libc-2.29.so) (2 samples, 0.74%)</title><rect x="1142" y="180" width="8" height="15" fill="rgb(244,139,38)"/><text x="1145.00" y="190.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.37%)</title><rect x="1150" y="180" width="5" height="15" fill="rgb(226,228,14)"/><text x="1153.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (153 samples, 56.25%)</title><rect x="517" y="132" width="664" height="15" fill="rgb(219,28,34)"/><text x="520.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (152 samples, 55.88%)</title><rect x="521" y="148" width="660" height="15" fill="rgb(222,103,26)"/><text x="524.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (25 samples, 9.19%)</title><rect x="1072" y="164" width="109" height="15" fill="rgb(206,35,44)"/><text x="1075.00" y="174.50">check_is_fitt..</text></g><g><title>mmap64 (libc-2.29.so) (6 samples, 2.21%)</title><rect x="1155" y="180" width="26" height="15" fill="rgb(247,61,23)"/><text x="1158.00" y="190.50">m..</text></g><g><title>all (272 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,134,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (272 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(214,88,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (155 samples, 56.99%)</title><rect x="517" y="68" width="673" height="15" fill="rgb(227,56,43)"/><text x="520.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozip..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (155 samples, 56.99%)</title><rect x="517" y="84" width="673" height="15" fill="rgb(245,13,21)"/><text x="520.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_noz..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py) (155 samples, 56.99%)</title><rect x="517" y="100" width="673" height="15" fill="rgb(252,102,24)"/><text x="520.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_nozipmap...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (155 samples, 56.99%)</title><rect x="517" y="116" width="673" height="15" fill="rgb(244,141,48)"/><text x="520.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.74%)</title><rect x="1181" y="132" width="9" height="15" fill="rgb(248,226,20)"/><text x="1184.00" y="142.50"></text></g></g></svg>