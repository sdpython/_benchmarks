<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(236,215,38)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(234,81,13)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(249,139,20)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(240,82,33)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(248,17,38)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(205,117,31)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(206,206,29)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(210,12,0)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(252,85,36)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(237,125,53)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(247,132,43)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(211,160,19)"/><text x="15.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(215,30,5)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(240,187,43)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(242,15,33)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(252,6,5)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(231,170,0)"/><text x="17.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(236,56,13)"/><text x="17.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(238,17,33)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(239,208,27)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.72%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(245,180,37)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(239,156,6)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(218,184,43)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(217,21,9)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(236,158,39)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(214,193,37)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.72%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(241,160,31)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(218,176,42)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(227,212,24)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(249,40,37)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(208,95,8)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(227,157,8)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.72%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(247,6,0)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(222,157,33)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(224,202,26)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(215,62,15)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(213,228,19)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(225,200,11)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(243,115,26)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(245,126,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(236,81,51)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.72%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(208,77,3)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(233,139,6)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(237,75,37)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(241,144,50)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(218,155,39)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(252,204,53)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.72%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(241,145,36)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.72%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(213,61,42)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.72%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(227,108,7)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(244,227,11)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(236,46,4)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(212,29,27)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(218,151,33)"/><text x="17.00" y="926.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.18%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(241,191,3)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(235,136,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(205,194,1)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(224,181,6)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(238,173,36)"/><text x="13.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="18" y="356" width="2" height="15" fill="rgb(210,158,36)"/><text x="21.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="18" y="372" width="2" height="15" fill="rgb(250,181,37)"/><text x="21.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="18" y="388" width="2" height="15" fill="rgb(229,35,50)"/><text x="21.00" y="398.50"></text></g><g><title>0x7fd8ee979203 (?) (1 samples, 0.18%)</title><rect x="18" y="404" width="2" height="15" fill="rgb(232,52,10)"/><text x="21.00" y="414.50"></text></g><g><title>0x7fd8ee977cf6 (?) (1 samples, 0.18%)</title><rect x="18" y="420" width="2" height="15" fill="rgb(208,98,0)"/><text x="21.00" y="430.50"></text></g><g><title>0x7fd8ee98cb99 (?) (1 samples, 0.18%)</title><rect x="18" y="436" width="2" height="15" fill="rgb(227,40,50)"/><text x="21.00" y="446.50"></text></g><g><title>0x7fd8ee97fd36 (?) (1 samples, 0.18%)</title><rect x="18" y="452" width="2" height="15" fill="rgb(216,85,20)"/><text x="21.00" y="462.50"></text></g><g><title>0x7fd8ee97cac1 (?) (1 samples, 0.18%)</title><rect x="18" y="468" width="2" height="15" fill="rgb(253,217,47)"/><text x="21.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(221,18,50)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(216,69,30)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(205,114,20)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(216,136,17)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.08%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(220,159,25)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(244,188,3)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="292" width="2" height="15" fill="rgb(232,5,15)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="308" width="2" height="15" fill="rgb(219,86,42)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="324" width="2" height="15" fill="rgb(210,102,2)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="340" width="2" height="15" fill="rgb(251,6,17)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="356" width="2" height="15" fill="rgb(254,44,5)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="372" width="2" height="15" fill="rgb(223,104,42)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.18%)</title><rect x="20" y="388" width="2" height="15" fill="rgb(213,176,16)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="404" width="2" height="15" fill="rgb(237,213,34)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="420" width="2" height="15" fill="rgb(244,4,12)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(217,117,24)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(215,193,28)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(216,9,41)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(227,81,48)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(239,225,10)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(206,37,4)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(224,159,1)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(231,192,12)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(251,40,0)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.18%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(207,25,14)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(236,126,4)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(205,212,13)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(239,84,34)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(232,71,3)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(238,174,32)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(219,2,46)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(219,202,36)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(216,80,16)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(241,111,13)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(246,160,49)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(232,176,51)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.18%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(236,28,50)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(245,229,33)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(252,103,49)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(242,59,33)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(209,63,50)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(246,56,30)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(229,132,34)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(214,40,2)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.18%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(251,228,43)"/><text x="23.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(218,135,39)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(240,106,51)"/><text x="23.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(229,83,5)"/><text x="23.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(217,105,19)"/><text x="23.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(231,97,2)"/><text x="23.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(228,33,36)"/><text x="23.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(207,137,52)"/><text x="23.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(224,196,30)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(236,135,33)"/><text x="23.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(239,161,32)"/><text x="23.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(240,30,27)"/><text x="23.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(212,178,16)"/><text x="23.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(243,217,14)"/><text x="23.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(253,222,35)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(208,200,9)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(215,155,26)"/><text x="23.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(234,208,23)"/><text x="23.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(216,40,54)"/><text x="23.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(216,156,34)"/><text x="23.00" y="1214.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(226,201,46)"/><text x="23.00" y="1230.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(234,202,4)"/><text x="23.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(252,113,35)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(251,131,5)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(236,35,51)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(250,212,37)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(224,73,41)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.18%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(240,77,40)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(216,63,12)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(250,72,41)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(221,12,33)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(217,65,31)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(226,148,34)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(250,76,28)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(238,144,50)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(253,40,37)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(211,38,26)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(236,197,16)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(219,211,35)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.18%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(243,55,49)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(253,39,38)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(251,106,46)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(217,108,10)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(208,198,8)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(248,224,33)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(225,124,47)"/><text x="25.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(227,149,45)"/><text x="25.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(223,170,31)"/><text x="25.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(239,60,21)"/><text x="25.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(239,114,52)"/><text x="25.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(209,223,2)"/><text x="25.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.18%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(217,220,0)"/><text x="25.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(242,132,24)"/><text x="25.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(222,114,4)"/><text x="25.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(229,103,35)"/><text x="25.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(211,172,52)"/><text x="25.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(236,109,29)"/><text x="25.00" y="1678.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1684" width="2" height="15" fill="rgb(247,200,5)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1700" width="2" height="15" fill="rgb(252,167,41)"/><text x="25.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1716" width="2" height="15" fill="rgb(252,190,11)"/><text x="25.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1732" width="2" height="15" fill="rgb(238,112,35)"/><text x="25.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1748" width="2" height="15" fill="rgb(224,210,32)"/><text x="25.00" y="1758.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1764" width="2" height="15" fill="rgb(226,185,37)"/><text x="25.00" y="1774.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1780" width="2" height="15" fill="rgb(224,211,38)"/><text x="25.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="484" width="4" height="15" fill="rgb(242,162,50)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="500" width="4" height="15" fill="rgb(217,191,15)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="516" width="4" height="15" fill="rgb(224,106,25)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="532" width="4" height="15" fill="rgb(241,194,39)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="548" width="4" height="15" fill="rgb(216,145,51)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="564" width="4" height="15" fill="rgb(218,151,18)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.36%)</title><rect x="22" y="580" width="4" height="15" fill="rgb(228,113,19)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="596" width="4" height="15" fill="rgb(252,189,20)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="612" width="4" height="15" fill="rgb(233,24,20)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="628" width="4" height="15" fill="rgb(241,102,29)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="644" width="4" height="15" fill="rgb(231,139,1)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="660" width="4" height="15" fill="rgb(216,6,29)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.36%)</title><rect x="22" y="676" width="4" height="15" fill="rgb(244,172,34)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="692" width="4" height="15" fill="rgb(246,35,9)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="708" width="4" height="15" fill="rgb(246,172,38)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(239,132,52)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(242,188,40)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(245,205,44)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.36%)</title><rect x="22" y="772" width="4" height="15" fill="rgb(219,209,3)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="788" width="4" height="15" fill="rgb(232,4,6)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="804" width="4" height="15" fill="rgb(206,115,38)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="820" width="4" height="15" fill="rgb(241,66,43)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="836" width="4" height="15" fill="rgb(232,205,10)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="852" width="4" height="15" fill="rgb(249,128,31)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.36%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(209,63,21)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(207,154,38)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(245,180,19)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(245,32,19)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(225,36,41)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(231,25,47)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(222,202,14)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(226,92,53)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(209,164,47)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.36%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(219,173,37)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(216,121,26)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(251,193,38)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(234,49,5)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(229,165,38)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(237,108,49)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.36%)</title><rect x="22" y="1108" width="4" height="15" fill="rgb(209,151,46)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(245,107,31)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(234,203,52)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(220,16,32)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(225,13,11)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(244,167,40)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(207,86,22)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(218,73,9)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.18%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(231,95,17)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(224,152,41)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(222,99,12)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(214,202,13)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(233,164,18)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(217,99,42)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(248,223,32)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(206,71,1)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.18%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(219,12,51)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(205,176,13)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(239,93,12)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(249,195,34)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(228,39,29)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(240,149,32)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(254,32,31)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(218,194,11)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(226,229,9)"/><text x="27.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(205,121,3)"/><text x="27.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(210,32,23)"/><text x="27.00" y="1534.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(225,91,41)"/><text x="27.00" y="1550.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(218,94,33)"/><text x="27.00" y="1566.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(221,165,50)"/><text x="27.00" y="1582.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(244,177,11)"/><text x="27.00" y="1598.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(208,122,48)"/><text x="27.00" y="1614.50"></text></g><g><title>0x7fd8fe8d98a4 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(208,37,53)"/><text x="27.00" y="1630.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.18%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(243,170,27)"/><text x="29.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(218,80,23)"/><text x="29.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(207,27,36)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(221,183,37)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(234,140,11)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(214,16,38)"/><text x="29.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(225,142,9)"/><text x="29.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(213,16,39)"/><text x="29.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.18%)</title><rect x="26" y="1252" width="3" height="15" fill="rgb(220,93,19)"/><text x="29.00" y="1262.50"></text></g><g><title>Expanding (pandas/core/window.py) (1 samples, 0.18%)</title><rect x="26" y="1268" width="3" height="15" fill="rgb(254,182,16)"/><text x="29.00" y="1278.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.18%)</title><rect x="26" y="1284" width="3" height="15" fill="rgb(227,62,43)"/><text x="29.00" y="1294.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.18%)</title><rect x="26" y="1300" width="3" height="15" fill="rgb(226,87,4)"/><text x="29.00" y="1310.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="26" y="1316" width="3" height="15" fill="rgb(252,104,0)"/><text x="29.00" y="1326.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.18%)</title><rect x="29" y="1940" width="2" height="15" fill="rgb(234,197,20)"/><text x="32.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.18%)</title><rect x="29" y="1956" width="2" height="15" fill="rgb(212,108,29)"/><text x="32.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.54%)</title><rect x="26" y="1012" width="7" height="15" fill="rgb(254,126,13)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="26" y="1028" width="7" height="15" fill="rgb(238,131,27)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="26" y="1044" width="7" height="15" fill="rgb(232,41,30)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="26" y="1060" width="7" height="15" fill="rgb(237,21,46)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.54%)</title><rect x="26" y="1076" width="7" height="15" fill="rgb(215,79,21)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="26" y="1092" width="7" height="15" fill="rgb(241,63,32)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.54%)</title><rect x="26" y="1108" width="7" height="15" fill="rgb(216,154,32)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(216,157,6)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(228,181,54)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(246,104,21)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(254,207,25)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(221,193,37)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.36%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(225,94,50)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(216,141,5)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1236" width="4" height="15" fill="rgb(242,186,49)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1252" width="4" height="15" fill="rgb(210,139,42)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1268" width="4" height="15" fill="rgb(232,67,21)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1284" width="4" height="15" fill="rgb(251,179,3)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.36%)</title><rect x="29" y="1300" width="4" height="15" fill="rgb(206,107,28)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1316" width="4" height="15" fill="rgb(246,128,14)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1332" width="4" height="15" fill="rgb(209,179,14)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1348" width="4" height="15" fill="rgb(222,55,34)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1364" width="4" height="15" fill="rgb(211,59,36)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1380" width="4" height="15" fill="rgb(236,150,33)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.36%)</title><rect x="29" y="1396" width="4" height="15" fill="rgb(235,208,35)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1412" width="4" height="15" fill="rgb(245,160,9)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1428" width="4" height="15" fill="rgb(206,148,0)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1444" width="4" height="15" fill="rgb(229,4,6)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1460" width="4" height="15" fill="rgb(243,54,47)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1476" width="4" height="15" fill="rgb(237,178,40)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.36%)</title><rect x="29" y="1492" width="4" height="15" fill="rgb(250,38,17)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1508" width="4" height="15" fill="rgb(230,58,45)"/><text x="32.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1524" width="4" height="15" fill="rgb(206,57,25)"/><text x="32.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(220,102,2)"/><text x="32.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(214,150,5)"/><text x="32.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(206,78,21)"/><text x="32.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.36%)</title><rect x="29" y="1588" width="4" height="15" fill="rgb(226,213,40)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1604" width="4" height="15" fill="rgb(254,188,22)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1620" width="4" height="15" fill="rgb(244,3,49)"/><text x="32.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(246,84,25)"/><text x="32.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(241,229,4)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(225,211,8)"/><text x="32.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.36%)</title><rect x="29" y="1684" width="4" height="15" fill="rgb(227,224,25)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1700" width="4" height="15" fill="rgb(237,200,1)"/><text x="32.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1716" width="4" height="15" fill="rgb(245,159,25)"/><text x="32.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1732" width="4" height="15" fill="rgb(233,201,29)"/><text x="32.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1748" width="4" height="15" fill="rgb(252,44,41)"/><text x="32.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1764" width="4" height="15" fill="rgb(215,212,1)"/><text x="32.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.36%)</title><rect x="29" y="1780" width="4" height="15" fill="rgb(220,190,43)"/><text x="32.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1796" width="4" height="15" fill="rgb(228,64,10)"/><text x="32.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1812" width="4" height="15" fill="rgb(253,123,44)"/><text x="32.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1828" width="4" height="15" fill="rgb(250,139,26)"/><text x="32.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="29" y="1844" width="4" height="15" fill="rgb(229,21,7)"/><text x="32.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="29" y="1860" width="4" height="15" fill="rgb(215,77,9)"/><text x="32.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.36%)</title><rect x="29" y="1876" width="4" height="15" fill="rgb(254,108,3)"/><text x="32.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (2 samples, 0.36%)</title><rect x="29" y="1892" width="4" height="15" fill="rgb(227,145,49)"/><text x="32.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (2 samples, 0.36%)</title><rect x="29" y="1908" width="4" height="15" fill="rgb(235,135,22)"/><text x="32.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (2 samples, 0.36%)</title><rect x="29" y="1924" width="4" height="15" fill="rgb(222,34,15)"/><text x="32.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.18%)</title><rect x="31" y="1940" width="2" height="15" fill="rgb(234,60,6)"/><text x="34.00" y="1950.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.18%)</title><rect x="31" y="1956" width="2" height="15" fill="rgb(214,82,25)"/><text x="34.00" y="1966.50"></text></g><g><title>_finddoc (inspect.py) (1 samples, 0.18%)</title><rect x="31" y="1972" width="2" height="15" fill="rgb(232,78,9)"/><text x="34.00" y="1982.50"></text></g><g><title>_findclass (inspect.py) (1 samples, 0.18%)</title><rect x="31" y="1988" width="2" height="15" fill="rgb(232,38,49)"/><text x="34.00" y="1998.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.72%)</title><rect x="26" y="724" width="9" height="15" fill="rgb(219,199,29)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="740" width="9" height="15" fill="rgb(217,178,20)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="756" width="9" height="15" fill="rgb(224,60,19)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="772" width="9" height="15" fill="rgb(225,13,45)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="26" y="788" width="9" height="15" fill="rgb(218,173,50)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="804" width="9" height="15" fill="rgb(243,50,48)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.72%)</title><rect x="26" y="820" width="9" height="15" fill="rgb(240,161,22)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="836" width="9" height="15" fill="rgb(253,159,32)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="852" width="9" height="15" fill="rgb(236,186,52)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="868" width="9" height="15" fill="rgb(245,129,39)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="26" y="884" width="9" height="15" fill="rgb(211,144,35)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="900" width="9" height="15" fill="rgb(210,198,34)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.72%)</title><rect x="26" y="916" width="9" height="15" fill="rgb(231,166,28)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="932" width="9" height="15" fill="rgb(225,53,3)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="948" width="9" height="15" fill="rgb(213,170,11)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="964" width="9" height="15" fill="rgb(225,22,22)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="26" y="980" width="9" height="15" fill="rgb(215,4,18)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="26" y="996" width="9" height="15" fill="rgb(237,173,18)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.18%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(247,62,1)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(246,20,49)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(207,219,9)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(240,218,39)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(245,170,9)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(236,25,41)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/series.py) (1 samples, 0.18%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(209,146,9)"/><text x="36.00" y="1118.50"></text></g><g><title>SparseSeries (pandas/core/sparse/series.py) (1 samples, 0.18%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(250,95,11)"/><text x="36.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.18%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(251,182,43)"/><text x="36.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.18%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(240,87,38)"/><text x="36.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.18%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(232,185,42)"/><text x="36.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.18%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(232,101,14)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.26%)</title><rect x="22" y="436" width="15" height="15" fill="rgb(240,85,32)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.26%)</title><rect x="22" y="452" width="15" height="15" fill="rgb(242,166,15)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.26%)</title><rect x="22" y="468" width="15" height="15" fill="rgb(211,39,10)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="484" width="11" height="15" fill="rgb(228,102,21)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="26" y="500" width="11" height="15" fill="rgb(221,105,42)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="516" width="11" height="15" fill="rgb(253,131,19)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 0.90%)</title><rect x="26" y="532" width="11" height="15" fill="rgb(209,62,23)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="548" width="11" height="15" fill="rgb(222,140,10)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="564" width="11" height="15" fill="rgb(250,147,41)"/><text x="29.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="580" width="11" height="15" fill="rgb(248,56,14)"/><text x="29.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="26" y="596" width="11" height="15" fill="rgb(228,54,24)"/><text x="29.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="612" width="11" height="15" fill="rgb(234,211,31)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 0.90%)</title><rect x="26" y="628" width="11" height="15" fill="rgb(210,227,30)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="644" width="11" height="15" fill="rgb(228,114,31)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="660" width="11" height="15" fill="rgb(233,147,38)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="676" width="11" height="15" fill="rgb(211,106,53)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="26" y="692" width="11" height="15" fill="rgb(228,193,17)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="26" y="708" width="11" height="15" fill="rgb(224,193,8)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.18%)</title><rect x="35" y="724" width="2" height="15" fill="rgb(224,99,3)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="740" width="2" height="15" fill="rgb(212,136,29)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="756" width="2" height="15" fill="rgb(223,108,0)"/><text x="38.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="772" width="2" height="15" fill="rgb(254,59,30)"/><text x="38.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="35" y="788" width="2" height="15" fill="rgb(233,100,33)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="804" width="2" height="15" fill="rgb(220,228,46)"/><text x="38.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py) (1 samples, 0.18%)</title><rect x="35" y="820" width="2" height="15" fill="rgb(253,124,29)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="836" width="2" height="15" fill="rgb(237,25,43)"/><text x="38.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(241,92,26)"/><text x="38.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(250,59,27)"/><text x="38.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="35" y="884" width="2" height="15" fill="rgb(232,42,45)"/><text x="38.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="35" y="900" width="2" height="15" fill="rgb(214,150,50)"/><text x="38.00" y="910.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="35" y="916" width="2" height="15" fill="rgb(220,159,1)"/><text x="38.00" y="926.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(220,100,40)"/><text x="38.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.18%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(212,97,1)"/><text x="38.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(234,53,38)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(212,223,52)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(206,23,8)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.51%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(214,180,51)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(225,219,34)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py) (14 samples, 2.51%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(211,105,39)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(222,98,35)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.51%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(244,21,49)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="196" width="17" height="15" fill="rgb(240,195,20)"/><text x="25.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.44%)</title><rect x="22" y="212" width="17" height="15" fill="rgb(218,62,41)"/><text x="25.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="228" width="17" height="15" fill="rgb(246,207,14)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 1.44%)</title><rect x="22" y="244" width="17" height="15" fill="rgb(230,85,0)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="260" width="17" height="15" fill="rgb(219,10,28)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="276" width="17" height="15" fill="rgb(220,214,7)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="292" width="17" height="15" fill="rgb(251,127,29)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.44%)</title><rect x="22" y="308" width="17" height="15" fill="rgb(221,172,24)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="324" width="17" height="15" fill="rgb(229,149,21)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.44%)</title><rect x="22" y="340" width="17" height="15" fill="rgb(241,160,21)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="356" width="17" height="15" fill="rgb(248,80,16)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="372" width="17" height="15" fill="rgb(217,103,22)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="388" width="17" height="15" fill="rgb(232,96,10)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.44%)</title><rect x="22" y="404" width="17" height="15" fill="rgb(222,93,19)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.44%)</title><rect x="22" y="420" width="17" height="15" fill="rgb(217,194,18)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.18%)</title><rect x="37" y="436" width="2" height="15" fill="rgb(230,109,44)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="452" width="2" height="15" fill="rgb(244,48,31)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="468" width="2" height="15" fill="rgb(212,35,43)"/><text x="40.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="484" width="2" height="15" fill="rgb(245,113,1)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="37" y="500" width="2" height="15" fill="rgb(248,82,54)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="516" width="2" height="15" fill="rgb(254,209,30)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.18%)</title><rect x="37" y="532" width="2" height="15" fill="rgb(237,74,9)"/><text x="40.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="548" width="2" height="15" fill="rgb(230,122,49)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="564" width="2" height="15" fill="rgb(225,139,35)"/><text x="40.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="580" width="2" height="15" fill="rgb(249,153,45)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="596" width="2" height="15" fill="rgb(249,31,44)"/><text x="40.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="612" width="2" height="15" fill="rgb(241,40,29)"/><text x="40.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="37" y="628" width="2" height="15" fill="rgb(225,146,16)"/><text x="40.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="37" y="644" width="2" height="15" fill="rgb(207,188,38)"/><text x="40.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.18%)</title><rect x="37" y="660" width="2" height="15" fill="rgb(237,102,18)"/><text x="40.00" y="670.50"></text></g><g><title>0x7fd8fe8d6bc6 (libc-2.29.so) (3 samples, 0.54%)</title><rect x="69" y="132" width="6" height="15" fill="rgb(245,48,26)"/><text x="72.00" y="142.50"></text></g><g><title>0x7fd8fe8d6c20 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="75" y="132" width="2" height="15" fill="rgb(240,68,2)"/><text x="78.00" y="142.50"></text></g><g><title>0x7fd8fe8d6c4d (libc-2.29.so) (1 samples, 0.18%)</title><rect x="77" y="132" width="2" height="15" fill="rgb(251,128,15)"/><text x="80.00" y="142.50"></text></g><g><title>0x7fd8fe8d6aa4 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="79" y="148" width="3" height="15" fill="rgb(232,9,40)"/><text x="82.00" y="158.50"></text></g><g><title>0x7fd8fe8d6c73 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="79" y="132" width="5" height="15" fill="rgb(207,144,24)"/><text x="82.00" y="142.50"></text></g><g><title>0x7fd8fe8d6aaf (libc-2.29.so) (1 samples, 0.18%)</title><rect x="82" y="148" width="2" height="15" fill="rgb(214,210,30)"/><text x="85.00" y="158.50"></text></g><g><title>0x7fd8fe8d6c98 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="84" y="132" width="2" height="15" fill="rgb(233,227,48)"/><text x="87.00" y="142.50"></text></g><g><title>0x7fd8fe8d7eb0 (libc-2.29.so) (9 samples, 1.62%)</title><rect x="69" y="116" width="19" height="15" fill="rgb(241,181,14)"/><text x="72.00" y="126.50"></text></g><g><title>0x7fd8fe8d6ca7 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="86" y="132" width="2" height="15" fill="rgb(228,95,46)"/><text x="89.00" y="142.50"></text></g><g><title>0x7fd8fe8d6ad5 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="86" y="148" width="2" height="15" fill="rgb(247,152,14)"/><text x="89.00" y="158.50"></text></g><g><title>0x7fd8be91aff9 (?) (1 samples, 0.18%)</title><rect x="90" y="212" width="2" height="15" fill="rgb(229,22,39)"/><text x="93.00" y="222.50"></text></g><g><title>0x7fd8be915ef6 (?) (1 samples, 0.18%)</title><rect x="90" y="228" width="2" height="15" fill="rgb(214,151,16)"/><text x="93.00" y="238.50"></text></g><g><title>0x7fd8be90a962 (?) (1 samples, 0.18%)</title><rect x="90" y="244" width="2" height="15" fill="rgb(215,130,21)"/><text x="93.00" y="254.50"></text></g><g><title>0x7fd8be93e7a7 (?) (1 samples, 0.18%)</title><rect x="90" y="260" width="2" height="15" fill="rgb(229,212,2)"/><text x="93.00" y="270.50"></text></g><g><title>0x7fd8be93e379 (?) (1 samples, 0.18%)</title><rect x="90" y="276" width="2" height="15" fill="rgb(234,107,44)"/><text x="93.00" y="286.50"></text></g><g><title>0x7fd8bed9c8b8 (?) (1 samples, 0.18%)</title><rect x="90" y="292" width="2" height="15" fill="rgb(219,198,17)"/><text x="93.00" y="302.50"></text></g><g><title>0x7fd8bed9ac7f (?) (1 samples, 0.18%)</title><rect x="90" y="308" width="2" height="15" fill="rgb(232,159,32)"/><text x="93.00" y="318.50"></text></g><g><title>0x7fd8bedad99c (?) (1 samples, 0.18%)</title><rect x="90" y="324" width="2" height="15" fill="rgb(243,207,33)"/><text x="93.00" y="334.50"></text></g><g><title>0x7fd8beb48814 (?) (1 samples, 0.18%)</title><rect x="90" y="340" width="2" height="15" fill="rgb(222,64,17)"/><text x="93.00" y="350.50"></text></g><g><title>0x7fd8fea599c8 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="90" y="356" width="2" height="15" fill="rgb(217,68,28)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.26%)</title><rect x="96" y="340" width="15" height="15" fill="rgb(225,90,4)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.26%)</title><rect x="96" y="356" width="15" height="15" fill="rgb(216,62,4)"/><text x="99.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.26%)</title><rect x="96" y="372" width="15" height="15" fill="rgb(215,105,1)"/><text x="99.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="107" y="388" width="4" height="15" fill="rgb(235,112,53)"/><text x="110.00" y="398.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.72%)</title><rect x="111" y="340" width="9" height="15" fill="rgb(206,41,15)"/><text x="114.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="118" y="356" width="2" height="15" fill="rgb(243,176,37)"/><text x="121.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.33%)</title><rect x="120" y="340" width="27" height="15" fill="rgb(220,209,39)"/><text x="123.00" y="350.50">o..</text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="340" width="2" height="15" fill="rgb(245,93,9)"/><text x="150.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(235,142,42)"/><text x="150.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="372" width="2" height="15" fill="rgb(209,80,21)"/><text x="150.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="388" width="2" height="15" fill="rgb(222,28,9)"/><text x="150.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="404" width="2" height="15" fill="rgb(238,80,19)"/><text x="150.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="420" width="2" height="15" fill="rgb(210,91,1)"/><text x="150.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="436" width="2" height="15" fill="rgb(245,140,41)"/><text x="150.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="147" y="452" width="2" height="15" fill="rgb(236,62,30)"/><text x="150.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.08%)</title><rect x="149" y="340" width="13" height="15" fill="rgb(248,120,47)"/><text x="152.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.80%)</title><rect x="162" y="340" width="21" height="15" fill="rgb(243,93,3)"/><text x="165.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.80%)</title><rect x="162" y="356" width="21" height="15" fill="rgb(208,126,32)"/><text x="165.00" y="366.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.13%)</title><rect x="183" y="340" width="49" height="15" fill="rgb(229,191,10)"/><text x="186.00" y="350.50">onnx..</text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.13%)</title><rect x="183" y="356" width="49" height="15" fill="rgb(234,210,41)"/><text x="186.00" y="366.50">onnx..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="372" width="49" height="15" fill="rgb(252,213,33)"/><text x="186.00" y="382.50">cbla..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="388" width="49" height="15" fill="rgb(209,91,1)"/><text x="186.00" y="398.50">sgem..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="404" width="49" height="15" fill="rgb(227,179,32)"/><text x="186.00" y="414.50">mkl_..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="420" width="49" height="15" fill="rgb(206,10,52)"/><text x="186.00" y="430.50">mkl_..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="436" width="49" height="15" fill="rgb(253,161,26)"/><text x="186.00" y="446.50">mkl_..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="452" width="49" height="15" fill="rgb(223,35,45)"/><text x="186.00" y="462.50">mkl_..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (23 samples, 4.13%)</title><rect x="183" y="468" width="49" height="15" fill="rgb(210,101,21)"/><text x="186.00" y="478.50">mkl_..</text></g><g><title>0x7fd8fea56e12 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="234" y="356" width="2" height="15" fill="rgb(220,143,41)"/><text x="237.00" y="366.50"></text></g><g><title>0x7fd8fea56e62 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="236" y="356" width="4" height="15" fill="rgb(241,41,53)"/><text x="239.00" y="366.50"></text></g><g><title>0x7fd8fea56ea2 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="240" y="356" width="5" height="15" fill="rgb(224,210,45)"/><text x="243.00" y="366.50"></text></g><g><title>0x7fd8fea599c8 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(219,17,12)"/><text x="248.00" y="366.50"></text></g><g><title>0x7fd8fea59a1d (libm-2.29.so) (1 samples, 0.18%)</title><rect x="247" y="356" width="2" height="15" fill="rgb(226,116,24)"/><text x="250.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="232" y="340" width="23" height="15" fill="rgb(234,3,0)"/><text x="235.00" y="350.50">o..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="249" y="356" width="6" height="15" fill="rgb(209,39,6)"/><text x="252.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="253" y="372" width="2" height="15" fill="rgb(252,195,53)"/><text x="256.00" y="382.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="255" y="340" width="11" height="15" fill="rgb(245,157,1)"/><text x="258.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="255" y="356" width="11" height="15" fill="rgb(234,2,27)"/><text x="258.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="255" y="372" width="11" height="15" fill="rgb(216,46,31)"/><text x="258.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="262" y="388" width="4" height="15" fill="rgb(250,166,36)"/><text x="265.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.44%)</title><rect x="266" y="372" width="17" height="15" fill="rgb(226,186,26)"/><text x="269.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="266" y="340" width="19" height="15" fill="rgb(228,93,21)"/><text x="269.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.62%)</title><rect x="266" y="356" width="19" height="15" fill="rgb(254,189,37)"/><text x="269.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="283" y="372" width="2" height="15" fill="rgb(247,139,46)"/><text x="286.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="283" y="388" width="2" height="15" fill="rgb(245,208,7)"/><text x="286.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="283" y="404" width="2" height="15" fill="rgb(228,106,44)"/><text x="286.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="283" y="420" width="2" height="15" fill="rgb(240,223,9)"/><text x="286.00" y="430.50"></text></g><g><title>0x7fd8be8e1930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="295" y="356" width="3" height="15" fill="rgb(235,50,2)"/><text x="298.00" y="366.50"></text></g><g><title>0x7fd8fe8d8b24 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(206,153,53)"/><text x="337.00" y="398.50"></text></g><g><title>0x7fd8fe8d8b49 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="336" y="388" width="4" height="15" fill="rgb(207,36,3)"/><text x="339.00" y="398.50"></text></g><g><title>0x7fd8fe8d8b61 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(253,216,36)"/><text x="343.00" y="398.50"></text></g><g><title>0x7fd8fe8d8fde (libc-2.29.so) (2 samples, 0.36%)</title><rect x="342" y="388" width="4" height="15" fill="rgb(252,128,8)"/><text x="345.00" y="398.50"></text></g><g><title>0x7fd8fe8d9395 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="346" y="388" width="2" height="15" fill="rgb(213,118,13)"/><text x="349.00" y="398.50"></text></g><g><title>0x7fd8fe8d93ae (libc-2.29.so) (1 samples, 0.18%)</title><rect x="348" y="388" width="3" height="15" fill="rgb(224,43,18)"/><text x="351.00" y="398.50"></text></g><g><title>0x7fd8fe8d93d1 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="351" y="388" width="2" height="15" fill="rgb(231,16,43)"/><text x="354.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (27 samples, 4.85%)</title><rect x="298" y="356" width="57" height="15" fill="rgb(229,14,3)"/><text x="301.00" y="366.50">operat..</text></g><g><title>malloc (libc-2.29.so) (26 samples, 4.67%)</title><rect x="300" y="372" width="55" height="15" fill="rgb(253,149,31)"/><text x="303.00" y="382.50">mallo..</text></g><g><title>0x7fd8fe8d9440 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="353" y="388" width="2" height="15" fill="rgb(215,120,23)"/><text x="356.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.54%)</title><rect x="355" y="356" width="6" height="15" fill="rgb(250,147,7)"/><text x="358.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 22.80%)</title><rect x="94" y="308" width="269" height="15" fill="rgb(230,187,4)"/><text x="97.00" y="318.50">onnxruntime::utils::ExecuteGraphImp..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 22.80%)</title><rect x="94" y="324" width="269" height="15" fill="rgb(230,129,3)"/><text x="97.00" y="334.50">onnxruntime::SequentialExecutor::Ex..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 6.64%)</title><rect x="285" y="340" width="78" height="15" fill="rgb(207,66,24)"/><text x="288.00" y="350.50">onnxrunti..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="361" y="356" width="2" height="15" fill="rgb(237,163,6)"/><text x="364.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 22.98%)</title><rect x="94" y="260" width="271" height="15" fill="rgb(242,199,16)"/><text x="97.00" y="270.50">onnxruntime::InferenceSession::Run (..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 22.98%)</title><rect x="94" y="276" width="271" height="15" fill="rgb(207,169,43)"/><text x="97.00" y="286.50">onnxruntime::InferenceSession::Run (..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 22.98%)</title><rect x="94" y="292" width="271" height="15" fill="rgb(236,199,0)"/><text x="97.00" y="302.50">onnxruntime::utils::ExecuteGraph (on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(233,141,33)"/><text x="366.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::SetDeviceCopyChecks (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="363" y="324" width="2" height="15" fill="rgb(224,26,13)"/><text x="366.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="365" y="276" width="3" height="15" fill="rgb(238,34,51)"/><text x="368.00" y="286.50"></text></g><g><title>0x7fd8fe8d7902 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="365" y="292" width="3" height="15" fill="rgb(247,34,0)"/><text x="368.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="365" y="260" width="5" height="15" fill="rgb(225,2,29)"/><text x="368.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="368" y="276" width="2" height="15" fill="rgb(208,213,16)"/><text x="371.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="420" y="276" width="24" height="15" fill="rgb(213,169,33)"/><text x="423.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 6.64%)</title><rect x="370" y="260" width="78" height="15" fill="rgb(207,132,10)"/><text x="373.00" y="270.50">pybind11:..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.36%)</title><rect x="444" y="276" width="4" height="15" fill="rgb(207,97,31)"/><text x="447.00" y="286.50"></text></g><g><title>0x7fd8fe8d790e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="450" y="292" width="2" height="15" fill="rgb(226,147,1)"/><text x="453.00" y="302.50"></text></g><g><title>0x7fd8fe8d7961 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="452" y="292" width="2" height="15" fill="rgb(219,47,50)"/><text x="455.00" y="302.50"></text></g><g><title>0x7fd8fe8d79b3 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(219,69,40)"/><text x="457.00" y="302.50"></text></g><g><title>0x7fd8fe8d7d02 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="457" y="292" width="4" height="15" fill="rgb(250,40,37)"/><text x="460.00" y="302.50"></text></g><g><title>0x7fd8fe8d7d07 (libc-2.29.so) (4 samples, 0.72%)</title><rect x="461" y="292" width="8" height="15" fill="rgb(243,205,49)"/><text x="464.00" y="302.50"></text></g><g><title>0x7fd8fe8d7945 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="469" y="308" width="2" height="15" fill="rgb(224,193,0)"/><text x="472.00" y="318.50"></text></g><g><title>0x7fd8fe8d7d07 (libc-2.29.so) (3 samples, 0.54%)</title><rect x="471" y="308" width="7" height="15" fill="rgb(231,115,46)"/><text x="474.00" y="318.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (208 samples, 37.34%)</title><rect x="39" y="68" width="441" height="15" fill="rgb(244,38,38)"/><text x="42.00" y="78.50">profile_ort (bench_BernoulliNB_default_m_cl_1000_50_12_float..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (208 samples, 37.34%)</title><rect x="39" y="84" width="441" height="15" fill="rgb(236,172,47)"/><text x="42.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_flo..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (208 samples, 37.34%)</title><rect x="39" y="100" width="441" height="15" fill="rgb(253,57,53)"/><text x="42.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (185 samples, 33.21%)</title><rect x="88" y="116" width="392" height="15" fill="rgb(236,74,18)"/><text x="91.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (185 samples, 33.21%)</title><rect x="88" y="132" width="392" height="15" fill="rgb(248,128,40)"/><text x="91.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (185 samples, 33.21%)</title><rect x="88" y="148" width="392" height="15" fill="rgb(212,223,49)"/><text x="91.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (185 samples, 33.21%)</title><rect x="88" y="164" width="392" height="15" fill="rgb(218,217,32)"/><text x="91.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (184 samples, 33.03%)</title><rect x="90" y="180" width="390" height="15" fill="rgb(254,18,48)"/><text x="93.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (184 samples, 33.03%)</title><rect x="90" y="196" width="390" height="15" fill="rgb(211,81,31)"/><text x="93.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (183 samples, 32.85%)</title><rect x="92" y="212" width="388" height="15" fill="rgb(223,146,26)"/><text x="95.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (183 samples, 32.85%)</title><rect x="92" y="228" width="388" height="15" fill="rgb(221,158,8)"/><text x="95.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (183 samples, 32.85%)</title><rect x="92" y="244" width="388" height="15" fill="rgb(234,78,49)"/><text x="95.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.69%)</title><rect x="448" y="260" width="32" height="15" fill="rgb(231,161,32)"/><text x="451.00" y="270.50">st..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.69%)</title><rect x="448" y="276" width="32" height="15" fill="rgb(216,101,2)"/><text x="451.00" y="286.50">on..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.90%)</title><rect x="469" y="292" width="11" height="15" fill="rgb(232,117,8)"/><text x="472.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="478" y="308" width="2" height="15" fill="rgb(236,96,12)"/><text x="481.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.18%)</title><rect x="535" y="196" width="2" height="15" fill="rgb(212,213,7)"/><text x="538.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.18%)</title><rect x="548" y="228" width="2" height="15" fill="rgb(213,81,37)"/><text x="551.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.18%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(220,68,44)"/><text x="551.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.18%)</title><rect x="548" y="260" width="2" height="15" fill="rgb(214,184,21)"/><text x="551.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (6 samples, 1.08%)</title><rect x="550" y="276" width="12" height="15" fill="rgb(242,216,19)"/><text x="553.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (6 samples, 1.08%)</title><rect x="550" y="292" width="12" height="15" fill="rgb(215,202,12)"/><text x="553.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (5 samples, 0.90%)</title><rect x="552" y="308" width="10" height="15" fill="rgb(226,31,52)"/><text x="555.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (4 samples, 0.72%)</title><rect x="554" y="324" width="8" height="15" fill="rgb(248,169,32)"/><text x="557.00" y="334.50"></text></g><g><title>0x7fd8fdaf97c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="560" y="340" width="2" height="15" fill="rgb(205,76,40)"/><text x="563.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.18%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(226,149,38)"/><text x="565.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (4 samples, 0.72%)</title><rect x="562" y="292" width="9" height="15" fill="rgb(227,11,41)"/><text x="565.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (4 samples, 0.72%)</title><rect x="562" y="308" width="9" height="15" fill="rgb(252,55,19)"/><text x="565.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (4 samples, 0.72%)</title><rect x="562" y="324" width="9" height="15" fill="rgb(227,167,25)"/><text x="565.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (3 samples, 0.54%)</title><rect x="565" y="340" width="6" height="15" fill="rgb(237,93,51)"/><text x="568.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="569" y="356" width="2" height="15" fill="rgb(233,85,52)"/><text x="572.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (19 samples, 3.41%)</title><rect x="545" y="212" width="41" height="15" fill="rgb(220,3,30)"/><text x="548.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c) (17 samples, 3.05%)</title><rect x="550" y="228" width="36" height="15" fill="rgb(254,25,16)"/><text x="553.00" y="238.50">arr..</text></g><g><title>prepare_index (mapping.c) (17 samples, 3.05%)</title><rect x="550" y="244" width="36" height="15" fill="rgb(218,206,13)"/><text x="553.00" y="254.50">pre..</text></g><g><title>PyArray_FromAny (ctors.c) (17 samples, 3.05%)</title><rect x="550" y="260" width="36" height="15" fill="rgb(235,219,53)"/><text x="553.00" y="270.50">PyA..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (11 samples, 1.97%)</title><rect x="562" y="276" width="24" height="15" fill="rgb(210,58,15)"/><text x="565.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (7 samples, 1.26%)</title><rect x="571" y="292" width="15" height="15" fill="rgb(230,132,7)"/><text x="574.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (7 samples, 1.26%)</title><rect x="571" y="308" width="15" height="15" fill="rgb(205,185,7)"/><text x="574.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="586" y="292" width="2" height="15" fill="rgb(248,227,4)"/><text x="589.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (16 samples, 2.87%)</title><rect x="586" y="260" width="34" height="15" fill="rgb(254,228,5)"/><text x="589.00" y="270.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (16 samples, 2.87%)</title><rect x="586" y="276" width="34" height="15" fill="rgb(205,27,14)"/><text x="589.00" y="286.50">ra..</text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (15 samples, 2.69%)</title><rect x="588" y="292" width="32" height="15" fill="rgb(208,38,53)"/><text x="591.00" y="302.50">_a..</text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="620" y="260" width="2" height="15" fill="rgb(206,183,34)"/><text x="623.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (18 samples, 3.23%)</title><rect x="586" y="212" width="38" height="15" fill="rgb(213,217,54)"/><text x="589.00" y="222.50">_ru..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (18 samples, 3.23%)</title><rect x="586" y="228" width="38" height="15" fill="rgb(226,121,39)"/><text x="589.00" y="238.50">&lt;la..</text></g><g><title>array_astype (methods.c) (18 samples, 3.23%)</title><rect x="586" y="244" width="38" height="15" fill="rgb(237,195,43)"/><text x="589.00" y="254.50">arr..</text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.18%)</title><rect x="622" y="260" width="2" height="15" fill="rgb(235,88,42)"/><text x="625.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="622" y="276" width="2" height="15" fill="rgb(229,29,50)"/><text x="625.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.18%)</title><rect x="622" y="292" width="2" height="15" fill="rgb(242,223,25)"/><text x="625.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(221,24,22)"/><text x="625.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(249,219,52)"/><text x="625.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="622" y="340" width="2" height="15" fill="rgb(216,172,33)"/><text x="625.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(253,31,30)"/><text x="625.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="622" y="372" width="2" height="15" fill="rgb(205,127,52)"/><text x="625.00" y="382.50"></text></g><g><title>0x7fd8fe8d9727 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="622" y="388" width="2" height="15" fill="rgb(209,179,4)"/><text x="625.00" y="398.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h) (1 samples, 0.18%)</title><rect x="624" y="340" width="2" height="15" fill="rgb(213,11,22)"/><text x="627.00" y="350.50"></text></g><g><title>_mm_and_si128 (emmintrin.h) (2 samples, 0.36%)</title><rect x="626" y="356" width="4" height="15" fill="rgb(214,54,3)"/><text x="629.00" y="366.50"></text></g><g><title>FLOAT_greater (loops.c.src) (4 samples, 0.72%)</title><rect x="624" y="292" width="8" height="15" fill="rgb(210,158,8)"/><text x="627.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src) (4 samples, 0.72%)</title><rect x="624" y="308" width="8" height="15" fill="rgb(242,48,51)"/><text x="627.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src) (4 samples, 0.72%)</title><rect x="624" y="324" width="8" height="15" fill="rgb(253,43,2)"/><text x="627.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (3 samples, 0.54%)</title><rect x="626" y="340" width="6" height="15" fill="rgb(229,218,25)"/><text x="629.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h) (1 samples, 0.18%)</title><rect x="630" y="356" width="2" height="15" fill="rgb(228,57,2)"/><text x="633.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (5 samples, 0.90%)</title><rect x="624" y="212" width="10" height="15" fill="rgb(236,204,45)"/><text x="627.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.90%)</title><rect x="624" y="228" width="10" height="15" fill="rgb(248,184,17)"/><text x="627.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.90%)</title><rect x="624" y="244" width="10" height="15" fill="rgb(223,202,30)"/><text x="627.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.90%)</title><rect x="624" y="260" width="10" height="15" fill="rgb(252,206,7)"/><text x="627.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.90%)</title><rect x="624" y="276" width="10" height="15" fill="rgb(239,89,43)"/><text x="627.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="632" y="292" width="2" height="15" fill="rgb(232,186,45)"/><text x="635.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.18%)</title><rect x="634" y="212" width="3" height="15" fill="rgb(227,158,35)"/><text x="637.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.18%)</title><rect x="634" y="228" width="3" height="15" fill="rgb(234,131,41)"/><text x="637.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.18%)</title><rect x="634" y="244" width="3" height="15" fill="rgb(215,54,46)"/><text x="637.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.18%)</title><rect x="634" y="260" width="3" height="15" fill="rgb(233,138,52)"/><text x="637.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="634" y="276" width="3" height="15" fill="rgb(244,16,6)"/><text x="637.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.18%)</title><rect x="634" y="292" width="3" height="15" fill="rgb(251,91,20)"/><text x="637.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="637" y="276" width="2" height="15" fill="rgb(223,80,49)"/><text x="640.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="637" y="292" width="2" height="15" fill="rgb(249,192,40)"/><text x="640.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.18%)</title><rect x="637" y="308" width="2" height="15" fill="rgb(222,150,9)"/><text x="640.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.18%)</title><rect x="637" y="324" width="2" height="15" fill="rgb(237,170,7)"/><text x="640.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.18%)</title><rect x="639" y="276" width="2" height="15" fill="rgb(224,3,43)"/><text x="642.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="641" y="292" width="2" height="15" fill="rgb(225,191,15)"/><text x="644.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="641" y="308" width="2" height="15" fill="rgb(208,18,33)"/><text x="644.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="641" y="324" width="2" height="15" fill="rgb(243,75,53)"/><text x="644.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="641" y="340" width="2" height="15" fill="rgb(247,64,19)"/><text x="644.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="641" y="356" width="2" height="15" fill="rgb(243,206,41)"/><text x="644.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="641" y="372" width="2" height="15" fill="rgb(251,180,29)"/><text x="644.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="643" y="324" width="2" height="15" fill="rgb(221,186,11)"/><text x="646.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.18%)</title><rect x="643" y="340" width="2" height="15" fill="rgb(247,199,40)"/><text x="646.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="643" y="356" width="2" height="15" fill="rgb(208,29,10)"/><text x="646.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="643" y="372" width="2" height="15" fill="rgb(226,59,12)"/><text x="646.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="643" y="388" width="2" height="15" fill="rgb(235,119,33)"/><text x="646.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="643" y="404" width="2" height="15" fill="rgb(238,142,29)"/><text x="646.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="643" y="420" width="2" height="15" fill="rgb(234,117,17)"/><text x="646.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="643" y="436" width="2" height="15" fill="rgb(239,202,28)"/><text x="646.00" y="446.50"></text></g><g><title>0x7fd8fe8d9700 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="643" y="452" width="2" height="15" fill="rgb(205,134,18)"/><text x="646.00" y="462.50"></text></g><g><title>0x7fd8fe8d6ab9 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="643" y="468" width="2" height="15" fill="rgb(249,72,34)"/><text x="646.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.36%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(218,49,42)"/><text x="646.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.18%)</title><rect x="645" y="324" width="2" height="15" fill="rgb(210,120,8)"/><text x="648.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (8 samples, 1.44%)</title><rect x="637" y="212" width="17" height="15" fill="rgb(218,25,0)"/><text x="640.00" y="222.50"></text></g><g><title>array_add (number.c) (8 samples, 1.44%)</title><rect x="637" y="228" width="17" height="15" fill="rgb(218,136,31)"/><text x="640.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.44%)</title><rect x="637" y="244" width="17" height="15" fill="rgb(232,18,41)"/><text x="640.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.44%)</title><rect x="637" y="260" width="17" height="15" fill="rgb(254,197,6)"/><text x="640.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.08%)</title><rect x="641" y="276" width="13" height="15" fill="rgb(242,89,1)"/><text x="644.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.90%)</title><rect x="643" y="292" width="11" height="15" fill="rgb(240,159,43)"/><text x="646.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.54%)</title><rect x="647" y="308" width="7" height="15" fill="rgb(248,118,47)"/><text x="650.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.54%)</title><rect x="647" y="324" width="7" height="15" fill="rgb(208,63,31)"/><text x="650.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.54%)</title><rect x="647" y="340" width="7" height="15" fill="rgb(213,74,1)"/><text x="650.00" y="350.50"></text></g><g><title>0x7fd8fe8f7dbb (libc-2.29.so) (2 samples, 0.36%)</title><rect x="649" y="356" width="5" height="15" fill="rgb(223,81,16)"/><text x="652.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="666" y="292" width="2" height="15" fill="rgb(229,139,21)"/><text x="669.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="666" y="308" width="2" height="15" fill="rgb(249,54,53)"/><text x="669.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.18%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(244,203,2)"/><text x="669.00" y="334.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.54%)</title><rect x="668" y="308" width="7" height="15" fill="rgb(248,167,7)"/><text x="671.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (3 samples, 0.54%)</title><rect x="668" y="324" width="7" height="15" fill="rgb(223,50,16)"/><text x="671.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (3 samples, 0.54%)</title><rect x="668" y="340" width="7" height="15" fill="rgb(207,72,7)"/><text x="671.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (3 samples, 0.54%)</title><rect x="668" y="356" width="7" height="15" fill="rgb(207,135,19)"/><text x="671.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="675" y="308" width="2" height="15" fill="rgb(232,131,38)"/><text x="678.00" y="318.50"></text></g><g><title>0x7fd8fe8f814a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="675" y="324" width="2" height="15" fill="rgb(218,91,9)"/><text x="678.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.36%)</title><rect x="677" y="308" width="4" height="15" fill="rgb(232,50,51)"/><text x="680.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.36%)</title><rect x="677" y="324" width="4" height="15" fill="rgb(238,62,16)"/><text x="680.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.36%)</title><rect x="677" y="340" width="4" height="15" fill="rgb(210,178,9)"/><text x="680.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.36%)</title><rect x="677" y="356" width="4" height="15" fill="rgb(246,72,5)"/><text x="680.00" y="366.50"></text></g><g><title>0x7fd8fe8f7d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="681" y="356" width="2" height="15" fill="rgb(220,12,18)"/><text x="684.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (12 samples, 2.15%)</title><rect x="662" y="228" width="25" height="15" fill="rgb(247,11,31)"/><text x="665.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.80%)</title><rect x="666" y="244" width="21" height="15" fill="rgb(220,55,54)"/><text x="669.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.80%)</title><rect x="666" y="260" width="21" height="15" fill="rgb(212,218,47)"/><text x="669.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.80%)</title><rect x="666" y="276" width="21" height="15" fill="rgb(232,35,6)"/><text x="669.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="668" y="292" width="19" height="15" fill="rgb(243,53,5)"/><text x="671.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (3 samples, 0.54%)</title><rect x="681" y="308" width="6" height="15" fill="rgb(221,206,4)"/><text x="684.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.54%)</title><rect x="681" y="324" width="6" height="15" fill="rgb(224,179,11)"/><text x="684.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.54%)</title><rect x="681" y="340" width="6" height="15" fill="rgb(247,191,14)"/><text x="684.00" y="350.50"></text></g><g><title>0x7fd8fe8f7f53 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="683" y="356" width="4" height="15" fill="rgb(235,93,34)"/><text x="686.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="692" y="276" width="2" height="15" fill="rgb(234,115,17)"/><text x="695.00" y="286.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.18%)</title><rect x="696" y="356" width="2" height="15" fill="rgb(241,149,38)"/><text x="699.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="696" y="372" width="2" height="15" fill="rgb(244,193,24)"/><text x="699.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.54%)</title><rect x="694" y="276" width="6" height="15" fill="rgb(241,208,3)"/><text x="697.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.54%)</title><rect x="694" y="292" width="6" height="15" fill="rgb(225,196,19)"/><text x="697.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.36%)</title><rect x="696" y="308" width="4" height="15" fill="rgb(209,26,45)"/><text x="699.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.36%)</title><rect x="696" y="324" width="4" height="15" fill="rgb(249,74,12)"/><text x="699.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.36%)</title><rect x="696" y="340" width="4" height="15" fill="rgb(245,31,53)"/><text x="699.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.18%)</title><rect x="698" y="356" width="2" height="15" fill="rgb(213,184,35)"/><text x="701.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="700" y="324" width="2" height="15" fill="rgb(228,70,45)"/><text x="703.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (8 samples, 1.44%)</title><rect x="687" y="228" width="17" height="15" fill="rgb(242,120,5)"/><text x="690.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (8 samples, 1.44%)</title><rect x="687" y="244" width="17" height="15" fill="rgb(212,120,2)"/><text x="690.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (7 samples, 1.26%)</title><rect x="690" y="260" width="14" height="15" fill="rgb(245,40,18)"/><text x="693.00" y="270.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.36%)</title><rect x="700" y="276" width="4" height="15" fill="rgb(213,86,34)"/><text x="703.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.36%)</title><rect x="700" y="292" width="4" height="15" fill="rgb(210,18,13)"/><text x="703.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.36%)</title><rect x="700" y="308" width="4" height="15" fill="rgb(229,54,1)"/><text x="703.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="702" y="324" width="2" height="15" fill="rgb(253,199,25)"/><text x="705.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="704" y="276" width="2" height="15" fill="rgb(210,161,30)"/><text x="707.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="706" y="292" width="3" height="15" fill="rgb(238,117,40)"/><text x="709.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="706" y="308" width="3" height="15" fill="rgb(251,106,1)"/><text x="709.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="706" y="324" width="3" height="15" fill="rgb(235,29,32)"/><text x="709.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="706" y="340" width="3" height="15" fill="rgb(243,181,28)"/><text x="709.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="706" y="356" width="3" height="15" fill="rgb(248,38,11)"/><text x="709.00" y="366.50"></text></g><g><title>0x7fd8fea56e00 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="711" y="340" width="2" height="15" fill="rgb(225,106,40)"/><text x="714.00" y="350.50"></text></g><g><title>0x7fd8fea56e4e (libm-2.29.so) (3 samples, 0.54%)</title><rect x="713" y="340" width="6" height="15" fill="rgb(224,206,38)"/><text x="716.00" y="350.50"></text></g><g><title>0x7fd8fea56e96 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="719" y="340" width="2" height="15" fill="rgb(227,109,43)"/><text x="722.00" y="350.50"></text></g><g><title>0x7fd8fea56ea2 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="721" y="340" width="5" height="15" fill="rgb(251,213,51)"/><text x="724.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (11 samples, 1.97%)</title><rect x="704" y="228" width="24" height="15" fill="rgb(242,167,13)"/><text x="707.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.97%)</title><rect x="704" y="244" width="24" height="15" fill="rgb(252,82,37)"/><text x="707.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.97%)</title><rect x="704" y="260" width="24" height="15" fill="rgb(238,181,3)"/><text x="707.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.80%)</title><rect x="706" y="276" width="22" height="15" fill="rgb(226,66,54)"/><text x="709.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="709" y="292" width="19" height="15" fill="rgb(222,7,38)"/><text x="712.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (9 samples, 1.62%)</title><rect x="709" y="308" width="19" height="15" fill="rgb(212,74,44)"/><text x="712.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (9 samples, 1.62%)</title><rect x="709" y="324" width="19" height="15" fill="rgb(237,134,50)"/><text x="712.00" y="334.50"></text></g><g><title>0x7fd8fea56ea6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="726" y="340" width="2" height="15" fill="rgb(233,91,16)"/><text x="729.00" y="350.50"></text></g><g><title>0x7fd8fe8f8103 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="736" y="340" width="2" height="15" fill="rgb(228,80,47)"/><text x="739.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.80%)</title><rect x="732" y="276" width="21" height="15" fill="rgb(242,137,5)"/><text x="735.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (9 samples, 1.62%)</title><rect x="734" y="292" width="19" height="15" fill="rgb(208,220,6)"/><text x="737.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 1.44%)</title><rect x="736" y="308" width="17" height="15" fill="rgb(239,69,34)"/><text x="739.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 1.44%)</title><rect x="736" y="324" width="17" height="15" fill="rgb(242,134,53)"/><text x="739.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (7 samples, 1.26%)</title><rect x="738" y="340" width="15" height="15" fill="rgb(229,109,2)"/><text x="741.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.26%)</title><rect x="738" y="356" width="15" height="15" fill="rgb(243,51,45)"/><text x="741.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.26%)</title><rect x="738" y="372" width="15" height="15" fill="rgb(232,157,0)"/><text x="741.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.26%)</title><rect x="738" y="388" width="15" height="15" fill="rgb(214,67,28)"/><text x="741.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (25 samples, 4.49%)</title><rect x="728" y="228" width="53" height="15" fill="rgb(232,217,27)"/><text x="731.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (24 samples, 4.31%)</title><rect x="730" y="244" width="51" height="15" fill="rgb(232,171,32)"/><text x="733.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (23 samples, 4.13%)</title><rect x="732" y="260" width="49" height="15" fill="rgb(221,3,31)"/><text x="735.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.33%)</title><rect x="753" y="276" width="28" height="15" fill="rgb(222,44,0)"/><text x="756.00" y="286.50">s..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="781" y="372" width="2" height="15" fill="rgb(216,46,43)"/><text x="784.00" y="382.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 0.72%)</title><rect x="781" y="244" width="8" height="15" fill="rgb(217,84,1)"/><text x="784.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.72%)</title><rect x="781" y="260" width="8" height="15" fill="rgb(212,83,39)"/><text x="784.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (4 samples, 0.72%)</title><rect x="781" y="276" width="8" height="15" fill="rgb(241,212,52)"/><text x="784.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.72%)</title><rect x="781" y="292" width="8" height="15" fill="rgb(223,70,36)"/><text x="784.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.72%)</title><rect x="781" y="308" width="8" height="15" fill="rgb(253,53,9)"/><text x="784.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="781" y="324" width="8" height="15" fill="rgb(215,184,6)"/><text x="784.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.72%)</title><rect x="781" y="340" width="8" height="15" fill="rgb(210,26,24)"/><text x="784.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.72%)</title><rect x="781" y="356" width="8" height="15" fill="rgb(214,67,35)"/><text x="784.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="783" y="372" width="6" height="15" fill="rgb(226,79,51)"/><text x="786.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.36%)</title><rect x="785" y="388" width="4" height="15" fill="rgb(223,129,42)"/><text x="788.00" y="398.50"></text></g><g><title>0x7fd8fea56e71 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="798" y="340" width="2" height="15" fill="rgb(227,193,29)"/><text x="801.00" y="350.50"></text></g><g><title>0x7fd8fea56e7e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="800" y="340" width="2" height="15" fill="rgb(217,6,36)"/><text x="803.00" y="350.50"></text></g><g><title>0x7fd8fea56ea2 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="802" y="340" width="2" height="15" fill="rgb(219,28,37)"/><text x="805.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (8 samples, 1.44%)</title><rect x="789" y="308" width="17" height="15" fill="rgb(222,68,4)"/><text x="792.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (8 samples, 1.44%)</title><rect x="789" y="324" width="17" height="15" fill="rgb(238,24,46)"/><text x="792.00" y="334.50"></text></g><g><title>0x7fd8fea56ea6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="804" y="340" width="2" height="15" fill="rgb(223,131,39)"/><text x="807.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (13 samples, 2.33%)</title><rect x="781" y="228" width="27" height="15" fill="rgb(207,113,20)"/><text x="784.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.62%)</title><rect x="789" y="244" width="19" height="15" fill="rgb(232,188,51)"/><text x="792.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.62%)</title><rect x="789" y="260" width="19" height="15" fill="rgb(243,107,34)"/><text x="792.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="789" y="276" width="19" height="15" fill="rgb(214,142,37)"/><text x="792.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="789" y="292" width="19" height="15" fill="rgb(235,155,24)"/><text x="792.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.18%)</title><rect x="806" y="308" width="2" height="15" fill="rgb(225,198,46)"/><text x="809.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.18%)</title><rect x="806" y="324" width="2" height="15" fill="rgb(253,174,34)"/><text x="809.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="812" y="324" width="3" height="15" fill="rgb(233,50,2)"/><text x="815.00" y="334.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (158 samples, 28.37%)</title><rect x="482" y="164" width="335" height="15" fill="rgb(251,120,50)"/><text x="485.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (150 samples, 26.93%)</title><rect x="499" y="180" width="318" height="15" fill="rgb(230,127,19)"/><text x="502.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (132 samples, 23.70%)</title><rect x="537" y="196" width="280" height="15" fill="rgb(213,176,3)"/><text x="540.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (77 samples, 13.82%)</title><rect x="654" y="212" width="163" height="15" fill="rgb(222,86,6)"/><text x="657.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (4 samples, 0.72%)</title><rect x="808" y="228" width="9" height="15" fill="rgb(224,21,31)"/><text x="811.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 0.72%)</title><rect x="808" y="244" width="9" height="15" fill="rgb(237,100,38)"/><text x="811.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.72%)</title><rect x="808" y="260" width="9" height="15" fill="rgb(211,24,8)"/><text x="811.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (3 samples, 0.54%)</title><rect x="810" y="276" width="7" height="15" fill="rgb(253,98,36)"/><text x="813.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.54%)</title><rect x="810" y="292" width="7" height="15" fill="rgb(228,197,39)"/><text x="813.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.36%)</title><rect x="812" y="308" width="5" height="15" fill="rgb(241,100,26)"/><text x="815.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="815" y="324" width="2" height="15" fill="rgb(248,164,33)"/><text x="818.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.18%)</title><rect x="815" y="340" width="2" height="15" fill="rgb(229,33,17)"/><text x="818.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.18%)</title><rect x="815" y="356" width="2" height="15" fill="rgb(210,115,22)"/><text x="818.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="815" y="372" width="2" height="15" fill="rgb(252,107,12)"/><text x="818.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="815" y="388" width="2" height="15" fill="rgb(232,114,3)"/><text x="818.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="815" y="404" width="2" height="15" fill="rgb(232,203,5)"/><text x="818.00" y="414.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (160 samples, 28.73%)</title><rect x="480" y="68" width="339" height="15" fill="rgb(247,42,22)"/><text x="483.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (160 samples, 28.73%)</title><rect x="480" y="84" width="339" height="15" fill="rgb(210,23,12)"/><text x="483.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (160 samples, 28.73%)</title><rect x="480" y="100" width="339" height="15" fill="rgb(207,84,21)"/><text x="483.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 28.73%)</title><rect x="480" y="116" width="339" height="15" fill="rgb(229,149,20)"/><text x="483.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 28.73%)</title><rect x="480" y="132" width="339" height="15" fill="rgb(218,179,31)"/><text x="483.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (160 samples, 28.73%)</title><rect x="480" y="148" width="339" height="15" fill="rgb(217,193,24)"/><text x="483.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="817" y="164" width="2" height="15" fill="rgb(234,122,5)"/><text x="820.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="817" y="180" width="2" height="15" fill="rgb(245,191,25)"/><text x="820.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="817" y="196" width="2" height="15" fill="rgb(219,100,9)"/><text x="820.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.18%)</title><rect x="825" y="228" width="2" height="15" fill="rgb(254,199,49)"/><text x="828.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.72%)</title><rect x="827" y="228" width="9" height="15" fill="rgb(236,107,0)"/><text x="830.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="834" y="244" width="2" height="15" fill="rgb(224,23,9)"/><text x="837.00" y="254.50"></text></g><g><title>0x7fd8fe8f8124 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="834" y="260" width="2" height="15" fill="rgb(234,156,14)"/><text x="837.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.18%)</title><rect x="836" y="228" width="2" height="15" fill="rgb(216,119,15)"/><text x="839.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (8 samples, 1.44%)</title><rect x="823" y="196" width="17" height="15" fill="rgb(212,202,39)"/><text x="826.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (8 samples, 1.44%)</title><rect x="823" y="212" width="17" height="15" fill="rgb(235,128,20)"/><text x="826.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.18%)</title><rect x="838" y="228" width="2" height="15" fill="rgb(208,55,38)"/><text x="841.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.18%)</title><rect x="838" y="244" width="2" height="15" fill="rgb(205,122,24)"/><text x="841.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="840" y="212" width="2" height="15" fill="rgb(206,8,40)"/><text x="843.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.36%)</title><rect x="840" y="196" width="4" height="15" fill="rgb(227,24,17)"/><text x="843.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="842" y="212" width="2" height="15" fill="rgb(249,99,7)"/><text x="845.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="842" y="228" width="2" height="15" fill="rgb(223,52,41)"/><text x="845.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.18%)</title><rect x="842" y="244" width="2" height="15" fill="rgb(237,197,51)"/><text x="845.00" y="254.50"></text></g><g><title>0x7fd8fe8d7ace (libc-2.29.so) (1 samples, 0.18%)</title><rect x="842" y="260" width="2" height="15" fill="rgb(246,163,30)"/><text x="845.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="844" y="228" width="2" height="15" fill="rgb(253,126,11)"/><text x="847.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="844" y="244" width="2" height="15" fill="rgb(209,229,36)"/><text x="847.00" y="254.50"></text></g><g><title>FLOAT_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="844" y="260" width="2" height="15" fill="rgb(213,92,30)"/><text x="847.00" y="270.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="844" y="276" width="2" height="15" fill="rgb(208,118,29)"/><text x="847.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="851" y="244" width="2" height="15" fill="rgb(231,98,32)"/><text x="854.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (3 samples, 0.54%)</title><rect x="853" y="244" width="6" height="15" fill="rgb(243,105,44)"/><text x="856.00" y="254.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c) (2 samples, 0.36%)</title><rect x="855" y="260" width="4" height="15" fill="rgb(235,156,47)"/><text x="858.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (23 samples, 4.13%)</title><rect x="844" y="212" width="49" height="15" fill="rgb(222,154,39)"/><text x="847.00" y="222.50">arra..</text></g><g><title>array_assign_boolean_subscript (mapping.c) (22 samples, 3.95%)</title><rect x="846" y="228" width="47" height="15" fill="rgb(223,195,39)"/><text x="849.00" y="238.50">arra..</text></g><g><title>npy_memchr (common.h) (16 samples, 2.87%)</title><rect x="859" y="244" width="34" height="15" fill="rgb(234,37,29)"/><text x="862.00" y="254.50">np..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="893" y="244" width="2" height="15" fill="rgb(235,125,54)"/><text x="896.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="893" y="260" width="2" height="15" fill="rgb(223,34,29)"/><text x="896.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="893" y="276" width="2" height="15" fill="rgb(211,137,9)"/><text x="896.00" y="286.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="895" y="260" width="2" height="15" fill="rgb(240,62,52)"/><text x="898.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(248,168,20)"/><text x="898.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 0.54%)</title><rect x="893" y="212" width="6" height="15" fill="rgb(227,207,21)"/><text x="896.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.54%)</title><rect x="893" y="228" width="6" height="15" fill="rgb(211,110,11)"/><text x="896.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.36%)</title><rect x="895" y="244" width="4" height="15" fill="rgb(247,220,53)"/><text x="898.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="897" y="260" width="2" height="15" fill="rgb(244,212,20)"/><text x="900.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="897" y="276" width="2" height="15" fill="rgb(206,47,52)"/><text x="900.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src) (1 samples, 0.18%)</title><rect x="897" y="292" width="2" height="15" fill="rgb(232,146,18)"/><text x="900.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="897" y="308" width="2" height="15" fill="rgb(231,49,12)"/><text x="900.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="897" y="324" width="2" height="15" fill="rgb(218,73,13)"/><text x="900.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="897" y="340" width="2" height="15" fill="rgb(237,186,28)"/><text x="900.00" y="350.50"></text></g><g><title>_mm_and_si128 (emmintrin.h) (1 samples, 0.18%)</title><rect x="897" y="356" width="2" height="15" fill="rgb(243,94,7)"/><text x="900.00" y="366.50"></text></g><g><title>0x7fd8fe8f7d94 (libc-2.29.so) (5 samples, 0.90%)</title><rect x="906" y="292" width="10" height="15" fill="rgb(229,132,48)"/><text x="909.00" y="302.50"></text></g><g><title>PyArray_NewCopy (convert.c) (8 samples, 1.44%)</title><rect x="904" y="244" width="16" height="15" fill="rgb(239,188,40)"/><text x="907.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (8 samples, 1.44%)</title><rect x="904" y="260" width="16" height="15" fill="rgb(231,166,12)"/><text x="907.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 1.26%)</title><rect x="906" y="276" width="14" height="15" fill="rgb(207,51,13)"/><text x="909.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.36%)</title><rect x="916" y="292" width="4" height="15" fill="rgb(226,11,20)"/><text x="919.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.36%)</title><rect x="916" y="308" width="4" height="15" fill="rgb(249,222,36)"/><text x="919.00" y="318.50"></text></g><g><title>0x7fd8fe8f7d50 (libc-2.29.so) (2 samples, 0.36%)</title><rect x="916" y="324" width="4" height="15" fill="rgb(232,205,18)"/><text x="919.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (10 samples, 1.80%)</title><rect x="904" y="228" width="21" height="15" fill="rgb(216,46,26)"/><text x="907.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.36%)</title><rect x="920" y="244" width="5" height="15" fill="rgb(254,14,5)"/><text x="923.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="925" y="244" width="2" height="15" fill="rgb(220,93,18)"/><text x="928.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.36%)</title><rect x="925" y="228" width="4" height="15" fill="rgb(223,200,1)"/><text x="928.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.18%)</title><rect x="927" y="244" width="2" height="15" fill="rgb(209,16,21)"/><text x="930.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="929" y="228" width="2" height="15" fill="rgb(205,224,4)"/><text x="932.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.36%)</title><rect x="931" y="228" width="4" height="15" fill="rgb(237,141,2)"/><text x="934.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (55 samples, 9.87%)</title><rect x="821" y="180" width="116" height="15" fill="rgb(228,101,0)"/><text x="824.00" y="190.50">_check_X (skle..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (44 samples, 7.90%)</title><rect x="844" y="196" width="93" height="15" fill="rgb(240,129,5)"/><text x="847.00" y="206.50">binarize (s..</text></g><g><title>check_array (sklearn/utils/validation.py) (18 samples, 3.23%)</title><rect x="899" y="212" width="38" height="15" fill="rgb(214,170,47)"/><text x="902.00" y="222.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.18%)</title><rect x="935" y="228" width="2" height="15" fill="rgb(207,212,36)"/><text x="938.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.18%)</title><rect x="935" y="244" width="2" height="15" fill="rgb(237,8,38)"/><text x="938.00" y="254.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="944" y="244" width="2" height="15" fill="rgb(223,47,15)"/><text x="947.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="946" y="244" width="2" height="15" fill="rgb(229,220,35)"/><text x="949.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="946" y="260" width="2" height="15" fill="rgb(254,24,22)"/><text x="949.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="946" y="276" width="2" height="15" fill="rgb(225,105,16)"/><text x="949.00" y="286.50"></text></g><g><title>array_add (number.c) (4 samples, 0.72%)</title><rect x="942" y="196" width="8" height="15" fill="rgb(249,179,24)"/><text x="945.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.72%)</title><rect x="942" y="212" width="8" height="15" fill="rgb(210,223,0)"/><text x="945.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="942" y="228" width="8" height="15" fill="rgb(216,224,53)"/><text x="945.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.18%)</title><rect x="948" y="244" width="2" height="15" fill="rgb(221,120,9)"/><text x="951.00" y="254.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.18%)</title><rect x="950" y="196" width="2" height="15" fill="rgb(243,97,26)"/><text x="953.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="950" y="212" width="2" height="15" fill="rgb(252,72,18)"/><text x="953.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="950" y="228" width="2" height="15" fill="rgb(208,209,15)"/><text x="953.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="950" y="244" width="2" height="15" fill="rgb(253,65,25)"/><text x="953.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="950" y="260" width="2" height="15" fill="rgb(237,6,11)"/><text x="953.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.18%)</title><rect x="950" y="276" width="2" height="15" fill="rgb(225,201,30)"/><text x="953.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="950" y="292" width="2" height="15" fill="rgb(237,46,26)"/><text x="953.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="950" y="308" width="2" height="15" fill="rgb(237,123,52)"/><text x="953.00" y="318.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.18%)</title><rect x="950" y="324" width="2" height="15" fill="rgb(222,8,37)"/><text x="953.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="954" y="260" width="2" height="15" fill="rgb(219,155,37)"/><text x="957.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="954" y="276" width="2" height="15" fill="rgb(207,176,50)"/><text x="957.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="954" y="292" width="2" height="15" fill="rgb(235,136,12)"/><text x="957.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="954" y="308" width="2" height="15" fill="rgb(210,165,45)"/><text x="957.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="954" y="324" width="2" height="15" fill="rgb(211,40,4)"/><text x="957.00" y="334.50"></text></g><g><title>0x7fd8fe9b5151 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="954" y="340" width="2" height="15" fill="rgb(219,89,4)"/><text x="957.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="959" y="308" width="2" height="15" fill="rgb(225,149,12)"/><text x="962.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="959" y="324" width="2" height="15" fill="rgb(251,46,14)"/><text x="962.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="959" y="340" width="2" height="15" fill="rgb(226,102,52)"/><text x="962.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="959" y="356" width="2" height="15" fill="rgb(238,100,4)"/><text x="962.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="961" y="308" width="2" height="15" fill="rgb(253,182,19)"/><text x="964.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="961" y="324" width="2" height="15" fill="rgb(208,59,10)"/><text x="964.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.54%)</title><rect x="959" y="292" width="6" height="15" fill="rgb(250,32,52)"/><text x="962.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="963" y="308" width="2" height="15" fill="rgb(233,130,30)"/><text x="966.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (2 samples, 0.36%)</title><rect x="965" y="292" width="4" height="15" fill="rgb(230,103,31)"/><text x="968.00" y="302.50"></text></g><g><title>get_global_ext_obj (extobj.c) (2 samples, 0.36%)</title><rect x="965" y="308" width="4" height="15" fill="rgb(246,33,38)"/><text x="968.00" y="318.50"></text></g><g><title>array_sum (methods.c) (9 samples, 1.62%)</title><rect x="952" y="196" width="19" height="15" fill="rgb(207,117,45)"/><text x="955.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 1.62%)</title><rect x="952" y="212" width="19" height="15" fill="rgb(251,118,29)"/><text x="955.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 1.62%)</title><rect x="952" y="228" width="19" height="15" fill="rgb(244,191,24)"/><text x="955.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 1.62%)</title><rect x="952" y="244" width="19" height="15" fill="rgb(237,24,20)"/><text x="955.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.26%)</title><rect x="956" y="260" width="15" height="15" fill="rgb(205,64,52)"/><text x="959.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.08%)</title><rect x="959" y="276" width="12" height="15" fill="rgb(210,189,45)"/><text x="962.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.18%)</title><rect x="969" y="292" width="2" height="15" fill="rgb(223,99,19)"/><text x="972.00" y="302.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="969" y="308" width="2" height="15" fill="rgb(208,94,22)"/><text x="972.00" y="318.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.15%)</title><rect x="971" y="212" width="26" height="15" fill="rgb(216,8,54)"/><text x="974.00" y="222.50">d..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.18%)</title><rect x="997" y="212" width="2" height="15" fill="rgb(234,128,5)"/><text x="1000.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (4 samples, 0.72%)</title><rect x="999" y="260" width="8" height="15" fill="rgb(227,110,26)"/><text x="1002.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="999" y="276" width="8" height="15" fill="rgb(251,119,35)"/><text x="1002.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="999" y="292" width="8" height="15" fill="rgb(224,56,5)"/><text x="1002.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.72%)</title><rect x="999" y="308" width="8" height="15" fill="rgb(211,182,44)"/><text x="1002.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="1007" y="324" width="2" height="15" fill="rgb(220,113,11)"/><text x="1010.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="1009" y="324" width="3" height="15" fill="rgb(230,101,26)"/><text x="1012.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (8 samples, 1.44%)</title><rect x="1007" y="292" width="17" height="15" fill="rgb(226,77,27)"/><text x="1010.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (8 samples, 1.44%)</title><rect x="1007" y="308" width="17" height="15" fill="rgb(247,19,11)"/><text x="1010.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (6 samples, 1.08%)</title><rect x="1012" y="324" width="12" height="15" fill="rgb(239,164,32)"/><text x="1015.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 1.62%)</title><rect x="1007" y="260" width="19" height="15" fill="rgb(209,192,42)"/><text x="1010.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (9 samples, 1.62%)</title><rect x="1007" y="276" width="19" height="15" fill="rgb(240,56,45)"/><text x="1010.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1024" y="292" width="2" height="15" fill="rgb(234,188,24)"/><text x="1027.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1024" y="308" width="2" height="15" fill="rgb(209,207,40)"/><text x="1027.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1024" y="324" width="2" height="15" fill="rgb(227,164,47)"/><text x="1027.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1024" y="340" width="2" height="15" fill="rgb(238,201,29)"/><text x="1027.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1024" y="356" width="2" height="15" fill="rgb(243,202,45)"/><text x="1027.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="1024" y="372" width="2" height="15" fill="rgb(242,30,43)"/><text x="1027.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1024" y="388" width="2" height="15" fill="rgb(253,171,22)"/><text x="1027.00" y="398.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (27 samples, 4.85%)</title><rect x="971" y="196" width="57" height="15" fill="rgb(237,83,50)"/><text x="974.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.51%)</title><rect x="999" y="212" width="29" height="15" fill="rgb(254,125,30)"/><text x="1002.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.51%)</title><rect x="999" y="228" width="29" height="15" fill="rgb(222,74,24)"/><text x="1002.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 2.51%)</title><rect x="999" y="244" width="29" height="15" fill="rgb(253,180,31)"/><text x="1002.00" y="254.50">Py..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1026" y="260" width="2" height="15" fill="rgb(254,64,7)"/><text x="1029.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="1026" y="276" width="2" height="15" fill="rgb(253,213,8)"/><text x="1029.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1028" y="228" width="3" height="15" fill="rgb(231,124,35)"/><text x="1031.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="1028" y="244" width="3" height="15" fill="rgb(217,178,6)"/><text x="1031.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1031" y="244" width="2" height="15" fill="rgb(205,119,36)"/><text x="1034.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1033" y="260" width="2" height="15" fill="rgb(247,119,43)"/><text x="1036.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1033" y="276" width="2" height="15" fill="rgb(215,208,6)"/><text x="1036.00" y="286.50"></text></g><g><title>0x7fd8fe8f7d50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1035" y="308" width="2" height="15" fill="rgb(239,90,27)"/><text x="1038.00" y="318.50"></text></g><g><title>0x7fd8fe8f7d62 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1037" y="308" width="2" height="15" fill="rgb(233,0,20)"/><text x="1040.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1033" y="244" width="8" height="15" fill="rgb(226,131,20)"/><text x="1036.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.54%)</title><rect x="1035" y="260" width="6" height="15" fill="rgb(231,118,51)"/><text x="1038.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.54%)</title><rect x="1035" y="276" width="6" height="15" fill="rgb(218,204,44)"/><text x="1038.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.54%)</title><rect x="1035" y="292" width="6" height="15" fill="rgb(235,140,53)"/><text x="1038.00" y="302.50"></text></g><g><title>0x7fd8fe8f7d6a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1039" y="308" width="2" height="15" fill="rgb(250,183,43)"/><text x="1042.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.26%)</title><rect x="1028" y="212" width="15" height="15" fill="rgb(230,12,43)"/><text x="1031.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.08%)</title><rect x="1031" y="228" width="12" height="15" fill="rgb(210,189,38)"/><text x="1034.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1041" y="244" width="2" height="15" fill="rgb(236,44,36)"/><text x="1044.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.18%)</title><rect x="1041" y="260" width="2" height="15" fill="rgb(226,200,29)"/><text x="1044.00" y="270.50"></text></g><g><title>0x7fd8feaa9ef6 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1041" y="276" width="2" height="15" fill="rgb(207,23,42)"/><text x="1044.00" y="286.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1043" y="212" width="2" height="15" fill="rgb(228,92,22)"/><text x="1046.00" y="222.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (52 samples, 9.34%)</title><rect x="937" y="180" width="111" height="15" fill="rgb(222,107,14)"/><text x="940.00" y="190.50">_joint_log_li..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.62%)</title><rect x="1028" y="196" width="20" height="15" fill="rgb(241,220,24)"/><text x="1031.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1045" y="212" width="3" height="15" fill="rgb(232,28,39)"/><text x="1048.00" y="222.50"></text></g><g><title>0x7fd8fe8f8124 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1045" y="228" width="3" height="15" fill="rgb(244,166,9)"/><text x="1048.00" y="238.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="1048" y="180" width="2" height="15" fill="rgb(223,30,26)"/><text x="1051.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="1048" y="196" width="2" height="15" fill="rgb(216,150,4)"/><text x="1051.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.54%)</title><rect x="1050" y="180" width="6" height="15" fill="rgb(235,62,14)"/><text x="1053.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.36%)</title><rect x="1052" y="196" width="4" height="15" fill="rgb(213,150,49)"/><text x="1055.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.18%)</title><rect x="1054" y="212" width="2" height="15" fill="rgb(254,229,16)"/><text x="1057.00" y="222.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1062" y="196" width="3" height="15" fill="rgb(217,68,47)"/><text x="1065.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1062" y="212" width="3" height="15" fill="rgb(244,62,22)"/><text x="1065.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1062" y="228" width="3" height="15" fill="rgb(211,51,52)"/><text x="1065.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1065" y="196" width="2" height="15" fill="rgb(246,207,17)"/><text x="1068.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1065" y="212" width="2" height="15" fill="rgb(240,113,54)"/><text x="1068.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.18%)</title><rect x="1065" y="228" width="2" height="15" fill="rgb(214,114,1)"/><text x="1068.00" y="238.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (1 samples, 0.18%)</title><rect x="1067" y="196" width="2" height="15" fill="rgb(250,134,29)"/><text x="1070.00" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="1073" y="260" width="2" height="15" fill="rgb(247,48,12)"/><text x="1076.00" y="270.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="1075" y="324" width="2" height="15" fill="rgb(215,19,28)"/><text x="1078.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="1075" y="340" width="2" height="15" fill="rgb(209,150,46)"/><text x="1078.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1075" y="356" width="2" height="15" fill="rgb(206,51,11)"/><text x="1078.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1075" y="372" width="2" height="15" fill="rgb(239,37,48)"/><text x="1078.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1075" y="388" width="2" height="15" fill="rgb(220,45,40)"/><text x="1078.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1075" y="404" width="2" height="15" fill="rgb(208,227,39)"/><text x="1078.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="1075" y="420" width="2" height="15" fill="rgb(226,100,51)"/><text x="1078.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1075" y="436" width="2" height="15" fill="rgb(227,79,4)"/><text x="1078.00" y="446.50"></text></g><g><title>0x7fd8fe8d8d14 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1075" y="452" width="2" height="15" fill="rgb(239,44,20)"/><text x="1078.00" y="462.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.18%)</title><rect x="1077" y="340" width="2" height="15" fill="rgb(217,77,40)"/><text x="1080.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.18%)</title><rect x="1077" y="356" width="2" height="15" fill="rgb(244,50,26)"/><text x="1080.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1077" y="372" width="2" height="15" fill="rgb(217,99,18)"/><text x="1080.00" y="382.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (2 samples, 0.36%)</title><rect x="1077" y="324" width="4" height="15" fill="rgb(228,185,29)"/><text x="1080.00" y="334.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.18%)</title><rect x="1079" y="340" width="2" height="15" fill="rgb(240,172,27)"/><text x="1082.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1079" y="356" width="2" height="15" fill="rgb(230,41,1)"/><text x="1082.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="1079" y="372" width="2" height="15" fill="rgb(212,52,37)"/><text x="1082.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="1079" y="388" width="2" height="15" fill="rgb(245,106,38)"/><text x="1082.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.18%)</title><rect x="1079" y="404" width="2" height="15" fill="rgb(221,113,38)"/><text x="1082.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (4 samples, 0.72%)</title><rect x="1088" y="356" width="8" height="15" fill="rgb(230,64,6)"/><text x="1091.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (4 samples, 0.72%)</title><rect x="1088" y="372" width="8" height="15" fill="rgb(222,15,39)"/><text x="1091.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (4 samples, 0.72%)</title><rect x="1088" y="388" width="8" height="15" fill="rgb(225,106,48)"/><text x="1091.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (10 samples, 1.80%)</title><rect x="1088" y="340" width="21" height="15" fill="rgb(222,164,29)"/><text x="1091.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (6 samples, 1.08%)</title><rect x="1096" y="356" width="13" height="15" fill="rgb(221,2,34)"/><text x="1099.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (6 samples, 1.08%)</title><rect x="1096" y="372" width="13" height="15" fill="rgb(209,217,35)"/><text x="1099.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (3 samples, 0.54%)</title><rect x="1103" y="388" width="6" height="15" fill="rgb(237,11,40)"/><text x="1106.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.36%)</title><rect x="1105" y="404" width="4" height="15" fill="rgb(221,201,46)"/><text x="1108.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.36%)</title><rect x="1105" y="420" width="4" height="15" fill="rgb(207,208,10)"/><text x="1108.00" y="430.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (22 samples, 3.95%)</title><rect x="1069" y="196" width="46" height="15" fill="rgb(246,76,52)"/><text x="1072.00" y="206.50">amax..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (22 samples, 3.95%)</title><rect x="1069" y="212" width="46" height="15" fill="rgb(232,225,40)"/><text x="1072.00" y="222.50">arra..</text></g><g><title>amax (numpy/core/fromnumeric.py) (22 samples, 3.95%)</title><rect x="1069" y="228" width="46" height="15" fill="rgb(208,39,31)"/><text x="1072.00" y="238.50">amax..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (21 samples, 3.77%)</title><rect x="1071" y="244" width="44" height="15" fill="rgb(241,156,45)"/><text x="1074.00" y="254.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 3.41%)</title><rect x="1075" y="260" width="40" height="15" fill="rgb(231,53,15)"/><text x="1078.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (19 samples, 3.41%)</title><rect x="1075" y="276" width="40" height="15" fill="rgb(241,154,40)"/><text x="1078.00" y="286.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (19 samples, 3.41%)</title><rect x="1075" y="292" width="40" height="15" fill="rgb(220,65,37)"/><text x="1078.00" y="302.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (19 samples, 3.41%)</title><rect x="1075" y="308" width="40" height="15" fill="rgb(250,29,37)"/><text x="1078.00" y="318.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (16 samples, 2.87%)</title><rect x="1081" y="324" width="34" height="15" fill="rgb(229,179,37)"/><text x="1084.00" y="334.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.54%)</title><rect x="1109" y="340" width="6" height="15" fill="rgb(234,114,1)"/><text x="1112.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.18%)</title><rect x="1115" y="196" width="2" height="15" fill="rgb(220,39,3)"/><text x="1118.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="1115" y="212" width="2" height="15" fill="rgb(220,103,33)"/><text x="1118.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1115" y="228" width="2" height="15" fill="rgb(211,176,17)"/><text x="1118.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1115" y="244" width="2" height="15" fill="rgb(237,167,38)"/><text x="1118.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="1115" y="260" width="2" height="15" fill="rgb(208,164,0)"/><text x="1118.00" y="270.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.54%)</title><rect x="1117" y="196" width="7" height="15" fill="rgb(235,108,52)"/><text x="1120.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1117" y="212" width="7" height="15" fill="rgb(241,118,4)"/><text x="1120.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1117" y="228" width="7" height="15" fill="rgb(253,23,36)"/><text x="1120.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1117" y="244" width="7" height="15" fill="rgb(241,19,48)"/><text x="1120.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1117" y="260" width="7" height="15" fill="rgb(211,50,52)"/><text x="1120.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.54%)</title><rect x="1117" y="276" width="7" height="15" fill="rgb(234,29,43)"/><text x="1120.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.54%)</title><rect x="1117" y="292" width="7" height="15" fill="rgb(225,187,48)"/><text x="1120.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.54%)</title><rect x="1117" y="308" width="7" height="15" fill="rgb(215,94,43)"/><text x="1120.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1122" y="324" width="2" height="15" fill="rgb(213,148,25)"/><text x="1125.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.54%)</title><rect x="1126" y="308" width="6" height="15" fill="rgb(230,78,20)"/><text x="1129.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1126" y="324" width="6" height="15" fill="rgb(213,24,35)"/><text x="1129.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.36%)</title><rect x="1128" y="340" width="4" height="15" fill="rgb(225,41,42)"/><text x="1131.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.18%)</title><rect x="1130" y="356" width="2" height="15" fill="rgb(224,74,11)"/><text x="1133.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (5 samples, 0.90%)</title><rect x="1124" y="196" width="10" height="15" fill="rgb(217,57,53)"/><text x="1127.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.90%)</title><rect x="1124" y="212" width="10" height="15" fill="rgb(239,228,27)"/><text x="1127.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (5 samples, 0.90%)</title><rect x="1124" y="228" width="10" height="15" fill="rgb(225,97,20)"/><text x="1127.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 0.90%)</title><rect x="1124" y="244" width="10" height="15" fill="rgb(208,34,6)"/><text x="1127.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1126" y="260" width="8" height="15" fill="rgb(213,80,5)"/><text x="1129.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1126" y="276" width="8" height="15" fill="rgb(244,193,28)"/><text x="1129.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1126" y="292" width="8" height="15" fill="rgb(205,189,26)"/><text x="1129.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1132" y="308" width="2" height="15" fill="rgb(240,209,32)"/><text x="1135.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1132" y="324" width="2" height="15" fill="rgb(246,174,16)"/><text x="1135.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1132" y="340" width="2" height="15" fill="rgb(241,98,44)"/><text x="1135.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1134" y="228" width="3" height="15" fill="rgb(253,27,45)"/><text x="1137.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1134" y="244" width="3" height="15" fill="rgb(209,2,9)"/><text x="1137.00" y="254.50"></text></g><g><title>0x7fd8fea231b0 (libm-2.29.so) (2 samples, 0.36%)</title><rect x="1145" y="292" width="4" height="15" fill="rgb(214,175,48)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7fd8feaa9bd3 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(232,161,17)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7fd8feaa9c32 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(228,52,0)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fd8feaa9c3e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1153" y="292" width="3" height="15" fill="rgb(241,119,16)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7fd8feaa9c52 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(241,74,39)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fd8feaa9c5a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1158" y="292" width="2" height="15" fill="rgb(240,8,28)"/><text x="1161.00" y="302.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.80%)</title><rect x="1141" y="276" width="21" height="15" fill="rgb(227,84,42)"/><text x="1144.00" y="286.50"></text></g><g><title>0x7fd8feaa9c7b (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(219,126,54)"/><text x="1163.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 2.33%)</title><rect x="1137" y="228" width="27" height="15" fill="rgb(216,210,13)"/><text x="1140.00" y="238.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (13 samples, 2.33%)</title><rect x="1137" y="244" width="27" height="15" fill="rgb(222,38,11)"/><text x="1140.00" y="254.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src) (13 samples, 2.33%)</title><rect x="1137" y="260" width="27" height="15" fill="rgb(230,141,53)"/><text x="1140.00" y="270.50">P..</text></g><g><title>log (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(216,33,16)"/><text x="1165.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (164 samples, 29.44%)</title><rect x="821" y="164" width="347" height="15" fill="rgb(219,200,26)"/><text x="824.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (53 samples, 9.52%)</title><rect x="1056" y="180" width="112" height="15" fill="rgb(209,112,22)"/><text x="1059.00" y="190.50">logsumexp (sc..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.87%)</title><rect x="1134" y="196" width="34" height="15" fill="rgb(242,20,1)"/><text x="1137.00" y="206.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.87%)</title><rect x="1134" y="212" width="34" height="15" fill="rgb(230,164,37)"/><text x="1137.00" y="222.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="1164" y="228" width="4" height="15" fill="rgb(229,19,21)"/><text x="1167.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1166" y="244" width="2" height="15" fill="rgb(230,144,25)"/><text x="1169.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1166" y="260" width="2" height="15" fill="rgb(208,185,8)"/><text x="1169.00" y="270.50"></text></g><g><title>0x7fd8feaa9ba0 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(220,158,33)"/><text x="1173.00" y="270.50"></text></g><g><title>0x7fd8feaa9bd3 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1173" y="260" width="2" height="15" fill="rgb(246,127,9)"/><text x="1176.00" y="270.50"></text></g><g><title>0x7fd8feaa9be7 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(220,204,13)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7fd8feaa9c3e (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(215,190,29)"/><text x="1180.00" y="270.50"></text></g><g><title>0x7fd8feaa9c56 (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(223,167,43)"/><text x="1182.00" y="270.50"></text></g><g><title>0x7fd8feaa9c6a (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(228,110,2)"/><text x="1184.00" y="270.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (174 samples, 31.24%)</title><rect x="819" y="100" width="368" height="15" fill="rgb(244,189,25)"/><text x="822.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (173 samples, 31.06%)</title><rect x="821" y="116" width="366" height="15" fill="rgb(233,216,1)"/><text x="824.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (173 samples, 31.06%)</title><rect x="821" y="132" width="366" height="15" fill="rgb(212,221,18)"/><text x="824.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (173 samples, 31.06%)</title><rect x="821" y="148" width="366" height="15" fill="rgb(235,223,46)"/><text x="824.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.62%)</title><rect x="1168" y="164" width="19" height="15" fill="rgb(229,97,35)"/><text x="1171.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.62%)</title><rect x="1168" y="180" width="19" height="15" fill="rgb(251,178,6)"/><text x="1171.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="1168" y="196" width="19" height="15" fill="rgb(254,96,23)"/><text x="1171.00" y="206.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (9 samples, 1.62%)</title><rect x="1168" y="212" width="19" height="15" fill="rgb(229,67,53)"/><text x="1171.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (9 samples, 1.62%)</title><rect x="1168" y="228" width="19" height="15" fill="rgb(228,20,3)"/><text x="1171.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.44%)</title><rect x="1170" y="244" width="17" height="15" fill="rgb(253,185,2)"/><text x="1173.00" y="254.50"></text></g><g><title>0x7fd8feaa9c7b (libm-2.29.so) (2 samples, 0.36%)</title><rect x="1183" y="260" width="4" height="15" fill="rgb(228,107,15)"/><text x="1186.00" y="270.50"></text></g><g><title>all (557 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,49,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (557 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(244,24,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (175 samples, 31.42%)</title><rect x="819" y="68" width="371" height="15" fill="rgb(222,185,32)"/><text x="822.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1000_5..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py) (175 samples, 31.42%)</title><rect x="819" y="84" width="371" height="15" fill="rgb(238,73,8)"/><text x="822.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(244,66,15)"/><text x="1190.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.18%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(253,4,39)"/><text x="1190.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.18%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(229,97,48)"/><text x="1190.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(220,33,1)"/><text x="1190.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(218,96,19)"/><text x="1190.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(236,99,10)"/><text x="1190.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(254,182,42)"/><text x="1190.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(217,92,50)"/><text x="1190.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.18%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(235,181,50)"/><text x="1190.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(210,113,37)"/><text x="1190.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(224,79,54)"/><text x="1190.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(253,18,14)"/><text x="1190.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(247,18,27)"/><text x="1190.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(252,225,5)"/><text x="1190.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(225,169,29)"/><text x="1190.00" y="334.50"></text></g></g></svg>