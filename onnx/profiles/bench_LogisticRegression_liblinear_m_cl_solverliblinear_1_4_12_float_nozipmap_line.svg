<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.56%)</title><rect x="32" y="164" width="7" height="15" fill="rgb(234,72,35)"/><text x="35.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.56%)</title><rect x="32" y="180" width="7" height="15" fill="rgb(253,181,54)"/><text x="35.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.56%)</title><rect x="42" y="180" width="7" height="15" fill="rgb(226,21,31)"/><text x="45.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.11%)</title><rect x="65" y="196" width="13" height="15" fill="rgb(228,97,4)"/><text x="68.00" y="206.50"></text></g><g><title>0x7f17633cb130 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="75" y="212" width="3" height="15" fill="rgb(227,140,15)"/><text x="78.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 3.06%)</title><rect x="49" y="180" width="36" height="15" fill="rgb(214,7,47)"/><text x="52.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.56%)</title><rect x="78" y="196" width="7" height="15" fill="rgb(246,55,54)"/><text x="81.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (18 samples, 5.00%)</title><rect x="29" y="148" width="59" height="15" fill="rgb(216,116,32)"/><text x="32.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 4.17%)</title><rect x="39" y="164" width="49" height="15" fill="rgb(206,117,26)"/><text x="42.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.28%)</title><rect x="85" y="180" width="3" height="15" fill="rgb(229,216,32)"/><text x="88.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="101" y="212" width="4" height="15" fill="rgb(210,177,30)"/><text x="104.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.11%)</title><rect x="124" y="228" width="13" height="15" fill="rgb(242,161,29)"/><text x="127.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 3.33%)</title><rect x="105" y="212" width="39" height="15" fill="rgb(226,127,36)"/><text x="108.00" y="222.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.56%)</title><rect x="137" y="228" width="7" height="15" fill="rgb(241,57,54)"/><text x="140.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (16 samples, 4.44%)</title><rect x="101" y="180" width="53" height="15" fill="rgb(221,78,46)"/><text x="104.00" y="190.50">decis..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 4.44%)</title><rect x="101" y="196" width="53" height="15" fill="rgb(235,162,45)"/><text x="104.00" y="206.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.83%)</title><rect x="144" y="212" width="10" height="15" fill="rgb(219,61,39)"/><text x="147.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.56%)</title><rect x="147" y="228" width="7" height="15" fill="rgb(215,168,12)"/><text x="150.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.28%)</title><rect x="157" y="196" width="3" height="15" fill="rgb(232,145,15)"/><text x="160.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.28%)</title><rect x="160" y="196" width="4" height="15" fill="rgb(228,34,48)"/><text x="163.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.28%)</title><rect x="164" y="196" width="3" height="15" fill="rgb(223,128,5)"/><text x="167.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="164" y="212" width="3" height="15" fill="rgb(247,38,7)"/><text x="167.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.28%)</title><rect x="173" y="212" width="4" height="15" fill="rgb(214,156,44)"/><text x="176.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.28%)</title><rect x="177" y="212" width="3" height="15" fill="rgb(248,95,26)"/><text x="180.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.28%)</title><rect x="180" y="212" width="3" height="15" fill="rgb(234,202,17)"/><text x="183.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.56%)</title><rect x="183" y="212" width="7" height="15" fill="rgb(254,216,26)"/><text x="186.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 2.22%)</title><rect x="167" y="196" width="26" height="15" fill="rgb(229,106,46)"/><text x="170.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.28%)</title><rect x="190" y="212" width="3" height="15" fill="rgb(231,195,53)"/><text x="193.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.28%)</title><rect x="193" y="212" width="3" height="15" fill="rgb(240,196,13)"/><text x="196.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.83%)</title><rect x="196" y="228" width="10" height="15" fill="rgb(228,55,53)"/><text x="199.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.56%)</title><rect x="206" y="228" width="7" height="15" fill="rgb(224,13,12)"/><text x="209.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.28%)</title><rect x="213" y="228" width="3" height="15" fill="rgb(209,224,40)"/><text x="216.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 2.22%)</title><rect x="193" y="196" width="26" height="15" fill="rgb(214,57,13)"/><text x="196.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 1.94%)</title><rect x="196" y="212" width="23" height="15" fill="rgb(224,219,24)"/><text x="199.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.28%)</title><rect x="216" y="228" width="3" height="15" fill="rgb(252,65,14)"/><text x="219.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.56%)</title><rect x="219" y="196" width="7" height="15" fill="rgb(211,167,3)"/><text x="222.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.28%)</title><rect x="223" y="212" width="3" height="15" fill="rgb(224,172,39)"/><text x="226.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.28%)</title><rect x="223" y="228" width="3" height="15" fill="rgb(212,45,30)"/><text x="226.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 1.39%)</title><rect x="226" y="196" width="16" height="15" fill="rgb(221,123,0)"/><text x="229.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.28%)</title><rect x="242" y="212" width="4" height="15" fill="rgb(235,90,15)"/><text x="245.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.56%)</title><rect x="242" y="196" width="7" height="15" fill="rgb(242,140,23)"/><text x="245.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.28%)</title><rect x="246" y="212" width="3" height="15" fill="rgb(219,94,20)"/><text x="249.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.28%)</title><rect x="249" y="196" width="3" height="15" fill="rgb(211,143,37)"/><text x="252.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.83%)</title><rect x="252" y="228" width="10" height="15" fill="rgb(214,161,14)"/><text x="255.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.11%)</title><rect x="252" y="212" width="13" height="15" fill="rgb(226,201,44)"/><text x="255.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.28%)</title><rect x="262" y="228" width="3" height="15" fill="rgb(222,203,8)"/><text x="265.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.28%)</title><rect x="265" y="212" width="3" height="15" fill="rgb(254,182,49)"/><text x="268.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.28%)</title><rect x="265" y="228" width="3" height="15" fill="rgb(235,3,30)"/><text x="268.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (8 samples, 2.22%)</title><rect x="252" y="196" width="26" height="15" fill="rgb(241,198,16)"/><text x="255.00" y="206.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (3 samples, 0.83%)</title><rect x="268" y="212" width="10" height="15" fill="rgb(211,161,27)"/><text x="271.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.28%)</title><rect x="275" y="228" width="3" height="15" fill="rgb(213,90,39)"/><text x="278.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.28%)</title><rect x="291" y="228" width="4" height="15" fill="rgb(234,5,37)"/><text x="294.00" y="238.50"></text></g><g><title>0x7f17632fe6d0 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="298" y="244" width="3" height="15" fill="rgb(219,226,5)"/><text x="301.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 1.94%)</title><rect x="282" y="212" width="23" height="15" fill="rgb(214,209,39)"/><text x="285.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.83%)</title><rect x="295" y="228" width="10" height="15" fill="rgb(211,13,54)"/><text x="298.00" y="238.50"></text></g><g><title>0x7f17632fe6d4 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="301" y="244" width="4" height="15" fill="rgb(219,91,12)"/><text x="304.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 2.78%)</title><rect x="278" y="196" width="33" height="15" fill="rgb(220,23,44)"/><text x="281.00" y="206.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.56%)</title><rect x="305" y="212" width="6" height="15" fill="rgb(254,214,17)"/><text x="308.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.28%)</title><rect x="308" y="228" width="3" height="15" fill="rgb(215,162,7)"/><text x="311.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.56%)</title><rect x="314" y="212" width="7" height="15" fill="rgb(221,40,24)"/><text x="317.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.56%)</title><rect x="321" y="212" width="6" height="15" fill="rgb(243,87,23)"/><text x="324.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.28%)</title><rect x="327" y="212" width="4" height="15" fill="rgb(231,117,17)"/><text x="330.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (63 samples, 17.50%)</title><rect x="154" y="180" width="206" height="15" fill="rgb(215,161,4)"/><text x="157.00" y="190.50">decision_function (sklearn/..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 4.17%)</title><rect x="311" y="196" width="49" height="15" fill="rgb(244,162,16)"/><text x="314.00" y="206.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (9 samples, 2.50%)</title><rect x="331" y="212" width="29" height="15" fill="rgb(233,111,9)"/><text x="334.00" y="222.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (7 samples, 1.94%)</title><rect x="337" y="228" width="23" height="15" fill="rgb(210,30,25)"/><text x="340.00" y="238.50">_..</text></g><g><title>PyArray_Transpose (shape.c:665) (1 samples, 0.28%)</title><rect x="360" y="196" width="4" height="15" fill="rgb(235,228,48)"/><text x="363.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.56%)</title><rect x="360" y="180" width="7" height="15" fill="rgb(240,182,38)"/><text x="363.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.28%)</title><rect x="364" y="196" width="3" height="15" fill="rgb(235,200,37)"/><text x="367.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.28%)</title><rect x="364" y="212" width="3" height="15" fill="rgb(208,64,30)"/><text x="367.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.28%)</title><rect x="373" y="260" width="4" height="15" fill="rgb(216,75,27)"/><text x="376.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.28%)</title><rect x="373" y="276" width="4" height="15" fill="rgb(240,66,28)"/><text x="376.00" y="286.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:870) (1 samples, 0.28%)</title><rect x="373" y="292" width="4" height="15" fill="rgb(224,69,31)"/><text x="376.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.56%)</title><rect x="373" y="228" width="7" height="15" fill="rgb(249,102,0)"/><text x="376.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.56%)</title><rect x="373" y="244" width="7" height="15" fill="rgb(242,75,42)"/><text x="376.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="377" y="260" width="3" height="15" fill="rgb(229,181,49)"/><text x="380.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="377" y="276" width="3" height="15" fill="rgb(225,216,7)"/><text x="380.00" y="286.50"></text></g><g><title>array_add (number.c:330) (4 samples, 1.11%)</title><rect x="370" y="196" width="13" height="15" fill="rgb(250,110,8)"/><text x="373.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.83%)</title><rect x="373" y="212" width="10" height="15" fill="rgb(253,66,46)"/><text x="376.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.28%)</title><rect x="380" y="228" width="3" height="15" fill="rgb(225,11,4)"/><text x="383.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.28%)</title><rect x="383" y="196" width="3" height="15" fill="rgb(248,20,48)"/><text x="386.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="386" y="196" width="4" height="15" fill="rgb(221,61,11)"/><text x="389.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.28%)</title><rect x="386" y="212" width="4" height="15" fill="rgb(234,192,10)"/><text x="389.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.28%)</title><rect x="393" y="244" width="3" height="15" fill="rgb(252,44,45)"/><text x="396.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.28%)</title><rect x="393" y="260" width="3" height="15" fill="rgb(207,133,53)"/><text x="396.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:256) (1 samples, 0.28%)</title><rect x="393" y="276" width="3" height="15" fill="rgb(238,209,47)"/><text x="396.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="396" y="260" width="4" height="15" fill="rgb(220,99,1)"/><text x="399.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.28%)</title><rect x="396" y="276" width="4" height="15" fill="rgb(221,67,45)"/><text x="399.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1111) (1 samples, 0.28%)</title><rect x="396" y="292" width="4" height="15" fill="rgb(218,97,34)"/><text x="399.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.28%)</title><rect x="400" y="260" width="3" height="15" fill="rgb(222,29,44)"/><text x="403.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.28%)</title><rect x="400" y="276" width="3" height="15" fill="rgb(244,65,19)"/><text x="403.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.28%)</title><rect x="400" y="292" width="3" height="15" fill="rgb(237,46,0)"/><text x="403.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.28%)</title><rect x="403" y="292" width="3" height="15" fill="rgb(228,117,8)"/><text x="406.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.56%)</title><rect x="403" y="276" width="6" height="15" fill="rgb(239,144,54)"/><text x="406.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.28%)</title><rect x="406" y="292" width="3" height="15" fill="rgb(224,115,44)"/><text x="409.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="406" y="308" width="3" height="15" fill="rgb(252,117,40)"/><text x="409.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.28%)</title><rect x="406" y="324" width="3" height="15" fill="rgb(223,152,38)"/><text x="409.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.28%)</title><rect x="406" y="340" width="3" height="15" fill="rgb(238,204,30)"/><text x="409.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.28%)</title><rect x="406" y="356" width="3" height="15" fill="rgb(224,0,27)"/><text x="409.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="406" y="372" width="3" height="15" fill="rgb(243,173,38)"/><text x="409.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.28%)</title><rect x="409" y="276" width="4" height="15" fill="rgb(218,122,30)"/><text x="412.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.28%)</title><rect x="409" y="292" width="4" height="15" fill="rgb(252,30,27)"/><text x="412.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="409" y="308" width="4" height="15" fill="rgb(216,113,35)"/><text x="412.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.28%)</title><rect x="409" y="324" width="4" height="15" fill="rgb(209,74,25)"/><text x="412.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.28%)</title><rect x="409" y="340" width="4" height="15" fill="rgb(244,0,7)"/><text x="412.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.28%)</title><rect x="409" y="356" width="4" height="15" fill="rgb(236,211,6)"/><text x="412.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.28%)</title><rect x="413" y="308" width="3" height="15" fill="rgb(235,86,36)"/><text x="416.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.28%)</title><rect x="413" y="324" width="3" height="15" fill="rgb(212,134,9)"/><text x="416.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.28%)</title><rect x="416" y="308" width="3" height="15" fill="rgb(242,196,37)"/><text x="419.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="416" y="324" width="3" height="15" fill="rgb(209,70,53)"/><text x="419.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.83%)</title><rect x="413" y="292" width="10" height="15" fill="rgb(246,4,8)"/><text x="416.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.28%)</title><rect x="419" y="308" width="4" height="15" fill="rgb(241,144,16)"/><text x="422.00" y="318.50"></text></g><g><title>0x7f176330e134 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="419" y="324" width="4" height="15" fill="rgb(206,203,42)"/><text x="422.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (9 samples, 2.50%)</title><rect x="396" y="244" width="30" height="15" fill="rgb(231,106,28)"/><text x="399.00" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 1.94%)</title><rect x="403" y="260" width="23" height="15" fill="rgb(244,21,40)"/><text x="406.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.11%)</title><rect x="413" y="276" width="13" height="15" fill="rgb(214,229,20)"/><text x="416.00" y="286.50"></text></g><g><title>PyArray_CopyInto (ctors.c:2980) (1 samples, 0.28%)</title><rect x="423" y="292" width="3" height="15" fill="rgb(228,22,40)"/><text x="426.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2995) (1 samples, 0.28%)</title><rect x="426" y="244" width="3" height="15" fill="rgb(240,189,29)"/><text x="429.00" y="254.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.28%)</title><rect x="426" y="260" width="3" height="15" fill="rgb(232,227,38)"/><text x="429.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.28%)</title><rect x="429" y="244" width="3" height="15" fill="rgb(254,149,23)"/><text x="432.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.28%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(240,13,4)"/><text x="432.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.28%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(226,23,28)"/><text x="432.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(233,4,16)"/><text x="432.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3045) (1 samples, 0.28%)</title><rect x="432" y="244" width="4" height="15" fill="rgb(216,94,44)"/><text x="435.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(215,53,27)"/><text x="439.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.56%)</title><rect x="436" y="260" width="6" height="15" fill="rgb(230,198,11)"/><text x="439.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.56%)</title><rect x="436" y="276" width="6" height="15" fill="rgb(210,62,32)"/><text x="439.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.56%)</title><rect x="436" y="292" width="6" height="15" fill="rgb(219,63,50)"/><text x="439.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="439" y="308" width="3" height="15" fill="rgb(236,124,39)"/><text x="442.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.44%)</title><rect x="393" y="212" width="52" height="15" fill="rgb(241,176,34)"/><text x="396.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (16 samples, 4.44%)</title><rect x="393" y="228" width="52" height="15" fill="rgb(249,214,49)"/><text x="396.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (3 samples, 0.83%)</title><rect x="436" y="244" width="9" height="15" fill="rgb(224,227,49)"/><text x="439.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="442" y="260" width="3" height="15" fill="rgb(251,159,43)"/><text x="445.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (18 samples, 5.00%)</title><rect x="390" y="196" width="59" height="15" fill="rgb(229,22,33)"/><text x="393.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.28%)</title><rect x="445" y="212" width="4" height="15" fill="rgb(254,145,32)"/><text x="448.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.28%)</title><rect x="445" y="228" width="4" height="15" fill="rgb(230,50,5)"/><text x="448.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.28%)</title><rect x="445" y="244" width="4" height="15" fill="rgb(237,184,50)"/><text x="448.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (26 samples, 7.22%)</title><rect x="367" y="180" width="85" height="15" fill="rgb(247,88,15)"/><text x="370.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.28%)</title><rect x="449" y="196" width="3" height="15" fill="rgb(243,4,54)"/><text x="452.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="449" y="212" width="3" height="15" fill="rgb(236,198,37)"/><text x="452.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (111 samples, 30.83%)</title><rect x="95" y="164" width="364" height="15" fill="rgb(215,72,20)"/><text x="98.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.56%)</title><rect x="452" y="180" width="7" height="15" fill="rgb(212,24,39)"/><text x="455.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.28%)</title><rect x="455" y="196" width="4" height="15" fill="rgb(226,80,24)"/><text x="458.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3127) (1 samples, 0.28%)</title><rect x="459" y="196" width="3" height="15" fill="rgb(225,20,38)"/><text x="462.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="462" y="196" width="3" height="15" fill="rgb(246,152,34)"/><text x="465.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.28%)</title><rect x="462" y="212" width="3" height="15" fill="rgb(250,227,10)"/><text x="465.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.28%)</title><rect x="465" y="212" width="3" height="15" fill="rgb(250,89,1)"/><text x="468.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.28%)</title><rect x="465" y="228" width="3" height="15" fill="rgb(226,191,13)"/><text x="468.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.28%)</title><rect x="465" y="244" width="3" height="15" fill="rgb(243,16,28)"/><text x="468.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.11%)</title><rect x="459" y="180" width="13" height="15" fill="rgb(218,41,33)"/><text x="462.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.56%)</title><rect x="465" y="196" width="7" height="15" fill="rgb(218,94,15)"/><text x="468.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.28%)</title><rect x="468" y="212" width="4" height="15" fill="rgb(230,112,37)"/><text x="471.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.28%)</title><rect x="468" y="228" width="4" height="15" fill="rgb(206,14,14)"/><text x="471.00" y="238.50"></text></g><g><title>0x7f174e5d69dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="468" y="244" width="4" height="15" fill="rgb(205,52,47)"/><text x="471.00" y="254.50"></text></g><g><title>0x7f174e5f7265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="468" y="260" width="4" height="15" fill="rgb(219,13,50)"/><text x="471.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.28%)</title><rect x="468" y="276" width="4" height="15" fill="rgb(212,59,14)"/><text x="471.00" y="286.50"></text></g><g><title>0x7f17634bfba0 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="468" y="292" width="4" height="15" fill="rgb(209,0,9)"/><text x="471.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.39%)</title><rect x="459" y="164" width="16" height="15" fill="rgb(242,87,32)"/><text x="462.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.28%)</title><rect x="472" y="180" width="3" height="15" fill="rgb(230,19,48)"/><text x="475.00" y="190.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.28%)</title><rect x="472" y="196" width="3" height="15" fill="rgb(235,123,1)"/><text x="475.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.28%)</title><rect x="475" y="164" width="3" height="15" fill="rgb(206,147,54)"/><text x="478.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.28%)</title><rect x="491" y="180" width="4" height="15" fill="rgb(252,84,52)"/><text x="494.00" y="190.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.28%)</title><rect x="495" y="180" width="3" height="15" fill="rgb(251,79,11)"/><text x="498.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.28%)</title><rect x="495" y="196" width="3" height="15" fill="rgb(214,21,36)"/><text x="498.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.28%)</title><rect x="495" y="212" width="3" height="15" fill="rgb(244,193,19)"/><text x="498.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.28%)</title><rect x="501" y="228" width="3" height="15" fill="rgb(237,16,25)"/><text x="504.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="501" y="244" width="3" height="15" fill="rgb(217,8,15)"/><text x="504.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.28%)</title><rect x="501" y="260" width="3" height="15" fill="rgb(228,85,28)"/><text x="504.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.28%)</title><rect x="501" y="276" width="3" height="15" fill="rgb(211,167,28)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.28%)</title><rect x="501" y="292" width="3" height="15" fill="rgb(246,6,15)"/><text x="504.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.28%)</title><rect x="501" y="308" width="3" height="15" fill="rgb(254,83,41)"/><text x="504.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.56%)</title><rect x="504" y="244" width="7" height="15" fill="rgb(208,90,32)"/><text x="507.00" y="254.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:987) (1 samples, 0.28%)</title><rect x="508" y="260" width="3" height="15" fill="rgb(232,77,51)"/><text x="511.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.28%)</title><rect x="511" y="244" width="3" height="15" fill="rgb(237,31,43)"/><text x="514.00" y="254.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.28%)</title><rect x="511" y="260" width="3" height="15" fill="rgb(218,216,30)"/><text x="514.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.28%)</title><rect x="511" y="276" width="3" height="15" fill="rgb(211,221,31)"/><text x="514.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.28%)</title><rect x="511" y="292" width="3" height="15" fill="rgb(230,219,12)"/><text x="514.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.28%)</title><rect x="514" y="260" width="4" height="15" fill="rgb(209,69,28)"/><text x="517.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.28%)</title><rect x="514" y="276" width="4" height="15" fill="rgb(238,163,9)"/><text x="517.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.28%)</title><rect x="514" y="292" width="4" height="15" fill="rgb(243,59,35)"/><text x="517.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.28%)</title><rect x="514" y="308" width="4" height="15" fill="rgb(210,188,23)"/><text x="517.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.28%)</title><rect x="518" y="276" width="3" height="15" fill="rgb(238,178,32)"/><text x="521.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.28%)</title><rect x="518" y="292" width="3" height="15" fill="rgb(237,40,49)"/><text x="521.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.28%)</title><rect x="518" y="308" width="3" height="15" fill="rgb(225,220,18)"/><text x="521.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="518" y="324" width="3" height="15" fill="rgb(215,6,25)"/><text x="521.00" y="334.50"></text></g><g><title>0x7f176330dd53 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="518" y="340" width="3" height="15" fill="rgb(244,187,21)"/><text x="521.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.28%)</title><rect x="521" y="292" width="3" height="15" fill="rgb(207,27,13)"/><text x="524.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.56%)</title><rect x="521" y="276" width="6" height="15" fill="rgb(230,157,48)"/><text x="524.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.28%)</title><rect x="524" y="292" width="3" height="15" fill="rgb(217,92,27)"/><text x="527.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="527" y="292" width="4" height="15" fill="rgb(241,222,15)"/><text x="530.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.28%)</title><rect x="527" y="308" width="4" height="15" fill="rgb(227,139,9)"/><text x="530.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.56%)</title><rect x="527" y="276" width="7" height="15" fill="rgb(236,224,2)"/><text x="530.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="531" y="292" width="3" height="15" fill="rgb(244,212,38)"/><text x="534.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3031) (1 samples, 0.28%)</title><rect x="531" y="308" width="3" height="15" fill="rgb(235,118,10)"/><text x="534.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.28%)</title><rect x="534" y="276" width="3" height="15" fill="rgb(227,139,52)"/><text x="537.00" y="286.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1039) (1 samples, 0.28%)</title><rect x="534" y="292" width="3" height="15" fill="rgb(219,155,43)"/><text x="537.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 3.61%)</title><rect x="498" y="180" width="43" height="15" fill="rgb(233,203,14)"/><text x="501.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.61%)</title><rect x="498" y="196" width="43" height="15" fill="rgb(218,25,7)"/><text x="501.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 3.33%)</title><rect x="501" y="212" width="40" height="15" fill="rgb(253,215,47)"/><text x="504.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 3.06%)</title><rect x="504" y="228" width="37" height="15" fill="rgb(221,50,13)"/><text x="507.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.22%)</title><rect x="514" y="244" width="27" height="15" fill="rgb(247,129,39)"/><text x="517.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.94%)</title><rect x="518" y="260" width="23" height="15" fill="rgb(221,88,42)"/><text x="521.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.28%)</title><rect x="537" y="276" width="4" height="15" fill="rgb(207,66,4)"/><text x="540.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.28%)</title><rect x="537" y="292" width="4" height="15" fill="rgb(229,101,3)"/><text x="540.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.28%)</title><rect x="537" y="308" width="4" height="15" fill="rgb(234,99,37)"/><text x="540.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1881) (1 samples, 0.28%)</title><rect x="537" y="324" width="4" height="15" fill="rgb(239,70,27)"/><text x="540.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="541" y="196" width="3" height="15" fill="rgb(227,41,4)"/><text x="544.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.28%)</title><rect x="541" y="212" width="3" height="15" fill="rgb(215,140,21)"/><text x="544.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="544" y="228" width="3" height="15" fill="rgb(228,82,35)"/><text x="547.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:322) (1 samples, 0.28%)</title><rect x="544" y="244" width="3" height="15" fill="rgb(220,29,6)"/><text x="547.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:38) (165 samples, 45.83%)</title><rect x="10" y="52" width="540" height="15" fill="rgb(231,173,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_f..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:37) (165 samples, 45.83%)</title><rect x="10" y="68" width="540" height="15" fill="rgb(212,183,50)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (165 samples, 45.83%)</title><rect x="10" y="84" width="540" height="15" fill="rgb(249,22,10)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (165 samples, 45.83%)</title><rect x="10" y="100" width="540" height="15" fill="rgb(233,145,46)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (165 samples, 45.83%)</title><rect x="10" y="116" width="540" height="15" fill="rgb(220,81,9)"/><text x="13.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (160 samples, 44.44%)</title><rect x="26" y="132" width="524" height="15" fill="rgb(217,212,26)"/><text x="29.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (141 samples, 39.17%)</title><rect x="88" y="148" width="462" height="15" fill="rgb(241,136,33)"/><text x="91.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (22 samples, 6.11%)</title><rect x="478" y="164" width="72" height="15" fill="rgb(247,187,39)"/><text x="481.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.83%)</title><rect x="541" y="180" width="9" height="15" fill="rgb(216,40,11)"/><text x="544.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.56%)</title><rect x="544" y="196" width="6" height="15" fill="rgb(216,87,25)"/><text x="547.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.56%)</title><rect x="544" y="212" width="6" height="15" fill="rgb(233,216,52)"/><text x="547.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="547" y="228" width="3" height="15" fill="rgb(234,174,1)"/><text x="550.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="547" y="244" width="3" height="15" fill="rgb(215,80,27)"/><text x="550.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="547" y="260" width="3" height="15" fill="rgb(223,15,52)"/><text x="550.00" y="270.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:1) (1 samples, 0.28%)</title><rect x="550" y="148" width="4" height="15" fill="rgb(246,16,10)"/><text x="553.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="550" y="164" width="4" height="15" fill="rgb(231,181,9)"/><text x="553.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="550" y="180" width="4" height="15" fill="rgb(234,8,27)"/><text x="553.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="550" y="196" width="4" height="15" fill="rgb(243,173,12)"/><text x="553.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="550" y="212" width="4" height="15" fill="rgb(240,65,22)"/><text x="553.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="228" width="4" height="15" fill="rgb(218,202,53)"/><text x="553.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.28%)</title><rect x="550" y="244" width="4" height="15" fill="rgb(231,166,46)"/><text x="553.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="550" y="260" width="4" height="15" fill="rgb(224,1,22)"/><text x="553.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="276" width="4" height="15" fill="rgb(214,35,11)"/><text x="553.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="550" y="292" width="4" height="15" fill="rgb(244,179,46)"/><text x="553.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="550" y="308" width="4" height="15" fill="rgb(225,102,41)"/><text x="553.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="550" y="324" width="4" height="15" fill="rgb(216,206,3)"/><text x="553.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="550" y="340" width="4" height="15" fill="rgb(222,212,27)"/><text x="553.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="356" width="4" height="15" fill="rgb(236,151,41)"/><text x="553.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.28%)</title><rect x="550" y="372" width="4" height="15" fill="rgb(215,134,43)"/><text x="553.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="550" y="388" width="4" height="15" fill="rgb(220,148,25)"/><text x="553.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="404" width="4" height="15" fill="rgb(225,162,19)"/><text x="553.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="550" y="420" width="4" height="15" fill="rgb(210,179,12)"/><text x="553.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="550" y="436" width="4" height="15" fill="rgb(228,56,7)"/><text x="553.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="550" y="452" width="4" height="15" fill="rgb(233,222,31)"/><text x="553.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="550" y="468" width="4" height="15" fill="rgb(248,156,19)"/><text x="553.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="484" width="4" height="15" fill="rgb(234,94,26)"/><text x="553.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.28%)</title><rect x="550" y="500" width="4" height="15" fill="rgb(212,129,44)"/><text x="553.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="550" y="516" width="4" height="15" fill="rgb(215,17,23)"/><text x="553.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="550" y="532" width="4" height="15" fill="rgb(242,0,1)"/><text x="553.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="550" y="548" width="4" height="15" fill="rgb(227,44,25)"/><text x="553.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.28%)</title><rect x="550" y="564" width="4" height="15" fill="rgb(210,148,52)"/><text x="553.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="550" y="580" width="4" height="15" fill="rgb(241,201,28)"/><text x="553.00" y="590.50"></text></g><g><title>0x7f1755bb2169 (?) (1 samples, 0.28%)</title><rect x="550" y="596" width="4" height="15" fill="rgb(254,39,26)"/><text x="553.00" y="606.50"></text></g><g><title>0x7f1763303eb2 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="550" y="612" width="4" height="15" fill="rgb(242,55,54)"/><text x="553.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.28%)</title><rect x="554" y="964" width="3" height="15" fill="rgb(253,162,13)"/><text x="557.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.28%)</title><rect x="554" y="980" width="3" height="15" fill="rgb(239,170,41)"/><text x="557.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:90) (1 samples, 0.28%)</title><rect x="554" y="996" width="3" height="15" fill="rgb(240,130,22)"/><text x="557.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.56%)</title><rect x="554" y="852" width="6" height="15" fill="rgb(245,85,30)"/><text x="557.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.56%)</title><rect x="554" y="868" width="6" height="15" fill="rgb(207,160,54)"/><text x="557.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.56%)</title><rect x="554" y="884" width="6" height="15" fill="rgb(230,157,31)"/><text x="557.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.56%)</title><rect x="554" y="900" width="6" height="15" fill="rgb(225,90,23)"/><text x="557.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.56%)</title><rect x="554" y="916" width="6" height="15" fill="rgb(206,158,45)"/><text x="557.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.56%)</title><rect x="554" y="932" width="6" height="15" fill="rgb(216,26,2)"/><text x="557.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.56%)</title><rect x="554" y="948" width="6" height="15" fill="rgb(228,150,1)"/><text x="557.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.28%)</title><rect x="557" y="964" width="3" height="15" fill="rgb(249,90,11)"/><text x="560.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.28%)</title><rect x="557" y="980" width="3" height="15" fill="rgb(223,56,25)"/><text x="560.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.28%)</title><rect x="557" y="996" width="3" height="15" fill="rgb(250,99,2)"/><text x="560.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.28%)</title><rect x="560" y="884" width="3" height="15" fill="rgb(250,105,41)"/><text x="563.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.28%)</title><rect x="560" y="900" width="3" height="15" fill="rgb(213,24,53)"/><text x="563.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.28%)</title><rect x="560" y="916" width="3" height="15" fill="rgb(242,37,49)"/><text x="563.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.28%)</title><rect x="560" y="932" width="3" height="15" fill="rgb(210,4,8)"/><text x="563.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.28%)</title><rect x="560" y="948" width="3" height="15" fill="rgb(247,67,30)"/><text x="563.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.28%)</title><rect x="560" y="964" width="3" height="15" fill="rgb(225,219,8)"/><text x="563.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="554" y="596" width="13" height="15" fill="rgb(233,10,47)"/><text x="557.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.11%)</title><rect x="554" y="612" width="13" height="15" fill="rgb(219,155,45)"/><text x="557.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="554" y="628" width="13" height="15" fill="rgb(214,163,13)"/><text x="557.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="554" y="644" width="13" height="15" fill="rgb(248,141,25)"/><text x="557.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="554" y="660" width="13" height="15" fill="rgb(222,155,31)"/><text x="557.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="554" y="676" width="13" height="15" fill="rgb(237,208,13)"/><text x="557.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="554" y="692" width="13" height="15" fill="rgb(218,56,33)"/><text x="557.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="554" y="708" width="13" height="15" fill="rgb(225,64,5)"/><text x="557.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.11%)</title><rect x="554" y="724" width="13" height="15" fill="rgb(210,154,39)"/><text x="557.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="554" y="740" width="13" height="15" fill="rgb(228,41,17)"/><text x="557.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="554" y="756" width="13" height="15" fill="rgb(205,20,41)"/><text x="557.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="554" y="772" width="13" height="15" fill="rgb(209,175,39)"/><text x="557.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="554" y="788" width="13" height="15" fill="rgb(235,153,2)"/><text x="557.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="554" y="804" width="13" height="15" fill="rgb(218,4,22)"/><text x="557.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.11%)</title><rect x="554" y="820" width="13" height="15" fill="rgb(213,132,25)"/><text x="557.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.11%)</title><rect x="554" y="836" width="13" height="15" fill="rgb(206,81,5)"/><text x="557.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.56%)</title><rect x="560" y="852" width="7" height="15" fill="rgb(229,203,18)"/><text x="563.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.56%)</title><rect x="560" y="868" width="7" height="15" fill="rgb(251,171,25)"/><text x="563.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.28%)</title><rect x="563" y="884" width="4" height="15" fill="rgb(206,129,41)"/><text x="566.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.28%)</title><rect x="563" y="900" width="4" height="15" fill="rgb(209,66,44)"/><text x="566.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.28%)</title><rect x="563" y="916" width="4" height="15" fill="rgb(206,141,39)"/><text x="566.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.28%)</title><rect x="563" y="932" width="4" height="15" fill="rgb(245,24,38)"/><text x="566.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.28%)</title><rect x="563" y="948" width="4" height="15" fill="rgb(220,56,12)"/><text x="566.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.28%)</title><rect x="563" y="964" width="4" height="15" fill="rgb(230,141,3)"/><text x="566.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.28%)</title><rect x="563" y="980" width="4" height="15" fill="rgb(229,46,24)"/><text x="566.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.28%)</title><rect x="563" y="996" width="4" height="15" fill="rgb(227,77,49)"/><text x="566.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="563" y="1012" width="4" height="15" fill="rgb(244,188,26)"/><text x="566.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (5 samples, 1.39%)</title><rect x="554" y="148" width="16" height="15" fill="rgb(231,159,52)"/><text x="557.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="554" y="164" width="16" height="15" fill="rgb(217,61,27)"/><text x="557.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.39%)</title><rect x="554" y="180" width="16" height="15" fill="rgb(217,159,23)"/><text x="557.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="554" y="196" width="16" height="15" fill="rgb(251,42,14)"/><text x="557.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="554" y="212" width="16" height="15" fill="rgb(218,103,54)"/><text x="557.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="554" y="228" width="16" height="15" fill="rgb(251,6,51)"/><text x="557.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="554" y="244" width="16" height="15" fill="rgb(253,69,7)"/><text x="557.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="554" y="260" width="16" height="15" fill="rgb(232,215,32)"/><text x="557.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="554" y="276" width="16" height="15" fill="rgb(215,169,43)"/><text x="557.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.39%)</title><rect x="554" y="292" width="16" height="15" fill="rgb(212,114,12)"/><text x="557.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="554" y="308" width="16" height="15" fill="rgb(206,201,5)"/><text x="557.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="554" y="324" width="16" height="15" fill="rgb(236,32,34)"/><text x="557.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="554" y="340" width="16" height="15" fill="rgb(239,28,48)"/><text x="557.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="554" y="356" width="16" height="15" fill="rgb(228,90,24)"/><text x="557.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="554" y="372" width="16" height="15" fill="rgb(222,64,13)"/><text x="557.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.39%)</title><rect x="554" y="388" width="16" height="15" fill="rgb(206,55,33)"/><text x="557.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="554" y="404" width="16" height="15" fill="rgb(229,101,38)"/><text x="557.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="554" y="420" width="16" height="15" fill="rgb(212,78,7)"/><text x="557.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="554" y="436" width="16" height="15" fill="rgb(209,56,12)"/><text x="557.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="554" y="452" width="16" height="15" fill="rgb(207,40,18)"/><text x="557.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="554" y="468" width="16" height="15" fill="rgb(254,89,38)"/><text x="557.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.39%)</title><rect x="554" y="484" width="16" height="15" fill="rgb(245,40,34)"/><text x="557.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="554" y="500" width="16" height="15" fill="rgb(235,36,40)"/><text x="557.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="554" y="516" width="16" height="15" fill="rgb(246,85,52)"/><text x="557.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="554" y="532" width="16" height="15" fill="rgb(248,26,19)"/><text x="557.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="554" y="548" width="16" height="15" fill="rgb(233,55,51)"/><text x="557.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="554" y="564" width="16" height="15" fill="rgb(242,8,31)"/><text x="557.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.39%)</title><rect x="554" y="580" width="16" height="15" fill="rgb(243,57,32)"/><text x="557.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="567" y="596" width="3" height="15" fill="rgb(208,103,54)"/><text x="570.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="567" y="612" width="3" height="15" fill="rgb(214,99,2)"/><text x="570.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="567" y="628" width="3" height="15" fill="rgb(218,155,30)"/><text x="570.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.28%)</title><rect x="567" y="644" width="3" height="15" fill="rgb(250,149,10)"/><text x="570.00" y="654.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.28%)</title><rect x="567" y="660" width="3" height="15" fill="rgb(241,193,1)"/><text x="570.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.28%)</title><rect x="567" y="676" width="3" height="15" fill="rgb(239,94,47)"/><text x="570.00" y="686.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.28%)</title><rect x="567" y="692" width="3" height="15" fill="rgb(218,87,14)"/><text x="570.00" y="702.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.28%)</title><rect x="567" y="708" width="3" height="15" fill="rgb(215,140,29)"/><text x="570.00" y="718.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.28%)</title><rect x="567" y="724" width="3" height="15" fill="rgb(236,220,51)"/><text x="570.00" y="734.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.28%)</title><rect x="567" y="740" width="3" height="15" fill="rgb(221,62,38)"/><text x="570.00" y="750.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.28%)</title><rect x="570" y="900" width="3" height="15" fill="rgb(217,59,23)"/><text x="573.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="916" width="3" height="15" fill="rgb(237,206,20)"/><text x="573.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="932" width="3" height="15" fill="rgb(214,100,8)"/><text x="573.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="948" width="3" height="15" fill="rgb(252,72,28)"/><text x="573.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="964" width="3" height="15" fill="rgb(236,98,13)"/><text x="573.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="980" width="3" height="15" fill="rgb(251,104,17)"/><text x="573.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.28%)</title><rect x="570" y="996" width="3" height="15" fill="rgb(227,139,27)"/><text x="573.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="570" y="1012" width="3" height="15" fill="rgb(245,128,49)"/><text x="573.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1028" width="3" height="15" fill="rgb(249,24,23)"/><text x="573.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1044" width="3" height="15" fill="rgb(250,175,44)"/><text x="573.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1060" width="3" height="15" fill="rgb(210,108,41)"/><text x="573.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1076" width="3" height="15" fill="rgb(220,4,6)"/><text x="573.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1092" width="3" height="15" fill="rgb(215,225,5)"/><text x="573.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1108" width="3" height="15" fill="rgb(237,19,31)"/><text x="573.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.28%)</title><rect x="570" y="1124" width="3" height="15" fill="rgb(241,118,34)"/><text x="573.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1140" width="3" height="15" fill="rgb(246,54,0)"/><text x="573.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1156" width="3" height="15" fill="rgb(247,203,10)"/><text x="573.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1172" width="3" height="15" fill="rgb(212,97,6)"/><text x="573.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1188" width="3" height="15" fill="rgb(237,136,2)"/><text x="573.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1204" width="3" height="15" fill="rgb(208,119,2)"/><text x="573.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.28%)</title><rect x="570" y="1220" width="3" height="15" fill="rgb(205,6,23)"/><text x="573.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1236" width="3" height="15" fill="rgb(210,198,41)"/><text x="573.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1252" width="3" height="15" fill="rgb(211,126,15)"/><text x="573.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1268" width="3" height="15" fill="rgb(236,153,44)"/><text x="573.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1284" width="3" height="15" fill="rgb(220,110,22)"/><text x="573.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1300" width="3" height="15" fill="rgb(233,200,27)"/><text x="573.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.28%)</title><rect x="570" y="1316" width="3" height="15" fill="rgb(249,77,21)"/><text x="573.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1332" width="3" height="15" fill="rgb(226,79,52)"/><text x="573.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1348" width="3" height="15" fill="rgb(219,95,48)"/><text x="573.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1364" width="3" height="15" fill="rgb(245,174,30)"/><text x="573.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1380" width="3" height="15" fill="rgb(225,179,48)"/><text x="573.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1396" width="3" height="15" fill="rgb(222,12,5)"/><text x="573.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.28%)</title><rect x="570" y="1412" width="3" height="15" fill="rgb(244,110,29)"/><text x="573.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1428" width="3" height="15" fill="rgb(226,214,6)"/><text x="573.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1444" width="3" height="15" fill="rgb(223,153,37)"/><text x="573.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1460" width="3" height="15" fill="rgb(215,154,19)"/><text x="573.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1476" width="3" height="15" fill="rgb(209,131,35)"/><text x="573.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1492" width="3" height="15" fill="rgb(209,48,22)"/><text x="573.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:113) (1 samples, 0.28%)</title><rect x="570" y="1508" width="3" height="15" fill="rgb(247,1,21)"/><text x="573.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1524" width="3" height="15" fill="rgb(221,168,36)"/><text x="573.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1540" width="3" height="15" fill="rgb(205,229,1)"/><text x="573.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1556" width="3" height="15" fill="rgb(252,131,4)"/><text x="573.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="570" y="1572" width="3" height="15" fill="rgb(240,117,49)"/><text x="573.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="570" y="1588" width="3" height="15" fill="rgb(237,182,34)"/><text x="573.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py:6) (1 samples, 0.28%)</title><rect x="570" y="1604" width="3" height="15" fill="rgb(210,9,16)"/><text x="573.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="570" y="1620" width="3" height="15" fill="rgb(214,30,36)"/><text x="573.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="570" y="1636" width="3" height="15" fill="rgb(242,69,29)"/><text x="573.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="570" y="1652" width="3" height="15" fill="rgb(248,152,26)"/><text x="573.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="570" y="1668" width="3" height="15" fill="rgb(221,52,44)"/><text x="573.00" y="1678.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.28%)</title><rect x="570" y="1684" width="3" height="15" fill="rgb(242,138,34)"/><text x="573.00" y="1694.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.28%)</title><rect x="570" y="1700" width="3" height="15" fill="rgb(206,5,46)"/><text x="573.00" y="1710.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.28%)</title><rect x="570" y="1716" width="3" height="15" fill="rgb(225,37,43)"/><text x="573.00" y="1726.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="570" y="1732" width="3" height="15" fill="rgb(232,55,30)"/><text x="573.00" y="1742.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="570" y="1748" width="3" height="15" fill="rgb(225,222,39)"/><text x="573.00" y="1758.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.56%)</title><rect x="570" y="772" width="7" height="15" fill="rgb(206,37,43)"/><text x="573.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.56%)</title><rect x="570" y="788" width="7" height="15" fill="rgb(252,132,6)"/><text x="573.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="570" y="804" width="7" height="15" fill="rgb(214,150,36)"/><text x="573.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="570" y="820" width="7" height="15" fill="rgb(225,67,43)"/><text x="573.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="570" y="836" width="7" height="15" fill="rgb(217,195,8)"/><text x="573.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="570" y="852" width="7" height="15" fill="rgb(223,216,19)"/><text x="573.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="570" y="868" width="7" height="15" fill="rgb(209,112,23)"/><text x="573.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="570" y="884" width="7" height="15" fill="rgb(235,121,34)"/><text x="573.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.28%)</title><rect x="573" y="900" width="4" height="15" fill="rgb(213,46,37)"/><text x="576.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="573" y="916" width="4" height="15" fill="rgb(247,1,7)"/><text x="576.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="573" y="932" width="4" height="15" fill="rgb(238,211,35)"/><text x="576.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="573" y="948" width="4" height="15" fill="rgb(239,189,13)"/><text x="576.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="573" y="964" width="4" height="15" fill="rgb(239,93,43)"/><text x="576.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="573" y="980" width="4" height="15" fill="rgb(225,9,31)"/><text x="576.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="573" y="996" width="4" height="15" fill="rgb(226,40,35)"/><text x="576.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="573" y="1012" width="4" height="15" fill="rgb(206,168,49)"/><text x="576.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2292) (1 samples, 0.28%)</title><rect x="573" y="1028" width="4" height="15" fill="rgb(251,113,32)"/><text x="576.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.28%)</title><rect x="573" y="1044" width="4" height="15" fill="rgb(228,175,14)"/><text x="576.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.28%)</title><rect x="573" y="1060" width="4" height="15" fill="rgb(227,171,48)"/><text x="576.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.28%)</title><rect x="573" y="1076" width="4" height="15" fill="rgb(216,86,5)"/><text x="576.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.28%)</title><rect x="573" y="1092" width="4" height="15" fill="rgb(252,96,21)"/><text x="576.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (3 samples, 0.83%)</title><rect x="570" y="148" width="10" height="15" fill="rgb(212,31,49)"/><text x="573.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="164" width="10" height="15" fill="rgb(215,219,49)"/><text x="573.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.83%)</title><rect x="570" y="180" width="10" height="15" fill="rgb(218,30,29)"/><text x="573.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="196" width="10" height="15" fill="rgb(211,190,41)"/><text x="573.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="212" width="10" height="15" fill="rgb(218,99,16)"/><text x="573.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="228" width="10" height="15" fill="rgb(209,52,35)"/><text x="573.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="244" width="10" height="15" fill="rgb(247,100,21)"/><text x="573.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="260" width="10" height="15" fill="rgb(229,146,25)"/><text x="573.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="276" width="10" height="15" fill="rgb(216,183,2)"/><text x="573.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.83%)</title><rect x="570" y="292" width="10" height="15" fill="rgb(251,61,13)"/><text x="573.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="308" width="10" height="15" fill="rgb(248,12,20)"/><text x="573.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="324" width="10" height="15" fill="rgb(244,20,47)"/><text x="573.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="340" width="10" height="15" fill="rgb(211,41,17)"/><text x="573.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="356" width="10" height="15" fill="rgb(206,6,47)"/><text x="573.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="372" width="10" height="15" fill="rgb(221,32,24)"/><text x="573.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.83%)</title><rect x="570" y="388" width="10" height="15" fill="rgb(253,23,20)"/><text x="573.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="404" width="10" height="15" fill="rgb(209,16,3)"/><text x="573.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="420" width="10" height="15" fill="rgb(208,186,43)"/><text x="573.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="436" width="10" height="15" fill="rgb(231,69,5)"/><text x="573.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="452" width="10" height="15" fill="rgb(211,199,47)"/><text x="573.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="468" width="10" height="15" fill="rgb(215,75,2)"/><text x="573.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.83%)</title><rect x="570" y="484" width="10" height="15" fill="rgb(210,23,36)"/><text x="573.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="500" width="10" height="15" fill="rgb(254,228,52)"/><text x="573.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="516" width="10" height="15" fill="rgb(244,55,2)"/><text x="573.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="532" width="10" height="15" fill="rgb(232,221,25)"/><text x="573.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="548" width="10" height="15" fill="rgb(241,160,45)"/><text x="573.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="564" width="10" height="15" fill="rgb(252,63,35)"/><text x="573.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.83%)</title><rect x="570" y="580" width="10" height="15" fill="rgb(246,35,54)"/><text x="573.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="596" width="10" height="15" fill="rgb(253,93,34)"/><text x="573.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="612" width="10" height="15" fill="rgb(248,152,50)"/><text x="573.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="628" width="10" height="15" fill="rgb(205,211,17)"/><text x="573.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="644" width="10" height="15" fill="rgb(233,52,39)"/><text x="573.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="660" width="10" height="15" fill="rgb(251,108,40)"/><text x="573.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.83%)</title><rect x="570" y="676" width="10" height="15" fill="rgb(239,215,27)"/><text x="573.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="570" y="692" width="10" height="15" fill="rgb(239,13,10)"/><text x="573.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="570" y="708" width="10" height="15" fill="rgb(242,213,44)"/><text x="573.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="570" y="724" width="10" height="15" fill="rgb(248,64,1)"/><text x="573.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="570" y="740" width="10" height="15" fill="rgb(234,124,51)"/><text x="573.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="570" y="756" width="10" height="15" fill="rgb(228,31,16)"/><text x="573.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.28%)</title><rect x="577" y="772" width="3" height="15" fill="rgb(208,199,54)"/><text x="580.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="577" y="788" width="3" height="15" fill="rgb(232,120,53)"/><text x="580.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="577" y="804" width="3" height="15" fill="rgb(211,90,6)"/><text x="580.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="577" y="820" width="3" height="15" fill="rgb(232,204,27)"/><text x="580.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="577" y="836" width="3" height="15" fill="rgb(225,17,5)"/><text x="580.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="577" y="852" width="3" height="15" fill="rgb(229,143,3)"/><text x="580.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="577" y="868" width="3" height="15" fill="rgb(212,146,52)"/><text x="580.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="577" y="884" width="3" height="15" fill="rgb(244,112,27)"/><text x="580.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:262) (1 samples, 0.28%)</title><rect x="577" y="900" width="3" height="15" fill="rgb(205,175,19)"/><text x="580.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py:344) (1 samples, 0.28%)</title><rect x="577" y="916" width="3" height="15" fill="rgb(224,159,24)"/><text x="580.00" y="926.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.28%)</title><rect x="580" y="772" width="3" height="15" fill="rgb(250,215,22)"/><text x="583.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="788" width="3" height="15" fill="rgb(225,200,13)"/><text x="583.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="804" width="3" height="15" fill="rgb(242,113,15)"/><text x="583.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="820" width="3" height="15" fill="rgb(213,166,21)"/><text x="583.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="836" width="3" height="15" fill="rgb(215,81,4)"/><text x="583.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="852" width="3" height="15" fill="rgb(245,140,2)"/><text x="583.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.28%)</title><rect x="580" y="868" width="3" height="15" fill="rgb(253,119,44)"/><text x="583.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="884" width="3" height="15" fill="rgb(224,183,0)"/><text x="583.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="900" width="3" height="15" fill="rgb(232,36,29)"/><text x="583.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="916" width="3" height="15" fill="rgb(213,119,37)"/><text x="583.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="932" width="3" height="15" fill="rgb(236,121,26)"/><text x="583.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="948" width="3" height="15" fill="rgb(250,160,34)"/><text x="583.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.28%)</title><rect x="580" y="964" width="3" height="15" fill="rgb(211,205,25)"/><text x="583.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="980" width="3" height="15" fill="rgb(232,227,38)"/><text x="583.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="996" width="3" height="15" fill="rgb(230,134,34)"/><text x="583.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="1012" width="3" height="15" fill="rgb(251,86,23)"/><text x="583.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="1028" width="3" height="15" fill="rgb(239,12,9)"/><text x="583.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="1044" width="3" height="15" fill="rgb(208,85,29)"/><text x="583.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.28%)</title><rect x="580" y="1060" width="3" height="15" fill="rgb(221,1,12)"/><text x="583.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="1076" width="3" height="15" fill="rgb(234,97,30)"/><text x="583.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="580" y="1092" width="3" height="15" fill="rgb(221,48,43)"/><text x="583.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="1108" width="3" height="15" fill="rgb(236,89,35)"/><text x="583.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="1124" width="3" height="15" fill="rgb(234,33,37)"/><text x="583.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="1140" width="3" height="15" fill="rgb(242,163,27)"/><text x="583.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="1156" width="3" height="15" fill="rgb(248,115,48)"/><text x="583.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="1172" width="3" height="15" fill="rgb(217,155,42)"/><text x="583.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="1188" width="3" height="15" fill="rgb(227,31,4)"/><text x="583.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.28%)</title><rect x="580" y="1204" width="3" height="15" fill="rgb(228,85,5)"/><text x="583.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="1220" width="3" height="15" fill="rgb(236,14,19)"/><text x="583.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="1236" width="3" height="15" fill="rgb(241,118,18)"/><text x="583.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="1252" width="3" height="15" fill="rgb(220,205,35)"/><text x="583.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="1268" width="3" height="15" fill="rgb(218,146,28)"/><text x="583.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="1284" width="3" height="15" fill="rgb(238,219,46)"/><text x="583.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.28%)</title><rect x="580" y="1300" width="3" height="15" fill="rgb(216,28,25)"/><text x="583.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="580" y="1316" width="3" height="15" fill="rgb(236,178,39)"/><text x="583.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="580" y="1332" width="3" height="15" fill="rgb(232,204,20)"/><text x="583.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="580" y="1348" width="3" height="15" fill="rgb(205,153,37)"/><text x="583.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="580" y="1364" width="3" height="15" fill="rgb(232,170,35)"/><text x="583.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="580" y="1380" width="3" height="15" fill="rgb(213,186,18)"/><text x="583.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:71) (1 samples, 0.28%)</title><rect x="580" y="1396" width="3" height="15" fill="rgb(237,118,40)"/><text x="583.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="580" y="1412" width="3" height="15" fill="rgb(212,214,11)"/><text x="583.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="580" y="1428" width="3" height="15" fill="rgb(249,212,4)"/><text x="583.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="580" y="1444" width="3" height="15" fill="rgb(241,170,4)"/><text x="583.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="580" y="1460" width="3" height="15" fill="rgb(225,47,22)"/><text x="583.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="580" y="1476" width="3" height="15" fill="rgb(214,209,16)"/><text x="583.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.28%)</title><rect x="580" y="1492" width="3" height="15" fill="rgb(214,82,41)"/><text x="583.00" y="1502.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.28%)</title><rect x="580" y="1508" width="3" height="15" fill="rgb(232,119,19)"/><text x="583.00" y="1518.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.28%)</title><rect x="580" y="1524" width="3" height="15" fill="rgb(247,213,31)"/><text x="583.00" y="1534.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.28%)</title><rect x="580" y="1540" width="3" height="15" fill="rgb(248,179,26)"/><text x="583.00" y="1550.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.28%)</title><rect x="580" y="1556" width="3" height="15" fill="rgb(215,8,24)"/><text x="583.00" y="1566.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.28%)</title><rect x="580" y="1572" width="3" height="15" fill="rgb(250,106,16)"/><text x="583.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.56%)</title><rect x="580" y="484" width="6" height="15" fill="rgb(251,132,53)"/><text x="583.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="580" y="500" width="6" height="15" fill="rgb(214,38,45)"/><text x="583.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="580" y="516" width="6" height="15" fill="rgb(236,208,9)"/><text x="583.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="580" y="532" width="6" height="15" fill="rgb(206,187,20)"/><text x="583.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="580" y="548" width="6" height="15" fill="rgb(213,173,38)"/><text x="583.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="580" y="564" width="6" height="15" fill="rgb(217,44,0)"/><text x="583.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.56%)</title><rect x="580" y="580" width="6" height="15" fill="rgb(220,8,25)"/><text x="583.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="580" y="596" width="6" height="15" fill="rgb(244,27,39)"/><text x="583.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="580" y="612" width="6" height="15" fill="rgb(240,56,23)"/><text x="583.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="580" y="628" width="6" height="15" fill="rgb(234,94,28)"/><text x="583.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="580" y="644" width="6" height="15" fill="rgb(242,162,11)"/><text x="583.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="580" y="660" width="6" height="15" fill="rgb(244,150,43)"/><text x="583.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.56%)</title><rect x="580" y="676" width="6" height="15" fill="rgb(222,219,43)"/><text x="583.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="580" y="692" width="6" height="15" fill="rgb(220,198,37)"/><text x="583.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="580" y="708" width="6" height="15" fill="rgb(248,177,48)"/><text x="583.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="580" y="724" width="6" height="15" fill="rgb(231,54,23)"/><text x="583.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="580" y="740" width="6" height="15" fill="rgb(206,214,46)"/><text x="583.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="580" y="756" width="6" height="15" fill="rgb(233,14,45)"/><text x="583.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.28%)</title><rect x="583" y="772" width="3" height="15" fill="rgb(209,74,24)"/><text x="586.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="583" y="788" width="3" height="15" fill="rgb(219,107,34)"/><text x="586.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="583" y="804" width="3" height="15" fill="rgb(220,184,8)"/><text x="586.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="583" y="820" width="3" height="15" fill="rgb(214,25,43)"/><text x="586.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="583" y="836" width="3" height="15" fill="rgb(229,143,17)"/><text x="586.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="583" y="852" width="3" height="15" fill="rgb(231,124,16)"/><text x="586.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="583" y="868" width="3" height="15" fill="rgb(237,204,41)"/><text x="586.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="583" y="884" width="3" height="15" fill="rgb(205,174,34)"/><text x="586.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.28%)</title><rect x="583" y="900" width="3" height="15" fill="rgb(220,154,22)"/><text x="586.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="583" y="916" width="3" height="15" fill="rgb(244,25,5)"/><text x="586.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="583" y="932" width="3" height="15" fill="rgb(235,67,17)"/><text x="586.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="583" y="948" width="3" height="15" fill="rgb(240,66,42)"/><text x="586.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="583" y="964" width="3" height="15" fill="rgb(242,68,26)"/><text x="586.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="583" y="980" width="3" height="15" fill="rgb(242,117,18)"/><text x="586.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.28%)</title><rect x="583" y="996" width="3" height="15" fill="rgb(213,59,48)"/><text x="586.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="583" y="1012" width="3" height="15" fill="rgb(240,75,3)"/><text x="586.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="583" y="1028" width="3" height="15" fill="rgb(212,152,33)"/><text x="586.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="583" y="1044" width="3" height="15" fill="rgb(223,21,30)"/><text x="586.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="583" y="1060" width="3" height="15" fill="rgb(250,120,21)"/><text x="586.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="583" y="1076" width="3" height="15" fill="rgb(229,127,33)"/><text x="586.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.28%)</title><rect x="583" y="1092" width="3" height="15" fill="rgb(242,217,47)"/><text x="586.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.28%)</title><rect x="583" y="1108" width="3" height="15" fill="rgb(250,15,11)"/><text x="586.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.28%)</title><rect x="583" y="1124" width="3" height="15" fill="rgb(239,102,45)"/><text x="586.00" y="1134.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.28%)</title><rect x="583" y="1140" width="3" height="15" fill="rgb(233,182,14)"/><text x="586.00" y="1150.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.28%)</title><rect x="583" y="1156" width="3" height="15" fill="rgb(206,25,51)"/><text x="586.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.28%)</title><rect x="583" y="1172" width="3" height="15" fill="rgb(233,144,16)"/><text x="586.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.28%)</title><rect x="583" y="1188" width="3" height="15" fill="rgb(214,139,43)"/><text x="586.00" y="1198.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.28%)</title><rect x="583" y="1204" width="3" height="15" fill="rgb(242,144,2)"/><text x="586.00" y="1214.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py:2800) (1 samples, 0.28%)</title><rect x="583" y="1220" width="3" height="15" fill="rgb(230,221,44)"/><text x="586.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.11%)</title><rect x="580" y="244" width="13" height="15" fill="rgb(223,162,40)"/><text x="583.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="580" y="260" width="13" height="15" fill="rgb(219,104,4)"/><text x="583.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="580" y="276" width="13" height="15" fill="rgb(249,206,9)"/><text x="583.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="580" y="292" width="13" height="15" fill="rgb(213,229,45)"/><text x="583.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="580" y="308" width="13" height="15" fill="rgb(245,64,27)"/><text x="583.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="580" y="324" width="13" height="15" fill="rgb(212,84,37)"/><text x="583.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.11%)</title><rect x="580" y="340" width="13" height="15" fill="rgb(217,209,41)"/><text x="583.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="580" y="356" width="13" height="15" fill="rgb(230,211,8)"/><text x="583.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.11%)</title><rect x="580" y="372" width="13" height="15" fill="rgb(246,37,8)"/><text x="583.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="580" y="388" width="13" height="15" fill="rgb(241,42,27)"/><text x="583.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="580" y="404" width="13" height="15" fill="rgb(236,74,30)"/><text x="583.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="580" y="420" width="13" height="15" fill="rgb(213,106,11)"/><text x="583.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="580" y="436" width="13" height="15" fill="rgb(231,184,38)"/><text x="583.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="580" y="452" width="13" height="15" fill="rgb(222,20,19)"/><text x="583.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="580" y="468" width="13" height="15" fill="rgb(216,73,51)"/><text x="583.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.56%)</title><rect x="586" y="484" width="7" height="15" fill="rgb(238,170,46)"/><text x="589.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="500" width="7" height="15" fill="rgb(217,132,16)"/><text x="589.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="516" width="7" height="15" fill="rgb(223,185,13)"/><text x="589.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="532" width="7" height="15" fill="rgb(254,199,35)"/><text x="589.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="586" y="548" width="7" height="15" fill="rgb(242,91,43)"/><text x="589.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="564" width="7" height="15" fill="rgb(209,176,40)"/><text x="589.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.56%)</title><rect x="586" y="580" width="7" height="15" fill="rgb(244,77,45)"/><text x="589.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="596" width="7" height="15" fill="rgb(251,33,8)"/><text x="589.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="586" y="612" width="7" height="15" fill="rgb(243,126,42)"/><text x="589.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="628" width="7" height="15" fill="rgb(211,94,32)"/><text x="589.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="644" width="7" height="15" fill="rgb(236,113,33)"/><text x="589.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="660" width="7" height="15" fill="rgb(224,226,47)"/><text x="589.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="676" width="7" height="15" fill="rgb(238,157,41)"/><text x="589.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="586" y="692" width="7" height="15" fill="rgb(211,155,21)"/><text x="589.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="708" width="7" height="15" fill="rgb(251,216,6)"/><text x="589.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.56%)</title><rect x="586" y="724" width="7" height="15" fill="rgb(244,199,39)"/><text x="589.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="740" width="7" height="15" fill="rgb(232,164,4)"/><text x="589.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="756" width="7" height="15" fill="rgb(231,197,20)"/><text x="589.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="772" width="7" height="15" fill="rgb(231,155,21)"/><text x="589.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="586" y="788" width="7" height="15" fill="rgb(238,127,41)"/><text x="589.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="804" width="7" height="15" fill="rgb(254,215,5)"/><text x="589.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.56%)</title><rect x="586" y="820" width="7" height="15" fill="rgb(253,225,37)"/><text x="589.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="836" width="7" height="15" fill="rgb(240,91,8)"/><text x="589.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="852" width="7" height="15" fill="rgb(233,32,24)"/><text x="589.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="868" width="7" height="15" fill="rgb(228,157,26)"/><text x="589.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="586" y="884" width="7" height="15" fill="rgb(241,186,1)"/><text x="589.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="900" width="7" height="15" fill="rgb(228,149,16)"/><text x="589.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.56%)</title><rect x="586" y="916" width="7" height="15" fill="rgb(213,212,11)"/><text x="589.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="932" width="7" height="15" fill="rgb(210,102,41)"/><text x="589.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="586" y="948" width="7" height="15" fill="rgb(229,75,33)"/><text x="589.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="964" width="7" height="15" fill="rgb(253,181,18)"/><text x="589.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="980" width="7" height="15" fill="rgb(247,93,35)"/><text x="589.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="996" width="7" height="15" fill="rgb(212,120,39)"/><text x="589.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="1012" width="7" height="15" fill="rgb(252,209,4)"/><text x="589.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="586" y="1028" width="7" height="15" fill="rgb(252,140,38)"/><text x="589.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="586" y="1044" width="7" height="15" fill="rgb(206,87,35)"/><text x="589.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (2 samples, 0.56%)</title><rect x="586" y="1060" width="7" height="15" fill="rgb(239,49,39)"/><text x="589.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="586" y="1076" width="7" height="15" fill="rgb(208,220,3)"/><text x="589.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="586" y="1092" width="7" height="15" fill="rgb(212,200,10)"/><text x="589.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="586" y="1108" width="7" height="15" fill="rgb(254,188,53)"/><text x="589.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.56%)</title><rect x="586" y="1124" width="7" height="15" fill="rgb(228,204,10)"/><text x="589.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.56%)</title><rect x="586" y="1140" width="7" height="15" fill="rgb(228,114,45)"/><text x="589.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.56%)</title><rect x="586" y="1156" width="7" height="15" fill="rgb(249,224,25)"/><text x="589.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.28%)</title><rect x="593" y="868" width="3" height="15" fill="rgb(228,170,21)"/><text x="596.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="593" y="884" width="3" height="15" fill="rgb(209,215,10)"/><text x="596.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="593" y="900" width="3" height="15" fill="rgb(252,109,14)"/><text x="596.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="593" y="916" width="3" height="15" fill="rgb(222,37,42)"/><text x="596.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="593" y="932" width="3" height="15" fill="rgb(232,30,6)"/><text x="596.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="593" y="948" width="3" height="15" fill="rgb(231,199,30)"/><text x="596.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.28%)</title><rect x="593" y="964" width="3" height="15" fill="rgb(223,146,43)"/><text x="596.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="593" y="980" width="3" height="15" fill="rgb(245,207,43)"/><text x="596.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="593" y="996" width="3" height="15" fill="rgb(216,159,2)"/><text x="596.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="593" y="1012" width="3" height="15" fill="rgb(244,151,29)"/><text x="596.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="593" y="1028" width="3" height="15" fill="rgb(245,213,53)"/><text x="596.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="593" y="1044" width="3" height="15" fill="rgb(242,87,46)"/><text x="596.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:10) (1 samples, 0.28%)</title><rect x="593" y="1060" width="3" height="15" fill="rgb(211,119,49)"/><text x="596.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="593" y="1076" width="3" height="15" fill="rgb(245,80,12)"/><text x="596.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="593" y="1092" width="3" height="15" fill="rgb(207,9,45)"/><text x="596.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.28%)</title><rect x="593" y="1108" width="3" height="15" fill="rgb(234,26,30)"/><text x="596.00" y="1118.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.28%)</title><rect x="593" y="1124" width="3" height="15" fill="rgb(216,188,46)"/><text x="596.00" y="1134.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.28%)</title><rect x="593" y="1140" width="3" height="15" fill="rgb(230,37,52)"/><text x="596.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="593" y="1156" width="3" height="15" fill="rgb(242,169,43)"/><text x="596.00" y="1166.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1172" width="3" height="15" fill="rgb(232,3,10)"/><text x="596.00" y="1182.50"></text></g><g><title>0x7f1763575995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1188" width="3" height="15" fill="rgb(230,15,54)"/><text x="596.00" y="1198.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1204" width="3" height="15" fill="rgb(252,198,18)"/><text x="596.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1220" width="3" height="15" fill="rgb(242,151,1)"/><text x="596.00" y="1230.50"></text></g><g><title>0x7f1763575258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1236" width="3" height="15" fill="rgb(224,155,32)"/><text x="596.00" y="1246.50"></text></g><g><title>0x7f17635c2d7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1252" width="3" height="15" fill="rgb(209,106,16)"/><text x="596.00" y="1262.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1268" width="3" height="15" fill="rgb(220,111,34)"/><text x="596.00" y="1278.50"></text></g><g><title>0x7f17635c318b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1284" width="3" height="15" fill="rgb(254,133,42)"/><text x="596.00" y="1294.50"></text></g><g><title>0x7f17635b8bcb (ld-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1300" width="3" height="15" fill="rgb(207,171,44)"/><text x="596.00" y="1310.50"></text></g><g><title>0x7f17635b71fb (ld-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1316" width="3" height="15" fill="rgb(216,167,42)"/><text x="596.00" y="1326.50"></text></g><g><title>0x7f17635caac4 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="593" y="1332" width="3" height="15" fill="rgb(237,199,53)"/><text x="596.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.56%)</title><rect x="593" y="436" width="7" height="15" fill="rgb(246,119,31)"/><text x="596.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="593" y="452" width="7" height="15" fill="rgb(227,80,43)"/><text x="596.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="593" y="468" width="7" height="15" fill="rgb(219,202,16)"/><text x="596.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="593" y="484" width="7" height="15" fill="rgb(248,87,43)"/><text x="596.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="593" y="500" width="7" height="15" fill="rgb(245,161,34)"/><text x="596.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="593" y="516" width="7" height="15" fill="rgb(247,196,8)"/><text x="596.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.56%)</title><rect x="593" y="532" width="7" height="15" fill="rgb(217,38,32)"/><text x="596.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="593" y="548" width="7" height="15" fill="rgb(237,75,47)"/><text x="596.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="593" y="564" width="7" height="15" fill="rgb(243,25,25)"/><text x="596.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="593" y="580" width="7" height="15" fill="rgb(232,21,30)"/><text x="596.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="593" y="596" width="7" height="15" fill="rgb(220,13,36)"/><text x="596.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="593" y="612" width="7" height="15" fill="rgb(225,76,27)"/><text x="596.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.56%)</title><rect x="593" y="628" width="7" height="15" fill="rgb(248,25,28)"/><text x="596.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="593" y="644" width="7" height="15" fill="rgb(250,13,48)"/><text x="596.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="593" y="660" width="7" height="15" fill="rgb(243,71,18)"/><text x="596.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="593" y="676" width="7" height="15" fill="rgb(231,123,47)"/><text x="596.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="593" y="692" width="7" height="15" fill="rgb(241,191,51)"/><text x="596.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="593" y="708" width="7" height="15" fill="rgb(205,54,21)"/><text x="596.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.56%)</title><rect x="593" y="724" width="7" height="15" fill="rgb(208,119,31)"/><text x="596.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="593" y="740" width="7" height="15" fill="rgb(227,127,48)"/><text x="596.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="593" y="756" width="7" height="15" fill="rgb(240,140,21)"/><text x="596.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="593" y="772" width="7" height="15" fill="rgb(207,100,40)"/><text x="596.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="593" y="788" width="7" height="15" fill="rgb(217,142,27)"/><text x="596.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="593" y="804" width="7" height="15" fill="rgb(241,48,1)"/><text x="596.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="593" y="820" width="7" height="15" fill="rgb(210,142,7)"/><text x="596.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="593" y="836" width="7" height="15" fill="rgb(221,185,13)"/><text x="596.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="593" y="852" width="7" height="15" fill="rgb(227,86,5)"/><text x="596.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.28%)</title><rect x="596" y="868" width="4" height="15" fill="rgb(211,72,29)"/><text x="599.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="596" y="884" width="4" height="15" fill="rgb(205,224,50)"/><text x="599.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="596" y="900" width="4" height="15" fill="rgb(242,177,38)"/><text x="599.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="596" y="916" width="4" height="15" fill="rgb(217,31,35)"/><text x="599.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="596" y="932" width="4" height="15" fill="rgb(214,94,28)"/><text x="599.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="596" y="948" width="4" height="15" fill="rgb(245,179,54)"/><text x="599.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:51) (1 samples, 0.28%)</title><rect x="596" y="964" width="4" height="15" fill="rgb(217,133,19)"/><text x="599.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="596" y="980" width="4" height="15" fill="rgb(218,81,31)"/><text x="599.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.28%)</title><rect x="596" y="996" width="4" height="15" fill="rgb(221,34,38)"/><text x="599.00" y="1006.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.28%)</title><rect x="596" y="1012" width="4" height="15" fill="rgb(229,216,11)"/><text x="599.00" y="1022.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.28%)</title><rect x="600" y="1108" width="3" height="15" fill="rgb(224,65,12)"/><text x="603.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1124" width="3" height="15" fill="rgb(205,21,28)"/><text x="603.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1140" width="3" height="15" fill="rgb(241,49,53)"/><text x="603.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1156" width="3" height="15" fill="rgb(206,62,9)"/><text x="603.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1172" width="3" height="15" fill="rgb(217,83,39)"/><text x="603.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1188" width="3" height="15" fill="rgb(234,68,31)"/><text x="603.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.28%)</title><rect x="600" y="1204" width="3" height="15" fill="rgb(206,160,30)"/><text x="603.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1220" width="3" height="15" fill="rgb(235,47,34)"/><text x="603.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1236" width="3" height="15" fill="rgb(250,113,18)"/><text x="603.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1252" width="3" height="15" fill="rgb(250,68,6)"/><text x="603.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1268" width="3" height="15" fill="rgb(222,30,40)"/><text x="603.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1284" width="3" height="15" fill="rgb(239,48,52)"/><text x="603.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.28%)</title><rect x="600" y="1300" width="3" height="15" fill="rgb(206,132,37)"/><text x="603.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1316" width="3" height="15" fill="rgb(238,210,37)"/><text x="603.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1332" width="3" height="15" fill="rgb(205,20,20)"/><text x="603.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1348" width="3" height="15" fill="rgb(245,182,4)"/><text x="603.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1364" width="3" height="15" fill="rgb(251,4,0)"/><text x="603.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1380" width="3" height="15" fill="rgb(247,204,22)"/><text x="603.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.28%)</title><rect x="600" y="1396" width="3" height="15" fill="rgb(237,205,50)"/><text x="603.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1412" width="3" height="15" fill="rgb(253,56,9)"/><text x="603.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1428" width="3" height="15" fill="rgb(222,137,52)"/><text x="603.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1444" width="3" height="15" fill="rgb(235,220,49)"/><text x="603.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1460" width="3" height="15" fill="rgb(229,40,10)"/><text x="603.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1476" width="3" height="15" fill="rgb(241,208,9)"/><text x="603.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.28%)</title><rect x="600" y="1492" width="3" height="15" fill="rgb(222,98,44)"/><text x="603.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="600" y="1508" width="3" height="15" fill="rgb(226,81,42)"/><text x="603.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1524" width="3" height="15" fill="rgb(222,161,36)"/><text x="603.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1540" width="3" height="15" fill="rgb(243,5,18)"/><text x="603.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1556" width="3" height="15" fill="rgb(223,171,21)"/><text x="603.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1572" width="3" height="15" fill="rgb(235,148,36)"/><text x="603.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1588" width="3" height="15" fill="rgb(220,107,27)"/><text x="603.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1604" width="3" height="15" fill="rgb(234,139,6)"/><text x="603.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.28%)</title><rect x="600" y="1620" width="3" height="15" fill="rgb(212,222,46)"/><text x="603.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1636" width="3" height="15" fill="rgb(220,86,42)"/><text x="603.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1652" width="3" height="15" fill="rgb(253,92,23)"/><text x="603.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1668" width="3" height="15" fill="rgb(240,93,15)"/><text x="603.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1684" width="3" height="15" fill="rgb(245,143,15)"/><text x="603.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1700" width="3" height="15" fill="rgb(226,67,44)"/><text x="603.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:18) (1 samples, 0.28%)</title><rect x="600" y="1716" width="3" height="15" fill="rgb(230,162,34)"/><text x="603.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1732" width="3" height="15" fill="rgb(247,11,15)"/><text x="603.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1748" width="3" height="15" fill="rgb(219,142,51)"/><text x="603.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1764" width="3" height="15" fill="rgb(211,212,6)"/><text x="603.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="600" y="1780" width="3" height="15" fill="rgb(211,152,3)"/><text x="603.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1796" width="3" height="15" fill="rgb(210,101,12)"/><text x="603.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_k_means.py:34) (1 samples, 0.28%)</title><rect x="600" y="1812" width="3" height="15" fill="rgb(252,228,34)"/><text x="603.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="600" y="1828" width="3" height="15" fill="rgb(214,115,41)"/><text x="603.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="600" y="1844" width="3" height="15" fill="rgb(225,69,3)"/><text x="603.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="600" y="1860" width="3" height="15" fill="rgb(224,158,3)"/><text x="603.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.28%)</title><rect x="600" y="1876" width="3" height="15" fill="rgb(236,54,15)"/><text x="603.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="600" y="1892" width="3" height="15" fill="rgb(224,55,23)"/><text x="603.00" y="1902.50"></text></g><g><title>0x7f17306ddae3 (?) (1 samples, 0.28%)</title><rect x="600" y="1908" width="3" height="15" fill="rgb(218,153,52)"/><text x="603.00" y="1918.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.28%)</title><rect x="603" y="1572" width="3" height="15" fill="rgb(245,62,39)"/><text x="606.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:245) (1 samples, 0.28%)</title><rect x="603" y="1588" width="3" height="15" fill="rgb(216,157,35)"/><text x="606.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.56%)</title><rect x="603" y="1236" width="6" height="15" fill="rgb(215,107,28)"/><text x="606.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.56%)</title><rect x="603" y="1252" width="6" height="15" fill="rgb(251,26,18)"/><text x="606.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="603" y="1268" width="6" height="15" fill="rgb(234,142,5)"/><text x="606.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="603" y="1284" width="6" height="15" fill="rgb(216,48,26)"/><text x="606.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="603" y="1300" width="6" height="15" fill="rgb(231,163,1)"/><text x="606.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="603" y="1316" width="6" height="15" fill="rgb(209,213,18)"/><text x="606.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="603" y="1332" width="6" height="15" fill="rgb(245,71,9)"/><text x="606.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="603" y="1348" width="6" height="15" fill="rgb(241,4,45)"/><text x="606.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.56%)</title><rect x="603" y="1364" width="6" height="15" fill="rgb(227,51,20)"/><text x="606.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="603" y="1380" width="6" height="15" fill="rgb(250,30,5)"/><text x="606.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="603" y="1396" width="6" height="15" fill="rgb(234,48,34)"/><text x="606.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="603" y="1412" width="6" height="15" fill="rgb(249,229,15)"/><text x="606.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="603" y="1428" width="6" height="15" fill="rgb(210,14,9)"/><text x="606.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="603" y="1444" width="6" height="15" fill="rgb(206,53,0)"/><text x="606.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.56%)</title><rect x="603" y="1460" width="6" height="15" fill="rgb(234,22,37)"/><text x="606.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.56%)</title><rect x="603" y="1476" width="6" height="15" fill="rgb(225,202,12)"/><text x="606.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.56%)</title><rect x="603" y="1492" width="6" height="15" fill="rgb(223,180,50)"/><text x="606.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.56%)</title><rect x="603" y="1508" width="6" height="15" fill="rgb(246,171,23)"/><text x="606.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.56%)</title><rect x="603" y="1524" width="6" height="15" fill="rgb(253,33,46)"/><text x="606.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.56%)</title><rect x="603" y="1540" width="6" height="15" fill="rgb(251,208,2)"/><text x="606.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.56%)</title><rect x="603" y="1556" width="6" height="15" fill="rgb(216,129,21)"/><text x="606.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:87) (1 samples, 0.28%)</title><rect x="606" y="1572" width="3" height="15" fill="rgb(228,155,10)"/><text x="609.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.28%)</title><rect x="606" y="1588" width="3" height="15" fill="rgb(249,205,41)"/><text x="609.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.11%)</title><rect x="600" y="676" width="13" height="15" fill="rgb(253,92,46)"/><text x="603.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="600" y="692" width="13" height="15" fill="rgb(217,124,48)"/><text x="603.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="600" y="708" width="13" height="15" fill="rgb(222,216,2)"/><text x="603.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="600" y="724" width="13" height="15" fill="rgb(248,71,3)"/><text x="603.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="600" y="740" width="13" height="15" fill="rgb(231,19,45)"/><text x="603.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="600" y="756" width="13" height="15" fill="rgb(223,1,3)"/><text x="603.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.11%)</title><rect x="600" y="772" width="13" height="15" fill="rgb(228,131,44)"/><text x="603.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="600" y="788" width="13" height="15" fill="rgb(212,0,50)"/><text x="603.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="600" y="804" width="13" height="15" fill="rgb(252,162,17)"/><text x="603.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="600" y="820" width="13" height="15" fill="rgb(213,3,32)"/><text x="603.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="600" y="836" width="13" height="15" fill="rgb(235,43,27)"/><text x="603.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="600" y="852" width="13" height="15" fill="rgb(209,47,46)"/><text x="603.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.11%)</title><rect x="600" y="868" width="13" height="15" fill="rgb(226,74,5)"/><text x="603.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="600" y="884" width="13" height="15" fill="rgb(239,16,16)"/><text x="603.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.11%)</title><rect x="600" y="900" width="13" height="15" fill="rgb(216,192,11)"/><text x="603.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="600" y="916" width="13" height="15" fill="rgb(241,24,6)"/><text x="603.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="600" y="932" width="13" height="15" fill="rgb(215,113,30)"/><text x="603.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="600" y="948" width="13" height="15" fill="rgb(243,189,1)"/><text x="603.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="600" y="964" width="13" height="15" fill="rgb(218,225,12)"/><text x="603.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="600" y="980" width="13" height="15" fill="rgb(215,54,12)"/><text x="603.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="600" y="996" width="13" height="15" fill="rgb(227,36,14)"/><text x="603.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.11%)</title><rect x="600" y="1012" width="13" height="15" fill="rgb(220,49,16)"/><text x="603.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.11%)</title><rect x="600" y="1028" width="13" height="15" fill="rgb(231,164,46)"/><text x="603.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.11%)</title><rect x="600" y="1044" width="13" height="15" fill="rgb(249,39,21)"/><text x="603.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.11%)</title><rect x="600" y="1060" width="13" height="15" fill="rgb(213,87,21)"/><text x="603.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.11%)</title><rect x="600" y="1076" width="13" height="15" fill="rgb(234,99,36)"/><text x="603.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.11%)</title><rect x="600" y="1092" width="13" height="15" fill="rgb(228,228,29)"/><text x="603.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.83%)</title><rect x="603" y="1108" width="10" height="15" fill="rgb(211,199,16)"/><text x="606.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.83%)</title><rect x="603" y="1124" width="10" height="15" fill="rgb(234,14,43)"/><text x="606.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="603" y="1140" width="10" height="15" fill="rgb(218,187,53)"/><text x="606.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="603" y="1156" width="10" height="15" fill="rgb(249,140,29)"/><text x="606.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="603" y="1172" width="10" height="15" fill="rgb(216,160,20)"/><text x="606.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="603" y="1188" width="10" height="15" fill="rgb(216,37,50)"/><text x="606.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="603" y="1204" width="10" height="15" fill="rgb(247,186,53)"/><text x="606.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="603" y="1220" width="10" height="15" fill="rgb(207,193,37)"/><text x="606.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:37) (1 samples, 0.28%)</title><rect x="609" y="1236" width="4" height="15" fill="rgb(249,223,11)"/><text x="612.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="609" y="1252" width="4" height="15" fill="rgb(250,130,47)"/><text x="612.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="609" y="1268" width="4" height="15" fill="rgb(241,192,36)"/><text x="612.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="609" y="1284" width="4" height="15" fill="rgb(210,146,1)"/><text x="612.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="609" y="1300" width="4" height="15" fill="rgb(238,128,8)"/><text x="612.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="609" y="1316" width="4" height="15" fill="rgb(207,80,35)"/><text x="612.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="609" y="1332" width="4" height="15" fill="rgb(222,179,14)"/><text x="612.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="609" y="1348" width="4" height="15" fill="rgb(250,165,45)"/><text x="612.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="609" y="1364" width="4" height="15" fill="rgb(222,103,32)"/><text x="612.00" y="1374.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:4) (20 samples, 5.56%)</title><rect x="550" y="52" width="66" height="15" fill="rgb(239,205,46)"/><text x="553.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 5.56%)</title><rect x="550" y="68" width="66" height="15" fill="rgb(229,155,30)"/><text x="553.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 5.56%)</title><rect x="550" y="84" width="66" height="15" fill="rgb(235,9,54)"/><text x="553.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 5.56%)</title><rect x="550" y="100" width="66" height="15" fill="rgb(253,74,20)"/><text x="553.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 5.56%)</title><rect x="550" y="116" width="66" height="15" fill="rgb(212,187,13)"/><text x="553.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 5.56%)</title><rect x="550" y="132" width="66" height="15" fill="rgb(214,218,20)"/><text x="553.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (11 samples, 3.06%)</title><rect x="580" y="148" width="36" height="15" fill="rgb(232,190,16)"/><text x="583.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.06%)</title><rect x="580" y="164" width="36" height="15" fill="rgb(236,171,51)"/><text x="583.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.06%)</title><rect x="580" y="180" width="36" height="15" fill="rgb(249,152,50)"/><text x="583.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.06%)</title><rect x="580" y="196" width="36" height="15" fill="rgb(251,126,47)"/><text x="583.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.06%)</title><rect x="580" y="212" width="36" height="15" fill="rgb(219,136,3)"/><text x="583.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.06%)</title><rect x="580" y="228" width="36" height="15" fill="rgb(224,183,40)"/><text x="583.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.94%)</title><rect x="593" y="244" width="23" height="15" fill="rgb(236,145,8)"/><text x="596.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.94%)</title><rect x="593" y="260" width="23" height="15" fill="rgb(251,109,25)"/><text x="596.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.94%)</title><rect x="593" y="276" width="23" height="15" fill="rgb(247,114,7)"/><text x="596.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.94%)</title><rect x="593" y="292" width="23" height="15" fill="rgb(232,192,52)"/><text x="596.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.94%)</title><rect x="593" y="308" width="23" height="15" fill="rgb(210,69,34)"/><text x="596.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.94%)</title><rect x="593" y="324" width="23" height="15" fill="rgb(241,174,10)"/><text x="596.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.94%)</title><rect x="593" y="340" width="23" height="15" fill="rgb(243,22,26)"/><text x="596.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.94%)</title><rect x="593" y="356" width="23" height="15" fill="rgb(230,89,51)"/><text x="596.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.94%)</title><rect x="593" y="372" width="23" height="15" fill="rgb(212,121,24)"/><text x="596.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.94%)</title><rect x="593" y="388" width="23" height="15" fill="rgb(213,153,29)"/><text x="596.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.94%)</title><rect x="593" y="404" width="23" height="15" fill="rgb(233,95,32)"/><text x="596.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.94%)</title><rect x="593" y="420" width="23" height="15" fill="rgb(215,145,8)"/><text x="596.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.39%)</title><rect x="600" y="436" width="16" height="15" fill="rgb(245,108,18)"/><text x="603.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="600" y="452" width="16" height="15" fill="rgb(213,223,15)"/><text x="603.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.39%)</title><rect x="600" y="468" width="16" height="15" fill="rgb(244,147,28)"/><text x="603.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="600" y="484" width="16" height="15" fill="rgb(222,134,14)"/><text x="603.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="600" y="500" width="16" height="15" fill="rgb(224,29,0)"/><text x="603.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="600" y="516" width="16" height="15" fill="rgb(212,126,48)"/><text x="603.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="600" y="532" width="16" height="15" fill="rgb(205,70,27)"/><text x="603.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="600" y="548" width="16" height="15" fill="rgb(205,161,25)"/><text x="603.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="600" y="564" width="16" height="15" fill="rgb(247,38,45)"/><text x="603.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.39%)</title><rect x="600" y="580" width="16" height="15" fill="rgb(211,84,28)"/><text x="603.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="600" y="596" width="16" height="15" fill="rgb(254,179,25)"/><text x="603.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="600" y="612" width="16" height="15" fill="rgb(214,37,1)"/><text x="603.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="600" y="628" width="16" height="15" fill="rgb(213,173,11)"/><text x="603.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="600" y="644" width="16" height="15" fill="rgb(218,153,45)"/><text x="603.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="600" y="660" width="16" height="15" fill="rgb(212,80,27)"/><text x="603.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.28%)</title><rect x="613" y="676" width="3" height="15" fill="rgb(245,157,39)"/><text x="616.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="613" y="692" width="3" height="15" fill="rgb(238,91,26)"/><text x="616.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="613" y="708" width="3" height="15" fill="rgb(221,72,9)"/><text x="616.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="613" y="724" width="3" height="15" fill="rgb(244,218,7)"/><text x="616.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="613" y="740" width="3" height="15" fill="rgb(247,65,54)"/><text x="616.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="613" y="756" width="3" height="15" fill="rgb(227,189,46)"/><text x="616.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/sklearn_helper.py:10) (1 samples, 0.28%)</title><rect x="613" y="772" width="3" height="15" fill="rgb(240,15,3)"/><text x="616.00" y="782.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:22) (1 samples, 0.28%)</title><rect x="616" y="100" width="3" height="15" fill="rgb(217,76,17)"/><text x="619.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.28%)</title><rect x="639" y="148" width="3" height="15" fill="rgb(221,70,49)"/><text x="642.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.56%)</title><rect x="652" y="164" width="7" height="15" fill="rgb(227,27,52)"/><text x="655.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.28%)</title><rect x="659" y="164" width="3" height="15" fill="rgb(247,112,38)"/><text x="662.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (3 samples, 0.83%)</title><rect x="662" y="164" width="10" height="15" fill="rgb(240,49,19)"/><text x="665.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.39%)</title><rect x="678" y="180" width="17" height="15" fill="rgb(210,169,29)"/><text x="681.00" y="190.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.28%)</title><rect x="721" y="260" width="3" height="15" fill="rgb(253,196,14)"/><text x="724.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.28%)</title><rect x="721" y="276" width="3" height="15" fill="rgb(240,56,19)"/><text x="724.00" y="286.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.28%)</title><rect x="724" y="260" width="3" height="15" fill="rgb(240,162,54)"/><text x="727.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="724" y="276" width="3" height="15" fill="rgb(237,27,23)"/><text x="727.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.28%)</title><rect x="724" y="292" width="3" height="15" fill="rgb(211,102,3)"/><text x="727.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.28%)</title><rect x="724" y="308" width="3" height="15" fill="rgb(211,67,10)"/><text x="727.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.28%)</title><rect x="727" y="388" width="4" height="15" fill="rgb(212,95,22)"/><text x="730.00" y="398.50"></text></g><g><title>0x7f1762510a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="727" y="404" width="4" height="15" fill="rgb(232,100,6)"/><text x="730.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.28%)</title><rect x="731" y="388" width="3" height="15" fill="rgb(216,219,9)"/><text x="734.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="731" y="404" width="3" height="15" fill="rgb(228,67,25)"/><text x="734.00" y="414.50"></text></g><g><title>0x7f1763303e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="740" y="404" width="4" height="15" fill="rgb(205,105,49)"/><text x="743.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (6 samples, 1.67%)</title><rect x="727" y="308" width="20" height="15" fill="rgb(238,88,23)"/><text x="730.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (6 samples, 1.67%)</title><rect x="727" y="324" width="20" height="15" fill="rgb(253,48,49)"/><text x="730.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (6 samples, 1.67%)</title><rect x="727" y="340" width="20" height="15" fill="rgb(242,8,5)"/><text x="730.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (6 samples, 1.67%)</title><rect x="727" y="356" width="20" height="15" fill="rgb(225,38,10)"/><text x="730.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (6 samples, 1.67%)</title><rect x="727" y="372" width="20" height="15" fill="rgb(245,47,18)"/><text x="730.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (4 samples, 1.11%)</title><rect x="734" y="388" width="13" height="15" fill="rgb(253,38,8)"/><text x="737.00" y="398.50"></text></g><g><title>0x7f1763303e7a (libc-2.29.so) (1 samples, 0.28%)</title><rect x="744" y="404" width="3" height="15" fill="rgb(228,152,44)"/><text x="747.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.28%)</title><rect x="747" y="324" width="3" height="15" fill="rgb(248,220,34)"/><text x="750.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.28%)</title><rect x="750" y="324" width="4" height="15" fill="rgb(209,42,52)"/><text x="753.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.28%)</title><rect x="750" y="340" width="4" height="15" fill="rgb(218,31,15)"/><text x="753.00" y="350.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.28%)</title><rect x="754" y="372" width="3" height="15" fill="rgb(235,35,24)"/><text x="757.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.28%)</title><rect x="757" y="388" width="3" height="15" fill="rgb(229,155,16)"/><text x="760.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (3 samples, 0.83%)</title><rect x="754" y="356" width="9" height="15" fill="rgb(208,142,27)"/><text x="757.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.56%)</title><rect x="757" y="372" width="6" height="15" fill="rgb(210,76,54)"/><text x="760.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.28%)</title><rect x="760" y="388" width="3" height="15" fill="rgb(229,204,10)"/><text x="763.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (4 samples, 1.11%)</title><rect x="754" y="340" width="13" height="15" fill="rgb(224,41,33)"/><text x="757.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.28%)</title><rect x="763" y="356" width="4" height="15" fill="rgb(215,212,12)"/><text x="766.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.28%)</title><rect x="763" y="372" width="4" height="15" fill="rgb(236,158,26)"/><text x="766.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.28%)</title><rect x="767" y="388" width="3" height="15" fill="rgb(248,16,5)"/><text x="770.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.56%)</title><rect x="767" y="356" width="6" height="15" fill="rgb(249,171,27)"/><text x="770.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.56%)</title><rect x="767" y="372" width="6" height="15" fill="rgb(236,187,38)"/><text x="770.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.28%)</title><rect x="770" y="388" width="3" height="15" fill="rgb(209,109,43)"/><text x="773.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.28%)</title><rect x="770" y="404" width="3" height="15" fill="rgb(231,117,40)"/><text x="773.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.28%)</title><rect x="773" y="372" width="4" height="15" fill="rgb(227,73,28)"/><text x="776.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.28%)</title><rect x="773" y="388" width="4" height="15" fill="rgb(229,196,38)"/><text x="776.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.56%)</title><rect x="773" y="356" width="7" height="15" fill="rgb(235,207,19)"/><text x="776.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="777" y="372" width="3" height="15" fill="rgb(243,116,18)"/><text x="780.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.28%)</title><rect x="777" y="388" width="3" height="15" fill="rgb(254,169,54)"/><text x="780.00" y="398.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 4.72%)</title><rect x="727" y="276" width="56" height="15" fill="rgb(232,19,38)"/><text x="730.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 4.72%)</title><rect x="727" y="292" width="56" height="15" fill="rgb(216,40,15)"/><text x="730.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 3.06%)</title><rect x="747" y="308" width="36" height="15" fill="rgb(213,133,14)"/><text x="750.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.50%)</title><rect x="754" y="324" width="29" height="15" fill="rgb(214,179,23)"/><text x="757.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.39%)</title><rect x="767" y="340" width="16" height="15" fill="rgb(231,117,29)"/><text x="770.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.28%)</title><rect x="780" y="356" width="3" height="15" fill="rgb(221,20,14)"/><text x="783.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.28%)</title><rect x="780" y="372" width="3" height="15" fill="rgb(210,129,36)"/><text x="783.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.28%)</title><rect x="780" y="388" width="3" height="15" fill="rgb(219,190,51)"/><text x="783.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 5.00%)</title><rect x="727" y="260" width="59" height="15" fill="rgb(245,83,6)"/><text x="730.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.28%)</title><rect x="783" y="276" width="3" height="15" fill="rgb(248,21,16)"/><text x="786.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="786" y="276" width="4" height="15" fill="rgb(233,188,42)"/><text x="789.00" y="286.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c:587) (1 samples, 0.28%)</title><rect x="786" y="292" width="4" height="15" fill="rgb(221,132,47)"/><text x="789.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (24 samples, 6.67%)</title><rect x="714" y="244" width="79" height="15" fill="rgb(206,116,0)"/><text x="717.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.56%)</title><rect x="786" y="260" width="7" height="15" fill="rgb(217,184,35)"/><text x="789.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="790" y="276" width="3" height="15" fill="rgb(219,97,29)"/><text x="793.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.28%)</title><rect x="790" y="292" width="3" height="15" fill="rgb(244,2,18)"/><text x="793.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.28%)</title><rect x="790" y="308" width="3" height="15" fill="rgb(220,147,6)"/><text x="793.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.28%)</title><rect x="790" y="324" width="3" height="15" fill="rgb(210,167,46)"/><text x="793.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:194) (1 samples, 0.28%)</title><rect x="790" y="340" width="3" height="15" fill="rgb(209,87,42)"/><text x="793.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="796" y="276" width="3" height="15" fill="rgb(220,132,11)"/><text x="799.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.28%)</title><rect x="796" y="292" width="3" height="15" fill="rgb(212,55,27)"/><text x="799.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.28%)</title><rect x="796" y="308" width="3" height="15" fill="rgb(225,188,6)"/><text x="799.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="799" y="276" width="4" height="15" fill="rgb(251,192,24)"/><text x="802.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.28%)</title><rect x="799" y="292" width="4" height="15" fill="rgb(205,174,26)"/><text x="802.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.28%)</title><rect x="799" y="308" width="4" height="15" fill="rgb(247,56,1)"/><text x="802.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.28%)</title><rect x="799" y="324" width="4" height="15" fill="rgb(254,87,5)"/><text x="802.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="803" y="276" width="3" height="15" fill="rgb(207,147,6)"/><text x="806.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.28%)</title><rect x="803" y="292" width="3" height="15" fill="rgb(212,204,53)"/><text x="806.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.28%)</title><rect x="806" y="292" width="3" height="15" fill="rgb(208,109,46)"/><text x="809.00" y="302.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.28%)</title><rect x="806" y="308" width="3" height="15" fill="rgb(233,95,24)"/><text x="809.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="809" y="308" width="4" height="15" fill="rgb(237,5,33)"/><text x="812.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.28%)</title><rect x="809" y="324" width="4" height="15" fill="rgb(241,0,33)"/><text x="812.00" y="334.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1752) (1 samples, 0.28%)</title><rect x="809" y="340" width="4" height="15" fill="rgb(231,154,2)"/><text x="812.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.28%)</title><rect x="813" y="308" width="3" height="15" fill="rgb(237,162,24)"/><text x="816.00" y="318.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1037) (1 samples, 0.28%)</title><rect x="813" y="324" width="3" height="15" fill="rgb(242,56,18)"/><text x="816.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.28%)</title><rect x="816" y="308" width="3" height="15" fill="rgb(234,209,50)"/><text x="819.00" y="318.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.28%)</title><rect x="816" y="324" width="3" height="15" fill="rgb(222,114,17)"/><text x="819.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="819" y="324" width="3" height="15" fill="rgb(214,89,12)"/><text x="822.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="819" y="340" width="3" height="15" fill="rgb(230,150,26)"/><text x="822.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.67%)</title><rect x="806" y="276" width="20" height="15" fill="rgb(216,113,0)"/><text x="809.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.39%)</title><rect x="809" y="292" width="17" height="15" fill="rgb(234,48,12)"/><text x="812.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.56%)</title><rect x="819" y="308" width="7" height="15" fill="rgb(211,59,1)"/><text x="822.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="822" y="324" width="4" height="15" fill="rgb(245,196,52)"/><text x="825.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.78%)</title><rect x="796" y="260" width="33" height="15" fill="rgb(238,139,0)"/><text x="799.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.28%)</title><rect x="826" y="276" width="3" height="15" fill="rgb(230,10,22)"/><text x="829.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:283) (1 samples, 0.28%)</title><rect x="826" y="292" width="3" height="15" fill="rgb(229,157,37)"/><text x="829.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.28%)</title><rect x="829" y="276" width="3" height="15" fill="rgb(249,145,21)"/><text x="832.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 10.28%)</title><rect x="714" y="196" width="122" height="15" fill="rgb(230,126,32)"/><text x="717.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 10.28%)</title><rect x="714" y="212" width="122" height="15" fill="rgb(215,218,30)"/><text x="717.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (37 samples, 10.28%)</title><rect x="714" y="228" width="122" height="15" fill="rgb(209,9,24)"/><text x="717.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (13 samples, 3.61%)</title><rect x="793" y="244" width="43" height="15" fill="rgb(231,227,36)"/><text x="796.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (2 samples, 0.56%)</title><rect x="829" y="260" width="7" height="15" fill="rgb(214,69,42)"/><text x="832.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.28%)</title><rect x="832" y="276" width="4" height="15" fill="rgb(205,69,10)"/><text x="835.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.28%)</title><rect x="832" y="292" width="4" height="15" fill="rgb(214,72,11)"/><text x="835.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.56%)</title><rect x="836" y="196" width="6" height="15" fill="rgb(219,169,29)"/><text x="839.00" y="206.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:5) (1 samples, 0.28%)</title><rect x="849" y="260" width="3" height="15" fill="rgb(226,135,54)"/><text x="852.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.28%)</title><rect x="852" y="308" width="3" height="15" fill="rgb(221,147,36)"/><text x="855.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.28%)</title><rect x="852" y="324" width="3" height="15" fill="rgb(244,76,15)"/><text x="855.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.28%)</title><rect x="852" y="340" width="3" height="15" fill="rgb(221,36,11)"/><text x="855.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.28%)</title><rect x="855" y="324" width="3" height="15" fill="rgb(222,172,19)"/><text x="858.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.28%)</title><rect x="855" y="340" width="3" height="15" fill="rgb(220,191,19)"/><text x="858.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.28%)</title><rect x="855" y="356" width="3" height="15" fill="rgb(213,113,48)"/><text x="858.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.28%)</title><rect x="855" y="372" width="3" height="15" fill="rgb(223,48,25)"/><text x="858.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.28%)</title><rect x="855" y="388" width="3" height="15" fill="rgb(240,215,39)"/><text x="858.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.28%)</title><rect x="855" y="404" width="3" height="15" fill="rgb(236,35,5)"/><text x="858.00" y="414.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.11%)</title><rect x="852" y="276" width="13" height="15" fill="rgb(253,138,49)"/><text x="855.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.11%)</title><rect x="852" y="292" width="13" height="15" fill="rgb(243,223,4)"/><text x="855.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.83%)</title><rect x="855" y="308" width="10" height="15" fill="rgb(231,29,8)"/><text x="858.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.56%)</title><rect x="858" y="324" width="7" height="15" fill="rgb(236,29,18)"/><text x="861.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.56%)</title><rect x="858" y="340" width="7" height="15" fill="rgb(205,88,9)"/><text x="861.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.56%)</title><rect x="858" y="356" width="7" height="15" fill="rgb(217,8,34)"/><text x="861.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="862" y="372" width="3" height="15" fill="rgb(214,218,54)"/><text x="865.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (8 samples, 2.22%)</title><rect x="842" y="228" width="26" height="15" fill="rgb(250,203,15)"/><text x="845.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (8 samples, 2.22%)</title><rect x="842" y="244" width="26" height="15" fill="rgb(209,85,10)"/><text x="845.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.39%)</title><rect x="852" y="260" width="16" height="15" fill="rgb(240,50,21)"/><text x="855.00" y="270.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="865" y="276" width="3" height="15" fill="rgb(211,32,9)"/><text x="868.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.28%)</title><rect x="865" y="292" width="3" height="15" fill="rgb(220,63,45)"/><text x="868.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="865" y="308" width="3" height="15" fill="rgb(223,99,40)"/><text x="868.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.28%)</title><rect x="868" y="260" width="4" height="15" fill="rgb(253,39,12)"/><text x="871.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="872" y="276" width="3" height="15" fill="rgb(232,57,19)"/><text x="875.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.28%)</title><rect x="872" y="292" width="3" height="15" fill="rgb(207,114,20)"/><text x="875.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.28%)</title><rect x="875" y="308" width="3" height="15" fill="rgb(232,15,45)"/><text x="878.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="875" y="324" width="3" height="15" fill="rgb(207,152,42)"/><text x="878.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.56%)</title><rect x="875" y="292" width="6" height="15" fill="rgb(240,54,3)"/><text x="878.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:256) (1 samples, 0.28%)</title><rect x="878" y="308" width="3" height="15" fill="rgb(217,128,24)"/><text x="881.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="881" y="292" width="4" height="15" fill="rgb(253,104,34)"/><text x="884.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.28%)</title><rect x="881" y="308" width="4" height="15" fill="rgb(240,156,44)"/><text x="884.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.28%)</title><rect x="881" y="324" width="4" height="15" fill="rgb(233,133,45)"/><text x="884.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.39%)</title><rect x="872" y="260" width="16" height="15" fill="rgb(209,158,14)"/><text x="875.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.11%)</title><rect x="875" y="276" width="13" height="15" fill="rgb(216,151,12)"/><text x="878.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="885" y="292" width="3" height="15" fill="rgb(230,175,6)"/><text x="888.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="885" y="308" width="3" height="15" fill="rgb(237,167,6)"/><text x="888.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="885" y="324" width="3" height="15" fill="rgb(234,139,21)"/><text x="888.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.94%)</title><rect x="868" y="244" width="23" height="15" fill="rgb(234,75,39)"/><text x="871.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.28%)</title><rect x="888" y="260" width="3" height="15" fill="rgb(213,163,28)"/><text x="891.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (8 samples, 2.22%)</title><rect x="868" y="228" width="27" height="15" fill="rgb(231,5,41)"/><text x="871.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.28%)</title><rect x="891" y="244" width="4" height="15" fill="rgb(220,51,23)"/><text x="894.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.28%)</title><rect x="891" y="260" width="4" height="15" fill="rgb(233,181,15)"/><text x="894.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.28%)</title><rect x="895" y="228" width="3" height="15" fill="rgb(247,103,34)"/><text x="898.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.28%)</title><rect x="904" y="244" width="4" height="15" fill="rgb(222,78,17)"/><text x="907.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="904" y="260" width="4" height="15" fill="rgb(217,33,51)"/><text x="907.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.28%)</title><rect x="904" y="276" width="4" height="15" fill="rgb(254,170,32)"/><text x="907.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.28%)</title><rect x="904" y="292" width="4" height="15" fill="rgb(233,109,31)"/><text x="907.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="904" y="308" width="4" height="15" fill="rgb(240,166,1)"/><text x="907.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="908" y="260" width="3" height="15" fill="rgb(237,89,36)"/><text x="911.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1057) (1 samples, 0.28%)</title><rect x="908" y="276" width="3" height="15" fill="rgb(218,50,5)"/><text x="911.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.28%)</title><rect x="911" y="276" width="3" height="15" fill="rgb(219,83,6)"/><text x="914.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.56%)</title><rect x="911" y="260" width="6" height="15" fill="rgb(207,150,49)"/><text x="914.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1971) (1 samples, 0.28%)</title><rect x="914" y="276" width="3" height="15" fill="rgb(218,119,1)"/><text x="917.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.28%)</title><rect x="917" y="260" width="4" height="15" fill="rgb(217,214,23)"/><text x="920.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.28%)</title><rect x="917" y="276" width="4" height="15" fill="rgb(234,197,0)"/><text x="920.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.28%)</title><rect x="921" y="324" width="3" height="15" fill="rgb(249,216,16)"/><text x="924.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.56%)</title><rect x="921" y="308" width="6" height="15" fill="rgb(207,68,7)"/><text x="924.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.28%)</title><rect x="924" y="324" width="3" height="15" fill="rgb(250,64,38)"/><text x="927.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="924" y="340" width="3" height="15" fill="rgb(212,102,53)"/><text x="927.00" y="350.50"></text></g><g><title>0x7f17632a57a5 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="924" y="356" width="3" height="15" fill="rgb(219,195,41)"/><text x="927.00" y="366.50"></text></g><g><title>0x7f176330dd59 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(253,215,37)"/><text x="927.00" y="382.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.28%)</title><rect x="927" y="324" width="4" height="15" fill="rgb(211,145,7)"/><text x="930.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.28%)</title><rect x="927" y="340" width="4" height="15" fill="rgb(249,76,10)"/><text x="930.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.28%)</title><rect x="927" y="356" width="4" height="15" fill="rgb(214,1,8)"/><text x="930.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.28%)</title><rect x="927" y="372" width="4" height="15" fill="rgb(206,115,25)"/><text x="930.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (4 samples, 1.11%)</title><rect x="921" y="276" width="13" height="15" fill="rgb(253,199,43)"/><text x="924.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 1.11%)</title><rect x="921" y="292" width="13" height="15" fill="rgb(235,61,16)"/><text x="924.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.56%)</title><rect x="927" y="308" width="7" height="15" fill="rgb(210,37,19)"/><text x="930.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.28%)</title><rect x="931" y="324" width="3" height="15" fill="rgb(212,6,0)"/><text x="934.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="931" y="340" width="3" height="15" fill="rgb(239,129,46)"/><text x="934.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.39%)</title><rect x="921" y="260" width="16" height="15" fill="rgb(205,224,11)"/><text x="924.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.28%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(220,53,24)"/><text x="937.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.28%)</title><rect x="934" y="292" width="3" height="15" fill="rgb(247,91,49)"/><text x="937.00" y="302.50"></text></g><g><title>0x7f174e5f713e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="934" y="308" width="3" height="15" fill="rgb(213,216,5)"/><text x="937.00" y="318.50"></text></g><g><title>0x7f174e5f6efe (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="934" y="324" width="3" height="15" fill="rgb(210,133,18)"/><text x="937.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (13 samples, 3.61%)</title><rect x="898" y="228" width="42" height="15" fill="rgb(208,207,53)"/><text x="901.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.78%)</title><rect x="908" y="244" width="32" height="15" fill="rgb(205,95,40)"/><text x="911.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.28%)</title><rect x="937" y="260" width="3" height="15" fill="rgb(240,162,12)"/><text x="940.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:2) (1 samples, 0.28%)</title><rect x="940" y="244" width="4" height="15" fill="rgb(228,61,20)"/><text x="943.00" y="254.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (4 samples, 1.11%)</title><rect x="944" y="244" width="13" height="15" fill="rgb(250,215,31)"/><text x="947.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.28%)</title><rect x="954" y="260" width="3" height="15" fill="rgb(211,160,32)"/><text x="957.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.28%)</title><rect x="960" y="260" width="3" height="15" fill="rgb(215,175,49)"/><text x="963.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (2 samples, 0.56%)</title><rect x="970" y="292" width="6" height="15" fill="rgb(212,42,30)"/><text x="973.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.28%)</title><rect x="976" y="308" width="4" height="15" fill="rgb(214,226,26)"/><text x="979.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="976" y="324" width="4" height="15" fill="rgb(207,118,43)"/><text x="979.00" y="334.50"></text></g><g><title>0x7f176330dd97 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="980" y="372" width="3" height="15" fill="rgb(222,36,41)"/><text x="983.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (44 samples, 12.22%)</title><rect x="842" y="196" width="144" height="15" fill="rgb(236,74,50)"/><text x="845.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (44 samples, 12.22%)</title><rect x="842" y="212" width="144" height="15" fill="rgb(208,63,43)"/><text x="845.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (14 samples, 3.89%)</title><rect x="940" y="228" width="46" height="15" fill="rgb(249,107,45)"/><text x="943.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (9 samples, 2.50%)</title><rect x="957" y="244" width="29" height="15" fill="rgb(233,64,20)"/><text x="960.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.94%)</title><rect x="963" y="260" width="23" height="15" fill="rgb(241,215,8)"/><text x="966.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 1.94%)</title><rect x="963" y="276" width="23" height="15" fill="rgb(231,40,8)"/><text x="966.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.83%)</title><rect x="976" y="292" width="10" height="15" fill="rgb(222,7,52)"/><text x="979.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.56%)</title><rect x="980" y="308" width="6" height="15" fill="rgb(235,36,47)"/><text x="983.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (2 samples, 0.56%)</title><rect x="980" y="324" width="6" height="15" fill="rgb(242,147,53)"/><text x="983.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.56%)</title><rect x="980" y="340" width="6" height="15" fill="rgb(205,119,48)"/><text x="983.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (2 samples, 0.56%)</title><rect x="980" y="356" width="6" height="15" fill="rgb(246,0,21)"/><text x="983.00" y="366.50"></text></g><g><title>0x7f176330ddae (libc-2.29.so) (1 samples, 0.28%)</title><rect x="983" y="372" width="3" height="15" fill="rgb(239,103,6)"/><text x="986.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (91 samples, 25.28%)</title><rect x="695" y="180" width="298" height="15" fill="rgb(238,76,7)"/><text x="698.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.56%)</title><rect x="986" y="196" width="7" height="15" fill="rgb(227,113,17)"/><text x="989.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.28%)</title><rect x="993" y="180" width="3" height="15" fill="rgb(231,47,12)"/><text x="996.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.28%)</title><rect x="996" y="180" width="3" height="15" fill="rgb(210,40,5)"/><text x="999.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.83%)</title><rect x="999" y="180" width="10" height="15" fill="rgb(230,175,30)"/><text x="1002.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (104 samples, 28.89%)</title><rect x="672" y="164" width="341" height="15" fill="rgb(228,54,0)"/><text x="675.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.28%)</title><rect x="1009" y="180" width="4" height="15" fill="rgb(216,181,40)"/><text x="1012.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (117 samples, 32.50%)</title><rect x="632" y="132" width="384" height="15" fill="rgb(213,174,48)"/><text x="635.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (114 samples, 31.67%)</title><rect x="642" y="148" width="374" height="15" fill="rgb(217,223,9)"/><text x="645.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.28%)</title><rect x="1013" y="164" width="3" height="15" fill="rgb(244,146,24)"/><text x="1016.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.28%)</title><rect x="1013" y="180" width="3" height="15" fill="rgb(234,126,3)"/><text x="1016.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:45) (123 samples, 34.17%)</title><rect x="616" y="52" width="403" height="15" fill="rgb(212,150,40)"/><text x="619.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:44) (123 samples, 34.17%)</title><rect x="616" y="68" width="403" height="15" fill="rgb(246,36,45)"/><text x="619.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (123 samples, 34.17%)</title><rect x="616" y="84" width="403" height="15" fill="rgb(235,196,34)"/><text x="619.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (122 samples, 33.89%)</title><rect x="619" y="100" width="400" height="15" fill="rgb(238,128,51)"/><text x="622.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (121 samples, 33.61%)</title><rect x="622" y="116" width="397" height="15" fill="rgb(209,107,18)"/><text x="625.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="1016" y="132" width="3" height="15" fill="rgb(253,120,31)"/><text x="1019.00" y="142.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:28) (1 samples, 0.28%)</title><rect x="1019" y="84" width="3" height="15" fill="rgb(213,100,5)"/><text x="1022.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="1019" y="100" width="3" height="15" fill="rgb(227,217,25)"/><text x="1022.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.28%)</title><rect x="1019" y="116" width="3" height="15" fill="rgb(219,74,0)"/><text x="1022.00" y="126.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:18) (1 samples, 0.28%)</title><rect x="1022" y="100" width="4" height="15" fill="rgb(242,123,46)"/><text x="1025.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="1022" y="116" width="4" height="15" fill="rgb(211,165,2)"/><text x="1025.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.28%)</title><rect x="1022" y="132" width="4" height="15" fill="rgb(245,82,37)"/><text x="1025.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.28%)</title><rect x="1022" y="148" width="4" height="15" fill="rgb(248,101,21)"/><text x="1025.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.28%)</title><rect x="1022" y="164" width="4" height="15" fill="rgb(242,29,45)"/><text x="1025.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.28%)</title><rect x="1022" y="180" width="4" height="15" fill="rgb(249,180,10)"/><text x="1025.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.28%)</title><rect x="1022" y="196" width="4" height="15" fill="rgb(206,128,49)"/><text x="1025.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.28%)</title><rect x="1026" y="116" width="3" height="15" fill="rgb(241,57,40)"/><text x="1029.00" y="126.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (2 samples, 0.56%)</title><rect x="1049" y="164" width="6" height="15" fill="rgb(214,166,29)"/><text x="1052.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:116) (1 samples, 0.28%)</title><rect x="1062" y="196" width="3" height="15" fill="rgb(243,185,45)"/><text x="1065.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.28%)</title><rect x="1065" y="196" width="3" height="15" fill="rgb(243,219,6)"/><text x="1068.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.28%)</title><rect x="1068" y="196" width="4" height="15" fill="rgb(223,217,6)"/><text x="1071.00" y="206.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1075" y="244" width="3" height="15" fill="rgb(223,206,54)"/><text x="1078.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1078" y="260" width="3" height="15" fill="rgb(228,3,5)"/><text x="1081.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.39%)</title><rect x="1072" y="196" width="16" height="15" fill="rgb(215,200,48)"/><text x="1075.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.39%)</title><rect x="1072" y="212" width="16" height="15" fill="rgb(211,4,36)"/><text x="1075.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.39%)</title><rect x="1072" y="228" width="16" height="15" fill="rgb(219,181,4)"/><text x="1075.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1078" y="244" width="10" height="15" fill="rgb(243,117,33)"/><text x="1081.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1081" y="260" width="7" height="15" fill="rgb(233,29,43)"/><text x="1084.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1081" y="276" width="7" height="15" fill="rgb(254,170,44)"/><text x="1084.00" y="286.50"></text></g><g><title>0x7f172335dff9 (?) (1 samples, 0.28%)</title><rect x="1094" y="212" width="4" height="15" fill="rgb(252,76,9)"/><text x="1097.00" y="222.50"></text></g><g><title>0x7f1723358ef6 (?) (1 samples, 0.28%)</title><rect x="1094" y="228" width="4" height="15" fill="rgb(248,82,6)"/><text x="1097.00" y="238.50"></text></g><g><title>0x7f172334d98e (?) (1 samples, 0.28%)</title><rect x="1094" y="244" width="4" height="15" fill="rgb(206,189,43)"/><text x="1097.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1098" y="212" width="3" height="15" fill="rgb(249,46,35)"/><text x="1101.00" y="222.50"></text></g><g><title>0x7ffe339f0b28 ([vdso]) (1 samples, 0.28%)</title><rect x="1098" y="228" width="3" height="15" fill="rgb(233,180,19)"/><text x="1101.00" y="238.50"></text></g><g><title>0x7f17632ed92f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1101" y="228" width="3" height="15" fill="rgb(232,32,34)"/><text x="1104.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1114" y="308" width="3" height="15" fill="rgb(235,183,28)"/><text x="1117.00" y="318.50"></text></g><g><title>0x7f17632eec3b (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1117" y="356" width="4" height="15" fill="rgb(208,27,43)"/><text x="1120.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1114" y="292" width="10" height="15" fill="rgb(252,224,17)"/><text x="1117.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1117" y="308" width="7" height="15" fill="rgb(219,219,8)"/><text x="1120.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.56%)</title><rect x="1117" y="324" width="7" height="15" fill="rgb(238,153,20)"/><text x="1120.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.56%)</title><rect x="1117" y="340" width="7" height="15" fill="rgb(229,61,21)"/><text x="1120.00" y="350.50"></text></g><g><title>0x7f17632ef003 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1121" y="356" width="3" height="15" fill="rgb(226,167,10)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1124" y="292" width="3" height="15" fill="rgb(221,109,43)"/><text x="1127.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1124" y="308" width="3" height="15" fill="rgb(249,88,11)"/><text x="1127.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(244,144,38)"/><text x="1130.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1127" y="308" width="4" height="15" fill="rgb(223,44,48)"/><text x="1130.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1137" y="340" width="3" height="15" fill="rgb(236,213,51)"/><text x="1140.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1137" y="356" width="3" height="15" fill="rgb(221,178,33)"/><text x="1140.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1137" y="372" width="3" height="15" fill="rgb(229,47,33)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="404" width="4" height="15" fill="rgb(229,146,32)"/><text x="1143.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="420" width="4" height="15" fill="rgb(205,227,18)"/><text x="1143.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="436" width="4" height="15" fill="rgb(226,81,16)"/><text x="1143.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1140" y="452" width="4" height="15" fill="rgb(238,67,15)"/><text x="1143.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1140" y="356" width="7" height="15" fill="rgb(215,30,44)"/><text x="1143.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1140" y="372" width="7" height="15" fill="rgb(228,21,53)"/><text x="1143.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1140" y="388" width="7" height="15" fill="rgb(213,32,27)"/><text x="1143.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1144" y="404" width="3" height="15" fill="rgb(211,1,10)"/><text x="1147.00" y="414.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1140" y="340" width="10" height="15" fill="rgb(226,71,27)"/><text x="1143.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1147" y="356" width="3" height="15" fill="rgb(219,176,29)"/><text x="1150.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1147" y="372" width="3" height="15" fill="rgb(207,85,12)"/><text x="1150.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.50%)</title><rect x="1131" y="308" width="29" height="15" fill="rgb(232,60,17)"/><text x="1134.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.50%)</title><rect x="1131" y="324" width="29" height="15" fill="rgb(251,113,2)"/><text x="1134.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1150" y="340" width="10" height="15" fill="rgb(237,0,10)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="1150" y="356" width="10" height="15" fill="rgb(237,84,30)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="372" width="7" height="15" fill="rgb(254,29,29)"/><text x="1156.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="388" width="7" height="15" fill="rgb(218,40,43)"/><text x="1156.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1157" y="404" width="3" height="15" fill="rgb(228,106,48)"/><text x="1160.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1157" y="420" width="3" height="15" fill="rgb(218,150,44)"/><text x="1160.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1157" y="436" width="3" height="15" fill="rgb(239,92,37)"/><text x="1160.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1157" y="452" width="3" height="15" fill="rgb(251,69,38)"/><text x="1160.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.44%)</title><rect x="1111" y="260" width="52" height="15" fill="rgb(231,202,13)"/><text x="1114.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.44%)</title><rect x="1111" y="276" width="52" height="15" fill="rgb(245,224,10)"/><text x="1114.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.78%)</title><rect x="1131" y="292" width="32" height="15" fill="rgb(223,214,54)"/><text x="1134.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1160" y="308" width="3" height="15" fill="rgb(232,138,5)"/><text x="1163.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1160" y="324" width="3" height="15" fill="rgb(211,121,20)"/><text x="1163.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1160" y="340" width="3" height="15" fill="rgb(222,10,9)"/><text x="1163.00" y="350.50"></text></g><g><title>0x7f1763303e7a (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1160" y="356" width="3" height="15" fill="rgb(217,201,9)"/><text x="1163.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="260" width="4" height="15" fill="rgb(233,178,24)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="276" width="4" height="15" fill="rgb(231,126,15)"/><text x="1166.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="292" width="4" height="15" fill="rgb(217,149,27)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="308" width="4" height="15" fill="rgb(213,179,25)"/><text x="1166.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="324" width="4" height="15" fill="rgb(216,89,28)"/><text x="1166.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1167" y="260" width="3" height="15" fill="rgb(218,165,29)"/><text x="1170.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.28%)</title><rect x="1167" y="276" width="3" height="15" fill="rgb(243,58,10)"/><text x="1170.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.28%)</title><rect x="1167" y="292" width="3" height="15" fill="rgb(223,171,54)"/><text x="1170.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:38) (1 samples, 0.28%)</title><rect x="1167" y="308" width="3" height="15" fill="rgb(233,26,12)"/><text x="1170.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 5.83%)</title><rect x="1104" y="244" width="69" height="15" fill="rgb(243,210,38)"/><text x="1107.00" y="254.50">onnxrun..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(216,17,34)"/><text x="1173.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (37 samples, 10.28%)</title><rect x="1055" y="164" width="121" height="15" fill="rgb(252,130,12)"/><text x="1058.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (37 samples, 10.28%)</title><rect x="1055" y="180" width="121" height="15" fill="rgb(234,134,51)"/><text x="1058.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (27 samples, 7.50%)</title><rect x="1088" y="196" width="88" height="15" fill="rgb(246,221,3)"/><text x="1091.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 6.39%)</title><rect x="1101" y="212" width="75" height="15" fill="rgb(252,110,25)"/><text x="1104.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 6.11%)</title><rect x="1104" y="228" width="72" height="15" fill="rgb(210,82,51)"/><text x="1107.00" y="238.50">void pyb..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1173" y="244" width="3" height="15" fill="rgb(211,6,45)"/><text x="1176.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(223,65,36)"/><text x="1176.00" y="270.50"></text></g><g><title>all (360 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,5,47)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:52) (52 samples, 14.44%)</title><rect x="1019" y="52" width="171" height="15" fill="rgb(228,200,1)"/><text x="1022.00" y="62.50">&lt;module&gt; (bench_Logist..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:51) (52 samples, 14.44%)</title><rect x="1019" y="68" width="171" height="15" fill="rgb(217,138,26)"/><text x="1022.00" y="78.50">profile_ort (bench_Log..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:29) (51 samples, 14.17%)</title><rect x="1022" y="84" width="168" height="15" fill="rgb(219,192,45)"/><text x="1025.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_nozipmap.py:23) (50 samples, 13.89%)</title><rect x="1026" y="100" width="164" height="15" fill="rgb(220,52,17)"/><text x="1029.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (49 samples, 13.61%)</title><rect x="1029" y="116" width="161" height="15" fill="rgb(230,136,6)"/><text x="1032.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (47 samples, 13.06%)</title><rect x="1035" y="132" width="155" height="15" fill="rgb(228,205,54)"/><text x="1038.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (45 samples, 12.50%)</title><rect x="1042" y="148" width="148" height="15" fill="rgb(229,196,31)"/><text x="1045.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.11%)</title><rect x="1176" y="164" width="14" height="15" fill="rgb(205,166,10)"/><text x="1179.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.56%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(230,58,18)"/><text x="1186.00" y="190.50"></text></g></g></svg>