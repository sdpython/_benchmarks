<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:31) (1 samples, 0.22%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(216,92,25)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:11) (1 samples, 0.22%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(227,33,8)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:39) (1 samples, 0.22%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(207,73,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.22%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(219,160,12)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.22%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(249,122,16)"/><text x="13.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.22%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(223,49,43)"/><text x="13.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(217,81,15)"/><text x="13.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(246,202,53)"/><text x="13.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.22%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(220,97,54)"/><text x="13.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:186) (1 samples, 0.22%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(224,5,19)"/><text x="13.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:22) (1 samples, 0.22%)</title><rect x="12" y="100" width="3" height="15" fill="rgb(219,71,16)"/><text x="15.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.67%)</title><rect x="31" y="164" width="8" height="15" fill="rgb(249,42,4)"/><text x="34.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.22%)</title><rect x="36" y="180" width="3" height="15" fill="rgb(251,73,6)"/><text x="39.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (4 samples, 0.90%)</title><rect x="47" y="180" width="10" height="15" fill="rgb(252,162,26)"/><text x="50.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.45%)</title><rect x="73" y="196" width="5" height="15" fill="rgb(211,223,6)"/><text x="76.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 2.91%)</title><rect x="57" y="180" width="35" height="15" fill="rgb(253,48,24)"/><text x="60.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.12%)</title><rect x="78" y="196" width="14" height="15" fill="rgb(217,149,10)"/><text x="81.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (21 samples, 4.71%)</title><rect x="39" y="164" width="55" height="15" fill="rgb(251,129,23)"/><text x="42.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.22%)</title><rect x="92" y="180" width="2" height="15" fill="rgb(250,162,14)"/><text x="95.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (26 samples, 5.83%)</title><rect x="28" y="148" width="69" height="15" fill="rgb(228,39,37)"/><text x="31.00" y="158.50">decisio..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.22%)</title><rect x="94" y="164" width="3" height="15" fill="rgb(254,13,50)"/><text x="97.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.45%)</title><rect x="99" y="164" width="6" height="15" fill="rgb(234,26,9)"/><text x="102.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.22%)</title><rect x="102" y="180" width="3" height="15" fill="rgb(221,163,16)"/><text x="105.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.45%)</title><rect x="107" y="180" width="6" height="15" fill="rgb(225,154,42)"/><text x="110.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.22%)</title><rect x="113" y="180" width="2" height="15" fill="rgb(209,105,52)"/><text x="116.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.22%)</title><rect x="115" y="180" width="3" height="15" fill="rgb(249,107,25)"/><text x="118.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.35%)</title><rect x="105" y="164" width="16" height="15" fill="rgb(237,181,28)"/><text x="108.00" y="174.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.22%)</title><rect x="118" y="180" width="3" height="15" fill="rgb(239,63,4)"/><text x="121.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:177) (2 samples, 0.45%)</title><rect x="121" y="180" width="5" height="15" fill="rgb(224,163,20)"/><text x="124.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.67%)</title><rect x="126" y="196" width="8" height="15" fill="rgb(248,222,21)"/><text x="129.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.22%)</title><rect x="134" y="196" width="2" height="15" fill="rgb(220,154,36)"/><text x="137.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 1.79%)</title><rect x="121" y="164" width="21" height="15" fill="rgb(235,200,24)"/><text x="124.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.35%)</title><rect x="126" y="180" width="16" height="15" fill="rgb(213,110,12)"/><text x="129.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.45%)</title><rect x="136" y="196" width="6" height="15" fill="rgb(250,176,10)"/><text x="139.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.67%)</title><rect x="142" y="164" width="8" height="15" fill="rgb(215,141,22)"/><text x="145.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.45%)</title><rect x="144" y="180" width="6" height="15" fill="rgb(210,222,24)"/><text x="147.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.22%)</title><rect x="152" y="180" width="3" height="15" fill="rgb(238,218,10)"/><text x="155.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.22%)</title><rect x="155" y="180" width="3" height="15" fill="rgb(226,149,43)"/><text x="158.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.90%)</title><rect x="150" y="164" width="10" height="15" fill="rgb(254,114,30)"/><text x="153.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.22%)</title><rect x="158" y="180" width="2" height="15" fill="rgb(227,179,46)"/><text x="161.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.22%)</title><rect x="160" y="180" width="3" height="15" fill="rgb(234,215,42)"/><text x="163.00" y="190.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.22%)</title><rect x="160" y="196" width="3" height="15" fill="rgb(246,180,2)"/><text x="163.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.45%)</title><rect x="160" y="164" width="6" height="15" fill="rgb(230,13,18)"/><text x="163.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.22%)</title><rect x="163" y="180" width="3" height="15" fill="rgb(237,75,12)"/><text x="166.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.67%)</title><rect x="166" y="164" width="8" height="15" fill="rgb(216,86,14)"/><text x="169.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.67%)</title><rect x="166" y="180" width="8" height="15" fill="rgb(239,54,17)"/><text x="169.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.67%)</title><rect x="166" y="196" width="8" height="15" fill="rgb(208,171,51)"/><text x="169.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.22%)</title><rect x="174" y="164" width="2" height="15" fill="rgb(251,139,33)"/><text x="177.00" y="174.50"></text></g><g><title>0x7fbe8f0f2134 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="174" y="180" width="2" height="15" fill="rgb(228,181,29)"/><text x="177.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.22%)</title><rect x="176" y="164" width="3" height="15" fill="rgb(222,173,45)"/><text x="179.00" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.45%)</title><rect x="197" y="196" width="6" height="15" fill="rgb(249,214,42)"/><text x="200.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 2.24%)</title><rect x="184" y="180" width="27" height="15" fill="rgb(237,148,27)"/><text x="187.00" y="190.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.67%)</title><rect x="203" y="196" width="8" height="15" fill="rgb(206,225,44)"/><text x="206.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (15 samples, 3.36%)</title><rect x="179" y="164" width="40" height="15" fill="rgb(220,160,48)"/><text x="182.00" y="174.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.67%)</title><rect x="211" y="180" width="8" height="15" fill="rgb(237,77,30)"/><text x="214.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.45%)</title><rect x="213" y="196" width="6" height="15" fill="rgb(238,151,11)"/><text x="216.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.12%)</title><rect x="219" y="180" width="13" height="15" fill="rgb(218,63,28)"/><text x="222.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.22%)</title><rect x="232" y="180" width="2" height="15" fill="rgb(223,143,30)"/><text x="235.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.90%)</title><rect x="234" y="180" width="11" height="15" fill="rgb(248,26,29)"/><text x="237.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.90%)</title><rect x="234" y="196" width="11" height="15" fill="rgb(243,184,26)"/><text x="237.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.45%)</title><rect x="240" y="212" width="5" height="15" fill="rgb(214,134,42)"/><text x="243.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (59 samples, 13.23%)</title><rect x="97" y="148" width="156" height="15" fill="rgb(228,172,34)"/><text x="100.00" y="158.50">decision_function (s..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (13 samples, 2.91%)</title><rect x="219" y="164" width="34" height="15" fill="rgb(235,67,12)"/><text x="222.00" y="174.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (3 samples, 0.67%)</title><rect x="245" y="180" width="8" height="15" fill="rgb(205,165,15)"/><text x="248.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.22%)</title><rect x="250" y="196" width="3" height="15" fill="rgb(243,80,12)"/><text x="253.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.22%)</title><rect x="253" y="148" width="3" height="15" fill="rgb(234,48,54)"/><text x="256.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (3 samples, 0.67%)</title><rect x="256" y="148" width="7" height="15" fill="rgb(221,55,39)"/><text x="259.00" y="158.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.22%)</title><rect x="261" y="164" width="2" height="15" fill="rgb(223,219,18)"/><text x="264.00" y="174.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.22%)</title><rect x="261" y="180" width="2" height="15" fill="rgb(206,60,47)"/><text x="264.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.22%)</title><rect x="261" y="196" width="2" height="15" fill="rgb(245,138,0)"/><text x="264.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.22%)</title><rect x="261" y="212" width="2" height="15" fill="rgb(215,37,10)"/><text x="264.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1875) (1 samples, 0.22%)</title><rect x="271" y="228" width="3" height="15" fill="rgb(230,175,4)"/><text x="274.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.45%)</title><rect x="271" y="196" width="6" height="15" fill="rgb(243,88,30)"/><text x="274.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.45%)</title><rect x="271" y="212" width="6" height="15" fill="rgb(220,193,5)"/><text x="274.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.22%)</title><rect x="274" y="228" width="3" height="15" fill="rgb(251,124,24)"/><text x="277.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="277" y="196" width="2" height="15" fill="rgb(227,130,15)"/><text x="280.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.22%)</title><rect x="277" y="212" width="2" height="15" fill="rgb(244,217,48)"/><text x="280.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.22%)</title><rect x="277" y="228" width="2" height="15" fill="rgb(243,53,40)"/><text x="280.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (2 samples, 0.45%)</title><rect x="279" y="212" width="6" height="15" fill="rgb(210,162,1)"/><text x="282.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.22%)</title><rect x="282" y="228" width="3" height="15" fill="rgb(252,177,32)"/><text x="285.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="285" y="228" width="2" height="15" fill="rgb(232,122,50)"/><text x="288.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:234) (1 samples, 0.22%)</title><rect x="285" y="244" width="2" height="15" fill="rgb(252,22,24)"/><text x="288.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.22%)</title><rect x="287" y="244" width="3" height="15" fill="rgb(218,126,13)"/><text x="290.00" y="254.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.22%)</title><rect x="287" y="260" width="3" height="15" fill="rgb(247,192,53)"/><text x="290.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="287" y="276" width="3" height="15" fill="rgb(206,229,38)"/><text x="290.00" y="286.50"></text></g><g><title>0x7fbe8f015fdd (libc-2.29.so) (1 samples, 0.22%)</title><rect x="287" y="292" width="3" height="15" fill="rgb(232,5,35)"/><text x="290.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.22%)</title><rect x="290" y="244" width="3" height="15" fill="rgb(245,160,7)"/><text x="293.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.22%)</title><rect x="293" y="244" width="2" height="15" fill="rgb(238,112,28)"/><text x="296.00" y="254.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.22%)</title><rect x="293" y="260" width="2" height="15" fill="rgb(225,54,37)"/><text x="296.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.45%)</title><rect x="295" y="276" width="6" height="15" fill="rgb(218,137,3)"/><text x="298.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.22%)</title><rect x="301" y="276" width="2" height="15" fill="rgb(212,183,53)"/><text x="304.00" y="286.50"></text></g><g><title>0x7fbe8f034d5f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="303" y="292" width="3" height="15" fill="rgb(248,160,17)"/><text x="306.00" y="302.50"></text></g><g><title>0x7fbe8f034d62 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="306" y="292" width="2" height="15" fill="rgb(238,198,6)"/><text x="309.00" y="302.50"></text></g><g><title>0x7fbe8f034d67 (libc-2.29.so) (3 samples, 0.67%)</title><rect x="308" y="292" width="8" height="15" fill="rgb(219,0,11)"/><text x="311.00" y="302.50"></text></g><g><title>0x7fbe8f034d6f (libc-2.29.so) (2 samples, 0.45%)</title><rect x="316" y="292" width="6" height="15" fill="rgb(232,46,16)"/><text x="319.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (8 samples, 1.79%)</title><rect x="303" y="276" width="21" height="15" fill="rgb(250,101,14)"/><text x="306.00" y="286.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.22%)</title><rect x="322" y="292" width="2" height="15" fill="rgb(250,89,6)"/><text x="325.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:987) (1 samples, 0.22%)</title><rect x="324" y="276" width="3" height="15" fill="rgb(246,133,3)"/><text x="327.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (16 samples, 3.59%)</title><rect x="287" y="228" width="43" height="15" fill="rgb(225,103,40)"/><text x="290.00" y="238.50">iter..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (13 samples, 2.91%)</title><rect x="295" y="244" width="35" height="15" fill="rgb(212,110,18)"/><text x="298.00" y="254.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (13 samples, 2.91%)</title><rect x="295" y="260" width="35" height="15" fill="rgb(231,92,9)"/><text x="298.00" y="270.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (1 samples, 0.22%)</title><rect x="327" y="276" width="3" height="15" fill="rgb(227,142,51)"/><text x="330.00" y="286.50"></text></g><g><title>0x7fbe8f034d62 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="327" y="292" width="3" height="15" fill="rgb(217,73,15)"/><text x="330.00" y="302.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:249) (1 samples, 0.22%)</title><rect x="330" y="260" width="2" height="15" fill="rgb(241,83,50)"/><text x="333.00" y="270.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.22%)</title><rect x="330" y="276" width="2" height="15" fill="rgb(210,160,46)"/><text x="333.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.45%)</title><rect x="332" y="276" width="6" height="15" fill="rgb(248,164,36)"/><text x="335.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.45%)</title><rect x="332" y="292" width="6" height="15" fill="rgb(249,206,45)"/><text x="335.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 1.35%)</title><rect x="330" y="228" width="16" height="15" fill="rgb(233,163,23)"/><text x="333.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (6 samples, 1.35%)</title><rect x="330" y="244" width="16" height="15" fill="rgb(213,105,18)"/><text x="333.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (5 samples, 1.12%)</title><rect x="332" y="260" width="14" height="15" fill="rgb(251,69,15)"/><text x="335.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (3 samples, 0.67%)</title><rect x="338" y="276" width="8" height="15" fill="rgb(228,194,16)"/><text x="341.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.67%)</title><rect x="338" y="292" width="8" height="15" fill="rgb(234,144,47)"/><text x="341.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.45%)</title><rect x="346" y="228" width="5" height="15" fill="rgb(236,106,3)"/><text x="349.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (2 samples, 0.45%)</title><rect x="346" y="244" width="5" height="15" fill="rgb(234,120,36)"/><text x="349.00" y="254.50"></text></g><g><title>0x7fbe8f014a33 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="348" y="260" width="3" height="15" fill="rgb(220,105,32)"/><text x="351.00" y="270.50"></text></g><g><title>array_add (number.c:330) (31 samples, 6.95%)</title><rect x="271" y="164" width="82" height="15" fill="rgb(217,197,53)"/><text x="274.00" y="174.50">array_add..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 6.95%)</title><rect x="271" y="180" width="82" height="15" fill="rgb(234,157,13)"/><text x="274.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (28 samples, 6.28%)</title><rect x="279" y="196" width="74" height="15" fill="rgb(248,105,15)"/><text x="282.00" y="206.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (26 samples, 5.83%)</title><rect x="285" y="212" width="68" height="15" fill="rgb(224,133,36)"/><text x="288.00" y="222.50">execute..</text></g><g><title>iterator_loop (ufunc_object.c:1587) (1 samples, 0.22%)</title><rect x="351" y="228" width="2" height="15" fill="rgb(221,108,45)"/><text x="354.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="353" y="164" width="3" height="15" fill="rgb(207,107,15)"/><text x="356.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="353" y="180" width="3" height="15" fill="rgb(241,63,16)"/><text x="356.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.22%)</title><rect x="353" y="196" width="3" height="15" fill="rgb(243,105,51)"/><text x="356.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="364" y="180" width="8" height="15" fill="rgb(223,191,48)"/><text x="367.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.79%)</title><rect x="372" y="180" width="21" height="15" fill="rgb(230,113,51)"/><text x="375.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.22%)</title><rect x="393" y="180" width="3" height="15" fill="rgb(228,135,42)"/><text x="396.00" y="190.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="396" y="228" width="2" height="15" fill="rgb(220,37,25)"/><text x="399.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.22%)</title><rect x="396" y="244" width="2" height="15" fill="rgb(212,97,25)"/><text x="399.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.22%)</title><rect x="398" y="276" width="3" height="15" fill="rgb(239,72,49)"/><text x="401.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="398" y="292" width="3" height="15" fill="rgb(241,33,36)"/><text x="401.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (4 samples, 0.90%)</title><rect x="401" y="276" width="11" height="15" fill="rgb(212,130,30)"/><text x="404.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (4 samples, 0.90%)</title><rect x="401" y="292" width="11" height="15" fill="rgb(229,74,52)"/><text x="404.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 1.57%)</title><rect x="396" y="212" width="18" height="15" fill="rgb(219,171,18)"/><text x="399.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 1.35%)</title><rect x="398" y="228" width="16" height="15" fill="rgb(213,205,48)"/><text x="401.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (6 samples, 1.35%)</title><rect x="398" y="244" width="16" height="15" fill="rgb(221,127,50)"/><text x="401.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.35%)</title><rect x="398" y="260" width="16" height="15" fill="rgb(253,62,53)"/><text x="401.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="412" y="276" width="2" height="15" fill="rgb(231,134,38)"/><text x="415.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4033) (1 samples, 0.22%)</title><rect x="412" y="292" width="2" height="15" fill="rgb(218,27,10)"/><text x="415.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2880) (1 samples, 0.22%)</title><rect x="414" y="212" width="3" height="15" fill="rgb(248,207,0)"/><text x="417.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2947) (1 samples, 0.22%)</title><rect x="417" y="212" width="3" height="15" fill="rgb(254,64,54)"/><text x="420.00" y="222.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.22%)</title><rect x="417" y="228" width="3" height="15" fill="rgb(229,153,35)"/><text x="420.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.22%)</title><rect x="420" y="212" width="2" height="15" fill="rgb(214,114,44)"/><text x="423.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.22%)</title><rect x="420" y="228" width="2" height="15" fill="rgb(229,112,8)"/><text x="423.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:412) (1 samples, 0.22%)</title><rect x="422" y="228" width="3" height="15" fill="rgb(231,177,21)"/><text x="425.00" y="238.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.22%)</title><rect x="422" y="244" width="3" height="15" fill="rgb(220,28,0)"/><text x="425.00" y="254.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="428" y="260" width="2" height="15" fill="rgb(217,124,40)"/><text x="431.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="428" y="276" width="2" height="15" fill="rgb(251,182,21)"/><text x="431.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (4 samples, 0.90%)</title><rect x="422" y="212" width="11" height="15" fill="rgb(251,98,48)"/><text x="425.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (3 samples, 0.67%)</title><rect x="425" y="228" width="8" height="15" fill="rgb(241,163,5)"/><text x="428.00" y="238.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="425" y="244" width="8" height="15" fill="rgb(248,228,23)"/><text x="428.00" y="254.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="430" y="260" width="3" height="15" fill="rgb(229,200,50)"/><text x="433.00" y="270.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(214,148,19)"/><text x="433.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.22%)</title><rect x="433" y="212" width="2" height="15" fill="rgb(220,226,16)"/><text x="436.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.22%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(218,43,19)"/><text x="438.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.45%)</title><rect x="435" y="212" width="6" height="15" fill="rgb(205,40,46)"/><text x="438.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.45%)</title><rect x="435" y="228" width="6" height="15" fill="rgb(252,149,50)"/><text x="438.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="438" y="244" width="3" height="15" fill="rgb(239,190,49)"/><text x="441.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(253,91,28)"/><text x="441.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(238,20,42)"/><text x="441.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 4.04%)</title><rect x="396" y="180" width="47" height="15" fill="rgb(221,196,3)"/><text x="399.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (18 samples, 4.04%)</title><rect x="396" y="196" width="47" height="15" fill="rgb(252,176,44)"/><text x="399.00" y="206.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3090) (1 samples, 0.22%)</title><rect x="441" y="212" width="2" height="15" fill="rgb(220,194,26)"/><text x="444.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="441" y="228" width="2" height="15" fill="rgb(232,176,42)"/><text x="444.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (35 samples, 7.85%)</title><rect x="356" y="164" width="93" height="15" fill="rgb(225,92,31)"/><text x="359.00" y="174.50">safe_sparse..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.45%)</title><rect x="443" y="180" width="6" height="15" fill="rgb(239,95,23)"/><text x="446.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (2 samples, 0.45%)</title><rect x="443" y="196" width="6" height="15" fill="rgb(241,28,45)"/><text x="446.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (74 samples, 16.59%)</title><rect x="263" y="148" width="196" height="15" fill="rgb(248,94,51)"/><text x="266.00" y="158.50">decision_function (sklear..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 0.90%)</title><rect x="449" y="164" width="10" height="15" fill="rgb(235,173,44)"/><text x="452.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.22%)</title><rect x="457" y="180" width="2" height="15" fill="rgb(221,100,11)"/><text x="460.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:38) (171 samples, 38.34%)</title><rect x="12" y="52" width="453" height="15" fill="rgb(246,62,31)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_sol..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:37) (171 samples, 38.34%)</title><rect x="12" y="68" width="453" height="15" fill="rgb(247,92,2)"/><text x="15.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (171 samples, 38.34%)</title><rect x="12" y="84" width="453" height="15" fill="rgb(216,219,39)"/><text x="15.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_de..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (170 samples, 38.12%)</title><rect x="15" y="100" width="450" height="15" fill="rgb(224,41,22)"/><text x="18.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (169 samples, 37.89%)</title><rect x="17" y="116" width="448" height="15" fill="rgb(234,1,8)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (165 samples, 37.00%)</title><rect x="28" y="132" width="437" height="15" fill="rgb(221,115,29)"/><text x="31.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.45%)</title><rect x="459" y="148" width="6" height="15" fill="rgb(215,126,51)"/><text x="462.00" y="158.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:11) (1 samples, 0.22%)</title><rect x="465" y="580" width="2" height="15" fill="rgb(211,95,53)"/><text x="468.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="465" y="596" width="2" height="15" fill="rgb(230,65,21)"/><text x="468.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="465" y="612" width="2" height="15" fill="rgb(207,116,12)"/><text x="468.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="465" y="628" width="2" height="15" fill="rgb(223,42,46)"/><text x="468.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="465" y="644" width="2" height="15" fill="rgb(235,30,34)"/><text x="468.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="465" y="660" width="2" height="15" fill="rgb(205,146,39)"/><text x="468.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="465" y="676" width="2" height="15" fill="rgb(224,92,33)"/><text x="468.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="465" y="692" width="2" height="15" fill="rgb(236,84,19)"/><text x="468.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py:1932) (1 samples, 0.22%)</title><rect x="465" y="708" width="2" height="15" fill="rgb(230,208,12)"/><text x="468.00" y="718.50"></text></g><g><title>0x7fbe7d3642cd (?) (1 samples, 0.22%)</title><rect x="465" y="724" width="2" height="15" fill="rgb(239,9,28)"/><text x="468.00" y="734.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.22%)</title><rect x="467" y="852" width="3" height="15" fill="rgb(211,206,7)"/><text x="470.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.22%)</title><rect x="467" y="868" width="3" height="15" fill="rgb(217,60,27)"/><text x="470.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.22%)</title><rect x="467" y="884" width="3" height="15" fill="rgb(219,128,40)"/><text x="470.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.22%)</title><rect x="467" y="900" width="3" height="15" fill="rgb(229,171,13)"/><text x="470.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:713) (1 samples, 0.22%)</title><rect x="467" y="916" width="3" height="15" fill="rgb(232,209,33)"/><text x="470.00" y="926.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.22%)</title><rect x="470" y="884" width="3" height="15" fill="rgb(237,188,52)"/><text x="473.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.22%)</title><rect x="470" y="900" width="3" height="15" fill="rgb(249,118,33)"/><text x="473.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.22%)</title><rect x="470" y="916" width="3" height="15" fill="rgb(233,44,43)"/><text x="473.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.22%)</title><rect x="470" y="932" width="3" height="15" fill="rgb(236,1,54)"/><text x="473.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.22%)</title><rect x="470" y="948" width="3" height="15" fill="rgb(253,222,12)"/><text x="473.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.22%)</title><rect x="470" y="964" width="3" height="15" fill="rgb(250,122,47)"/><text x="473.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.22%)</title><rect x="470" y="980" width="3" height="15" fill="rgb(246,144,53)"/><text x="473.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.22%)</title><rect x="470" y="996" width="3" height="15" fill="rgb(211,77,38)"/><text x="473.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.22%)</title><rect x="470" y="1012" width="3" height="15" fill="rgb(242,55,46)"/><text x="473.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="470" y="1028" width="3" height="15" fill="rgb(252,90,10)"/><text x="473.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.22%)</title><rect x="470" y="1044" width="3" height="15" fill="rgb(233,124,14)"/><text x="473.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.45%)</title><rect x="470" y="852" width="5" height="15" fill="rgb(223,4,0)"/><text x="473.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.45%)</title><rect x="470" y="868" width="5" height="15" fill="rgb(238,120,17)"/><text x="473.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.22%)</title><rect x="473" y="884" width="2" height="15" fill="rgb(205,201,25)"/><text x="476.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.22%)</title><rect x="473" y="900" width="2" height="15" fill="rgb(246,87,6)"/><text x="476.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.22%)</title><rect x="473" y="916" width="2" height="15" fill="rgb(210,149,11)"/><text x="476.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.22%)</title><rect x="473" y="932" width="2" height="15" fill="rgb(250,88,27)"/><text x="476.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.22%)</title><rect x="473" y="948" width="2" height="15" fill="rgb(235,221,52)"/><text x="476.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.22%)</title><rect x="473" y="964" width="2" height="15" fill="rgb(220,203,1)"/><text x="476.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.22%)</title><rect x="473" y="980" width="2" height="15" fill="rgb(228,189,35)"/><text x="476.00" y="990.50"></text></g><g><title>splitext (posixpath.py:122) (1 samples, 0.22%)</title><rect x="475" y="932" width="3" height="15" fill="rgb(206,8,25)"/><text x="478.00" y="942.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.22%)</title><rect x="475" y="948" width="3" height="15" fill="rgb(234,182,2)"/><text x="478.00" y="958.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.45%)</title><rect x="475" y="884" width="5" height="15" fill="rgb(234,58,53)"/><text x="478.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.45%)</title><rect x="475" y="900" width="5" height="15" fill="rgb(205,175,51)"/><text x="478.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (2 samples, 0.45%)</title><rect x="475" y="916" width="5" height="15" fill="rgb(227,100,33)"/><text x="478.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.22%)</title><rect x="478" y="932" width="2" height="15" fill="rgb(250,229,6)"/><text x="481.00" y="942.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.67%)</title><rect x="475" y="868" width="8" height="15" fill="rgb(228,26,25)"/><text x="478.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.22%)</title><rect x="480" y="884" width="3" height="15" fill="rgb(253,86,13)"/><text x="483.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.22%)</title><rect x="480" y="900" width="3" height="15" fill="rgb(217,198,49)"/><text x="483.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.22%)</title><rect x="480" y="916" width="3" height="15" fill="rgb(249,178,13)"/><text x="483.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="480" y="932" width="3" height="15" fill="rgb(239,5,9)"/><text x="483.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:2) (8 samples, 1.79%)</title><rect x="465" y="148" width="21" height="15" fill="rgb(209,110,16)"/><text x="468.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="465" y="164" width="21" height="15" fill="rgb(240,54,4)"/><text x="468.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.79%)</title><rect x="465" y="180" width="21" height="15" fill="rgb(214,115,48)"/><text x="468.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="465" y="196" width="21" height="15" fill="rgb(213,107,3)"/><text x="468.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="465" y="212" width="21" height="15" fill="rgb(249,229,18)"/><text x="468.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="465" y="228" width="21" height="15" fill="rgb(233,58,10)"/><text x="468.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="465" y="244" width="21" height="15" fill="rgb(253,115,8)"/><text x="468.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="465" y="260" width="21" height="15" fill="rgb(220,7,17)"/><text x="468.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="465" y="276" width="21" height="15" fill="rgb(232,111,23)"/><text x="468.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 1.79%)</title><rect x="465" y="292" width="21" height="15" fill="rgb(236,9,24)"/><text x="468.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="465" y="308" width="21" height="15" fill="rgb(225,95,6)"/><text x="468.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="465" y="324" width="21" height="15" fill="rgb(216,39,41)"/><text x="468.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="465" y="340" width="21" height="15" fill="rgb(230,121,38)"/><text x="468.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="465" y="356" width="21" height="15" fill="rgb(230,151,12)"/><text x="468.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="465" y="372" width="21" height="15" fill="rgb(244,31,26)"/><text x="468.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 1.79%)</title><rect x="465" y="388" width="21" height="15" fill="rgb(222,64,12)"/><text x="468.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="465" y="404" width="21" height="15" fill="rgb(214,159,36)"/><text x="468.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="465" y="420" width="21" height="15" fill="rgb(236,144,22)"/><text x="468.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="465" y="436" width="21" height="15" fill="rgb(239,178,34)"/><text x="468.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="465" y="452" width="21" height="15" fill="rgb(239,104,10)"/><text x="468.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="465" y="468" width="21" height="15" fill="rgb(229,89,51)"/><text x="468.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 1.79%)</title><rect x="465" y="484" width="21" height="15" fill="rgb(212,70,53)"/><text x="468.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="465" y="500" width="21" height="15" fill="rgb(216,179,24)"/><text x="468.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="465" y="516" width="21" height="15" fill="rgb(213,100,21)"/><text x="468.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="465" y="532" width="21" height="15" fill="rgb(241,8,32)"/><text x="468.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="465" y="548" width="21" height="15" fill="rgb(244,179,33)"/><text x="468.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="465" y="564" width="21" height="15" fill="rgb(207,114,41)"/><text x="468.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 1.57%)</title><rect x="467" y="580" width="19" height="15" fill="rgb(225,219,4)"/><text x="470.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.57%)</title><rect x="467" y="596" width="19" height="15" fill="rgb(231,87,14)"/><text x="470.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.57%)</title><rect x="467" y="612" width="19" height="15" fill="rgb(250,143,13)"/><text x="470.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.57%)</title><rect x="467" y="628" width="19" height="15" fill="rgb(253,216,43)"/><text x="470.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.57%)</title><rect x="467" y="644" width="19" height="15" fill="rgb(211,58,44)"/><text x="470.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.57%)</title><rect x="467" y="660" width="19" height="15" fill="rgb(230,210,12)"/><text x="470.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.57%)</title><rect x="467" y="676" width="19" height="15" fill="rgb(211,67,9)"/><text x="470.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.57%)</title><rect x="467" y="692" width="19" height="15" fill="rgb(231,134,41)"/><text x="470.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.57%)</title><rect x="467" y="708" width="19" height="15" fill="rgb(239,85,7)"/><text x="470.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 1.57%)</title><rect x="467" y="724" width="19" height="15" fill="rgb(247,41,26)"/><text x="470.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.57%)</title><rect x="467" y="740" width="19" height="15" fill="rgb(206,13,11)"/><text x="470.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.57%)</title><rect x="467" y="756" width="19" height="15" fill="rgb(232,146,29)"/><text x="470.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.57%)</title><rect x="467" y="772" width="19" height="15" fill="rgb(211,66,23)"/><text x="470.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.57%)</title><rect x="467" y="788" width="19" height="15" fill="rgb(214,95,21)"/><text x="470.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.57%)</title><rect x="467" y="804" width="19" height="15" fill="rgb(205,99,41)"/><text x="470.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 1.57%)</title><rect x="467" y="820" width="19" height="15" fill="rgb(236,222,8)"/><text x="470.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 1.57%)</title><rect x="467" y="836" width="19" height="15" fill="rgb(221,59,42)"/><text x="470.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 0.90%)</title><rect x="475" y="852" width="11" height="15" fill="rgb(213,27,19)"/><text x="478.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.22%)</title><rect x="483" y="868" width="3" height="15" fill="rgb(220,40,47)"/><text x="486.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.22%)</title><rect x="483" y="884" width="3" height="15" fill="rgb(241,213,6)"/><text x="486.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2642) (1 samples, 0.22%)</title><rect x="483" y="900" width="3" height="15" fill="rgb(227,184,4)"/><text x="486.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.22%)</title><rect x="486" y="484" width="2" height="15" fill="rgb(217,220,18)"/><text x="489.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="486" y="500" width="2" height="15" fill="rgb(231,13,32)"/><text x="489.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="516" width="2" height="15" fill="rgb(231,28,27)"/><text x="489.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="532" width="2" height="15" fill="rgb(229,202,39)"/><text x="489.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="548" width="2" height="15" fill="rgb(219,92,37)"/><text x="489.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="564" width="2" height="15" fill="rgb(214,210,23)"/><text x="489.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="580" width="2" height="15" fill="rgb(215,103,25)"/><text x="489.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="596" width="2" height="15" fill="rgb(249,196,52)"/><text x="489.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.22%)</title><rect x="486" y="612" width="2" height="15" fill="rgb(223,91,16)"/><text x="489.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="628" width="2" height="15" fill="rgb(245,187,20)"/><text x="489.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="644" width="2" height="15" fill="rgb(220,150,35)"/><text x="489.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="660" width="2" height="15" fill="rgb(213,170,10)"/><text x="489.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="676" width="2" height="15" fill="rgb(224,71,46)"/><text x="489.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="692" width="2" height="15" fill="rgb(231,128,3)"/><text x="489.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.22%)</title><rect x="486" y="708" width="2" height="15" fill="rgb(251,111,18)"/><text x="489.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="724" width="2" height="15" fill="rgb(231,51,27)"/><text x="489.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="740" width="2" height="15" fill="rgb(221,41,39)"/><text x="489.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="756" width="2" height="15" fill="rgb(214,204,27)"/><text x="489.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="772" width="2" height="15" fill="rgb(237,160,35)"/><text x="489.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="788" width="2" height="15" fill="rgb(239,109,6)"/><text x="489.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.22%)</title><rect x="486" y="804" width="2" height="15" fill="rgb(206,113,11)"/><text x="489.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="820" width="2" height="15" fill="rgb(238,196,30)"/><text x="489.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="836" width="2" height="15" fill="rgb(221,32,9)"/><text x="489.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="852" width="2" height="15" fill="rgb(214,161,16)"/><text x="489.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="868" width="2" height="15" fill="rgb(230,77,45)"/><text x="489.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="884" width="2" height="15" fill="rgb(217,4,46)"/><text x="489.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.22%)</title><rect x="486" y="900" width="2" height="15" fill="rgb(250,28,36)"/><text x="489.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="916" width="2" height="15" fill="rgb(222,226,1)"/><text x="489.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="932" width="2" height="15" fill="rgb(225,76,1)"/><text x="489.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="948" width="2" height="15" fill="rgb(239,165,26)"/><text x="489.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="964" width="2" height="15" fill="rgb(240,153,51)"/><text x="489.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="980" width="2" height="15" fill="rgb(227,44,23)"/><text x="489.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.22%)</title><rect x="486" y="996" width="2" height="15" fill="rgb(242,224,32)"/><text x="489.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1012" width="2" height="15" fill="rgb(227,229,18)"/><text x="489.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="486" y="1028" width="2" height="15" fill="rgb(252,82,28)"/><text x="489.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1044" width="2" height="15" fill="rgb(216,136,36)"/><text x="489.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1060" width="2" height="15" fill="rgb(254,85,53)"/><text x="489.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1076" width="2" height="15" fill="rgb(232,125,9)"/><text x="489.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1092" width="2" height="15" fill="rgb(218,171,12)"/><text x="489.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1108" width="2" height="15" fill="rgb(219,222,9)"/><text x="489.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1124" width="2" height="15" fill="rgb(253,201,8)"/><text x="489.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.22%)</title><rect x="486" y="1140" width="2" height="15" fill="rgb(237,23,53)"/><text x="489.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1156" width="2" height="15" fill="rgb(248,109,22)"/><text x="489.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1172" width="2" height="15" fill="rgb(227,195,24)"/><text x="489.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1188" width="2" height="15" fill="rgb(247,20,30)"/><text x="489.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1204" width="2" height="15" fill="rgb(247,5,41)"/><text x="489.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1220" width="2" height="15" fill="rgb(220,101,31)"/><text x="489.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.22%)</title><rect x="486" y="1236" width="2" height="15" fill="rgb(208,60,42)"/><text x="489.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1252" width="2" height="15" fill="rgb(243,208,24)"/><text x="489.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1268" width="2" height="15" fill="rgb(205,224,37)"/><text x="489.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1284" width="2" height="15" fill="rgb(205,52,30)"/><text x="489.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1300" width="2" height="15" fill="rgb(249,82,13)"/><text x="489.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1316" width="2" height="15" fill="rgb(221,1,47)"/><text x="489.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.22%)</title><rect x="486" y="1332" width="2" height="15" fill="rgb(217,142,53)"/><text x="489.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1348" width="2" height="15" fill="rgb(214,146,52)"/><text x="489.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1364" width="2" height="15" fill="rgb(242,193,33)"/><text x="489.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1380" width="2" height="15" fill="rgb(218,148,15)"/><text x="489.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1396" width="2" height="15" fill="rgb(217,1,43)"/><text x="489.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1412" width="2" height="15" fill="rgb(241,156,36)"/><text x="489.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.22%)</title><rect x="486" y="1428" width="2" height="15" fill="rgb(226,124,4)"/><text x="489.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1444" width="2" height="15" fill="rgb(208,5,41)"/><text x="489.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1460" width="2" height="15" fill="rgb(208,176,21)"/><text x="489.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1476" width="2" height="15" fill="rgb(227,103,53)"/><text x="489.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1492" width="2" height="15" fill="rgb(244,227,50)"/><text x="489.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1508" width="2" height="15" fill="rgb(250,150,30)"/><text x="489.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:40) (1 samples, 0.22%)</title><rect x="486" y="1524" width="2" height="15" fill="rgb(221,35,10)"/><text x="489.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="486" y="1540" width="2" height="15" fill="rgb(205,133,26)"/><text x="489.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1556" width="2" height="15" fill="rgb(219,42,38)"/><text x="489.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="486" y="1572" width="2" height="15" fill="rgb(211,21,46)"/><text x="489.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="486" y="1588" width="2" height="15" fill="rgb(213,65,11)"/><text x="489.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="486" y="1604" width="2" height="15" fill="rgb(228,98,10)"/><text x="489.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="486" y="1620" width="2" height="15" fill="rgb(236,49,38)"/><text x="489.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="486" y="1636" width="2" height="15" fill="rgb(211,170,1)"/><text x="489.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_common.py:176) (1 samples, 0.22%)</title><rect x="486" y="1652" width="2" height="15" fill="rgb(237,32,2)"/><text x="489.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py:387) (1 samples, 0.22%)</title><rect x="486" y="1668" width="2" height="15" fill="rgb(229,14,3)"/><text x="489.00" y="1678.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:23) (1 samples, 0.22%)</title><rect x="488" y="484" width="3" height="15" fill="rgb(217,150,26)"/><text x="491.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="488" y="500" width="3" height="15" fill="rgb(253,159,22)"/><text x="491.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="488" y="516" width="3" height="15" fill="rgb(214,55,40)"/><text x="491.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="488" y="532" width="3" height="15" fill="rgb(227,36,8)"/><text x="491.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="488" y="548" width="3" height="15" fill="rgb(234,160,4)"/><text x="491.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.22%)</title><rect x="488" y="564" width="3" height="15" fill="rgb(251,34,22)"/><text x="491.00" y="574.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.22%)</title><rect x="488" y="580" width="3" height="15" fill="rgb(245,144,16)"/><text x="491.00" y="590.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="488" y="596" width="3" height="15" fill="rgb(231,178,19)"/><text x="491.00" y="606.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1603) (1 samples, 0.22%)</title><rect x="491" y="1028" width="3" height="15" fill="rgb(227,48,48)"/><text x="494.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.22%)</title><rect x="491" y="1044" width="3" height="15" fill="rgb(247,150,54)"/><text x="494.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.22%)</title><rect x="491" y="1060" width="3" height="15" fill="rgb(240,60,4)"/><text x="494.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.22%)</title><rect x="491" y="1076" width="3" height="15" fill="rgb(250,47,34)"/><text x="494.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.22%)</title><rect x="491" y="1092" width="3" height="15" fill="rgb(244,203,31)"/><text x="494.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.45%)</title><rect x="491" y="900" width="5" height="15" fill="rgb(254,126,54)"/><text x="494.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.45%)</title><rect x="491" y="916" width="5" height="15" fill="rgb(242,193,27)"/><text x="494.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="491" y="932" width="5" height="15" fill="rgb(250,206,8)"/><text x="494.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="491" y="948" width="5" height="15" fill="rgb(254,84,20)"/><text x="494.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="491" y="964" width="5" height="15" fill="rgb(249,134,2)"/><text x="494.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="491" y="980" width="5" height="15" fill="rgb(222,121,49)"/><text x="494.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="491" y="996" width="5" height="15" fill="rgb(226,175,47)"/><text x="494.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="491" y="1012" width="5" height="15" fill="rgb(226,218,14)"/><text x="494.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1846) (1 samples, 0.22%)</title><rect x="494" y="1028" width="2" height="15" fill="rgb(246,111,34)"/><text x="497.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.22%)</title><rect x="494" y="1044" width="2" height="15" fill="rgb(237,42,20)"/><text x="497.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.22%)</title><rect x="494" y="1060" width="2" height="15" fill="rgb(207,175,53)"/><text x="497.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.22%)</title><rect x="494" y="1076" width="2" height="15" fill="rgb(218,121,6)"/><text x="497.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.22%)</title><rect x="494" y="1092" width="2" height="15" fill="rgb(228,90,19)"/><text x="497.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.12%)</title><rect x="486" y="180" width="13" height="15" fill="rgb(246,123,48)"/><text x="489.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="486" y="196" width="13" height="15" fill="rgb(227,12,54)"/><text x="489.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.12%)</title><rect x="486" y="212" width="13" height="15" fill="rgb(245,188,19)"/><text x="489.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.12%)</title><rect x="486" y="228" width="13" height="15" fill="rgb(241,121,33)"/><text x="489.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.12%)</title><rect x="486" y="244" width="13" height="15" fill="rgb(220,33,3)"/><text x="489.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.12%)</title><rect x="486" y="260" width="13" height="15" fill="rgb(217,146,54)"/><text x="489.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="486" y="276" width="13" height="15" fill="rgb(210,97,50)"/><text x="489.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 1.12%)</title><rect x="486" y="292" width="13" height="15" fill="rgb(235,79,6)"/><text x="489.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.12%)</title><rect x="486" y="308" width="13" height="15" fill="rgb(212,43,35)"/><text x="489.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.12%)</title><rect x="486" y="324" width="13" height="15" fill="rgb(243,41,28)"/><text x="489.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.12%)</title><rect x="486" y="340" width="13" height="15" fill="rgb(239,4,32)"/><text x="489.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.12%)</title><rect x="486" y="356" width="13" height="15" fill="rgb(231,159,36)"/><text x="489.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="486" y="372" width="13" height="15" fill="rgb(232,126,37)"/><text x="489.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 1.12%)</title><rect x="486" y="388" width="13" height="15" fill="rgb(232,219,36)"/><text x="489.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.12%)</title><rect x="486" y="404" width="13" height="15" fill="rgb(220,193,39)"/><text x="489.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.12%)</title><rect x="486" y="420" width="13" height="15" fill="rgb(217,176,17)"/><text x="489.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.12%)</title><rect x="486" y="436" width="13" height="15" fill="rgb(210,92,30)"/><text x="489.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.12%)</title><rect x="486" y="452" width="13" height="15" fill="rgb(241,126,3)"/><text x="489.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="486" y="468" width="13" height="15" fill="rgb(227,31,49)"/><text x="489.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.67%)</title><rect x="491" y="484" width="8" height="15" fill="rgb(218,66,28)"/><text x="494.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="491" y="500" width="8" height="15" fill="rgb(223,59,51)"/><text x="494.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="491" y="516" width="8" height="15" fill="rgb(225,118,28)"/><text x="494.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="491" y="532" width="8" height="15" fill="rgb(213,4,41)"/><text x="494.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="491" y="548" width="8" height="15" fill="rgb(238,21,25)"/><text x="494.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="491" y="564" width="8" height="15" fill="rgb(213,168,24)"/><text x="494.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.67%)</title><rect x="491" y="580" width="8" height="15" fill="rgb(229,112,17)"/><text x="494.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="491" y="596" width="8" height="15" fill="rgb(227,190,44)"/><text x="494.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="491" y="612" width="8" height="15" fill="rgb(250,120,34)"/><text x="494.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="491" y="628" width="8" height="15" fill="rgb(205,168,34)"/><text x="494.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="491" y="644" width="8" height="15" fill="rgb(231,16,3)"/><text x="494.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="491" y="660" width="8" height="15" fill="rgb(214,4,37)"/><text x="494.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.67%)</title><rect x="491" y="676" width="8" height="15" fill="rgb(253,176,18)"/><text x="494.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="491" y="692" width="8" height="15" fill="rgb(254,70,44)"/><text x="494.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="491" y="708" width="8" height="15" fill="rgb(211,120,31)"/><text x="494.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="491" y="724" width="8" height="15" fill="rgb(235,88,16)"/><text x="494.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="491" y="740" width="8" height="15" fill="rgb(238,186,2)"/><text x="494.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="491" y="756" width="8" height="15" fill="rgb(211,33,22)"/><text x="494.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.67%)</title><rect x="491" y="772" width="8" height="15" fill="rgb(207,41,21)"/><text x="494.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.67%)</title><rect x="491" y="788" width="8" height="15" fill="rgb(235,144,6)"/><text x="494.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="491" y="804" width="8" height="15" fill="rgb(247,60,40)"/><text x="494.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="491" y="820" width="8" height="15" fill="rgb(231,228,16)"/><text x="494.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="491" y="836" width="8" height="15" fill="rgb(242,114,41)"/><text x="494.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="491" y="852" width="8" height="15" fill="rgb(241,94,15)"/><text x="494.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="491" y="868" width="8" height="15" fill="rgb(224,41,51)"/><text x="494.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="491" y="884" width="8" height="15" fill="rgb(216,94,39)"/><text x="494.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.22%)</title><rect x="496" y="900" width="3" height="15" fill="rgb(206,85,13)"/><text x="499.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="496" y="916" width="3" height="15" fill="rgb(253,147,2)"/><text x="499.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="496" y="932" width="3" height="15" fill="rgb(237,103,0)"/><text x="499.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="496" y="948" width="3" height="15" fill="rgb(224,39,10)"/><text x="499.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="496" y="964" width="3" height="15" fill="rgb(254,140,11)"/><text x="499.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="496" y="980" width="3" height="15" fill="rgb(216,112,29)"/><text x="499.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="496" y="996" width="3" height="15" fill="rgb(234,8,19)"/><text x="499.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="496" y="1012" width="3" height="15" fill="rgb(235,36,43)"/><text x="499.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:996) (1 samples, 0.22%)</title><rect x="496" y="1028" width="3" height="15" fill="rgb(227,154,15)"/><text x="499.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.22%)</title><rect x="496" y="1044" width="3" height="15" fill="rgb(213,56,19)"/><text x="499.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.22%)</title><rect x="496" y="1060" width="3" height="15" fill="rgb(246,13,46)"/><text x="499.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.22%)</title><rect x="496" y="1076" width="3" height="15" fill="rgb(251,192,8)"/><text x="499.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.22%)</title><rect x="496" y="1092" width="3" height="15" fill="rgb(218,93,5)"/><text x="499.00" y="1102.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.22%)</title><rect x="496" y="1108" width="3" height="15" fill="rgb(246,178,23)"/><text x="499.00" y="1118.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:4) (6 samples, 1.35%)</title><rect x="486" y="148" width="16" height="15" fill="rgb(248,181,44)"/><text x="489.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="486" y="164" width="16" height="15" fill="rgb(232,88,45)"/><text x="489.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="499" y="180" width="3" height="15" fill="rgb(249,35,4)"/><text x="502.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="499" y="196" width="3" height="15" fill="rgb(210,149,26)"/><text x="502.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="499" y="212" width="3" height="15" fill="rgb(215,144,51)"/><text x="502.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="499" y="228" width="3" height="15" fill="rgb(215,91,21)"/><text x="502.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.22%)</title><rect x="499" y="244" width="3" height="15" fill="rgb(249,85,43)"/><text x="502.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(236,141,7)"/><text x="502.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(227,221,23)"/><text x="502.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="499" y="292" width="3" height="15" fill="rgb(254,2,37)"/><text x="502.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="499" y="308" width="3" height="15" fill="rgb(244,220,23)"/><text x="502.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="499" y="324" width="3" height="15" fill="rgb(249,220,0)"/><text x="502.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:22) (1 samples, 0.22%)</title><rect x="499" y="340" width="3" height="15" fill="rgb(246,188,10)"/><text x="502.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="499" y="356" width="3" height="15" fill="rgb(239,148,13)"/><text x="502.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="499" y="372" width="3" height="15" fill="rgb(219,31,34)"/><text x="502.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="499" y="388" width="3" height="15" fill="rgb(246,132,34)"/><text x="502.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.22%)</title><rect x="499" y="404" width="3" height="15" fill="rgb(240,124,6)"/><text x="502.00" y="414.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.22%)</title><rect x="499" y="420" width="3" height="15" fill="rgb(212,53,0)"/><text x="502.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.22%)</title><rect x="499" y="436" width="3" height="15" fill="rgb(206,78,15)"/><text x="502.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.22%)</title><rect x="499" y="452" width="3" height="15" fill="rgb(229,168,50)"/><text x="502.00" y="462.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.22%)</title><rect x="499" y="468" width="3" height="15" fill="rgb(205,126,2)"/><text x="502.00" y="478.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.22%)</title><rect x="499" y="484" width="3" height="15" fill="rgb(245,46,40)"/><text x="502.00" y="494.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.22%)</title><rect x="499" y="500" width="3" height="15" fill="rgb(205,62,45)"/><text x="502.00" y="510.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:129) (1 samples, 0.22%)</title><rect x="502" y="628" width="2" height="15" fill="rgb(222,103,28)"/><text x="505.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="502" y="644" width="2" height="15" fill="rgb(235,18,27)"/><text x="505.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="502" y="660" width="2" height="15" fill="rgb(254,101,40)"/><text x="505.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="502" y="676" width="2" height="15" fill="rgb(224,53,7)"/><text x="505.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="502" y="692" width="2" height="15" fill="rgb(231,163,17)"/><text x="505.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="502" y="708" width="2" height="15" fill="rgb(252,98,40)"/><text x="505.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/api.py:8) (1 samples, 0.22%)</title><rect x="502" y="724" width="2" height="15" fill="rgb(251,77,3)"/><text x="505.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="502" y="740" width="2" height="15" fill="rgb(233,70,53)"/><text x="505.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="502" y="756" width="2" height="15" fill="rgb(219,103,16)"/><text x="505.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="502" y="772" width="2" height="15" fill="rgb(205,35,14)"/><text x="505.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.22%)</title><rect x="502" y="788" width="2" height="15" fill="rgb(224,195,45)"/><text x="505.00" y="798.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.22%)</title><rect x="502" y="804" width="2" height="15" fill="rgb(248,157,15)"/><text x="505.00" y="814.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.22%)</title><rect x="502" y="820" width="2" height="15" fill="rgb(246,93,22)"/><text x="505.00" y="830.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.22%)</title><rect x="502" y="836" width="2" height="15" fill="rgb(220,23,36)"/><text x="505.00" y="846.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:302) (1 samples, 0.22%)</title><rect x="502" y="852" width="2" height="15" fill="rgb(237,75,42)"/><text x="505.00" y="862.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="502" y="868" width="2" height="15" fill="rgb(217,7,29)"/><text x="505.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.45%)</title><rect x="502" y="436" width="5" height="15" fill="rgb(230,221,7)"/><text x="505.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="502" y="452" width="5" height="15" fill="rgb(210,89,13)"/><text x="505.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="502" y="468" width="5" height="15" fill="rgb(234,75,22)"/><text x="505.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="502" y="484" width="5" height="15" fill="rgb(243,168,52)"/><text x="505.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="502" y="500" width="5" height="15" fill="rgb(241,32,19)"/><text x="505.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="502" y="516" width="5" height="15" fill="rgb(245,97,25)"/><text x="505.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.45%)</title><rect x="502" y="532" width="5" height="15" fill="rgb(229,225,27)"/><text x="505.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="502" y="548" width="5" height="15" fill="rgb(217,146,36)"/><text x="505.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="502" y="564" width="5" height="15" fill="rgb(236,20,6)"/><text x="505.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="502" y="580" width="5" height="15" fill="rgb(244,132,50)"/><text x="505.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="502" y="596" width="5" height="15" fill="rgb(238,108,46)"/><text x="505.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="502" y="612" width="5" height="15" fill="rgb(249,94,39)"/><text x="505.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.22%)</title><rect x="504" y="628" width="3" height="15" fill="rgb(241,37,6)"/><text x="507.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="644" width="3" height="15" fill="rgb(213,54,4)"/><text x="507.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="660" width="3" height="15" fill="rgb(226,183,0)"/><text x="507.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="676" width="3" height="15" fill="rgb(213,147,14)"/><text x="507.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="504" y="692" width="3" height="15" fill="rgb(208,172,28)"/><text x="507.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="708" width="3" height="15" fill="rgb(225,33,0)"/><text x="507.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.22%)</title><rect x="504" y="724" width="3" height="15" fill="rgb(205,129,26)"/><text x="507.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="740" width="3" height="15" fill="rgb(208,207,2)"/><text x="507.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="756" width="3" height="15" fill="rgb(227,99,28)"/><text x="507.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="772" width="3" height="15" fill="rgb(224,135,31)"/><text x="507.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="504" y="788" width="3" height="15" fill="rgb(222,41,43)"/><text x="507.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="804" width="3" height="15" fill="rgb(243,182,26)"/><text x="507.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.22%)</title><rect x="504" y="820" width="3" height="15" fill="rgb(210,47,22)"/><text x="507.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="836" width="3" height="15" fill="rgb(220,140,41)"/><text x="507.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="852" width="3" height="15" fill="rgb(212,200,36)"/><text x="507.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="868" width="3" height="15" fill="rgb(247,213,11)"/><text x="507.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="884" width="3" height="15" fill="rgb(254,16,47)"/><text x="507.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="900" width="3" height="15" fill="rgb(221,171,8)"/><text x="507.00" y="910.50"></text></g><g><title>0x7fbe6619b40e (?) (1 samples, 0.22%)</title><rect x="504" y="916" width="3" height="15" fill="rgb(207,9,9)"/><text x="507.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="932" width="3" height="15" fill="rgb(252,52,3)"/><text x="507.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="948" width="3" height="15" fill="rgb(244,131,27)"/><text x="507.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="964" width="3" height="15" fill="rgb(227,33,19)"/><text x="507.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="980" width="3" height="15" fill="rgb(224,147,23)"/><text x="507.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="996" width="3" height="15" fill="rgb(215,185,26)"/><text x="507.00" y="1006.50"></text></g><g><title>0x7fbe65f54cd2 (?) (1 samples, 0.22%)</title><rect x="504" y="1012" width="3" height="15" fill="rgb(216,96,54)"/><text x="507.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="1028" width="3" height="15" fill="rgb(244,116,31)"/><text x="507.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="1044" width="3" height="15" fill="rgb(245,20,10)"/><text x="507.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="1060" width="3" height="15" fill="rgb(249,70,36)"/><text x="507.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="1076" width="3" height="15" fill="rgb(252,14,43)"/><text x="507.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="1092" width="3" height="15" fill="rgb(216,45,40)"/><text x="507.00" y="1102.50"></text></g><g><title>0x7fbe6564a0e5 (?) (1 samples, 0.22%)</title><rect x="504" y="1108" width="3" height="15" fill="rgb(244,219,30)"/><text x="507.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="1124" width="3" height="15" fill="rgb(211,85,33)"/><text x="507.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="1140" width="3" height="15" fill="rgb(243,121,28)"/><text x="507.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="1156" width="3" height="15" fill="rgb(238,30,53)"/><text x="507.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="1172" width="3" height="15" fill="rgb(209,126,45)"/><text x="507.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="1188" width="3" height="15" fill="rgb(229,29,32)"/><text x="507.00" y="1198.50"></text></g><g><title>0x7fbe653cee68 (?) (1 samples, 0.22%)</title><rect x="504" y="1204" width="3" height="15" fill="rgb(212,106,36)"/><text x="507.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="1220" width="3" height="15" fill="rgb(245,198,1)"/><text x="507.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="1236" width="3" height="15" fill="rgb(237,30,49)"/><text x="507.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="1252" width="3" height="15" fill="rgb(208,35,41)"/><text x="507.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="1268" width="3" height="15" fill="rgb(241,77,37)"/><text x="507.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="1284" width="3" height="15" fill="rgb(225,186,26)"/><text x="507.00" y="1294.50"></text></g><g><title>0x7fbe6515f2fb (?) (1 samples, 0.22%)</title><rect x="504" y="1300" width="3" height="15" fill="rgb(243,204,33)"/><text x="507.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="1316" width="3" height="15" fill="rgb(207,118,39)"/><text x="507.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="1332" width="3" height="15" fill="rgb(237,127,17)"/><text x="507.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="1348" width="3" height="15" fill="rgb(223,61,19)"/><text x="507.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="1364" width="3" height="15" fill="rgb(219,96,5)"/><text x="507.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="1380" width="3" height="15" fill="rgb(219,15,48)"/><text x="507.00" y="1390.50"></text></g><g><title>0x7fbe64f43153 (?) (1 samples, 0.22%)</title><rect x="504" y="1396" width="3" height="15" fill="rgb(249,82,44)"/><text x="507.00" y="1406.50"></text></g><g><title>0x7fbe64f41c13 (?) (1 samples, 0.22%)</title><rect x="504" y="1412" width="3" height="15" fill="rgb(236,139,28)"/><text x="507.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="504" y="1428" width="3" height="15" fill="rgb(250,184,21)"/><text x="507.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="504" y="1444" width="3" height="15" fill="rgb(210,213,30)"/><text x="507.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="504" y="1460" width="3" height="15" fill="rgb(229,98,43)"/><text x="507.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="504" y="1476" width="3" height="15" fill="rgb(245,132,29)"/><text x="507.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="504" y="1492" width="3" height="15" fill="rgb(239,1,51)"/><text x="507.00" y="1502.50"></text></g><g><title>0x7fbe64c9b8a8 (?) (1 samples, 0.22%)</title><rect x="504" y="1508" width="3" height="15" fill="rgb(208,0,38)"/><text x="507.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.22%)</title><rect x="507" y="1204" width="3" height="15" fill="rgb(222,166,9)"/><text x="510.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="507" y="1220" width="3" height="15" fill="rgb(237,28,48)"/><text x="510.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="507" y="1236" width="3" height="15" fill="rgb(230,113,26)"/><text x="510.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="507" y="1252" width="3" height="15" fill="rgb(242,222,25)"/><text x="510.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="507" y="1268" width="3" height="15" fill="rgb(230,27,31)"/><text x="510.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="507" y="1284" width="3" height="15" fill="rgb(247,123,54)"/><text x="510.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="507" y="1300" width="3" height="15" fill="rgb(236,96,3)"/><text x="510.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="507" y="1316" width="3" height="15" fill="rgb(224,221,45)"/><text x="510.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="507" y="1332" width="3" height="15" fill="rgb(223,88,22)"/><text x="510.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:23) (1 samples, 0.22%)</title><rect x="507" y="1348" width="3" height="15" fill="rgb(212,175,3)"/><text x="510.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="507" y="1364" width="3" height="15" fill="rgb(208,28,9)"/><text x="510.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="507" y="1380" width="3" height="15" fill="rgb(223,74,47)"/><text x="510.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="507" y="1396" width="3" height="15" fill="rgb(243,214,13)"/><text x="510.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="507" y="1412" width="3" height="15" fill="rgb(225,102,30)"/><text x="510.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="507" y="1428" width="3" height="15" fill="rgb(254,98,21)"/><text x="510.00" y="1438.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/topology.py:16) (1 samples, 0.22%)</title><rect x="507" y="1444" width="3" height="15" fill="rgb(220,196,25)"/><text x="510.00" y="1454.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="507" y="1460" width="3" height="15" fill="rgb(224,78,10)"/><text x="510.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="507" y="1476" width="3" height="15" fill="rgb(243,144,49)"/><text x="510.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="507" y="1492" width="3" height="15" fill="rgb(246,187,23)"/><text x="510.00" y="1502.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.22%)</title><rect x="507" y="1508" width="3" height="15" fill="rgb(210,82,5)"/><text x="510.00" y="1518.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:106) (1 samples, 0.22%)</title><rect x="507" y="1524" width="3" height="15" fill="rgb(241,75,22)"/><text x="510.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.45%)</title><rect x="507" y="1108" width="5" height="15" fill="rgb(220,32,17)"/><text x="510.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="507" y="1124" width="5" height="15" fill="rgb(229,226,49)"/><text x="510.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="507" y="1140" width="5" height="15" fill="rgb(234,60,44)"/><text x="510.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="507" y="1156" width="5" height="15" fill="rgb(220,142,8)"/><text x="510.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="507" y="1172" width="5" height="15" fill="rgb(236,54,29)"/><text x="510.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="507" y="1188" width="5" height="15" fill="rgb(237,146,4)"/><text x="510.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.22%)</title><rect x="510" y="1204" width="2" height="15" fill="rgb(244,212,46)"/><text x="513.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="510" y="1220" width="2" height="15" fill="rgb(224,71,41)"/><text x="513.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="510" y="1236" width="2" height="15" fill="rgb(232,84,35)"/><text x="513.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="510" y="1252" width="2" height="15" fill="rgb(253,11,29)"/><text x="513.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="510" y="1268" width="2" height="15" fill="rgb(215,177,40)"/><text x="513.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="510" y="1284" width="2" height="15" fill="rgb(215,166,34)"/><text x="513.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.22%)</title><rect x="510" y="1300" width="2" height="15" fill="rgb(238,135,39)"/><text x="513.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.22%)</title><rect x="510" y="1316" width="2" height="15" fill="rgb(236,181,54)"/><text x="513.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.22%)</title><rect x="510" y="1332" width="2" height="15" fill="rgb(216,77,2)"/><text x="513.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.22%)</title><rect x="510" y="1348" width="2" height="15" fill="rgb(234,50,18)"/><text x="513.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.22%)</title><rect x="510" y="1364" width="2" height="15" fill="rgb(252,216,13)"/><text x="513.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.22%)</title><rect x="512" y="1108" width="3" height="15" fill="rgb(226,75,53)"/><text x="515.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="512" y="1124" width="3" height="15" fill="rgb(238,116,44)"/><text x="515.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="512" y="1140" width="3" height="15" fill="rgb(228,175,15)"/><text x="515.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="512" y="1156" width="3" height="15" fill="rgb(248,32,16)"/><text x="515.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="512" y="1172" width="3" height="15" fill="rgb(220,219,11)"/><text x="515.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="512" y="1188" width="3" height="15" fill="rgb(225,69,49)"/><text x="515.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.22%)</title><rect x="512" y="1204" width="3" height="15" fill="rgb(246,159,4)"/><text x="515.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="512" y="1220" width="3" height="15" fill="rgb(237,94,2)"/><text x="515.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="512" y="1236" width="3" height="15" fill="rgb(230,156,9)"/><text x="515.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="512" y="1252" width="3" height="15" fill="rgb(243,69,44)"/><text x="515.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="512" y="1268" width="3" height="15" fill="rgb(246,181,0)"/><text x="515.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="512" y="1284" width="3" height="15" fill="rgb(253,162,15)"/><text x="515.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.22%)</title><rect x="512" y="1300" width="3" height="15" fill="rgb(213,214,40)"/><text x="515.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="512" y="1316" width="3" height="15" fill="rgb(221,23,43)"/><text x="515.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="512" y="1332" width="3" height="15" fill="rgb(239,212,18)"/><text x="515.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="512" y="1348" width="3" height="15" fill="rgb(234,133,43)"/><text x="515.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="512" y="1364" width="3" height="15" fill="rgb(222,3,35)"/><text x="515.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="512" y="1380" width="3" height="15" fill="rgb(253,176,1)"/><text x="515.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.22%)</title><rect x="512" y="1396" width="3" height="15" fill="rgb(214,222,14)"/><text x="515.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="512" y="1412" width="3" height="15" fill="rgb(205,92,29)"/><text x="515.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="512" y="1428" width="3" height="15" fill="rgb(239,228,33)"/><text x="515.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="512" y="1444" width="3" height="15" fill="rgb(232,113,21)"/><text x="515.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="512" y="1460" width="3" height="15" fill="rgb(212,4,44)"/><text x="515.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="512" y="1476" width="3" height="15" fill="rgb(219,202,41)"/><text x="515.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.22%)</title><rect x="512" y="1492" width="3" height="15" fill="rgb(225,150,8)"/><text x="515.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="512" y="1508" width="3" height="15" fill="rgb(233,206,11)"/><text x="515.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="512" y="1524" width="3" height="15" fill="rgb(228,35,48)"/><text x="515.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="512" y="1540" width="3" height="15" fill="rgb(248,22,48)"/><text x="515.00" y="1550.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.22%)</title><rect x="512" y="1556" width="3" height="15" fill="rgb(213,20,14)"/><text x="515.00" y="1566.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.22%)</title><rect x="512" y="1572" width="3" height="15" fill="rgb(237,44,3)"/><text x="515.00" y="1582.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.22%)</title><rect x="512" y="1588" width="3" height="15" fill="rgb(207,111,8)"/><text x="515.00" y="1598.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.22%)</title><rect x="512" y="1604" width="3" height="15" fill="rgb(218,118,48)"/><text x="515.00" y="1614.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:297) (1 samples, 0.22%)</title><rect x="512" y="1620" width="3" height="15" fill="rgb(246,222,46)"/><text x="515.00" y="1630.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;:64) (1 samples, 0.22%)</title><rect x="512" y="1636" width="3" height="15" fill="rgb(232,118,38)"/><text x="515.00" y="1646.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:128) (1 samples, 0.22%)</title><rect x="515" y="1508" width="2" height="15" fill="rgb(252,131,49)"/><text x="518.00" y="1518.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.45%)</title><rect x="515" y="1492" width="5" height="15" fill="rgb(224,22,21)"/><text x="518.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.22%)</title><rect x="517" y="1508" width="3" height="15" fill="rgb(252,188,6)"/><text x="520.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.22%)</title><rect x="517" y="1524" width="3" height="15" fill="rgb(232,213,41)"/><text x="520.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.22%)</title><rect x="517" y="1540" width="3" height="15" fill="rgb(239,110,50)"/><text x="520.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="517" y="1556" width="3" height="15" fill="rgb(241,186,16)"/><text x="520.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:64) (1 samples, 0.22%)</title><rect x="517" y="1572" width="3" height="15" fill="rgb(216,13,16)"/><text x="520.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.22%)</title><rect x="517" y="1588" width="3" height="15" fill="rgb(252,33,44)"/><text x="520.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:4) (22 samples, 4.93%)</title><rect x="465" y="52" width="58" height="15" fill="rgb(223,95,46)"/><text x="468.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (22 samples, 4.93%)</title><rect x="465" y="68" width="58" height="15" fill="rgb(223,166,37)"/><text x="468.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (22 samples, 4.93%)</title><rect x="465" y="84" width="58" height="15" fill="rgb(249,108,38)"/><text x="468.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (22 samples, 4.93%)</title><rect x="465" y="100" width="58" height="15" fill="rgb(240,202,28)"/><text x="468.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (22 samples, 4.93%)</title><rect x="465" y="116" width="58" height="15" fill="rgb(237,63,17)"/><text x="468.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (22 samples, 4.93%)</title><rect x="465" y="132" width="58" height="15" fill="rgb(221,47,2)"/><text x="468.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:7) (8 samples, 1.79%)</title><rect x="502" y="148" width="21" height="15" fill="rgb(242,184,39)"/><text x="505.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="502" y="164" width="21" height="15" fill="rgb(222,195,18)"/><text x="505.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="502" y="180" width="21" height="15" fill="rgb(249,112,39)"/><text x="505.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="502" y="196" width="21" height="15" fill="rgb(205,133,17)"/><text x="505.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="502" y="212" width="21" height="15" fill="rgb(249,169,52)"/><text x="505.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="502" y="228" width="21" height="15" fill="rgb(220,177,1)"/><text x="505.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.79%)</title><rect x="502" y="244" width="21" height="15" fill="rgb(211,117,54)"/><text x="505.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="502" y="260" width="21" height="15" fill="rgb(206,86,36)"/><text x="505.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="502" y="276" width="21" height="15" fill="rgb(252,52,11)"/><text x="505.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="502" y="292" width="21" height="15" fill="rgb(224,17,22)"/><text x="505.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="502" y="308" width="21" height="15" fill="rgb(222,67,41)"/><text x="505.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="502" y="324" width="21" height="15" fill="rgb(235,129,49)"/><text x="505.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.79%)</title><rect x="502" y="340" width="21" height="15" fill="rgb(244,146,22)"/><text x="505.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.79%)</title><rect x="502" y="356" width="21" height="15" fill="rgb(235,142,0)"/><text x="505.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.79%)</title><rect x="502" y="372" width="21" height="15" fill="rgb(224,54,4)"/><text x="505.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.79%)</title><rect x="502" y="388" width="21" height="15" fill="rgb(223,123,10)"/><text x="505.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.79%)</title><rect x="502" y="404" width="21" height="15" fill="rgb(225,2,31)"/><text x="505.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.79%)</title><rect x="502" y="420" width="21" height="15" fill="rgb(245,12,39)"/><text x="505.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.35%)</title><rect x="507" y="436" width="16" height="15" fill="rgb(222,196,0)"/><text x="510.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="452" width="16" height="15" fill="rgb(246,160,45)"/><text x="510.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.35%)</title><rect x="507" y="468" width="16" height="15" fill="rgb(254,172,47)"/><text x="510.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="484" width="16" height="15" fill="rgb(253,155,32)"/><text x="510.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="500" width="16" height="15" fill="rgb(215,100,20)"/><text x="510.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="516" width="16" height="15" fill="rgb(222,24,21)"/><text x="510.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="532" width="16" height="15" fill="rgb(222,103,30)"/><text x="510.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="548" width="16" height="15" fill="rgb(237,109,40)"/><text x="510.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="564" width="16" height="15" fill="rgb(217,97,29)"/><text x="510.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.35%)</title><rect x="507" y="580" width="16" height="15" fill="rgb(252,126,36)"/><text x="510.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="596" width="16" height="15" fill="rgb(239,40,23)"/><text x="510.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="612" width="16" height="15" fill="rgb(219,75,53)"/><text x="510.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="628" width="16" height="15" fill="rgb(224,168,29)"/><text x="510.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="644" width="16" height="15" fill="rgb(237,111,45)"/><text x="510.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="660" width="16" height="15" fill="rgb(238,12,49)"/><text x="510.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.35%)</title><rect x="507" y="676" width="16" height="15" fill="rgb(206,125,39)"/><text x="510.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="692" width="16" height="15" fill="rgb(210,217,6)"/><text x="510.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="708" width="16" height="15" fill="rgb(223,141,28)"/><text x="510.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="724" width="16" height="15" fill="rgb(253,65,11)"/><text x="510.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="740" width="16" height="15" fill="rgb(248,190,33)"/><text x="510.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="756" width="16" height="15" fill="rgb(251,143,0)"/><text x="510.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.35%)</title><rect x="507" y="772" width="16" height="15" fill="rgb(209,155,13)"/><text x="510.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="788" width="16" height="15" fill="rgb(229,94,18)"/><text x="510.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="804" width="16" height="15" fill="rgb(238,129,39)"/><text x="510.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="820" width="16" height="15" fill="rgb(254,146,43)"/><text x="510.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="836" width="16" height="15" fill="rgb(251,165,46)"/><text x="510.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="852" width="16" height="15" fill="rgb(245,139,36)"/><text x="510.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.35%)</title><rect x="507" y="868" width="16" height="15" fill="rgb(206,94,32)"/><text x="510.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="884" width="16" height="15" fill="rgb(253,195,10)"/><text x="510.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.35%)</title><rect x="507" y="900" width="16" height="15" fill="rgb(250,2,23)"/><text x="510.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="916" width="16" height="15" fill="rgb(244,130,16)"/><text x="510.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="932" width="16" height="15" fill="rgb(215,198,12)"/><text x="510.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="948" width="16" height="15" fill="rgb(207,14,16)"/><text x="510.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="964" width="16" height="15" fill="rgb(218,80,54)"/><text x="510.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="980" width="16" height="15" fill="rgb(220,185,10)"/><text x="510.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="996" width="16" height="15" fill="rgb(214,186,41)"/><text x="510.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.35%)</title><rect x="507" y="1012" width="16" height="15" fill="rgb(237,96,14)"/><text x="510.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="507" y="1028" width="16" height="15" fill="rgb(247,159,6)"/><text x="510.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="507" y="1044" width="16" height="15" fill="rgb(217,86,48)"/><text x="510.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="507" y="1060" width="16" height="15" fill="rgb(250,119,39)"/><text x="510.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="507" y="1076" width="16" height="15" fill="rgb(209,78,1)"/><text x="510.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="507" y="1092" width="16" height="15" fill="rgb(212,29,1)"/><text x="510.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.67%)</title><rect x="515" y="1108" width="8" height="15" fill="rgb(219,144,22)"/><text x="518.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.67%)</title><rect x="515" y="1124" width="8" height="15" fill="rgb(224,110,52)"/><text x="518.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="515" y="1140" width="8" height="15" fill="rgb(234,150,32)"/><text x="518.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="515" y="1156" width="8" height="15" fill="rgb(248,2,50)"/><text x="518.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="515" y="1172" width="8" height="15" fill="rgb(216,59,15)"/><text x="518.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="515" y="1188" width="8" height="15" fill="rgb(223,189,14)"/><text x="518.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="515" y="1204" width="8" height="15" fill="rgb(212,117,7)"/><text x="518.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="515" y="1220" width="8" height="15" fill="rgb(225,81,12)"/><text x="518.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.67%)</title><rect x="515" y="1236" width="8" height="15" fill="rgb(241,19,25)"/><text x="518.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.67%)</title><rect x="515" y="1252" width="8" height="15" fill="rgb(232,52,5)"/><text x="518.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="515" y="1268" width="8" height="15" fill="rgb(216,128,43)"/><text x="518.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="515" y="1284" width="8" height="15" fill="rgb(249,90,38)"/><text x="518.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="515" y="1300" width="8" height="15" fill="rgb(251,131,42)"/><text x="518.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="515" y="1316" width="8" height="15" fill="rgb(228,113,11)"/><text x="518.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="515" y="1332" width="8" height="15" fill="rgb(234,3,42)"/><text x="518.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="515" y="1348" width="8" height="15" fill="rgb(242,217,13)"/><text x="518.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.67%)</title><rect x="515" y="1364" width="8" height="15" fill="rgb(234,117,46)"/><text x="518.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="515" y="1380" width="8" height="15" fill="rgb(252,21,3)"/><text x="518.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="515" y="1396" width="8" height="15" fill="rgb(242,201,27)"/><text x="518.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="515" y="1412" width="8" height="15" fill="rgb(250,20,14)"/><text x="518.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="515" y="1428" width="8" height="15" fill="rgb(219,92,6)"/><text x="518.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="515" y="1444" width="8" height="15" fill="rgb(238,54,38)"/><text x="518.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.67%)</title><rect x="515" y="1460" width="8" height="15" fill="rgb(246,187,52)"/><text x="518.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.67%)</title><rect x="515" y="1476" width="8" height="15" fill="rgb(237,35,25)"/><text x="518.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.22%)</title><rect x="520" y="1492" width="3" height="15" fill="rgb(205,150,1)"/><text x="523.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:16) (1 samples, 0.22%)</title><rect x="520" y="1508" width="3" height="15" fill="rgb(230,37,37)"/><text x="523.00" y="1518.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.22%)</title><rect x="523" y="452" width="2" height="15" fill="rgb(232,87,13)"/><text x="526.00" y="462.50"></text></g><g><title>new_context (jinja2/runtime.py:67) (1 samples, 0.22%)</title><rect x="523" y="468" width="2" height="15" fill="rgb(232,112,4)"/><text x="526.00" y="478.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:28) (2 samples, 0.45%)</title><rect x="523" y="84" width="5" height="15" fill="rgb(230,22,36)"/><text x="526.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.45%)</title><rect x="523" y="100" width="5" height="15" fill="rgb(219,215,13)"/><text x="526.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (2 samples, 0.45%)</title><rect x="523" y="116" width="5" height="15" fill="rgb(237,193,4)"/><text x="526.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.45%)</title><rect x="523" y="132" width="5" height="15" fill="rgb(231,101,50)"/><text x="526.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.45%)</title><rect x="523" y="148" width="5" height="15" fill="rgb(244,185,3)"/><text x="526.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.45%)</title><rect x="523" y="164" width="5" height="15" fill="rgb(216,127,4)"/><text x="526.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.45%)</title><rect x="523" y="180" width="5" height="15" fill="rgb(241,211,29)"/><text x="526.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.45%)</title><rect x="523" y="196" width="5" height="15" fill="rgb(238,115,42)"/><text x="526.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="523" y="212" width="5" height="15" fill="rgb(226,110,23)"/><text x="526.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="523" y="228" width="5" height="15" fill="rgb(231,218,43)"/><text x="526.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="523" y="244" width="5" height="15" fill="rgb(218,180,29)"/><text x="526.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="523" y="260" width="5" height="15" fill="rgb(206,3,41)"/><text x="526.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="523" y="276" width="5" height="15" fill="rgb(252,41,35)"/><text x="526.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.45%)</title><rect x="523" y="292" width="5" height="15" fill="rgb(251,105,48)"/><text x="526.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="523" y="308" width="5" height="15" fill="rgb(225,0,38)"/><text x="526.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="523" y="324" width="5" height="15" fill="rgb(240,80,27)"/><text x="526.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="523" y="340" width="5" height="15" fill="rgb(226,127,24)"/><text x="526.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="523" y="356" width="5" height="15" fill="rgb(252,226,18)"/><text x="526.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="523" y="372" width="5" height="15" fill="rgb(217,106,12)"/><text x="526.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (2 samples, 0.45%)</title><rect x="523" y="388" width="5" height="15" fill="rgb(240,121,21)"/><text x="526.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (2 samples, 0.45%)</title><rect x="523" y="404" width="5" height="15" fill="rgb(214,93,43)"/><text x="526.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.45%)</title><rect x="523" y="420" width="5" height="15" fill="rgb(211,192,52)"/><text x="526.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.45%)</title><rect x="523" y="436" width="5" height="15" fill="rgb(220,191,26)"/><text x="526.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="525" y="452" width="3" height="15" fill="rgb(206,92,32)"/><text x="528.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:44) (1 samples, 0.22%)</title><rect x="525" y="468" width="3" height="15" fill="rgb(245,65,33)"/><text x="528.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.22%)</title><rect x="525" y="484" width="3" height="15" fill="rgb(253,123,34)"/><text x="528.00" y="494.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.22%)</title><rect x="525" y="500" width="3" height="15" fill="rgb(214,133,25)"/><text x="528.00" y="510.50"></text></g><g><title>0x7fbe7d36794d (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="516" width="3" height="15" fill="rgb(231,47,12)"/><text x="528.00" y="526.50"></text></g><g><title>google::protobuf::Message::_InternalParse (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="532" width="3" height="15" fill="rgb(230,92,46)"/><text x="528.00" y="542.50"></text></g><g><title>0x7fbe7d427de2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="548" width="3" height="15" fill="rgb(240,223,51)"/><text x="528.00" y="558.50"></text></g><g><title>google::protobuf::ParseLenDelim (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="564" width="3" height="15" fill="rgb(232,114,31)"/><text x="528.00" y="574.50"></text></g><g><title>google::protobuf::Reflection::SetString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="580" width="3" height="15" fill="rgb(221,226,42)"/><text x="528.00" y="590.50"></text></g><g><title>google::protobuf::internal::ArenaStringPtr::CreateInstance (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="525" y="596" width="3" height="15" fill="rgb(226,99,46)"/><text x="528.00" y="606.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.22%)</title><rect x="528" y="228" width="3" height="15" fill="rgb(253,37,35)"/><text x="531.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.22%)</title><rect x="528" y="244" width="3" height="15" fill="rgb(252,208,31)"/><text x="531.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="528" y="260" width="3" height="15" fill="rgb(243,226,2)"/><text x="531.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:18) (2 samples, 0.45%)</title><rect x="528" y="100" width="5" height="15" fill="rgb(213,69,36)"/><text x="531.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.45%)</title><rect x="528" y="116" width="5" height="15" fill="rgb(246,119,3)"/><text x="531.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (2 samples, 0.45%)</title><rect x="528" y="132" width="5" height="15" fill="rgb(233,82,0)"/><text x="531.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.45%)</title><rect x="528" y="148" width="5" height="15" fill="rgb(211,229,51)"/><text x="531.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.45%)</title><rect x="528" y="164" width="5" height="15" fill="rgb(232,188,26)"/><text x="531.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.45%)</title><rect x="528" y="180" width="5" height="15" fill="rgb(225,205,46)"/><text x="531.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.45%)</title><rect x="528" y="196" width="5" height="15" fill="rgb(227,87,12)"/><text x="531.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.45%)</title><rect x="528" y="212" width="5" height="15" fill="rgb(239,183,18)"/><text x="531.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (1 samples, 0.22%)</title><rect x="531" y="228" width="2" height="15" fill="rgb(230,23,39)"/><text x="534.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="531" y="244" width="2" height="15" fill="rgb(240,6,47)"/><text x="534.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="531" y="260" width="2" height="15" fill="rgb(230,33,40)"/><text x="534.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.22%)</title><rect x="531" y="276" width="2" height="15" fill="rgb(221,18,45)"/><text x="534.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.22%)</title><rect x="531" y="292" width="2" height="15" fill="rgb(226,123,45)"/><text x="534.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.22%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(206,22,15)"/><text x="534.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.22%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(247,137,17)"/><text x="534.00" y="334.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:22) (1 samples, 0.22%)</title><rect x="533" y="100" width="3" height="15" fill="rgb(221,130,26)"/><text x="536.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.45%)</title><rect x="544" y="148" width="5" height="15" fill="rgb(209,196,29)"/><text x="547.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.22%)</title><rect x="552" y="164" width="3" height="15" fill="rgb(249,62,0)"/><text x="555.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.45%)</title><rect x="555" y="180" width="5" height="15" fill="rgb(220,67,25)"/><text x="558.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.22%)</title><rect x="557" y="196" width="3" height="15" fill="rgb(241,177,20)"/><text x="560.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.22%)</title><rect x="562" y="244" width="3" height="15" fill="rgb(215,43,8)"/><text x="565.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:233) (1 samples, 0.22%)</title><rect x="568" y="324" width="2" height="15" fill="rgb(227,11,9)"/><text x="571.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:193) (1 samples, 0.22%)</title><rect x="568" y="340" width="2" height="15" fill="rgb(223,92,50)"/><text x="571.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.22%)</title><rect x="570" y="388" width="3" height="15" fill="rgb(222,167,34)"/><text x="573.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.45%)</title><rect x="570" y="372" width="6" height="15" fill="rgb(221,219,19)"/><text x="573.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.22%)</title><rect x="573" y="388" width="3" height="15" fill="rgb(205,21,28)"/><text x="576.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (3 samples, 0.67%)</title><rect x="570" y="324" width="8" height="15" fill="rgb(219,160,15)"/><text x="573.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (3 samples, 0.67%)</title><rect x="570" y="340" width="8" height="15" fill="rgb(211,184,46)"/><text x="573.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.67%)</title><rect x="570" y="356" width="8" height="15" fill="rgb(218,101,54)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="576" y="372" width="2" height="15" fill="rgb(220,181,33)"/><text x="579.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(214,182,16)"/><text x="579.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="576" y="404" width="2" height="15" fill="rgb(221,120,5)"/><text x="579.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="576" y="420" width="2" height="15" fill="rgb(231,182,20)"/><text x="579.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="576" y="436" width="2" height="15" fill="rgb(248,195,17)"/><text x="579.00" y="446.50"></text></g><g><title>0x7fbe8f016510 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="576" y="452" width="2" height="15" fill="rgb(232,78,42)"/><text x="579.00" y="462.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (6 samples, 1.35%)</title><rect x="578" y="324" width="16" height="15" fill="rgb(240,43,23)"/><text x="581.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (6 samples, 1.35%)</title><rect x="578" y="340" width="16" height="15" fill="rgb(234,108,38)"/><text x="581.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.35%)</title><rect x="578" y="356" width="16" height="15" fill="rgb(206,23,9)"/><text x="581.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.35%)</title><rect x="578" y="372" width="16" height="15" fill="rgb(229,142,38)"/><text x="581.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.90%)</title><rect x="584" y="388" width="10" height="15" fill="rgb(218,210,49)"/><text x="587.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.47%)</title><rect x="568" y="276" width="29" height="15" fill="rgb(231,105,23)"/><text x="571.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (11 samples, 2.47%)</title><rect x="568" y="292" width="29" height="15" fill="rgb(245,207,12)"/><text x="571.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (11 samples, 2.47%)</title><rect x="568" y="308" width="29" height="15" fill="rgb(205,217,11)"/><text x="571.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:677) (1 samples, 0.22%)</title><rect x="594" y="324" width="3" height="15" fill="rgb(236,39,26)"/><text x="597.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="594" y="340" width="3" height="15" fill="rgb(230,56,42)"/><text x="597.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="597" y="276" width="3" height="15" fill="rgb(223,46,37)"/><text x="600.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (36 samples, 8.07%)</title><rect x="562" y="228" width="96" height="15" fill="rgb(239,177,20)"/><text x="565.00" y="238.50">_run (mlpro..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (35 samples, 7.85%)</title><rect x="565" y="244" width="93" height="15" fill="rgb(234,70,32)"/><text x="568.00" y="254.50">numpy_dot_i..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (35 samples, 7.85%)</title><rect x="565" y="260" width="93" height="15" fill="rgb(211,4,7)"/><text x="568.00" y="270.50">dot (&lt;__arr..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 4.93%)</title><rect x="600" y="276" width="58" height="15" fill="rgb(208,73,16)"/><text x="603.00" y="286.50">sgemm_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (2 samples, 0.45%)</title><rect x="658" y="228" width="5" height="15" fill="rgb(245,42,39)"/><text x="661.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="671" y="260" width="3" height="15" fill="rgb(217,69,54)"/><text x="674.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.22%)</title><rect x="671" y="276" width="3" height="15" fill="rgb(243,53,37)"/><text x="674.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.45%)</title><rect x="674" y="260" width="5" height="15" fill="rgb(244,17,29)"/><text x="677.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (2 samples, 0.45%)</title><rect x="674" y="276" width="5" height="15" fill="rgb(225,134,1)"/><text x="677.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.22%)</title><rect x="676" y="292" width="3" height="15" fill="rgb(217,48,28)"/><text x="679.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.22%)</title><rect x="679" y="276" width="3" height="15" fill="rgb(206,44,24)"/><text x="682.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="682" y="308" width="2" height="15" fill="rgb(213,136,25)"/><text x="685.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="682" y="324" width="2" height="15" fill="rgb(239,197,34)"/><text x="685.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.22%)</title><rect x="684" y="308" width="3" height="15" fill="rgb(241,199,26)"/><text x="687.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2158) (1 samples, 0.22%)</title><rect x="684" y="324" width="3" height="15" fill="rgb(239,226,48)"/><text x="687.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.22%)</title><rect x="687" y="308" width="2" height="15" fill="rgb(232,57,36)"/><text x="690.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.22%)</title><rect x="687" y="324" width="2" height="15" fill="rgb(230,113,29)"/><text x="690.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.90%)</title><rect x="682" y="292" width="10" height="15" fill="rgb(238,229,0)"/><text x="685.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.22%)</title><rect x="689" y="308" width="3" height="15" fill="rgb(243,206,52)"/><text x="692.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.22%)</title><rect x="689" y="324" width="3" height="15" fill="rgb(215,75,27)"/><text x="692.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.22%)</title><rect x="689" y="340" width="3" height="15" fill="rgb(226,189,15)"/><text x="692.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.67%)</title><rect x="692" y="340" width="8" height="15" fill="rgb(234,212,34)"/><text x="695.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.45%)</title><rect x="700" y="340" width="5" height="15" fill="rgb(235,24,6)"/><text x="703.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.45%)</title><rect x="705" y="340" width="6" height="15" fill="rgb(250,88,53)"/><text x="708.00" y="350.50"></text></g><g><title>0x7fbe8f034d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="711" y="356" width="2" height="15" fill="rgb(224,11,51)"/><text x="714.00" y="366.50"></text></g><g><title>0x7fbe8f034dae (libc-2.29.so) (1 samples, 0.22%)</title><rect x="713" y="356" width="3" height="15" fill="rgb(214,218,10)"/><text x="716.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.67%)</title><rect x="711" y="340" width="8" height="15" fill="rgb(235,215,26)"/><text x="714.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.22%)</title><rect x="716" y="356" width="3" height="15" fill="rgb(225,121,45)"/><text x="719.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (12 samples, 2.69%)</title><rect x="692" y="292" width="32" height="15" fill="rgb(217,185,5)"/><text x="695.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (12 samples, 2.69%)</title><rect x="692" y="308" width="32" height="15" fill="rgb(221,144,28)"/><text x="695.00" y="318.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (12 samples, 2.69%)</title><rect x="692" y="324" width="32" height="15" fill="rgb(239,69,44)"/><text x="695.00" y="334.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (2 samples, 0.45%)</title><rect x="719" y="340" width="5" height="15" fill="rgb(221,6,41)"/><text x="722.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (24 samples, 5.38%)</title><rect x="663" y="228" width="63" height="15" fill="rgb(220,169,20)"/><text x="666.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 4.71%)</title><rect x="671" y="244" width="55" height="15" fill="rgb(209,163,5)"/><text x="674.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 4.04%)</title><rect x="679" y="260" width="47" height="15" fill="rgb(226,181,5)"/><text x="682.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 3.81%)</title><rect x="682" y="276" width="44" height="15" fill="rgb(211,140,40)"/><text x="685.00" y="286.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.22%)</title><rect x="724" y="292" width="2" height="15" fill="rgb(241,177,17)"/><text x="727.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.22%)</title><rect x="724" y="308" width="2" height="15" fill="rgb(249,143,47)"/><text x="727.00" y="318.50"></text></g><g><title>0x7fbe8f014f71 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="724" y="324" width="2" height="15" fill="rgb(223,134,12)"/><text x="727.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (4 samples, 0.90%)</title><rect x="726" y="244" width="11" height="15" fill="rgb(230,70,34)"/><text x="729.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.22%)</title><rect x="734" y="260" width="3" height="15" fill="rgb(239,177,40)"/><text x="737.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.22%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(254,41,1)"/><text x="745.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.22%)</title><rect x="745" y="324" width="3" height="15" fill="rgb(219,124,50)"/><text x="748.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="745" y="340" width="3" height="15" fill="rgb(216,119,8)"/><text x="748.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.22%)</title><rect x="745" y="356" width="3" height="15" fill="rgb(220,85,34)"/><text x="748.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.22%)</title><rect x="745" y="372" width="3" height="15" fill="rgb(246,110,12)"/><text x="748.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.22%)</title><rect x="745" y="388" width="3" height="15" fill="rgb(247,175,34)"/><text x="748.00" y="398.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.22%)</title><rect x="745" y="404" width="3" height="15" fill="rgb(217,11,26)"/><text x="748.00" y="414.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (2 samples, 0.45%)</title><rect x="748" y="340" width="5" height="15" fill="rgb(224,7,42)"/><text x="751.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.22%)</title><rect x="753" y="340" width="3" height="15" fill="rgb(213,224,31)"/><text x="756.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (4 samples, 0.90%)</title><rect x="756" y="340" width="10" height="15" fill="rgb(245,101,33)"/><text x="759.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3129) (1 samples, 0.22%)</title><rect x="766" y="340" width="3" height="15" fill="rgb(218,85,33)"/><text x="769.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (9 samples, 2.02%)</title><rect x="748" y="324" width="23" height="15" fill="rgb(247,148,12)"/><text x="751.00" y="334.50">P..</text></g><g><title>FLOAT_argmax (arraytypes.c.src:3140) (1 samples, 0.22%)</title><rect x="769" y="340" width="2" height="15" fill="rgb(205,31,34)"/><text x="772.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (18 samples, 4.04%)</title><rect x="726" y="228" width="48" height="15" fill="rgb(249,194,52)"/><text x="729.00" y="238.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (14 samples, 3.14%)</title><rect x="737" y="244" width="37" height="15" fill="rgb(243,154,44)"/><text x="740.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 3.14%)</title><rect x="737" y="260" width="37" height="15" fill="rgb(237,144,19)"/><text x="740.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (14 samples, 3.14%)</title><rect x="737" y="276" width="37" height="15" fill="rgb(206,59,26)"/><text x="740.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 2.47%)</title><rect x="745" y="292" width="29" height="15" fill="rgb(242,48,14)"/><text x="748.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c:302) (11 samples, 2.47%)</title><rect x="745" y="308" width="29" height="15" fill="rgb(214,2,13)"/><text x="748.00" y="318.50">ar..</text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.22%)</title><rect x="771" y="324" width="3" height="15" fill="rgb(225,106,40)"/><text x="774.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="771" y="340" width="3" height="15" fill="rgb(227,79,22)"/><text x="774.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (81 samples, 18.16%)</title><rect x="562" y="196" width="215" height="15" fill="rgb(252,87,8)"/><text x="565.00" y="206.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (81 samples, 18.16%)</title><rect x="562" y="212" width="215" height="15" fill="rgb(227,128,7)"/><text x="565.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.22%)</title><rect x="774" y="228" width="3" height="15" fill="rgb(241,126,16)"/><text x="777.00" y="238.50"></text></g><g><title>0x7fbe8f035124 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="774" y="244" width="3" height="15" fill="rgb(239,98,28)"/><text x="777.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (85 samples, 19.06%)</title><rect x="560" y="180" width="225" height="15" fill="rgb(218,73,22)"/><text x="563.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.67%)</title><rect x="777" y="196" width="8" height="15" fill="rgb(208,172,45)"/><text x="780.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.22%)</title><rect x="782" y="212" width="3" height="15" fill="rgb(237,181,2)"/><text x="785.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.22%)</title><rect x="782" y="228" width="3" height="15" fill="rgb(227,32,26)"/><text x="785.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.45%)</title><rect x="785" y="180" width="5" height="15" fill="rgb(233,133,11)"/><text x="788.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (90 samples, 20.18%)</title><rect x="555" y="164" width="238" height="15" fill="rgb(222,76,38)"/><text x="558.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.22%)</title><rect x="790" y="180" width="3" height="15" fill="rgb(233,150,35)"/><text x="793.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:45) (105 samples, 23.54%)</title><rect x="523" y="52" width="278" height="15" fill="rgb(230,133,12)"/><text x="526.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_li..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:44) (105 samples, 23.54%)</title><rect x="523" y="68" width="278" height="15" fill="rgb(236,80,44)"/><text x="526.00" y="78.50">profile_pyrt (bench_LogisticRegressio..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (103 samples, 23.09%)</title><rect x="528" y="84" width="273" height="15" fill="rgb(221,109,42)"/><text x="531.00" y="94.50">setup_profile (bench_LogisticRegress..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (100 samples, 22.42%)</title><rect x="536" y="100" width="265" height="15" fill="rgb(222,11,40)"/><text x="539.00" y="110.50">profile (bench_LogisticRegression_l..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 22.42%)</title><rect x="536" y="116" width="265" height="15" fill="rgb(238,54,31)"/><text x="539.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (99 samples, 22.20%)</title><rect x="539" y="132" width="262" height="15" fill="rgb(245,130,28)"/><text x="542.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (95 samples, 21.30%)</title><rect x="549" y="148" width="252" height="15" fill="rgb(213,180,1)"/><text x="552.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 0.67%)</title><rect x="793" y="164" width="8" height="15" fill="rgb(244,136,43)"/><text x="796.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.45%)</title><rect x="795" y="180" width="6" height="15" fill="rgb(210,61,38)"/><text x="798.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="806" y="116" width="3" height="15" fill="rgb(226,22,46)"/><text x="809.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="806" y="132" width="3" height="15" fill="rgb(219,10,48)"/><text x="809.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.22%)</title><rect x="806" y="148" width="3" height="15" fill="rgb(239,56,38)"/><text x="809.00" y="158.50"></text></g><g><title>0x7fbe8e236f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="806" y="164" width="3" height="15" fill="rgb(206,179,36)"/><text x="809.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.22%)</title><rect x="809" y="116" width="2" height="15" fill="rgb(236,46,45)"/><text x="812.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.22%)</title><rect x="809" y="132" width="2" height="15" fill="rgb(242,85,27)"/><text x="812.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.22%)</title><rect x="809" y="148" width="2" height="15" fill="rgb(224,106,32)"/><text x="812.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.22%)</title><rect x="809" y="164" width="2" height="15" fill="rgb(228,110,3)"/><text x="812.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.22%)</title><rect x="830" y="148" width="2" height="15" fill="rgb(223,90,45)"/><text x="833.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (2 samples, 0.45%)</title><rect x="838" y="164" width="5" height="15" fill="rgb(248,191,21)"/><text x="841.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.22%)</title><rect x="846" y="196" width="2" height="15" fill="rgb(223,153,53)"/><text x="849.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.22%)</title><rect x="846" y="212" width="2" height="15" fill="rgb(215,69,27)"/><text x="849.00" y="222.50"></text></g><g><title>0x7fbe4f084ff9 (?) (1 samples, 0.22%)</title><rect x="851" y="212" width="2" height="15" fill="rgb(236,110,6)"/><text x="854.00" y="222.50"></text></g><g><title>0x7fbe4f07fef6 (?) (1 samples, 0.22%)</title><rect x="851" y="228" width="2" height="15" fill="rgb(216,78,19)"/><text x="854.00" y="238.50"></text></g><g><title>0x7fbe4f074962 (?) (1 samples, 0.22%)</title><rect x="851" y="244" width="2" height="15" fill="rgb(213,205,20)"/><text x="854.00" y="254.50"></text></g><g><title>0x7fbe4f0a87a7 (?) (1 samples, 0.22%)</title><rect x="851" y="260" width="2" height="15" fill="rgb(237,56,15)"/><text x="854.00" y="270.50"></text></g><g><title>0x7fbe4f0a8379 (?) (1 samples, 0.22%)</title><rect x="851" y="276" width="2" height="15" fill="rgb(214,120,54)"/><text x="854.00" y="286.50"></text></g><g><title>0x7fbe4f5068b8 (?) (1 samples, 0.22%)</title><rect x="851" y="292" width="2" height="15" fill="rgb(242,50,45)"/><text x="854.00" y="302.50"></text></g><g><title>0x7fbe4f504c7f (?) (1 samples, 0.22%)</title><rect x="851" y="308" width="2" height="15" fill="rgb(241,205,39)"/><text x="854.00" y="318.50"></text></g><g><title>0x7fbe4f51799c (?) (1 samples, 0.22%)</title><rect x="851" y="324" width="2" height="15" fill="rgb(212,181,14)"/><text x="854.00" y="334.50"></text></g><g><title>0x7fbe4f1fcc6e (?) (1 samples, 0.22%)</title><rect x="851" y="340" width="2" height="15" fill="rgb(241,178,40)"/><text x="854.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="856" y="260" width="3" height="15" fill="rgb(217,51,44)"/><text x="859.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="859" y="292" width="2" height="15" fill="rgb(244,137,43)"/><text x="862.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="859" y="308" width="2" height="15" fill="rgb(226,53,30)"/><text x="862.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(210,79,0)"/><text x="862.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="861" y="292" width="3" height="15" fill="rgb(213,202,33)"/><text x="864.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="864" y="292" width="3" height="15" fill="rgb(208,118,33)"/><text x="867.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="864" y="308" width="3" height="15" fill="rgb(250,180,51)"/><text x="867.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="867" y="292" width="2" height="15" fill="rgb(213,81,4)"/><text x="870.00" y="302.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="875" y="340" width="2" height="15" fill="rgb(214,154,7)"/><text x="878.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1100" y="516" width="2" height="15" fill="rgb(233,176,37)"/><text x="1103.00" y="526.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1100" y="468" width="5" height="15" fill="rgb(222,132,38)"/><text x="1103.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1100" y="484" width="5" height="15" fill="rgb(208,66,50)"/><text x="1103.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1100" y="500" width="5" height="15" fill="rgb(225,3,8)"/><text x="1103.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1102" y="516" width="3" height="15" fill="rgb(252,86,28)"/><text x="1105.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="356" width="7" height="15" fill="rgb(222,80,39)"/><text x="1103.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="372" width="7" height="15" fill="rgb(234,22,0)"/><text x="1103.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="388" width="7" height="15" fill="rgb(233,16,13)"/><text x="1103.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="404" width="7" height="15" fill="rgb(243,165,25)"/><text x="1103.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="420" width="7" height="15" fill="rgb(213,159,34)"/><text x="1103.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="436" width="7" height="15" fill="rgb(221,192,52)"/><text x="1103.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1100" y="452" width="7" height="15" fill="rgb(253,22,22)"/><text x="1103.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1105" y="468" width="2" height="15" fill="rgb(209,158,1)"/><text x="1108.00" y="478.50"></text></g><g><title>0x7fbe4f04b850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1123" y="372" width="8" height="15" fill="rgb(218,80,0)"/><text x="1126.00" y="382.50"></text></g><g><title>0x7fbe8f034d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1131" y="372" width="3" height="15" fill="rgb(219,121,46)"/><text x="1134.00" y="382.50"></text></g><g><title>0x7fbe8f034d97 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1134" y="372" width="3" height="15" fill="rgb(243,124,23)"/><text x="1137.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 23.09%)</title><rect x="869" y="308" width="273" height="15" fill="rgb(228,7,9)"/><text x="872.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 23.09%)</title><rect x="869" y="324" width="273" height="15" fill="rgb(240,30,50)"/><text x="872.00" y="334.50">onnxruntime::SequentialExecutor::Exe..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 22.42%)</title><rect x="877" y="340" width="265" height="15" fill="rgb(218,92,29)"/><text x="880.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;f..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.91%)</title><rect x="1107" y="356" width="35" height="15" fill="rgb(228,212,47)"/><text x="1110.00" y="366.50">on..</text></g><g><title>0x7fbe8f034dbb (libc-2.29.so) (2 samples, 0.45%)</title><rect x="1137" y="372" width="5" height="15" fill="rgb(241,27,45)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 24.22%)</title><rect x="859" y="260" width="286" height="15" fill="rgb(234,182,16)"/><text x="862.00" y="270.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 24.22%)</title><rect x="859" y="276" width="286" height="15" fill="rgb(248,212,45)"/><text x="862.00" y="286.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 23.32%)</title><rect x="869" y="292" width="276" height="15" fill="rgb(221,119,35)"/><text x="872.00" y="302.50">onnxruntime::utils::ExecuteGraph (on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="308" width="3" height="15" fill="rgb(223,206,10)"/><text x="1145.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="324" width="3" height="15" fill="rgb(206,74,13)"/><text x="1145.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1142" y="340" width="3" height="15" fill="rgb(209,107,4)"/><text x="1145.00" y="350.50"></text></g><g><title>0x7fbe8f0f3066 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1142" y="356" width="3" height="15" fill="rgb(250,10,24)"/><text x="1145.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.12%)</title><rect x="1145" y="260" width="13" height="15" fill="rgb(240,169,31)"/><text x="1148.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1150" y="276" width="8" height="15" fill="rgb(226,111,44)"/><text x="1153.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1152" y="292" width="6" height="15" fill="rgb(222,220,46)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1152" y="308" width="6" height="15" fill="rgb(211,15,25)"/><text x="1155.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1155" y="324" width="3" height="15" fill="rgb(253,23,16)"/><text x="1158.00" y="334.50"></text></g><g><title>0x7fbe8f034d94 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1158" y="276" width="2" height="15" fill="rgb(211,102,29)"/><text x="1161.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.22%)</title><rect x="1160" y="276" width="3" height="15" fill="rgb(251,228,8)"/><text x="1163.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(234,140,6)"/><text x="1166.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.22%)</title><rect x="1163" y="308" width="3" height="15" fill="rgb(244,91,19)"/><text x="1166.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.22%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(212,60,1)"/><text x="1169.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.22%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(249,129,32)"/><text x="1169.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.12%)</title><rect x="1158" y="260" width="13" height="15" fill="rgb(215,157,19)"/><text x="1161.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.67%)</title><rect x="1163" y="276" width="8" height="15" fill="rgb(221,206,43)"/><text x="1166.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="1168" y="292" width="3" height="15" fill="rgb(232,113,24)"/><text x="1171.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="1168" y="308" width="3" height="15" fill="rgb(213,41,5)"/><text x="1171.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="1168" y="324" width="3" height="15" fill="rgb(223,86,24)"/><text x="1171.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="1168" y="340" width="3" height="15" fill="rgb(233,78,36)"/><text x="1171.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1168" y="356" width="3" height="15" fill="rgb(233,32,5)"/><text x="1171.00" y="366.50"></text></g><g><title>0x7fbe8f015e5e (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1168" y="372" width="3" height="15" fill="rgb(223,106,11)"/><text x="1171.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 27.13%)</title><rect x="853" y="244" width="321" height="15" fill="rgb(245,101,40)"/><text x="856.00" y="254.50">onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1171" y="260" width="3" height="15" fill="rgb(238,147,54)"/><text x="1174.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (126 samples, 28.25%)</title><rect x="843" y="164" width="333" height="15" fill="rgb(232,25,0)"/><text x="846.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (126 samples, 28.25%)</title><rect x="843" y="180" width="333" height="15" fill="rgb(233,141,8)"/><text x="846.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (124 samples, 27.80%)</title><rect x="848" y="196" width="328" height="15" fill="rgb(230,121,25)"/><text x="851.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 27.35%)</title><rect x="853" y="212" width="323" height="15" fill="rgb(240,118,6)"/><text x="856.00" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 27.35%)</title><rect x="853" y="228" width="323" height="15" fill="rgb(251,163,20)"/><text x="856.00" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(215,89,7)"/><text x="1177.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(233,132,45)"/><text x="1177.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (139 samples, 31.17%)</title><rect x="819" y="132" width="368" height="15" fill="rgb(218,4,35)"/><text x="822.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (134 samples, 30.04%)</title><rect x="832" y="148" width="355" height="15" fill="rgb(249,8,26)"/><text x="835.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.90%)</title><rect x="1176" y="164" width="11" height="15" fill="rgb(212,179,33)"/><text x="1179.00" y="174.50"></text></g><g><title>all (446 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,154,1)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:52) (147 samples, 32.96%)</title><rect x="801" y="52" width="389" height="15" fill="rgb(225,22,47)"/><text x="804.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_c..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:51) (147 samples, 32.96%)</title><rect x="801" y="68" width="389" height="15" fill="rgb(248,116,9)"/><text x="804.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:29) (147 samples, 32.96%)</title><rect x="801" y="84" width="389" height="15" fill="rgb(233,9,42)"/><text x="804.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_de..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py:23) (147 samples, 32.96%)</title><rect x="801" y="100" width="389" height="15" fill="rgb(220,210,2)"/><text x="804.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (143 samples, 32.06%)</title><rect x="811" y="116" width="379" height="15" fill="rgb(244,222,46)"/><text x="814.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(214,223,36)"/><text x="1190.00" y="142.50"></text></g></g></svg>