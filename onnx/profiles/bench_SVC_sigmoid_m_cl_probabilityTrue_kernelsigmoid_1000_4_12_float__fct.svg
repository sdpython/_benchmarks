<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(224,217,22)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(210,80,12)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(210,93,42)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(210,149,3)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(226,42,20)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(231,141,36)"/><text x="13.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(213,67,18)"/><text x="13.00" y="974.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(227,11,21)"/><text x="14.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(227,39,23)"/><text x="14.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(232,101,41)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(243,67,39)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(210,125,38)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(225,98,31)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(229,40,17)"/><text x="15.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(206,46,18)"/><text x="15.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(252,129,9)"/><text x="16.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(211,113,0)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(205,203,39)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(228,121,37)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(220,223,29)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(244,54,46)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(233,47,2)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.56%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(228,126,0)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(236,113,3)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(244,0,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(244,26,44)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(205,218,5)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(245,49,29)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.56%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(243,130,17)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(247,53,20)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(218,27,29)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(223,212,19)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(239,186,48)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(254,202,30)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.56%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(245,217,15)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(246,112,40)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(247,114,30)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(247,201,3)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(234,7,18)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(228,221,41)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.56%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(216,198,39)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(251,156,47)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(252,202,3)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(233,114,26)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(207,106,36)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(231,117,4)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(223,84,53)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(209,46,4)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(225,125,51)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.56%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(243,125,31)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(214,202,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(223,74,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(245,93,18)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(235,88,12)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(225,173,19)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.56%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(223,218,45)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.56%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(231,96,50)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.56%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(241,130,0)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(245,41,26)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(220,212,9)"/><text x="16.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(226,85,37)"/><text x="18.00" y="910.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1428" width="1" height="15" fill="rgb(250,192,9)"/><text x="19.00" y="1438.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1444" width="1" height="15" fill="rgb(207,88,40)"/><text x="19.00" y="1454.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.11%)</title><rect x="16" y="1460" width="1" height="15" fill="rgb(244,73,1)"/><text x="19.00" y="1470.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.22%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(210,82,18)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(207,207,42)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(205,157,8)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(227,211,28)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(239,10,2)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(219,14,53)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (2 samples, 0.22%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(206,184,38)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(224,107,43)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(228,30,0)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(228,149,32)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(207,169,26)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(243,57,35)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="1396" width="3" height="15" fill="rgb(235,185,2)"/><text x="19.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1412" width="3" height="15" fill="rgb(233,209,28)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(239,186,30)"/><text x="20.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(223,181,1)"/><text x="20.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(251,94,19)"/><text x="20.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(217,122,29)"/><text x="20.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.11%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(222,190,28)"/><text x="20.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(231,207,5)"/><text x="20.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(223,211,36)"/><text x="20.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(241,68,26)"/><text x="20.00" y="1550.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(206,207,51)"/><text x="20.00" y="1566.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="17" y="1572" width="2" height="15" fill="rgb(205,165,8)"/><text x="20.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1588" width="2" height="15" fill="rgb(246,145,51)"/><text x="20.00" y="1598.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1604" width="2" height="15" fill="rgb(238,177,35)"/><text x="20.00" y="1614.50"></text></g><g><title>0x7ff4d3da7995 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1620" width="2" height="15" fill="rgb(251,124,7)"/><text x="20.00" y="1630.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1636" width="2" height="15" fill="rgb(210,23,50)"/><text x="20.00" y="1646.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1652" width="2" height="15" fill="rgb(234,32,25)"/><text x="20.00" y="1662.50"></text></g><g><title>0x7ff4d3da7258 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1668" width="2" height="15" fill="rgb(219,169,38)"/><text x="20.00" y="1678.50"></text></g><g><title>0x7ff4d3df4d7a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1684" width="2" height="15" fill="rgb(245,210,15)"/><text x="20.00" y="1694.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1700" width="2" height="15" fill="rgb(233,191,54)"/><text x="20.00" y="1710.50"></text></g><g><title>0x7ff4d3df518b (ld-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1716" width="2" height="15" fill="rgb(225,79,29)"/><text x="20.00" y="1726.50"></text></g><g><title>0x7ff4d3deac1a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1732" width="2" height="15" fill="rgb(241,71,22)"/><text x="20.00" y="1742.50"></text></g><g><title>0x7ff4d3de89fe (ld-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1748" width="2" height="15" fill="rgb(214,193,3)"/><text x="20.00" y="1758.50"></text></g><g><title>0x7ff4d3e00f3f (ld-2.29.so) (1 samples, 0.11%)</title><rect x="17" y="1764" width="2" height="15" fill="rgb(242,13,15)"/><text x="20.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="16" y="1124" width="4" height="15" fill="rgb(241,56,15)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="16" y="1140" width="4" height="15" fill="rgb(231,81,36)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="16" y="1156" width="4" height="15" fill="rgb(242,36,41)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="16" y="1172" width="4" height="15" fill="rgb(233,229,23)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="16" y="1188" width="4" height="15" fill="rgb(229,146,0)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="19" y="1204" width="1" height="15" fill="rgb(218,160,2)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1220" width="1" height="15" fill="rgb(231,90,43)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1236" width="1" height="15" fill="rgb(230,126,28)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1252" width="1" height="15" fill="rgb(238,113,7)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="19" y="1268" width="1" height="15" fill="rgb(224,8,50)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="19" y="1284" width="1" height="15" fill="rgb(227,147,51)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="19" y="1300" width="1" height="15" fill="rgb(219,109,0)"/><text x="22.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="19" y="1316" width="1" height="15" fill="rgb(207,217,4)"/><text x="22.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1332" width="1" height="15" fill="rgb(211,89,33)"/><text x="22.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1348" width="1" height="15" fill="rgb(242,93,21)"/><text x="22.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1364" width="1" height="15" fill="rgb(223,134,35)"/><text x="22.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.11%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(222,27,30)"/><text x="22.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.11%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(234,134,32)"/><text x="22.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(254,202,39)"/><text x="23.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(210,162,19)"/><text x="23.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(242,26,48)"/><text x="23.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(242,191,9)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(252,194,46)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(254,79,14)"/><text x="23.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(215,227,46)"/><text x="23.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(239,150,50)"/><text x="23.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1604" width="1" height="15" fill="rgb(229,59,11)"/><text x="23.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1620" width="1" height="15" fill="rgb(237,18,43)"/><text x="23.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1636" width="1" height="15" fill="rgb(210,102,32)"/><text x="23.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1652" width="1" height="15" fill="rgb(216,219,41)"/><text x="23.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.11%)</title><rect x="20" y="1668" width="1" height="15" fill="rgb(238,57,54)"/><text x="23.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1684" width="1" height="15" fill="rgb(244,95,8)"/><text x="23.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1700" width="1" height="15" fill="rgb(245,153,34)"/><text x="23.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1716" width="1" height="15" fill="rgb(226,41,3)"/><text x="23.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1732" width="1" height="15" fill="rgb(249,198,41)"/><text x="23.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1748" width="1" height="15" fill="rgb(236,97,34)"/><text x="23.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="20" y="1764" width="1" height="15" fill="rgb(242,93,21)"/><text x="23.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1780" width="1" height="15" fill="rgb(248,200,41)"/><text x="23.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1796" width="1" height="15" fill="rgb(235,44,8)"/><text x="23.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1812" width="1" height="15" fill="rgb(217,202,28)"/><text x="23.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1828" width="1" height="15" fill="rgb(238,114,21)"/><text x="23.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1844" width="1" height="15" fill="rgb(232,208,32)"/><text x="23.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1860" width="1" height="15" fill="rgb(254,152,22)"/><text x="23.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1876" width="1" height="15" fill="rgb(229,198,17)"/><text x="23.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="20" y="1892" width="1" height="15" fill="rgb(236,21,25)"/><text x="23.00" y="1902.50"></text></g><g><title>__new__ (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="20" y="1908" width="1" height="15" fill="rgb(206,117,0)"/><text x="23.00" y="1918.50"></text></g><g><title>0x7ff4c3bdb0e9 (?) (1 samples, 0.11%)</title><rect x="21" y="1508" width="2" height="15" fill="rgb(235,166,18)"/><text x="24.00" y="1518.50"></text></g><g><title>0x7ff4c3bc1bc1 (?) (1 samples, 0.11%)</title><rect x="21" y="1524" width="2" height="15" fill="rgb(219,91,33)"/><text x="24.00" y="1534.50"></text></g><g><title>0x7ff4c3c9fd23 (?) (1 samples, 0.11%)</title><rect x="21" y="1540" width="2" height="15" fill="rgb(244,131,33)"/><text x="24.00" y="1550.50"></text></g><g><title>0x7ff4c3ca4dbf (?) (1 samples, 0.11%)</title><rect x="21" y="1556" width="2" height="15" fill="rgb(238,117,36)"/><text x="24.00" y="1566.50"></text></g><g><title>0x7ff4c3ca0001 (?) (1 samples, 0.11%)</title><rect x="21" y="1572" width="2" height="15" fill="rgb(207,73,34)"/><text x="24.00" y="1582.50"></text></g><g><title>0x7ff4c3ca626c (?) (1 samples, 0.11%)</title><rect x="21" y="1588" width="2" height="15" fill="rgb(214,60,5)"/><text x="24.00" y="1598.50"></text></g><g><title>0x7ff4c3c9b6ee (?) (1 samples, 0.11%)</title><rect x="21" y="1604" width="2" height="15" fill="rgb(226,81,1)"/><text x="24.00" y="1614.50"></text></g><g><title>0x7ff4c3c9b43f (?) (1 samples, 0.11%)</title><rect x="21" y="1620" width="2" height="15" fill="rgb(224,86,40)"/><text x="24.00" y="1630.50"></text></g><g><title>0x7ff4c3ca0f79 (?) (1 samples, 0.11%)</title><rect x="21" y="1636" width="2" height="15" fill="rgb(228,152,41)"/><text x="24.00" y="1646.50"></text></g><g><title>0x7ff4c3ca0e71 (?) (1 samples, 0.11%)</title><rect x="21" y="1652" width="2" height="15" fill="rgb(236,0,53)"/><text x="24.00" y="1662.50"></text></g><g><title>0x7ff4c35fb6f5 (?) (1 samples, 0.11%)</title><rect x="21" y="1668" width="2" height="15" fill="rgb(211,184,35)"/><text x="24.00" y="1678.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="21" y="1684" width="2" height="15" fill="rgb(216,1,23)"/><text x="24.00" y="1694.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.22%)</title><rect x="23" y="1508" width="2" height="15" fill="rgb(232,8,48)"/><text x="26.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.22%)</title><rect x="23" y="1524" width="2" height="15" fill="rgb(237,56,43)"/><text x="26.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.22%)</title><rect x="23" y="1540" width="2" height="15" fill="rgb(238,173,30)"/><text x="26.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="23" y="1556" width="2" height="15" fill="rgb(217,124,26)"/><text x="26.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.22%)</title><rect x="23" y="1572" width="2" height="15" fill="rgb(243,112,37)"/><text x="26.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.22%)</title><rect x="23" y="1588" width="2" height="15" fill="rgb(237,101,20)"/><text x="26.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="24" y="1604" width="1" height="15" fill="rgb(254,155,37)"/><text x="27.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="24" y="1620" width="1" height="15" fill="rgb(206,147,31)"/><text x="27.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.11%)</title><rect x="24" y="1636" width="1" height="15" fill="rgb(236,127,33)"/><text x="27.00" y="1646.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(253,11,2)"/><text x="28.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver11::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(249,34,51)"/><text x="28.00" y="1566.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Loop_Onnx_ver11&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(241,21,2)"/><text x="28.00" y="1582.50"></text></g><g><title>onnx::OpSchema::Input (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(229,169,14)"/><text x="28.00" y="1598.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string [clone .isra.316] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(241,95,15)"/><text x="28.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="484" width="12" height="15" fill="rgb(236,206,12)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="500" width="12" height="15" fill="rgb(208,195,28)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="516" width="12" height="15" fill="rgb(213,34,14)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="532" width="12" height="15" fill="rgb(213,190,24)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="548" width="12" height="15" fill="rgb(240,170,11)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="564" width="12" height="15" fill="rgb(213,178,29)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (9 samples, 1.01%)</title><rect x="16" y="580" width="12" height="15" fill="rgb(212,23,49)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="596" width="12" height="15" fill="rgb(245,183,49)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="612" width="12" height="15" fill="rgb(245,146,37)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="628" width="12" height="15" fill="rgb(212,127,12)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="644" width="12" height="15" fill="rgb(249,206,38)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="660" width="12" height="15" fill="rgb(228,206,29)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (9 samples, 1.01%)</title><rect x="16" y="676" width="12" height="15" fill="rgb(236,141,46)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="692" width="12" height="15" fill="rgb(215,110,30)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="708" width="12" height="15" fill="rgb(249,125,6)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="724" width="12" height="15" fill="rgb(217,224,32)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="740" width="12" height="15" fill="rgb(212,76,30)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="756" width="12" height="15" fill="rgb(232,179,30)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (9 samples, 1.01%)</title><rect x="16" y="772" width="12" height="15" fill="rgb(239,39,33)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="788" width="12" height="15" fill="rgb(216,33,6)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="804" width="12" height="15" fill="rgb(230,213,28)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="820" width="12" height="15" fill="rgb(214,193,49)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="836" width="12" height="15" fill="rgb(231,228,15)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="852" width="12" height="15" fill="rgb(248,160,37)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (9 samples, 1.01%)</title><rect x="16" y="868" width="12" height="15" fill="rgb(216,152,47)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="884" width="12" height="15" fill="rgb(240,55,26)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="900" width="12" height="15" fill="rgb(233,211,37)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="916" width="12" height="15" fill="rgb(234,90,36)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="932" width="12" height="15" fill="rgb(223,22,16)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="948" width="12" height="15" fill="rgb(235,33,2)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="964" width="12" height="15" fill="rgb(215,131,53)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="980" width="12" height="15" fill="rgb(206,59,44)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="996" width="12" height="15" fill="rgb(234,39,44)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (9 samples, 1.01%)</title><rect x="16" y="1012" width="12" height="15" fill="rgb(219,92,54)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="1028" width="12" height="15" fill="rgb(210,144,2)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="1044" width="12" height="15" fill="rgb(244,115,30)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="1060" width="12" height="15" fill="rgb(232,52,36)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.01%)</title><rect x="16" y="1076" width="12" height="15" fill="rgb(247,13,20)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.01%)</title><rect x="16" y="1092" width="12" height="15" fill="rgb(231,26,52)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (9 samples, 1.01%)</title><rect x="16" y="1108" width="12" height="15" fill="rgb(229,38,47)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1124" width="8" height="15" fill="rgb(222,17,19)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1140" width="8" height="15" fill="rgb(244,228,35)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1156" width="8" height="15" fill="rgb(248,177,8)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1172" width="8" height="15" fill="rgb(235,19,28)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1188" width="8" height="15" fill="rgb(221,35,35)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.67%)</title><rect x="20" y="1204" width="8" height="15" fill="rgb(251,162,52)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1220" width="8" height="15" fill="rgb(226,138,24)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (6 samples, 0.67%)</title><rect x="20" y="1236" width="8" height="15" fill="rgb(221,24,13)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1252" width="8" height="15" fill="rgb(254,83,19)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1268" width="8" height="15" fill="rgb(208,97,4)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1284" width="8" height="15" fill="rgb(249,47,36)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1300" width="8" height="15" fill="rgb(232,206,47)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1316" width="8" height="15" fill="rgb(235,131,11)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.67%)</title><rect x="20" y="1332" width="8" height="15" fill="rgb(221,172,6)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1348" width="8" height="15" fill="rgb(213,114,46)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (6 samples, 0.67%)</title><rect x="20" y="1364" width="8" height="15" fill="rgb(241,200,49)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1380" width="8" height="15" fill="rgb(215,219,50)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1396" width="8" height="15" fill="rgb(210,36,35)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1412" width="8" height="15" fill="rgb(216,91,8)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.67%)</title><rect x="20" y="1428" width="8" height="15" fill="rgb(218,92,35)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="20" y="1444" width="8" height="15" fill="rgb(248,158,24)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (6 samples, 0.67%)</title><rect x="20" y="1460" width="8" height="15" fill="rgb(233,189,26)"/><text x="23.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (5 samples, 0.56%)</title><rect x="21" y="1476" width="7" height="15" fill="rgb(205,44,35)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (5 samples, 0.56%)</title><rect x="21" y="1492" width="7" height="15" fill="rgb(239,228,40)"/><text x="24.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="25" y="1508" width="3" height="15" fill="rgb(234,83,16)"/><text x="28.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="25" y="1524" width="3" height="15" fill="rgb(216,95,23)"/><text x="28.00" y="1534.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1540" width="1" height="15" fill="rgb(225,220,23)"/><text x="30.00" y="1550.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1556" width="1" height="15" fill="rgb(229,119,46)"/><text x="30.00" y="1566.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1572" width="1" height="15" fill="rgb(244,227,29)"/><text x="30.00" y="1582.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="27" y="1588" width="1" height="15" fill="rgb(227,176,44)"/><text x="30.00" y="1598.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="27" y="1604" width="1" height="15" fill="rgb(245,209,6)"/><text x="30.00" y="1614.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="27" y="1620" width="1" height="15" fill="rgb(220,226,2)"/><text x="30.00" y="1630.50"></text></g><g><title>0x7ff4d3b218cb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="27" y="1636" width="1" height="15" fill="rgb(218,226,47)"/><text x="30.00" y="1646.50"></text></g><g><title>0x7ff4d3b2043f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="27" y="1652" width="1" height="15" fill="rgb(224,101,43)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="772" width="1" height="15" fill="rgb(218,156,4)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="788" width="1" height="15" fill="rgb(245,23,52)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="804" width="1" height="15" fill="rgb(224,135,29)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="820" width="1" height="15" fill="rgb(207,65,8)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="836" width="1" height="15" fill="rgb(240,136,20)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="852" width="1" height="15" fill="rgb(218,137,41)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(206,182,38)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(253,124,46)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(231,166,42)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(232,67,28)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(243,170,17)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(244,109,5)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.11%)</title><rect x="28" y="964" width="1" height="15" fill="rgb(245,178,40)"/><text x="31.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="980" width="1" height="15" fill="rgb(246,33,33)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="996" width="1" height="15" fill="rgb(223,139,24)"/><text x="31.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1012" width="1" height="15" fill="rgb(226,152,12)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1028" width="1" height="15" fill="rgb(232,214,23)"/><text x="31.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1044" width="1" height="15" fill="rgb(216,191,15)"/><text x="31.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1060" width="1" height="15" fill="rgb(205,63,48)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1076" width="1" height="15" fill="rgb(239,43,43)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/ops/__init__.py) (1 samples, 0.11%)</title><rect x="28" y="1092" width="1" height="15" fill="rgb(227,187,33)"/><text x="31.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1108" width="1" height="15" fill="rgb(241,58,45)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1124" width="1" height="15" fill="rgb(247,183,25)"/><text x="31.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="28" y="1140" width="1" height="15" fill="rgb(220,222,7)"/><text x="31.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1156" width="1" height="15" fill="rgb(253,87,25)"/><text x="31.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1172" width="1" height="15" fill="rgb(236,92,19)"/><text x="31.00" y="1182.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="28" y="1188" width="1" height="15" fill="rgb(252,116,28)"/><text x="31.00" y="1198.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="28" y="1204" width="1" height="15" fill="rgb(221,30,18)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.11%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(225,213,0)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(227,145,23)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(214,149,22)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(235,208,50)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(210,202,1)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(240,219,46)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.11%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(242,215,38)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(219,211,15)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(239,89,53)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(249,84,25)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(253,125,16)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(245,0,34)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.11%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(251,9,28)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(212,196,26)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(217,98,6)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(225,102,13)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(243,214,13)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(237,182,50)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.11%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(222,224,53)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(228,102,21)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(236,169,12)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(231,81,27)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1460" width="2" height="15" fill="rgb(216,38,54)"/><text x="32.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1476" width="2" height="15" fill="rgb(216,104,21)"/><text x="32.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1492" width="2" height="15" fill="rgb(208,130,31)"/><text x="32.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1540" width="1" height="15" fill="rgb(206,69,53)"/><text x="34.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1556" width="1" height="15" fill="rgb(251,114,10)"/><text x="34.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1572" width="1" height="15" fill="rgb(233,173,20)"/><text x="34.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1588" width="1" height="15" fill="rgb(220,116,15)"/><text x="34.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1604" width="1" height="15" fill="rgb(230,173,4)"/><text x="34.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1620" width="1" height="15" fill="rgb(220,121,7)"/><text x="34.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="1636" width="1" height="15" fill="rgb(252,153,12)"/><text x="34.00" y="1646.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="1652" width="1" height="15" fill="rgb(212,133,6)"/><text x="34.00" y="1662.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.11%)</title><rect x="31" y="1668" width="1" height="15" fill="rgb(208,6,1)"/><text x="34.00" y="1678.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="1684" width="1" height="15" fill="rgb(206,83,34)"/><text x="34.00" y="1694.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="32" y="1588" width="1" height="15" fill="rgb(221,6,12)"/><text x="35.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="32" y="1604" width="1" height="15" fill="rgb(230,93,24)"/><text x="35.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="32" y="1620" width="1" height="15" fill="rgb(244,65,23)"/><text x="35.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="32" y="1636" width="1" height="15" fill="rgb(236,16,28)"/><text x="35.00" y="1646.50"></text></g><g><title>search (re.py) (1 samples, 0.11%)</title><rect x="32" y="1652" width="1" height="15" fill="rgb(208,147,4)"/><text x="35.00" y="1662.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="32" y="1668" width="1" height="15" fill="rgb(211,30,32)"/><text x="35.00" y="1678.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="32" y="1684" width="1" height="15" fill="rgb(213,214,6)"/><text x="35.00" y="1694.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.11%)</title><rect x="32" y="1700" width="1" height="15" fill="rgb(238,29,42)"/><text x="35.00" y="1710.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="32" y="1716" width="1" height="15" fill="rgb(219,197,25)"/><text x="35.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1892" width="2" height="15" fill="rgb(222,79,13)"/><text x="36.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1908" width="2" height="15" fill="rgb(235,212,47)"/><text x="36.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1924" width="2" height="15" fill="rgb(253,183,38)"/><text x="36.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="1940" width="2" height="15" fill="rgb(207,20,41)"/><text x="36.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1956" width="2" height="15" fill="rgb(224,61,1)"/><text x="36.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.11%)</title><rect x="33" y="1972" width="2" height="15" fill="rgb(240,197,53)"/><text x="36.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1988" width="2" height="15" fill="rgb(248,54,10)"/><text x="36.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="2004" width="2" height="15" fill="rgb(250,57,13)"/><text x="36.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="2020" width="2" height="15" fill="rgb(252,162,15)"/><text x="36.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="2036" width="2" height="15" fill="rgb(238,151,5)"/><text x="36.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="2052" width="2" height="15" fill="rgb(218,55,44)"/><text x="36.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="2068" width="2" height="15" fill="rgb(244,127,17)"/><text x="36.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="2084" width="2" height="15" fill="rgb(249,18,48)"/><text x="36.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/dviread.py) (1 samples, 0.11%)</title><rect x="33" y="2100" width="2" height="15" fill="rgb(242,141,10)"/><text x="36.00" y="2110.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.11%)</title><rect x="33" y="2116" width="2" height="15" fill="rgb(227,180,10)"/><text x="36.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="31" y="1476" width="5" height="15" fill="rgb(243,220,53)"/><text x="34.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 0.45%)</title><rect x="31" y="1492" width="5" height="15" fill="rgb(251,68,5)"/><text x="34.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="31" y="1508" width="5" height="15" fill="rgb(240,189,48)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="31" y="1524" width="5" height="15" fill="rgb(225,153,14)"/><text x="34.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="32" y="1540" width="4" height="15" fill="rgb(229,1,12)"/><text x="35.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="32" y="1556" width="4" height="15" fill="rgb(236,196,52)"/><text x="35.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="32" y="1572" width="4" height="15" fill="rgb(245,148,47)"/><text x="35.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.22%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(220,13,41)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(209,75,20)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(219,69,38)"/><text x="36.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1636" width="3" height="15" fill="rgb(238,121,14)"/><text x="36.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="33" y="1652" width="3" height="15" fill="rgb(242,93,26)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1668" width="3" height="15" fill="rgb(251,130,50)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.22%)</title><rect x="33" y="1684" width="3" height="15" fill="rgb(233,145,23)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1700" width="3" height="15" fill="rgb(247,189,49)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1716" width="3" height="15" fill="rgb(244,68,12)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1732" width="3" height="15" fill="rgb(248,15,45)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="33" y="1748" width="3" height="15" fill="rgb(231,105,37)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1764" width="3" height="15" fill="rgb(228,35,19)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.22%)</title><rect x="33" y="1780" width="3" height="15" fill="rgb(216,142,41)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1796" width="3" height="15" fill="rgb(224,0,45)"/><text x="36.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1812" width="3" height="15" fill="rgb(237,11,3)"/><text x="36.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1828" width="3" height="15" fill="rgb(246,216,17)"/><text x="36.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="33" y="1844" width="3" height="15" fill="rgb(232,20,5)"/><text x="36.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="33" y="1860" width="3" height="15" fill="rgb(221,124,7)"/><text x="36.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.22%)</title><rect x="33" y="1876" width="3" height="15" fill="rgb(218,1,10)"/><text x="36.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="35" y="1892" width="1" height="15" fill="rgb(226,208,44)"/><text x="38.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="35" y="1908" width="1" height="15" fill="rgb(223,189,0)"/><text x="38.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="35" y="1924" width="1" height="15" fill="rgb(249,86,47)"/><text x="38.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.11%)</title><rect x="35" y="1940" width="1" height="15" fill="rgb(210,93,45)"/><text x="38.00" y="1950.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.11%)</title><rect x="35" y="1956" width="1" height="15" fill="rgb(214,157,31)"/><text x="38.00" y="1966.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="35" y="1972" width="1" height="15" fill="rgb(216,11,0)"/><text x="38.00" y="1982.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="35" y="1988" width="1" height="15" fill="rgb(224,91,13)"/><text x="38.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.67%)</title><rect x="29" y="1092" width="8" height="15" fill="rgb(234,112,46)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (5 samples, 0.56%)</title><rect x="31" y="1108" width="6" height="15" fill="rgb(228,12,27)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1124" width="6" height="15" fill="rgb(224,220,35)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1140" width="6" height="15" fill="rgb(205,13,16)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1156" width="6" height="15" fill="rgb(223,73,21)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="31" y="1172" width="6" height="15" fill="rgb(235,148,37)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1188" width="6" height="15" fill="rgb(254,11,8)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (5 samples, 0.56%)</title><rect x="31" y="1204" width="6" height="15" fill="rgb(227,177,4)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1220" width="6" height="15" fill="rgb(238,181,14)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1236" width="6" height="15" fill="rgb(238,0,28)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1252" width="6" height="15" fill="rgb(252,17,36)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="31" y="1268" width="6" height="15" fill="rgb(217,124,7)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1284" width="6" height="15" fill="rgb(242,212,28)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (5 samples, 0.56%)</title><rect x="31" y="1300" width="6" height="15" fill="rgb(230,157,24)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1316" width="6" height="15" fill="rgb(225,33,18)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1332" width="6" height="15" fill="rgb(234,212,45)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1348" width="6" height="15" fill="rgb(229,112,16)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="31" y="1364" width="6" height="15" fill="rgb(209,219,41)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1380" width="6" height="15" fill="rgb(224,48,32)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (5 samples, 0.56%)</title><rect x="31" y="1396" width="6" height="15" fill="rgb(244,63,35)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1412" width="6" height="15" fill="rgb(223,41,31)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1428" width="6" height="15" fill="rgb(227,20,49)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.56%)</title><rect x="31" y="1444" width="6" height="15" fill="rgb(243,227,18)"/><text x="34.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.56%)</title><rect x="31" y="1460" width="6" height="15" fill="rgb(229,21,11)"/><text x="34.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="36" y="1476" width="1" height="15" fill="rgb(231,159,7)"/><text x="39.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="36" y="1492" width="1" height="15" fill="rgb(218,28,1)"/><text x="39.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 1.91%)</title><rect x="16" y="340" width="23" height="15" fill="rgb(231,216,48)"/><text x="19.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="356" width="23" height="15" fill="rgb(226,45,10)"/><text x="19.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="372" width="23" height="15" fill="rgb(228,169,49)"/><text x="19.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="388" width="23" height="15" fill="rgb(216,154,4)"/><text x="19.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 1.91%)</title><rect x="16" y="404" width="23" height="15" fill="rgb(232,114,54)"/><text x="19.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="420" width="23" height="15" fill="rgb(233,74,49)"/><text x="19.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (17 samples, 1.91%)</title><rect x="16" y="436" width="23" height="15" fill="rgb(244,26,27)"/><text x="19.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="452" width="23" height="15" fill="rgb(231,125,17)"/><text x="19.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.91%)</title><rect x="16" y="468" width="23" height="15" fill="rgb(251,214,39)"/><text x="19.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="484" width="11" height="15" fill="rgb(213,20,35)"/><text x="31.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.90%)</title><rect x="28" y="500" width="11" height="15" fill="rgb(240,198,7)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="516" width="11" height="15" fill="rgb(241,199,25)"/><text x="31.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (8 samples, 0.90%)</title><rect x="28" y="532" width="11" height="15" fill="rgb(218,148,8)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="548" width="11" height="15" fill="rgb(214,173,2)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="564" width="11" height="15" fill="rgb(218,59,26)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="580" width="11" height="15" fill="rgb(242,82,31)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.90%)</title><rect x="28" y="596" width="11" height="15" fill="rgb(247,63,10)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="612" width="11" height="15" fill="rgb(226,65,3)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (8 samples, 0.90%)</title><rect x="28" y="628" width="11" height="15" fill="rgb(242,151,46)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="644" width="11" height="15" fill="rgb(245,107,46)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="660" width="11" height="15" fill="rgb(243,33,3)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="676" width="11" height="15" fill="rgb(249,165,23)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.90%)</title><rect x="28" y="692" width="11" height="15" fill="rgb(227,133,37)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="708" width="11" height="15" fill="rgb(222,77,48)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (8 samples, 0.90%)</title><rect x="28" y="724" width="11" height="15" fill="rgb(243,150,37)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="740" width="11" height="15" fill="rgb(226,165,0)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.90%)</title><rect x="28" y="756" width="11" height="15" fill="rgb(218,175,9)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="772" width="10" height="15" fill="rgb(247,122,31)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="29" y="788" width="10" height="15" fill="rgb(211,226,31)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="804" width="10" height="15" fill="rgb(243,107,38)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (7 samples, 0.79%)</title><rect x="29" y="820" width="10" height="15" fill="rgb(244,114,2)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="836" width="10" height="15" fill="rgb(251,223,14)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="852" width="10" height="15" fill="rgb(234,52,30)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="868" width="10" height="15" fill="rgb(228,85,47)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="29" y="884" width="10" height="15" fill="rgb(230,93,11)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="900" width="10" height="15" fill="rgb(221,65,4)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (7 samples, 0.79%)</title><rect x="29" y="916" width="10" height="15" fill="rgb(226,54,7)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="932" width="10" height="15" fill="rgb(246,180,5)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="948" width="10" height="15" fill="rgb(209,121,31)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="964" width="10" height="15" fill="rgb(213,101,16)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="29" y="980" width="10" height="15" fill="rgb(235,100,6)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="996" width="10" height="15" fill="rgb(208,96,11)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (7 samples, 0.79%)</title><rect x="29" y="1012" width="10" height="15" fill="rgb(222,123,48)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="1028" width="10" height="15" fill="rgb(207,194,40)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="1044" width="10" height="15" fill="rgb(248,109,40)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="29" y="1060" width="10" height="15" fill="rgb(209,211,44)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="29" y="1076" width="10" height="15" fill="rgb(225,75,42)"/><text x="32.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(230,0,7)"/><text x="40.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(233,88,26)"/><text x="40.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (1 samples, 0.11%)</title><rect x="39" y="484" width="1" height="15" fill="rgb(251,229,22)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="500" width="1" height="15" fill="rgb(226,53,34)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="516" width="1" height="15" fill="rgb(254,146,20)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="532" width="1" height="15" fill="rgb(250,61,34)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="548" width="1" height="15" fill="rgb(250,45,51)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="564" width="1" height="15" fill="rgb(242,221,5)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (1 samples, 0.11%)</title><rect x="39" y="580" width="1" height="15" fill="rgb(240,55,41)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="596" width="1" height="15" fill="rgb(212,30,24)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="612" width="1" height="15" fill="rgb(253,218,14)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="628" width="1" height="15" fill="rgb(206,165,29)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="644" width="1" height="15" fill="rgb(213,168,0)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="660" width="1" height="15" fill="rgb(243,126,28)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py) (1 samples, 0.11%)</title><rect x="39" y="676" width="1" height="15" fill="rgb(242,100,13)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="692" width="1" height="15" fill="rgb(239,110,24)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="708" width="1" height="15" fill="rgb(242,20,17)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="724" width="1" height="15" fill="rgb(220,196,16)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="740" width="1" height="15" fill="rgb(210,180,7)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="756" width="1" height="15" fill="rgb(242,25,0)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py) (1 samples, 0.11%)</title><rect x="39" y="772" width="1" height="15" fill="rgb(248,44,28)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="788" width="1" height="15" fill="rgb(224,182,50)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="804" width="1" height="15" fill="rgb(251,87,16)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="820" width="1" height="15" fill="rgb(222,25,39)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="836" width="1" height="15" fill="rgb(237,42,29)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="852" width="1" height="15" fill="rgb(215,140,13)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py) (1 samples, 0.11%)</title><rect x="39" y="868" width="1" height="15" fill="rgb(254,14,41)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="884" width="1" height="15" fill="rgb(229,43,16)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="900" width="1" height="15" fill="rgb(236,34,41)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="916" width="1" height="15" fill="rgb(219,66,22)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="932" width="1" height="15" fill="rgb(250,85,21)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="948" width="1" height="15" fill="rgb(244,29,50)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="964" width="1" height="15" fill="rgb(237,95,50)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="980" width="1" height="15" fill="rgb(209,90,40)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="996" width="1" height="15" fill="rgb(206,181,36)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py) (1 samples, 0.11%)</title><rect x="39" y="1012" width="1" height="15" fill="rgb(254,132,40)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1028" width="1" height="15" fill="rgb(239,32,24)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1044" width="1" height="15" fill="rgb(236,225,10)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1060" width="1" height="15" fill="rgb(246,20,39)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="1076" width="1" height="15" fill="rgb(222,136,46)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1092" width="1" height="15" fill="rgb(241,59,52)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py) (1 samples, 0.11%)</title><rect x="39" y="1108" width="1" height="15" fill="rgb(237,47,28)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1124" width="1" height="15" fill="rgb(229,50,25)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1140" width="1" height="15" fill="rgb(210,57,22)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1156" width="1" height="15" fill="rgb(248,44,52)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="39" y="1172" width="1" height="15" fill="rgb(238,102,4)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="39" y="1188" width="1" height="15" fill="rgb(244,51,32)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gactions.py) (1 samples, 0.11%)</title><rect x="39" y="1204" width="1" height="15" fill="rgb(228,182,35)"/><text x="42.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.11%)</title><rect x="40" y="580" width="1" height="15" fill="rgb(234,78,37)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="596" width="1" height="15" fill="rgb(236,41,50)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="612" width="1" height="15" fill="rgb(233,165,8)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="628" width="1" height="15" fill="rgb(243,141,25)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="40" y="644" width="1" height="15" fill="rgb(222,28,30)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="660" width="1" height="15" fill="rgb(238,65,29)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="40" y="676" width="1" height="15" fill="rgb(237,162,51)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="692" width="1" height="15" fill="rgb(251,39,11)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="708" width="1" height="15" fill="rgb(248,69,38)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="724" width="1" height="15" fill="rgb(213,63,33)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="40" y="740" width="1" height="15" fill="rgb(234,125,7)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="756" width="1" height="15" fill="rgb(231,22,28)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.11%)</title><rect x="40" y="772" width="1" height="15" fill="rgb(209,189,3)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="788" width="1" height="15" fill="rgb(229,203,48)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="804" width="1" height="15" fill="rgb(241,217,18)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="820" width="1" height="15" fill="rgb(222,157,44)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="40" y="836" width="1" height="15" fill="rgb(230,144,53)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="40" y="852" width="1" height="15" fill="rgb(249,202,15)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py) (1 samples, 0.11%)</title><rect x="40" y="868" width="1" height="15" fill="rgb(232,149,33)"/><text x="43.00" y="878.50"></text></g><g><title>RawConfigParser (configparser.py) (1 samples, 0.11%)</title><rect x="40" y="884" width="1" height="15" fill="rgb(250,210,46)"/><text x="43.00" y="894.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="40" y="900" width="1" height="15" fill="rgb(237,174,17)"/><text x="43.00" y="910.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="40" y="916" width="1" height="15" fill="rgb(239,38,0)"/><text x="43.00" y="926.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="40" y="932" width="1" height="15" fill="rgb(241,175,8)"/><text x="43.00" y="942.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="40" y="948" width="1" height="15" fill="rgb(249,197,6)"/><text x="43.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="40" y="964" width="1" height="15" fill="rgb(208,215,6)"/><text x="43.00" y="974.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="40" y="980" width="1" height="15" fill="rgb(245,83,48)"/><text x="43.00" y="990.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.11%)</title><rect x="40" y="996" width="1" height="15" fill="rgb(242,226,23)"/><text x="43.00" y="1006.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.11%)</title><rect x="40" y="1012" width="1" height="15" fill="rgb(224,8,5)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="68" width="33" height="15" fill="rgb(246,45,11)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="84" width="33" height="15" fill="rgb(236,128,53)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="100" width="33" height="15" fill="rgb(247,176,23)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (25 samples, 2.81%)</title><rect x="10" y="116" width="33" height="15" fill="rgb(219,81,42)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="132" width="33" height="15" fill="rgb(242,127,7)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py) (25 samples, 2.81%)</title><rect x="10" y="148" width="33" height="15" fill="rgb(235,198,13)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="164" width="33" height="15" fill="rgb(214,11,28)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 2.81%)</title><rect x="10" y="180" width="33" height="15" fill="rgb(244,166,31)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="196" width="27" height="15" fill="rgb(228,212,33)"/><text x="19.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 2.24%)</title><rect x="16" y="212" width="27" height="15" fill="rgb(243,82,50)"/><text x="19.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="228" width="27" height="15" fill="rgb(254,86,24)"/><text x="19.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (20 samples, 2.24%)</title><rect x="16" y="244" width="27" height="15" fill="rgb(244,156,4)"/><text x="19.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="260" width="27" height="15" fill="rgb(251,137,19)"/><text x="19.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="276" width="27" height="15" fill="rgb(210,117,50)"/><text x="19.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="292" width="27" height="15" fill="rgb(215,15,30)"/><text x="19.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 2.24%)</title><rect x="16" y="308" width="27" height="15" fill="rgb(218,183,35)"/><text x="19.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.24%)</title><rect x="16" y="324" width="27" height="15" fill="rgb(238,107,15)"/><text x="19.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.34%)</title><rect x="39" y="340" width="4" height="15" fill="rgb(223,47,0)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="356" width="4" height="15" fill="rgb(227,210,2)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="372" width="4" height="15" fill="rgb(213,43,28)"/><text x="42.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="388" width="4" height="15" fill="rgb(244,222,47)"/><text x="42.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="404" width="4" height="15" fill="rgb(238,48,0)"/><text x="42.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="420" width="4" height="15" fill="rgb(254,197,7)"/><text x="42.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="436" width="4" height="15" fill="rgb(251,82,29)"/><text x="42.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="39" y="452" width="4" height="15" fill="rgb(218,24,28)"/><text x="42.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="39" y="468" width="4" height="15" fill="rgb(219,105,7)"/><text x="42.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.22%)</title><rect x="40" y="484" width="3" height="15" fill="rgb(211,200,11)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="40" y="500" width="3" height="15" fill="rgb(241,19,33)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="40" y="516" width="3" height="15" fill="rgb(241,32,8)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="40" y="532" width="3" height="15" fill="rgb(231,121,31)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="40" y="548" width="3" height="15" fill="rgb(223,186,33)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="40" y="564" width="3" height="15" fill="rgb(254,48,41)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="41" y="580" width="2" height="15" fill="rgb(237,154,41)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="596" width="2" height="15" fill="rgb(206,31,43)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="612" width="2" height="15" fill="rgb(253,16,53)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="628" width="2" height="15" fill="rgb(233,177,29)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="644" width="2" height="15" fill="rgb(247,225,12)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="660" width="2" height="15" fill="rgb(231,203,30)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="41" y="676" width="2" height="15" fill="rgb(212,203,8)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="692" width="2" height="15" fill="rgb(228,128,38)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="708" width="2" height="15" fill="rgb(245,12,36)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="724" width="2" height="15" fill="rgb(236,65,33)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="740" width="2" height="15" fill="rgb(225,208,21)"/><text x="44.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="756" width="2" height="15" fill="rgb(227,69,17)"/><text x="44.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="41" y="772" width="2" height="15" fill="rgb(220,181,25)"/><text x="44.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="788" width="2" height="15" fill="rgb(252,173,15)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="804" width="2" height="15" fill="rgb(224,187,38)"/><text x="44.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="820" width="2" height="15" fill="rgb(226,148,39)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="836" width="2" height="15" fill="rgb(241,116,28)"/><text x="44.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="852" width="2" height="15" fill="rgb(247,104,36)"/><text x="44.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="868" width="2" height="15" fill="rgb(251,115,39)"/><text x="44.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="884" width="2" height="15" fill="rgb(227,207,40)"/><text x="44.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.11%)</title><rect x="41" y="900" width="2" height="15" fill="rgb(222,162,46)"/><text x="44.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="916" width="2" height="15" fill="rgb(246,10,22)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="932" width="2" height="15" fill="rgb(235,35,48)"/><text x="44.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="948" width="2" height="15" fill="rgb(234,188,0)"/><text x="44.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="964" width="2" height="15" fill="rgb(242,168,4)"/><text x="44.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="980" width="2" height="15" fill="rgb(248,139,45)"/><text x="44.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.11%)</title><rect x="41" y="996" width="2" height="15" fill="rgb(228,157,7)"/><text x="44.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="1012" width="2" height="15" fill="rgb(211,118,17)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="1028" width="2" height="15" fill="rgb(233,146,12)"/><text x="44.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="41" y="1044" width="2" height="15" fill="rgb(219,130,23)"/><text x="44.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="1060" width="2" height="15" fill="rgb(238,65,43)"/><text x="44.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="1076" width="2" height="15" fill="rgb(237,132,8)"/><text x="44.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="41" y="1092" width="2" height="15" fill="rgb(250,194,17)"/><text x="44.00" y="1102.50"></text></g><g><title>0x7ff493b4fff9 (?) (1 samples, 0.11%)</title><rect x="49" y="212" width="2" height="15" fill="rgb(236,2,36)"/><text x="52.00" y="222.50"></text></g><g><title>0x7ff493b4aef6 (?) (1 samples, 0.11%)</title><rect x="49" y="228" width="2" height="15" fill="rgb(235,52,11)"/><text x="52.00" y="238.50"></text></g><g><title>0x7ff493b3f962 (?) (1 samples, 0.11%)</title><rect x="49" y="244" width="2" height="15" fill="rgb(243,195,35)"/><text x="52.00" y="254.50"></text></g><g><title>0x7ff493b737a7 (?) (1 samples, 0.11%)</title><rect x="49" y="260" width="2" height="15" fill="rgb(218,112,14)"/><text x="52.00" y="270.50"></text></g><g><title>0x7ff493b73379 (?) (1 samples, 0.11%)</title><rect x="49" y="276" width="2" height="15" fill="rgb(210,225,37)"/><text x="52.00" y="286.50"></text></g><g><title>0x7ff493fd18b8 (?) (1 samples, 0.11%)</title><rect x="49" y="292" width="2" height="15" fill="rgb(253,31,41)"/><text x="52.00" y="302.50"></text></g><g><title>0x7ff493fcfc7f (?) (1 samples, 0.11%)</title><rect x="49" y="308" width="2" height="15" fill="rgb(234,118,6)"/><text x="52.00" y="318.50"></text></g><g><title>0x7ff493fe299c (?) (1 samples, 0.11%)</title><rect x="49" y="324" width="2" height="15" fill="rgb(208,131,8)"/><text x="52.00" y="334.50"></text></g><g><title>0x7ff493ce7bef (?) (1 samples, 0.11%)</title><rect x="49" y="340" width="2" height="15" fill="rgb(250,60,46)"/><text x="52.00" y="350.50"></text></g><g><title>0x7ff4d3b1f991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="133" y="356" width="1" height="15" fill="rgb(208,187,34)"/><text x="136.00" y="366.50"></text></g><g><title>0x7ff4c35ec7a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="145" y="388" width="1" height="15" fill="rgb(219,226,11)"/><text x="148.00" y="398.50"></text></g><g><title>0x7ff4d3b1f90e (libc-2.29.so) (2 samples, 0.22%)</title><rect x="146" y="388" width="3" height="15" fill="rgb(220,88,24)"/><text x="149.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="149" y="388" width="2" height="15" fill="rgb(250,13,37)"/><text x="152.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.91%)</title><rect x="134" y="356" width="23" height="15" fill="rgb(205,1,37)"/><text x="137.00" y="366.50">o..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.12%)</title><rect x="143" y="372" width="14" height="15" fill="rgb(212,210,18)"/><text x="146.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.45%)</title><rect x="151" y="388" width="6" height="15" fill="rgb(230,30,4)"/><text x="154.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.45%)</title><rect x="151" y="404" width="6" height="15" fill="rgb(217,100,12)"/><text x="154.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="157" y="356" width="1" height="15" fill="rgb(235,134,52)"/><text x="160.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="157" y="372" width="1" height="15" fill="rgb(237,187,35)"/><text x="160.00" y="382.50"></text></g><g><title>0x7ff4d3b1f906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="167" y="372" width="1" height="15" fill="rgb(243,97,36)"/><text x="170.00" y="382.50"></text></g><g><title>0x7ff4d3b3fdbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="168" y="372" width="2" height="15" fill="rgb(246,107,48)"/><text x="171.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="170" y="372" width="2" height="15" fill="rgb(206,53,36)"/><text x="173.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.80%)</title><rect x="158" y="356" width="21" height="15" fill="rgb(242,100,13)"/><text x="161.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="172" y="372" width="7" height="15" fill="rgb(220,133,33)"/><text x="175.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.56%)</title><rect x="172" y="388" width="7" height="15" fill="rgb(236,66,25)"/><text x="175.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="179" y="356" width="1" height="15" fill="rgb(223,183,36)"/><text x="182.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (273 samples, 30.64%)</title><rect x="51" y="340" width="361" height="15" fill="rgb(216,14,31)"/><text x="54.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (..</text></g><g><title>tanhf32x (libm-2.29.so) (175 samples, 19.64%)</title><rect x="180" y="356" width="232" height="15" fill="rgb(231,206,4)"/><text x="183.00" y="366.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (127 samples, 14.25%)</title><rect x="244" y="372" width="168" height="15" fill="rgb(244,184,13)"/><text x="247.00" y="382.50">expm1f64 (libm-2.29.s..</text></g><g><title>0x7ff4d3b20d9f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="421" y="388" width="2" height="15" fill="rgb(208,14,54)"/><text x="424.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (282 samples, 31.65%)</title><rect x="51" y="260" width="373" height="15" fill="rgb(240,196,11)"/><text x="54.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (282 samples, 31.65%)</title><rect x="51" y="276" width="373" height="15" fill="rgb(247,12,7)"/><text x="54.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (282 samples, 31.65%)</title><rect x="51" y="292" width="373" height="15" fill="rgb(215,166,43)"/><text x="54.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (282 samples, 31.65%)</title><rect x="51" y="308" width="373" height="15" fill="rgb(246,115,8)"/><text x="54.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (282 samples, 31.65%)</title><rect x="51" y="324" width="373" height="15" fill="rgb(237,64,35)"/><text x="54.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.01%)</title><rect x="412" y="340" width="12" height="15" fill="rgb(239,204,43)"/><text x="415.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.90%)</title><rect x="413" y="356" width="11" height="15" fill="rgb(246,114,15)"/><text x="416.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.90%)</title><rect x="413" y="372" width="11" height="15" fill="rgb(232,106,28)"/><text x="416.00" y="382.50"></text></g><g><title>0x7ff4d3b213ae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="423" y="388" width="1" height="15" fill="rgb(213,228,24)"/><text x="426.00" y="398.50"></text></g><g><title>0x7ff493b17870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="428" y="276" width="1" height="15" fill="rgb(231,113,39)"/><text x="431.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="424" y="260" width="9" height="15" fill="rgb(247,103,47)"/><text x="427.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="429" y="276" width="4" height="15" fill="rgb(211,23,40)"/><text x="432.00" y="286.50"></text></g><g><title>0x7ff4d3b1fd07 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="433" y="292" width="3" height="15" fill="rgb(219,168,6)"/><text x="436.00" y="302.50"></text></g><g><title>profile_ort (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (298 samples, 33.45%)</title><rect x="43" y="68" width="394" height="15" fill="rgb(220,103,35)"/><text x="46.00" y="78.50">profile_ort (bench_SVC_sigmoid_m_cl_probabilityTrue_k..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (298 samples, 33.45%)</title><rect x="43" y="84" width="394" height="15" fill="rgb(213,145,29)"/><text x="46.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (298 samples, 33.45%)</title><rect x="43" y="100" width="394" height="15" fill="rgb(222,105,21)"/><text x="46.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kerne..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 33.11%)</title><rect x="47" y="116" width="390" height="15" fill="rgb(222,18,40)"/><text x="50.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 33.11%)</title><rect x="47" y="132" width="390" height="15" fill="rgb(252,9,12)"/><text x="50.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (295 samples, 33.11%)</title><rect x="47" y="148" width="390" height="15" fill="rgb(224,128,16)"/><text x="50.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (295 samples, 33.11%)</title><rect x="47" y="164" width="390" height="15" fill="rgb(223,25,40)"/><text x="50.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (294 samples, 33.00%)</title><rect x="48" y="180" width="389" height="15" fill="rgb(250,69,50)"/><text x="51.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (294 samples, 33.00%)</title><rect x="48" y="196" width="389" height="15" fill="rgb(205,100,11)"/><text x="51.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 32.77%)</title><rect x="51" y="212" width="386" height="15" fill="rgb(254,76,15)"/><text x="54.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 32.77%)</title><rect x="51" y="228" width="386" height="15" fill="rgb(231,132,17)"/><text x="54.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (292 samples, 32.77%)</title><rect x="51" y="244" width="386" height="15" fill="rgb(216,71,6)"/><text x="54.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="433" y="260" width="4" height="15" fill="rgb(223,180,0)"/><text x="436.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="433" y="276" width="4" height="15" fill="rgb(228,105,53)"/><text x="436.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="436" y="292" width="1" height="15" fill="rgb(251,149,44)"/><text x="439.00" y="302.50"></text></g><g><title>0x7ff493b170f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="436" y="308" width="1" height="15" fill="rgb(234,179,24)"/><text x="439.00" y="318.50"></text></g><g><title>0x7ff494c8ec29 (?) (1 samples, 0.11%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(247,49,9)"/><text x="440.00" y="254.50"></text></g><g><title>0x7ff494c95d9e (?) (1 samples, 0.11%)</title><rect x="437" y="260" width="2" height="15" fill="rgb(226,193,27)"/><text x="440.00" y="270.50"></text></g><g><title>0x7ff494c95c56 (?) (1 samples, 0.11%)</title><rect x="437" y="276" width="2" height="15" fill="rgb(217,10,51)"/><text x="440.00" y="286.50"></text></g><g><title>0x7ff494c9bac7 (?) (1 samples, 0.11%)</title><rect x="437" y="292" width="2" height="15" fill="rgb(238,135,28)"/><text x="440.00" y="302.50"></text></g><g><title>0x7ff494c9ade5 (?) (1 samples, 0.11%)</title><rect x="437" y="308" width="2" height="15" fill="rgb(247,109,44)"/><text x="440.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="439" y="244" width="1" height="15" fill="rgb(233,120,47)"/><text x="442.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.11%)</title><rect x="439" y="260" width="1" height="15" fill="rgb(213,156,19)"/><text x="442.00" y="270.50"></text></g><g><title>0x7ff494c7e440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="472" y="468" width="1" height="15" fill="rgb(236,197,3)"/><text x="475.00" y="478.50"></text></g><g><title>0x7ff494c7e2b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.34%)</title><rect x="490" y="484" width="4" height="15" fill="rgb(253,88,50)"/><text x="493.00" y="494.50"></text></g><g><title>tanhf32x (libm-2.29.so) (202 samples, 22.67%)</title><rect x="494" y="484" width="268" height="15" fill="rgb(221,226,45)"/><text x="497.00" y="494.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (148 samples, 16.61%)</title><rect x="566" y="500" width="196" height="15" fill="rgb(217,93,19)"/><text x="569.00" y="510.50">expm1f64 (libm-2.29.so)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (241 samples, 27.05%)</title><rect x="473" y="468" width="319" height="15" fill="rgb(227,154,44)"/><text x="476.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (23 samples, 2.58%)</title><rect x="762" y="484" width="30" height="15" fill="rgb(231,128,39)"/><text x="765.00" y="494.50">ve..</text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (2 samples, 0.22%)</title><rect x="792" y="468" width="3" height="15" fill="rgb(231,124,46)"/><text x="795.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.11%)</title><rect x="794" y="484" width="1" height="15" fill="rgb(217,91,13)"/><text x="797.00" y="494.50"></text></g><g><title>0x7ff4d3b1f92c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="796" y="484" width="1" height="15" fill="rgb(212,17,27)"/><text x="799.00" y="494.50"></text></g><g><title>0x7ff4d3b1fa4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="797" y="484" width="2" height="15" fill="rgb(210,120,38)"/><text x="800.00" y="494.50"></text></g><g><title>0x7ff4d3b3fd50 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="799" y="484" width="2" height="15" fill="rgb(247,156,32)"/><text x="802.00" y="494.50"></text></g><g><title>0x7ff494c7e2d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="801" y="532" width="2" height="15" fill="rgb(251,61,35)"/><text x="804.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (4 samples, 0.45%)</title><rect x="801" y="484" width="6" height="15" fill="rgb(254,76,25)"/><text x="804.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (4 samples, 0.45%)</title><rect x="801" y="500" width="6" height="15" fill="rgb(225,6,13)"/><text x="804.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (4 samples, 0.45%)</title><rect x="801" y="516" width="6" height="15" fill="rgb(230,57,45)"/><text x="804.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.34%)</title><rect x="803" y="532" width="4" height="15" fill="rgb(243,206,43)"/><text x="806.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.34%)</title><rect x="803" y="548" width="4" height="15" fill="rgb(219,102,37)"/><text x="806.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (10 samples, 1.12%)</title><rect x="795" y="468" width="13" height="15" fill="rgb(232,131,50)"/><text x="798.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="807" y="484" width="1" height="15" fill="rgb(216,108,51)"/><text x="810.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="807" y="500" width="1" height="15" fill="rgb(213,82,50)"/><text x="810.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="807" y="516" width="1" height="15" fill="rgb(227,111,32)"/><text x="810.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="807" y="532" width="1" height="15" fill="rgb(219,79,47)"/><text x="810.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="807" y="548" width="1" height="15" fill="rgb(233,166,32)"/><text x="810.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="807" y="564" width="1" height="15" fill="rgb(218,204,17)"/><text x="810.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="807" y="580" width="1" height="15" fill="rgb(254,177,12)"/><text x="810.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="807" y="596" width="1" height="15" fill="rgb(221,205,9)"/><text x="810.00" y="606.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h) (2 samples, 0.22%)</title><rect x="811" y="484" width="2" height="15" fill="rgb(230,170,36)"/><text x="814.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h) (2 samples, 0.22%)</title><rect x="811" y="500" width="2" height="15" fill="rgb(244,199,24)"/><text x="814.00" y="510.50"></text></g><g><title>0x7ff4d3b1f965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="813" y="516" width="2" height="15" fill="rgb(224,125,2)"/><text x="816.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (6 samples, 0.67%)</title><rect x="808" y="468" width="8" height="15" fill="rgb(228,227,12)"/><text x="811.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (2 samples, 0.22%)</title><rect x="813" y="484" width="3" height="15" fill="rgb(219,187,14)"/><text x="816.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (2 samples, 0.22%)</title><rect x="813" y="500" width="3" height="15" fill="rgb(207,172,18)"/><text x="816.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="815" y="516" width="1" height="15" fill="rgb(222,198,22)"/><text x="818.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="815" y="532" width="1" height="15" fill="rgb(217,135,2)"/><text x="818.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="815" y="548" width="1" height="15" fill="rgb(245,119,30)"/><text x="818.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.11%)</title><rect x="815" y="564" width="1" height="15" fill="rgb(250,115,0)"/><text x="818.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="815" y="580" width="1" height="15" fill="rgb(212,175,9)"/><text x="818.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="815" y="596" width="1" height="15" fill="rgb(242,115,52)"/><text x="818.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="815" y="612" width="1" height="15" fill="rgb(207,62,32)"/><text x="818.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.11%)</title><rect x="815" y="628" width="1" height="15" fill="rgb(251,53,14)"/><text x="818.00" y="638.50"></text></g><g><title>0x7ff494c7e2a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="829" y="516" width="2" height="15" fill="rgb(237,182,32)"/><text x="832.00" y="526.50"></text></g><g><title>0x7ff4d3b1f906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="831" y="516" width="1" height="15" fill="rgb(208,71,23)"/><text x="834.00" y="526.50"></text></g><g><title>0x7ff4d3b1f96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="832" y="516" width="1" height="15" fill="rgb(247,127,51)"/><text x="835.00" y="526.50"></text></g><g><title>0x7ff4d3b1f991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="833" y="516" width="2" height="15" fill="rgb(208,105,30)"/><text x="836.00" y="526.50"></text></g><g><title>0x7ff4d3b3fd5f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="835" y="516" width="1" height="15" fill="rgb(214,97,20)"/><text x="838.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (8 samples, 0.90%)</title><rect x="828" y="500" width="11" height="15" fill="rgb(217,161,40)"/><text x="831.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.22%)</title><rect x="836" y="516" width="3" height="15" fill="rgb(205,47,3)"/><text x="839.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.22%)</title><rect x="836" y="532" width="3" height="15" fill="rgb(236,54,10)"/><text x="839.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.22%)</title><rect x="836" y="548" width="3" height="15" fill="rgb(248,10,27)"/><text x="839.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="836" y="564" width="3" height="15" fill="rgb(242,147,25)"/><text x="839.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="836" y="580" width="3" height="15" fill="rgb(233,66,51)"/><text x="839.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (18 samples, 2.02%)</title><rect x="816" y="468" width="24" height="15" fill="rgb(227,136,54)"/><text x="819.00" y="478.50">s..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (18 samples, 2.02%)</title><rect x="816" y="484" width="24" height="15" fill="rgb(232,176,22)"/><text x="819.00" y="494.50">m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.11%)</title><rect x="839" y="500" width="1" height="15" fill="rgb(249,120,32)"/><text x="842.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (1 samples, 0.11%)</title><rect x="839" y="516" width="1" height="15" fill="rgb(228,61,0)"/><text x="842.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="840" y="468" width="1" height="15" fill="rgb(241,215,42)"/><text x="843.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.11%)</title><rect x="840" y="484" width="1" height="15" fill="rgb(253,63,16)"/><text x="843.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.11%)</title><rect x="840" y="500" width="1" height="15" fill="rgb(252,37,6)"/><text x="843.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="840" y="516" width="1" height="15" fill="rgb(215,173,40)"/><text x="843.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="841" y="468" width="2" height="15" fill="rgb(209,39,2)"/><text x="844.00" y="478.50"></text></g><g><title>0x7ff4d3b1f991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="841" y="484" width="2" height="15" fill="rgb(205,108,5)"/><text x="844.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (307 samples, 34.46%)</title><rect x="437" y="68" width="407" height="15" fill="rgb(226,163,21)"/><text x="440.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_m_cl_probabilityTrue_ke..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (307 samples, 34.46%)</title><rect x="437" y="84" width="407" height="15" fill="rgb(248,68,11)"/><text x="440.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_k..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (307 samples, 34.46%)</title><rect x="437" y="100" width="407" height="15" fill="rgb(217,52,28)"/><text x="440.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernels..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (307 samples, 34.46%)</title><rect x="437" y="116" width="407" height="15" fill="rgb(212,65,25)"/><text x="440.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (307 samples, 34.46%)</title><rect x="437" y="132" width="407" height="15" fill="rgb(240,132,9)"/><text x="440.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (307 samples, 34.46%)</title><rect x="437" y="148" width="407" height="15" fill="rgb(224,122,50)"/><text x="440.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (307 samples, 34.46%)</title><rect x="437" y="164" width="407" height="15" fill="rgb(244,204,28)"/><text x="440.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (307 samples, 34.46%)</title><rect x="437" y="180" width="407" height="15" fill="rgb(247,55,51)"/><text x="440.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (307 samples, 34.46%)</title><rect x="437" y="196" width="407" height="15" fill="rgb(228,112,0)"/><text x="440.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (307 samples, 34.46%)</title><rect x="437" y="212" width="407" height="15" fill="rgb(212,221,36)"/><text x="440.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (307 samples, 34.46%)</title><rect x="437" y="228" width="407" height="15" fill="rgb(215,64,14)"/><text x="440.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (305 samples, 34.23%)</title><rect x="440" y="244" width="404" height="15" fill="rgb(251,105,18)"/><text x="443.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (305 samples, 34.23%)</title><rect x="440" y="260" width="404" height="15" fill="rgb(208,142,29)"/><text x="443.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (305 samples, 34.23%)</title><rect x="440" y="276" width="404" height="15" fill="rgb(206,74,54)"/><text x="443.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (305 samples, 34.23%)</title><rect x="440" y="292" width="404" height="15" fill="rgb(211,165,13)"/><text x="443.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierF..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (305 samples, 34.23%)</title><rect x="440" y="308" width="404" height="15" fill="rgb(244,190,34)"/><text x="443.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierF..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (305 samples, 34.23%)</title><rect x="440" y="324" width="404" height="15" fill="rgb(215,87,6)"/><text x="443.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple, R..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (305 samples, 34.23%)</title><rect x="440" y="340" width="404" height="15" fill="rgb(244,204,31)"/><text x="443.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (305 samples, 34.23%)</title><rect x="440" y="356" width="404" height="15" fill="rgb(205,152,1)"/><text x="443.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (305 samples, 34.23%)</title><rect x="440" y="372" width="404" height="15" fill="rgb(252,86,26)"/><text x="443.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (305 samples, 34.23%)</title><rect x="440" y="388" width="404" height="15" fill="rgb(228,102,50)"/><text x="443.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (305 samples, 34.23%)</title><rect x="440" y="404" width="404" height="15" fill="rgb(232,75,14)"/><text x="443.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (305 samples, 34.23%)</title><rect x="440" y="420" width="404" height="15" fill="rgb(233,54,16)"/><text x="443.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (305 samples, 34.23%)</title><rect x="440" y="436" width="404" height="15" fill="rgb(219,193,14)"/><text x="443.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (pybi..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (305 samples, 34.23%)</title><rect x="440" y="452" width="404" height="15" fill="rgb(208,119,4)"/><text x="443.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodic..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.11%)</title><rect x="843" y="468" width="1" height="15" fill="rgb(224,136,34)"/><text x="846.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (1 samples, 0.11%)</title><rect x="843" y="484" width="1" height="15" fill="rgb(232,1,53)"/><text x="846.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (1 samples, 0.11%)</title><rect x="843" y="500" width="1" height="15" fill="rgb(226,44,26)"/><text x="846.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.11%)</title><rect x="843" y="516" width="1" height="15" fill="rgb(241,196,13)"/><text x="846.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.11%)</title><rect x="843" y="532" width="1" height="15" fill="rgb(254,115,46)"/><text x="846.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.11%)</title><rect x="843" y="548" width="1" height="15" fill="rgb(225,176,7)"/><text x="846.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="843" y="564" width="1" height="15" fill="rgb(206,129,9)"/><text x="846.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="843" y="580" width="1" height="15" fill="rgb(223,34,54)"/><text x="846.00" y="590.50"></text></g><g><title>0x7ff4d3b1f961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="862" y="244" width="2" height="15" fill="rgb(210,219,50)"/><text x="865.00" y="254.50"></text></g><g><title>0x7ff4d3b1fbe4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="864" y="244" width="1" height="15" fill="rgb(241,121,5)"/><text x="867.00" y="254.50"></text></g><g><title>0x7ff4d3b1fd07 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="865" y="244" width="3" height="15" fill="rgb(217,60,6)"/><text x="868.00" y="254.50"></text></g><g><title>0x7ff4d3cf1c5a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="868" y="260" width="1" height="15" fill="rgb(239,190,16)"/><text x="871.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.22%)</title><rect x="868" y="244" width="2" height="15" fill="rgb(247,7,49)"/><text x="871.00" y="254.50"></text></g><g><title>0x7ff4d3cf1c7b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="869" y="260" width="1" height="15" fill="rgb(232,123,15)"/><text x="872.00" y="270.50"></text></g><g><title>0x7ff4d3b20c13 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="877" y="260" width="1" height="15" fill="rgb(251,56,13)"/><text x="880.00" y="270.50"></text></g><g><title>0x7ff4d3b20c38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="878" y="260" width="2" height="15" fill="rgb(205,115,30)"/><text x="881.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.01%)</title><rect x="870" y="244" width="12" height="15" fill="rgb(207,78,13)"/><text x="873.00" y="254.50"></text></g><g><title>0x7ff4d3b2100a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="880" y="260" width="2" height="15" fill="rgb(253,70,37)"/><text x="883.00" y="270.50"></text></g><g><title>0x7ff4d3b1fbd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="905" y="260" width="1" height="15" fill="rgb(218,80,32)"/><text x="908.00" y="270.50"></text></g><g><title>0x7ff4ae5f16b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="914" y="276" width="1" height="15" fill="rgb(254,138,44)"/><text x="917.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.36%)</title><rect x="906" y="260" width="28" height="15" fill="rgb(223,212,30)"/><text x="909.00" y="270.50">s..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.57%)</title><rect x="915" y="276" width="19" height="15" fill="rgb(242,174,22)"/><text x="918.00" y="286.50"></text></g><g><title>0x7ff4ae60e553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (253 samples, 28.40%)</title><rect x="844" y="196" width="335" height="15" fill="rgb(244,112,26)"/><text x="847.00" y="206.50">0x7ff4ae60e553 (sklearn/svm/_libsvm.cpython-3..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (253 samples, 28.40%)</title><rect x="844" y="212" width="335" height="15" fill="rgb(221,205,54)"/><text x="847.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm.cpyth..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (253 samples, 28.40%)</title><rect x="844" y="228" width="335" height="15" fill="rgb(244,88,27)"/><text x="847.00" y="238.50">svm_predict_probability (sklearn/svm/_libsvm...</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (224 samples, 25.14%)</title><rect x="882" y="244" width="297" height="15" fill="rgb(241,32,21)"/><text x="885.00" y="254.50">svm_predict_values (sklearn/svm/_libsvm..</text></g><g><title>tanhf32x (libm-2.29.so) (185 samples, 20.76%)</title><rect x="934" y="260" width="245" height="15" fill="rgb(208,73,15)"/><text x="937.00" y="270.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (123 samples, 13.80%)</title><rect x="1016" y="276" width="163" height="15" fill="rgb(251,133,35)"/><text x="1019.00" y="286.50">expm1f64 (libm-2.29.s..</text></g><g><title>0x7ff4ae6103fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (254 samples, 28.51%)</title><rect x="844" y="180" width="336" height="15" fill="rgb(251,50,40)"/><text x="847.00" y="190.50">0x7ff4ae6103fd (sklearn/svm/_libsvm.cpython-3..</text></g><g><title>0x7ff4ae60e7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1179" y="196" width="1" height="15" fill="rgb(216,9,0)"/><text x="1182.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1179" y="212" width="1" height="15" fill="rgb(220,59,50)"/><text x="1182.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1179" y="228" width="1" height="15" fill="rgb(250,100,15)"/><text x="1182.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1179" y="244" width="1" height="15" fill="rgb(236,90,26)"/><text x="1182.00" y="254.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (255 samples, 28.62%)</title><rect x="844" y="164" width="338" height="15" fill="rgb(244,78,14)"/><text x="847.00" y="174.50">_dense_predict_proba (sklearn/svm/_base.py)</text></g><g><title>0x7ff4ae61125a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1180" y="180" width="2" height="15" fill="rgb(218,133,16)"/><text x="1183.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (258 samples, 28.96%)</title><rect x="844" y="132" width="342" height="15" fill="rgb(209,108,34)"/><text x="847.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (258 samples, 28.96%)</title><rect x="844" y="148" width="342" height="15" fill="rgb(244,13,14)"/><text x="847.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (3 samples, 0.34%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(207,162,12)"/><text x="1185.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.22%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(215,158,46)"/><text x="1186.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(207,140,1)"/><text x="1187.00" y="206.50"></text></g><g><title>profile_skl (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (259 samples, 29.07%)</title><rect x="844" y="68" width="343" height="15" fill="rgb(231,159,26)"/><text x="847.00" y="78.50">profile_skl (bench_SVC_sigmoid_m_cl_probabilit..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (259 samples, 29.07%)</title><rect x="844" y="84" width="343" height="15" fill="rgb(225,142,32)"/><text x="847.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabil..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (259 samples, 29.07%)</title><rect x="844" y="100" width="343" height="15" fill="rgb(221,11,39)"/><text x="847.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilityTru..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (259 samples, 29.07%)</title><rect x="844" y="116" width="343" height="15" fill="rgb(209,116,14)"/><text x="847.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="1186" y="132" width="1" height="15" fill="rgb(216,159,14)"/><text x="1189.00" y="142.50"></text></g><g><title>0x7ff4d3bfd151 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1186" y="148" width="1" height="15" fill="rgb(249,157,50)"/><text x="1189.00" y="158.50"></text></g><g><title>0x7ff4ae61a62f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1187" y="196" width="1" height="15" fill="rgb(234,88,1)"/><text x="1190.00" y="206.50"></text></g><g><title>svm::Solver::Solve (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(244,57,29)"/><text x="1190.00" y="222.50"></text></g><g><title>svm::SVC_Q::get_Q (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(222,9,37)"/><text x="1190.00" y="238.50"></text></g><g><title>svm::Kernel::kernel_sigmoid (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(242,177,10)"/><text x="1190.00" y="254.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(229,141,30)"/><text x="1190.00" y="270.50"></text></g><g><title>all (891 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,103,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (891 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(222,173,20)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py)</text></g><g><title>start (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (2 samples, 0.22%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(248,19,30)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py) (2 samples, 0.22%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(224,227,16)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.22%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(251,125,38)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/svm/_base.py) (2 samples, 0.22%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(209,92,18)"/><text x="1190.00" y="126.50"></text></g><g><title>_dense_fit (sklearn/svm/_base.py) (2 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(209,52,34)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7ff4ae607e5a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(249,12,9)"/><text x="1190.00" y="158.50"></text></g><g><title>0x7ff4ae5ff667 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(214,2,19)"/><text x="1190.00" y="174.50"></text></g><g><title>svm_train (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(210,182,6)"/><text x="1190.00" y="190.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(211,70,39)"/><text x="1191.00" y="206.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(249,48,54)"/><text x="1191.00" y="222.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(221,187,6)"/><text x="1191.00" y="238.50"></text></g></g></svg>