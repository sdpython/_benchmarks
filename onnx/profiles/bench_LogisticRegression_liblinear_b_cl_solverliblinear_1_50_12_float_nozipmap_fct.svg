<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(228,49,44)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(221,0,35)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(227,91,53)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(232,97,22)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(228,159,47)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(232,122,25)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(241,97,28)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="980" width="7" height="15" fill="rgb(246,216,22)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="996" width="7" height="15" fill="rgb(216,114,54)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(209,159,54)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="13" y="1028" width="4" height="15" fill="rgb(222,162,40)"/><text x="16.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="13" y="1044" width="4" height="15" fill="rgb(216,99,35)"/><text x="16.00" y="1054.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(234,116,34)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(239,20,44)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(246,96,48)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(243,216,44)"/><text x="20.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(232,165,48)"/><text x="20.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(212,94,16)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(229,148,40)"/><text x="20.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(249,182,49)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(246,101,23)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(210,18,23)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.23%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(246,27,32)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(237,204,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(230,213,21)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(223,72,6)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(226,171,7)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(237,197,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.23%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(232,172,10)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(225,33,41)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(252,15,28)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(245,207,30)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(224,205,23)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(235,216,1)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.23%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(220,186,29)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(247,36,51)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(230,141,26)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(248,128,16)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(251,49,6)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(208,167,17)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.23%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(211,138,54)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(245,177,52)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(241,94,4)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(251,144,16)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(209,138,51)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(233,188,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(248,171,21)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(247,154,4)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(254,70,36)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.23%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(234,127,16)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(226,1,11)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(233,109,37)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(230,99,14)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(223,102,30)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(240,33,24)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.23%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(231,46,50)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.23%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(223,136,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.23%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(218,136,34)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="868" width="4" height="15" fill="rgb(239,128,25)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="884" width="4" height="15" fill="rgb(222,30,20)"/><text x="23.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(237,196,10)"/><text x="23.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="20" y="916" width="4" height="15" fill="rgb(246,5,23)"/><text x="23.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(209,167,24)"/><text x="23.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(226,82,24)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(245,131,10)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(246,93,49)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(236,70,52)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(222,87,29)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="980" width="4" height="15" fill="rgb(232,32,27)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="24" y="996" width="4" height="15" fill="rgb(221,105,30)"/><text x="27.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1012" width="4" height="15" fill="rgb(247,53,42)"/><text x="27.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1028" width="4" height="15" fill="rgb(224,64,44)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1044" width="4" height="15" fill="rgb(217,36,43)"/><text x="27.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1060" width="4" height="15" fill="rgb(252,116,37)"/><text x="27.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1076" width="4" height="15" fill="rgb(206,220,27)"/><text x="27.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1092" width="4" height="15" fill="rgb(251,151,45)"/><text x="27.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1108" width="4" height="15" fill="rgb(231,91,10)"/><text x="27.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.31%)</title><rect x="24" y="1124" width="4" height="15" fill="rgb(247,198,39)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1140" width="4" height="15" fill="rgb(206,185,32)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1156" width="4" height="15" fill="rgb(214,195,26)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="24" y="1172" width="4" height="15" fill="rgb(239,52,40)"/><text x="27.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1188" width="4" height="15" fill="rgb(232,38,29)"/><text x="27.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1204" width="4" height="15" fill="rgb(236,98,17)"/><text x="27.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1220" width="4" height="15" fill="rgb(237,29,17)"/><text x="27.00" y="1230.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1236" width="4" height="15" fill="rgb(248,223,41)"/><text x="27.00" y="1246.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="24" y="1252" width="4" height="15" fill="rgb(242,194,36)"/><text x="27.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="500" width="7" height="15" fill="rgb(217,21,17)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="516" width="7" height="15" fill="rgb(216,91,7)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="532" width="7" height="15" fill="rgb(230,46,8)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="24" y="548" width="7" height="15" fill="rgb(218,65,32)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="564" width="7" height="15" fill="rgb(212,135,42)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.62%)</title><rect x="24" y="580" width="7" height="15" fill="rgb(242,53,50)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="596" width="7" height="15" fill="rgb(230,110,46)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="612" width="7" height="15" fill="rgb(232,193,1)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="628" width="7" height="15" fill="rgb(214,97,26)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="24" y="644" width="7" height="15" fill="rgb(212,67,48)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="660" width="7" height="15" fill="rgb(252,57,4)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.62%)</title><rect x="24" y="676" width="7" height="15" fill="rgb(229,216,49)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="692" width="7" height="15" fill="rgb(213,89,34)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="708" width="7" height="15" fill="rgb(211,199,45)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="724" width="7" height="15" fill="rgb(244,10,35)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="24" y="740" width="7" height="15" fill="rgb(205,110,42)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="756" width="7" height="15" fill="rgb(206,212,3)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.62%)</title><rect x="24" y="772" width="7" height="15" fill="rgb(247,157,6)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="788" width="7" height="15" fill="rgb(245,144,50)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="804" width="7" height="15" fill="rgb(252,108,8)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="820" width="7" height="15" fill="rgb(225,70,28)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="836" width="7" height="15" fill="rgb(228,44,10)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="852" width="7" height="15" fill="rgb(229,142,31)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="24" y="868" width="7" height="15" fill="rgb(205,206,20)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="24" y="884" width="7" height="15" fill="rgb(242,223,40)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.62%)</title><rect x="24" y="900" width="7" height="15" fill="rgb(240,161,12)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(216,153,26)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(223,191,28)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(218,193,53)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(253,6,30)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(210,137,14)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(215,228,16)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(233,206,13)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.31%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(210,75,37)"/><text x="31.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(217,128,25)"/><text x="31.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(252,192,39)"/><text x="31.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.31%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(235,113,9)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.31%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(244,116,39)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(214,171,50)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(241,48,31)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(205,152,42)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(229,156,8)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.16%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(238,104,21)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(228,7,2)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.93%)</title><rect x="24" y="292" width="11" height="15" fill="rgb(230,70,42)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="308" width="11" height="15" fill="rgb(216,66,41)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="324" width="11" height="15" fill="rgb(252,31,45)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="340" width="11" height="15" fill="rgb(213,45,47)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="24" y="356" width="11" height="15" fill="rgb(242,171,15)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="372" width="11" height="15" fill="rgb(212,110,26)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.93%)</title><rect x="24" y="388" width="11" height="15" fill="rgb(211,141,26)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="404" width="11" height="15" fill="rgb(238,6,31)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="420" width="11" height="15" fill="rgb(230,23,41)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="436" width="11" height="15" fill="rgb(233,37,28)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="24" y="452" width="11" height="15" fill="rgb(239,193,38)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="24" y="468" width="11" height="15" fill="rgb(246,146,23)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.93%)</title><rect x="24" y="484" width="11" height="15" fill="rgb(209,11,31)"/><text x="27.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="500" width="4" height="15" fill="rgb(208,120,45)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="516" width="4" height="15" fill="rgb(211,170,49)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="532" width="4" height="15" fill="rgb(248,54,9)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="548" width="4" height="15" fill="rgb(234,69,24)"/><text x="34.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="564" width="4" height="15" fill="rgb(212,201,27)"/><text x="34.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="580" width="4" height="15" fill="rgb(237,157,40)"/><text x="34.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="596" width="4" height="15" fill="rgb(254,167,43)"/><text x="34.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.31%)</title><rect x="31" y="612" width="4" height="15" fill="rgb(234,215,43)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="628" width="4" height="15" fill="rgb(228,102,33)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="644" width="4" height="15" fill="rgb(228,129,54)"/><text x="34.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="660" width="4" height="15" fill="rgb(205,182,6)"/><text x="34.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="676" width="4" height="15" fill="rgb(215,82,18)"/><text x="34.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="692" width="4" height="15" fill="rgb(220,63,29)"/><text x="34.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="708" width="4" height="15" fill="rgb(220,1,7)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(226,60,45)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(206,201,5)"/><text x="34.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(217,175,26)"/><text x="34.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="772" width="4" height="15" fill="rgb(211,204,35)"/><text x="34.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(248,196,53)"/><text x="34.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.31%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(213,224,18)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(206,67,53)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(218,162,42)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(237,128,40)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(253,102,34)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(229,1,28)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py) (1 samples, 0.31%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(253,211,8)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(220,116,1)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(208,223,36)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(230,107,22)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(228,94,8)"/><text x="34.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(230,96,24)"/><text x="34.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(221,178,26)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="35" y="1204" width="4" height="15" fill="rgb(224,6,9)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1220" width="4" height="15" fill="rgb(246,225,51)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1236" width="4" height="15" fill="rgb(210,55,22)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1252" width="4" height="15" fill="rgb(236,221,14)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1268" width="4" height="15" fill="rgb(215,75,8)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1284" width="4" height="15" fill="rgb(217,177,47)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(237,84,41)"/><text x="38.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(224,195,54)"/><text x="38.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(207,227,43)"/><text x="38.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(205,58,31)"/><text x="38.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.31%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(227,181,8)"/><text x="38.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.31%)</title><rect x="35" y="1380" width="4" height="15" fill="rgb(232,119,10)"/><text x="38.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1124" width="7" height="15" fill="rgb(212,131,52)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1140" width="7" height="15" fill="rgb(219,107,31)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1156" width="7" height="15" fill="rgb(224,60,52)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="35" y="1172" width="7" height="15" fill="rgb(242,31,1)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1188" width="7" height="15" fill="rgb(219,10,32)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(215,70,21)"/><text x="42.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(250,73,29)"/><text x="42.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(232,78,14)"/><text x="42.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(244,12,19)"/><text x="42.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(208,36,45)"/><text x="42.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(227,133,28)"/><text x="42.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.31%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(208,198,30)"/><text x="42.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(228,48,18)"/><text x="42.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(211,210,8)"/><text x="42.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(220,23,23)"/><text x="42.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(211,67,27)"/><text x="42.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(223,29,22)"/><text x="42.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1396" width="3" height="15" fill="rgb(214,119,7)"/><text x="42.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1412" width="3" height="15" fill="rgb(244,185,19)"/><text x="42.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1428" width="3" height="15" fill="rgb(215,175,49)"/><text x="42.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="39" y="1444" width="3" height="15" fill="rgb(211,41,37)"/><text x="42.00" y="1454.50"></text></g><g><title>0x7f030f720e64 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="39" y="1460" width="3" height="15" fill="rgb(251,126,9)"/><text x="42.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="484" width="11" height="15" fill="rgb(205,141,34)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="500" width="11" height="15" fill="rgb(234,187,4)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="516" width="11" height="15" fill="rgb(235,169,49)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="532" width="11" height="15" fill="rgb(234,168,34)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="548" width="11" height="15" fill="rgb(221,199,2)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="564" width="11" height="15" fill="rgb(214,46,39)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="580" width="11" height="15" fill="rgb(237,158,16)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="596" width="11" height="15" fill="rgb(251,101,32)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="612" width="11" height="15" fill="rgb(212,141,52)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="628" width="11" height="15" fill="rgb(245,50,30)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="644" width="11" height="15" fill="rgb(225,12,16)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="660" width="11" height="15" fill="rgb(240,17,39)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.93%)</title><rect x="35" y="676" width="11" height="15" fill="rgb(251,114,21)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="692" width="11" height="15" fill="rgb(210,109,12)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="708" width="11" height="15" fill="rgb(217,213,18)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="724" width="11" height="15" fill="rgb(228,228,51)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="740" width="11" height="15" fill="rgb(214,8,2)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="756" width="11" height="15" fill="rgb(205,142,53)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="772" width="11" height="15" fill="rgb(217,89,34)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="788" width="11" height="15" fill="rgb(230,132,21)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="804" width="11" height="15" fill="rgb(207,227,44)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="820" width="11" height="15" fill="rgb(250,222,11)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="836" width="11" height="15" fill="rgb(228,61,3)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="852" width="11" height="15" fill="rgb(228,179,38)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.93%)</title><rect x="35" y="868" width="11" height="15" fill="rgb(223,42,24)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="884" width="11" height="15" fill="rgb(223,197,1)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="900" width="11" height="15" fill="rgb(253,160,48)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="916" width="11" height="15" fill="rgb(231,224,11)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="932" width="11" height="15" fill="rgb(208,205,5)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="948" width="11" height="15" fill="rgb(234,219,16)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="964" width="11" height="15" fill="rgb(207,224,46)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="980" width="11" height="15" fill="rgb(245,200,4)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="996" width="11" height="15" fill="rgb(223,133,20)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="1012" width="11" height="15" fill="rgb(237,211,34)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1028" width="11" height="15" fill="rgb(205,6,27)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1044" width="11" height="15" fill="rgb(254,112,18)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1060" width="11" height="15" fill="rgb(224,122,18)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="1076" width="11" height="15" fill="rgb(220,143,9)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1092" width="11" height="15" fill="rgb(219,133,14)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.93%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(239,190,29)"/><text x="38.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1124" width="4" height="15" fill="rgb(243,226,7)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1140" width="4" height="15" fill="rgb(219,221,34)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1156" width="4" height="15" fill="rgb(245,191,17)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1172" width="4" height="15" fill="rgb(214,203,18)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1188" width="4" height="15" fill="rgb(228,84,13)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(236,119,3)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(211,112,35)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.31%)</title><rect x="42" y="1236" width="4" height="15" fill="rgb(232,228,34)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1252" width="4" height="15" fill="rgb(248,176,37)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1268" width="4" height="15" fill="rgb(229,113,31)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1284" width="4" height="15" fill="rgb(214,209,22)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1300" width="4" height="15" fill="rgb(236,218,0)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1316" width="4" height="15" fill="rgb(248,1,39)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="1332" width="4" height="15" fill="rgb(216,175,16)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1348" width="4" height="15" fill="rgb(253,166,2)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.31%)</title><rect x="42" y="1364" width="4" height="15" fill="rgb(208,37,40)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1380" width="4" height="15" fill="rgb(240,212,0)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1396" width="4" height="15" fill="rgb(234,215,18)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1412" width="4" height="15" fill="rgb(248,118,29)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="1428" width="4" height="15" fill="rgb(220,106,2)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1444" width="4" height="15" fill="rgb(248,208,47)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.31%)</title><rect x="42" y="1460" width="4" height="15" fill="rgb(245,43,34)"/><text x="45.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1476" width="4" height="15" fill="rgb(235,59,28)"/><text x="45.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1492" width="4" height="15" fill="rgb(209,196,31)"/><text x="45.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1508" width="4" height="15" fill="rgb(209,21,6)"/><text x="45.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="1524" width="4" height="15" fill="rgb(229,23,46)"/><text x="45.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1540" width="4" height="15" fill="rgb(245,137,1)"/><text x="45.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="42" y="1556" width="4" height="15" fill="rgb(224,220,19)"/><text x="45.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.31%)</title><rect x="42" y="1572" width="4" height="15" fill="rgb(251,181,40)"/><text x="45.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="42" y="1588" width="4" height="15" fill="rgb(215,227,20)"/><text x="45.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="42" y="1604" width="4" height="15" fill="rgb(226,85,10)"/><text x="45.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="42" y="1620" width="4" height="15" fill="rgb(250,22,17)"/><text x="45.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="42" y="1636" width="4" height="15" fill="rgb(214,113,36)"/><text x="45.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1652" width="4" height="15" fill="rgb(215,165,40)"/><text x="45.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1668" width="4" height="15" fill="rgb(224,214,29)"/><text x="45.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1684" width="4" height="15" fill="rgb(239,44,8)"/><text x="45.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1700" width="4" height="15" fill="rgb(242,55,26)"/><text x="45.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1716" width="4" height="15" fill="rgb(220,61,54)"/><text x="45.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1732" width="4" height="15" fill="rgb(244,198,12)"/><text x="45.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1748" width="4" height="15" fill="rgb(216,201,30)"/><text x="45.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1764" width="4" height="15" fill="rgb(251,168,2)"/><text x="45.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1780" width="4" height="15" fill="rgb(240,196,40)"/><text x="45.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1796" width="4" height="15" fill="rgb(238,198,34)"/><text x="45.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1812" width="4" height="15" fill="rgb(226,104,15)"/><text x="45.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1828" width="4" height="15" fill="rgb(209,103,1)"/><text x="45.00" y="1838.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1844" width="4" height="15" fill="rgb(222,111,54)"/><text x="45.00" y="1854.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1860" width="4" height="15" fill="rgb(207,162,48)"/><text x="45.00" y="1870.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1876" width="4" height="15" fill="rgb(227,119,21)"/><text x="45.00" y="1886.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1892" width="4" height="15" fill="rgb(253,47,4)"/><text x="45.00" y="1902.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1908" width="4" height="15" fill="rgb(224,63,48)"/><text x="45.00" y="1918.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1924" width="4" height="15" fill="rgb(226,62,50)"/><text x="45.00" y="1934.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1940" width="4" height="15" fill="rgb(216,52,43)"/><text x="45.00" y="1950.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1956" width="4" height="15" fill="rgb(239,53,1)"/><text x="45.00" y="1966.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1972" width="4" height="15" fill="rgb(241,39,12)"/><text x="45.00" y="1982.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="1988" width="4" height="15" fill="rgb(206,225,42)"/><text x="45.00" y="1998.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="2004" width="4" height="15" fill="rgb(233,214,18)"/><text x="45.00" y="2014.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="2020" width="4" height="15" fill="rgb(229,122,12)"/><text x="45.00" y="2030.50"></text></g><g><title>parse_postfix (jinja2/parser.py) (1 samples, 0.31%)</title><rect x="42" y="2036" width="4" height="15" fill="rgb(230,136,15)"/><text x="45.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="772" width="4" height="15" fill="rgb(225,22,13)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="788" width="4" height="15" fill="rgb(219,207,51)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="804" width="4" height="15" fill="rgb(222,160,29)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="820" width="4" height="15" fill="rgb(244,34,26)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="836" width="4" height="15" fill="rgb(227,144,28)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="852" width="4" height="15" fill="rgb(232,132,39)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.31%)</title><rect x="46" y="868" width="4" height="15" fill="rgb(220,174,11)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="884" width="4" height="15" fill="rgb(236,160,8)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="900" width="4" height="15" fill="rgb(231,103,0)"/><text x="49.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="916" width="4" height="15" fill="rgb(250,99,31)"/><text x="49.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="932" width="4" height="15" fill="rgb(209,30,22)"/><text x="49.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="948" width="4" height="15" fill="rgb(254,115,40)"/><text x="49.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.31%)</title><rect x="46" y="964" width="4" height="15" fill="rgb(250,35,37)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(243,39,29)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(208,3,4)"/><text x="49.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(239,76,7)"/><text x="49.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(212,42,34)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(241,91,46)"/><text x="49.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.31%)</title><rect x="46" y="1060" width="4" height="15" fill="rgb(225,47,31)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1076" width="4" height="15" fill="rgb(238,39,44)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1092" width="4" height="15" fill="rgb(248,57,18)"/><text x="49.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(249,144,8)"/><text x="49.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(221,110,47)"/><text x="49.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(248,72,22)"/><text x="49.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.31%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(252,123,21)"/><text x="49.00" y="1166.50"></text></g><g><title>CategoricalDtype (pandas/core/dtypes/dtypes.py) (1 samples, 0.31%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(246,80,21)"/><text x="49.00" y="1182.50"></text></g><g><title>inner (typing.py) (1 samples, 0.31%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(233,7,43)"/><text x="49.00" y="1198.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.31%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(245,164,2)"/><text x="49.00" y="1214.50"></text></g><g><title>_type_check (typing.py) (1 samples, 0.31%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(210,155,32)"/><text x="49.00" y="1230.50"></text></g><g><title>__init__ (typing.py) (1 samples, 0.31%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(249,137,44)"/><text x="49.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1540" width="3" height="15" fill="rgb(220,171,6)"/><text x="53.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1556" width="3" height="15" fill="rgb(251,94,16)"/><text x="53.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1572" width="3" height="15" fill="rgb(215,175,5)"/><text x="53.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1588" width="3" height="15" fill="rgb(239,114,20)"/><text x="53.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1604" width="3" height="15" fill="rgb(220,209,25)"/><text x="53.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1620" width="3" height="15" fill="rgb(205,193,54)"/><text x="53.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="50" y="1636" width="3" height="15" fill="rgb(212,32,10)"/><text x="53.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1652" width="3" height="15" fill="rgb(230,40,2)"/><text x="53.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1668" width="3" height="15" fill="rgb(213,201,48)"/><text x="53.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1684" width="3" height="15" fill="rgb(228,185,54)"/><text x="53.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1700" width="3" height="15" fill="rgb(215,220,27)"/><text x="53.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1716" width="3" height="15" fill="rgb(220,130,49)"/><text x="53.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1732" width="3" height="15" fill="rgb(240,13,6)"/><text x="53.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1748" width="3" height="15" fill="rgb(252,109,23)"/><text x="53.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.31%)</title><rect x="50" y="1764" width="3" height="15" fill="rgb(232,34,17)"/><text x="53.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1780" width="3" height="15" fill="rgb(212,94,14)"/><text x="53.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1796" width="3" height="15" fill="rgb(253,90,25)"/><text x="53.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1812" width="3" height="15" fill="rgb(209,129,8)"/><text x="53.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1828" width="3" height="15" fill="rgb(223,0,41)"/><text x="53.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1844" width="3" height="15" fill="rgb(229,21,28)"/><text x="53.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.31%)</title><rect x="50" y="1860" width="3" height="15" fill="rgb(224,173,46)"/><text x="53.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1876" width="3" height="15" fill="rgb(228,173,41)"/><text x="53.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1892" width="3" height="15" fill="rgb(231,12,17)"/><text x="53.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="1908" width="3" height="15" fill="rgb(239,16,29)"/><text x="53.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1924" width="3" height="15" fill="rgb(222,127,14)"/><text x="53.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1940" width="3" height="15" fill="rgb(240,89,13)"/><text x="53.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="1956" width="3" height="15" fill="rgb(209,27,14)"/><text x="53.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1892" width="4" height="15" fill="rgb(252,201,34)"/><text x="56.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1908" width="4" height="15" fill="rgb(238,69,43)"/><text x="56.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1924" width="4" height="15" fill="rgb(231,154,52)"/><text x="56.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1940" width="4" height="15" fill="rgb(214,10,26)"/><text x="56.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1956" width="4" height="15" fill="rgb(237,154,9)"/><text x="56.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.31%)</title><rect x="53" y="1972" width="4" height="15" fill="rgb(235,65,39)"/><text x="56.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1988" width="4" height="15" fill="rgb(242,183,40)"/><text x="56.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2004" width="4" height="15" fill="rgb(208,44,15)"/><text x="56.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2020" width="4" height="15" fill="rgb(219,196,41)"/><text x="56.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2036" width="4" height="15" fill="rgb(230,199,50)"/><text x="56.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2052" width="4" height="15" fill="rgb(246,123,43)"/><text x="56.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="2068" width="4" height="15" fill="rgb(221,212,38)"/><text x="56.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="2084" width="4" height="15" fill="rgb(222,110,10)"/><text x="56.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/dviread.py) (1 samples, 0.31%)</title><rect x="53" y="2100" width="4" height="15" fill="rgb(210,174,2)"/><text x="56.00" y="2110.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="2116" width="4" height="15" fill="rgb(210,207,41)"/><text x="56.00" y="2126.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="2132" width="4" height="15" fill="rgb(237,70,54)"/><text x="56.00" y="2142.50"></text></g><g><title>__prepare__ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="2148" width="4" height="15" fill="rgb(237,152,42)"/><text x="56.00" y="2158.50"></text></g><g><title>__init__ (enum.py) (1 samples, 0.31%)</title><rect x="53" y="2164" width="4" height="15" fill="rgb(216,138,45)"/><text x="56.00" y="2174.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.93%)</title><rect x="50" y="1012" width="10" height="15" fill="rgb(214,227,23)"/><text x="53.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1028" width="10" height="15" fill="rgb(232,172,7)"/><text x="53.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1044" width="10" height="15" fill="rgb(239,7,30)"/><text x="53.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1060" width="10" height="15" fill="rgb(227,165,30)"/><text x="53.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="1076" width="10" height="15" fill="rgb(210,102,3)"/><text x="53.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1092" width="10" height="15" fill="rgb(226,171,3)"/><text x="53.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.93%)</title><rect x="50" y="1108" width="10" height="15" fill="rgb(213,37,46)"/><text x="53.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1124" width="10" height="15" fill="rgb(240,34,54)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1140" width="10" height="15" fill="rgb(234,177,42)"/><text x="53.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1156" width="10" height="15" fill="rgb(247,151,39)"/><text x="53.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="1172" width="10" height="15" fill="rgb(212,24,34)"/><text x="53.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1188" width="10" height="15" fill="rgb(240,87,35)"/><text x="53.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.93%)</title><rect x="50" y="1204" width="10" height="15" fill="rgb(235,169,41)"/><text x="53.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1220" width="10" height="15" fill="rgb(228,127,50)"/><text x="53.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1236" width="10" height="15" fill="rgb(237,53,46)"/><text x="53.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1252" width="10" height="15" fill="rgb(246,186,29)"/><text x="53.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="1268" width="10" height="15" fill="rgb(230,104,25)"/><text x="53.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1284" width="10" height="15" fill="rgb(232,149,54)"/><text x="53.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.93%)</title><rect x="50" y="1300" width="10" height="15" fill="rgb(216,107,23)"/><text x="53.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1316" width="10" height="15" fill="rgb(250,83,53)"/><text x="53.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1332" width="10" height="15" fill="rgb(249,29,22)"/><text x="53.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1348" width="10" height="15" fill="rgb(227,213,26)"/><text x="53.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="1364" width="10" height="15" fill="rgb(250,85,15)"/><text x="53.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1380" width="10" height="15" fill="rgb(206,168,29)"/><text x="53.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.93%)</title><rect x="50" y="1396" width="10" height="15" fill="rgb(242,187,29)"/><text x="53.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1412" width="10" height="15" fill="rgb(227,6,6)"/><text x="53.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1428" width="10" height="15" fill="rgb(223,104,53)"/><text x="53.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1444" width="10" height="15" fill="rgb(245,17,8)"/><text x="53.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="50" y="1460" width="10" height="15" fill="rgb(234,17,24)"/><text x="53.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1476" width="10" height="15" fill="rgb(213,157,32)"/><text x="53.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.93%)</title><rect x="50" y="1492" width="10" height="15" fill="rgb(218,128,15)"/><text x="53.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1508" width="10" height="15" fill="rgb(226,138,40)"/><text x="53.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="50" y="1524" width="10" height="15" fill="rgb(244,86,42)"/><text x="53.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1540" width="7" height="15" fill="rgb(209,62,8)"/><text x="56.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="53" y="1556" width="7" height="15" fill="rgb(224,9,17)"/><text x="56.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1572" width="7" height="15" fill="rgb(245,143,18)"/><text x="56.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.62%)</title><rect x="53" y="1588" width="7" height="15" fill="rgb(211,226,10)"/><text x="56.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1604" width="7" height="15" fill="rgb(251,64,46)"/><text x="56.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1620" width="7" height="15" fill="rgb(228,100,12)"/><text x="56.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1636" width="7" height="15" fill="rgb(225,106,22)"/><text x="56.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="53" y="1652" width="7" height="15" fill="rgb(228,117,38)"/><text x="56.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1668" width="7" height="15" fill="rgb(235,202,52)"/><text x="56.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.62%)</title><rect x="53" y="1684" width="7" height="15" fill="rgb(240,65,48)"/><text x="56.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1700" width="7" height="15" fill="rgb(207,189,12)"/><text x="56.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1716" width="7" height="15" fill="rgb(211,117,8)"/><text x="56.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1732" width="7" height="15" fill="rgb(251,208,35)"/><text x="56.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="53" y="1748" width="7" height="15" fill="rgb(228,97,21)"/><text x="56.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1764" width="7" height="15" fill="rgb(236,165,25)"/><text x="56.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.62%)</title><rect x="53" y="1780" width="7" height="15" fill="rgb(247,113,41)"/><text x="56.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1796" width="7" height="15" fill="rgb(211,136,40)"/><text x="56.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1812" width="7" height="15" fill="rgb(213,110,9)"/><text x="56.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1828" width="7" height="15" fill="rgb(232,212,53)"/><text x="56.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="53" y="1844" width="7" height="15" fill="rgb(207,94,25)"/><text x="56.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="53" y="1860" width="7" height="15" fill="rgb(234,143,31)"/><text x="56.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.62%)</title><rect x="53" y="1876" width="7" height="15" fill="rgb(209,152,47)"/><text x="56.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.31%)</title><rect x="57" y="1892" width="3" height="15" fill="rgb(219,202,35)"/><text x="60.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.31%)</title><rect x="57" y="1908" width="3" height="15" fill="rgb(213,197,25)"/><text x="60.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.31%)</title><rect x="57" y="1924" width="3" height="15" fill="rgb(212,19,31)"/><text x="60.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.31%)</title><rect x="57" y="1940" width="3" height="15" fill="rgb(212,25,18)"/><text x="60.00" y="1950.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.31%)</title><rect x="57" y="1956" width="3" height="15" fill="rgb(241,132,25)"/><text x="60.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.31%)</title><rect x="57" y="1972" width="3" height="15" fill="rgb(221,228,29)"/><text x="60.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.47%)</title><rect x="35" y="340" width="29" height="15" fill="rgb(213,191,26)"/><text x="38.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="356" width="29" height="15" fill="rgb(225,141,2)"/><text x="38.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="372" width="29" height="15" fill="rgb(231,224,8)"/><text x="38.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="388" width="29" height="15" fill="rgb(213,98,15)"/><text x="38.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.47%)</title><rect x="35" y="404" width="29" height="15" fill="rgb(226,192,41)"/><text x="38.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="420" width="29" height="15" fill="rgb(236,118,18)"/><text x="38.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.47%)</title><rect x="35" y="436" width="29" height="15" fill="rgb(226,217,20)"/><text x="38.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="452" width="29" height="15" fill="rgb(231,27,8)"/><text x="38.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.47%)</title><rect x="35" y="468" width="29" height="15" fill="rgb(238,127,34)"/><text x="38.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="484" width="18" height="15" fill="rgb(234,215,41)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.54%)</title><rect x="46" y="500" width="18" height="15" fill="rgb(236,224,1)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="516" width="18" height="15" fill="rgb(206,116,43)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.54%)</title><rect x="46" y="532" width="18" height="15" fill="rgb(233,180,13)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="548" width="18" height="15" fill="rgb(210,110,17)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="564" width="18" height="15" fill="rgb(247,203,26)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="580" width="18" height="15" fill="rgb(217,112,53)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.54%)</title><rect x="46" y="596" width="18" height="15" fill="rgb(205,80,17)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="612" width="18" height="15" fill="rgb(248,206,48)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.54%)</title><rect x="46" y="628" width="18" height="15" fill="rgb(216,106,7)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="644" width="18" height="15" fill="rgb(230,82,50)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="660" width="18" height="15" fill="rgb(205,107,24)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="676" width="18" height="15" fill="rgb(249,83,44)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.54%)</title><rect x="46" y="692" width="18" height="15" fill="rgb(229,99,21)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="708" width="18" height="15" fill="rgb(210,87,23)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 1.54%)</title><rect x="46" y="724" width="18" height="15" fill="rgb(244,206,20)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="740" width="18" height="15" fill="rgb(222,21,24)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.54%)</title><rect x="46" y="756" width="18" height="15" fill="rgb(251,126,49)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="772" width="14" height="15" fill="rgb(212,46,15)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="50" y="788" width="14" height="15" fill="rgb(224,98,4)"/><text x="53.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="804" width="14" height="15" fill="rgb(244,103,40)"/><text x="53.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.23%)</title><rect x="50" y="820" width="14" height="15" fill="rgb(249,166,4)"/><text x="53.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="836" width="14" height="15" fill="rgb(221,138,37)"/><text x="53.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="852" width="14" height="15" fill="rgb(218,130,38)"/><text x="53.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="868" width="14" height="15" fill="rgb(214,99,38)"/><text x="53.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="50" y="884" width="14" height="15" fill="rgb(228,222,46)"/><text x="53.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="900" width="14" height="15" fill="rgb(221,83,3)"/><text x="53.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.23%)</title><rect x="50" y="916" width="14" height="15" fill="rgb(214,147,10)"/><text x="53.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="932" width="14" height="15" fill="rgb(231,66,51)"/><text x="53.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="948" width="14" height="15" fill="rgb(220,100,2)"/><text x="53.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="964" width="14" height="15" fill="rgb(218,15,39)"/><text x="53.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.23%)</title><rect x="50" y="980" width="14" height="15" fill="rgb(216,80,0)"/><text x="53.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.23%)</title><rect x="50" y="996" width="14" height="15" fill="rgb(225,229,17)"/><text x="53.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.31%)</title><rect x="60" y="1012" width="4" height="15" fill="rgb(224,54,7)"/><text x="63.00" y="1022.50"></text></g><g><title>GroupBy (pandas/core/groupby/groupby.py) (1 samples, 0.31%)</title><rect x="60" y="1028" width="4" height="15" fill="rgb(233,85,19)"/><text x="63.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.31%)</title><rect x="60" y="1044" width="4" height="15" fill="rgb(243,116,41)"/><text x="63.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="60" y="1060" width="4" height="15" fill="rgb(226,143,21)"/><text x="63.00" y="1070.50"></text></g><g><title>sub (re.py) (1 samples, 0.31%)</title><rect x="60" y="1076" width="4" height="15" fill="rgb(230,51,9)"/><text x="63.00" y="1086.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1092" width="4" height="15" fill="rgb(220,170,10)"/><text x="63.00" y="1102.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1108" width="4" height="15" fill="rgb(218,92,10)"/><text x="63.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="60" y="1124" width="4" height="15" fill="rgb(246,183,9)"/><text x="63.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.31%)</title><rect x="64" y="580" width="4" height="15" fill="rgb(218,201,54)"/><text x="67.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="596" width="4" height="15" fill="rgb(229,57,47)"/><text x="67.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="612" width="4" height="15" fill="rgb(250,143,42)"/><text x="67.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="628" width="4" height="15" fill="rgb(242,6,9)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="644" width="4" height="15" fill="rgb(211,212,46)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="660" width="4" height="15" fill="rgb(228,177,54)"/><text x="67.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="676" width="4" height="15" fill="rgb(207,168,17)"/><text x="67.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="692" width="4" height="15" fill="rgb(254,1,44)"/><text x="67.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="708" width="4" height="15" fill="rgb(236,46,40)"/><text x="67.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.31%)</title><rect x="64" y="724" width="4" height="15" fill="rgb(207,144,4)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="740" width="4" height="15" fill="rgb(241,92,19)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="756" width="4" height="15" fill="rgb(235,139,42)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="772" width="4" height="15" fill="rgb(248,74,41)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="788" width="4" height="15" fill="rgb(218,109,30)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="804" width="4" height="15" fill="rgb(233,156,0)"/><text x="67.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.31%)</title><rect x="64" y="820" width="4" height="15" fill="rgb(216,94,9)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="836" width="4" height="15" fill="rgb(244,170,44)"/><text x="67.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="852" width="4" height="15" fill="rgb(212,222,6)"/><text x="67.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="868" width="4" height="15" fill="rgb(226,99,15)"/><text x="67.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="884" width="4" height="15" fill="rgb(247,55,1)"/><text x="67.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="900" width="4" height="15" fill="rgb(219,204,50)"/><text x="67.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.31%)</title><rect x="64" y="916" width="4" height="15" fill="rgb(208,163,2)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="932" width="4" height="15" fill="rgb(221,191,36)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="948" width="4" height="15" fill="rgb(233,191,53)"/><text x="67.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="964" width="4" height="15" fill="rgb(209,193,18)"/><text x="67.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="980" width="4" height="15" fill="rgb(237,20,34)"/><text x="67.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="996" width="4" height="15" fill="rgb(248,97,24)"/><text x="67.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1012" width="4" height="15" fill="rgb(215,84,21)"/><text x="67.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="1028" width="4" height="15" fill="rgb(239,162,18)"/><text x="67.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1044" width="4" height="15" fill="rgb(235,143,37)"/><text x="67.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.31%)</title><rect x="64" y="1060" width="4" height="15" fill="rgb(210,199,46)"/><text x="67.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1076" width="4" height="15" fill="rgb(218,132,46)"/><text x="67.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1092" width="4" height="15" fill="rgb(205,36,40)"/><text x="67.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1108" width="4" height="15" fill="rgb(209,86,13)"/><text x="67.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="1124" width="4" height="15" fill="rgb(230,164,54)"/><text x="67.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="1140" width="4" height="15" fill="rgb(241,150,51)"/><text x="67.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="1156" width="4" height="15" fill="rgb(243,196,43)"/><text x="67.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 3.09%)</title><rect x="35" y="244" width="36" height="15" fill="rgb(220,52,14)"/><text x="38.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.09%)</title><rect x="35" y="260" width="36" height="15" fill="rgb(239,51,9)"/><text x="38.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.09%)</title><rect x="35" y="276" width="36" height="15" fill="rgb(232,109,53)"/><text x="38.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.09%)</title><rect x="35" y="292" width="36" height="15" fill="rgb(236,101,7)"/><text x="38.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.09%)</title><rect x="35" y="308" width="36" height="15" fill="rgb(249,148,36)"/><text x="38.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.09%)</title><rect x="35" y="324" width="36" height="15" fill="rgb(230,151,32)"/><text x="38.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.62%)</title><rect x="64" y="340" width="7" height="15" fill="rgb(213,45,9)"/><text x="67.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="356" width="7" height="15" fill="rgb(213,20,23)"/><text x="67.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="372" width="7" height="15" fill="rgb(210,229,40)"/><text x="67.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="388" width="7" height="15" fill="rgb(239,17,35)"/><text x="67.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="404" width="7" height="15" fill="rgb(238,61,32)"/><text x="67.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="420" width="7" height="15" fill="rgb(221,91,15)"/><text x="67.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="436" width="7" height="15" fill="rgb(227,100,14)"/><text x="67.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="64" y="452" width="7" height="15" fill="rgb(251,162,36)"/><text x="67.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="468" width="7" height="15" fill="rgb(224,47,32)"/><text x="67.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.62%)</title><rect x="64" y="484" width="7" height="15" fill="rgb(217,43,50)"/><text x="67.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="500" width="7" height="15" fill="rgb(248,212,12)"/><text x="67.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="516" width="7" height="15" fill="rgb(217,180,20)"/><text x="67.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="532" width="7" height="15" fill="rgb(230,140,17)"/><text x="67.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="64" y="548" width="7" height="15" fill="rgb(216,210,7)"/><text x="67.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="64" y="564" width="7" height="15" fill="rgb(231,135,14)"/><text x="67.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.31%)</title><rect x="68" y="580" width="3" height="15" fill="rgb(231,48,5)"/><text x="71.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="596" width="3" height="15" fill="rgb(214,201,44)"/><text x="71.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="612" width="3" height="15" fill="rgb(247,81,30)"/><text x="71.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="628" width="3" height="15" fill="rgb(216,151,49)"/><text x="71.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="644" width="3" height="15" fill="rgb(244,215,40)"/><text x="71.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="660" width="3" height="15" fill="rgb(224,81,11)"/><text x="71.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.31%)</title><rect x="68" y="676" width="3" height="15" fill="rgb(219,97,4)"/><text x="71.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="692" width="3" height="15" fill="rgb(233,226,42)"/><text x="71.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="708" width="3" height="15" fill="rgb(234,98,26)"/><text x="71.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="724" width="3" height="15" fill="rgb(214,83,21)"/><text x="71.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="740" width="3" height="15" fill="rgb(244,202,53)"/><text x="71.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="756" width="3" height="15" fill="rgb(249,199,39)"/><text x="71.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="772" width="3" height="15" fill="rgb(243,159,5)"/><text x="71.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="788" width="3" height="15" fill="rgb(212,81,25)"/><text x="71.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="804" width="3" height="15" fill="rgb(209,153,34)"/><text x="71.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="820" width="3" height="15" fill="rgb(205,24,44)"/><text x="71.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="836" width="3" height="15" fill="rgb(224,146,27)"/><text x="71.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="852" width="3" height="15" fill="rgb(208,189,28)"/><text x="71.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="868" width="3" height="15" fill="rgb(206,140,4)"/><text x="71.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="884" width="3" height="15" fill="rgb(236,36,12)"/><text x="71.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="900" width="3" height="15" fill="rgb(229,45,38)"/><text x="71.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="916" width="3" height="15" fill="rgb(237,207,47)"/><text x="71.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="932" width="3" height="15" fill="rgb(218,182,32)"/><text x="71.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="948" width="3" height="15" fill="rgb(226,120,14)"/><text x="71.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.31%)</title><rect x="68" y="964" width="3" height="15" fill="rgb(205,32,52)"/><text x="71.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="980" width="3" height="15" fill="rgb(236,138,3)"/><text x="71.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="996" width="3" height="15" fill="rgb(220,8,10)"/><text x="71.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1012" width="3" height="15" fill="rgb(233,134,5)"/><text x="71.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="1028" width="3" height="15" fill="rgb(217,16,0)"/><text x="71.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1044" width="3" height="15" fill="rgb(218,136,1)"/><text x="71.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.31%)</title><rect x="68" y="1060" width="3" height="15" fill="rgb(230,81,50)"/><text x="71.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1076" width="3" height="15" fill="rgb(232,157,39)"/><text x="71.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1092" width="3" height="15" fill="rgb(226,185,32)"/><text x="71.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1108" width="3" height="15" fill="rgb(230,215,10)"/><text x="71.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1124" width="3" height="15" fill="rgb(227,204,11)"/><text x="71.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1140" width="3" height="15" fill="rgb(228,111,18)"/><text x="71.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1156" width="3" height="15" fill="rgb(225,66,32)"/><text x="71.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="1172" width="3" height="15" fill="rgb(209,16,3)"/><text x="71.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1188" width="3" height="15" fill="rgb(236,125,40)"/><text x="71.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="1204" width="3" height="15" fill="rgb(249,2,19)"/><text x="71.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1220" width="3" height="15" fill="rgb(228,0,51)"/><text x="71.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1236" width="3" height="15" fill="rgb(208,202,50)"/><text x="71.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1252" width="3" height="15" fill="rgb(238,140,9)"/><text x="71.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="1268" width="3" height="15" fill="rgb(224,33,23)"/><text x="71.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1284" width="3" height="15" fill="rgb(214,196,47)"/><text x="71.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.31%)</title><rect x="68" y="1300" width="3" height="15" fill="rgb(224,191,45)"/><text x="71.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1316" width="3" height="15" fill="rgb(230,95,47)"/><text x="71.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1332" width="3" height="15" fill="rgb(253,174,2)"/><text x="71.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1348" width="3" height="15" fill="rgb(247,134,45)"/><text x="71.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="1364" width="3" height="15" fill="rgb(224,208,29)"/><text x="71.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="1380" width="3" height="15" fill="rgb(252,85,45)"/><text x="71.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.31%)</title><rect x="68" y="1396" width="3" height="15" fill="rgb(220,227,23)"/><text x="71.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.31%)</title><rect x="68" y="1412" width="3" height="15" fill="rgb(243,163,10)"/><text x="71.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.31%)</title><rect x="68" y="1428" width="3" height="15" fill="rgb(215,202,31)"/><text x="71.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1444" width="3" height="15" fill="rgb(222,114,16)"/><text x="71.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1460" width="3" height="15" fill="rgb(246,54,1)"/><text x="71.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1476" width="3" height="15" fill="rgb(231,117,5)"/><text x="71.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1492" width="3" height="15" fill="rgb(207,142,5)"/><text x="71.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1508" width="3" height="15" fill="rgb(209,66,30)"/><text x="71.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1524" width="3" height="15" fill="rgb(209,56,31)"/><text x="71.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1540" width="3" height="15" fill="rgb(222,77,39)"/><text x="71.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1556" width="3" height="15" fill="rgb(224,209,38)"/><text x="71.00" y="1566.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.31%)</title><rect x="68" y="1572" width="3" height="15" fill="rgb(211,119,53)"/><text x="71.00" y="1582.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.31%)</title><rect x="71" y="372" width="4" height="15" fill="rgb(222,206,20)"/><text x="74.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="388" width="4" height="15" fill="rgb(216,135,19)"/><text x="74.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="404" width="4" height="15" fill="rgb(235,28,2)"/><text x="74.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="420" width="4" height="15" fill="rgb(226,117,11)"/><text x="74.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="436" width="4" height="15" fill="rgb(233,102,20)"/><text x="74.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="452" width="4" height="15" fill="rgb(220,68,17)"/><text x="74.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="71" y="468" width="4" height="15" fill="rgb(210,101,13)"/><text x="74.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="71" y="484" width="4" height="15" fill="rgb(226,174,50)"/><text x="74.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.31%)</title><rect x="71" y="500" width="4" height="15" fill="rgb(241,61,26)"/><text x="74.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="71" y="516" width="4" height="15" fill="rgb(228,79,12)"/><text x="74.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="71" y="532" width="4" height="15" fill="rgb(229,134,47)"/><text x="74.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="452" width="4" height="15" fill="rgb(247,143,39)"/><text x="78.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/mixins.py) (1 samples, 0.31%)</title><rect x="75" y="468" width="4" height="15" fill="rgb(214,13,9)"/><text x="78.00" y="478.50"></text></g><g><title>NDArrayOperatorsMixin (numpy/lib/mixins.py) (1 samples, 0.31%)</title><rect x="75" y="484" width="4" height="15" fill="rgb(217,96,14)"/><text x="78.00" y="494.50"></text></g><g><title>_binary_method (numpy/lib/mixins.py) (1 samples, 0.31%)</title><rect x="75" y="500" width="4" height="15" fill="rgb(211,82,15)"/><text x="78.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="68" width="72" height="15" fill="rgb(214,143,22)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="84" width="72" height="15" fill="rgb(232,86,8)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="100" width="72" height="15" fill="rgb(232,25,51)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 6.17%)</title><rect x="10" y="116" width="72" height="15" fill="rgb(217,218,49)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="132" width="72" height="15" fill="rgb(247,113,37)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (20 samples, 6.17%)</title><rect x="10" y="148" width="72" height="15" fill="rgb(214,137,3)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="164" width="72" height="15" fill="rgb(227,207,18)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.17%)</title><rect x="10" y="180" width="72" height="15" fill="rgb(223,124,51)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.01%)</title><rect x="35" y="196" width="47" height="15" fill="rgb(240,39,49)"/><text x="38.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.01%)</title><rect x="35" y="212" width="47" height="15" fill="rgb(218,120,43)"/><text x="38.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.01%)</title><rect x="35" y="228" width="47" height="15" fill="rgb(252,25,5)"/><text x="38.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.93%)</title><rect x="71" y="244" width="11" height="15" fill="rgb(206,161,10)"/><text x="74.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="260" width="11" height="15" fill="rgb(238,37,18)"/><text x="74.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="276" width="11" height="15" fill="rgb(250,67,37)"/><text x="74.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="292" width="11" height="15" fill="rgb(215,216,13)"/><text x="74.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="308" width="11" height="15" fill="rgb(242,188,10)"/><text x="74.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="324" width="11" height="15" fill="rgb(206,219,28)"/><text x="74.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="71" y="340" width="11" height="15" fill="rgb(219,159,54)"/><text x="74.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="71" y="356" width="11" height="15" fill="rgb(254,38,50)"/><text x="74.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.62%)</title><rect x="75" y="372" width="7" height="15" fill="rgb(218,6,10)"/><text x="78.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="75" y="388" width="7" height="15" fill="rgb(253,0,18)"/><text x="78.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="75" y="404" width="7" height="15" fill="rgb(239,202,12)"/><text x="78.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="75" y="420" width="7" height="15" fill="rgb(241,158,47)"/><text x="78.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="75" y="436" width="7" height="15" fill="rgb(209,1,22)"/><text x="78.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="79" y="452" width="3" height="15" fill="rgb(237,9,53)"/><text x="82.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="79" y="468" width="3" height="15" fill="rgb(249,195,38)"/><text x="82.00" y="478.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="79" y="484" width="3" height="15" fill="rgb(208,48,24)"/><text x="82.00" y="494.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.31%)</title><rect x="119" y="212" width="3" height="15" fill="rgb(206,49,17)"/><text x="122.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="119" y="228" width="3" height="15" fill="rgb(205,101,12)"/><text x="122.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="119" y="244" width="3" height="15" fill="rgb(251,98,34)"/><text x="122.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="119" y="260" width="3" height="15" fill="rgb(227,30,5)"/><text x="122.00" y="270.50"></text></g><g><title>0x7f030f720d07 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="126" y="244" width="4" height="15" fill="rgb(250,187,8)"/><text x="129.00" y="254.50"></text></g><g><title>0x7f030f720971 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="130" y="260" width="3" height="15" fill="rgb(251,140,45)"/><text x="133.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="133" y="292" width="4" height="15" fill="rgb(233,203,43)"/><text x="136.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="133" y="308" width="4" height="15" fill="rgb(239,222,6)"/><text x="136.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="137" y="292" width="4" height="15" fill="rgb(237,75,45)"/><text x="140.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="141" y="292" width="3" height="15" fill="rgb(223,128,13)"/><text x="144.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="141" y="308" width="3" height="15" fill="rgb(249,90,28)"/><text x="144.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="148" y="356" width="4" height="15" fill="rgb(242,215,13)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="148" y="372" width="4" height="15" fill="rgb(252,134,6)"/><text x="151.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="148" y="388" width="4" height="15" fill="rgb(232,47,33)"/><text x="151.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.93%)</title><rect x="144" y="340" width="11" height="15" fill="rgb(209,38,9)"/><text x="147.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="152" y="356" width="3" height="15" fill="rgb(245,201,47)"/><text x="155.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="155" y="340" width="4" height="15" fill="rgb(245,102,29)"/><text x="158.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="155" y="356" width="4" height="15" fill="rgb(251,90,48)"/><text x="158.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="155" y="372" width="4" height="15" fill="rgb(244,52,4)"/><text x="158.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="159" y="340" width="3" height="15" fill="rgb(206,73,47)"/><text x="162.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="162" y="340" width="4" height="15" fill="rgb(220,162,39)"/><text x="165.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="162" y="356" width="4" height="15" fill="rgb(245,29,2)"/><text x="165.00" y="366.50"></text></g><g><title>0x7f030f89fe71 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="162" y="372" width="4" height="15" fill="rgb(236,138,7)"/><text x="165.00" y="382.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.16%)</title><rect x="144" y="324" width="26" height="15" fill="rgb(252,187,6)"/><text x="147.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="340" width="4" height="15" fill="rgb(216,175,51)"/><text x="169.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="356" width="4" height="15" fill="rgb(251,181,50)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="372" width="4" height="15" fill="rgb(221,49,42)"/><text x="169.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="388" width="4" height="15" fill="rgb(229,74,22)"/><text x="169.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="404" width="4" height="15" fill="rgb(226,130,53)"/><text x="169.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="420" width="4" height="15" fill="rgb(226,126,35)"/><text x="169.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="436" width="4" height="15" fill="rgb(211,178,34)"/><text x="169.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="452" width="4" height="15" fill="rgb(217,46,39)"/><text x="169.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="468" width="4" height="15" fill="rgb(210,122,24)"/><text x="169.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="484" width="4" height="15" fill="rgb(240,156,4)"/><text x="169.00" y="494.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="166" y="500" width="4" height="15" fill="rgb(227,129,4)"/><text x="169.00" y="510.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.40%)</title><rect x="133" y="260" width="40" height="15" fill="rgb(234,95,3)"/><text x="136.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.40%)</title><rect x="133" y="276" width="40" height="15" fill="rgb(237,32,19)"/><text x="136.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.47%)</title><rect x="144" y="292" width="29" height="15" fill="rgb(241,199,18)"/><text x="147.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.47%)</title><rect x="144" y="308" width="29" height="15" fill="rgb(240,192,1)"/><text x="147.00" y="318.50">on..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="170" y="324" width="3" height="15" fill="rgb(225,1,13)"/><text x="173.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="170" y="340" width="3" height="15" fill="rgb(220,24,33)"/><text x="173.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="173" y="260" width="8" height="15" fill="rgb(246,196,48)"/><text x="176.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="181" y="260" width="3" height="15" fill="rgb(251,69,4)"/><text x="184.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.31%)</title><rect x="181" y="276" width="3" height="15" fill="rgb(216,90,22)"/><text x="184.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="181" y="292" width="3" height="15" fill="rgb(246,199,27)"/><text x="184.00" y="302.50"></text></g><g><title>0x7f030f72095e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="184" y="308" width="4" height="15" fill="rgb(244,6,18)"/><text x="187.00" y="318.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="184" y="260" width="8" height="15" fill="rgb(224,42,53)"/><text x="187.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="184" y="276" width="8" height="15" fill="rgb(229,57,39)"/><text x="187.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="184" y="292" width="8" height="15" fill="rgb(206,26,17)"/><text x="187.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="188" y="308" width="4" height="15" fill="rgb(235,214,1)"/><text x="191.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 5.86%)</title><rect x="130" y="244" width="69" height="15" fill="rgb(223,62,20)"/><text x="133.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="260" width="7" height="15" fill="rgb(228,67,23)"/><text x="195.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="276" width="7" height="15" fill="rgb(210,99,23)"/><text x="195.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="292" width="7" height="15" fill="rgb(236,185,6)"/><text x="195.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="308" width="7" height="15" fill="rgb(208,189,3)"/><text x="195.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="324" width="7" height="15" fill="rgb(244,214,30)"/><text x="195.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="340" width="7" height="15" fill="rgb(210,113,28)"/><text x="195.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="356" width="7" height="15" fill="rgb(240,6,14)"/><text x="195.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="372" width="7" height="15" fill="rgb(247,201,22)"/><text x="195.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="192" y="388" width="7" height="15" fill="rgb(205,24,17)"/><text x="195.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="244" width="4" height="15" fill="rgb(242,76,20)"/><text x="202.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="260" width="4" height="15" fill="rgb(207,145,15)"/><text x="202.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (34 samples, 10.49%)</title><rect x="82" y="100" width="124" height="15" fill="rgb(222,128,47)"/><text x="85.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (34 samples, 10.49%)</title><rect x="82" y="116" width="124" height="15" fill="rgb(241,60,40)"/><text x="85.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 9.57%)</title><rect x="93" y="132" width="113" height="15" fill="rgb(207,128,4)"/><text x="96.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 9.57%)</title><rect x="93" y="148" width="113" height="15" fill="rgb(232,40,25)"/><text x="96.00" y="158.50">run (mlprodic..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 8.95%)</title><rect x="101" y="164" width="105" height="15" fill="rgb(245,129,52)"/><text x="104.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (26 samples, 8.02%)</title><rect x="111" y="180" width="95" height="15" fill="rgb(241,52,41)"/><text x="114.00" y="190.50">run (mlprod..</text></g><g><title>run (onnxruntime/capi/session.py) (25 samples, 7.72%)</title><rect x="115" y="196" width="91" height="15" fill="rgb(238,37,7)"/><text x="118.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 7.10%)</title><rect x="122" y="212" width="84" height="15" fill="rgb(209,165,7)"/><text x="125.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 7.10%)</title><rect x="122" y="228" width="84" height="15" fill="rgb(244,206,3)"/><text x="125.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="203" y="244" width="3" height="15" fill="rgb(250,114,30)"/><text x="206.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="203" y="260" width="3" height="15" fill="rgb(218,106,36)"/><text x="206.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="203" y="276" width="3" height="15" fill="rgb(206,194,28)"/><text x="206.00" y="286.50"></text></g><g><title>0x7f02cf790ff9 (?) (1 samples, 0.31%)</title><rect x="206" y="228" width="4" height="15" fill="rgb(253,198,23)"/><text x="209.00" y="238.50"></text></g><g><title>0x7f02cf78b57e (?) (1 samples, 0.31%)</title><rect x="206" y="244" width="4" height="15" fill="rgb(235,37,4)"/><text x="209.00" y="254.50"></text></g><g><title>0x7f02cf7b8426 (?) (1 samples, 0.31%)</title><rect x="206" y="260" width="4" height="15" fill="rgb(254,80,34)"/><text x="209.00" y="270.50"></text></g><g><title>0x7f02cfbdc0b2 (?) (1 samples, 0.31%)</title><rect x="206" y="276" width="4" height="15" fill="rgb(243,39,8)"/><text x="209.00" y="286.50"></text></g><g><title>0x7f02cf8319fc (?) (1 samples, 0.31%)</title><rect x="206" y="292" width="4" height="15" fill="rgb(218,180,52)"/><text x="209.00" y="302.50"></text></g><g><title>0x7f02cf831760 (?) (1 samples, 0.31%)</title><rect x="206" y="308" width="4" height="15" fill="rgb(239,111,3)"/><text x="209.00" y="318.50"></text></g><g><title>0x7f02cfae4411 (?) (1 samples, 0.31%)</title><rect x="206" y="324" width="4" height="15" fill="rgb(206,118,28)"/><text x="209.00" y="334.50"></text></g><g><title>0x7f02cfbd4d34 (?) (1 samples, 0.31%)</title><rect x="206" y="340" width="4" height="15" fill="rgb(245,207,26)"/><text x="209.00" y="350.50"></text></g><g><title>0x7f02cfbd4741 (?) (1 samples, 0.31%)</title><rect x="206" y="356" width="4" height="15" fill="rgb(215,227,14)"/><text x="209.00" y="366.50"></text></g><g><title>0x7f02cf758360 (?) (1 samples, 0.31%)</title><rect x="206" y="372" width="4" height="15" fill="rgb(205,73,5)"/><text x="209.00" y="382.50"></text></g><g><title>onnxruntime::KernelRegistry::Register (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="210" y="340" width="3" height="15" fill="rgb(205,228,10)"/><text x="213.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt; &gt; &gt;::_M_emplace_equal&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, onnxruntime::KernelCreateInfo&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="210" y="356" width="3" height="15" fill="rgb(253,31,0)"/><text x="213.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="210" y="372" width="3" height="15" fill="rgb(213,187,22)"/><text x="213.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="210" y="388" width="3" height="15" fill="rgb(241,73,5)"/><text x="213.00" y="398.50"></text></g><g><title>0x7f030f7228cb (libc-2.29.so) (1 samples, 0.31%)</title><rect x="210" y="404" width="3" height="15" fill="rgb(235,186,34)"/><text x="213.00" y="414.50"></text></g><g><title>0x7f030f721743 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="210" y="420" width="3" height="15" fill="rgb(229,88,26)"/><text x="213.00" y="430.50"></text></g><g><title>__default_morecore (libc-2.29.so) (1 samples, 0.31%)</title><rect x="210" y="436" width="3" height="15" fill="rgb(205,88,40)"/><text x="213.00" y="446.50"></text></g><g><title>__sbrk (libc-2.29.so) (1 samples, 0.31%)</title><rect x="210" y="452" width="3" height="15" fill="rgb(225,80,43)"/><text x="213.00" y="462.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (37 samples, 11.42%)</title><rect x="82" y="68" width="135" height="15" fill="rgb(213,187,27)"/><text x="85.00" y="78.50">profile_ort (benc..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (37 samples, 11.42%)</title><rect x="82" y="84" width="135" height="15" fill="rgb(217,76,53)"/><text x="85.00" y="94.50">setup_profile (be..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.93%)</title><rect x="206" y="100" width="11" height="15" fill="rgb(208,84,3)"/><text x="209.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.93%)</title><rect x="206" y="116" width="11" height="15" fill="rgb(233,218,41)"/><text x="209.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.93%)</title><rect x="206" y="132" width="11" height="15" fill="rgb(226,35,25)"/><text x="209.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.93%)</title><rect x="206" y="148" width="11" height="15" fill="rgb(242,207,41)"/><text x="209.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.93%)</title><rect x="206" y="164" width="11" height="15" fill="rgb(212,40,43)"/><text x="209.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py) (3 samples, 0.93%)</title><rect x="206" y="180" width="11" height="15" fill="rgb(252,187,15)"/><text x="209.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py) (3 samples, 0.93%)</title><rect x="206" y="196" width="11" height="15" fill="rgb(240,166,22)"/><text x="209.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py) (3 samples, 0.93%)</title><rect x="206" y="212" width="11" height="15" fill="rgb(224,60,6)"/><text x="209.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="228" width="7" height="15" fill="rgb(245,155,17)"/><text x="213.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}, void, onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, pybind11::name, pybind11::is_method, pybind11::sibling, char [40]&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}&amp;&amp;, void (*)(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [40])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.539] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="244" width="7" height="15" fill="rgb(238,97,30)"/><text x="213.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="260" width="7" height="15" fill="rgb(243,113,28)"/><text x="213.00" y="270.50"></text></g><g><title>onnxruntime::KernelRegistryManager::RegisterKernels (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="276" width="7" height="15" fill="rgb(232,123,28)"/><text x="213.00" y="286.50"></text></g><g><title>onnxruntime::CPUExecutionProvider::GetKernelRegistry (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="292" width="7" height="15" fill="rgb(229,59,19)"/><text x="213.00" y="302.50"></text></g><g><title>onnxruntime::GetCpuKernelRegistry (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="308" width="7" height="15" fill="rgb(238,104,40)"/><text x="213.00" y="318.50"></text></g><g><title>onnxruntime::contrib::RegisterCpuContribKernels (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="210" y="324" width="7" height="15" fill="rgb(220,150,25)"/><text x="213.00" y="334.50"></text></g><g><title>onnxruntime::contrib::BuildKernelCreateInfo&lt;onnxruntime::contrib::kCpuExecutionProvider_DynamicSlice_kOnnxDomain_ver1_float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="213" y="340" width="4" height="15" fill="rgb(223,211,40)"/><text x="216.00" y="350.50"></text></g><g><title>onnxruntime::KernelDefBuilder::TypeConstraint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="213" y="356" width="4" height="15" fill="rgb(235,1,21)"/><text x="216.00" y="366.50"></text></g><g><title>onnxruntime::KernelDefBuilder::TypeConstraint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="213" y="372" width="4" height="15" fill="rgb(211,145,31)"/><text x="216.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="213" y="388" width="4" height="15" fill="rgb(242,79,44)"/><text x="216.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="213" y="404" width="4" height="15" fill="rgb(221,165,51)"/><text x="216.00" y="414.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.62%)</title><rect x="264" y="180" width="8" height="15" fill="rgb(242,217,23)"/><text x="267.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.31%)</title><rect x="348" y="212" width="4" height="15" fill="rgb(219,51,0)"/><text x="351.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="348" y="228" width="4" height="15" fill="rgb(224,193,36)"/><text x="351.00" y="238.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="374" y="260" width="3" height="15" fill="rgb(222,35,12)"/><text x="377.00" y="270.50"></text></g><g><title>0x7f030f74114a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="377" y="276" width="4" height="15" fill="rgb(230,74,8)"/><text x="380.00" y="286.50"></text></g><g><title>0x7f030f7fe130 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="392" y="292" width="4" height="15" fill="rgb(217,41,14)"/><text x="395.00" y="302.50"></text></g><g><title>0x7f030f736730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="399" y="324" width="4" height="15" fill="rgb(212,189,41)"/><text x="402.00" y="334.50"></text></g><g><title>0x7f030f736782 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="403" y="324" width="3" height="15" fill="rgb(236,75,47)"/><text x="406.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(207,0,42)"/><text x="409.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="414" y="372" width="3" height="15" fill="rgb(243,188,46)"/><text x="417.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 1.23%)</title><rect x="406" y="324" width="15" height="15" fill="rgb(245,97,32)"/><text x="409.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.93%)</title><rect x="410" y="340" width="11" height="15" fill="rgb(231,82,8)"/><text x="413.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.93%)</title><rect x="410" y="356" width="11" height="15" fill="rgb(234,113,16)"/><text x="413.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="417" y="372" width="4" height="15" fill="rgb(221,7,40)"/><text x="420.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="417" y="388" width="4" height="15" fill="rgb(225,44,18)"/><text x="420.00" y="398.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (12 samples, 3.70%)</title><rect x="381" y="276" width="44" height="15" fill="rgb(233,17,37)"/><text x="384.00" y="286.50">argm..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 2.47%)</title><rect x="396" y="292" width="29" height="15" fill="rgb(246,29,3)"/><text x="399.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c) (7 samples, 2.16%)</title><rect x="399" y="308" width="26" height="15" fill="rgb(228,204,0)"/><text x="402.00" y="318.50">a..</text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="421" y="324" width="4" height="15" fill="rgb(249,186,23)"/><text x="424.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (15 samples, 4.63%)</title><rect x="374" y="244" width="54" height="15" fill="rgb(228,165,41)"/><text x="377.00" y="254.50">argma..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 4.32%)</title><rect x="377" y="260" width="51" height="15" fill="rgb(242,176,22)"/><text x="380.00" y="270.50">array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.31%)</title><rect x="425" y="276" width="3" height="15" fill="rgb(252,141,25)"/><text x="428.00" y="286.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.31%)</title><rect x="428" y="244" width="4" height="15" fill="rgb(248,167,20)"/><text x="431.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="447" y="324" width="3" height="15" fill="rgb(252,220,53)"/><text x="450.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="450" y="340" width="4" height="15" fill="rgb(240,126,5)"/><text x="453.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.31%)</title><rect x="454" y="340" width="3" height="15" fill="rgb(226,207,16)"/><text x="457.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="454" y="356" width="3" height="15" fill="rgb(208,185,29)"/><text x="457.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="454" y="372" width="3" height="15" fill="rgb(217,153,1)"/><text x="457.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.54%)</title><rect x="443" y="276" width="18" height="15" fill="rgb(248,197,22)"/><text x="446.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.54%)</title><rect x="443" y="292" width="18" height="15" fill="rgb(220,221,20)"/><text x="446.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 1.23%)</title><rect x="447" y="308" width="14" height="15" fill="rgb(227,80,41)"/><text x="450.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 0.93%)</title><rect x="450" y="324" width="11" height="15" fill="rgb(205,2,22)"/><text x="453.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.31%)</title><rect x="457" y="340" width="4" height="15" fill="rgb(237,192,50)"/><text x="460.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 2.78%)</title><rect x="432" y="244" width="33" height="15" fill="rgb(242,175,49)"/><text x="435.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (6 samples, 1.85%)</title><rect x="443" y="260" width="22" height="15" fill="rgb(214,52,43)"/><text x="446.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="461" y="276" width="4" height="15" fill="rgb(226,190,42)"/><text x="464.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.31%)</title><rect x="461" y="292" width="4" height="15" fill="rgb(221,102,53)"/><text x="464.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="461" y="308" width="4" height="15" fill="rgb(206,31,33)"/><text x="464.00" y="318.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(248,15,27)"/><text x="468.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.31%)</title><rect x="472" y="324" width="4" height="15" fill="rgb(233,41,53)"/><text x="475.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="472" y="340" width="4" height="15" fill="rgb(238,19,5)"/><text x="475.00" y="350.50"></text></g><g><title>0x7f030f6d87c2 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="472" y="356" width="4" height="15" fill="rgb(209,182,15)"/><text x="475.00" y="366.50"></text></g><g><title>0x7f030f6d88c0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="472" y="372" width="4" height="15" fill="rgb(249,151,2)"/><text x="475.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.93%)</title><rect x="468" y="292" width="11" height="15" fill="rgb(218,218,3)"/><text x="471.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.93%)</title><rect x="468" y="308" width="11" height="15" fill="rgb(218,200,20)"/><text x="471.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.31%)</title><rect x="476" y="324" width="3" height="15" fill="rgb(213,39,14)"/><text x="479.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="476" y="340" width="3" height="15" fill="rgb(226,50,52)"/><text x="479.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="483" y="308" width="4" height="15" fill="rgb(245,173,13)"/><text x="486.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (36 samples, 11.11%)</title><rect x="359" y="228" width="131" height="15" fill="rgb(217,203,7)"/><text x="362.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.16%)</title><rect x="465" y="244" width="25" height="15" fill="rgb(246,47,7)"/><text x="468.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.16%)</title><rect x="465" y="260" width="25" height="15" fill="rgb(205,60,0)"/><text x="468.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.16%)</title><rect x="465" y="276" width="25" height="15" fill="rgb(251,143,29)"/><text x="468.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="479" y="292" width="11" height="15" fill="rgb(220,95,4)"/><text x="482.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="487" y="308" width="3" height="15" fill="rgb(224,130,40)"/><text x="490.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="487" y="324" width="3" height="15" fill="rgb(211,69,47)"/><text x="490.00" y="334.50"></text></g><g><title>0x7f030f741120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(228,117,51)"/><text x="511.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.31%)</title><rect x="512" y="276" width="4" height="15" fill="rgb(206,89,26)"/><text x="515.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.62%)</title><rect x="516" y="276" width="7" height="15" fill="rgb(230,160,0)"/><text x="519.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.62%)</title><rect x="516" y="292" width="7" height="15" fill="rgb(218,146,25)"/><text x="519.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (2 samples, 0.62%)</title><rect x="516" y="308" width="7" height="15" fill="rgb(222,77,22)"/><text x="519.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.62%)</title><rect x="516" y="324" width="7" height="15" fill="rgb(228,225,42)"/><text x="519.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.23%)</title><rect x="512" y="260" width="15" height="15" fill="rgb(231,212,48)"/><text x="515.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.31%)</title><rect x="523" y="276" width="4" height="15" fill="rgb(253,102,10)"/><text x="526.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.31%)</title><rect x="523" y="292" width="4" height="15" fill="rgb(219,30,12)"/><text x="526.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="523" y="308" width="4" height="15" fill="rgb(223,10,30)"/><text x="526.00" y="318.50"></text></g><g><title>0x7f030f74115e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="530" y="308" width="4" height="15" fill="rgb(215,182,23)"/><text x="533.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.93%)</title><rect x="534" y="324" width="11" height="15" fill="rgb(232,201,39)"/><text x="537.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.93%)</title><rect x="534" y="340" width="11" height="15" fill="rgb(239,9,36)"/><text x="537.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.93%)</title><rect x="534" y="356" width="11" height="15" fill="rgb(224,209,50)"/><text x="537.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.93%)</title><rect x="534" y="372" width="11" height="15" fill="rgb(229,207,6)"/><text x="537.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.93%)</title><rect x="534" y="388" width="11" height="15" fill="rgb(240,59,46)"/><text x="537.00" y="398.50"></text></g><g><title>0x7f030f7fefa0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="541" y="404" width="4" height="15" fill="rgb(212,134,14)"/><text x="544.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="549" y="388" width="3" height="15" fill="rgb(214,110,44)"/><text x="552.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.31%)</title><rect x="549" y="404" width="3" height="15" fill="rgb(205,148,26)"/><text x="552.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.93%)</title><rect x="545" y="372" width="11" height="15" fill="rgb(208,150,4)"/><text x="548.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="552" y="388" width="4" height="15" fill="rgb(229,102,16)"/><text x="555.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.31%)</title><rect x="556" y="372" width="3" height="15" fill="rgb(252,136,14)"/><text x="559.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.31%)</title><rect x="556" y="388" width="3" height="15" fill="rgb(205,45,3)"/><text x="559.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="556" y="404" width="3" height="15" fill="rgb(229,45,46)"/><text x="559.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="556" y="420" width="3" height="15" fill="rgb(244,216,44)"/><text x="559.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="556" y="436" width="3" height="15" fill="rgb(237,200,53)"/><text x="559.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="556" y="452" width="3" height="15" fill="rgb(228,80,22)"/><text x="559.00" y="462.50"></text></g><g><title>array_sum (methods.c) (10 samples, 3.09%)</title><rect x="527" y="260" width="36" height="15" fill="rgb(247,125,16)"/><text x="530.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 3.09%)</title><rect x="527" y="276" width="36" height="15" fill="rgb(229,79,34)"/><text x="530.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 2.78%)</title><rect x="530" y="292" width="33" height="15" fill="rgb(254,8,13)"/><text x="533.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 2.47%)</title><rect x="534" y="308" width="29" height="15" fill="rgb(208,169,30)"/><text x="537.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.54%)</title><rect x="545" y="324" width="18" height="15" fill="rgb(245,127,29)"/><text x="548.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.54%)</title><rect x="545" y="340" width="18" height="15" fill="rgb(242,184,40)"/><text x="548.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.54%)</title><rect x="545" y="356" width="18" height="15" fill="rgb(228,133,30)"/><text x="548.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.31%)</title><rect x="559" y="372" width="4" height="15" fill="rgb(219,167,46)"/><text x="562.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="559" y="388" width="4" height="15" fill="rgb(222,173,36)"/><text x="562.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="559" y="404" width="4" height="15" fill="rgb(216,14,23)"/><text x="562.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="559" y="420" width="4" height="15" fill="rgb(235,131,17)"/><text x="562.00" y="430.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.31%)</title><rect x="559" y="436" width="4" height="15" fill="rgb(233,127,8)"/><text x="562.00" y="446.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.62%)</title><rect x="563" y="292" width="7" height="15" fill="rgb(248,138,31)"/><text x="566.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="567" y="308" width="3" height="15" fill="rgb(221,111,14)"/><text x="570.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="570" y="308" width="4" height="15" fill="rgb(223,192,33)"/><text x="573.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="574" y="340" width="4" height="15" fill="rgb(219,98,9)"/><text x="577.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="578" y="340" width="3" height="15" fill="rgb(224,115,42)"/><text x="581.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.54%)</title><rect x="574" y="324" width="18" height="15" fill="rgb(248,78,4)"/><text x="577.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (3 samples, 0.93%)</title><rect x="581" y="340" width="11" height="15" fill="rgb(217,145,32)"/><text x="584.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.62%)</title><rect x="585" y="356" width="7" height="15" fill="rgb(239,189,16)"/><text x="588.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="589" y="372" width="3" height="15" fill="rgb(207,229,10)"/><text x="592.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.16%)</title><rect x="570" y="292" width="26" height="15" fill="rgb(224,113,39)"/><text x="573.00" y="302.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.85%)</title><rect x="574" y="308" width="22" height="15" fill="rgb(243,223,46)"/><text x="577.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="592" y="324" width="4" height="15" fill="rgb(242,148,47)"/><text x="595.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (106 samples, 32.72%)</title><rect x="217" y="68" width="386" height="15" fill="rgb(236,191,11)"/><text x="220.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (106 samples, 32.72%)</title><rect x="217" y="84" width="386" height="15" fill="rgb(220,203,42)"/><text x="220.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (106 samples, 32.72%)</title><rect x="217" y="100" width="386" height="15" fill="rgb(206,122,5)"/><text x="220.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (106 samples, 32.72%)</title><rect x="217" y="116" width="386" height="15" fill="rgb(225,31,7)"/><text x="220.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (104 samples, 32.10%)</title><rect x="224" y="132" width="379" height="15" fill="rgb(236,33,3)"/><text x="227.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (99 samples, 30.56%)</title><rect x="243" y="148" width="360" height="15" fill="rgb(209,0,17)"/><text x="246.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (97 samples, 29.94%)</title><rect x="250" y="164" width="353" height="15" fill="rgb(208,135,1)"/><text x="253.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (91 samples, 28.09%)</title><rect x="272" y="180" width="331" height="15" fill="rgb(211,125,47)"/><text x="275.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (71 samples, 21.91%)</title><rect x="345" y="196" width="258" height="15" fill="rgb(232,192,38)"/><text x="348.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (69 samples, 21.30%)</title><rect x="352" y="212" width="251" height="15" fill="rgb(223,206,34)"/><text x="355.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (31 samples, 9.57%)</title><rect x="490" y="228" width="113" height="15" fill="rgb(213,143,54)"/><text x="493.00" y="238.50">_run (mlprodi..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 9.26%)</title><rect x="494" y="244" width="109" height="15" fill="rgb(228,82,37)"/><text x="497.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.40%)</title><rect x="563" y="260" width="40" height="15" fill="rgb(227,199,19)"/><text x="566.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.40%)</title><rect x="563" y="276" width="40" height="15" fill="rgb(252,78,8)"/><text x="566.00" y="286.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.62%)</title><rect x="596" y="292" width="7" height="15" fill="rgb(233,149,51)"/><text x="599.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.31%)</title><rect x="600" y="308" width="3" height="15" fill="rgb(248,93,21)"/><text x="603.00" y="318.50"></text></g><g><title>0x7f030f7fed21 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="621" y="164" width="4" height="15" fill="rgb(223,195,16)"/><text x="624.00" y="174.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.31%)</title><rect x="647" y="180" width="3" height="15" fill="rgb(248,42,19)"/><text x="650.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="647" y="196" width="3" height="15" fill="rgb(230,220,15)"/><text x="650.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.31%)</title><rect x="647" y="212" width="3" height="15" fill="rgb(210,157,51)"/><text x="650.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="647" y="228" width="3" height="15" fill="rgb(206,102,46)"/><text x="650.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="647" y="244" width="3" height="15" fill="rgb(254,181,45)"/><text x="650.00" y="254.50"></text></g><g><title>0x7f030f741158 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="661" y="228" width="4" height="15" fill="rgb(207,124,24)"/><text x="664.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="665" y="244" width="4" height="15" fill="rgb(213,12,36)"/><text x="668.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="665" y="260" width="4" height="15" fill="rgb(238,172,45)"/><text x="668.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.31%)</title><rect x="665" y="276" width="4" height="15" fill="rgb(211,212,40)"/><text x="668.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.31%)</title><rect x="665" y="292" width="4" height="15" fill="rgb(243,3,17)"/><text x="668.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.31%)</title><rect x="665" y="308" width="4" height="15" fill="rgb(229,86,31)"/><text x="668.00" y="318.50"></text></g><g><title>0x7f030f736757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="669" y="260" width="3" height="15" fill="rgb(220,209,5)"/><text x="672.00" y="270.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.31%)</title><rect x="676" y="308" width="4" height="15" fill="rgb(219,71,49)"/><text x="679.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.93%)</title><rect x="672" y="292" width="11" height="15" fill="rgb(240,155,6)"/><text x="675.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="680" y="308" width="3" height="15" fill="rgb(226,136,40)"/><text x="683.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.62%)</title><rect x="683" y="292" width="8" height="15" fill="rgb(238,190,33)"/><text x="686.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.62%)</title><rect x="683" y="308" width="8" height="15" fill="rgb(250,95,25)"/><text x="686.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.62%)</title><rect x="683" y="324" width="8" height="15" fill="rgb(242,223,23)"/><text x="686.00" y="334.50"></text></g><g><title>0x7f030f6d8a19 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(245,166,10)"/><text x="690.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.31%)</title><rect x="687" y="356" width="4" height="15" fill="rgb(238,142,42)"/><text x="690.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.31%)</title><rect x="691" y="292" width="3" height="15" fill="rgb(247,173,16)"/><text x="694.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.62%)</title><rect x="694" y="308" width="7" height="15" fill="rgb(234,114,25)"/><text x="697.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.31%)</title><rect x="698" y="324" width="3" height="15" fill="rgb(252,156,45)"/><text x="701.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.78%)</title><rect x="672" y="276" width="33" height="15" fill="rgb(211,105,2)"/><text x="675.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="694" y="292" width="11" height="15" fill="rgb(208,18,44)"/><text x="697.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="701" y="308" width="4" height="15" fill="rgb(222,185,6)"/><text x="704.00" y="318.50"></text></g><g><title>array_sum (methods.c) (16 samples, 4.94%)</title><rect x="650" y="180" width="59" height="15" fill="rgb(238,7,42)"/><text x="653.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (16 samples, 4.94%)</title><rect x="650" y="196" width="59" height="15" fill="rgb(217,138,47)"/><text x="653.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.32%)</title><rect x="658" y="212" width="51" height="15" fill="rgb(213,4,5)"/><text x="661.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 3.70%)</title><rect x="665" y="228" width="44" height="15" fill="rgb(225,214,54)"/><text x="668.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 3.40%)</title><rect x="669" y="244" width="40" height="15" fill="rgb(239,137,34)"/><text x="672.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.09%)</title><rect x="672" y="260" width="37" height="15" fill="rgb(232,212,48)"/><text x="675.00" y="270.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.31%)</title><rect x="705" y="276" width="4" height="15" fill="rgb(228,130,8)"/><text x="708.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="734" y="244" width="4" height="15" fill="rgb(227,101,52)"/><text x="737.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.31%)</title><rect x="734" y="260" width="4" height="15" fill="rgb(252,64,3)"/><text x="737.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="734" y="276" width="4" height="15" fill="rgb(244,104,53)"/><text x="737.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.62%)</title><rect x="734" y="196" width="8" height="15" fill="rgb(237,131,14)"/><text x="737.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.62%)</title><rect x="734" y="212" width="8" height="15" fill="rgb(224,155,9)"/><text x="737.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.62%)</title><rect x="734" y="228" width="8" height="15" fill="rgb(207,152,20)"/><text x="737.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="738" y="244" width="4" height="15" fill="rgb(251,154,0)"/><text x="741.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="738" y="260" width="4" height="15" fill="rgb(220,86,43)"/><text x="741.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="745" y="276" width="7" height="15" fill="rgb(238,162,27)"/><text x="748.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="749" y="292" width="3" height="15" fill="rgb(248,70,14)"/><text x="752.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.31%)</title><rect x="749" y="308" width="3" height="15" fill="rgb(238,69,44)"/><text x="752.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="749" y="324" width="3" height="15" fill="rgb(251,9,46)"/><text x="752.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="749" y="340" width="3" height="15" fill="rgb(215,28,46)"/><text x="752.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="745" y="244" width="11" height="15" fill="rgb(233,111,35)"/><text x="748.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="745" y="260" width="11" height="15" fill="rgb(247,54,37)"/><text x="748.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="752" y="276" width="4" height="15" fill="rgb(246,47,4)"/><text x="755.00" y="286.50"></text></g><g><title>array_add (number.c) (5 samples, 1.54%)</title><rect x="742" y="196" width="18" height="15" fill="rgb(208,83,42)"/><text x="745.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.23%)</title><rect x="745" y="212" width="15" height="15" fill="rgb(221,188,13)"/><text x="748.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.23%)</title><rect x="745" y="228" width="15" height="15" fill="rgb(247,221,11)"/><text x="748.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="756" y="244" width="4" height="15" fill="rgb(229,79,41)"/><text x="759.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="760" y="196" width="3" height="15" fill="rgb(235,36,23)"/><text x="763.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="760" y="212" width="3" height="15" fill="rgb(223,52,45)"/><text x="763.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="760" y="228" width="3" height="15" fill="rgb(205,22,14)"/><text x="763.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.23%)</title><rect x="822" y="212" width="14" height="15" fill="rgb(210,161,8)"/><text x="825.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.93%)</title><rect x="836" y="212" width="11" height="15" fill="rgb(253,216,16)"/><text x="839.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.62%)</title><rect x="847" y="212" width="7" height="15" fill="rgb(243,99,52)"/><text x="850.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 3.40%)</title><rect x="854" y="212" width="41" height="15" fill="rgb(222,95,43)"/><text x="857.00" y="222.50">_as..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.16%)</title><rect x="869" y="228" width="26" height="15" fill="rgb(212,173,49)"/><text x="872.00" y="238.50">_..</text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.62%)</title><rect x="895" y="212" width="7" height="15" fill="rgb(219,146,1)"/><text x="898.00" y="222.50"></text></g><g><title>0x7f030f736b89 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="913" y="228" width="3" height="15" fill="rgb(225,180,28)"/><text x="916.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.85%)</title><rect x="902" y="212" width="22" height="15" fill="rgb(223,35,45)"/><text x="905.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.62%)</title><rect x="916" y="228" width="8" height="15" fill="rgb(236,184,35)"/><text x="919.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.31%)</title><rect x="924" y="212" width="3" height="15" fill="rgb(224,8,44)"/><text x="927.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (52 samples, 16.05%)</title><rect x="763" y="196" width="190" height="15" fill="rgb(237,124,41)"/><text x="766.00" y="206.50">check_array (sklearn/uti..</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.16%)</title><rect x="927" y="212" width="26" height="15" fill="rgb(213,34,20)"/><text x="930.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (6 samples, 1.85%)</title><rect x="931" y="228" width="22" height="15" fill="rgb(216,129,11)"/><text x="934.00" y="238.50">_..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="978" y="228" width="4" height="15" fill="rgb(210,185,42)"/><text x="981.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 3.09%)</title><rect x="953" y="196" width="36" height="15" fill="rgb(242,229,24)"/><text x="956.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 2.78%)</title><rect x="956" y="212" width="33" height="15" fill="rgb(249,45,44)"/><text x="959.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="982" y="228" width="7" height="15" fill="rgb(215,76,33)"/><text x="985.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (3 samples, 0.93%)</title><rect x="996" y="212" width="11" height="15" fill="rgb(253,107,37)"/><text x="999.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.31%)</title><rect x="1007" y="228" width="4" height="15" fill="rgb(231,81,45)"/><text x="1010.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.62%)</title><rect x="1018" y="260" width="8" height="15" fill="rgb(252,176,54)"/><text x="1021.00" y="270.50"></text></g><g><title>0x7f030e9434f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1026" y="340" width="3" height="15" fill="rgb(216,173,3)"/><text x="1029.00" y="350.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.62%)</title><rect x="1026" y="324" width="7" height="15" fill="rgb(209,6,15)"/><text x="1029.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1029" y="340" width="4" height="15" fill="rgb(234,77,11)"/><text x="1032.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1033" y="324" width="4" height="15" fill="rgb(231,47,10)"/><text x="1036.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1037" y="324" width="3" height="15" fill="rgb(252,21,5)"/><text x="1040.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.54%)</title><rect x="1026" y="276" width="18" height="15" fill="rgb(236,3,7)"/><text x="1029.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.54%)</title><rect x="1026" y="292" width="18" height="15" fill="rgb(254,11,0)"/><text x="1029.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.54%)</title><rect x="1026" y="308" width="18" height="15" fill="rgb(231,51,21)"/><text x="1029.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.31%)</title><rect x="1040" y="324" width="4" height="15" fill="rgb(246,92,11)"/><text x="1043.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.85%)</title><rect x="1026" y="260" width="21" height="15" fill="rgb(254,32,4)"/><text x="1029.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1044" y="276" width="3" height="15" fill="rgb(209,144,12)"/><text x="1047.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1044" y="292" width="3" height="15" fill="rgb(241,161,34)"/><text x="1047.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.62%)</title><rect x="1047" y="260" width="8" height="15" fill="rgb(209,106,20)"/><text x="1050.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="1051" y="276" width="4" height="15" fill="rgb(241,169,51)"/><text x="1054.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="1051" y="292" width="4" height="15" fill="rgb(245,186,40)"/><text x="1054.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="1051" y="308" width="4" height="15" fill="rgb(225,145,31)"/><text x="1054.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (97 samples, 29.94%)</title><rect x="709" y="180" width="353" height="15" fill="rgb(212,76,8)"/><text x="712.00" y="190.50">decision_function (sklearn/linear_model/_base.p..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (20 samples, 6.17%)</title><rect x="989" y="196" width="73" height="15" fill="rgb(231,42,37)"/><text x="992.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 4.63%)</title><rect x="1007" y="212" width="55" height="15" fill="rgb(220,70,15)"/><text x="1010.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.32%)</title><rect x="1011" y="228" width="51" height="15" fill="rgb(252,218,36)"/><text x="1014.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 4.32%)</title><rect x="1011" y="244" width="51" height="15" fill="rgb(247,211,13)"/><text x="1014.00" y="254.50">PyUFu..</text></g><g><title>_initialize_variable_parts (ufunc_object.c) (2 samples, 0.62%)</title><rect x="1055" y="260" width="7" height="15" fill="rgb(232,181,54)"/><text x="1058.00" y="270.50"></text></g><g><title>0x7f030f740db3 (libc-2.29.so) (2 samples, 0.62%)</title><rect x="1055" y="276" width="7" height="15" fill="rgb(235,166,3)"/><text x="1058.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="1062" y="196" width="4" height="15" fill="rgb(241,207,14)"/><text x="1065.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="1062" y="212" width="4" height="15" fill="rgb(254,202,18)"/><text x="1065.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.31%)</title><rect x="1062" y="228" width="4" height="15" fill="rgb(221,104,54)"/><text x="1065.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="1062" y="244" width="4" height="15" fill="rgb(243,89,54)"/><text x="1065.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1066" y="212" width="3" height="15" fill="rgb(214,152,40)"/><text x="1069.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1066" y="228" width="3" height="15" fill="rgb(248,195,32)"/><text x="1069.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1069" y="212" width="4" height="15" fill="rgb(227,208,19)"/><text x="1072.00" y="222.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1069" y="228" width="4" height="15" fill="rgb(211,119,36)"/><text x="1072.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1073" y="212" width="4" height="15" fill="rgb(238,188,15)"/><text x="1076.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1073" y="228" width="4" height="15" fill="rgb(249,194,32)"/><text x="1076.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.31%)</title><rect x="1077" y="260" width="3" height="15" fill="rgb(209,63,12)"/><text x="1080.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1077" y="276" width="3" height="15" fill="rgb(247,201,53)"/><text x="1080.00" y="286.50"></text></g><g><title>0x7f030f6d87a5 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1077" y="292" width="3" height="15" fill="rgb(226,219,17)"/><text x="1080.00" y="302.50"></text></g><g><title>0x7f030f6d8a37 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1077" y="308" width="3" height="15" fill="rgb(210,48,41)"/><text x="1080.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.62%)</title><rect x="1077" y="228" width="7" height="15" fill="rgb(214,80,5)"/><text x="1080.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.62%)</title><rect x="1077" y="244" width="7" height="15" fill="rgb(207,92,54)"/><text x="1080.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.31%)</title><rect x="1080" y="260" width="4" height="15" fill="rgb(207,83,18)"/><text x="1083.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.31%)</title><rect x="1084" y="244" width="4" height="15" fill="rgb(208,74,6)"/><text x="1087.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1088" y="244" width="3" height="15" fill="rgb(212,74,9)"/><text x="1091.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1088" y="260" width="3" height="15" fill="rgb(227,74,14)"/><text x="1091.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1091" y="244" width="4" height="15" fill="rgb(213,198,25)"/><text x="1094.00" y="254.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.31%)</title><rect x="1095" y="244" width="3" height="15" fill="rgb(233,151,12)"/><text x="1098.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="1098" y="244" width="4" height="15" fill="rgb(234,171,29)"/><text x="1101.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.47%)</title><rect x="1077" y="212" width="29" height="15" fill="rgb(208,10,29)"/><text x="1080.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.85%)</title><rect x="1084" y="228" width="22" height="15" fill="rgb(227,59,8)"/><text x="1087.00" y="238.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="1102" y="244" width="4" height="15" fill="rgb(211,63,0)"/><text x="1105.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.62%)</title><rect x="1106" y="212" width="7" height="15" fill="rgb(241,226,10)"/><text x="1109.00" y="222.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1109" y="228" width="4" height="15" fill="rgb(213,157,28)"/><text x="1112.00" y="238.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.31%)</title><rect x="1109" y="244" width="4" height="15" fill="rgb(254,156,12)"/><text x="1112.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1113" y="212" width="4" height="15" fill="rgb(241,129,26)"/><text x="1116.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 4.63%)</title><rect x="1066" y="196" width="54" height="15" fill="rgb(213,56,53)"/><text x="1069.00" y="206.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1117" y="212" width="3" height="15" fill="rgb(216,134,13)"/><text x="1120.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (137 samples, 42.28%)</title><rect x="625" y="164" width="499" height="15" fill="rgb(253,34,21)"/><text x="628.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 5.25%)</title><rect x="1062" y="180" width="62" height="15" fill="rgb(212,99,20)"/><text x="1065.00" y="190.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1120" y="196" width="4" height="15" fill="rgb(231,212,18)"/><text x="1123.00" y="206.50"></text></g><g><title>0x7f030f741124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1120" y="212" width="4" height="15" fill="rgb(218,193,25)"/><text x="1123.00" y="222.50"></text></g><g><title>0x7f030f7411ea (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1171" y="196" width="4" height="15" fill="rgb(254,21,16)"/><text x="1174.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(242,119,13)"/><text x="1178.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 4.63%)</title><rect x="1128" y="180" width="54" height="15" fill="rgb(219,24,17)"/><text x="1131.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(212,190,27)"/><text x="1182.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (323 samples, 99.69%)</title><rect x="10" y="52" width="1176" height="15" fill="rgb(250,107,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (160 samples, 49.38%)</title><rect x="603" y="68" width="583" height="15" fill="rgb(210,167,48)"/><text x="606.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_flo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (160 samples, 49.38%)</title><rect x="603" y="84" width="583" height="15" fill="rgb(235,118,17)"/><text x="606.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_f..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py) (160 samples, 49.38%)</title><rect x="603" y="100" width="583" height="15" fill="rgb(220,93,27)"/><text x="606.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_n..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 49.38%)</title><rect x="603" y="116" width="583" height="15" fill="rgb(205,53,3)"/><text x="606.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (157 samples, 48.46%)</title><rect x="614" y="132" width="572" height="15" fill="rgb(210,68,18)"/><text x="617.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (157 samples, 48.46%)</title><rect x="614" y="148" width="572" height="15" fill="rgb(211,82,48)"/><text x="617.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 5.25%)</title><rect x="1124" y="164" width="62" height="15" fill="rgb(243,121,27)"/><text x="1127.00" y="174.50">check_..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(224,88,39)"/><text x="1185.00" y="190.50"></text></g><g><title>all (324 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,192,24)"/><text x="13.00" y="46.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(218,99,29)"/><text x="1189.00" y="62.50"></text></g></g></svg>