<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:888) (1 samples, 0.32%)</title><rect x="28" y="180" width="4" height="15" fill="rgb(236,178,43)"/><text x="31.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.32%)</title><rect x="32" y="180" width="4" height="15" fill="rgb(252,69,1)"/><text x="35.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.32%)</title><rect x="32" y="196" width="4" height="15" fill="rgb(238,13,26)"/><text x="35.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (5 samples, 1.61%)</title><rect x="55" y="196" width="19" height="15" fill="rgb(210,179,19)"/><text x="58.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.64%)</title><rect x="104" y="212" width="8" height="15" fill="rgb(228,119,41)"/><text x="107.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 4.18%)</title><rect x="74" y="196" width="49" height="15" fill="rgb(235,222,37)"/><text x="77.00" y="206.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.96%)</title><rect x="112" y="212" width="11" height="15" fill="rgb(239,150,14)"/><text x="115.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (31 samples, 9.97%)</title><rect x="21" y="164" width="118" height="15" fill="rgb(213,0,36)"/><text x="24.00" y="174.50">_validate_for_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (27 samples, 8.68%)</title><rect x="36" y="180" width="103" height="15" fill="rgb(225,146,37)"/><text x="39.00" y="190.50">check_is_fit..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.29%)</title><rect x="123" y="196" width="16" height="15" fill="rgb(219,20,17)"/><text x="126.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.64%)</title><rect x="131" y="212" width="8" height="15" fill="rgb(219,108,1)"/><text x="134.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.64%)</title><rect x="142" y="180" width="8" height="15" fill="rgb(207,25,38)"/><text x="145.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.32%)</title><rect x="150" y="180" width="4" height="15" fill="rgb(218,203,13)"/><text x="153.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.64%)</title><rect x="154" y="180" width="7" height="15" fill="rgb(229,67,14)"/><text x="157.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (5 samples, 1.61%)</title><rect x="161" y="180" width="19" height="15" fill="rgb(239,156,38)"/><text x="164.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.64%)</title><rect x="173" y="196" width="7" height="15" fill="rgb(225,43,48)"/><text x="176.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:474) (1 samples, 0.32%)</title><rect x="180" y="196" width="4" height="15" fill="rgb(253,154,29)"/><text x="183.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.32%)</title><rect x="184" y="196" width="4" height="15" fill="rgb(222,200,5)"/><text x="187.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.29%)</title><rect x="180" y="180" width="15" height="15" fill="rgb(231,210,33)"/><text x="183.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.64%)</title><rect x="188" y="196" width="7" height="15" fill="rgb(209,198,14)"/><text x="191.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (3 samples, 0.96%)</title><rect x="199" y="196" width="12" height="15" fill="rgb(252,166,49)"/><text x="202.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.32%)</title><rect x="214" y="212" width="4" height="15" fill="rgb(213,98,20)"/><text x="217.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 1.93%)</title><rect x="218" y="212" width="23" height="15" fill="rgb(228,218,31)"/><text x="221.00" y="222.50">_..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.32%)</title><rect x="241" y="212" width="4" height="15" fill="rgb(252,195,20)"/><text x="244.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (15 samples, 4.82%)</title><rect x="195" y="180" width="57" height="15" fill="rgb(225,133,43)"/><text x="198.00" y="190.50">check_..</text></g><g><title>simplefilter (warnings.py:179) (11 samples, 3.54%)</title><rect x="211" y="196" width="41" height="15" fill="rgb(237,139,18)"/><text x="214.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:193) (2 samples, 0.64%)</title><rect x="245" y="212" width="7" height="15" fill="rgb(238,74,46)"/><text x="248.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.32%)</title><rect x="252" y="180" width="4" height="15" fill="rgb(224,25,39)"/><text x="255.00" y="190.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.32%)</title><rect x="271" y="228" width="4" height="15" fill="rgb(244,192,35)"/><text x="274.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 0.96%)</title><rect x="268" y="212" width="11" height="15" fill="rgb(252,163,1)"/><text x="271.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1366) (1 samples, 0.32%)</title><rect x="275" y="228" width="4" height="15" fill="rgb(219,101,20)"/><text x="278.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1952) (1 samples, 0.32%)</title><rect x="283" y="244" width="3" height="15" fill="rgb(216,153,17)"/><text x="286.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="286" y="324" width="4" height="15" fill="rgb(234,141,27)"/><text x="289.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1767) (1 samples, 0.32%)</title><rect x="286" y="340" width="4" height="15" fill="rgb(242,193,54)"/><text x="289.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 1.29%)</title><rect x="279" y="212" width="15" height="15" fill="rgb(223,45,34)"/><text x="282.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 1.29%)</title><rect x="279" y="228" width="15" height="15" fill="rgb(252,177,16)"/><text x="282.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.64%)</title><rect x="286" y="244" width="8" height="15" fill="rgb(216,43,29)"/><text x="289.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (2 samples, 0.64%)</title><rect x="286" y="260" width="8" height="15" fill="rgb(243,193,41)"/><text x="289.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.64%)</title><rect x="286" y="276" width="8" height="15" fill="rgb(253,81,36)"/><text x="289.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.64%)</title><rect x="286" y="292" width="8" height="15" fill="rgb(210,28,34)"/><text x="289.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.64%)</title><rect x="286" y="308" width="8" height="15" fill="rgb(240,141,51)"/><text x="289.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.32%)</title><rect x="290" y="324" width="4" height="15" fill="rgb(210,136,45)"/><text x="293.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (11 samples, 3.54%)</title><rect x="256" y="180" width="42" height="15" fill="rgb(243,133,3)"/><text x="259.00" y="190.50">che..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (9 samples, 2.89%)</title><rect x="264" y="196" width="34" height="15" fill="rgb(220,96,53)"/><text x="267.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1739) (1 samples, 0.32%)</title><rect x="294" y="212" width="4" height="15" fill="rgb(224,178,13)"/><text x="297.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.96%)</title><rect x="298" y="180" width="11" height="15" fill="rgb(239,45,21)"/><text x="301.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (2 samples, 0.64%)</title><rect x="302" y="196" width="7" height="15" fill="rgb(249,93,6)"/><text x="305.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.64%)</title><rect x="309" y="196" width="8" height="15" fill="rgb(229,111,54)"/><text x="312.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (5 samples, 1.61%)</title><rect x="309" y="180" width="19" height="15" fill="rgb(229,193,42)"/><text x="312.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (3 samples, 0.96%)</title><rect x="317" y="196" width="11" height="15" fill="rgb(245,76,45)"/><text x="320.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.64%)</title><rect x="328" y="180" width="8" height="15" fill="rgb(231,187,11)"/><text x="331.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:37) (1 samples, 0.32%)</title><rect x="336" y="196" width="4" height="15" fill="rgb(210,38,32)"/><text x="339.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.29%)</title><rect x="340" y="196" width="15" height="15" fill="rgb(209,125,40)"/><text x="343.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.32%)</title><rect x="351" y="212" width="4" height="15" fill="rgb(228,25,21)"/><text x="354.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.25%)</title><rect x="336" y="180" width="26" height="15" fill="rgb(243,208,15)"/><text x="339.00" y="190.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.64%)</title><rect x="355" y="196" width="7" height="15" fill="rgb(223,33,1)"/><text x="358.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.32%)</title><rect x="359" y="212" width="3" height="15" fill="rgb(249,106,3)"/><text x="362.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.32%)</title><rect x="362" y="180" width="4" height="15" fill="rgb(214,6,32)"/><text x="365.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.64%)</title><rect x="370" y="196" width="8" height="15" fill="rgb(225,220,14)"/><text x="373.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.64%)</title><rect x="378" y="196" width="7" height="15" fill="rgb(251,125,9)"/><text x="381.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.32%)</title><rect x="385" y="196" width="4" height="15" fill="rgb(242,194,46)"/><text x="388.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.61%)</title><rect x="389" y="196" width="19" height="15" fill="rgb(238,196,10)"/><text x="392.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.61%)</title><rect x="389" y="212" width="19" height="15" fill="rgb(228,40,45)"/><text x="392.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (3 samples, 0.96%)</title><rect x="397" y="228" width="11" height="15" fill="rgb(213,141,49)"/><text x="400.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 3.86%)</title><rect x="366" y="180" width="46" height="15" fill="rgb(231,228,3)"/><text x="369.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.32%)</title><rect x="408" y="196" width="4" height="15" fill="rgb(227,134,6)"/><text x="411.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.32%)</title><rect x="408" y="212" width="4" height="15" fill="rgb(221,95,5)"/><text x="411.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (73 samples, 23.47%)</title><rect x="139" y="164" width="276" height="15" fill="rgb(207,171,3)"/><text x="142.00" y="174.50">_validate_for_predict (sklearn/svm/_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.32%)</title><rect x="412" y="180" width="3" height="15" fill="rgb(239,16,19)"/><text x="415.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (2 samples, 0.64%)</title><rect x="415" y="164" width="8" height="15" fill="rgb(220,176,1)"/><text x="418.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.32%)</title><rect x="419" y="180" width="4" height="15" fill="rgb(229,52,37)"/><text x="422.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:457) (1 samples, 0.32%)</title><rect x="423" y="164" width="4" height="15" fill="rgb(218,148,22)"/><text x="426.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (109 samples, 35.05%)</title><rect x="17" y="148" width="414" height="15" fill="rgb(211,101,7)"/><text x="20.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:464) (1 samples, 0.32%)</title><rect x="427" y="164" width="4" height="15" fill="rgb(227,87,22)"/><text x="430.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:641) (1 samples, 0.32%)</title><rect x="431" y="148" width="3" height="15" fill="rgb(229,12,25)"/><text x="434.00" y="158.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.32%)</title><rect x="431" y="164" width="3" height="15" fill="rgb(230,214,40)"/><text x="434.00" y="174.50"></text></g><g><title>0x7f5a6df34b6c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(251,146,1)"/><text x="441.00" y="206.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.32%)</title><rect x="442" y="260" width="4" height="15" fill="rgb(224,227,37)"/><text x="445.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="442" y="276" width="4" height="15" fill="rgb(233,62,5)"/><text x="445.00" y="286.50"></text></g><g><title>0x7f5a6df1ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="442" y="212" width="8" height="15" fill="rgb(252,161,45)"/><text x="445.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.64%)</title><rect x="442" y="228" width="8" height="15" fill="rgb(253,110,52)"/><text x="445.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.64%)</title><rect x="442" y="244" width="8" height="15" fill="rgb(242,93,50)"/><text x="445.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.32%)</title><rect x="446" y="260" width="4" height="15" fill="rgb(205,221,19)"/><text x="449.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:360) (1 samples, 0.32%)</title><rect x="446" y="276" width="4" height="15" fill="rgb(231,36,14)"/><text x="449.00" y="286.50"></text></g><g><title>0x7f5a6df1e05a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="450" y="228" width="3" height="15" fill="rgb(239,136,9)"/><text x="453.00" y="238.50"></text></g><g><title>0x7f5a6df1d988 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="450" y="244" width="3" height="15" fill="rgb(230,77,54)"/><text x="453.00" y="254.50"></text></g><g><title>0x7f5a6df1e326 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="453" y="228" width="4" height="15" fill="rgb(239,180,13)"/><text x="456.00" y="238.50"></text></g><g><title>0x7f5a6df1d982 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="457" y="244" width="4" height="15" fill="rgb(251,201,2)"/><text x="460.00" y="254.50"></text></g><g><title>0x7f5a6df34d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.93%)</title><rect x="442" y="196" width="23" height="15" fill="rgb(229,29,29)"/><text x="445.00" y="206.50">0..</text></g><g><title>0x7f5a6df1ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.29%)</title><rect x="450" y="212" width="15" height="15" fill="rgb(248,214,28)"/><text x="453.00" y="222.50"></text></g><g><title>0x7f5a6df1e33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="457" y="228" width="8" height="15" fill="rgb(217,30,13)"/><text x="460.00" y="238.50"></text></g><g><title>0x7f5a6df1db1a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="461" y="244" width="4" height="15" fill="rgb(207,163,0)"/><text x="464.00" y="254.50"></text></g><g><title>0x7f5a6df34d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="465" y="196" width="4" height="15" fill="rgb(243,95,32)"/><text x="468.00" y="206.50"></text></g><g><title>0x7f5a6df1ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="465" y="212" width="4" height="15" fill="rgb(241,68,29)"/><text x="468.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.32%)</title><rect x="465" y="228" width="4" height="15" fill="rgb(216,202,16)"/><text x="468.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.32%)</title><rect x="465" y="244" width="4" height="15" fill="rgb(238,132,2)"/><text x="468.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.32%)</title><rect x="465" y="260" width="4" height="15" fill="rgb(219,170,35)"/><text x="468.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:434) (1 samples, 0.32%)</title><rect x="465" y="276" width="4" height="15" fill="rgb(224,68,49)"/><text x="468.00" y="286.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.32%)</title><rect x="465" y="292" width="4" height="15" fill="rgb(252,167,8)"/><text x="468.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="465" y="308" width="4" height="15" fill="rgb(210,44,28)"/><text x="468.00" y="318.50"></text></g><g><title>0x7f5a6df34e66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="469" y="196" width="3" height="15" fill="rgb(225,78,42)"/><text x="472.00" y="206.50"></text></g><g><title>0x7f5a6df1ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="469" y="212" width="3" height="15" fill="rgb(239,108,8)"/><text x="472.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.32%)</title><rect x="469" y="228" width="3" height="15" fill="rgb(252,154,31)"/><text x="472.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:641) (1 samples, 0.32%)</title><rect x="469" y="244" width="3" height="15" fill="rgb(228,73,27)"/><text x="472.00" y="254.50"></text></g><g><title>0x7f5a6df1daf7 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="472" y="244" width="4" height="15" fill="rgb(251,169,17)"/><text x="475.00" y="254.50"></text></g><g><title>0x7f5a6df34eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="472" y="196" width="8" height="15" fill="rgb(251,7,52)"/><text x="475.00" y="206.50"></text></g><g><title>0x7f5a6df1ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="472" y="212" width="8" height="15" fill="rgb(212,168,40)"/><text x="475.00" y="222.50"></text></g><g><title>0x7f5a6df1e33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="472" y="228" width="8" height="15" fill="rgb(227,18,21)"/><text x="475.00" y="238.50"></text></g><g><title>0x7f5a6df1de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="476" y="244" width="4" height="15" fill="rgb(247,227,54)"/><text x="479.00" y="254.50"></text></g><g><title>0x7f5a6df34f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="480" y="196" width="4" height="15" fill="rgb(214,167,27)"/><text x="483.00" y="206.50"></text></g><g><title>0x7f5a6df1ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="480" y="212" width="4" height="15" fill="rgb(237,62,19)"/><text x="483.00" y="222.50"></text></g><g><title>0x7f5a6df1e07c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="480" y="228" width="4" height="15" fill="rgb(219,118,27)"/><text x="483.00" y="238.50"></text></g><g><title>_buffer_info_new (buffer.c:575) (1 samples, 0.32%)</title><rect x="484" y="260" width="4" height="15" fill="rgb(213,192,9)"/><text x="487.00" y="270.50"></text></g><g><title>0x7f5a6df34f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="484" y="196" width="7" height="15" fill="rgb(223,202,39)"/><text x="487.00" y="206.50"></text></g><g><title>0x7f5a6df1ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="484" y="212" width="7" height="15" fill="rgb(208,58,19)"/><text x="487.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.64%)</title><rect x="484" y="228" width="7" height="15" fill="rgb(240,103,53)"/><text x="487.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.64%)</title><rect x="484" y="244" width="7" height="15" fill="rgb(224,192,19)"/><text x="487.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:593) (1 samples, 0.32%)</title><rect x="488" y="260" width="3" height="15" fill="rgb(250,203,18)"/><text x="491.00" y="270.50"></text></g><g><title>0x7f5a6df350d4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="491" y="196" width="4" height="15" fill="rgb(247,66,53)"/><text x="494.00" y="206.50"></text></g><g><title>0x7f5a9345ce7e (libc-2.29.so) (1 samples, 0.32%)</title><rect x="503" y="228" width="4" height="15" fill="rgb(225,109,32)"/><text x="506.00" y="238.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.32%)</title><rect x="507" y="228" width="3" height="15" fill="rgb(228,193,54)"/><text x="510.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.32%)</title><rect x="507" y="244" width="3" height="15" fill="rgb(251,60,15)"/><text x="510.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.32%)</title><rect x="507" y="260" width="3" height="15" fill="rgb(249,218,21)"/><text x="510.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.32%)</title><rect x="507" y="276" width="3" height="15" fill="rgb(207,29,5)"/><text x="510.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.32%)</title><rect x="507" y="292" width="3" height="15" fill="rgb(230,3,31)"/><text x="510.00" y="302.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (5 samples, 1.61%)</title><rect x="495" y="212" width="19" height="15" fill="rgb(245,119,44)"/><text x="498.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.32%)</title><rect x="510" y="228" width="4" height="15" fill="rgb(228,59,18)"/><text x="513.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3251) (1 samples, 0.32%)</title><rect x="514" y="244" width="4" height="15" fill="rgb(222,156,5)"/><text x="517.00" y="254.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.64%)</title><rect x="514" y="228" width="8" height="15" fill="rgb(248,213,41)"/><text x="517.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3269) (1 samples, 0.32%)</title><rect x="518" y="244" width="4" height="15" fill="rgb(205,228,18)"/><text x="521.00" y="254.50"></text></g><g><title>0x7f5a92669b70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="518" y="260" width="4" height="15" fill="rgb(253,110,24)"/><text x="521.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="522" y="244" width="4" height="15" fill="rgb(222,218,44)"/><text x="525.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.32%)</title><rect x="522" y="260" width="4" height="15" fill="rgb(207,164,46)"/><text x="525.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.32%)</title><rect x="526" y="244" width="3" height="15" fill="rgb(246,104,48)"/><text x="529.00" y="254.50"></text></g><g><title>0x7f5a6df3512f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.22%)</title><rect x="495" y="196" width="38" height="15" fill="rgb(248,83,26)"/><text x="498.00" y="206.50">0x7..</text></g><g><title>array_arange (multiarraymodule.c:2763) (5 samples, 1.61%)</title><rect x="514" y="212" width="19" height="15" fill="rgb(248,89,0)"/><text x="517.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3432) (3 samples, 0.96%)</title><rect x="522" y="228" width="11" height="15" fill="rgb(232,80,34)"/><text x="525.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.32%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(239,79,36)"/><text x="532.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.32%)</title><rect x="529" y="260" width="4" height="15" fill="rgb(235,204,29)"/><text x="532.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.32%)</title><rect x="529" y="276" width="4" height="15" fill="rgb(250,75,4)"/><text x="532.00" y="286.50"></text></g><g><title>0x7f5a6df1f742 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="533" y="212" width="4" height="15" fill="rgb(222,56,35)"/><text x="536.00" y="222.50"></text></g><g><title>0x7f5a6df35237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="533" y="196" width="8" height="15" fill="rgb(216,175,27)"/><text x="536.00" y="206.50"></text></g><g><title>0x7f5a6df1fce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="537" y="212" width="4" height="15" fill="rgb(236,190,35)"/><text x="540.00" y="222.50"></text></g><g><title>0x7f5a6df352b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="541" y="196" width="7" height="15" fill="rgb(234,114,5)"/><text x="544.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="541" y="212" width="7" height="15" fill="rgb(235,0,29)"/><text x="544.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="544" y="228" width="4" height="15" fill="rgb(249,155,27)"/><text x="547.00" y="238.50"></text></g><g><title>0x7f5a93447c38 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="544" y="244" width="4" height="15" fill="rgb(238,107,38)"/><text x="547.00" y="254.50"></text></g><g><title>0x7f5a6df353f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="548" y="196" width="4" height="15" fill="rgb(224,212,2)"/><text x="551.00" y="206.50"></text></g><g><title>0x7f5a6df1ee39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="552" y="212" width="4" height="15" fill="rgb(248,178,42)"/><text x="555.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.32%)</title><rect x="552" y="228" width="4" height="15" fill="rgb(250,111,25)"/><text x="555.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.32%)</title><rect x="552" y="244" width="4" height="15" fill="rgb(230,0,26)"/><text x="555.00" y="254.50"></text></g><g><title>0x7f5a6df1dd02 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="556" y="244" width="4" height="15" fill="rgb(213,179,22)"/><text x="559.00" y="254.50"></text></g><g><title>0x7f5a6df35528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.96%)</title><rect x="552" y="196" width="11" height="15" fill="rgb(250,42,45)"/><text x="555.00" y="206.50"></text></g><g><title>0x7f5a6df1ef13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="556" y="212" width="7" height="15" fill="rgb(226,164,10)"/><text x="559.00" y="222.50"></text></g><g><title>0x7f5a6df1e33c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.64%)</title><rect x="556" y="228" width="7" height="15" fill="rgb(243,68,20)"/><text x="559.00" y="238.50"></text></g><g><title>0x7f5a6df1de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="560" y="244" width="3" height="15" fill="rgb(254,139,12)"/><text x="563.00" y="254.50"></text></g><g><title>0x7f5a6df35553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.61%)</title><rect x="563" y="196" width="19" height="15" fill="rgb(210,50,50)"/><text x="566.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.61%)</title><rect x="563" y="212" width="19" height="15" fill="rgb(225,160,5)"/><text x="566.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.61%)</title><rect x="563" y="228" width="19" height="15" fill="rgb(233,178,30)"/><text x="566.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.96%)</title><rect x="571" y="244" width="11" height="15" fill="rgb(219,189,53)"/><text x="574.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="579" y="260" width="3" height="15" fill="rgb(214,175,7)"/><text x="582.00" y="270.50"></text></g><g><title>0x7f5a6df35bba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="582" y="196" width="4" height="15" fill="rgb(253,135,25)"/><text x="585.00" y="206.50"></text></g><g><title>0x7f5a6df373fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (40 samples, 12.86%)</title><rect x="438" y="180" width="152" height="15" fill="rgb(254,37,39)"/><text x="441.00" y="190.50">0x7f5a6df373fd (skl..</text></g><g><title>0x7f5a6df36d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="586" y="196" width="4" height="15" fill="rgb(229,195,1)"/><text x="589.00" y="206.50"></text></g><g><title>0x7f5a6df1e5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="586" y="212" width="4" height="15" fill="rgb(225,106,25)"/><text x="589.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.32%)</title><rect x="586" y="228" width="4" height="15" fill="rgb(215,89,37)"/><text x="589.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.32%)</title><rect x="586" y="244" width="4" height="15" fill="rgb(245,28,40)"/><text x="589.00" y="254.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (42 samples, 13.50%)</title><rect x="434" y="148" width="160" height="15" fill="rgb(206,129,50)"/><text x="437.00" y="158.50">_predict_proba (skle..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (42 samples, 13.50%)</title><rect x="434" y="164" width="160" height="15" fill="rgb(217,3,34)"/><text x="437.00" y="174.50">_dense_predict_proba..</text></g><g><title>0x7f5a6df37fc2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="590" y="180" width="4" height="15" fill="rgb(226,141,49)"/><text x="593.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.32%)</title><rect x="594" y="180" width="4" height="15" fill="rgb(233,187,39)"/><text x="597.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.64%)</title><rect x="594" y="148" width="7" height="15" fill="rgb(231,0,7)"/><text x="597.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.64%)</title><rect x="594" y="164" width="7" height="15" fill="rgb(229,114,1)"/><text x="597.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="598" y="180" width="3" height="15" fill="rgb(223,34,17)"/><text x="601.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:38) (157 samples, 50.48%)</title><rect x="10" y="52" width="595" height="15" fill="rgb(245,90,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:37) (157 samples, 50.48%)</title><rect x="10" y="68" width="595" height="15" fill="rgb(233,147,6)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:3..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (157 samples, 50.48%)</title><rect x="10" y="84" width="595" height="15" fill="rgb(215,49,22)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (157 samples, 50.48%)</title><rect x="10" y="100" width="595" height="15" fill="rgb(233,117,52)"/><text x="13.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (156 samples, 50.16%)</title><rect x="13" y="116" width="592" height="15" fill="rgb(248,107,50)"/><text x="16.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (156 samples, 50.16%)</title><rect x="13" y="132" width="592" height="15" fill="rgb(250,218,22)"/><text x="16.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (1 samples, 0.32%)</title><rect x="601" y="148" width="4" height="15" fill="rgb(205,110,1)"/><text x="604.00" y="158.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:23) (1 samples, 0.32%)</title><rect x="605" y="372" width="4" height="15" fill="rgb(250,37,25)"/><text x="608.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="605" y="388" width="4" height="15" fill="rgb(251,62,48)"/><text x="608.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="605" y="404" width="4" height="15" fill="rgb(228,149,7)"/><text x="608.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="605" y="420" width="4" height="15" fill="rgb(205,10,19)"/><text x="608.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="605" y="436" width="4" height="15" fill="rgb(238,42,19)"/><text x="608.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="605" y="452" width="4" height="15" fill="rgb(234,163,9)"/><text x="608.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py:336) (1 samples, 0.32%)</title><rect x="605" y="468" width="4" height="15" fill="rgb(235,45,24)"/><text x="608.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.32%)</title><rect x="605" y="484" width="4" height="15" fill="rgb(241,19,53)"/><text x="608.00" y="494.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:1) (2 samples, 0.64%)</title><rect x="605" y="148" width="8" height="15" fill="rgb(234,182,16)"/><text x="608.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.64%)</title><rect x="605" y="164" width="8" height="15" fill="rgb(209,107,4)"/><text x="608.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.64%)</title><rect x="605" y="180" width="8" height="15" fill="rgb(250,217,3)"/><text x="608.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.64%)</title><rect x="605" y="196" width="8" height="15" fill="rgb(246,215,8)"/><text x="608.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.64%)</title><rect x="605" y="212" width="8" height="15" fill="rgb(220,215,34)"/><text x="608.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.64%)</title><rect x="605" y="228" width="8" height="15" fill="rgb(244,22,54)"/><text x="608.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.64%)</title><rect x="605" y="244" width="8" height="15" fill="rgb(217,64,19)"/><text x="608.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.64%)</title><rect x="605" y="260" width="8" height="15" fill="rgb(249,29,37)"/><text x="608.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.64%)</title><rect x="605" y="276" width="8" height="15" fill="rgb(214,105,46)"/><text x="608.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.64%)</title><rect x="605" y="292" width="8" height="15" fill="rgb(251,11,49)"/><text x="608.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.64%)</title><rect x="605" y="308" width="8" height="15" fill="rgb(222,114,23)"/><text x="608.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.64%)</title><rect x="605" y="324" width="8" height="15" fill="rgb(236,210,53)"/><text x="608.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.64%)</title><rect x="605" y="340" width="8" height="15" fill="rgb(240,111,7)"/><text x="608.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.64%)</title><rect x="605" y="356" width="8" height="15" fill="rgb(246,65,48)"/><text x="608.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.32%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(240,76,6)"/><text x="612.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="609" y="388" width="4" height="15" fill="rgb(233,151,40)"/><text x="612.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="609" y="404" width="4" height="15" fill="rgb(243,104,40)"/><text x="612.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="609" y="420" width="4" height="15" fill="rgb(231,171,0)"/><text x="612.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="609" y="436" width="4" height="15" fill="rgb(230,205,3)"/><text x="612.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="609" y="452" width="4" height="15" fill="rgb(233,120,38)"/><text x="612.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.32%)</title><rect x="609" y="468" width="4" height="15" fill="rgb(236,47,32)"/><text x="612.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="609" y="484" width="4" height="15" fill="rgb(205,114,43)"/><text x="612.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="609" y="500" width="4" height="15" fill="rgb(232,196,52)"/><text x="612.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="609" y="516" width="4" height="15" fill="rgb(239,156,7)"/><text x="612.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="609" y="532" width="4" height="15" fill="rgb(209,121,49)"/><text x="612.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="609" y="548" width="4" height="15" fill="rgb(222,151,49)"/><text x="612.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:4083) (1 samples, 0.32%)</title><rect x="609" y="564" width="4" height="15" fill="rgb(211,150,27)"/><text x="612.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:156) (1 samples, 0.32%)</title><rect x="609" y="580" width="4" height="15" fill="rgb(221,215,30)"/><text x="612.00" y="590.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py:74) (1 samples, 0.32%)</title><rect x="609" y="596" width="4" height="15" fill="rgb(233,47,39)"/><text x="612.00" y="606.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py:112) (1 samples, 0.32%)</title><rect x="609" y="612" width="4" height="15" fill="rgb(253,28,27)"/><text x="612.00" y="622.50"></text></g><g><title>getargs (numpy/compat/_inspect.py:81) (1 samples, 0.32%)</title><rect x="609" y="628" width="4" height="15" fill="rgb(224,216,52)"/><text x="612.00" y="638.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.32%)</title><rect x="613" y="916" width="4" height="15" fill="rgb(239,220,24)"/><text x="616.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.32%)</title><rect x="613" y="932" width="4" height="15" fill="rgb(227,180,7)"/><text x="616.00" y="942.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.32%)</title><rect x="617" y="932" width="3" height="15" fill="rgb(249,181,5)"/><text x="620.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.32%)</title><rect x="617" y="948" width="3" height="15" fill="rgb(241,190,31)"/><text x="620.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="617" y="964" width="3" height="15" fill="rgb(222,36,15)"/><text x="620.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.32%)</title><rect x="617" y="980" width="3" height="15" fill="rgb(239,80,6)"/><text x="620.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.96%)</title><rect x="613" y="852" width="11" height="15" fill="rgb(215,15,26)"/><text x="616.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.96%)</title><rect x="613" y="868" width="11" height="15" fill="rgb(236,205,29)"/><text x="616.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.96%)</title><rect x="613" y="884" width="11" height="15" fill="rgb(237,97,48)"/><text x="616.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.96%)</title><rect x="613" y="900" width="11" height="15" fill="rgb(207,220,45)"/><text x="616.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.64%)</title><rect x="617" y="916" width="7" height="15" fill="rgb(245,84,40)"/><text x="620.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.32%)</title><rect x="620" y="932" width="4" height="15" fill="rgb(233,198,28)"/><text x="623.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.32%)</title><rect x="620" y="948" width="4" height="15" fill="rgb(250,45,0)"/><text x="623.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.32%)</title><rect x="620" y="964" width="4" height="15" fill="rgb(228,76,46)"/><text x="623.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.32%)</title><rect x="620" y="980" width="4" height="15" fill="rgb(217,63,13)"/><text x="623.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.32%)</title><rect x="620" y="996" width="4" height="15" fill="rgb(244,152,7)"/><text x="623.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.32%)</title><rect x="620" y="1012" width="4" height="15" fill="rgb(235,176,5)"/><text x="623.00" y="1022.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.32%)</title><rect x="624" y="884" width="4" height="15" fill="rgb(226,15,42)"/><text x="627.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.32%)</title><rect x="624" y="900" width="4" height="15" fill="rgb(205,19,22)"/><text x="627.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.32%)</title><rect x="624" y="916" width="4" height="15" fill="rgb(214,85,4)"/><text x="627.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.32%)</title><rect x="624" y="932" width="4" height="15" fill="rgb(237,53,17)"/><text x="627.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.32%)</title><rect x="624" y="948" width="4" height="15" fill="rgb(215,170,22)"/><text x="627.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.32%)</title><rect x="624" y="964" width="4" height="15" fill="rgb(233,207,9)"/><text x="627.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.32%)</title><rect x="624" y="980" width="4" height="15" fill="rgb(247,109,22)"/><text x="627.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.64%)</title><rect x="624" y="852" width="8" height="15" fill="rgb(218,165,4)"/><text x="627.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.64%)</title><rect x="624" y="868" width="8" height="15" fill="rgb(231,166,38)"/><text x="627.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.32%)</title><rect x="628" y="884" width="4" height="15" fill="rgb(238,86,43)"/><text x="631.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.32%)</title><rect x="628" y="900" width="4" height="15" fill="rgb(229,178,11)"/><text x="631.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.32%)</title><rect x="628" y="916" width="4" height="15" fill="rgb(241,89,5)"/><text x="631.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.32%)</title><rect x="628" y="932" width="4" height="15" fill="rgb(205,137,20)"/><text x="631.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.32%)</title><rect x="628" y="948" width="4" height="15" fill="rgb(235,181,48)"/><text x="631.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="628" y="964" width="4" height="15" fill="rgb(236,21,16)"/><text x="631.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.93%)</title><rect x="613" y="820" width="23" height="15" fill="rgb(224,148,5)"/><text x="616.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.93%)</title><rect x="613" y="836" width="23" height="15" fill="rgb(208,149,48)"/><text x="616.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.32%)</title><rect x="632" y="852" width="4" height="15" fill="rgb(237,62,35)"/><text x="635.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.32%)</title><rect x="632" y="868" width="4" height="15" fill="rgb(252,121,8)"/><text x="635.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.32%)</title><rect x="632" y="884" width="4" height="15" fill="rgb(237,54,30)"/><text x="635.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.32%)</title><rect x="632" y="900" width="4" height="15" fill="rgb(245,35,40)"/><text x="635.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.32%)</title><rect x="632" y="916" width="4" height="15" fill="rgb(252,8,50)"/><text x="635.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.32%)</title><rect x="632" y="932" width="4" height="15" fill="rgb(208,157,8)"/><text x="635.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.32%)</title><rect x="632" y="948" width="4" height="15" fill="rgb(241,9,33)"/><text x="635.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.32%)</title><rect x="632" y="964" width="4" height="15" fill="rgb(234,93,42)"/><text x="635.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.25%)</title><rect x="613" y="388" width="26" height="15" fill="rgb(207,47,43)"/><text x="616.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="613" y="404" width="26" height="15" fill="rgb(248,209,16)"/><text x="616.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="613" y="420" width="26" height="15" fill="rgb(218,180,33)"/><text x="616.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="613" y="436" width="26" height="15" fill="rgb(223,2,1)"/><text x="616.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="613" y="452" width="26" height="15" fill="rgb(247,214,13)"/><text x="616.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="613" y="468" width="26" height="15" fill="rgb(210,212,12)"/><text x="616.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.25%)</title><rect x="613" y="484" width="26" height="15" fill="rgb(241,209,32)"/><text x="616.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="613" y="500" width="26" height="15" fill="rgb(206,146,16)"/><text x="616.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="613" y="516" width="26" height="15" fill="rgb(246,89,26)"/><text x="616.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="613" y="532" width="26" height="15" fill="rgb(248,114,53)"/><text x="616.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="613" y="548" width="26" height="15" fill="rgb(240,203,34)"/><text x="616.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="613" y="564" width="26" height="15" fill="rgb(213,73,38)"/><text x="616.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.25%)</title><rect x="613" y="580" width="26" height="15" fill="rgb(206,34,29)"/><text x="616.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="613" y="596" width="26" height="15" fill="rgb(254,219,34)"/><text x="616.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.25%)</title><rect x="613" y="612" width="26" height="15" fill="rgb(207,89,29)"/><text x="616.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="613" y="628" width="26" height="15" fill="rgb(230,12,41)"/><text x="616.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="613" y="644" width="26" height="15" fill="rgb(216,199,10)"/><text x="616.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="613" y="660" width="26" height="15" fill="rgb(213,48,41)"/><text x="616.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="613" y="676" width="26" height="15" fill="rgb(242,176,12)"/><text x="616.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="613" y="692" width="26" height="15" fill="rgb(216,140,12)"/><text x="616.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="613" y="708" width="26" height="15" fill="rgb(220,214,16)"/><text x="616.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.25%)</title><rect x="613" y="724" width="26" height="15" fill="rgb(233,213,48)"/><text x="616.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="613" y="740" width="26" height="15" fill="rgb(230,106,27)"/><text x="616.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="613" y="756" width="26" height="15" fill="rgb(254,138,27)"/><text x="616.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="613" y="772" width="26" height="15" fill="rgb(224,25,2)"/><text x="616.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="613" y="788" width="26" height="15" fill="rgb(241,214,37)"/><text x="616.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="613" y="804" width="26" height="15" fill="rgb(229,93,50)"/><text x="616.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.32%)</title><rect x="636" y="820" width="3" height="15" fill="rgb(231,182,27)"/><text x="639.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="636" y="836" width="3" height="15" fill="rgb(217,88,29)"/><text x="639.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="636" y="852" width="3" height="15" fill="rgb(236,193,8)"/><text x="639.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="636" y="868" width="3" height="15" fill="rgb(219,36,15)"/><text x="639.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="636" y="884" width="3" height="15" fill="rgb(228,6,43)"/><text x="639.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="636" y="900" width="3" height="15" fill="rgb(210,49,39)"/><text x="639.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.32%)</title><rect x="636" y="916" width="3" height="15" fill="rgb(230,103,11)"/><text x="639.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="636" y="932" width="3" height="15" fill="rgb(242,213,30)"/><text x="639.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="636" y="948" width="3" height="15" fill="rgb(251,74,40)"/><text x="639.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.32%)</title><rect x="636" y="964" width="3" height="15" fill="rgb(235,116,26)"/><text x="639.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.32%)</title><rect x="636" y="980" width="3" height="15" fill="rgb(218,193,45)"/><text x="639.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.32%)</title><rect x="636" y="996" width="3" height="15" fill="rgb(249,63,4)"/><text x="639.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="636" y="1012" width="3" height="15" fill="rgb(245,204,40)"/><text x="639.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="636" y="1028" width="3" height="15" fill="rgb(221,91,6)"/><text x="639.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="636" y="1044" width="3" height="15" fill="rgb(235,1,51)"/><text x="639.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="636" y="1060" width="3" height="15" fill="rgb(241,137,53)"/><text x="639.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="636" y="1076" width="3" height="15" fill="rgb(244,226,41)"/><text x="639.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="636" y="1092" width="3" height="15" fill="rgb(239,99,32)"/><text x="639.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:2) (8 samples, 2.57%)</title><rect x="613" y="148" width="30" height="15" fill="rgb(238,207,10)"/><text x="616.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.57%)</title><rect x="613" y="164" width="30" height="15" fill="rgb(250,70,6)"/><text x="616.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.57%)</title><rect x="613" y="180" width="30" height="15" fill="rgb(244,66,44)"/><text x="616.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.57%)</title><rect x="613" y="196" width="30" height="15" fill="rgb(223,109,40)"/><text x="616.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.57%)</title><rect x="613" y="212" width="30" height="15" fill="rgb(249,111,20)"/><text x="616.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.57%)</title><rect x="613" y="228" width="30" height="15" fill="rgb(229,40,27)"/><text x="616.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.57%)</title><rect x="613" y="244" width="30" height="15" fill="rgb(207,173,16)"/><text x="616.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.57%)</title><rect x="613" y="260" width="30" height="15" fill="rgb(247,86,34)"/><text x="616.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.57%)</title><rect x="613" y="276" width="30" height="15" fill="rgb(245,188,18)"/><text x="616.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 2.57%)</title><rect x="613" y="292" width="30" height="15" fill="rgb(220,141,26)"/><text x="616.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.57%)</title><rect x="613" y="308" width="30" height="15" fill="rgb(224,206,36)"/><text x="616.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.57%)</title><rect x="613" y="324" width="30" height="15" fill="rgb(254,68,12)"/><text x="616.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.57%)</title><rect x="613" y="340" width="30" height="15" fill="rgb(232,7,8)"/><text x="616.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.57%)</title><rect x="613" y="356" width="30" height="15" fill="rgb(242,107,46)"/><text x="616.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.57%)</title><rect x="613" y="372" width="30" height="15" fill="rgb(234,138,24)"/><text x="616.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:9) (1 samples, 0.32%)</title><rect x="639" y="388" width="4" height="15" fill="rgb(208,26,15)"/><text x="642.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="639" y="404" width="4" height="15" fill="rgb(213,4,45)"/><text x="642.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="639" y="420" width="4" height="15" fill="rgb(246,152,29)"/><text x="642.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="639" y="436" width="4" height="15" fill="rgb(229,116,44)"/><text x="642.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="639" y="452" width="4" height="15" fill="rgb(244,55,48)"/><text x="642.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="639" y="468" width="4" height="15" fill="rgb(229,60,39)"/><text x="642.00" y="478.50"></text></g><g><title>&lt;module&gt; (typing.py:1201) (1 samples, 0.32%)</title><rect x="639" y="484" width="4" height="15" fill="rgb(235,19,14)"/><text x="642.00" y="494.50"></text></g><g><title>_alias (typing.py:1191) (1 samples, 0.32%)</title><rect x="639" y="500" width="4" height="15" fill="rgb(246,77,31)"/><text x="642.00" y="510.50"></text></g><g><title>__init__ (typing.py:605) (1 samples, 0.32%)</title><rect x="639" y="516" width="4" height="15" fill="rgb(232,27,28)"/><text x="642.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:4) (1 samples, 0.32%)</title><rect x="643" y="148" width="4" height="15" fill="rgb(250,160,26)"/><text x="646.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="164" width="4" height="15" fill="rgb(225,223,46)"/><text x="646.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="643" y="180" width="4" height="15" fill="rgb(212,153,4)"/><text x="646.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="196" width="4" height="15" fill="rgb(250,164,50)"/><text x="646.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="212" width="4" height="15" fill="rgb(253,133,6)"/><text x="646.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="228" width="4" height="15" fill="rgb(217,144,9)"/><text x="646.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="244" width="4" height="15" fill="rgb(224,223,52)"/><text x="646.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="260" width="4" height="15" fill="rgb(251,145,28)"/><text x="646.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="276" width="4" height="15" fill="rgb(245,188,3)"/><text x="646.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.32%)</title><rect x="643" y="292" width="4" height="15" fill="rgb(247,114,15)"/><text x="646.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(206,212,38)"/><text x="646.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(234,150,31)"/><text x="646.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(243,58,30)"/><text x="646.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="356" width="4" height="15" fill="rgb(249,47,23)"/><text x="646.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(219,175,47)"/><text x="646.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.32%)</title><rect x="643" y="388" width="4" height="15" fill="rgb(206,33,49)"/><text x="646.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="404" width="4" height="15" fill="rgb(209,175,42)"/><text x="646.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="420" width="4" height="15" fill="rgb(238,71,33)"/><text x="646.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="436" width="4" height="15" fill="rgb(243,29,24)"/><text x="646.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="452" width="4" height="15" fill="rgb(237,118,26)"/><text x="646.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="468" width="4" height="15" fill="rgb(240,143,31)"/><text x="646.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.32%)</title><rect x="643" y="484" width="4" height="15" fill="rgb(227,137,45)"/><text x="646.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="500" width="4" height="15" fill="rgb(254,47,44)"/><text x="646.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="516" width="4" height="15" fill="rgb(251,2,12)"/><text x="646.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="532" width="4" height="15" fill="rgb(247,88,20)"/><text x="646.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="548" width="4" height="15" fill="rgb(238,195,5)"/><text x="646.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="564" width="4" height="15" fill="rgb(220,98,11)"/><text x="646.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.32%)</title><rect x="643" y="580" width="4" height="15" fill="rgb(237,80,43)"/><text x="646.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="596" width="4" height="15" fill="rgb(214,115,30)"/><text x="646.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="612" width="4" height="15" fill="rgb(224,31,32)"/><text x="646.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="628" width="4" height="15" fill="rgb(219,196,13)"/><text x="646.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="644" width="4" height="15" fill="rgb(242,201,54)"/><text x="646.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="660" width="4" height="15" fill="rgb(210,171,14)"/><text x="646.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.32%)</title><rect x="643" y="676" width="4" height="15" fill="rgb(250,87,7)"/><text x="646.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="692" width="4" height="15" fill="rgb(242,216,54)"/><text x="646.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="708" width="4" height="15" fill="rgb(244,6,51)"/><text x="646.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="724" width="4" height="15" fill="rgb(230,106,24)"/><text x="646.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="740" width="4" height="15" fill="rgb(234,114,52)"/><text x="646.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="756" width="4" height="15" fill="rgb(252,95,31)"/><text x="646.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.32%)</title><rect x="643" y="772" width="4" height="15" fill="rgb(243,49,10)"/><text x="646.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="643" y="788" width="4" height="15" fill="rgb(226,222,47)"/><text x="646.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="804" width="4" height="15" fill="rgb(249,23,20)"/><text x="646.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="820" width="4" height="15" fill="rgb(208,177,1)"/><text x="646.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="836" width="4" height="15" fill="rgb(250,13,22)"/><text x="646.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="852" width="4" height="15" fill="rgb(247,29,48)"/><text x="646.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="868" width="4" height="15" fill="rgb(227,26,51)"/><text x="646.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="884" width="4" height="15" fill="rgb(231,35,14)"/><text x="646.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.32%)</title><rect x="643" y="900" width="4" height="15" fill="rgb(228,11,39)"/><text x="646.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="643" y="916" width="4" height="15" fill="rgb(233,65,16)"/><text x="646.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="932" width="4" height="15" fill="rgb(220,159,10)"/><text x="646.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="643" y="948" width="4" height="15" fill="rgb(209,212,29)"/><text x="646.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="643" y="964" width="4" height="15" fill="rgb(254,94,11)"/><text x="646.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="643" y="980" width="4" height="15" fill="rgb(251,115,38)"/><text x="646.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="643" y="996" width="4" height="15" fill="rgb(253,10,24)"/><text x="646.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="643" y="1012" width="4" height="15" fill="rgb(248,105,53)"/><text x="646.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3615) (1 samples, 0.32%)</title><rect x="643" y="1028" width="4" height="15" fill="rgb(225,220,39)"/><text x="646.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.32%)</title><rect x="647" y="340" width="4" height="15" fill="rgb(205,143,0)"/><text x="650.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="356" width="4" height="15" fill="rgb(225,21,31)"/><text x="650.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="372" width="4" height="15" fill="rgb(214,176,13)"/><text x="650.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="647" y="388" width="4" height="15" fill="rgb(226,174,31)"/><text x="650.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="647" y="404" width="4" height="15" fill="rgb(251,166,8)"/><text x="650.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="420" width="4" height="15" fill="rgb(226,14,5)"/><text x="650.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.32%)</title><rect x="647" y="436" width="4" height="15" fill="rgb(243,77,54)"/><text x="650.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="452" width="4" height="15" fill="rgb(220,223,28)"/><text x="650.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="468" width="4" height="15" fill="rgb(212,10,8)"/><text x="650.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="647" y="484" width="4" height="15" fill="rgb(234,28,8)"/><text x="650.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="647" y="500" width="4" height="15" fill="rgb(234,40,50)"/><text x="650.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="516" width="4" height="15" fill="rgb(222,181,8)"/><text x="650.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.32%)</title><rect x="647" y="532" width="4" height="15" fill="rgb(243,47,11)"/><text x="650.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="548" width="4" height="15" fill="rgb(238,101,46)"/><text x="650.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="564" width="4" height="15" fill="rgb(207,172,1)"/><text x="650.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="647" y="580" width="4" height="15" fill="rgb(244,221,50)"/><text x="650.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="647" y="596" width="4" height="15" fill="rgb(207,57,23)"/><text x="650.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="612" width="4" height="15" fill="rgb(211,25,34)"/><text x="650.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.32%)</title><rect x="647" y="628" width="4" height="15" fill="rgb(234,175,31)"/><text x="650.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="644" width="4" height="15" fill="rgb(235,221,17)"/><text x="650.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="660" width="4" height="15" fill="rgb(243,21,15)"/><text x="650.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="647" y="676" width="4" height="15" fill="rgb(227,142,31)"/><text x="650.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="647" y="692" width="4" height="15" fill="rgb(219,144,33)"/><text x="650.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="708" width="4" height="15" fill="rgb(233,168,2)"/><text x="650.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:1341) (1 samples, 0.32%)</title><rect x="647" y="724" width="4" height="15" fill="rgb(245,189,2)"/><text x="650.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="740" width="4" height="15" fill="rgb(237,90,37)"/><text x="650.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="756" width="4" height="15" fill="rgb(237,193,3)"/><text x="650.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="647" y="772" width="4" height="15" fill="rgb(238,186,11)"/><text x="650.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="647" y="788" width="4" height="15" fill="rgb(244,7,36)"/><text x="650.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="804" width="4" height="15" fill="rgb(225,152,39)"/><text x="650.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py:98) (1 samples, 0.32%)</title><rect x="647" y="820" width="4" height="15" fill="rgb(233,117,22)"/><text x="650.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="647" y="836" width="4" height="15" fill="rgb(254,139,47)"/><text x="650.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="647" y="852" width="4" height="15" fill="rgb(242,201,46)"/><text x="650.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="647" y="868" width="4" height="15" fill="rgb(223,201,42)"/><text x="650.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.32%)</title><rect x="647" y="884" width="4" height="15" fill="rgb(228,100,1)"/><text x="650.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.32%)</title><rect x="647" y="900" width="4" height="15" fill="rgb(226,142,44)"/><text x="650.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="647" y="916" width="4" height="15" fill="rgb(238,56,10)"/><text x="650.00" y="926.50"></text></g><g><title>0x7f5a6b72597d (?) (1 samples, 0.32%)</title><rect x="647" y="932" width="4" height="15" fill="rgb(228,61,31)"/><text x="650.00" y="942.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.32%)</title><rect x="651" y="628" width="4" height="15" fill="rgb(232,221,6)"/><text x="654.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="651" y="644" width="4" height="15" fill="rgb(242,109,39)"/><text x="654.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="651" y="660" width="4" height="15" fill="rgb(215,105,10)"/><text x="654.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="651" y="676" width="4" height="15" fill="rgb(253,42,38)"/><text x="654.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="651" y="692" width="4" height="15" fill="rgb(241,216,7)"/><text x="654.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="651" y="708" width="4" height="15" fill="rgb(220,215,8)"/><text x="654.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.32%)</title><rect x="651" y="724" width="4" height="15" fill="rgb(243,40,5)"/><text x="654.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="651" y="740" width="4" height="15" fill="rgb(237,50,31)"/><text x="654.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="651" y="756" width="4" height="15" fill="rgb(213,163,29)"/><text x="654.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="651" y="772" width="4" height="15" fill="rgb(220,76,10)"/><text x="654.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="651" y="788" width="4" height="15" fill="rgb(234,138,34)"/><text x="654.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="651" y="804" width="4" height="15" fill="rgb(226,0,39)"/><text x="654.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.32%)</title><rect x="651" y="820" width="4" height="15" fill="rgb(232,123,53)"/><text x="654.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="651" y="836" width="4" height="15" fill="rgb(230,33,28)"/><text x="654.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.32%)</title><rect x="651" y="852" width="4" height="15" fill="rgb(253,65,52)"/><text x="654.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.32%)</title><rect x="651" y="868" width="4" height="15" fill="rgb(233,119,19)"/><text x="654.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.32%)</title><rect x="651" y="884" width="4" height="15" fill="rgb(216,119,10)"/><text x="654.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.32%)</title><rect x="651" y="900" width="4" height="15" fill="rgb(214,20,52)"/><text x="654.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.32%)</title><rect x="651" y="916" width="4" height="15" fill="rgb(253,44,21)"/><text x="654.00" y="926.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.32%)</title><rect x="651" y="932" width="4" height="15" fill="rgb(250,84,18)"/><text x="654.00" y="942.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.32%)</title><rect x="651" y="948" width="4" height="15" fill="rgb(242,100,37)"/><text x="654.00" y="958.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:372) (1 samples, 0.32%)</title><rect x="651" y="964" width="4" height="15" fill="rgb(241,165,25)"/><text x="654.00" y="974.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.32%)</title><rect x="655" y="724" width="3" height="15" fill="rgb(208,141,3)"/><text x="658.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="655" y="740" width="3" height="15" fill="rgb(227,41,49)"/><text x="658.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="655" y="756" width="3" height="15" fill="rgb(207,52,54)"/><text x="658.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="655" y="772" width="3" height="15" fill="rgb(237,88,47)"/><text x="658.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="655" y="788" width="3" height="15" fill="rgb(223,228,10)"/><text x="658.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="655" y="804" width="3" height="15" fill="rgb(218,192,19)"/><text x="658.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.32%)</title><rect x="655" y="820" width="3" height="15" fill="rgb(230,33,38)"/><text x="658.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="655" y="836" width="3" height="15" fill="rgb(240,227,37)"/><text x="658.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="655" y="852" width="3" height="15" fill="rgb(231,229,16)"/><text x="658.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="655" y="868" width="3" height="15" fill="rgb(244,44,34)"/><text x="658.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="655" y="884" width="3" height="15" fill="rgb(207,183,24)"/><text x="658.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="655" y="900" width="3" height="15" fill="rgb(208,6,0)"/><text x="658.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.32%)</title><rect x="655" y="916" width="3" height="15" fill="rgb(210,174,48)"/><text x="658.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="655" y="932" width="3" height="15" fill="rgb(248,97,0)"/><text x="658.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="655" y="948" width="3" height="15" fill="rgb(250,39,45)"/><text x="658.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="655" y="964" width="3" height="15" fill="rgb(224,224,10)"/><text x="658.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="655" y="980" width="3" height="15" fill="rgb(238,227,0)"/><text x="658.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="655" y="996" width="3" height="15" fill="rgb(210,125,46)"/><text x="658.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.32%)</title><rect x="655" y="1012" width="3" height="15" fill="rgb(221,95,29)"/><text x="658.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="655" y="1028" width="3" height="15" fill="rgb(209,88,44)"/><text x="658.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="655" y="1044" width="3" height="15" fill="rgb(210,70,17)"/><text x="658.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="655" y="1060" width="3" height="15" fill="rgb(227,180,26)"/><text x="658.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="655" y="1076" width="3" height="15" fill="rgb(209,31,28)"/><text x="658.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="655" y="1092" width="3" height="15" fill="rgb(221,165,38)"/><text x="658.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="655" y="1108" width="3" height="15" fill="rgb(215,67,52)"/><text x="658.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.96%)</title><rect x="651" y="436" width="11" height="15" fill="rgb(252,168,28)"/><text x="654.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="651" y="452" width="11" height="15" fill="rgb(224,115,49)"/><text x="654.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="651" y="468" width="11" height="15" fill="rgb(252,159,24)"/><text x="654.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="651" y="484" width="11" height="15" fill="rgb(222,198,21)"/><text x="654.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="651" y="500" width="11" height="15" fill="rgb(247,150,40)"/><text x="654.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="651" y="516" width="11" height="15" fill="rgb(220,92,18)"/><text x="654.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.96%)</title><rect x="651" y="532" width="11" height="15" fill="rgb(251,90,21)"/><text x="654.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="651" y="548" width="11" height="15" fill="rgb(222,188,28)"/><text x="654.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="651" y="564" width="11" height="15" fill="rgb(208,74,35)"/><text x="654.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="651" y="580" width="11" height="15" fill="rgb(243,198,29)"/><text x="654.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="651" y="596" width="11" height="15" fill="rgb(237,159,47)"/><text x="654.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="651" y="612" width="11" height="15" fill="rgb(205,42,48)"/><text x="654.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.64%)</title><rect x="655" y="628" width="7" height="15" fill="rgb(231,122,39)"/><text x="658.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.64%)</title><rect x="655" y="644" width="7" height="15" fill="rgb(253,91,36)"/><text x="658.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.64%)</title><rect x="655" y="660" width="7" height="15" fill="rgb(252,53,20)"/><text x="658.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.64%)</title><rect x="655" y="676" width="7" height="15" fill="rgb(235,130,29)"/><text x="658.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.64%)</title><rect x="655" y="692" width="7" height="15" fill="rgb(227,75,29)"/><text x="658.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.64%)</title><rect x="655" y="708" width="7" height="15" fill="rgb(217,44,10)"/><text x="658.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.32%)</title><rect x="658" y="724" width="4" height="15" fill="rgb(229,110,45)"/><text x="661.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="658" y="740" width="4" height="15" fill="rgb(217,212,17)"/><text x="661.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="658" y="756" width="4" height="15" fill="rgb(220,146,8)"/><text x="661.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="658" y="772" width="4" height="15" fill="rgb(228,39,28)"/><text x="661.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="658" y="788" width="4" height="15" fill="rgb(206,12,46)"/><text x="661.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="658" y="804" width="4" height="15" fill="rgb(222,53,23)"/><text x="661.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="658" y="820" width="4" height="15" fill="rgb(226,158,33)"/><text x="661.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="658" y="836" width="4" height="15" fill="rgb(225,22,4)"/><text x="661.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="658" y="852" width="4" height="15" fill="rgb(222,6,30)"/><text x="661.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.32%)</title><rect x="658" y="868" width="4" height="15" fill="rgb(235,93,20)"/><text x="661.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="658" y="884" width="4" height="15" fill="rgb(248,117,27)"/><text x="661.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="658" y="900" width="4" height="15" fill="rgb(238,179,22)"/><text x="661.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="658" y="916" width="4" height="15" fill="rgb(252,136,4)"/><text x="661.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="658" y="932" width="4" height="15" fill="rgb(221,165,8)"/><text x="661.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="658" y="948" width="4" height="15" fill="rgb(248,172,34)"/><text x="661.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.32%)</title><rect x="658" y="964" width="4" height="15" fill="rgb(233,92,45)"/><text x="661.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="658" y="980" width="4" height="15" fill="rgb(248,155,3)"/><text x="661.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="658" y="996" width="4" height="15" fill="rgb(220,15,11)"/><text x="661.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="658" y="1012" width="4" height="15" fill="rgb(206,208,31)"/><text x="661.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="658" y="1028" width="4" height="15" fill="rgb(230,97,50)"/><text x="661.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="658" y="1044" width="4" height="15" fill="rgb(226,23,27)"/><text x="661.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="658" y="1060" width="4" height="15" fill="rgb(207,20,4)"/><text x="661.00" y="1070.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.32%)</title><rect x="662" y="1108" width="4" height="15" fill="rgb(253,174,14)"/><text x="665.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1124" width="4" height="15" fill="rgb(253,79,42)"/><text x="665.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1140" width="4" height="15" fill="rgb(210,124,21)"/><text x="665.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="662" y="1156" width="4" height="15" fill="rgb(244,167,28)"/><text x="665.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="662" y="1172" width="4" height="15" fill="rgb(205,127,37)"/><text x="665.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1188" width="4" height="15" fill="rgb(244,58,16)"/><text x="665.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.32%)</title><rect x="662" y="1204" width="4" height="15" fill="rgb(253,39,26)"/><text x="665.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1220" width="4" height="15" fill="rgb(222,103,26)"/><text x="665.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1236" width="4" height="15" fill="rgb(223,109,49)"/><text x="665.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="662" y="1252" width="4" height="15" fill="rgb(254,40,51)"/><text x="665.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="662" y="1268" width="4" height="15" fill="rgb(248,60,32)"/><text x="665.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1284" width="4" height="15" fill="rgb(217,219,20)"/><text x="665.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.32%)</title><rect x="662" y="1300" width="4" height="15" fill="rgb(226,40,21)"/><text x="665.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1316" width="4" height="15" fill="rgb(254,187,53)"/><text x="665.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1332" width="4" height="15" fill="rgb(253,110,18)"/><text x="665.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="662" y="1348" width="4" height="15" fill="rgb(235,40,43)"/><text x="665.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="662" y="1364" width="4" height="15" fill="rgb(245,6,51)"/><text x="665.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1380" width="4" height="15" fill="rgb(209,80,34)"/><text x="665.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.32%)</title><rect x="662" y="1396" width="4" height="15" fill="rgb(229,145,36)"/><text x="665.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1412" width="4" height="15" fill="rgb(245,159,3)"/><text x="665.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1428" width="4" height="15" fill="rgb(205,167,50)"/><text x="665.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="662" y="1444" width="4" height="15" fill="rgb(219,121,34)"/><text x="665.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="662" y="1460" width="4" height="15" fill="rgb(208,10,3)"/><text x="665.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1476" width="4" height="15" fill="rgb(212,87,49)"/><text x="665.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.32%)</title><rect x="662" y="1492" width="4" height="15" fill="rgb(208,124,28)"/><text x="665.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="662" y="1508" width="4" height="15" fill="rgb(225,49,21)"/><text x="665.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1524" width="4" height="15" fill="rgb(216,119,40)"/><text x="665.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1540" width="4" height="15" fill="rgb(230,68,53)"/><text x="665.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1556" width="4" height="15" fill="rgb(217,124,35)"/><text x="665.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="662" y="1572" width="4" height="15" fill="rgb(235,128,39)"/><text x="665.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="662" y="1588" width="4" height="15" fill="rgb(250,194,30)"/><text x="665.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="662" y="1604" width="4" height="15" fill="rgb(220,16,51)"/><text x="665.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:17) (1 samples, 0.32%)</title><rect x="662" y="1620" width="4" height="15" fill="rgb(212,155,40)"/><text x="665.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="662" y="1636" width="4" height="15" fill="rgb(221,117,44)"/><text x="665.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="662" y="1652" width="4" height="15" fill="rgb(211,42,42)"/><text x="665.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="662" y="1668" width="4" height="15" fill="rgb(235,182,52)"/><text x="665.00" y="1678.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.32%)</title><rect x="662" y="1684" width="4" height="15" fill="rgb(224,1,46)"/><text x="665.00" y="1694.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:570) (1 samples, 0.32%)</title><rect x="662" y="1700" width="4" height="15" fill="rgb(212,216,26)"/><text x="665.00" y="1710.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:405) (1 samples, 0.32%)</title><rect x="662" y="1716" width="4" height="15" fill="rgb(230,150,14)"/><text x="665.00" y="1726.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.32%)</title><rect x="666" y="1108" width="4" height="15" fill="rgb(238,151,40)"/><text x="669.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="666" y="1124" width="4" height="15" fill="rgb(220,50,50)"/><text x="669.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1140" width="4" height="15" fill="rgb(217,111,10)"/><text x="669.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="666" y="1156" width="4" height="15" fill="rgb(223,164,49)"/><text x="669.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="666" y="1172" width="4" height="15" fill="rgb(221,46,45)"/><text x="669.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="666" y="1188" width="4" height="15" fill="rgb(214,228,37)"/><text x="669.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="666" y="1204" width="4" height="15" fill="rgb(215,157,24)"/><text x="669.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1220" width="4" height="15" fill="rgb(248,155,41)"/><text x="669.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.32%)</title><rect x="666" y="1236" width="4" height="15" fill="rgb(210,200,34)"/><text x="669.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="666" y="1252" width="4" height="15" fill="rgb(234,15,27)"/><text x="669.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1268" width="4" height="15" fill="rgb(245,147,25)"/><text x="669.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="666" y="1284" width="4" height="15" fill="rgb(211,131,6)"/><text x="669.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="666" y="1300" width="4" height="15" fill="rgb(251,17,2)"/><text x="669.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="666" y="1316" width="4" height="15" fill="rgb(254,151,37)"/><text x="669.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="666" y="1332" width="4" height="15" fill="rgb(210,9,43)"/><text x="669.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1348" width="4" height="15" fill="rgb(243,141,25)"/><text x="669.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.32%)</title><rect x="666" y="1364" width="4" height="15" fill="rgb(248,1,50)"/><text x="669.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="666" y="1380" width="4" height="15" fill="rgb(245,129,6)"/><text x="669.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="666" y="1396" width="4" height="15" fill="rgb(207,35,54)"/><text x="669.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="666" y="1412" width="4" height="15" fill="rgb(228,209,14)"/><text x="669.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="666" y="1428" width="4" height="15" fill="rgb(243,77,32)"/><text x="669.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1444" width="4" height="15" fill="rgb(231,72,19)"/><text x="669.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.32%)</title><rect x="666" y="1460" width="4" height="15" fill="rgb(236,216,0)"/><text x="669.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="666" y="1476" width="4" height="15" fill="rgb(211,165,6)"/><text x="669.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="666" y="1492" width="4" height="15" fill="rgb(254,7,47)"/><text x="669.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="666" y="1508" width="4" height="15" fill="rgb(252,182,8)"/><text x="669.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="666" y="1524" width="4" height="15" fill="rgb(208,186,0)"/><text x="669.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="666" y="1540" width="4" height="15" fill="rgb(243,86,27)"/><text x="669.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.32%)</title><rect x="666" y="1556" width="4" height="15" fill="rgb(222,161,37)"/><text x="669.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.32%)</title><rect x="666" y="1572" width="4" height="15" fill="rgb(217,188,38)"/><text x="669.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.32%)</title><rect x="666" y="1588" width="4" height="15" fill="rgb(228,139,35)"/><text x="669.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.32%)</title><rect x="666" y="1604" width="4" height="15" fill="rgb(231,107,21)"/><text x="669.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.32%)</title><rect x="666" y="1620" width="4" height="15" fill="rgb(250,111,46)"/><text x="669.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.32%)</title><rect x="666" y="1636" width="4" height="15" fill="rgb(227,81,8)"/><text x="669.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.32%)</title><rect x="666" y="1652" width="4" height="15" fill="rgb(214,18,38)"/><text x="669.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="666" y="1668" width="4" height="15" fill="rgb(236,36,13)"/><text x="669.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="666" y="1684" width="4" height="15" fill="rgb(219,176,39)"/><text x="669.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.32%)</title><rect x="666" y="1700" width="4" height="15" fill="rgb(209,209,1)"/><text x="669.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="666" y="1716" width="4" height="15" fill="rgb(253,189,3)"/><text x="669.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="666" y="1732" width="4" height="15" fill="rgb(213,100,18)"/><text x="669.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="666" y="1748" width="4" height="15" fill="rgb(213,33,6)"/><text x="669.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.32%)</title><rect x="666" y="1764" width="4" height="15" fill="rgb(219,138,45)"/><text x="669.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="666" y="1780" width="4" height="15" fill="rgb(254,1,52)"/><text x="669.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="666" y="1796" width="4" height="15" fill="rgb(240,97,35)"/><text x="669.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="666" y="1812" width="4" height="15" fill="rgb(229,216,47)"/><text x="669.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.32%)</title><rect x="666" y="1828" width="4" height="15" fill="rgb(208,55,2)"/><text x="669.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="666" y="1844" width="4" height="15" fill="rgb(244,142,33)"/><text x="669.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py:876) (1 samples, 0.32%)</title><rect x="666" y="1860" width="4" height="15" fill="rgb(220,28,39)"/><text x="669.00" y="1870.50"></text></g><g><title>expect (jinja2/lexer.py:374) (1 samples, 0.32%)</title><rect x="666" y="1876" width="4" height="15" fill="rgb(240,25,23)"/><text x="669.00" y="1886.50"></text></g><g><title>test (jinja2/lexer.py:254) (1 samples, 0.32%)</title><rect x="666" y="1892" width="4" height="15" fill="rgb(244,210,30)"/><text x="669.00" y="1902.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:4) (18 samples, 5.79%)</title><rect x="605" y="52" width="68" height="15" fill="rgb(238,162,48)"/><text x="608.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 5.79%)</title><rect x="605" y="68" width="68" height="15" fill="rgb(227,145,19)"/><text x="608.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 5.79%)</title><rect x="605" y="84" width="68" height="15" fill="rgb(209,134,17)"/><text x="608.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 5.79%)</title><rect x="605" y="100" width="68" height="15" fill="rgb(225,144,8)"/><text x="608.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 5.79%)</title><rect x="605" y="116" width="68" height="15" fill="rgb(212,184,45)"/><text x="608.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 5.79%)</title><rect x="605" y="132" width="68" height="15" fill="rgb(217,67,16)"/><text x="608.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:7) (7 samples, 2.25%)</title><rect x="647" y="148" width="26" height="15" fill="rgb(223,195,27)"/><text x="650.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="647" y="164" width="26" height="15" fill="rgb(216,145,29)"/><text x="650.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="647" y="180" width="26" height="15" fill="rgb(227,3,49)"/><text x="650.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="647" y="196" width="26" height="15" fill="rgb(230,190,12)"/><text x="650.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="647" y="212" width="26" height="15" fill="rgb(212,40,20)"/><text x="650.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="647" y="228" width="26" height="15" fill="rgb(246,147,44)"/><text x="650.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 2.25%)</title><rect x="647" y="244" width="26" height="15" fill="rgb(245,140,21)"/><text x="650.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.25%)</title><rect x="647" y="260" width="26" height="15" fill="rgb(222,195,16)"/><text x="650.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.25%)</title><rect x="647" y="276" width="26" height="15" fill="rgb(219,152,18)"/><text x="650.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.25%)</title><rect x="647" y="292" width="26" height="15" fill="rgb(254,33,37)"/><text x="650.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.25%)</title><rect x="647" y="308" width="26" height="15" fill="rgb(252,221,10)"/><text x="650.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.25%)</title><rect x="647" y="324" width="26" height="15" fill="rgb(229,133,9)"/><text x="650.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.93%)</title><rect x="651" y="340" width="22" height="15" fill="rgb(224,45,49)"/><text x="654.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.93%)</title><rect x="651" y="356" width="22" height="15" fill="rgb(228,135,24)"/><text x="654.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.93%)</title><rect x="651" y="372" width="22" height="15" fill="rgb(227,138,20)"/><text x="654.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.93%)</title><rect x="651" y="388" width="22" height="15" fill="rgb(236,105,19)"/><text x="654.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.93%)</title><rect x="651" y="404" width="22" height="15" fill="rgb(211,122,4)"/><text x="654.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.93%)</title><rect x="651" y="420" width="22" height="15" fill="rgb(212,41,33)"/><text x="654.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.96%)</title><rect x="662" y="436" width="11" height="15" fill="rgb(226,59,51)"/><text x="665.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="452" width="11" height="15" fill="rgb(218,222,50)"/><text x="665.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.96%)</title><rect x="662" y="468" width="11" height="15" fill="rgb(233,152,30)"/><text x="665.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="484" width="11" height="15" fill="rgb(248,103,25)"/><text x="665.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="500" width="11" height="15" fill="rgb(231,115,44)"/><text x="665.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="516" width="11" height="15" fill="rgb(232,4,35)"/><text x="665.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="532" width="11" height="15" fill="rgb(229,45,46)"/><text x="665.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="548" width="11" height="15" fill="rgb(252,95,48)"/><text x="665.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="564" width="11" height="15" fill="rgb(247,185,24)"/><text x="665.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.96%)</title><rect x="662" y="580" width="11" height="15" fill="rgb(208,35,0)"/><text x="665.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="596" width="11" height="15" fill="rgb(219,72,34)"/><text x="665.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="612" width="11" height="15" fill="rgb(226,146,15)"/><text x="665.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="628" width="11" height="15" fill="rgb(219,229,22)"/><text x="665.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="644" width="11" height="15" fill="rgb(238,214,5)"/><text x="665.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="660" width="11" height="15" fill="rgb(211,73,3)"/><text x="665.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.96%)</title><rect x="662" y="676" width="11" height="15" fill="rgb(227,187,22)"/><text x="665.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="692" width="11" height="15" fill="rgb(207,209,44)"/><text x="665.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="708" width="11" height="15" fill="rgb(243,60,30)"/><text x="665.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="724" width="11" height="15" fill="rgb(211,18,18)"/><text x="665.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="740" width="11" height="15" fill="rgb(246,170,48)"/><text x="665.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="756" width="11" height="15" fill="rgb(213,197,3)"/><text x="665.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.96%)</title><rect x="662" y="772" width="11" height="15" fill="rgb(212,78,38)"/><text x="665.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="788" width="11" height="15" fill="rgb(233,60,1)"/><text x="665.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="804" width="11" height="15" fill="rgb(218,71,35)"/><text x="665.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="820" width="11" height="15" fill="rgb(239,186,32)"/><text x="665.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="836" width="11" height="15" fill="rgb(218,216,26)"/><text x="665.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="852" width="11" height="15" fill="rgb(241,86,42)"/><text x="665.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.96%)</title><rect x="662" y="868" width="11" height="15" fill="rgb(232,146,22)"/><text x="665.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="884" width="11" height="15" fill="rgb(205,9,37)"/><text x="665.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.96%)</title><rect x="662" y="900" width="11" height="15" fill="rgb(208,209,25)"/><text x="665.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="916" width="11" height="15" fill="rgb(235,54,41)"/><text x="665.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="932" width="11" height="15" fill="rgb(227,25,33)"/><text x="665.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="948" width="11" height="15" fill="rgb(219,84,38)"/><text x="665.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="964" width="11" height="15" fill="rgb(219,33,32)"/><text x="665.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="980" width="11" height="15" fill="rgb(224,151,18)"/><text x="665.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="996" width="11" height="15" fill="rgb(245,73,48)"/><text x="665.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.96%)</title><rect x="662" y="1012" width="11" height="15" fill="rgb(237,199,28)"/><text x="665.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.96%)</title><rect x="662" y="1028" width="11" height="15" fill="rgb(217,93,20)"/><text x="665.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.96%)</title><rect x="662" y="1044" width="11" height="15" fill="rgb(226,80,2)"/><text x="665.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.96%)</title><rect x="662" y="1060" width="11" height="15" fill="rgb(248,80,50)"/><text x="665.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.96%)</title><rect x="662" y="1076" width="11" height="15" fill="rgb(225,86,7)"/><text x="665.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.96%)</title><rect x="662" y="1092" width="11" height="15" fill="rgb(205,195,13)"/><text x="665.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:9) (1 samples, 0.32%)</title><rect x="670" y="1108" width="3" height="15" fill="rgb(214,55,3)"/><text x="673.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="670" y="1124" width="3" height="15" fill="rgb(225,86,27)"/><text x="673.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="670" y="1140" width="3" height="15" fill="rgb(224,204,14)"/><text x="673.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="670" y="1156" width="3" height="15" fill="rgb(208,176,27)"/><text x="673.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="670" y="1172" width="3" height="15" fill="rgb(244,213,37)"/><text x="673.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="670" y="1188" width="3" height="15" fill="rgb(216,57,19)"/><text x="673.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py:34) (1 samples, 0.32%)</title><rect x="670" y="1204" width="3" height="15" fill="rgb(210,168,52)"/><text x="673.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py:29) (1 samples, 0.32%)</title><rect x="670" y="1220" width="3" height="15" fill="rgb(228,141,24)"/><text x="673.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py:479) (1 samples, 0.32%)</title><rect x="670" y="1236" width="3" height="15" fill="rgb(227,22,43)"/><text x="673.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py:3148) (1 samples, 0.32%)</title><rect x="670" y="1252" width="3" height="15" fill="rgb(251,67,20)"/><text x="673.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py:3094) (1 samples, 0.32%)</title><rect x="670" y="1268" width="3" height="15" fill="rgb(225,57,0)"/><text x="673.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:3101) (1 samples, 0.32%)</title><rect x="670" y="1284" width="3" height="15" fill="rgb(230,207,13)"/><text x="673.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py:90) (1 samples, 0.32%)</title><rect x="670" y="1300" width="3" height="15" fill="rgb(244,217,22)"/><text x="673.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py:1637) (1 samples, 0.32%)</title><rect x="670" y="1316" width="3" height="15" fill="rgb(227,33,1)"/><text x="673.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1332" width="3" height="15" fill="rgb(219,163,7)"/><text x="673.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1348" width="3" height="15" fill="rgb(247,83,42)"/><text x="673.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1364" width="3" height="15" fill="rgb(251,160,18)"/><text x="673.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1380" width="3" height="15" fill="rgb(245,149,53)"/><text x="673.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1396" width="3" height="15" fill="rgb(250,33,28)"/><text x="673.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1412" width="3" height="15" fill="rgb(244,199,0)"/><text x="673.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1428" width="3" height="15" fill="rgb(214,97,47)"/><text x="673.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3765) (1 samples, 0.32%)</title><rect x="670" y="1444" width="3" height="15" fill="rgb(217,95,18)"/><text x="673.00" y="1454.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1460" width="3" height="15" fill="rgb(211,43,9)"/><text x="673.00" y="1470.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.32%)</title><rect x="670" y="1476" width="3" height="15" fill="rgb(225,109,16)"/><text x="673.00" y="1486.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3763) (1 samples, 0.32%)</title><rect x="670" y="1492" width="3" height="15" fill="rgb(208,77,7)"/><text x="673.00" y="1502.50"></text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:28) (1 samples, 0.32%)</title><rect x="673" y="84" width="4" height="15" fill="rgb(208,27,25)"/><text x="676.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.32%)</title><rect x="673" y="100" width="4" height="15" fill="rgb(228,26,12)"/><text x="676.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.32%)</title><rect x="673" y="116" width="4" height="15" fill="rgb(231,103,37)"/><text x="676.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.32%)</title><rect x="673" y="132" width="4" height="15" fill="rgb(224,91,54)"/><text x="676.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.32%)</title><rect x="673" y="148" width="4" height="15" fill="rgb(218,186,28)"/><text x="676.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.32%)</title><rect x="673" y="164" width="4" height="15" fill="rgb(235,95,11)"/><text x="676.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.32%)</title><rect x="673" y="180" width="4" height="15" fill="rgb(220,115,17)"/><text x="676.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.32%)</title><rect x="673" y="196" width="4" height="15" fill="rgb(229,199,10)"/><text x="676.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="673" y="212" width="4" height="15" fill="rgb(221,180,32)"/><text x="676.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="673" y="228" width="4" height="15" fill="rgb(248,171,5)"/><text x="676.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="673" y="244" width="4" height="15" fill="rgb(251,169,34)"/><text x="676.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="673" y="260" width="4" height="15" fill="rgb(214,39,7)"/><text x="676.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="673" y="276" width="4" height="15" fill="rgb(248,191,4)"/><text x="676.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.32%)</title><rect x="673" y="292" width="4" height="15" fill="rgb(239,209,8)"/><text x="676.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="673" y="308" width="4" height="15" fill="rgb(243,228,9)"/><text x="676.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="673" y="324" width="4" height="15" fill="rgb(233,82,18)"/><text x="676.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="673" y="340" width="4" height="15" fill="rgb(243,169,16)"/><text x="676.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="673" y="356" width="4" height="15" fill="rgb(207,117,3)"/><text x="676.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="673" y="372" width="4" height="15" fill="rgb(228,191,34)"/><text x="676.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.32%)</title><rect x="673" y="388" width="4" height="15" fill="rgb(221,143,8)"/><text x="676.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.32%)</title><rect x="673" y="404" width="4" height="15" fill="rgb(221,159,16)"/><text x="676.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.32%)</title><rect x="673" y="420" width="4" height="15" fill="rgb(238,103,26)"/><text x="676.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.32%)</title><rect x="673" y="436" width="4" height="15" fill="rgb(223,50,44)"/><text x="676.00" y="446.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.32%)</title><rect x="673" y="452" width="4" height="15" fill="rgb(238,203,11)"/><text x="676.00" y="462.50"></text></g><g><title>new_context (jinja2/runtime.py:67) (1 samples, 0.32%)</title><rect x="673" y="468" width="4" height="15" fill="rgb(232,27,32)"/><text x="676.00" y="478.50"></text></g><g><title>0x7f5a545b5c29 (?) (1 samples, 0.32%)</title><rect x="677" y="244" width="4" height="15" fill="rgb(205,169,29)"/><text x="680.00" y="254.50"></text></g><g><title>0x7f5a545bcd9e (?) (1 samples, 0.32%)</title><rect x="677" y="260" width="4" height="15" fill="rgb(233,18,8)"/><text x="680.00" y="270.50"></text></g><g><title>0x7f5a545bcbba (?) (1 samples, 0.32%)</title><rect x="677" y="276" width="4" height="15" fill="rgb(216,25,14)"/><text x="680.00" y="286.50"></text></g><g><title>0x7f5a545a5f4f (?) (1 samples, 0.32%)</title><rect x="677" y="292" width="4" height="15" fill="rgb(207,95,35)"/><text x="680.00" y="302.50"></text></g><g><title>0x7f5a545ae182 (?) (1 samples, 0.32%)</title><rect x="677" y="308" width="4" height="15" fill="rgb(249,100,9)"/><text x="680.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="677" y="324" width="4" height="15" fill="rgb(252,38,35)"/><text x="680.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.32%)</title><rect x="677" y="340" width="4" height="15" fill="rgb(223,203,24)"/><text x="680.00" y="350.50"></text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:18) (2 samples, 0.64%)</title><rect x="677" y="100" width="8" height="15" fill="rgb(224,218,33)"/><text x="680.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.64%)</title><rect x="677" y="116" width="8" height="15" fill="rgb(242,102,28)"/><text x="680.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.64%)</title><rect x="677" y="132" width="8" height="15" fill="rgb(254,39,36)"/><text x="680.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.64%)</title><rect x="677" y="148" width="8" height="15" fill="rgb(241,107,37)"/><text x="680.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.64%)</title><rect x="677" y="164" width="8" height="15" fill="rgb(217,40,8)"/><text x="680.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.64%)</title><rect x="677" y="180" width="8" height="15" fill="rgb(207,137,14)"/><text x="680.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.64%)</title><rect x="677" y="196" width="8" height="15" fill="rgb(217,117,0)"/><text x="680.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.64%)</title><rect x="677" y="212" width="8" height="15" fill="rgb(217,184,13)"/><text x="680.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (2 samples, 0.64%)</title><rect x="677" y="228" width="8" height="15" fill="rgb(247,102,18)"/><text x="680.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (1 samples, 0.32%)</title><rect x="681" y="244" width="4" height="15" fill="rgb(237,154,21)"/><text x="684.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (1 samples, 0.32%)</title><rect x="681" y="260" width="4" height="15" fill="rgb(233,105,7)"/><text x="684.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (1 samples, 0.32%)</title><rect x="681" y="276" width="4" height="15" fill="rgb(248,8,49)"/><text x="684.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (1 samples, 0.32%)</title><rect x="681" y="292" width="4" height="15" fill="rgb(240,10,12)"/><text x="684.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (1 samples, 0.32%)</title><rect x="681" y="308" width="4" height="15" fill="rgb(251,134,16)"/><text x="684.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (1 samples, 0.32%)</title><rect x="681" y="324" width="4" height="15" fill="rgb(223,71,54)"/><text x="684.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.32%)</title><rect x="681" y="340" width="4" height="15" fill="rgb(229,225,5)"/><text x="684.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.32%)</title><rect x="681" y="356" width="4" height="15" fill="rgb(252,98,35)"/><text x="684.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.32%)</title><rect x="681" y="372" width="4" height="15" fill="rgb(211,90,12)"/><text x="684.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.32%)</title><rect x="681" y="388" width="4" height="15" fill="rgb(206,1,1)"/><text x="684.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.32%)</title><rect x="681" y="404" width="4" height="15" fill="rgb(210,47,18)"/><text x="684.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (1 samples, 0.32%)</title><rect x="681" y="420" width="4" height="15" fill="rgb(221,61,32)"/><text x="684.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (1 samples, 0.32%)</title><rect x="681" y="436" width="4" height="15" fill="rgb(226,189,1)"/><text x="684.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.32%)</title><rect x="681" y="452" width="4" height="15" fill="rgb(229,182,29)"/><text x="684.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.32%)</title><rect x="681" y="468" width="4" height="15" fill="rgb(205,33,42)"/><text x="684.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.32%)</title><rect x="681" y="484" width="4" height="15" fill="rgb(219,97,12)"/><text x="684.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.32%)</title><rect x="681" y="500" width="4" height="15" fill="rgb(227,226,8)"/><text x="684.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.32%)</title><rect x="681" y="516" width="4" height="15" fill="rgb(246,160,19)"/><text x="684.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.32%)</title><rect x="681" y="532" width="4" height="15" fill="rgb(214,199,50)"/><text x="684.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.32%)</title><rect x="681" y="548" width="4" height="15" fill="rgb(251,39,14)"/><text x="684.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="681" y="564" width="4" height="15" fill="rgb(240,204,36)"/><text x="684.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="681" y="580" width="4" height="15" fill="rgb(238,201,53)"/><text x="684.00" y="590.50"></text></g><g><title>0x7f5a93447c23 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="681" y="596" width="4" height="15" fill="rgb(226,223,30)"/><text x="684.00" y="606.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.32%)</title><rect x="685" y="116" width="4" height="15" fill="rgb(229,199,33)"/><text x="688.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="685" y="132" width="4" height="15" fill="rgb(229,188,32)"/><text x="688.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="685" y="148" width="4" height="15" fill="rgb(242,39,13)"/><text x="688.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="685" y="164" width="4" height="15" fill="rgb(210,215,38)"/><text x="688.00" y="174.50"></text></g><g><title>0x7f5a92668f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="685" y="180" width="4" height="15" fill="rgb(252,174,30)"/><text x="688.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.32%)</title><rect x="696" y="148" width="4" height="15" fill="rgb(251,162,44)"/><text x="699.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.32%)</title><rect x="700" y="148" width="4" height="15" fill="rgb(232,207,41)"/><text x="703.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.32%)</title><rect x="715" y="164" width="4" height="15" fill="rgb(226,137,27)"/><text x="718.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (3 samples, 0.96%)</title><rect x="719" y="164" width="11" height="15" fill="rgb(231,200,19)"/><text x="722.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.32%)</title><rect x="734" y="180" width="4" height="15" fill="rgb(245,143,18)"/><text x="737.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.29%)</title><rect x="738" y="180" width="15" height="15" fill="rgb(232,49,52)"/><text x="741.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.32%)</title><rect x="749" y="196" width="4" height="15" fill="rgb(243,195,45)"/><text x="752.00" y="206.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.32%)</title><rect x="787" y="244" width="4" height="15" fill="rgb(245,89,30)"/><text x="790.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.32%)</title><rect x="787" y="260" width="4" height="15" fill="rgb(211,78,5)"/><text x="790.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.32%)</title><rect x="787" y="276" width="4" height="15" fill="rgb(223,202,35)"/><text x="790.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.32%)</title><rect x="787" y="292" width="4" height="15" fill="rgb(245,87,38)"/><text x="790.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="787" y="308" width="4" height="15" fill="rgb(214,153,21)"/><text x="790.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.32%)</title><rect x="787" y="324" width="4" height="15" fill="rgb(254,39,50)"/><text x="790.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.32%)</title><rect x="791" y="276" width="4" height="15" fill="rgb(215,198,29)"/><text x="794.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.32%)</title><rect x="791" y="292" width="4" height="15" fill="rgb(254,63,38)"/><text x="794.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (6 samples, 1.93%)</title><rect x="776" y="212" width="23" height="15" fill="rgb(216,223,25)"/><text x="779.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 1.29%)</title><rect x="784" y="228" width="15" height="15" fill="rgb(207,73,40)"/><text x="787.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.64%)</title><rect x="791" y="244" width="8" height="15" fill="rgb(231,124,11)"/><text x="794.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.64%)</title><rect x="791" y="260" width="8" height="15" fill="rgb(214,196,25)"/><text x="794.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.32%)</title><rect x="795" y="276" width="4" height="15" fill="rgb(235,91,2)"/><text x="798.00" y="286.50"></text></g><g><title>0x7f5a93467120 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="795" y="292" width="4" height="15" fill="rgb(251,85,47)"/><text x="798.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (10 samples, 3.22%)</title><rect x="768" y="196" width="38" height="15" fill="rgb(254,104,41)"/><text x="771.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.64%)</title><rect x="799" y="212" width="7" height="15" fill="rgb(242,99,27)"/><text x="802.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.32%)</title><rect x="802" y="228" width="4" height="15" fill="rgb(228,47,27)"/><text x="805.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.32%)</title><rect x="818" y="244" width="3" height="15" fill="rgb(241,150,49)"/><text x="821.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:287) (1 samples, 0.32%)</title><rect x="818" y="260" width="3" height="15" fill="rgb(225,16,9)"/><text x="821.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc:76) (1 samples, 0.32%)</title><rect x="818" y="276" width="3" height="15" fill="rgb(207,217,45)"/><text x="821.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="818" y="292" width="3" height="15" fill="rgb(240,208,45)"/><text x="821.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="818" y="308" width="3" height="15" fill="rgb(242,52,52)"/><text x="821.00" y="318.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.32%)</title><rect x="821" y="276" width="4" height="15" fill="rgb(213,98,8)"/><text x="824.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.32%)</title><rect x="821" y="292" width="4" height="15" fill="rgb(234,141,33)"/><text x="824.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.32%)</title><rect x="821" y="308" width="4" height="15" fill="rgb(244,137,51)"/><text x="824.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.32%)</title><rect x="821" y="324" width="4" height="15" fill="rgb(250,117,32)"/><text x="824.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.32%)</title><rect x="821" y="340" width="4" height="15" fill="rgb(223,73,49)"/><text x="824.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.32%)</title><rect x="821" y="356" width="4" height="15" fill="rgb(250,44,16)"/><text x="824.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.32%)</title><rect x="821" y="372" width="4" height="15" fill="rgb(236,9,18)"/><text x="824.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.32%)</title><rect x="821" y="388" width="4" height="15" fill="rgb(251,86,20)"/><text x="824.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.32%)</title><rect x="821" y="404" width="4" height="15" fill="rgb(212,172,21)"/><text x="824.00" y="414.50"></text></g><g><title>0x7f5a93446bd8 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="821" y="420" width="4" height="15" fill="rgb(207,47,50)"/><text x="824.00" y="430.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:257) (1 samples, 0.32%)</title><rect x="825" y="420" width="4" height="15" fill="rgb(251,91,13)"/><text x="828.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h:867) (1 samples, 0.32%)</title><rect x="825" y="436" width="4" height="15" fill="rgb(229,142,7)"/><text x="828.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.32%)</title><rect x="825" y="452" width="4" height="15" fill="rgb(247,177,52)"/><text x="828.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.32%)</title><rect x="825" y="468" width="4" height="15" fill="rgb(210,54,44)"/><text x="828.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h:600) (1 samples, 0.32%)</title><rect x="825" y="484" width="4" height="15" fill="rgb(254,157,4)"/><text x="828.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.32%)</title><rect x="825" y="500" width="4" height="15" fill="rgb(229,28,48)"/><text x="828.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.32%)</title><rect x="825" y="516" width="4" height="15" fill="rgb(230,8,33)"/><text x="828.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.32%)</title><rect x="825" y="532" width="4" height="15" fill="rgb(210,198,22)"/><text x="828.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.32%)</title><rect x="825" y="548" width="4" height="15" fill="rgb(249,72,48)"/><text x="828.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="825" y="564" width="4" height="15" fill="rgb(210,70,33)"/><text x="828.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1061) (1 samples, 0.32%)</title><rect x="825" y="580" width="4" height="15" fill="rgb(249,151,8)"/><text x="828.00" y="590.50"></text></g><g><title>0x7f5a926691c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="825" y="596" width="4" height="15" fill="rgb(243,68,14)"/><text x="828.00" y="606.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.32%)</title><rect x="829" y="484" width="4" height="15" fill="rgb(242,166,7)"/><text x="832.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.32%)</title><rect x="829" y="500" width="4" height="15" fill="rgb(208,131,34)"/><text x="832.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.32%)</title><rect x="829" y="516" width="4" height="15" fill="rgb(232,68,52)"/><text x="832.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.32%)</title><rect x="829" y="532" width="4" height="15" fill="rgb(216,44,19)"/><text x="832.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.32%)</title><rect x="829" y="548" width="4" height="15" fill="rgb(234,55,45)"/><text x="832.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="829" y="564" width="4" height="15" fill="rgb(230,185,33)"/><text x="832.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="829" y="580" width="4" height="15" fill="rgb(214,90,36)"/><text x="832.00" y="590.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (2 samples, 0.64%)</title><rect x="829" y="436" width="8" height="15" fill="rgb(243,155,42)"/><text x="832.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (2 samples, 0.64%)</title><rect x="829" y="452" width="8" height="15" fill="rgb(230,120,45)"/><text x="832.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.64%)</title><rect x="829" y="468" width="8" height="15" fill="rgb(216,84,22)"/><text x="832.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:318) (1 samples, 0.32%)</title><rect x="833" y="484" width="4" height="15" fill="rgb(210,108,23)"/><text x="836.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (9 samples, 2.89%)</title><rect x="806" y="228" width="34" height="15" fill="rgb(215,171,26)"/><text x="809.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (5 samples, 1.61%)</title><rect x="821" y="244" width="19" height="15" fill="rgb(207,19,54)"/><text x="824.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (5 samples, 1.61%)</title><rect x="821" y="260" width="19" height="15" fill="rgb(207,215,36)"/><text x="824.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (4 samples, 1.29%)</title><rect x="825" y="276" width="15" height="15" fill="rgb(237,38,45)"/><text x="828.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (4 samples, 1.29%)</title><rect x="825" y="292" width="15" height="15" fill="rgb(246,127,49)"/><text x="828.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (4 samples, 1.29%)</title><rect x="825" y="308" width="15" height="15" fill="rgb(215,0,42)"/><text x="828.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (4 samples, 1.29%)</title><rect x="825" y="324" width="15" height="15" fill="rgb(212,206,13)"/><text x="828.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (4 samples, 1.29%)</title><rect x="825" y="340" width="15" height="15" fill="rgb(232,164,15)"/><text x="828.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (4 samples, 1.29%)</title><rect x="825" y="356" width="15" height="15" fill="rgb(233,82,27)"/><text x="828.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (4 samples, 1.29%)</title><rect x="825" y="372" width="15" height="15" fill="rgb(217,183,15)"/><text x="828.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (4 samples, 1.29%)</title><rect x="825" y="388" width="15" height="15" fill="rgb(224,95,14)"/><text x="828.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (4 samples, 1.29%)</title><rect x="825" y="404" width="15" height="15" fill="rgb(247,226,39)"/><text x="828.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (3 samples, 0.96%)</title><rect x="829" y="420" width="11" height="15" fill="rgb(230,101,39)"/><text x="832.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1986) (1 samples, 0.32%)</title><rect x="837" y="436" width="3" height="15" fill="rgb(235,201,6)"/><text x="840.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="837" y="452" width="3" height="15" fill="rgb(215,44,30)"/><text x="840.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (11 samples, 3.54%)</title><rect x="806" y="212" width="42" height="15" fill="rgb(253,170,46)"/><text x="809.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (2 samples, 0.64%)</title><rect x="840" y="228" width="8" height="15" fill="rgb(246,69,44)"/><text x="843.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.32%)</title><rect x="844" y="244" width="4" height="15" fill="rgb(214,202,12)"/><text x="847.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.32%)</title><rect x="844" y="260" width="4" height="15" fill="rgb(227,190,25)"/><text x="847.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (12 samples, 3.86%)</title><rect x="806" y="196" width="46" height="15" fill="rgb(231,158,24)"/><text x="809.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.32%)</title><rect x="848" y="212" width="4" height="15" fill="rgb(239,80,46)"/><text x="851.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.32%)</title><rect x="856" y="212" width="3" height="15" fill="rgb(232,229,3)"/><text x="859.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (29 samples, 9.32%)</title><rect x="753" y="180" width="110" height="15" fill="rgb(238,115,47)"/><text x="756.00" y="190.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.96%)</title><rect x="852" y="196" width="11" height="15" fill="rgb(207,68,37)"/><text x="855.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.32%)</title><rect x="859" y="212" width="4" height="15" fill="rgb(218,136,38)"/><text x="862.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.32%)</title><rect x="859" y="228" width="4" height="15" fill="rgb(229,217,9)"/><text x="862.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (5 samples, 1.61%)</title><rect x="863" y="180" width="19" height="15" fill="rgb(218,52,20)"/><text x="866.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (47 samples, 15.11%)</title><rect x="730" y="164" width="179" height="15" fill="rgb(253,224,48)"/><text x="733.00" y="174.50">_run_sequence_runtime (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 2.25%)</title><rect x="882" y="180" width="27" height="15" fill="rgb(211,192,39)"/><text x="885.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (6 samples, 1.93%)</title><rect x="909" y="164" width="22" height="15" fill="rgb(213,183,7)"/><text x="912.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.64%)</title><rect x="924" y="180" width="7" height="15" fill="rgb(245,228,44)"/><text x="927.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.32%)</title><rect x="928" y="196" width="3" height="15" fill="rgb(230,209,47)"/><text x="931.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.32%)</title><rect x="931" y="164" width="4" height="15" fill="rgb(211,104,2)"/><text x="934.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:45) (70 samples, 22.51%)</title><rect x="673" y="52" width="266" height="15" fill="rgb(252,225,14)"/><text x="676.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_pro..</text></g><g><title>profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:44) (70 samples, 22.51%)</title><rect x="673" y="68" width="266" height="15" fill="rgb(226,158,0)"/><text x="676.00" y="78.50">profile_pyrt (bench_SVC_linear_m_cl..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (69 samples, 22.19%)</title><rect x="677" y="84" width="262" height="15" fill="rgb(225,110,52)"/><text x="680.00" y="94.50">setup_profile (bench_SVC_linear_m_c..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (67 samples, 21.54%)</title><rect x="685" y="100" width="254" height="15" fill="rgb(240,117,49)"/><text x="688.00" y="110.50">profile (bench_SVC_linear_m_cl_pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (66 samples, 21.22%)</title><rect x="689" y="116" width="250" height="15" fill="rgb(228,123,37)"/><text x="692.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (66 samples, 21.22%)</title><rect x="689" y="132" width="250" height="15" fill="rgb(212,102,9)"/><text x="692.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (62 samples, 19.94%)</title><rect x="704" y="148" width="235" height="15" fill="rgb(218,200,44)"/><text x="707.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.32%)</title><rect x="935" y="164" width="4" height="15" fill="rgb(213,75,52)"/><text x="938.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 0.96%)</title><rect x="954" y="148" width="12" height="15" fill="rgb(209,147,23)"/><text x="957.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.32%)</title><rect x="966" y="148" width="3" height="15" fill="rgb(238,50,12)"/><text x="969.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.32%)</title><rect x="996" y="196" width="4" height="15" fill="rgb(223,73,53)"/><text x="999.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.61%)</title><rect x="1000" y="196" width="19" height="15" fill="rgb(236,218,31)"/><text x="1003.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.29%)</title><rect x="1004" y="212" width="15" height="15" fill="rgb(249,166,35)"/><text x="1007.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1011" y="228" width="8" height="15" fill="rgb(207,201,11)"/><text x="1014.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1015" y="244" width="4" height="15" fill="rgb(205,74,25)"/><text x="1018.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1015" y="260" width="4" height="15" fill="rgb(210,57,8)"/><text x="1018.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1015" y="276" width="4" height="15" fill="rgb(254,40,53)"/><text x="1018.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1015" y="292" width="4" height="15" fill="rgb(211,223,25)"/><text x="1018.00" y="302.50"></text></g><g><title>0x7f5a534b6ff9 (?) (1 samples, 0.32%)</title><rect x="1023" y="212" width="3" height="15" fill="rgb(249,135,3)"/><text x="1026.00" y="222.50"></text></g><g><title>0x7f5a534b1d3b (?) (1 samples, 0.32%)</title><rect x="1023" y="228" width="3" height="15" fill="rgb(244,113,7)"/><text x="1026.00" y="238.50"></text></g><g><title>0x7f5a534b009b (?) (1 samples, 0.32%)</title><rect x="1023" y="244" width="3" height="15" fill="rgb(248,97,47)"/><text x="1026.00" y="254.50"></text></g><g><title>0x7f5a534c8b42 (?) (1 samples, 0.32%)</title><rect x="1023" y="260" width="3" height="15" fill="rgb(206,146,31)"/><text x="1026.00" y="270.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1026" y="228" width="4" height="15" fill="rgb(209,74,0)"/><text x="1029.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1042" y="260" width="3" height="15" fill="rgb(205,137,6)"/><text x="1045.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1042" y="276" width="3" height="15" fill="rgb(247,21,1)"/><text x="1045.00" y="286.50"></text></g><g><title>0x7f5a5347dba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1042" y="292" width="3" height="15" fill="rgb(233,157,33)"/><text x="1045.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1045" y="292" width="4" height="15" fill="rgb(219,20,12)"/><text x="1048.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1045" y="308" width="4" height="15" fill="rgb(242,20,16)"/><text x="1048.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1045" y="324" width="4" height="15" fill="rgb(207,19,2)"/><text x="1048.00" y="334.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="1045" y="340" width="4" height="15" fill="rgb(208,117,44)"/><text x="1048.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.64%)</title><rect x="1049" y="308" width="8" height="15" fill="rgb(217,109,3)"/><text x="1052.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1053" y="324" width="4" height="15" fill="rgb(234,178,31)"/><text x="1056.00" y="334.50"></text></g><g><title>0x7f5a93447c04 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1053" y="340" width="4" height="15" fill="rgb(240,86,47)"/><text x="1056.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.96%)</title><rect x="1049" y="292" width="11" height="15" fill="rgb(236,40,45)"/><text x="1052.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1057" y="308" width="3" height="15" fill="rgb(224,30,45)"/><text x="1060.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="1057" y="324" width="3" height="15" fill="rgb(235,171,14)"/><text x="1060.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1057" y="340" width="3" height="15" fill="rgb(218,187,25)"/><text x="1060.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(211,4,33)"/><text x="1063.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1060" y="308" width="4" height="15" fill="rgb(233,138,47)"/><text x="1063.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1064" y="292" width="4" height="15" fill="rgb(229,139,8)"/><text x="1067.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(242,171,27)"/><text x="1075.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1072" y="356" width="7" height="15" fill="rgb(218,78,33)"/><text x="1075.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1076" y="372" width="3" height="15" fill="rgb(247,108,37)"/><text x="1079.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1079" y="356" width="4" height="15" fill="rgb(214,75,20)"/><text x="1082.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1079" y="372" width="4" height="15" fill="rgb(225,183,24)"/><text x="1082.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1079" y="388" width="4" height="15" fill="rgb(252,13,49)"/><text x="1082.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.29%)</title><rect x="1072" y="340" width="15" height="15" fill="rgb(216,62,53)"/><text x="1075.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1083" y="356" width="4" height="15" fill="rgb(214,217,49)"/><text x="1086.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1083" y="372" width="4" height="15" fill="rgb(236,87,11)"/><text x="1086.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1087" y="340" width="8" height="15" fill="rgb(249,151,36)"/><text x="1090.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1091" y="356" width="4" height="15" fill="rgb(212,34,38)"/><text x="1094.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1091" y="372" width="4" height="15" fill="rgb(209,98,2)"/><text x="1094.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1095" y="340" width="3" height="15" fill="rgb(213,28,7)"/><text x="1098.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1098" y="340" width="4" height="15" fill="rgb(225,64,35)"/><text x="1101.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1098" y="356" width="4" height="15" fill="rgb(235,140,17)"/><text x="1101.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1098" y="372" width="4" height="15" fill="rgb(208,153,39)"/><text x="1101.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1098" y="388" width="4" height="15" fill="rgb(249,71,44)"/><text x="1101.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1102" y="340" width="8" height="15" fill="rgb(240,204,48)"/><text x="1105.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1106" y="356" width="4" height="15" fill="rgb(209,156,49)"/><text x="1109.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1110" y="356" width="4" height="15" fill="rgb(222,71,30)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1110" y="372" width="4" height="15" fill="rgb(235,32,29)"/><text x="1113.00" y="382.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1114" y="356" width="7" height="15" fill="rgb(223,144,15)"/><text x="1117.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.29%)</title><rect x="1110" y="340" width="15" height="15" fill="rgb(237,110,51)"/><text x="1113.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1121" y="356" width="4" height="15" fill="rgb(218,166,10)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.07%)</title><rect x="1045" y="276" width="84" height="15" fill="rgb(241,50,29)"/><text x="1048.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.14%)</title><rect x="1068" y="292" width="61" height="15" fill="rgb(250,153,19)"/><text x="1071.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.14%)</title><rect x="1068" y="308" width="61" height="15" fill="rgb(237,13,53)"/><text x="1071.00" y="318.50">onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 5.14%)</title><rect x="1068" y="324" width="61" height="15" fill="rgb(207,41,7)"/><text x="1071.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1125" y="340" width="4" height="15" fill="rgb(243,130,16)"/><text x="1128.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 7.72%)</title><rect x="1045" y="260" width="91" height="15" fill="rgb(236,123,9)"/><text x="1048.00" y="270.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1129" y="276" width="7" height="15" fill="rgb(229,163,49)"/><text x="1132.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="1133" y="292" width="3" height="15" fill="rgb(225,77,41)"/><text x="1136.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1133" y="308" width="3" height="15" fill="rgb(236,30,12)"/><text x="1136.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1136" y="276" width="4" height="15" fill="rgb(247,52,36)"/><text x="1139.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1136" y="292" width="4" height="15" fill="rgb(234,3,46)"/><text x="1139.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1136" y="308" width="4" height="15" fill="rgb(253,147,32)"/><text x="1139.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1136" y="324" width="4" height="15" fill="rgb(241,36,45)"/><text x="1139.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.96%)</title><rect x="1136" y="260" width="12" height="15" fill="rgb(219,58,22)"/><text x="1139.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="1140" y="276" width="8" height="15" fill="rgb(237,195,2)"/><text x="1143.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1148" y="260" width="4" height="15" fill="rgb(238,95,31)"/><text x="1151.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.32%)</title><rect x="1148" y="276" width="4" height="15" fill="rgb(248,206,52)"/><text x="1151.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="1148" y="292" width="4" height="15" fill="rgb(218,25,37)"/><text x="1151.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.32%)</title><rect x="1148" y="308" width="4" height="15" fill="rgb(245,37,39)"/><text x="1151.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 10.29%)</title><rect x="1034" y="244" width="121" height="15" fill="rgb(209,87,26)"/><text x="1037.00" y="254.50">onnxruntime::py..</text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1152" y="260" width="3" height="15" fill="rgb(239,165,46)"/><text x="1155.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="1152" y="276" width="3" height="15" fill="rgb(206,69,32)"/><text x="1155.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(242,225,10)"/><text x="1155.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (37 samples, 11.90%)</title><rect x="1019" y="196" width="140" height="15" fill="rgb(207,123,5)"/><text x="1022.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 11.25%)</title><rect x="1026" y="212" width="133" height="15" fill="rgb(215,40,3)"/><text x="1029.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 10.93%)</title><rect x="1030" y="228" width="129" height="15" fill="rgb(241,150,49)"/><text x="1033.00" y="238.50">void pybind11::c..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1155" y="244" width="4" height="15" fill="rgb(207,118,29)"/><text x="1158.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (50 samples, 16.08%)</title><rect x="973" y="164" width="190" height="15" fill="rgb(229,0,37)"/><text x="976.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (49 samples, 15.76%)</title><rect x="977" y="180" width="186" height="15" fill="rgb(241,40,54)"/><text x="980.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.32%)</title><rect x="1159" y="196" width="4" height="15" fill="rgb(218,16,12)"/><text x="1162.00" y="206.50"></text></g><g><title>all (311 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(232,205,53)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:52) (66 samples, 21.22%)</title><rect x="939" y="52" width="251" height="15" fill="rgb(227,153,10)"/><text x="942.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_p..</text></g><g><title>profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:51) (66 samples, 21.22%)</title><rect x="939" y="68" width="251" height="15" fill="rgb(237,81,28)"/><text x="942.00" y="78.50">profile_ort (bench_SVC_linear_m_c..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (66 samples, 21.22%)</title><rect x="939" y="84" width="251" height="15" fill="rgb(235,95,50)"/><text x="942.00" y="94.50">setup_profile (bench_SVC_linear_m..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (66 samples, 21.22%)</title><rect x="939" y="100" width="251" height="15" fill="rgb(249,45,15)"/><text x="942.00" y="110.50">profile (bench_SVC_linear_m_cl_pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (64 samples, 20.58%)</title><rect x="947" y="116" width="243" height="15" fill="rgb(215,170,7)"/><text x="950.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (64 samples, 20.58%)</title><rect x="947" y="132" width="243" height="15" fill="rgb(213,131,32)"/><text x="950.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (58 samples, 18.65%)</title><rect x="969" y="148" width="221" height="15" fill="rgb(251,202,47)"/><text x="972.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (7 samples, 2.25%)</title><rect x="1163" y="164" width="27" height="15" fill="rgb(216,101,4)"/><text x="1166.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.32%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(225,173,13)"/><text x="1189.00" y="190.50"></text></g></g></svg>