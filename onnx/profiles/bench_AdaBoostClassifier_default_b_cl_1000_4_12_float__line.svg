<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.10%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(238,39,52)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:69) (1 samples, 0.10%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(245,160,30)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.10%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(225,146,23)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.10%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(253,50,31)"/><text x="13.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(235,122,9)"/><text x="13.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(233,78,26)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.10%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(254,210,19)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.10%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(246,226,25)"/><text x="13.00" y="302.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (2 samples, 0.21%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(214,98,14)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.10%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(231,94,2)"/><text x="14.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.10%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(224,29,32)"/><text x="14.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.10%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(235,208,43)"/><text x="14.00" y="222.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.10%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(237,118,41)"/><text x="14.00" y="238.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.10%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(243,66,15)"/><text x="14.00" y="254.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(232,124,19)"/><text x="14.00" y="270.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(240,23,32)"/><text x="14.00" y="286.50"></text></g><g><title>_signature_from_callable (inspect.py:2239) (1 samples, 0.10%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(229,111,6)"/><text x="14.00" y="302.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:704) (1 samples, 0.10%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(236,13,29)"/><text x="15.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(206,46,10)"/><text x="15.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(228,137,16)"/><text x="15.00" y="286.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.10%)</title><rect x="12" y="292" width="1" height="15" fill="rgb(209,71,40)"/><text x="15.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.10%)</title><rect x="12" y="308" width="1" height="15" fill="rgb(240,114,0)"/><text x="15.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.10%)</title><rect x="12" y="324" width="1" height="15" fill="rgb(208,26,31)"/><text x="15.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.10%)</title><rect x="12" y="340" width="1" height="15" fill="rgb(221,25,2)"/><text x="15.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.10%)</title><rect x="12" y="356" width="1" height="15" fill="rgb(250,42,34)"/><text x="15.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.10%)</title><rect x="12" y="372" width="1" height="15" fill="rgb(208,8,17)"/><text x="15.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.10%)</title><rect x="12" y="388" width="1" height="15" fill="rgb(240,194,43)"/><text x="15.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.10%)</title><rect x="12" y="404" width="1" height="15" fill="rgb(211,169,6)"/><text x="15.00" y="414.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1719) (1 samples, 0.10%)</title><rect x="12" y="420" width="1" height="15" fill="rgb(248,219,47)"/><text x="15.00" y="430.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1719) (1 samples, 0.10%)</title><rect x="12" y="436" width="1" height="15" fill="rgb(217,197,0)"/><text x="15.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1718) (1 samples, 0.10%)</title><rect x="12" y="452" width="1" height="15" fill="rgb(245,184,31)"/><text x="15.00" y="462.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1719) (1 samples, 0.10%)</title><rect x="12" y="468" width="1" height="15" fill="rgb(238,60,13)"/><text x="15.00" y="478.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1718) (1 samples, 0.10%)</title><rect x="12" y="484" width="1" height="15" fill="rgb(242,75,39)"/><text x="15.00" y="494.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1718) (1 samples, 0.10%)</title><rect x="12" y="500" width="1" height="15" fill="rgb(251,95,3)"/><text x="15.00" y="510.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1696) (1 samples, 0.10%)</title><rect x="12" y="516" width="1" height="15" fill="rgb(249,220,7)"/><text x="15.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:31) (4 samples, 0.41%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(229,160,14)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:11) (4 samples, 0.41%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(230,188,30)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (4 samples, 0.41%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(252,159,9)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 0.41%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(245,70,10)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (4 samples, 0.41%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(231,201,12)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (4 samples, 0.41%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(210,210,26)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (4 samples, 0.41%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(252,63,16)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.21%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(244,173,20)"/><text x="15.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.21%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(248,5,1)"/><text x="15.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (2 samples, 0.21%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(214,90,43)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.21%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(228,28,30)"/><text x="15.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (2 samples, 0.21%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(221,29,43)"/><text x="15.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="13" y="244" width="1" height="15" fill="rgb(230,144,16)"/><text x="16.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="13" y="260" width="1" height="15" fill="rgb(221,143,5)"/><text x="16.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="13" y="276" width="1" height="15" fill="rgb(213,158,1)"/><text x="16.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="13" y="292" width="1" height="15" fill="rgb(244,181,3)"/><text x="16.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="13" y="308" width="1" height="15" fill="rgb(228,98,54)"/><text x="16.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="13" y="324" width="1" height="15" fill="rgb(215,225,4)"/><text x="16.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.41%)</title><rect x="16" y="212" width="4" height="15" fill="rgb(224,43,9)"/><text x="19.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.41%)</title><rect x="16" y="228" width="4" height="15" fill="rgb(223,197,0)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.41%)</title><rect x="16" y="244" width="4" height="15" fill="rgb(227,43,44)"/><text x="19.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.10%)</title><rect x="19" y="260" width="1" height="15" fill="rgb(209,178,19)"/><text x="22.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.10%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(252,208,39)"/><text x="23.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.21%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(215,38,39)"/><text x="25.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.21%)</title><rect x="22" y="260" width="2" height="15" fill="rgb(249,38,5)"/><text x="25.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.21%)</title><rect x="22" y="276" width="2" height="15" fill="rgb(247,107,41)"/><text x="25.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(228,211,26)"/><text x="27.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.10%)</title><rect x="24" y="260" width="1" height="15" fill="rgb(211,39,6)"/><text x="27.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.21%)</title><rect x="25" y="244" width="3" height="15" fill="rgb(250,155,46)"/><text x="28.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.21%)</title><rect x="25" y="260" width="3" height="15" fill="rgb(214,101,35)"/><text x="28.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(223,102,44)"/><text x="30.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (9 samples, 0.93%)</title><rect x="20" y="228" width="11" height="15" fill="rgb(206,179,3)"/><text x="23.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.31%)</title><rect x="28" y="244" width="3" height="15" fill="rgb(236,195,52)"/><text x="31.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.31%)</title><rect x="28" y="260" width="3" height="15" fill="rgb(229,109,25)"/><text x="31.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="30" y="276" width="1" height="15" fill="rgb(222,179,10)"/><text x="33.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (10 samples, 1.03%)</title><rect x="20" y="212" width="13" height="15" fill="rgb(237,80,4)"/><text x="23.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.10%)</title><rect x="31" y="228" width="2" height="15" fill="rgb(231,191,42)"/><text x="34.00" y="238.50"></text></g><g><title>0x7f91fc2462df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="33" y="276" width="1" height="15" fill="rgb(213,25,6)"/><text x="36.00" y="286.50"></text></g><g><title>0x7f91fc22ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="33" y="292" width="1" height="15" fill="rgb(222,131,49)"/><text x="36.00" y="302.50"></text></g><g><title>0x7f91fc22a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="33" y="308" width="1" height="15" fill="rgb(252,105,44)"/><text x="36.00" y="318.50"></text></g><g><title>0x7f91fc2202fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="33" y="324" width="1" height="15" fill="rgb(226,195,37)"/><text x="36.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.10%)</title><rect x="33" y="340" width="1" height="15" fill="rgb(211,136,17)"/><text x="36.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.10%)</title><rect x="33" y="356" width="1" height="15" fill="rgb(227,13,9)"/><text x="36.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.10%)</title><rect x="33" y="372" width="1" height="15" fill="rgb(254,97,30)"/><text x="36.00" y="382.50"></text></g><g><title>0x7f91fc246592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(248,22,32)"/><text x="37.00" y="286.50"></text></g><g><title>0x7f91fc237fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="33" y="244" width="3" height="15" fill="rgb(230,126,0)"/><text x="36.00" y="254.50"></text></g><g><title>0x7f91fc247405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="33" y="260" width="3" height="15" fill="rgb(209,147,22)"/><text x="36.00" y="270.50"></text></g><g><title>0x7f91fc2466aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="35" y="276" width="1" height="15" fill="rgb(252,9,21)"/><text x="38.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.10%)</title><rect x="36" y="260" width="1" height="15" fill="rgb(226,212,6)"/><text x="39.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.10%)</title><rect x="36" y="276" width="1" height="15" fill="rgb(220,68,51)"/><text x="39.00" y="286.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:677) (1 samples, 0.10%)</title><rect x="36" y="292" width="1" height="15" fill="rgb(250,200,39)"/><text x="39.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (5 samples, 0.52%)</title><rect x="33" y="212" width="6" height="15" fill="rgb(253,187,51)"/><text x="36.00" y="222.50"></text></g><g><title>0x7f91fc238d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.52%)</title><rect x="33" y="228" width="6" height="15" fill="rgb(244,124,41)"/><text x="36.00" y="238.50"></text></g><g><title>0x7f91fc23805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="36" y="244" width="3" height="15" fill="rgb(236,220,3)"/><text x="39.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.10%)</title><rect x="37" y="260" width="2" height="15" fill="rgb(206,184,11)"/><text x="40.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.10%)</title><rect x="37" y="276" width="2" height="15" fill="rgb(219,219,50)"/><text x="40.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="37" y="292" width="2" height="15" fill="rgb(216,77,2)"/><text x="40.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.10%)</title><rect x="37" y="308" width="2" height="15" fill="rgb(209,6,37)"/><text x="40.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.10%)</title><rect x="39" y="212" width="1" height="15" fill="rgb(238,162,21)"/><text x="42.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="39" y="228" width="1" height="15" fill="rgb(252,68,14)"/><text x="42.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.10%)</title><rect x="39" y="244" width="1" height="15" fill="rgb(232,25,1)"/><text x="42.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1219) (1 samples, 0.10%)</title><rect x="39" y="260" width="1" height="15" fill="rgb(237,197,31)"/><text x="42.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4427) (1 samples, 0.10%)</title><rect x="42" y="292" width="2" height="15" fill="rgb(243,118,51)"/><text x="45.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="44" y="308" width="1" height="15" fill="rgb(233,50,11)"/><text x="47.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="44" y="324" width="1" height="15" fill="rgb(207,54,18)"/><text x="47.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="44" y="340" width="1" height="15" fill="rgb(240,211,8)"/><text x="47.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.10%)</title><rect x="44" y="356" width="1" height="15" fill="rgb(210,64,4)"/><text x="47.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.10%)</title><rect x="45" y="356" width="1" height="15" fill="rgb(214,204,22)"/><text x="48.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="45" y="372" width="1" height="15" fill="rgb(208,116,38)"/><text x="48.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.21%)</title><rect x="45" y="324" width="2" height="15" fill="rgb(236,101,4)"/><text x="48.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.21%)</title><rect x="45" y="340" width="2" height="15" fill="rgb(235,95,3)"/><text x="48.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="46" y="356" width="1" height="15" fill="rgb(241,60,11)"/><text x="49.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="46" y="372" width="1" height="15" fill="rgb(253,182,31)"/><text x="49.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="46" y="388" width="1" height="15" fill="rgb(223,19,47)"/><text x="49.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="46" y="404" width="1" height="15" fill="rgb(214,46,46)"/><text x="49.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="46" y="420" width="1" height="15" fill="rgb(213,119,16)"/><text x="49.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="46" y="436" width="1" height="15" fill="rgb(248,48,13)"/><text x="49.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="46" y="452" width="1" height="15" fill="rgb(249,30,2)"/><text x="49.00" y="462.50"></text></g><g><title>0x7f92227f5b24 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="46" y="468" width="1" height="15" fill="rgb(252,177,14)"/><text x="49.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="47" y="324" width="1" height="15" fill="rgb(218,177,24)"/><text x="50.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="47" y="340" width="1" height="15" fill="rgb(216,89,23)"/><text x="50.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:231) (1 samples, 0.10%)</title><rect x="47" y="356" width="1" height="15" fill="rgb(212,39,54)"/><text x="50.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.10%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(252,216,4)"/><text x="51.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="48" y="324" width="3" height="15" fill="rgb(253,80,18)"/><text x="51.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="50" y="340" width="1" height="15" fill="rgb(230,69,50)"/><text x="53.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2145) (1 samples, 0.10%)</title><rect x="50" y="356" width="1" height="15" fill="rgb(239,96,42)"/><text x="53.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="51" y="340" width="1" height="15" fill="rgb(252,202,48)"/><text x="54.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.10%)</title><rect x="52" y="340" width="1" height="15" fill="rgb(239,151,28)"/><text x="55.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="53" y="340" width="2" height="15" fill="rgb(228,43,13)"/><text x="56.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="55" y="356" width="1" height="15" fill="rgb(242,187,12)"/><text x="58.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(249,187,46)"/><text x="59.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (15 samples, 1.55%)</title><rect x="40" y="212" width="18" height="15" fill="rgb(247,30,50)"/><text x="43.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 1.44%)</title><rect x="41" y="228" width="17" height="15" fill="rgb(213,113,30)"/><text x="44.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.44%)</title><rect x="41" y="244" width="17" height="15" fill="rgb(206,118,36)"/><text x="44.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 1.44%)</title><rect x="41" y="260" width="17" height="15" fill="rgb(243,110,1)"/><text x="44.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 1.34%)</title><rect x="42" y="276" width="16" height="15" fill="rgb(251,90,0)"/><text x="45.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.24%)</title><rect x="44" y="292" width="14" height="15" fill="rgb(230,120,52)"/><text x="47.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.13%)</title><rect x="45" y="308" width="13" height="15" fill="rgb(228,84,49)"/><text x="48.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.62%)</title><rect x="51" y="324" width="7" height="15" fill="rgb(213,162,37)"/><text x="54.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.31%)</title><rect x="55" y="340" width="3" height="15" fill="rgb(207,190,23)"/><text x="58.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="57" y="356" width="1" height="15" fill="rgb(214,159,6)"/><text x="60.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1845) (1 samples, 0.10%)</title><rect x="58" y="228" width="1" height="15" fill="rgb(249,58,22)"/><text x="61.00" y="238.50"></text></g><g><title>array_richcompare (arrayobject.c:1361) (1 samples, 0.10%)</title><rect x="59" y="228" width="2" height="15" fill="rgb(242,141,4)"/><text x="62.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.31%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(243,77,47)"/><text x="61.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.10%)</title><rect x="61" y="228" width="1" height="15" fill="rgb(218,65,26)"/><text x="64.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="61" y="244" width="1" height="15" fill="rgb(253,136,23)"/><text x="64.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="61" y="260" width="1" height="15" fill="rgb(251,16,41)"/><text x="64.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.10%)</title><rect x="61" y="276" width="1" height="15" fill="rgb(225,209,51)"/><text x="64.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="63" y="276" width="1" height="15" fill="rgb(225,226,0)"/><text x="66.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="63" y="292" width="1" height="15" fill="rgb(211,142,30)"/><text x="66.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.10%)</title><rect x="63" y="308" width="1" height="15" fill="rgb(216,169,4)"/><text x="66.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="64" y="324" width="1" height="15" fill="rgb(231,115,53)"/><text x="67.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.10%)</title><rect x="65" y="324" width="2" height="15" fill="rgb(225,99,49)"/><text x="68.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="64" y="276" width="4" height="15" fill="rgb(227,158,27)"/><text x="67.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="64" y="292" width="4" height="15" fill="rgb(232,95,54)"/><text x="67.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="64" y="308" width="4" height="15" fill="rgb(217,84,4)"/><text x="67.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.10%)</title><rect x="67" y="324" width="1" height="15" fill="rgb(211,84,21)"/><text x="70.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="67" y="340" width="1" height="15" fill="rgb(249,192,40)"/><text x="70.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.10%)</title><rect x="68" y="276" width="1" height="15" fill="rgb(218,116,26)"/><text x="71.00" y="286.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.10%)</title><rect x="68" y="292" width="1" height="15" fill="rgb(213,161,1)"/><text x="71.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.82%)</title><rect x="63" y="228" width="10" height="15" fill="rgb(212,195,49)"/><text x="66.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.82%)</title><rect x="63" y="244" width="10" height="15" fill="rgb(239,40,25)"/><text x="66.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.82%)</title><rect x="63" y="260" width="10" height="15" fill="rgb(218,106,15)"/><text x="66.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.31%)</title><rect x="69" y="276" width="4" height="15" fill="rgb(253,53,9)"/><text x="72.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.31%)</title><rect x="69" y="292" width="4" height="15" fill="rgb(205,158,19)"/><text x="72.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.31%)</title><rect x="69" y="308" width="4" height="15" fill="rgb(212,98,20)"/><text x="72.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.31%)</title><rect x="69" y="324" width="4" height="15" fill="rgb(250,101,6)"/><text x="72.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.31%)</title><rect x="69" y="340" width="4" height="15" fill="rgb(222,214,18)"/><text x="72.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (49 samples, 5.05%)</title><rect x="14" y="196" width="60" height="15" fill="rgb(222,149,5)"/><text x="17.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (10 samples, 1.03%)</title><rect x="62" y="212" width="12" height="15" fill="rgb(233,33,28)"/><text x="65.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="73" y="228" width="1" height="15" fill="rgb(245,101,28)"/><text x="76.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="73" y="244" width="1" height="15" fill="rgb(239,102,28)"/><text x="76.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.10%)</title><rect x="76" y="212" width="2" height="15" fill="rgb(211,86,34)"/><text x="79.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="78" y="292" width="1" height="15" fill="rgb(206,213,48)"/><text x="81.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.21%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(237,28,37)"/><text x="81.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.21%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(244,198,40)"/><text x="81.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.21%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(230,121,2)"/><text x="81.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(240,15,14)"/><text x="81.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:82) (1 samples, 0.10%)</title><rect x="79" y="292" width="1" height="15" fill="rgb(219,47,4)"/><text x="82.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="81" y="308" width="1" height="15" fill="rgb(224,85,18)"/><text x="84.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.10%)</title><rect x="81" y="324" width="1" height="15" fill="rgb(232,82,25)"/><text x="84.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="82" y="324" width="2" height="15" fill="rgb(219,26,3)"/><text x="85.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.31%)</title><rect x="84" y="324" width="3" height="15" fill="rgb(246,175,47)"/><text x="87.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="86" y="340" width="1" height="15" fill="rgb(237,227,12)"/><text x="89.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.52%)</title><rect x="82" y="308" width="7" height="15" fill="rgb(206,220,41)"/><text x="85.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.10%)</title><rect x="87" y="324" width="2" height="15" fill="rgb(211,149,22)"/><text x="90.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="87" y="340" width="2" height="15" fill="rgb(209,203,50)"/><text x="90.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="87" y="356" width="2" height="15" fill="rgb(215,80,30)"/><text x="90.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="87" y="372" width="2" height="15" fill="rgb(233,127,19)"/><text x="90.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.10%)</title><rect x="87" y="388" width="2" height="15" fill="rgb(249,106,50)"/><text x="90.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.10%)</title><rect x="87" y="404" width="2" height="15" fill="rgb(246,47,13)"/><text x="90.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="87" y="420" width="2" height="15" fill="rgb(211,192,49)"/><text x="90.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="87" y="436" width="2" height="15" fill="rgb(221,205,1)"/><text x="90.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.10%)</title><rect x="87" y="452" width="2" height="15" fill="rgb(212,123,28)"/><text x="90.00" y="462.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.21%)</title><rect x="89" y="372" width="2" height="15" fill="rgb(252,213,13)"/><text x="92.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.10%)</title><rect x="91" y="372" width="1" height="15" fill="rgb(254,130,17)"/><text x="94.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 0.62%)</title><rect x="89" y="324" width="7" height="15" fill="rgb(224,56,11)"/><text x="92.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 0.62%)</title><rect x="89" y="340" width="7" height="15" fill="rgb(214,193,52)"/><text x="92.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.62%)</title><rect x="89" y="356" width="7" height="15" fill="rgb(219,218,53)"/><text x="92.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (3 samples, 0.31%)</title><rect x="92" y="372" width="4" height="15" fill="rgb(248,189,54)"/><text x="95.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.31%)</title><rect x="92" y="388" width="4" height="15" fill="rgb(246,192,5)"/><text x="95.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="95" y="404" width="1" height="15" fill="rgb(232,71,52)"/><text x="98.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="97" y="356" width="1" height="15" fill="rgb(208,157,52)"/><text x="100.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="97" y="372" width="1" height="15" fill="rgb(239,56,43)"/><text x="100.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="97" y="388" width="1" height="15" fill="rgb(240,221,48)"/><text x="100.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.10%)</title><rect x="97" y="404" width="1" height="15" fill="rgb(225,15,46)"/><text x="100.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 0.93%)</title><rect x="89" y="308" width="11" height="15" fill="rgb(224,40,30)"/><text x="92.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.31%)</title><rect x="96" y="324" width="4" height="15" fill="rgb(251,174,45)"/><text x="99.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="97" y="340" width="3" height="15" fill="rgb(220,194,54)"/><text x="100.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="98" y="356" width="2" height="15" fill="rgb(242,12,5)"/><text x="101.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="98" y="372" width="2" height="15" fill="rgb(223,121,10)"/><text x="101.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="100" y="340" width="1" height="15" fill="rgb(218,20,8)"/><text x="103.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="100" y="356" width="1" height="15" fill="rgb(228,1,41)"/><text x="103.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="100" y="372" width="1" height="15" fill="rgb(228,3,40)"/><text x="103.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="100" y="388" width="1" height="15" fill="rgb(231,116,44)"/><text x="103.00" y="398.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="100" y="404" width="1" height="15" fill="rgb(239,130,38)"/><text x="103.00" y="414.50"></text></g><g><title>0x7f92228d2130 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="100" y="420" width="1" height="15" fill="rgb(229,212,20)"/><text x="103.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="101" y="356" width="1" height="15" fill="rgb(211,129,1)"/><text x="104.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.10%)</title><rect x="101" y="372" width="1" height="15" fill="rgb(206,62,3)"/><text x="104.00" y="382.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.10%)</title><rect x="101" y="388" width="1" height="15" fill="rgb(247,58,8)"/><text x="104.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.10%)</title><rect x="102" y="372" width="1" height="15" fill="rgb(208,196,54)"/><text x="105.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="102" y="388" width="1" height="15" fill="rgb(217,226,21)"/><text x="105.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.10%)</title><rect x="102" y="404" width="1" height="15" fill="rgb(234,130,5)"/><text x="105.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.10%)</title><rect x="102" y="420" width="1" height="15" fill="rgb(254,108,20)"/><text x="105.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="102" y="436" width="1" height="15" fill="rgb(212,142,15)"/><text x="105.00" y="446.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (3 samples, 0.31%)</title><rect x="103" y="404" width="4" height="15" fill="rgb(252,10,53)"/><text x="106.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="101" y="340" width="7" height="15" fill="rgb(221,187,19)"/><text x="104.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="102" y="356" width="6" height="15" fill="rgb(221,221,48)"/><text x="105.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.41%)</title><rect x="103" y="372" width="5" height="15" fill="rgb(212,61,9)"/><text x="106.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.41%)</title><rect x="103" y="388" width="5" height="15" fill="rgb(207,179,23)"/><text x="106.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.10%)</title><rect x="107" y="404" width="1" height="15" fill="rgb(211,53,41)"/><text x="110.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (29 samples, 2.99%)</title><rect x="74" y="196" width="35" height="15" fill="rgb(228,152,5)"/><text x="77.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (26 samples, 2.68%)</title><rect x="78" y="212" width="31" height="15" fill="rgb(220,95,35)"/><text x="81.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (24 samples, 2.47%)</title><rect x="80" y="228" width="29" height="15" fill="rgb(234,140,20)"/><text x="83.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (24 samples, 2.47%)</title><rect x="80" y="244" width="29" height="15" fill="rgb(220,152,37)"/><text x="83.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (24 samples, 2.47%)</title><rect x="80" y="260" width="29" height="15" fill="rgb(207,225,36)"/><text x="83.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (24 samples, 2.47%)</title><rect x="80" y="276" width="29" height="15" fill="rgb(235,172,4)"/><text x="83.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.47%)</title><rect x="80" y="292" width="29" height="15" fill="rgb(253,185,39)"/><text x="83.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (8 samples, 0.82%)</title><rect x="100" y="308" width="9" height="15" fill="rgb(226,76,40)"/><text x="103.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 0.82%)</title><rect x="100" y="324" width="9" height="15" fill="rgb(235,92,34)"/><text x="103.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="108" y="340" width="1" height="15" fill="rgb(244,176,22)"/><text x="111.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="108" y="356" width="1" height="15" fill="rgb(251,220,46)"/><text x="111.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="108" y="372" width="1" height="15" fill="rgb(225,149,36)"/><text x="111.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="108" y="388" width="1" height="15" fill="rgb(206,155,0)"/><text x="111.00" y="398.50"></text></g><g><title>0x7f9221a180c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="110" y="292" width="2" height="15" fill="rgb(251,156,3)"/><text x="113.00" y="302.50"></text></g><g><title>0x7f92229c6e25 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(241,29,46)"/><text x="115.00" y="302.50"></text></g><g><title>0x7f92229c6eda (libm-2.29.so) (1 samples, 0.10%)</title><rect x="114" y="292" width="1" height="15" fill="rgb(240,58,12)"/><text x="117.00" y="302.50"></text></g><g><title>0x7f92229c6eee (libm-2.29.so) (2 samples, 0.21%)</title><rect x="115" y="292" width="3" height="15" fill="rgb(248,16,16)"/><text x="118.00" y="302.50"></text></g><g><title>0x7f92229c6efa (libm-2.29.so) (2 samples, 0.21%)</title><rect x="118" y="292" width="2" height="15" fill="rgb(252,84,23)"/><text x="121.00" y="302.50"></text></g><g><title>0x7f92229c6fab (libm-2.29.so) (1 samples, 0.10%)</title><rect x="120" y="292" width="1" height="15" fill="rgb(242,13,23)"/><text x="123.00" y="302.50"></text></g><g><title>0x7f92229c7017 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="121" y="292" width="2" height="15" fill="rgb(216,91,34)"/><text x="124.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (12 samples, 1.24%)</title><rect x="109" y="196" width="15" height="15" fill="rgb(217,73,9)"/><text x="112.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.24%)</title><rect x="109" y="212" width="15" height="15" fill="rgb(223,16,12)"/><text x="112.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.24%)</title><rect x="109" y="228" width="15" height="15" fill="rgb(218,71,34)"/><text x="112.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 1.24%)</title><rect x="109" y="244" width="15" height="15" fill="rgb(237,142,2)"/><text x="112.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 1.24%)</title><rect x="109" y="260" width="15" height="15" fill="rgb(210,110,35)"/><text x="112.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 1.24%)</title><rect x="109" y="276" width="15" height="15" fill="rgb(205,195,10)"/><text x="112.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.10%)</title><rect x="123" y="292" width="1" height="15" fill="rgb(235,121,16)"/><text x="126.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="125" y="212" width="1" height="15" fill="rgb(254,56,26)"/><text x="128.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="125" y="228" width="1" height="15" fill="rgb(223,227,31)"/><text x="128.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="125" y="244" width="1" height="15" fill="rgb(209,39,36)"/><text x="128.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.10%)</title><rect x="127" y="276" width="2" height="15" fill="rgb(232,24,2)"/><text x="130.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.21%)</title><rect x="127" y="244" width="3" height="15" fill="rgb(218,115,28)"/><text x="130.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.21%)</title><rect x="127" y="260" width="3" height="15" fill="rgb(220,103,2)"/><text x="130.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.10%)</title><rect x="129" y="276" width="1" height="15" fill="rgb(222,206,37)"/><text x="132.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.10%)</title><rect x="129" y="292" width="1" height="15" fill="rgb(223,145,2)"/><text x="132.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="130" y="244" width="1" height="15" fill="rgb(225,225,30)"/><text x="133.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.10%)</title><rect x="130" y="260" width="1" height="15" fill="rgb(245,13,14)"/><text x="133.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.10%)</title><rect x="130" y="276" width="1" height="15" fill="rgb(225,158,34)"/><text x="133.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.10%)</title><rect x="131" y="292" width="1" height="15" fill="rgb(207,50,20)"/><text x="134.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.31%)</title><rect x="131" y="244" width="4" height="15" fill="rgb(224,182,11)"/><text x="134.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (3 samples, 0.31%)</title><rect x="131" y="260" width="4" height="15" fill="rgb(205,139,50)"/><text x="134.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.31%)</title><rect x="131" y="276" width="4" height="15" fill="rgb(248,197,52)"/><text x="134.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.21%)</title><rect x="132" y="292" width="3" height="15" fill="rgb(252,96,2)"/><text x="135.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.21%)</title><rect x="132" y="308" width="3" height="15" fill="rgb(232,189,22)"/><text x="135.00" y="318.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:696) (1 samples, 0.10%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(210,2,2)"/><text x="138.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="135" y="276" width="2" height="15" fill="rgb(206,91,51)"/><text x="138.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.10%)</title><rect x="136" y="292" width="1" height="15" fill="rgb(251,130,45)"/><text x="139.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.10%)</title><rect x="136" y="308" width="1" height="15" fill="rgb(217,104,30)"/><text x="139.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (10 samples, 1.03%)</title><rect x="126" y="212" width="12" height="15" fill="rgb(243,170,22)"/><text x="129.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.93%)</title><rect x="127" y="228" width="11" height="15" fill="rgb(215,39,37)"/><text x="130.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="135" y="244" width="3" height="15" fill="rgb(231,139,44)"/><text x="138.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.31%)</title><rect x="135" y="260" width="3" height="15" fill="rgb(224,105,45)"/><text x="138.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.10%)</title><rect x="137" y="276" width="1" height="15" fill="rgb(219,178,12)"/><text x="140.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="137" y="292" width="1" height="15" fill="rgb(254,148,2)"/><text x="140.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1714) (1 samples, 0.10%)</title><rect x="138" y="212" width="2" height="15" fill="rgb(229,201,44)"/><text x="141.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.10%)</title><rect x="140" y="292" width="1" height="15" fill="rgb(245,158,11)"/><text x="143.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.10%)</title><rect x="140" y="308" width="1" height="15" fill="rgb(211,89,29)"/><text x="143.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="140" y="276" width="2" height="15" fill="rgb(238,8,17)"/><text x="143.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="141" y="292" width="1" height="15" fill="rgb(220,227,24)"/><text x="144.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.10%)</title><rect x="141" y="308" width="1" height="15" fill="rgb(249,123,26)"/><text x="144.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.10%)</title><rect x="141" y="324" width="1" height="15" fill="rgb(237,20,21)"/><text x="144.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="141" y="340" width="1" height="15" fill="rgb(225,57,28)"/><text x="144.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="141" y="356" width="1" height="15" fill="rgb(252,160,53)"/><text x="144.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="142" y="324" width="1" height="15" fill="rgb(222,182,39)"/><text x="145.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.10%)</title><rect x="143" y="340" width="2" height="15" fill="rgb(206,114,53)"/><text x="146.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="142" y="276" width="4" height="15" fill="rgb(254,179,4)"/><text x="145.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="142" y="292" width="4" height="15" fill="rgb(220,91,33)"/><text x="145.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="142" y="308" width="4" height="15" fill="rgb(247,100,32)"/><text x="145.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="143" y="324" width="3" height="15" fill="rgb(211,97,2)"/><text x="146.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="145" y="340" width="1" height="15" fill="rgb(228,213,2)"/><text x="148.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 0.62%)</title><rect x="140" y="212" width="7" height="15" fill="rgb(226,197,52)"/><text x="143.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="140" y="228" width="7" height="15" fill="rgb(209,73,11)"/><text x="143.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.62%)</title><rect x="140" y="244" width="7" height="15" fill="rgb(208,31,39)"/><text x="143.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.62%)</title><rect x="140" y="260" width="7" height="15" fill="rgb(245,84,31)"/><text x="143.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="146" y="276" width="1" height="15" fill="rgb(224,224,28)"/><text x="149.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.10%)</title><rect x="146" y="292" width="1" height="15" fill="rgb(231,221,2)"/><text x="149.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.10%)</title><rect x="146" y="308" width="1" height="15" fill="rgb(247,187,11)"/><text x="149.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="152" y="260" width="2" height="15" fill="rgb(219,139,45)"/><text x="155.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="152" y="276" width="2" height="15" fill="rgb(252,80,11)"/><text x="155.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="152" y="292" width="2" height="15" fill="rgb(218,64,43)"/><text x="155.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.21%)</title><rect x="152" y="308" width="2" height="15" fill="rgb(229,187,22)"/><text x="155.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="152" y="324" width="2" height="15" fill="rgb(247,120,10)"/><text x="155.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.21%)</title><rect x="152" y="340" width="2" height="15" fill="rgb(218,125,40)"/><text x="155.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.10%)</title><rect x="154" y="292" width="1" height="15" fill="rgb(253,159,19)"/><text x="157.00" y="302.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.10%)</title><rect x="154" y="308" width="1" height="15" fill="rgb(232,0,26)"/><text x="157.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.10%)</title><rect x="155" y="340" width="2" height="15" fill="rgb(231,96,47)"/><text x="158.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.10%)</title><rect x="155" y="356" width="2" height="15" fill="rgb(223,92,37)"/><text x="158.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.21%)</title><rect x="155" y="292" width="3" height="15" fill="rgb(253,146,24)"/><text x="158.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.21%)</title><rect x="155" y="308" width="3" height="15" fill="rgb(247,31,42)"/><text x="158.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.21%)</title><rect x="155" y="324" width="3" height="15" fill="rgb(246,37,2)"/><text x="158.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.10%)</title><rect x="157" y="340" width="1" height="15" fill="rgb(217,49,13)"/><text x="160.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1637) (1 samples, 0.10%)</title><rect x="157" y="356" width="1" height="15" fill="rgb(244,220,20)"/><text x="160.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="158" y="308" width="1" height="15" fill="rgb(218,137,14)"/><text x="161.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="158" y="324" width="1" height="15" fill="rgb(212,180,41)"/><text x="161.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="158" y="340" width="1" height="15" fill="rgb(248,78,23)"/><text x="161.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.10%)</title><rect x="158" y="356" width="1" height="15" fill="rgb(206,110,51)"/><text x="161.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="158" y="372" width="1" height="15" fill="rgb(214,211,51)"/><text x="161.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:125) (1 samples, 0.10%)</title><rect x="159" y="324" width="1" height="15" fill="rgb(243,114,53)"/><text x="162.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="159" y="308" width="3" height="15" fill="rgb(205,129,10)"/><text x="162.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.10%)</title><rect x="160" y="324" width="2" height="15" fill="rgb(218,189,50)"/><text x="163.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="163" y="340" width="1" height="15" fill="rgb(233,185,2)"/><text x="166.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.21%)</title><rect x="165" y="356" width="3" height="15" fill="rgb(248,153,3)"/><text x="168.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.41%)</title><rect x="164" y="340" width="5" height="15" fill="rgb(250,125,42)"/><text x="167.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.10%)</title><rect x="168" y="356" width="1" height="15" fill="rgb(218,116,25)"/><text x="171.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="169" y="340" width="1" height="15" fill="rgb(210,192,49)"/><text x="172.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (129 samples, 13.30%)</title><rect x="14" y="148" width="157" height="15" fill="rgb(236,91,2)"/><text x="17.00" y="158.50">predict_proba (sklea..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (129 samples, 13.30%)</title><rect x="14" y="164" width="157" height="15" fill="rgb(207,161,21)"/><text x="17.00" y="174.50">decision_function (s..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (129 samples, 13.30%)</title><rect x="14" y="180" width="157" height="15" fill="rgb(254,97,15)"/><text x="17.00" y="190.50">&lt;genexpr&gt; (sklearn/e..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (39 samples, 4.02%)</title><rect x="124" y="196" width="47" height="15" fill="rgb(212,85,9)"/><text x="127.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (20 samples, 2.06%)</title><rect x="147" y="212" width="24" height="15" fill="rgb(222,18,20)"/><text x="150.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 2.06%)</title><rect x="147" y="228" width="24" height="15" fill="rgb(236,48,23)"/><text x="150.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (19 samples, 1.96%)</title><rect x="148" y="244" width="23" height="15" fill="rgb(240,228,51)"/><text x="151.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 1.44%)</title><rect x="154" y="260" width="17" height="15" fill="rgb(242,146,23)"/><text x="157.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 1.44%)</title><rect x="154" y="276" width="17" height="15" fill="rgb(252,4,52)"/><text x="157.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.13%)</title><rect x="158" y="292" width="13" height="15" fill="rgb(236,72,29)"/><text x="161.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.82%)</title><rect x="162" y="308" width="9" height="15" fill="rgb(249,158,49)"/><text x="165.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 0.82%)</title><rect x="162" y="324" width="9" height="15" fill="rgb(235,115,26)"/><text x="165.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.10%)</title><rect x="170" y="340" width="1" height="15" fill="rgb(223,89,9)"/><text x="173.00" y="350.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (130 samples, 13.40%)</title><rect x="14" y="100" width="159" height="15" fill="rgb(206,160,40)"/><text x="17.00" y="110.50">profile (bench_AdaBo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (130 samples, 13.40%)</title><rect x="14" y="116" width="159" height="15" fill="rgb(251,90,40)"/><text x="17.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (130 samples, 13.40%)</title><rect x="14" y="132" width="159" height="15" fill="rgb(248,72,6)"/><text x="17.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.10%)</title><rect x="171" y="148" width="2" height="15" fill="rgb(205,7,1)"/><text x="174.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.10%)</title><rect x="171" y="164" width="2" height="15" fill="rgb(221,106,24)"/><text x="174.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.10%)</title><rect x="171" y="180" width="2" height="15" fill="rgb(254,185,36)"/><text x="174.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="171" y="196" width="2" height="15" fill="rgb(245,199,43)"/><text x="174.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.10%)</title><rect x="171" y="212" width="2" height="15" fill="rgb(238,24,40)"/><text x="174.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:800) (1 samples, 0.10%)</title><rect x="173" y="148" width="1" height="15" fill="rgb(210,44,20)"/><text x="176.00" y="158.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.10%)</title><rect x="174" y="148" width="1" height="15" fill="rgb(239,222,46)"/><text x="177.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.10%)</title><rect x="174" y="164" width="1" height="15" fill="rgb(221,125,1)"/><text x="177.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.10%)</title><rect x="174" y="180" width="1" height="15" fill="rgb(220,97,47)"/><text x="177.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.10%)</title><rect x="174" y="196" width="1" height="15" fill="rgb(230,124,13)"/><text x="177.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.10%)</title><rect x="180" y="260" width="1" height="15" fill="rgb(231,135,5)"/><text x="183.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.41%)</title><rect x="177" y="244" width="5" height="15" fill="rgb(210,133,0)"/><text x="180.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="181" y="260" width="1" height="15" fill="rgb(254,162,52)"/><text x="184.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.52%)</title><rect x="177" y="212" width="6" height="15" fill="rgb(211,228,30)"/><text x="180.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.52%)</title><rect x="177" y="228" width="6" height="15" fill="rgb(207,86,49)"/><text x="180.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.10%)</title><rect x="182" y="244" width="1" height="15" fill="rgb(216,108,17)"/><text x="185.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.10%)</title><rect x="187" y="244" width="1" height="15" fill="rgb(244,56,52)"/><text x="190.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.10%)</title><rect x="187" y="260" width="1" height="15" fill="rgb(215,63,47)"/><text x="190.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.31%)</title><rect x="188" y="244" width="4" height="15" fill="rgb(251,210,47)"/><text x="191.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.10%)</title><rect x="191" y="260" width="1" height="15" fill="rgb(233,54,35)"/><text x="194.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.10%)</title><rect x="192" y="276" width="1" height="15" fill="rgb(214,157,23)"/><text x="195.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.10%)</title><rect x="193" y="276" width="1" height="15" fill="rgb(240,150,46)"/><text x="196.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.41%)</title><rect x="192" y="244" width="5" height="15" fill="rgb(218,221,16)"/><text x="195.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 0.41%)</title><rect x="192" y="260" width="5" height="15" fill="rgb(254,127,21)"/><text x="195.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.21%)</title><rect x="194" y="276" width="3" height="15" fill="rgb(254,134,31)"/><text x="197.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.10%)</title><rect x="197" y="244" width="1" height="15" fill="rgb(218,215,22)"/><text x="200.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="197" y="260" width="1" height="15" fill="rgb(238,76,7)"/><text x="200.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="197" y="276" width="1" height="15" fill="rgb(226,29,19)"/><text x="200.00" y="286.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.10%)</title><rect x="197" y="292" width="1" height="15" fill="rgb(246,67,1)"/><text x="200.00" y="302.50"></text></g><g><title>0x7f9221a162b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="197" y="308" width="1" height="15" fill="rgb(236,171,23)"/><text x="200.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="198" y="244" width="1" height="15" fill="rgb(234,91,50)"/><text x="201.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.10%)</title><rect x="198" y="260" width="1" height="15" fill="rgb(236,131,27)"/><text x="201.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="199" y="244" width="1" height="15" fill="rgb(250,50,54)"/><text x="202.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="199" y="260" width="1" height="15" fill="rgb(216,205,46)"/><text x="202.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.10%)</title><rect x="200" y="244" width="2" height="15" fill="rgb(217,112,31)"/><text x="203.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.21%)</title><rect x="202" y="276" width="2" height="15" fill="rgb(218,53,17)"/><text x="205.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.31%)</title><rect x="202" y="244" width="3" height="15" fill="rgb(237,222,31)"/><text x="205.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.31%)</title><rect x="202" y="260" width="3" height="15" fill="rgb(216,229,40)"/><text x="205.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.10%)</title><rect x="204" y="276" width="1" height="15" fill="rgb(234,16,1)"/><text x="207.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.10%)</title><rect x="205" y="244" width="2" height="15" fill="rgb(222,179,48)"/><text x="208.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.21%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(234,62,28)"/><text x="210.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.41%)</title><rect x="207" y="244" width="4" height="15" fill="rgb(210,78,5)"/><text x="210.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.21%)</title><rect x="209" y="260" width="2" height="15" fill="rgb(238,61,12)"/><text x="212.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.21%)</title><rect x="209" y="276" width="2" height="15" fill="rgb(225,102,52)"/><text x="212.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.10%)</title><rect x="210" y="292" width="1" height="15" fill="rgb(214,122,18)"/><text x="213.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (24 samples, 2.47%)</title><rect x="183" y="212" width="30" height="15" fill="rgb(223,184,45)"/><text x="186.00" y="222.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (24 samples, 2.47%)</title><rect x="183" y="228" width="30" height="15" fill="rgb(227,82,52)"/><text x="186.00" y="238.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.10%)</title><rect x="211" y="244" width="2" height="15" fill="rgb(254,67,6)"/><text x="214.00" y="254.50"></text></g><g><title>0x7f91fc2462df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="213" y="276" width="1" height="15" fill="rgb(223,124,33)"/><text x="216.00" y="286.50"></text></g><g><title>0x7f91fc22ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="213" y="292" width="1" height="15" fill="rgb(232,45,41)"/><text x="216.00" y="302.50"></text></g><g><title>0x7f91fc22a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="213" y="308" width="1" height="15" fill="rgb(227,49,53)"/><text x="216.00" y="318.50"></text></g><g><title>0x7f91fc2202fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="213" y="324" width="1" height="15" fill="rgb(254,67,49)"/><text x="216.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:826) (1 samples, 0.10%)</title><rect x="213" y="340" width="1" height="15" fill="rgb(222,191,49)"/><text x="216.00" y="350.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.21%)</title><rect x="214" y="292" width="2" height="15" fill="rgb(247,175,29)"/><text x="217.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.10%)</title><rect x="216" y="372" width="2" height="15" fill="rgb(228,75,51)"/><text x="219.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="216" y="388" width="2" height="15" fill="rgb(225,7,40)"/><text x="219.00" y="398.50"></text></g><g><title>0x7f91fc247405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.52%)</title><rect x="213" y="260" width="6" height="15" fill="rgb(219,26,15)"/><text x="216.00" y="270.50"></text></g><g><title>0x7f91fc246592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="214" y="276" width="5" height="15" fill="rgb(213,135,42)"/><text x="217.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.21%)</title><rect x="216" y="292" width="3" height="15" fill="rgb(234,173,32)"/><text x="219.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.21%)</title><rect x="216" y="308" width="3" height="15" fill="rgb(205,105,4)"/><text x="219.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.21%)</title><rect x="216" y="324" width="3" height="15" fill="rgb(211,73,48)"/><text x="219.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.21%)</title><rect x="216" y="340" width="3" height="15" fill="rgb(221,169,35)"/><text x="219.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.21%)</title><rect x="216" y="356" width="3" height="15" fill="rgb(233,7,14)"/><text x="219.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.10%)</title><rect x="218" y="372" width="1" height="15" fill="rgb(251,212,22)"/><text x="221.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="218" y="388" width="1" height="15" fill="rgb(219,84,23)"/><text x="221.00" y="398.50"></text></g><g><title>0x7f91fc237fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="213" y="244" width="7" height="15" fill="rgb(241,42,18)"/><text x="216.00" y="254.50"></text></g><g><title>0x7f91fc247540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="219" y="260" width="1" height="15" fill="rgb(215,10,49)"/><text x="222.00" y="270.50"></text></g><g><title>0x7f91fc21c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="219" y="276" width="1" height="15" fill="rgb(225,157,42)"/><text x="222.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.10%)</title><rect x="220" y="260" width="1" height="15" fill="rgb(245,157,29)"/><text x="223.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.10%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(239,86,31)"/><text x="223.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.10%)</title><rect x="221" y="292" width="1" height="15" fill="rgb(221,226,43)"/><text x="224.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.21%)</title><rect x="221" y="276" width="3" height="15" fill="rgb(220,71,12)"/><text x="224.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.10%)</title><rect x="222" y="292" width="2" height="15" fill="rgb(209,54,23)"/><text x="225.00" y="302.50"></text></g><g><title>0x7f91fc23805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="220" y="244" width="5" height="15" fill="rgb(244,142,17)"/><text x="223.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.31%)</title><rect x="221" y="260" width="4" height="15" fill="rgb(245,216,21)"/><text x="224.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.10%)</title><rect x="224" y="276" width="1" height="15" fill="rgb(216,67,25)"/><text x="227.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.10%)</title><rect x="224" y="292" width="1" height="15" fill="rgb(249,46,11)"/><text x="227.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.10%)</title><rect x="224" y="308" width="1" height="15" fill="rgb(237,54,42)"/><text x="227.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1965) (1 samples, 0.10%)</title><rect x="224" y="324" width="1" height="15" fill="rgb(244,122,6)"/><text x="227.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="225" y="260" width="1" height="15" fill="rgb(237,138,53)"/><text x="228.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="225" y="276" width="1" height="15" fill="rgb(220,6,19)"/><text x="228.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.10%)</title><rect x="225" y="292" width="1" height="15" fill="rgb(209,3,5)"/><text x="228.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.10%)</title><rect x="225" y="308" width="1" height="15" fill="rgb(209,193,8)"/><text x="228.00" y="318.50"></text></g><g><title>0x7f92227f4965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="225" y="324" width="1" height="15" fill="rgb(248,158,46)"/><text x="228.00" y="334.50"></text></g><g><title>0x7f91fc23814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="225" y="244" width="2" height="15" fill="rgb(219,159,24)"/><text x="228.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="226" y="260" width="1" height="15" fill="rgb(220,44,35)"/><text x="229.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(231,140,12)"/><text x="229.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="226" y="292" width="1" height="15" fill="rgb(215,105,18)"/><text x="229.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.10%)</title><rect x="226" y="308" width="1" height="15" fill="rgb(243,124,49)"/><text x="229.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (13 samples, 1.34%)</title><rect x="213" y="212" width="15" height="15" fill="rgb(254,198,38)"/><text x="216.00" y="222.50"></text></g><g><title>0x7f91fc238d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.34%)</title><rect x="213" y="228" width="15" height="15" fill="rgb(254,5,47)"/><text x="216.00" y="238.50"></text></g><g><title>0x7f91fc238ae7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="227" y="244" width="1" height="15" fill="rgb(224,160,23)"/><text x="230.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.10%)</title><rect x="228" y="212" width="2" height="15" fill="rgb(214,121,39)"/><text x="231.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="228" y="228" width="2" height="15" fill="rgb(220,54,31)"/><text x="231.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:458) (1 samples, 0.10%)</title><rect x="228" y="244" width="2" height="15" fill="rgb(231,25,18)"/><text x="231.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="231" y="356" width="1" height="15" fill="rgb(233,59,26)"/><text x="234.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.41%)</title><rect x="231" y="276" width="5" height="15" fill="rgb(240,98,8)"/><text x="234.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.41%)</title><rect x="231" y="292" width="5" height="15" fill="rgb(233,76,18)"/><text x="234.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.41%)</title><rect x="231" y="308" width="5" height="15" fill="rgb(211,201,35)"/><text x="234.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 0.41%)</title><rect x="231" y="324" width="5" height="15" fill="rgb(240,2,13)"/><text x="234.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 0.41%)</title><rect x="231" y="340" width="5" height="15" fill="rgb(205,208,25)"/><text x="234.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.31%)</title><rect x="232" y="356" width="4" height="15" fill="rgb(231,91,10)"/><text x="235.00" y="366.50"></text></g><g><title>0x7f922280ae7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="235" y="372" width="1" height="15" fill="rgb(230,157,4)"/><text x="238.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="236" y="324" width="1" height="15" fill="rgb(229,155,5)"/><text x="239.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="236" y="340" width="1" height="15" fill="rgb(222,64,34)"/><text x="239.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.10%)</title><rect x="236" y="356" width="1" height="15" fill="rgb(209,30,28)"/><text x="239.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.10%)</title><rect x="236" y="372" width="1" height="15" fill="rgb(209,121,27)"/><text x="239.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3494) (1 samples, 0.10%)</title><rect x="236" y="388" width="1" height="15" fill="rgb(212,111,47)"/><text x="239.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:538) (1 samples, 0.10%)</title><rect x="237" y="324" width="1" height="15" fill="rgb(230,88,3)"/><text x="240.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (2 samples, 0.21%)</title><rect x="238" y="340" width="3" height="15" fill="rgb(210,155,24)"/><text x="241.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (3 samples, 0.31%)</title><rect x="241" y="356" width="3" height="15" fill="rgb(253,94,22)"/><text x="244.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.10%)</title><rect x="244" y="356" width="1" height="15" fill="rgb(244,193,10)"/><text x="247.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.10%)</title><rect x="244" y="372" width="1" height="15" fill="rgb(215,52,11)"/><text x="247.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="245" y="356" width="2" height="15" fill="rgb(240,219,32)"/><text x="248.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.72%)</title><rect x="241" y="340" width="8" height="15" fill="rgb(248,124,30)"/><text x="244.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (2 samples, 0.21%)</title><rect x="247" y="356" width="2" height="15" fill="rgb(217,90,30)"/><text x="250.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (17 samples, 1.75%)</title><rect x="230" y="212" width="20" height="15" fill="rgb(243,37,45)"/><text x="233.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 1.65%)</title><rect x="231" y="228" width="19" height="15" fill="rgb(226,70,51)"/><text x="234.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 1.65%)</title><rect x="231" y="244" width="19" height="15" fill="rgb(205,89,0)"/><text x="234.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 1.65%)</title><rect x="231" y="260" width="19" height="15" fill="rgb(243,37,20)"/><text x="234.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.24%)</title><rect x="236" y="276" width="14" height="15" fill="rgb(209,205,42)"/><text x="239.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.24%)</title><rect x="236" y="292" width="14" height="15" fill="rgb(213,137,22)"/><text x="239.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 1.24%)</title><rect x="236" y="308" width="14" height="15" fill="rgb(249,209,52)"/><text x="239.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.03%)</title><rect x="238" y="324" width="12" height="15" fill="rgb(241,108,28)"/><text x="241.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.10%)</title><rect x="249" y="340" width="1" height="15" fill="rgb(214,205,19)"/><text x="252.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="249" y="356" width="1" height="15" fill="rgb(243,203,50)"/><text x="252.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="250" y="228" width="2" height="15" fill="rgb(231,201,16)"/><text x="253.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(219,214,43)"/><text x="253.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(252,69,5)"/><text x="253.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="252" y="260" width="1" height="15" fill="rgb(235,83,50)"/><text x="255.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.10%)</title><rect x="252" y="276" width="1" height="15" fill="rgb(213,102,39)"/><text x="255.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.10%)</title><rect x="252" y="292" width="1" height="15" fill="rgb(216,109,1)"/><text x="255.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.10%)</title><rect x="252" y="308" width="1" height="15" fill="rgb(242,143,44)"/><text x="255.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.10%)</title><rect x="252" y="324" width="1" height="15" fill="rgb(240,113,43)"/><text x="255.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.31%)</title><rect x="250" y="212" width="4" height="15" fill="rgb(220,4,6)"/><text x="253.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.21%)</title><rect x="252" y="228" width="2" height="15" fill="rgb(206,218,25)"/><text x="255.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="252" y="244" width="2" height="15" fill="rgb(240,168,30)"/><text x="255.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="253" y="260" width="1" height="15" fill="rgb(252,193,5)"/><text x="256.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="253" y="276" width="1" height="15" fill="rgb(243,142,3)"/><text x="256.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.10%)</title><rect x="253" y="292" width="1" height="15" fill="rgb(247,108,3)"/><text x="256.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="254" y="276" width="1" height="15" fill="rgb(242,13,43)"/><text x="257.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="254" y="292" width="1" height="15" fill="rgb(223,59,28)"/><text x="257.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.10%)</title><rect x="254" y="308" width="1" height="15" fill="rgb(234,142,31)"/><text x="257.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.10%)</title><rect x="255" y="292" width="1" height="15" fill="rgb(242,92,22)"/><text x="258.00" y="302.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1752) (1 samples, 0.10%)</title><rect x="255" y="308" width="1" height="15" fill="rgb(221,91,24)"/><text x="258.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.41%)</title><rect x="255" y="276" width="5" height="15" fill="rgb(249,85,50)"/><text x="258.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="256" y="292" width="4" height="15" fill="rgb(226,221,17)"/><text x="259.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="256" y="308" width="4" height="15" fill="rgb(232,22,15)"/><text x="259.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="258" y="324" width="2" height="15" fill="rgb(225,172,37)"/><text x="261.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.21%)</title><rect x="258" y="340" width="2" height="15" fill="rgb(246,31,11)"/><text x="261.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (72 samples, 7.42%)</title><rect x="176" y="196" width="88" height="15" fill="rgb(206,178,10)"/><text x="179.00" y="206.50">_samme_pro..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 0.82%)</title><rect x="254" y="212" width="10" height="15" fill="rgb(240,128,26)"/><text x="257.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 0.82%)</title><rect x="254" y="228" width="10" height="15" fill="rgb(254,0,35)"/><text x="257.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.82%)</title><rect x="254" y="244" width="10" height="15" fill="rgb(209,15,33)"/><text x="257.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.82%)</title><rect x="254" y="260" width="10" height="15" fill="rgb(238,167,51)"/><text x="257.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.31%)</title><rect x="260" y="276" width="4" height="15" fill="rgb(236,158,1)"/><text x="263.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.31%)</title><rect x="260" y="292" width="4" height="15" fill="rgb(209,30,30)"/><text x="263.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.31%)</title><rect x="260" y="308" width="4" height="15" fill="rgb(252,92,26)"/><text x="263.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.31%)</title><rect x="260" y="324" width="4" height="15" fill="rgb(239,11,14)"/><text x="263.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.31%)</title><rect x="260" y="340" width="4" height="15" fill="rgb(214,10,42)"/><text x="263.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.10%)</title><rect x="264" y="212" width="1" height="15" fill="rgb(242,110,13)"/><text x="267.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.10%)</title><rect x="264" y="228" width="1" height="15" fill="rgb(209,0,0)"/><text x="267.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.10%)</title><rect x="265" y="228" width="1" height="15" fill="rgb(252,144,49)"/><text x="268.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.21%)</title><rect x="266" y="228" width="3" height="15" fill="rgb(236,95,54)"/><text x="269.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.21%)</title><rect x="266" y="244" width="3" height="15" fill="rgb(220,203,30)"/><text x="269.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.21%)</title><rect x="266" y="260" width="3" height="15" fill="rgb(215,144,49)"/><text x="269.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="266" y="276" width="3" height="15" fill="rgb(224,115,27)"/><text x="269.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.21%)</title><rect x="266" y="292" width="3" height="15" fill="rgb(250,191,34)"/><text x="269.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="267" y="308" width="2" height="15" fill="rgb(225,203,35)"/><text x="270.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.10%)</title><rect x="272" y="260" width="1" height="15" fill="rgb(223,51,28)"/><text x="275.00" y="270.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.10%)</title><rect x="275" y="324" width="1" height="15" fill="rgb(247,181,35)"/><text x="278.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (2 samples, 0.21%)</title><rect x="275" y="308" width="2" height="15" fill="rgb(223,85,52)"/><text x="278.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.10%)</title><rect x="276" y="324" width="1" height="15" fill="rgb(223,124,3)"/><text x="279.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="277" y="324" width="1" height="15" fill="rgb(220,104,44)"/><text x="280.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.31%)</title><rect x="278" y="324" width="4" height="15" fill="rgb(225,94,9)"/><text x="281.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="280" y="340" width="2" height="15" fill="rgb(234,149,47)"/><text x="283.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.21%)</title><rect x="280" y="356" width="2" height="15" fill="rgb(222,90,28)"/><text x="283.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.21%)</title><rect x="280" y="372" width="2" height="15" fill="rgb(250,89,31)"/><text x="283.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.21%)</title><rect x="280" y="388" width="2" height="15" fill="rgb(246,114,19)"/><text x="283.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="280" y="404" width="2" height="15" fill="rgb(206,162,1)"/><text x="283.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.21%)</title><rect x="280" y="420" width="2" height="15" fill="rgb(215,26,9)"/><text x="283.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="282" y="340" width="1" height="15" fill="rgb(251,165,3)"/><text x="285.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="282" y="356" width="1" height="15" fill="rgb(243,154,23)"/><text x="285.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.10%)</title><rect x="282" y="372" width="1" height="15" fill="rgb(219,19,8)"/><text x="285.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.10%)</title><rect x="282" y="388" width="1" height="15" fill="rgb(213,151,49)"/><text x="285.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="283" y="340" width="1" height="15" fill="rgb(220,98,37)"/><text x="286.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.10%)</title><rect x="283" y="356" width="1" height="15" fill="rgb(227,140,29)"/><text x="286.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="283" y="372" width="1" height="15" fill="rgb(243,41,28)"/><text x="286.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 0.72%)</title><rect x="277" y="308" width="9" height="15" fill="rgb(210,49,43)"/><text x="280.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.31%)</title><rect x="282" y="324" width="4" height="15" fill="rgb(208,181,42)"/><text x="285.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.10%)</title><rect x="284" y="340" width="2" height="15" fill="rgb(221,139,18)"/><text x="287.00" y="350.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.10%)</title><rect x="284" y="356" width="2" height="15" fill="rgb(206,132,23)"/><text x="287.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="286" y="324" width="1" height="15" fill="rgb(247,142,14)"/><text x="289.00" y="334.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.21%)</title><rect x="288" y="372" width="3" height="15" fill="rgb(238,35,12)"/><text x="291.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="294" y="436" width="1" height="15" fill="rgb(217,118,2)"/><text x="297.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.10%)</title><rect x="294" y="452" width="1" height="15" fill="rgb(244,194,34)"/><text x="297.00" y="462.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.10%)</title><rect x="294" y="468" width="1" height="15" fill="rgb(208,18,46)"/><text x="297.00" y="478.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 0.82%)</title><rect x="287" y="324" width="10" height="15" fill="rgb(228,14,16)"/><text x="290.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 0.82%)</title><rect x="287" y="340" width="10" height="15" fill="rgb(229,162,16)"/><text x="290.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 0.72%)</title><rect x="288" y="356" width="9" height="15" fill="rgb(217,18,37)"/><text x="291.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 0.52%)</title><rect x="291" y="372" width="6" height="15" fill="rgb(206,55,24)"/><text x="294.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.31%)</title><rect x="293" y="388" width="4" height="15" fill="rgb(216,191,46)"/><text x="296.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.21%)</title><rect x="294" y="404" width="3" height="15" fill="rgb(254,87,3)"/><text x="297.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.21%)</title><rect x="294" y="420" width="3" height="15" fill="rgb(225,119,41)"/><text x="297.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="295" y="436" width="2" height="15" fill="rgb(230,37,49)"/><text x="298.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.10%)</title><rect x="295" y="452" width="2" height="15" fill="rgb(239,55,14)"/><text x="298.00" y="462.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:128) (1 samples, 0.10%)</title><rect x="295" y="468" width="2" height="15" fill="rgb(238,1,5)"/><text x="298.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="297" y="340" width="1" height="15" fill="rgb(243,38,21)"/><text x="300.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="297" y="356" width="1" height="15" fill="rgb(250,122,11)"/><text x="300.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="297" y="372" width="1" height="15" fill="rgb(238,195,39)"/><text x="300.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.10%)</title><rect x="297" y="388" width="1" height="15" fill="rgb(209,122,46)"/><text x="300.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.21%)</title><rect x="298" y="388" width="2" height="15" fill="rgb(234,109,23)"/><text x="301.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.21%)</title><rect x="298" y="404" width="2" height="15" fill="rgb(242,22,42)"/><text x="301.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.31%)</title><rect x="298" y="356" width="3" height="15" fill="rgb(219,134,31)"/><text x="301.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.31%)</title><rect x="298" y="372" width="3" height="15" fill="rgb(236,23,11)"/><text x="301.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="300" y="388" width="1" height="15" fill="rgb(244,39,33)"/><text x="303.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="300" y="404" width="1" height="15" fill="rgb(224,83,20)"/><text x="303.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.10%)</title><rect x="300" y="420" width="1" height="15" fill="rgb(228,81,29)"/><text x="303.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (14 samples, 1.44%)</title><rect x="286" y="308" width="17" height="15" fill="rgb(241,100,10)"/><text x="289.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.52%)</title><rect x="297" y="324" width="6" height="15" fill="rgb(249,119,30)"/><text x="300.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="298" y="340" width="5" height="15" fill="rgb(212,57,1)"/><text x="301.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="301" y="356" width="2" height="15" fill="rgb(229,95,53)"/><text x="304.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="301" y="372" width="2" height="15" fill="rgb(242,52,31)"/><text x="304.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.10%)</title><rect x="301" y="388" width="2" height="15" fill="rgb(234,0,48)"/><text x="304.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.10%)</title><rect x="301" y="404" width="2" height="15" fill="rgb(206,151,44)"/><text x="304.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.10%)</title><rect x="301" y="420" width="2" height="15" fill="rgb(246,153,10)"/><text x="304.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="305" y="356" width="1" height="15" fill="rgb(226,202,29)"/><text x="308.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="305" y="372" width="1" height="15" fill="rgb(217,30,45)"/><text x="308.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="305" y="388" width="1" height="15" fill="rgb(224,78,6)"/><text x="308.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.10%)</title><rect x="305" y="404" width="1" height="15" fill="rgb(224,40,5)"/><text x="308.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.10%)</title><rect x="305" y="420" width="1" height="15" fill="rgb(226,16,6)"/><text x="308.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.10%)</title><rect x="306" y="372" width="2" height="15" fill="rgb(231,19,7)"/><text x="309.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="306" y="388" width="2" height="15" fill="rgb(233,84,5)"/><text x="309.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.10%)</title><rect x="306" y="404" width="2" height="15" fill="rgb(210,40,25)"/><text x="309.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.10%)</title><rect x="306" y="420" width="2" height="15" fill="rgb(253,95,11)"/><text x="309.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="436" width="2" height="15" fill="rgb(208,66,41)"/><text x="309.00" y="446.50"></text></g><g><title>0x7f92227ac7a5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="452" width="2" height="15" fill="rgb(224,163,13)"/><text x="309.00" y="462.50"></text></g><g><title>0x7f92227ac7c2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="468" width="2" height="15" fill="rgb(246,177,4)"/><text x="309.00" y="478.50"></text></g><g><title>0x7f92227aca6f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="484" width="2" height="15" fill="rgb(208,192,45)"/><text x="309.00" y="494.50"></text></g><g><title>0x7f9222814d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="306" y="500" width="2" height="15" fill="rgb(215,106,36)"/><text x="309.00" y="510.50"></text></g><g><title>_clip (numpy/core/_methods.py:129) (5 samples, 0.52%)</title><rect x="303" y="308" width="6" height="15" fill="rgb(212,111,29)"/><text x="306.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.41%)</title><rect x="304" y="324" width="5" height="15" fill="rgb(247,67,29)"/><text x="307.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="305" y="340" width="4" height="15" fill="rgb(211,162,29)"/><text x="308.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="306" y="356" width="3" height="15" fill="rgb(238,195,23)"/><text x="309.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="308" y="372" width="1" height="15" fill="rgb(247,155,8)"/><text x="311.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="308" y="388" width="1" height="15" fill="rgb(215,204,5)"/><text x="311.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.10%)</title><rect x="308" y="404" width="1" height="15" fill="rgb(227,210,15)"/><text x="311.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (38 samples, 3.92%)</title><rect x="264" y="196" width="46" height="15" fill="rgb(209,108,28)"/><text x="267.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (37 samples, 3.81%)</title><rect x="265" y="212" width="45" height="15" fill="rgb(225,56,48)"/><text x="268.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (34 samples, 3.51%)</title><rect x="269" y="228" width="41" height="15" fill="rgb(242,159,25)"/><text x="272.00" y="238.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (32 samples, 3.30%)</title><rect x="271" y="244" width="39" height="15" fill="rgb(240,82,46)"/><text x="274.00" y="254.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (30 samples, 3.09%)</title><rect x="273" y="260" width="37" height="15" fill="rgb(234,100,49)"/><text x="276.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (29 samples, 2.99%)</title><rect x="275" y="276" width="35" height="15" fill="rgb(236,176,1)"/><text x="278.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (29 samples, 2.99%)</title><rect x="275" y="292" width="35" height="15" fill="rgb(236,141,13)"/><text x="278.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:98) (1 samples, 0.10%)</title><rect x="309" y="308" width="1" height="15" fill="rgb(245,189,50)"/><text x="312.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="310" y="212" width="1" height="15" fill="rgb(219,200,32)"/><text x="313.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="310" y="228" width="1" height="15" fill="rgb(224,31,38)"/><text x="313.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="310" y="244" width="1" height="15" fill="rgb(222,135,41)"/><text x="313.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.10%)</title><rect x="310" y="260" width="1" height="15" fill="rgb(216,56,33)"/><text x="313.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="311" y="228" width="1" height="15" fill="rgb(206,100,29)"/><text x="314.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.10%)</title><rect x="311" y="244" width="1" height="15" fill="rgb(232,183,20)"/><text x="314.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.10%)</title><rect x="312" y="244" width="2" height="15" fill="rgb(242,102,22)"/><text x="315.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="312" y="260" width="2" height="15" fill="rgb(245,115,19)"/><text x="315.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="312" y="276" width="2" height="15" fill="rgb(229,106,39)"/><text x="315.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="312" y="292" width="2" height="15" fill="rgb(227,163,13)"/><text x="315.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="312" y="308" width="2" height="15" fill="rgb(205,103,11)"/><text x="315.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.10%)</title><rect x="312" y="324" width="2" height="15" fill="rgb(206,152,45)"/><text x="315.00" y="334.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.10%)</title><rect x="314" y="276" width="1" height="15" fill="rgb(230,174,51)"/><text x="317.00" y="286.50"></text></g><g><title>0x7f92229c6e01 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="316" y="292" width="1" height="15" fill="rgb(217,139,6)"/><text x="319.00" y="302.50"></text></g><g><title>0x7f92229c6e6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="317" y="292" width="1" height="15" fill="rgb(239,106,36)"/><text x="320.00" y="302.50"></text></g><g><title>0x7f92229c6ea2 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(211,125,12)"/><text x="321.00" y="302.50"></text></g><g><title>0x7f92229c6eb6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="320" y="292" width="1" height="15" fill="rgb(230,16,11)"/><text x="323.00" y="302.50"></text></g><g><title>0x7f92229c6ec6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="321" y="292" width="1" height="15" fill="rgb(240,71,44)"/><text x="324.00" y="302.50"></text></g><g><title>0x7f92229c6eca (libm-2.29.so) (1 samples, 0.10%)</title><rect x="322" y="292" width="1" height="15" fill="rgb(254,165,5)"/><text x="325.00" y="302.50"></text></g><g><title>0x7f92229c6ece (libm-2.29.so) (1 samples, 0.10%)</title><rect x="323" y="292" width="2" height="15" fill="rgb(233,142,19)"/><text x="326.00" y="302.50"></text></g><g><title>0x7f92229c6eda (libm-2.29.so) (1 samples, 0.10%)</title><rect x="325" y="292" width="1" height="15" fill="rgb(221,207,53)"/><text x="328.00" y="302.50"></text></g><g><title>0x7f92229c6ee6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="326" y="292" width="1" height="15" fill="rgb(239,33,50)"/><text x="329.00" y="302.50"></text></g><g><title>0x7f92229c6eee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="327" y="292" width="1" height="15" fill="rgb(249,144,51)"/><text x="330.00" y="302.50"></text></g><g><title>0x7f92229c6ef6 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="328" y="292" width="3" height="15" fill="rgb(247,97,25)"/><text x="331.00" y="302.50"></text></g><g><title>0x7f92229c6efa (libm-2.29.so) (2 samples, 0.21%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(225,55,28)"/><text x="334.00" y="302.50"></text></g><g><title>0x7f92229c6fbf (libm-2.29.so) (1 samples, 0.10%)</title><rect x="333" y="292" width="1" height="15" fill="rgb(215,156,9)"/><text x="336.00" y="302.50"></text></g><g><title>0x7f92229c6fc3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(236,122,52)"/><text x="337.00" y="302.50"></text></g><g><title>0x7f92229c6fe3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="336" y="292" width="1" height="15" fill="rgb(236,53,47)"/><text x="339.00" y="302.50"></text></g><g><title>0x7f92229c6ff3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="337" y="292" width="1" height="15" fill="rgb(249,220,29)"/><text x="340.00" y="302.50"></text></g><g><title>0x7f92229c700f (libm-2.29.so) (1 samples, 0.10%)</title><rect x="338" y="292" width="1" height="15" fill="rgb(246,60,3)"/><text x="341.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (24 samples, 2.47%)</title><rect x="311" y="212" width="29" height="15" fill="rgb(225,109,20)"/><text x="314.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (23 samples, 2.37%)</title><rect x="312" y="228" width="28" height="15" fill="rgb(210,200,25)"/><text x="315.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (22 samples, 2.27%)</title><rect x="314" y="244" width="26" height="15" fill="rgb(250,151,38)"/><text x="317.00" y="254.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 2.27%)</title><rect x="314" y="260" width="26" height="15" fill="rgb(212,101,36)"/><text x="317.00" y="270.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (21 samples, 2.16%)</title><rect x="315" y="276" width="25" height="15" fill="rgb(237,87,11)"/><text x="318.00" y="286.50">P..</text></g><g><title>0x7f92229c7013 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="339" y="292" width="1" height="15" fill="rgb(208,18,41)"/><text x="342.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (26 samples, 2.68%)</title><rect x="310" y="196" width="32" height="15" fill="rgb(242,26,45)"/><text x="313.00" y="206.50">_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.10%)</title><rect x="340" y="212" width="2" height="15" fill="rgb(236,149,53)"/><text x="343.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="343" y="228" width="1" height="15" fill="rgb(225,64,52)"/><text x="346.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="343" y="244" width="1" height="15" fill="rgb(224,68,23)"/><text x="346.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="343" y="260" width="1" height="15" fill="rgb(246,225,40)"/><text x="346.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.10%)</title><rect x="343" y="276" width="1" height="15" fill="rgb(232,160,9)"/><text x="346.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="344" y="244" width="1" height="15" fill="rgb(218,102,49)"/><text x="347.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="344" y="260" width="1" height="15" fill="rgb(249,150,44)"/><text x="347.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="345" y="244" width="1" height="15" fill="rgb(228,53,35)"/><text x="348.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="345" y="260" width="1" height="15" fill="rgb(240,49,6)"/><text x="348.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="346" y="244" width="2" height="15" fill="rgb(248,208,3)"/><text x="349.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="346" y="260" width="2" height="15" fill="rgb(211,88,35)"/><text x="349.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.10%)</title><rect x="346" y="276" width="2" height="15" fill="rgb(207,147,42)"/><text x="349.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="344" y="228" width="5" height="15" fill="rgb(214,141,27)"/><text x="347.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.10%)</title><rect x="348" y="244" width="1" height="15" fill="rgb(240,52,18)"/><text x="351.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:304) (1 samples, 0.10%)</title><rect x="348" y="260" width="1" height="15" fill="rgb(215,216,29)"/><text x="351.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.10%)</title><rect x="349" y="276" width="1" height="15" fill="rgb(226,66,9)"/><text x="352.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="350" y="276" width="1" height="15" fill="rgb(253,19,41)"/><text x="353.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.31%)</title><rect x="349" y="228" width="4" height="15" fill="rgb(245,98,51)"/><text x="352.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.31%)</title><rect x="349" y="244" width="4" height="15" fill="rgb(214,160,14)"/><text x="352.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 0.31%)</title><rect x="349" y="260" width="4" height="15" fill="rgb(225,150,29)"/><text x="352.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.10%)</title><rect x="351" y="276" width="2" height="15" fill="rgb(222,169,0)"/><text x="354.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (10 samples, 1.03%)</title><rect x="342" y="212" width="12" height="15" fill="rgb(207,60,39)"/><text x="345.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.10%)</title><rect x="353" y="228" width="1" height="15" fill="rgb(231,50,28)"/><text x="356.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="354" y="212" width="1" height="15" fill="rgb(233,149,28)"/><text x="357.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.10%)</title><rect x="354" y="228" width="1" height="15" fill="rgb(239,179,17)"/><text x="357.00" y="238.50"></text></g><g><title>0x7f9221a16ae0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="354" y="244" width="1" height="15" fill="rgb(227,172,29)"/><text x="357.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="355" y="228" width="1" height="15" fill="rgb(246,220,49)"/><text x="358.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="355" y="244" width="1" height="15" fill="rgb(250,15,28)"/><text x="358.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="355" y="260" width="1" height="15" fill="rgb(213,103,22)"/><text x="358.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.10%)</title><rect x="355" y="276" width="1" height="15" fill="rgb(227,45,24)"/><text x="358.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.10%)</title><rect x="356" y="276" width="1" height="15" fill="rgb(239,218,38)"/><text x="359.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="357" y="324" width="2" height="15" fill="rgb(209,101,53)"/><text x="360.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="359" y="324" width="1" height="15" fill="rgb(253,155,43)"/><text x="362.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.10%)</title><rect x="360" y="340" width="1" height="15" fill="rgb(253,170,27)"/><text x="363.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (4 samples, 0.41%)</title><rect x="361" y="340" width="5" height="15" fill="rgb(245,223,0)"/><text x="364.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.10%)</title><rect x="366" y="340" width="1" height="15" fill="rgb(233,41,15)"/><text x="369.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 0.93%)</title><rect x="357" y="276" width="11" height="15" fill="rgb(223,69,17)"/><text x="360.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 0.93%)</title><rect x="357" y="292" width="11" height="15" fill="rgb(205,126,17)"/><text x="360.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (9 samples, 0.93%)</title><rect x="357" y="308" width="11" height="15" fill="rgb(242,70,6)"/><text x="360.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (7 samples, 0.72%)</title><rect x="360" y="324" width="8" height="15" fill="rgb(248,21,47)"/><text x="363.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="367" y="340" width="1" height="15" fill="rgb(230,190,32)"/><text x="370.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (12 samples, 1.24%)</title><rect x="355" y="212" width="15" height="15" fill="rgb(214,59,13)"/><text x="358.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.13%)</title><rect x="356" y="228" width="14" height="15" fill="rgb(211,157,9)"/><text x="359.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.13%)</title><rect x="356" y="244" width="14" height="15" fill="rgb(226,221,31)"/><text x="359.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.13%)</title><rect x="356" y="260" width="14" height="15" fill="rgb(218,104,24)"/><text x="359.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="368" y="276" width="2" height="15" fill="rgb(223,162,27)"/><text x="371.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="368" y="292" width="2" height="15" fill="rgb(252,0,18)"/><text x="371.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="368" y="308" width="2" height="15" fill="rgb(214,64,54)"/><text x="371.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="368" y="324" width="2" height="15" fill="rgb(235,169,50)"/><text x="371.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.10%)</title><rect x="368" y="340" width="2" height="15" fill="rgb(243,73,13)"/><text x="371.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:70) (1 samples, 0.10%)</title><rect x="370" y="340" width="1" height="15" fill="rgb(223,137,18)"/><text x="373.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="370" y="260" width="2" height="15" fill="rgb(225,190,35)"/><text x="373.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="370" y="276" width="2" height="15" fill="rgb(215,43,30)"/><text x="373.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="370" y="292" width="2" height="15" fill="rgb(246,87,18)"/><text x="373.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.21%)</title><rect x="370" y="308" width="2" height="15" fill="rgb(215,77,9)"/><text x="373.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="370" y="324" width="2" height="15" fill="rgb(206,165,40)"/><text x="373.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="371" y="340" width="1" height="15" fill="rgb(216,147,31)"/><text x="374.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="372" y="276" width="1" height="15" fill="rgb(211,145,42)"/><text x="375.00" y="286.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.10%)</title><rect x="372" y="292" width="1" height="15" fill="rgb(251,196,26)"/><text x="375.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.10%)</title><rect x="373" y="276" width="1" height="15" fill="rgb(222,64,13)"/><text x="376.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1965) (1 samples, 0.10%)</title><rect x="373" y="292" width="1" height="15" fill="rgb(248,194,6)"/><text x="376.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.10%)</title><rect x="374" y="340" width="2" height="15" fill="rgb(254,216,36)"/><text x="377.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="374" y="356" width="2" height="15" fill="rgb(228,202,15)"/><text x="377.00" y="366.50"></text></g><g><title>0x7f92227ac8c0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="374" y="372" width="2" height="15" fill="rgb(212,170,1)"/><text x="377.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.21%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(222,95,9)"/><text x="377.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.21%)</title><rect x="374" y="324" width="3" height="15" fill="rgb(223,82,13)"/><text x="377.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="376" y="340" width="1" height="15" fill="rgb(205,176,17)"/><text x="379.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="376" y="356" width="1" height="15" fill="rgb(249,199,0)"/><text x="379.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="376" y="372" width="1" height="15" fill="rgb(217,73,13)"/><text x="379.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="376" y="388" width="1" height="15" fill="rgb(209,213,30)"/><text x="379.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="376" y="404" width="1" height="15" fill="rgb(241,119,2)"/><text x="379.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="376" y="420" width="1" height="15" fill="rgb(210,113,14)"/><text x="379.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="376" y="436" width="1" height="15" fill="rgb(228,35,54)"/><text x="379.00" y="446.50"></text></g><g><title>0x7f92227f5e8c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="376" y="452" width="1" height="15" fill="rgb(208,61,45)"/><text x="379.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="377" y="308" width="1" height="15" fill="rgb(246,98,19)"/><text x="380.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="377" y="324" width="1" height="15" fill="rgb(241,93,54)"/><text x="380.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="377" y="340" width="1" height="15" fill="rgb(223,206,51)"/><text x="380.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.10%)</title><rect x="377" y="356" width="1" height="15" fill="rgb(208,38,48)"/><text x="380.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="377" y="372" width="1" height="15" fill="rgb(240,186,18)"/><text x="380.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (2 samples, 0.21%)</title><rect x="378" y="324" width="3" height="15" fill="rgb(223,11,45)"/><text x="381.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.21%)</title><rect x="378" y="340" width="3" height="15" fill="rgb(218,221,4)"/><text x="381.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="379" y="356" width="2" height="15" fill="rgb(240,59,44)"/><text x="382.00" y="366.50"></text></g><g><title>0x7f92227f6531 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="379" y="372" width="2" height="15" fill="rgb(205,218,53)"/><text x="382.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.31%)</title><rect x="378" y="308" width="4" height="15" fill="rgb(250,0,6)"/><text x="381.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="381" y="324" width="1" height="15" fill="rgb(234,168,21)"/><text x="384.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2144) (1 samples, 0.10%)</title><rect x="381" y="340" width="1" height="15" fill="rgb(208,153,21)"/><text x="384.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.10%)</title><rect x="382" y="308" width="1" height="15" fill="rgb(249,123,28)"/><text x="385.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:461) (1 samples, 0.10%)</title><rect x="382" y="324" width="1" height="15" fill="rgb(221,163,20)"/><text x="385.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.21%)</title><rect x="383" y="340" width="2" height="15" fill="rgb(224,75,42)"/><text x="386.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.21%)</title><rect x="385" y="340" width="3" height="15" fill="rgb(251,130,0)"/><text x="388.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.41%)</title><rect x="389" y="356" width="5" height="15" fill="rgb(227,186,37)"/><text x="392.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.62%)</title><rect x="388" y="340" width="7" height="15" fill="rgb(219,70,27)"/><text x="391.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.10%)</title><rect x="394" y="356" width="1" height="15" fill="rgb(228,218,35)"/><text x="397.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="395" y="340" width="1" height="15" fill="rgb(253,181,22)"/><text x="398.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="396" y="340" width="2" height="15" fill="rgb(226,52,26)"/><text x="399.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (183 samples, 18.87%)</title><rect x="176" y="180" width="223" height="15" fill="rgb(212,62,43)"/><text x="179.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (47 samples, 4.85%)</title><rect x="342" y="196" width="57" height="15" fill="rgb(225,146,9)"/><text x="345.00" y="206.50">_samme..</text></g><g><title>array_sum (methods.c:2215) (24 samples, 2.47%)</title><rect x="370" y="212" width="29" height="15" fill="rgb(211,52,46)"/><text x="373.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.47%)</title><rect x="370" y="228" width="29" height="15" fill="rgb(247,123,18)"/><text x="373.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.47%)</title><rect x="370" y="244" width="29" height="15" fill="rgb(208,1,44)"/><text x="373.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 2.27%)</title><rect x="372" y="260" width="27" height="15" fill="rgb(235,188,13)"/><text x="375.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 2.06%)</title><rect x="374" y="276" width="25" height="15" fill="rgb(228,70,8)"/><text x="377.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.06%)</title><rect x="374" y="292" width="25" height="15" fill="rgb(238,133,48)"/><text x="377.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.34%)</title><rect x="383" y="308" width="16" height="15" fill="rgb(205,153,39)"/><text x="386.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.34%)</title><rect x="383" y="324" width="16" height="15" fill="rgb(223,121,2)"/><text x="386.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.10%)</title><rect x="398" y="340" width="1" height="15" fill="rgb(205,76,30)"/><text x="401.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.10%)</title><rect x="399" y="228" width="1" height="15" fill="rgb(238,179,4)"/><text x="402.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="399" y="244" width="1" height="15" fill="rgb(242,177,50)"/><text x="402.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.10%)</title><rect x="399" y="260" width="1" height="15" fill="rgb(230,212,40)"/><text x="402.00" y="270.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.21%)</title><rect x="399" y="180" width="2" height="15" fill="rgb(234,5,20)"/><text x="402.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="399" y="196" width="2" height="15" fill="rgb(243,169,37)"/><text x="402.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="399" y="212" width="2" height="15" fill="rgb(252,56,1)"/><text x="402.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="400" y="228" width="1" height="15" fill="rgb(238,100,25)"/><text x="403.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="400" y="244" width="1" height="15" fill="rgb(241,82,10)"/><text x="403.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="400" y="260" width="1" height="15" fill="rgb(249,29,20)"/><text x="403.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="400" y="276" width="1" height="15" fill="rgb(222,42,44)"/><text x="403.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="400" y="292" width="1" height="15" fill="rgb(244,18,32)"/><text x="403.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.10%)</title><rect x="400" y="308" width="1" height="15" fill="rgb(250,158,34)"/><text x="403.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (188 samples, 19.38%)</title><rect x="175" y="148" width="229" height="15" fill="rgb(210,59,19)"/><text x="178.00" y="158.50">predict_proba (sklearn/ensembl..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (188 samples, 19.38%)</title><rect x="175" y="164" width="229" height="15" fill="rgb(233,123,32)"/><text x="178.00" y="174.50">decision_function (sklearn/ens..</text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.21%)</title><rect x="401" y="180" width="3" height="15" fill="rgb(207,221,29)"/><text x="404.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.21%)</title><rect x="401" y="196" width="3" height="15" fill="rgb(241,185,14)"/><text x="404.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.21%)</title><rect x="401" y="212" width="3" height="15" fill="rgb(237,61,41)"/><text x="404.00" y="222.50"></text></g><g><title>0x7f92229c6bb4 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="405" y="292" width="1" height="15" fill="rgb(206,99,32)"/><text x="408.00" y="302.50"></text></g><g><title>0x7f92229c6c46 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="406" y="292" width="1" height="15" fill="rgb(216,32,8)"/><text x="409.00" y="302.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (3 samples, 0.31%)</title><rect x="405" y="180" width="4" height="15" fill="rgb(243,26,4)"/><text x="408.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="405" y="196" width="4" height="15" fill="rgb(207,229,18)"/><text x="408.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="405" y="212" width="4" height="15" fill="rgb(238,115,4)"/><text x="408.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.31%)</title><rect x="405" y="228" width="4" height="15" fill="rgb(233,140,35)"/><text x="408.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 0.31%)</title><rect x="405" y="244" width="4" height="15" fill="rgb(227,72,9)"/><text x="408.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (3 samples, 0.31%)</title><rect x="405" y="260" width="4" height="15" fill="rgb(211,118,12)"/><text x="408.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 0.31%)</title><rect x="405" y="276" width="4" height="15" fill="rgb(251,32,51)"/><text x="408.00" y="286.50"></text></g><g><title>0x7f92229c6c7b (libm-2.29.so) (1 samples, 0.10%)</title><rect x="407" y="292" width="2" height="15" fill="rgb(234,87,25)"/><text x="410.00" y="302.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.10%)</title><rect x="409" y="228" width="1" height="15" fill="rgb(220,158,28)"/><text x="412.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:38) (326 samples, 33.61%)</title><rect x="14" y="52" width="397" height="15" fill="rgb(234,177,28)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:37) (326 samples, 33.61%)</title><rect x="14" y="68" width="397" height="15" fill="rgb(239,79,27)"/><text x="17.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_100..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (326 samples, 33.61%)</title><rect x="14" y="84" width="397" height="15" fill="rgb(232,136,46)"/><text x="17.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (196 samples, 20.21%)</title><rect x="173" y="100" width="238" height="15" fill="rgb(232,77,17)"/><text x="176.00" y="110.50">profile (bench_AdaBoostClassifi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (196 samples, 20.21%)</title><rect x="173" y="116" width="238" height="15" fill="rgb(254,75,5)"/><text x="176.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (196 samples, 20.21%)</title><rect x="173" y="132" width="238" height="15" fill="rgb(205,108,13)"/><text x="176.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (6 samples, 0.62%)</title><rect x="404" y="148" width="7" height="15" fill="rgb(237,122,49)"/><text x="407.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (5 samples, 0.52%)</title><rect x="405" y="164" width="6" height="15" fill="rgb(229,189,37)"/><text x="408.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (2 samples, 0.21%)</title><rect x="409" y="180" width="2" height="15" fill="rgb(221,200,43)"/><text x="412.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="409" y="196" width="2" height="15" fill="rgb(244,73,20)"/><text x="412.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.21%)</title><rect x="409" y="212" width="2" height="15" fill="rgb(251,192,32)"/><text x="412.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.10%)</title><rect x="410" y="228" width="1" height="15" fill="rgb(216,5,17)"/><text x="413.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.10%)</title><rect x="410" y="244" width="1" height="15" fill="rgb(243,35,38)"/><text x="413.00" y="254.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.10%)</title><rect x="411" y="244" width="1" height="15" fill="rgb(242,143,18)"/><text x="414.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="411" y="260" width="1" height="15" fill="rgb(252,46,40)"/><text x="414.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="411" y="276" width="1" height="15" fill="rgb(227,27,18)"/><text x="414.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="411" y="292" width="1" height="15" fill="rgb(232,91,10)"/><text x="414.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="411" y="308" width="1" height="15" fill="rgb(219,112,26)"/><text x="414.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="411" y="324" width="1" height="15" fill="rgb(236,199,35)"/><text x="414.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="411" y="340" width="1" height="15" fill="rgb(237,131,24)"/><text x="414.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="411" y="356" width="1" height="15" fill="rgb(244,95,32)"/><text x="414.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.10%)</title><rect x="411" y="372" width="1" height="15" fill="rgb(218,120,32)"/><text x="414.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="411" y="388" width="1" height="15" fill="rgb(228,181,14)"/><text x="414.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="411" y="404" width="1" height="15" fill="rgb(229,138,52)"/><text x="414.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="411" y="420" width="1" height="15" fill="rgb(217,30,11)"/><text x="414.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="411" y="436" width="1" height="15" fill="rgb(249,175,4)"/><text x="414.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="411" y="452" width="1" height="15" fill="rgb(216,141,2)"/><text x="414.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="411" y="468" width="1" height="15" fill="rgb(212,27,26)"/><text x="414.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="411" y="484" width="1" height="15" fill="rgb(218,37,17)"/><text x="414.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.10%)</title><rect x="411" y="500" width="1" height="15" fill="rgb(254,95,51)"/><text x="414.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="411" y="516" width="1" height="15" fill="rgb(215,74,32)"/><text x="414.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="411" y="532" width="1" height="15" fill="rgb(218,158,42)"/><text x="414.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="411" y="548" width="1" height="15" fill="rgb(244,32,27)"/><text x="414.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="411" y="564" width="1" height="15" fill="rgb(243,96,3)"/><text x="414.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="411" y="580" width="1" height="15" fill="rgb(221,90,40)"/><text x="414.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:174) (1 samples, 0.10%)</title><rect x="411" y="596" width="1" height="15" fill="rgb(230,71,44)"/><text x="414.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="411" y="612" width="1" height="15" fill="rgb(233,106,21)"/><text x="414.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="411" y="628" width="1" height="15" fill="rgb(226,8,42)"/><text x="414.00" y="638.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.10%)</title><rect x="411" y="644" width="1" height="15" fill="rgb(220,194,5)"/><text x="414.00" y="654.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.10%)</title><rect x="411" y="660" width="1" height="15" fill="rgb(207,73,41)"/><text x="414.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.10%)</title><rect x="411" y="676" width="1" height="15" fill="rgb(215,182,46)"/><text x="414.00" y="686.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.10%)</title><rect x="411" y="692" width="1" height="15" fill="rgb(235,200,21)"/><text x="414.00" y="702.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:1) (2 samples, 0.21%)</title><rect x="411" y="148" width="2" height="15" fill="rgb(230,200,44)"/><text x="414.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="411" y="164" width="2" height="15" fill="rgb(228,177,31)"/><text x="414.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="411" y="180" width="2" height="15" fill="rgb(205,57,26)"/><text x="414.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="411" y="196" width="2" height="15" fill="rgb(206,59,52)"/><text x="414.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="411" y="212" width="2" height="15" fill="rgb(235,227,37)"/><text x="414.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="411" y="228" width="2" height="15" fill="rgb(238,147,29)"/><text x="414.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.10%)</title><rect x="412" y="244" width="1" height="15" fill="rgb(213,137,13)"/><text x="415.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="412" y="260" width="1" height="15" fill="rgb(233,97,25)"/><text x="415.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="412" y="276" width="1" height="15" fill="rgb(237,96,29)"/><text x="415.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="412" y="292" width="1" height="15" fill="rgb(253,206,44)"/><text x="415.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="412" y="308" width="1" height="15" fill="rgb(248,221,14)"/><text x="415.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="412" y="324" width="1" height="15" fill="rgb(220,171,49)"/><text x="415.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="412" y="340" width="1" height="15" fill="rgb(220,191,50)"/><text x="415.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="412" y="356" width="1" height="15" fill="rgb(220,191,31)"/><text x="415.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.10%)</title><rect x="412" y="372" width="1" height="15" fill="rgb(218,150,2)"/><text x="415.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="412" y="388" width="1" height="15" fill="rgb(254,1,33)"/><text x="415.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="412" y="404" width="1" height="15" fill="rgb(208,171,53)"/><text x="415.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="412" y="420" width="1" height="15" fill="rgb(209,123,23)"/><text x="415.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="412" y="436" width="1" height="15" fill="rgb(243,40,6)"/><text x="415.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="412" y="452" width="1" height="15" fill="rgb(212,153,48)"/><text x="415.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.10%)</title><rect x="412" y="468" width="1" height="15" fill="rgb(251,229,23)"/><text x="415.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="412" y="484" width="1" height="15" fill="rgb(251,13,28)"/><text x="415.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (1 samples, 0.10%)</title><rect x="412" y="500" width="1" height="15" fill="rgb(236,57,3)"/><text x="415.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.10%)</title><rect x="413" y="852" width="2" height="15" fill="rgb(254,185,9)"/><text x="416.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.10%)</title><rect x="413" y="868" width="2" height="15" fill="rgb(222,184,43)"/><text x="416.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.10%)</title><rect x="413" y="884" width="2" height="15" fill="rgb(247,155,0)"/><text x="416.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.10%)</title><rect x="413" y="900" width="2" height="15" fill="rgb(243,55,4)"/><text x="416.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.10%)</title><rect x="413" y="916" width="2" height="15" fill="rgb(220,207,19)"/><text x="416.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.10%)</title><rect x="413" y="932" width="2" height="15" fill="rgb(243,123,17)"/><text x="416.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.10%)</title><rect x="413" y="948" width="2" height="15" fill="rgb(251,76,51)"/><text x="416.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.10%)</title><rect x="413" y="964" width="2" height="15" fill="rgb(241,48,20)"/><text x="416.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.10%)</title><rect x="413" y="980" width="2" height="15" fill="rgb(249,198,28)"/><text x="416.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.10%)</title><rect x="413" y="996" width="2" height="15" fill="rgb(234,156,11)"/><text x="416.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.10%)</title><rect x="413" y="1012" width="2" height="15" fill="rgb(230,129,24)"/><text x="416.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="413" y="1028" width="2" height="15" fill="rgb(233,133,11)"/><text x="416.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="413" y="1044" width="2" height="15" fill="rgb(207,96,38)"/><text x="416.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.10%)</title><rect x="415" y="900" width="1" height="15" fill="rgb(213,172,54)"/><text x="418.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.10%)</title><rect x="415" y="916" width="1" height="15" fill="rgb(248,104,52)"/><text x="418.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="415" y="932" width="1" height="15" fill="rgb(210,158,24)"/><text x="418.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="415" y="948" width="1" height="15" fill="rgb(232,0,37)"/><text x="418.00" y="958.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.10%)</title><rect x="416" y="900" width="1" height="15" fill="rgb(217,60,19)"/><text x="419.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.10%)</title><rect x="416" y="916" width="1" height="15" fill="rgb(247,25,41)"/><text x="419.00" y="926.50"></text></g><g><title>0x7f9222833fb5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="416" y="932" width="1" height="15" fill="rgb(213,52,49)"/><text x="419.00" y="942.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="416" y="948" width="1" height="15" fill="rgb(244,166,8)"/><text x="419.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (4 samples, 0.41%)</title><rect x="413" y="148" width="5" height="15" fill="rgb(205,114,15)"/><text x="416.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="164" width="5" height="15" fill="rgb(234,130,42)"/><text x="416.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="413" y="180" width="5" height="15" fill="rgb(207,177,31)"/><text x="416.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="196" width="5" height="15" fill="rgb(224,31,18)"/><text x="416.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="212" width="5" height="15" fill="rgb(220,159,44)"/><text x="416.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="228" width="5" height="15" fill="rgb(238,121,51)"/><text x="416.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="244" width="5" height="15" fill="rgb(215,111,23)"/><text x="416.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="260" width="5" height="15" fill="rgb(206,98,22)"/><text x="416.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="276" width="5" height="15" fill="rgb(245,106,27)"/><text x="416.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.41%)</title><rect x="413" y="292" width="5" height="15" fill="rgb(210,43,54)"/><text x="416.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="308" width="5" height="15" fill="rgb(223,18,25)"/><text x="416.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="324" width="5" height="15" fill="rgb(234,51,7)"/><text x="416.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="340" width="5" height="15" fill="rgb(239,55,1)"/><text x="416.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="356" width="5" height="15" fill="rgb(210,97,12)"/><text x="416.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="372" width="5" height="15" fill="rgb(232,5,6)"/><text x="416.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.41%)</title><rect x="413" y="388" width="5" height="15" fill="rgb(227,142,35)"/><text x="416.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="404" width="5" height="15" fill="rgb(218,60,50)"/><text x="416.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="420" width="5" height="15" fill="rgb(227,54,30)"/><text x="416.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="436" width="5" height="15" fill="rgb(233,17,17)"/><text x="416.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="452" width="5" height="15" fill="rgb(238,11,20)"/><text x="416.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="468" width="5" height="15" fill="rgb(217,48,27)"/><text x="416.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.41%)</title><rect x="413" y="484" width="5" height="15" fill="rgb(254,23,27)"/><text x="416.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="500" width="5" height="15" fill="rgb(248,87,49)"/><text x="416.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="516" width="5" height="15" fill="rgb(231,57,14)"/><text x="416.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="532" width="5" height="15" fill="rgb(242,209,37)"/><text x="416.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="548" width="5" height="15" fill="rgb(211,174,3)"/><text x="416.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="564" width="5" height="15" fill="rgb(224,63,8)"/><text x="416.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.41%)</title><rect x="413" y="580" width="5" height="15" fill="rgb(205,145,28)"/><text x="416.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="596" width="5" height="15" fill="rgb(242,99,23)"/><text x="416.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="413" y="612" width="5" height="15" fill="rgb(207,0,26)"/><text x="416.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="628" width="5" height="15" fill="rgb(215,142,34)"/><text x="416.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="644" width="5" height="15" fill="rgb(251,201,48)"/><text x="416.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="660" width="5" height="15" fill="rgb(220,121,6)"/><text x="416.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="676" width="5" height="15" fill="rgb(217,11,54)"/><text x="416.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="692" width="5" height="15" fill="rgb(221,174,28)"/><text x="416.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="708" width="5" height="15" fill="rgb(224,31,53)"/><text x="416.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.41%)</title><rect x="413" y="724" width="5" height="15" fill="rgb(237,146,51)"/><text x="416.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="413" y="740" width="5" height="15" fill="rgb(228,177,49)"/><text x="416.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="413" y="756" width="5" height="15" fill="rgb(227,128,51)"/><text x="416.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="413" y="772" width="5" height="15" fill="rgb(250,190,25)"/><text x="416.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="413" y="788" width="5" height="15" fill="rgb(224,191,27)"/><text x="416.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="413" y="804" width="5" height="15" fill="rgb(211,3,8)"/><text x="416.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.41%)</title><rect x="413" y="820" width="5" height="15" fill="rgb(231,191,49)"/><text x="416.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.41%)</title><rect x="413" y="836" width="5" height="15" fill="rgb(243,68,16)"/><text x="416.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.31%)</title><rect x="415" y="852" width="3" height="15" fill="rgb(219,76,45)"/><text x="418.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.31%)</title><rect x="415" y="868" width="3" height="15" fill="rgb(213,70,17)"/><text x="418.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.31%)</title><rect x="415" y="884" width="3" height="15" fill="rgb(248,26,9)"/><text x="418.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.10%)</title><rect x="417" y="900" width="1" height="15" fill="rgb(206,69,53)"/><text x="420.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (1 samples, 0.10%)</title><rect x="417" y="916" width="1" height="15" fill="rgb(250,172,41)"/><text x="420.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.10%)</title><rect x="417" y="932" width="1" height="15" fill="rgb(209,111,24)"/><text x="420.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:134) (1 samples, 0.10%)</title><rect x="417" y="948" width="1" height="15" fill="rgb(246,58,19)"/><text x="420.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.10%)</title><rect x="418" y="484" width="1" height="15" fill="rgb(241,168,15)"/><text x="421.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="418" y="500" width="1" height="15" fill="rgb(219,142,44)"/><text x="421.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="418" y="516" width="1" height="15" fill="rgb(243,83,7)"/><text x="421.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="418" y="532" width="1" height="15" fill="rgb(223,72,24)"/><text x="421.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="418" y="548" width="1" height="15" fill="rgb(236,224,22)"/><text x="421.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="418" y="564" width="1" height="15" fill="rgb(243,118,45)"/><text x="421.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="418" y="580" width="1" height="15" fill="rgb(214,76,27)"/><text x="421.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="418" y="596" width="1" height="15" fill="rgb(253,139,38)"/><text x="421.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="418" y="612" width="1" height="15" fill="rgb(216,127,10)"/><text x="421.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:71) (1 samples, 0.10%)</title><rect x="418" y="628" width="1" height="15" fill="rgb(237,150,36)"/><text x="421.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1031) (1 samples, 0.10%)</title><rect x="418" y="644" width="1" height="15" fill="rgb(232,146,5)"/><text x="421.00" y="654.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1032) (1 samples, 0.10%)</title><rect x="418" y="660" width="1" height="15" fill="rgb(228,106,51)"/><text x="421.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.21%)</title><rect x="418" y="180" width="3" height="15" fill="rgb(226,162,4)"/><text x="421.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="418" y="196" width="3" height="15" fill="rgb(251,46,52)"/><text x="421.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="418" y="212" width="3" height="15" fill="rgb(221,104,43)"/><text x="421.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="418" y="228" width="3" height="15" fill="rgb(245,14,17)"/><text x="421.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="418" y="244" width="3" height="15" fill="rgb(250,8,40)"/><text x="421.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="418" y="260" width="3" height="15" fill="rgb(232,63,54)"/><text x="421.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="418" y="276" width="3" height="15" fill="rgb(229,1,31)"/><text x="421.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.21%)</title><rect x="418" y="292" width="3" height="15" fill="rgb(222,62,46)"/><text x="421.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="418" y="308" width="3" height="15" fill="rgb(224,33,7)"/><text x="421.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="418" y="324" width="3" height="15" fill="rgb(224,213,2)"/><text x="421.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="418" y="340" width="3" height="15" fill="rgb(235,127,22)"/><text x="421.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="418" y="356" width="3" height="15" fill="rgb(249,96,29)"/><text x="421.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="418" y="372" width="3" height="15" fill="rgb(225,7,9)"/><text x="421.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.21%)</title><rect x="418" y="388" width="3" height="15" fill="rgb(242,101,12)"/><text x="421.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="418" y="404" width="3" height="15" fill="rgb(242,32,35)"/><text x="421.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="418" y="420" width="3" height="15" fill="rgb(239,167,24)"/><text x="421.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="418" y="436" width="3" height="15" fill="rgb(205,216,35)"/><text x="421.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="418" y="452" width="3" height="15" fill="rgb(215,158,26)"/><text x="421.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="418" y="468" width="3" height="15" fill="rgb(227,12,37)"/><text x="421.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.10%)</title><rect x="419" y="484" width="2" height="15" fill="rgb(218,142,40)"/><text x="422.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="419" y="500" width="2" height="15" fill="rgb(214,16,29)"/><text x="422.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="419" y="516" width="2" height="15" fill="rgb(226,76,9)"/><text x="422.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="419" y="532" width="2" height="15" fill="rgb(210,92,1)"/><text x="422.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="419" y="548" width="2" height="15" fill="rgb(239,133,15)"/><text x="422.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="419" y="564" width="2" height="15" fill="rgb(222,112,48)"/><text x="422.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.10%)</title><rect x="419" y="580" width="2" height="15" fill="rgb(239,212,4)"/><text x="422.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="419" y="596" width="2" height="15" fill="rgb(212,213,2)"/><text x="422.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="419" y="612" width="2" height="15" fill="rgb(247,14,19)"/><text x="422.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="419" y="628" width="2" height="15" fill="rgb(253,160,49)"/><text x="422.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="419" y="644" width="2" height="15" fill="rgb(220,183,11)"/><text x="422.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="419" y="660" width="2" height="15" fill="rgb(212,213,31)"/><text x="422.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.10%)</title><rect x="419" y="676" width="2" height="15" fill="rgb(248,60,27)"/><text x="422.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="419" y="692" width="2" height="15" fill="rgb(231,15,15)"/><text x="422.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="419" y="708" width="2" height="15" fill="rgb(216,99,9)"/><text x="422.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="419" y="724" width="2" height="15" fill="rgb(207,180,1)"/><text x="422.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="419" y="740" width="2" height="15" fill="rgb(223,126,38)"/><text x="422.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="419" y="756" width="2" height="15" fill="rgb(232,131,41)"/><text x="422.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:4055) (1 samples, 0.10%)</title><rect x="419" y="772" width="2" height="15" fill="rgb(232,177,50)"/><text x="422.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:464) (1 samples, 0.10%)</title><rect x="419" y="788" width="2" height="15" fill="rgb(224,163,23)"/><text x="422.00" y="798.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (3 samples, 0.31%)</title><rect x="418" y="148" width="4" height="15" fill="rgb(228,171,8)"/><text x="421.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="418" y="164" width="4" height="15" fill="rgb(238,22,27)"/><text x="421.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.10%)</title><rect x="421" y="180" width="1" height="15" fill="rgb(240,62,11)"/><text x="424.00" y="190.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.10%)</title><rect x="421" y="196" width="1" height="15" fill="rgb(249,67,4)"/><text x="424.00" y="206.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.10%)</title><rect x="421" y="212" width="1" height="15" fill="rgb(251,0,12)"/><text x="424.00" y="222.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.10%)</title><rect x="421" y="228" width="1" height="15" fill="rgb(227,73,10)"/><text x="424.00" y="238.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.10%)</title><rect x="421" y="244" width="1" height="15" fill="rgb(213,73,46)"/><text x="424.00" y="254.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.10%)</title><rect x="421" y="260" width="1" height="15" fill="rgb(207,96,10)"/><text x="424.00" y="270.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.10%)</title><rect x="421" y="276" width="1" height="15" fill="rgb(235,149,0)"/><text x="424.00" y="286.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.10%)</title><rect x="421" y="292" width="1" height="15" fill="rgb(235,126,22)"/><text x="424.00" y="302.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="421" y="308" width="1" height="15" fill="rgb(224,168,42)"/><text x="424.00" y="318.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="421" y="324" width="1" height="15" fill="rgb(253,20,52)"/><text x="424.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.10%)</title><rect x="422" y="244" width="1" height="15" fill="rgb(209,68,33)"/><text x="425.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="260" width="1" height="15" fill="rgb(222,223,31)"/><text x="425.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="276" width="1" height="15" fill="rgb(242,162,0)"/><text x="425.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="292" width="1" height="15" fill="rgb(223,161,45)"/><text x="425.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="308" width="1" height="15" fill="rgb(243,7,22)"/><text x="425.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="324" width="1" height="15" fill="rgb(209,38,31)"/><text x="425.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.10%)</title><rect x="422" y="340" width="1" height="15" fill="rgb(208,94,34)"/><text x="425.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="356" width="1" height="15" fill="rgb(243,50,21)"/><text x="425.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="422" y="372" width="1" height="15" fill="rgb(239,202,44)"/><text x="425.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="388" width="1" height="15" fill="rgb(221,27,11)"/><text x="425.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="404" width="1" height="15" fill="rgb(220,157,24)"/><text x="425.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="420" width="1" height="15" fill="rgb(234,147,52)"/><text x="425.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="436" width="1" height="15" fill="rgb(208,163,33)"/><text x="425.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="452" width="1" height="15" fill="rgb(229,117,21)"/><text x="425.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="468" width="1" height="15" fill="rgb(214,74,40)"/><text x="425.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.10%)</title><rect x="422" y="484" width="1" height="15" fill="rgb(233,100,49)"/><text x="425.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="500" width="1" height="15" fill="rgb(211,155,54)"/><text x="425.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="516" width="1" height="15" fill="rgb(216,31,21)"/><text x="425.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="532" width="1" height="15" fill="rgb(228,156,33)"/><text x="425.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="548" width="1" height="15" fill="rgb(252,68,33)"/><text x="425.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="564" width="1" height="15" fill="rgb(231,154,31)"/><text x="425.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.10%)</title><rect x="422" y="580" width="1" height="15" fill="rgb(239,21,51)"/><text x="425.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="596" width="1" height="15" fill="rgb(242,208,35)"/><text x="425.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="612" width="1" height="15" fill="rgb(228,174,21)"/><text x="425.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="628" width="1" height="15" fill="rgb(235,227,39)"/><text x="425.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="644" width="1" height="15" fill="rgb(254,126,19)"/><text x="425.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="660" width="1" height="15" fill="rgb(222,45,21)"/><text x="425.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.10%)</title><rect x="422" y="676" width="1" height="15" fill="rgb(216,202,14)"/><text x="425.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="692" width="1" height="15" fill="rgb(228,150,41)"/><text x="425.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="708" width="1" height="15" fill="rgb(250,17,24)"/><text x="425.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="724" width="1" height="15" fill="rgb(251,30,39)"/><text x="425.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="740" width="1" height="15" fill="rgb(224,137,9)"/><text x="425.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="756" width="1" height="15" fill="rgb(244,82,15)"/><text x="425.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.10%)</title><rect x="422" y="772" width="1" height="15" fill="rgb(229,142,0)"/><text x="425.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="422" y="788" width="1" height="15" fill="rgb(235,32,26)"/><text x="425.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="804" width="1" height="15" fill="rgb(206,159,45)"/><text x="425.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="820" width="1" height="15" fill="rgb(228,10,18)"/><text x="425.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="836" width="1" height="15" fill="rgb(238,27,12)"/><text x="425.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="852" width="1" height="15" fill="rgb(244,113,17)"/><text x="425.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="868" width="1" height="15" fill="rgb(236,38,29)"/><text x="425.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="884" width="1" height="15" fill="rgb(252,121,5)"/><text x="425.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.10%)</title><rect x="422" y="900" width="1" height="15" fill="rgb(231,72,10)"/><text x="425.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="916" width="1" height="15" fill="rgb(209,103,9)"/><text x="425.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="932" width="1" height="15" fill="rgb(250,147,28)"/><text x="425.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="948" width="1" height="15" fill="rgb(226,167,1)"/><text x="425.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="964" width="1" height="15" fill="rgb(230,70,21)"/><text x="425.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="980" width="1" height="15" fill="rgb(253,164,46)"/><text x="425.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.10%)</title><rect x="422" y="996" width="1" height="15" fill="rgb(238,170,31)"/><text x="425.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="1012" width="1" height="15" fill="rgb(216,162,52)"/><text x="425.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="1028" width="1" height="15" fill="rgb(226,197,16)"/><text x="425.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="1044" width="1" height="15" fill="rgb(207,153,7)"/><text x="425.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="1060" width="1" height="15" fill="rgb(222,143,32)"/><text x="425.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="1076" width="1" height="15" fill="rgb(246,111,23)"/><text x="425.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.10%)</title><rect x="422" y="1092" width="1" height="15" fill="rgb(240,9,39)"/><text x="425.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="422" y="1108" width="1" height="15" fill="rgb(240,106,49)"/><text x="425.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="422" y="1124" width="1" height="15" fill="rgb(252,88,37)"/><text x="425.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="422" y="1140" width="1" height="15" fill="rgb(217,9,34)"/><text x="425.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="422" y="1156" width="1" height="15" fill="rgb(239,145,29)"/><text x="425.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="422" y="1172" width="1" height="15" fill="rgb(227,198,19)"/><text x="425.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py:333) (1 samples, 0.10%)</title><rect x="422" y="1188" width="1" height="15" fill="rgb(218,10,17)"/><text x="425.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.10%)</title><rect x="422" y="1204" width="1" height="15" fill="rgb(252,114,43)"/><text x="425.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.10%)</title><rect x="422" y="1220" width="1" height="15" fill="rgb(223,87,43)"/><text x="425.00" y="1230.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="422" y="1236" width="1" height="15" fill="rgb(206,192,50)"/><text x="425.00" y="1246.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="422" y="1252" width="1" height="15" fill="rgb(225,178,12)"/><text x="425.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.10%)</title><rect x="422" y="1268" width="1" height="15" fill="rgb(214,180,41)"/><text x="425.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py:2171) (1 samples, 0.10%)</title><rect x="422" y="1284" width="1" height="15" fill="rgb(205,65,1)"/><text x="425.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:22) (1 samples, 0.10%)</title><rect x="423" y="628" width="1" height="15" fill="rgb(219,73,11)"/><text x="426.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="423" y="644" width="1" height="15" fill="rgb(253,100,41)"/><text x="426.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="423" y="660" width="1" height="15" fill="rgb(216,103,8)"/><text x="426.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="423" y="676" width="1" height="15" fill="rgb(243,106,32)"/><text x="426.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="423" y="692" width="1" height="15" fill="rgb(227,208,46)"/><text x="426.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="423" y="708" width="1" height="15" fill="rgb(225,214,17)"/><text x="426.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.21%)</title><rect x="423" y="436" width="3" height="15" fill="rgb(254,165,14)"/><text x="426.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="423" y="452" width="3" height="15" fill="rgb(234,91,3)"/><text x="426.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="423" y="468" width="3" height="15" fill="rgb(249,33,4)"/><text x="426.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="423" y="484" width="3" height="15" fill="rgb(252,138,20)"/><text x="426.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="423" y="500" width="3" height="15" fill="rgb(215,17,9)"/><text x="426.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="423" y="516" width="3" height="15" fill="rgb(238,189,34)"/><text x="426.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.21%)</title><rect x="423" y="532" width="3" height="15" fill="rgb(205,18,5)"/><text x="426.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="423" y="548" width="3" height="15" fill="rgb(248,29,3)"/><text x="426.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="423" y="564" width="3" height="15" fill="rgb(242,181,13)"/><text x="426.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="423" y="580" width="3" height="15" fill="rgb(238,144,34)"/><text x="426.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="423" y="596" width="3" height="15" fill="rgb(234,30,6)"/><text x="426.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="423" y="612" width="3" height="15" fill="rgb(236,78,22)"/><text x="426.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.10%)</title><rect x="424" y="628" width="2" height="15" fill="rgb(229,24,12)"/><text x="427.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="644" width="2" height="15" fill="rgb(244,86,51)"/><text x="427.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="660" width="2" height="15" fill="rgb(247,190,32)"/><text x="427.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="676" width="2" height="15" fill="rgb(211,97,37)"/><text x="427.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="424" y="692" width="2" height="15" fill="rgb(209,186,23)"/><text x="427.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="708" width="2" height="15" fill="rgb(246,172,31)"/><text x="427.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.10%)</title><rect x="424" y="724" width="2" height="15" fill="rgb(205,43,6)"/><text x="427.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="740" width="2" height="15" fill="rgb(220,219,24)"/><text x="427.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="756" width="2" height="15" fill="rgb(233,194,53)"/><text x="427.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="772" width="2" height="15" fill="rgb(223,214,47)"/><text x="427.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="424" y="788" width="2" height="15" fill="rgb(246,61,26)"/><text x="427.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="804" width="2" height="15" fill="rgb(235,223,35)"/><text x="427.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.10%)</title><rect x="424" y="820" width="2" height="15" fill="rgb(217,182,24)"/><text x="427.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="836" width="2" height="15" fill="rgb(205,203,44)"/><text x="427.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="852" width="2" height="15" fill="rgb(210,132,36)"/><text x="427.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="868" width="2" height="15" fill="rgb(225,181,49)"/><text x="427.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="884" width="2" height="15" fill="rgb(248,52,46)"/><text x="427.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="900" width="2" height="15" fill="rgb(239,85,13)"/><text x="427.00" y="910.50"></text></g><g><title>0x7f91f7d2540e (?) (1 samples, 0.10%)</title><rect x="424" y="916" width="2" height="15" fill="rgb(226,212,0)"/><text x="427.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="932" width="2" height="15" fill="rgb(223,219,8)"/><text x="427.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="948" width="2" height="15" fill="rgb(251,68,36)"/><text x="427.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="964" width="2" height="15" fill="rgb(254,137,49)"/><text x="427.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="980" width="2" height="15" fill="rgb(217,206,36)"/><text x="427.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="996" width="2" height="15" fill="rgb(223,74,0)"/><text x="427.00" y="1006.50"></text></g><g><title>0x7f91f7adecd2 (?) (1 samples, 0.10%)</title><rect x="424" y="1012" width="2" height="15" fill="rgb(206,167,47)"/><text x="427.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="1028" width="2" height="15" fill="rgb(217,141,32)"/><text x="427.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="1044" width="2" height="15" fill="rgb(243,196,41)"/><text x="427.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="1060" width="2" height="15" fill="rgb(217,121,39)"/><text x="427.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="1076" width="2" height="15" fill="rgb(216,174,13)"/><text x="427.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="1092" width="2" height="15" fill="rgb(228,186,54)"/><text x="427.00" y="1102.50"></text></g><g><title>0x7f91f71d40e5 (?) (1 samples, 0.10%)</title><rect x="424" y="1108" width="2" height="15" fill="rgb(236,94,45)"/><text x="427.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="1124" width="2" height="15" fill="rgb(221,4,50)"/><text x="427.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="1140" width="2" height="15" fill="rgb(254,147,30)"/><text x="427.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="1156" width="2" height="15" fill="rgb(212,87,29)"/><text x="427.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="1172" width="2" height="15" fill="rgb(253,129,10)"/><text x="427.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="1188" width="2" height="15" fill="rgb(233,92,22)"/><text x="427.00" y="1198.50"></text></g><g><title>0x7f91f6f58e68 (?) (1 samples, 0.10%)</title><rect x="424" y="1204" width="2" height="15" fill="rgb(206,34,1)"/><text x="427.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="1220" width="2" height="15" fill="rgb(208,106,52)"/><text x="427.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="1236" width="2" height="15" fill="rgb(229,93,22)"/><text x="427.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="1252" width="2" height="15" fill="rgb(252,74,46)"/><text x="427.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="1268" width="2" height="15" fill="rgb(207,200,47)"/><text x="427.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="1284" width="2" height="15" fill="rgb(215,179,28)"/><text x="427.00" y="1294.50"></text></g><g><title>0x7f91f6ce92fb (?) (1 samples, 0.10%)</title><rect x="424" y="1300" width="2" height="15" fill="rgb(246,146,14)"/><text x="427.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="1316" width="2" height="15" fill="rgb(219,186,16)"/><text x="427.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="1332" width="2" height="15" fill="rgb(222,177,7)"/><text x="427.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="1348" width="2" height="15" fill="rgb(213,128,13)"/><text x="427.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="1364" width="2" height="15" fill="rgb(218,202,15)"/><text x="427.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="1380" width="2" height="15" fill="rgb(216,78,4)"/><text x="427.00" y="1390.50"></text></g><g><title>0x7f91f6acd153 (?) (1 samples, 0.10%)</title><rect x="424" y="1396" width="2" height="15" fill="rgb(214,28,31)"/><text x="427.00" y="1406.50"></text></g><g><title>0x7f91f6acbc13 (?) (1 samples, 0.10%)</title><rect x="424" y="1412" width="2" height="15" fill="rgb(217,125,32)"/><text x="427.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="424" y="1428" width="2" height="15" fill="rgb(226,21,0)"/><text x="427.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="424" y="1444" width="2" height="15" fill="rgb(217,129,43)"/><text x="427.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="424" y="1460" width="2" height="15" fill="rgb(225,226,17)"/><text x="427.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="424" y="1476" width="2" height="15" fill="rgb(252,177,21)"/><text x="427.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="424" y="1492" width="2" height="15" fill="rgb(224,191,48)"/><text x="427.00" y="1502.50"></text></g><g><title>0x7f91f6868181 (?) (1 samples, 0.10%)</title><rect x="424" y="1508" width="2" height="15" fill="rgb(222,74,36)"/><text x="427.00" y="1518.50"></text></g><g><title>0x7f91f686b1c9 (?) (1 samples, 0.10%)</title><rect x="424" y="1524" width="2" height="15" fill="rgb(235,60,40)"/><text x="427.00" y="1534.50"></text></g><g><title>0x7f91f6897167 (?) (1 samples, 0.10%)</title><rect x="424" y="1540" width="2" height="15" fill="rgb(252,70,50)"/><text x="427.00" y="1550.50"></text></g><g><title>0x7f91f6892b64 (?) (1 samples, 0.10%)</title><rect x="424" y="1556" width="2" height="15" fill="rgb(237,90,17)"/><text x="427.00" y="1566.50"></text></g><g><title>0x7f91f687607b (?) (1 samples, 0.10%)</title><rect x="424" y="1572" width="2" height="15" fill="rgb(210,202,30)"/><text x="427.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.10%)</title><rect x="424" y="1588" width="2" height="15" fill="rgb(218,93,21)"/><text x="427.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.10%)</title><rect x="424" y="1604" width="2" height="15" fill="rgb(253,186,23)"/><text x="427.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.10%)</title><rect x="424" y="1620" width="2" height="15" fill="rgb(219,158,52)"/><text x="427.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:96) (1 samples, 0.10%)</title><rect x="424" y="1636" width="2" height="15" fill="rgb(213,177,24)"/><text x="427.00" y="1646.50"></text></g><g><title>join (posixpath.py:80) (1 samples, 0.10%)</title><rect x="424" y="1652" width="2" height="15" fill="rgb(225,44,13)"/><text x="427.00" y="1662.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.10%)</title><rect x="426" y="1108" width="1" height="15" fill="rgb(238,113,6)"/><text x="429.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="426" y="1124" width="1" height="15" fill="rgb(220,174,13)"/><text x="429.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="426" y="1140" width="1" height="15" fill="rgb(208,32,53)"/><text x="429.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="426" y="1156" width="1" height="15" fill="rgb(206,3,38)"/><text x="429.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="426" y="1172" width="1" height="15" fill="rgb(251,62,28)"/><text x="429.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="426" y="1188" width="1" height="15" fill="rgb(217,74,39)"/><text x="429.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.10%)</title><rect x="426" y="1204" width="1" height="15" fill="rgb(230,100,7)"/><text x="429.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="426" y="1220" width="1" height="15" fill="rgb(208,105,18)"/><text x="429.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="426" y="1236" width="1" height="15" fill="rgb(205,3,9)"/><text x="429.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="426" y="1252" width="1" height="15" fill="rgb(225,79,44)"/><text x="429.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="426" y="1268" width="1" height="15" fill="rgb(251,81,10)"/><text x="429.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="426" y="1284" width="1" height="15" fill="rgb(221,214,4)"/><text x="429.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.10%)</title><rect x="426" y="1300" width="1" height="15" fill="rgb(224,31,45)"/><text x="429.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.10%)</title><rect x="426" y="1316" width="1" height="15" fill="rgb(229,194,36)"/><text x="429.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.10%)</title><rect x="426" y="1332" width="1" height="15" fill="rgb(248,34,23)"/><text x="429.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.10%)</title><rect x="426" y="1348" width="1" height="15" fill="rgb(214,223,25)"/><text x="429.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.10%)</title><rect x="426" y="1364" width="1" height="15" fill="rgb(236,23,29)"/><text x="429.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.10%)</title><rect x="426" y="1380" width="1" height="15" fill="rgb(253,67,54)"/><text x="429.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.10%)</title><rect x="426" y="1396" width="1" height="15" fill="rgb(232,117,36)"/><text x="429.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="426" y="1412" width="1" height="15" fill="rgb(243,84,34)"/><text x="429.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:4) (14 samples, 1.44%)</title><rect x="411" y="52" width="17" height="15" fill="rgb(227,228,46)"/><text x="414.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.44%)</title><rect x="411" y="68" width="17" height="15" fill="rgb(245,109,18)"/><text x="414.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.44%)</title><rect x="411" y="84" width="17" height="15" fill="rgb(236,97,8)"/><text x="414.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.44%)</title><rect x="411" y="100" width="17" height="15" fill="rgb(231,209,47)"/><text x="414.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.44%)</title><rect x="411" y="116" width="17" height="15" fill="rgb(231,11,18)"/><text x="414.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.44%)</title><rect x="411" y="132" width="17" height="15" fill="rgb(250,52,12)"/><text x="414.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (5 samples, 0.52%)</title><rect x="422" y="148" width="6" height="15" fill="rgb(243,54,4)"/><text x="425.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.52%)</title><rect x="422" y="164" width="6" height="15" fill="rgb(253,100,49)"/><text x="425.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.52%)</title><rect x="422" y="180" width="6" height="15" fill="rgb(236,192,49)"/><text x="425.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.52%)</title><rect x="422" y="196" width="6" height="15" fill="rgb(249,226,14)"/><text x="425.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.52%)</title><rect x="422" y="212" width="6" height="15" fill="rgb(206,196,34)"/><text x="425.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.52%)</title><rect x="422" y="228" width="6" height="15" fill="rgb(230,145,28)"/><text x="425.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.41%)</title><rect x="423" y="244" width="5" height="15" fill="rgb(253,24,50)"/><text x="426.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="423" y="260" width="5" height="15" fill="rgb(254,100,10)"/><text x="426.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="423" y="276" width="5" height="15" fill="rgb(219,159,29)"/><text x="426.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="423" y="292" width="5" height="15" fill="rgb(232,169,54)"/><text x="426.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="423" y="308" width="5" height="15" fill="rgb(252,128,14)"/><text x="426.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="423" y="324" width="5" height="15" fill="rgb(210,27,27)"/><text x="426.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.41%)</title><rect x="423" y="340" width="5" height="15" fill="rgb(245,214,45)"/><text x="426.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="423" y="356" width="5" height="15" fill="rgb(231,202,42)"/><text x="426.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="423" y="372" width="5" height="15" fill="rgb(212,188,16)"/><text x="426.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="423" y="388" width="5" height="15" fill="rgb(220,135,13)"/><text x="426.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="423" y="404" width="5" height="15" fill="rgb(250,77,31)"/><text x="426.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="423" y="420" width="5" height="15" fill="rgb(249,17,52)"/><text x="426.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.21%)</title><rect x="426" y="436" width="2" height="15" fill="rgb(219,27,16)"/><text x="429.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="452" width="2" height="15" fill="rgb(239,59,52)"/><text x="429.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.21%)</title><rect x="426" y="468" width="2" height="15" fill="rgb(211,165,10)"/><text x="429.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="484" width="2" height="15" fill="rgb(237,112,13)"/><text x="429.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="500" width="2" height="15" fill="rgb(214,26,36)"/><text x="429.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="516" width="2" height="15" fill="rgb(245,226,33)"/><text x="429.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="532" width="2" height="15" fill="rgb(242,171,37)"/><text x="429.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="548" width="2" height="15" fill="rgb(213,212,48)"/><text x="429.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="564" width="2" height="15" fill="rgb(229,87,35)"/><text x="429.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.21%)</title><rect x="426" y="580" width="2" height="15" fill="rgb(232,185,44)"/><text x="429.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="596" width="2" height="15" fill="rgb(213,74,4)"/><text x="429.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="612" width="2" height="15" fill="rgb(235,33,36)"/><text x="429.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="628" width="2" height="15" fill="rgb(227,187,44)"/><text x="429.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="644" width="2" height="15" fill="rgb(222,175,26)"/><text x="429.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="660" width="2" height="15" fill="rgb(243,171,34)"/><text x="429.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.21%)</title><rect x="426" y="676" width="2" height="15" fill="rgb(243,192,14)"/><text x="429.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="692" width="2" height="15" fill="rgb(207,110,15)"/><text x="429.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="708" width="2" height="15" fill="rgb(244,139,32)"/><text x="429.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="724" width="2" height="15" fill="rgb(237,171,11)"/><text x="429.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="740" width="2" height="15" fill="rgb(226,218,13)"/><text x="429.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="756" width="2" height="15" fill="rgb(217,229,1)"/><text x="429.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.21%)</title><rect x="426" y="772" width="2" height="15" fill="rgb(252,85,14)"/><text x="429.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="788" width="2" height="15" fill="rgb(231,205,48)"/><text x="429.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="804" width="2" height="15" fill="rgb(215,13,24)"/><text x="429.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="820" width="2" height="15" fill="rgb(252,63,47)"/><text x="429.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="836" width="2" height="15" fill="rgb(236,84,4)"/><text x="429.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="852" width="2" height="15" fill="rgb(217,133,36)"/><text x="429.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.21%)</title><rect x="426" y="868" width="2" height="15" fill="rgb(253,118,6)"/><text x="429.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="884" width="2" height="15" fill="rgb(209,36,41)"/><text x="429.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.21%)</title><rect x="426" y="900" width="2" height="15" fill="rgb(240,121,10)"/><text x="429.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="916" width="2" height="15" fill="rgb(241,127,3)"/><text x="429.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="932" width="2" height="15" fill="rgb(216,36,3)"/><text x="429.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="948" width="2" height="15" fill="rgb(253,115,17)"/><text x="429.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="964" width="2" height="15" fill="rgb(229,78,13)"/><text x="429.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="980" width="2" height="15" fill="rgb(217,207,44)"/><text x="429.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="996" width="2" height="15" fill="rgb(224,126,22)"/><text x="429.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.21%)</title><rect x="426" y="1012" width="2" height="15" fill="rgb(211,159,36)"/><text x="429.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="426" y="1028" width="2" height="15" fill="rgb(247,221,5)"/><text x="429.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="426" y="1044" width="2" height="15" fill="rgb(238,174,53)"/><text x="429.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="426" y="1060" width="2" height="15" fill="rgb(222,63,47)"/><text x="429.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="426" y="1076" width="2" height="15" fill="rgb(206,205,51)"/><text x="429.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="426" y="1092" width="2" height="15" fill="rgb(220,55,38)"/><text x="429.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.10%)</title><rect x="427" y="1108" width="1" height="15" fill="rgb(235,186,13)"/><text x="430.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="427" y="1124" width="1" height="15" fill="rgb(249,221,31)"/><text x="430.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="427" y="1140" width="1" height="15" fill="rgb(249,113,19)"/><text x="430.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="427" y="1156" width="1" height="15" fill="rgb(207,95,31)"/><text x="430.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="427" y="1172" width="1" height="15" fill="rgb(230,46,53)"/><text x="430.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="427" y="1188" width="1" height="15" fill="rgb(233,118,32)"/><text x="430.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="427" y="1204" width="1" height="15" fill="rgb(246,49,9)"/><text x="430.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="427" y="1220" width="1" height="15" fill="rgb(226,3,40)"/><text x="430.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.10%)</title><rect x="427" y="1236" width="1" height="15" fill="rgb(241,170,17)"/><text x="430.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="427" y="1252" width="1" height="15" fill="rgb(210,85,14)"/><text x="430.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="427" y="1268" width="1" height="15" fill="rgb(222,192,19)"/><text x="430.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="427" y="1284" width="1" height="15" fill="rgb(218,10,37)"/><text x="430.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="427" y="1300" width="1" height="15" fill="rgb(218,69,47)"/><text x="430.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="427" y="1316" width="1" height="15" fill="rgb(241,149,7)"/><text x="430.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="427" y="1332" width="1" height="15" fill="rgb(226,205,41)"/><text x="430.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="427" y="1348" width="1" height="15" fill="rgb(208,36,35)"/><text x="430.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.10%)</title><rect x="427" y="1364" width="1" height="15" fill="rgb(236,60,26)"/><text x="430.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="427" y="1380" width="1" height="15" fill="rgb(217,97,7)"/><text x="430.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="427" y="1396" width="1" height="15" fill="rgb(230,143,18)"/><text x="430.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="427" y="1412" width="1" height="15" fill="rgb(222,120,36)"/><text x="430.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="427" y="1428" width="1" height="15" fill="rgb(213,12,41)"/><text x="430.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="427" y="1444" width="1" height="15" fill="rgb(252,207,2)"/><text x="430.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.10%)</title><rect x="427" y="1460" width="1" height="15" fill="rgb(245,158,43)"/><text x="430.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.10%)</title><rect x="427" y="1476" width="1" height="15" fill="rgb(212,103,8)"/><text x="430.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.10%)</title><rect x="427" y="1492" width="1" height="15" fill="rgb(218,40,22)"/><text x="430.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.10%)</title><rect x="427" y="1508" width="1" height="15" fill="rgb(251,38,13)"/><text x="430.00" y="1518.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:28) (1 samples, 0.10%)</title><rect x="428" y="84" width="1" height="15" fill="rgb(237,0,42)"/><text x="431.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="428" y="100" width="1" height="15" fill="rgb(210,69,28)"/><text x="431.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.10%)</title><rect x="428" y="116" width="1" height="15" fill="rgb(207,139,30)"/><text x="431.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.10%)</title><rect x="428" y="132" width="1" height="15" fill="rgb(235,28,28)"/><text x="431.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.10%)</title><rect x="428" y="148" width="1" height="15" fill="rgb(216,198,18)"/><text x="431.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.10%)</title><rect x="428" y="164" width="1" height="15" fill="rgb(223,170,0)"/><text x="431.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.10%)</title><rect x="428" y="180" width="1" height="15" fill="rgb(231,65,23)"/><text x="431.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.10%)</title><rect x="428" y="196" width="1" height="15" fill="rgb(218,8,5)"/><text x="431.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="428" y="212" width="1" height="15" fill="rgb(224,86,15)"/><text x="431.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="428" y="228" width="1" height="15" fill="rgb(232,209,6)"/><text x="431.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="428" y="244" width="1" height="15" fill="rgb(210,84,12)"/><text x="431.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="428" y="260" width="1" height="15" fill="rgb(247,74,53)"/><text x="431.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="428" y="276" width="1" height="15" fill="rgb(230,186,2)"/><text x="431.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.10%)</title><rect x="428" y="292" width="1" height="15" fill="rgb(216,126,34)"/><text x="431.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="428" y="308" width="1" height="15" fill="rgb(223,186,4)"/><text x="431.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="428" y="324" width="1" height="15" fill="rgb(226,58,38)"/><text x="431.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="428" y="340" width="1" height="15" fill="rgb(254,66,27)"/><text x="431.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="428" y="356" width="1" height="15" fill="rgb(244,160,52)"/><text x="431.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="428" y="372" width="1" height="15" fill="rgb(221,194,20)"/><text x="431.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.10%)</title><rect x="428" y="388" width="1" height="15" fill="rgb(236,176,30)"/><text x="431.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="428" y="404" width="1" height="15" fill="rgb(211,192,38)"/><text x="431.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="428" y="420" width="1" height="15" fill="rgb(220,100,29)"/><text x="431.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="428" y="436" width="1" height="15" fill="rgb(205,29,52)"/><text x="431.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="428" y="452" width="1" height="15" fill="rgb(244,7,22)"/><text x="431.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="428" y="468" width="1" height="15" fill="rgb(247,201,9)"/><text x="431.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.10%)</title><rect x="428" y="484" width="1" height="15" fill="rgb(232,137,38)"/><text x="431.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.10%)</title><rect x="428" y="500" width="1" height="15" fill="rgb(219,11,45)"/><text x="431.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.10%)</title><rect x="428" y="516" width="1" height="15" fill="rgb(254,119,21)"/><text x="431.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.10%)</title><rect x="428" y="532" width="1" height="15" fill="rgb(246,196,9)"/><text x="431.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.10%)</title><rect x="428" y="548" width="1" height="15" fill="rgb(253,156,23)"/><text x="431.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.10%)</title><rect x="428" y="564" width="1" height="15" fill="rgb(250,60,38)"/><text x="431.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.10%)</title><rect x="428" y="580" width="1" height="15" fill="rgb(236,42,17)"/><text x="431.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="428" y="596" width="1" height="15" fill="rgb(207,205,37)"/><text x="431.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.10%)</title><rect x="428" y="612" width="1" height="15" fill="rgb(210,213,18)"/><text x="431.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.10%)</title><rect x="428" y="628" width="1" height="15" fill="rgb(220,91,15)"/><text x="431.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="428" y="644" width="1" height="15" fill="rgb(243,109,53)"/><text x="431.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.10%)</title><rect x="428" y="660" width="1" height="15" fill="rgb(253,1,9)"/><text x="431.00" y="670.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.10%)</title><rect x="428" y="676" width="1" height="15" fill="rgb(220,28,52)"/><text x="431.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="428" y="692" width="1" height="15" fill="rgb(215,183,54)"/><text x="431.00" y="702.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.10%)</title><rect x="428" y="708" width="1" height="15" fill="rgb(233,28,38)"/><text x="431.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="428" y="724" width="1" height="15" fill="rgb(215,103,5)"/><text x="431.00" y="734.50"></text></g><g><title>visit_If (jinja2/idtracking.py:233) (1 samples, 0.10%)</title><rect x="428" y="740" width="1" height="15" fill="rgb(218,223,34)"/><text x="431.00" y="750.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.10%)</title><rect x="428" y="756" width="1" height="15" fill="rgb(232,58,25)"/><text x="431.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="428" y="772" width="1" height="15" fill="rgb(211,125,47)"/><text x="431.00" y="782.50"></text></g><g><title>visit_For (jinja2/idtracking.py:263) (1 samples, 0.10%)</title><rect x="428" y="788" width="1" height="15" fill="rgb(213,63,21)"/><text x="431.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.10%)</title><rect x="428" y="804" width="1" height="15" fill="rgb(215,179,48)"/><text x="431.00" y="814.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.10%)</title><rect x="428" y="820" width="1" height="15" fill="rgb(217,126,45)"/><text x="431.00" y="830.50"></text></g><g><title>visit (jinja2/visitor.py:36) (1 samples, 0.10%)</title><rect x="428" y="836" width="1" height="15" fill="rgb(228,194,25)"/><text x="431.00" y="846.50"></text></g><g><title>get_visitor (jinja2/visitor.py:32) (1 samples, 0.10%)</title><rect x="428" y="852" width="1" height="15" fill="rgb(210,200,33)"/><text x="431.00" y="862.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.41%)</title><rect x="429" y="180" width="5" height="15" fill="rgb(243,39,7)"/><text x="432.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.21%)</title><rect x="436" y="196" width="3" height="15" fill="rgb(254,50,47)"/><text x="439.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.10%)</title><rect x="438" y="212" width="1" height="15" fill="rgb(227,38,28)"/><text x="441.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.10%)</title><rect x="438" y="228" width="1" height="15" fill="rgb(243,214,13)"/><text x="441.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.10%)</title><rect x="438" y="244" width="1" height="15" fill="rgb(226,140,51)"/><text x="441.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.10%)</title><rect x="438" y="260" width="1" height="15" fill="rgb(234,172,41)"/><text x="441.00" y="270.50"></text></g><g><title>0x7f9222976979 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="444" y="324" width="1" height="15" fill="rgb(252,207,10)"/><text x="447.00" y="334.50"></text></g><g><title>0x7f92229769a4 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="324" width="1" height="15" fill="rgb(230,119,48)"/><text x="448.00" y="334.50"></text></g><g><title>0x7f92229769f8 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="446" y="324" width="1" height="15" fill="rgb(232,18,2)"/><text x="449.00" y="334.50"></text></g><g><title>0x7f9222976a04 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="447" y="324" width="2" height="15" fill="rgb(240,223,16)"/><text x="450.00" y="334.50"></text></g><g><title>0x7f9222976a15 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="449" y="324" width="1" height="15" fill="rgb(231,43,34)"/><text x="452.00" y="334.50"></text></g><g><title>0x7f9222976a19 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="450" y="324" width="1" height="15" fill="rgb(239,207,9)"/><text x="453.00" y="334.50"></text></g><g><title>0x7f9222976a21 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="451" y="324" width="1" height="15" fill="rgb(233,187,27)"/><text x="454.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (13 samples, 1.34%)</title><rect x="440" y="228" width="16" height="15" fill="rgb(215,66,17)"/><text x="443.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.13%)</title><rect x="443" y="244" width="13" height="15" fill="rgb(231,162,30)"/><text x="446.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.13%)</title><rect x="443" y="260" width="13" height="15" fill="rgb(216,225,41)"/><text x="446.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (11 samples, 1.13%)</title><rect x="443" y="276" width="13" height="15" fill="rgb(231,48,49)"/><text x="446.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (11 samples, 1.13%)</title><rect x="443" y="292" width="13" height="15" fill="rgb(246,189,23)"/><text x="446.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (11 samples, 1.13%)</title><rect x="443" y="308" width="13" height="15" fill="rgb(253,191,34)"/><text x="446.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (3 samples, 0.31%)</title><rect x="452" y="324" width="4" height="15" fill="rgb(229,84,14)"/><text x="455.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.21%)</title><rect x="457" y="292" width="3" height="15" fill="rgb(223,131,20)"/><text x="460.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.10%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(219,9,9)"/><text x="461.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.10%)</title><rect x="460" y="356" width="1" height="15" fill="rgb(208,14,11)"/><text x="463.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="460" y="308" width="2" height="15" fill="rgb(235,177,18)"/><text x="463.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="460" y="324" width="2" height="15" fill="rgb(222,65,45)"/><text x="463.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(218,59,50)"/><text x="463.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="461" y="356" width="1" height="15" fill="rgb(237,140,13)"/><text x="464.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="461" y="372" width="1" height="15" fill="rgb(243,187,16)"/><text x="464.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="461" y="388" width="1" height="15" fill="rgb(219,105,42)"/><text x="464.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="462" y="324" width="1" height="15" fill="rgb(231,100,27)"/><text x="465.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="463" y="340" width="1" height="15" fill="rgb(213,73,29)"/><text x="466.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="463" y="356" width="1" height="15" fill="rgb(223,216,0)"/><text x="466.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="463" y="372" width="1" height="15" fill="rgb(254,122,1)"/><text x="466.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.10%)</title><rect x="463" y="388" width="1" height="15" fill="rgb(240,143,44)"/><text x="466.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.10%)</title><rect x="463" y="404" width="1" height="15" fill="rgb(211,182,13)"/><text x="466.00" y="414.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.10%)</title><rect x="463" y="420" width="1" height="15" fill="rgb(247,209,48)"/><text x="466.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="464" y="356" width="2" height="15" fill="rgb(216,32,42)"/><text x="467.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.10%)</title><rect x="464" y="372" width="2" height="15" fill="rgb(249,153,4)"/><text x="467.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="466" y="372" width="1" height="15" fill="rgb(225,99,6)"/><text x="469.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (2 samples, 0.21%)</title><rect x="467" y="372" width="2" height="15" fill="rgb(238,79,4)"/><text x="470.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="469" y="372" width="2" height="15" fill="rgb(218,14,42)"/><text x="472.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="472" y="388" width="1" height="15" fill="rgb(243,188,8)"/><text x="475.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.21%)</title><rect x="473" y="388" width="2" height="15" fill="rgb(242,0,14)"/><text x="476.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.10%)</title><rect x="475" y="404" width="2" height="15" fill="rgb(206,162,34)"/><text x="478.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.21%)</title><rect x="477" y="404" width="2" height="15" fill="rgb(252,26,33)"/><text x="480.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.41%)</title><rect x="475" y="388" width="5" height="15" fill="rgb(233,38,9)"/><text x="478.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.10%)</title><rect x="479" y="404" width="1" height="15" fill="rgb(247,192,42)"/><text x="482.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.10%)</title><rect x="480" y="388" width="1" height="15" fill="rgb(229,190,11)"/><text x="483.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.21%)</title><rect x="481" y="388" width="3" height="15" fill="rgb(210,140,46)"/><text x="484.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="484" y="388" width="1" height="15" fill="rgb(218,137,20)"/><text x="487.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.10%)</title><rect x="485" y="388" width="1" height="15" fill="rgb(223,149,40)"/><text x="488.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (40 samples, 4.12%)</title><rect x="439" y="196" width="49" height="15" fill="rgb(233,226,22)"/><text x="442.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (39 samples, 4.02%)</title><rect x="440" y="212" width="48" height="15" fill="rgb(246,28,27)"/><text x="443.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (26 samples, 2.68%)</title><rect x="456" y="228" width="32" height="15" fill="rgb(238,168,10)"/><text x="459.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (25 samples, 2.58%)</title><rect x="457" y="244" width="31" height="15" fill="rgb(207,189,42)"/><text x="460.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.58%)</title><rect x="457" y="260" width="31" height="15" fill="rgb(223,107,51)"/><text x="460.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (25 samples, 2.58%)</title><rect x="457" y="276" width="31" height="15" fill="rgb(222,160,53)"/><text x="460.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (23 samples, 2.37%)</title><rect x="460" y="292" width="28" height="15" fill="rgb(216,26,0)"/><text x="463.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (21 samples, 2.16%)</title><rect x="462" y="308" width="26" height="15" fill="rgb(231,163,7)"/><text x="465.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 2.06%)</title><rect x="463" y="324" width="25" height="15" fill="rgb(236,205,38)"/><text x="466.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 1.96%)</title><rect x="464" y="340" width="24" height="15" fill="rgb(223,69,2)"/><text x="467.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (18 samples, 1.86%)</title><rect x="466" y="356" width="22" height="15" fill="rgb(230,125,18)"/><text x="469.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (14 samples, 1.44%)</title><rect x="471" y="372" width="17" height="15" fill="rgb(215,212,43)"/><text x="474.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.10%)</title><rect x="486" y="388" width="2" height="15" fill="rgb(228,99,6)"/><text x="489.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.21%)</title><rect x="488" y="196" width="2" height="15" fill="rgb(220,126,3)"/><text x="491.00" y="206.50"></text></g><g><title>0x7f91e3352422 (?) (1 samples, 0.10%)</title><rect x="490" y="244" width="1" height="15" fill="rgb(216,134,37)"/><text x="493.00" y="254.50"></text></g><g><title>0x7f91e335889e (?) (1 samples, 0.10%)</title><rect x="490" y="260" width="1" height="15" fill="rgb(229,181,27)"/><text x="493.00" y="270.50"></text></g><g><title>0x7f91e335874f (?) (1 samples, 0.10%)</title><rect x="490" y="276" width="1" height="15" fill="rgb(243,25,18)"/><text x="493.00" y="286.50"></text></g><g><title>0x7f91e335ea3a (?) (1 samples, 0.10%)</title><rect x="490" y="292" width="1" height="15" fill="rgb(205,3,4)"/><text x="493.00" y="302.50"></text></g><g><title>0x7f91ec7baab9 (?) (1 samples, 0.10%)</title><rect x="490" y="308" width="1" height="15" fill="rgb(242,83,16)"/><text x="493.00" y="318.50"></text></g><g><title>0x7f91ec7bbeab (?) (1 samples, 0.10%)</title><rect x="490" y="324" width="1" height="15" fill="rgb(224,223,41)"/><text x="493.00" y="334.50"></text></g><g><title>0x7f91ec7bbea0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="491" y="468" width="1" height="15" fill="rgb(211,29,18)"/><text x="494.00" y="478.50"></text></g><g><title>0x7f91ec7bbea9 (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="492" y="468" width="5" height="15" fill="rgb(231,179,46)"/><text x="495.00" y="478.50"></text></g><g><title>0x7f91ec7bbeab (libgomp.so.1.0.0) (9 samples, 0.93%)</title><rect x="497" y="468" width="11" height="15" fill="rgb(207,112,33)"/><text x="500.00" y="478.50"></text></g><g><title>0x7f91ec7baab9 (libgomp.so.1.0.0) (20 samples, 2.06%)</title><rect x="491" y="452" width="25" height="15" fill="rgb(227,175,5)"/><text x="494.00" y="462.50">0..</text></g><g><title>0x7f91ec7bbead (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="508" y="468" width="8" height="15" fill="rgb(213,214,40)"/><text x="511.00" y="478.50"></text></g><g><title>0x7f91ec7bbcf0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="516" y="484" width="1" height="15" fill="rgb(206,212,50)"/><text x="519.00" y="494.50"></text></g><g><title>0x7f91ec7bbcf9 (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="517" y="484" width="5" height="15" fill="rgb(224,55,35)"/><text x="520.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (30 samples, 3.09%)</title><rect x="490" y="196" width="37" height="15" fill="rgb(233,88,3)"/><text x="493.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 3.09%)</title><rect x="490" y="212" width="37" height="15" fill="rgb(225,69,9)"/><text x="493.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (30 samples, 3.09%)</title><rect x="490" y="228" width="37" height="15" fill="rgb(235,107,54)"/><text x="493.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (29 samples, 2.99%)</title><rect x="491" y="244" width="36" height="15" fill="rgb(223,163,40)"/><text x="494.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (29 samples, 2.99%)</title><rect x="491" y="260" width="36" height="15" fill="rgb(244,156,28)"/><text x="494.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (29 samples, 2.99%)</title><rect x="491" y="276" width="36" height="15" fill="rgb(237,101,9)"/><text x="494.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (29 samples, 2.99%)</title><rect x="491" y="292" width="36" height="15" fill="rgb(228,86,35)"/><text x="494.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (29 samples, 2.99%)</title><rect x="491" y="308" width="36" height="15" fill="rgb(229,218,40)"/><text x="494.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (29 samples, 2.99%)</title><rect x="491" y="324" width="36" height="15" fill="rgb(220,154,14)"/><text x="494.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (29 samples, 2.99%)</title><rect x="491" y="340" width="36" height="15" fill="rgb(234,122,22)"/><text x="494.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (29 samples, 2.99%)</title><rect x="491" y="356" width="36" height="15" fill="rgb(235,14,19)"/><text x="494.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (29 samples, 2.99%)</title><rect x="491" y="372" width="36" height="15" fill="rgb(221,189,14)"/><text x="494.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (29 samples, 2.99%)</title><rect x="491" y="388" width="36" height="15" fill="rgb(234,67,5)"/><text x="494.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (29 samples, 2.99%)</title><rect x="491" y="404" width="36" height="15" fill="rgb(213,94,12)"/><text x="494.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (29 samples, 2.99%)</title><rect x="491" y="420" width="36" height="15" fill="rgb(250,172,28)"/><text x="494.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (29 samples, 2.99%)</title><rect x="491" y="436" width="36" height="15" fill="rgb(205,203,39)"/><text x="494.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (9 samples, 0.93%)</title><rect x="516" y="452" width="11" height="15" fill="rgb(221,195,25)"/><text x="519.00" y="462.50"></text></g><g><title>0x7f91ec7b9daa (libgomp.so.1.0.0) (9 samples, 0.93%)</title><rect x="516" y="468" width="11" height="15" fill="rgb(222,39,35)"/><text x="519.00" y="478.50"></text></g><g><title>0x7f91ec7bbcfd (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="522" y="484" width="5" height="15" fill="rgb(231,50,34)"/><text x="525.00" y="494.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="530" y="308" width="1" height="15" fill="rgb(217,74,32)"/><text x="533.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.10%)</title><rect x="530" y="324" width="1" height="15" fill="rgb(216,224,2)"/><text x="533.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.10%)</title><rect x="530" y="340" width="1" height="15" fill="rgb(229,188,4)"/><text x="533.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="530" y="356" width="1" height="15" fill="rgb(214,66,2)"/><text x="533.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="530" y="292" width="3" height="15" fill="rgb(246,186,44)"/><text x="533.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.10%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(209,136,14)"/><text x="534.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.10%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(246,192,4)"/><text x="534.00" y="334.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:280) (1 samples, 0.10%)</title><rect x="533" y="308" width="1" height="15" fill="rgb(237,54,19)"/><text x="536.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:765) (1 samples, 0.10%)</title><rect x="534" y="308" width="1" height="15" fill="rgb(217,137,32)"/><text x="537.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h:169) (1 samples, 0.10%)</title><rect x="534" y="324" width="1" height="15" fill="rgb(252,159,3)"/><text x="537.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.31%)</title><rect x="533" y="292" width="3" height="15" fill="rgb(216,195,4)"/><text x="536.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:766) (1 samples, 0.10%)</title><rect x="535" y="308" width="1" height="15" fill="rgb(214,58,10)"/><text x="538.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="535" y="324" width="1" height="15" fill="rgb(236,48,37)"/><text x="538.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (6 samples, 0.62%)</title><rect x="530" y="228" width="7" height="15" fill="rgb(230,162,21)"/><text x="533.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="530" y="244" width="7" height="15" fill="rgb(231,151,18)"/><text x="533.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.62%)</title><rect x="530" y="260" width="7" height="15" fill="rgb(249,165,24)"/><text x="533.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.62%)</title><rect x="530" y="276" width="7" height="15" fill="rgb(245,91,21)"/><text x="533.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="536" y="292" width="1" height="15" fill="rgb(227,12,2)"/><text x="539.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="536" y="308" width="1" height="15" fill="rgb(226,20,53)"/><text x="539.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="536" y="324" width="1" height="15" fill="rgb(254,86,15)"/><text x="539.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="537" y="292" width="2" height="15" fill="rgb(205,15,8)"/><text x="540.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.10%)</title><rect x="537" y="308" width="2" height="15" fill="rgb(247,67,37)"/><text x="540.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.10%)</title><rect x="537" y="324" width="2" height="15" fill="rgb(222,60,25)"/><text x="540.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="537" y="340" width="2" height="15" fill="rgb(227,200,34)"/><text x="540.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (11 samples, 1.13%)</title><rect x="527" y="196" width="13" height="15" fill="rgb(235,79,21)"/><text x="530.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 0.82%)</title><rect x="530" y="212" width="10" height="15" fill="rgb(238,75,13)"/><text x="533.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.21%)</title><rect x="537" y="228" width="3" height="15" fill="rgb(244,68,9)"/><text x="540.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="537" y="244" width="3" height="15" fill="rgb(253,170,4)"/><text x="540.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="537" y="260" width="3" height="15" fill="rgb(221,59,1)"/><text x="540.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.21%)</title><rect x="537" y="276" width="3" height="15" fill="rgb(209,126,16)"/><text x="540.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="539" y="292" width="1" height="15" fill="rgb(236,56,27)"/><text x="542.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="539" y="308" width="1" height="15" fill="rgb(232,142,6)"/><text x="542.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="539" y="324" width="1" height="15" fill="rgb(240,23,43)"/><text x="542.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="539" y="340" width="1" height="15" fill="rgb(253,140,38)"/><text x="542.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.10%)</title><rect x="539" y="356" width="1" height="15" fill="rgb(244,197,23)"/><text x="542.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.10%)</title><rect x="540" y="196" width="1" height="15" fill="rgb(217,73,36)"/><text x="543.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="542" y="228" width="2" height="15" fill="rgb(239,7,31)"/><text x="545.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.10%)</title><rect x="545" y="276" width="1" height="15" fill="rgb(232,79,50)"/><text x="548.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="547" y="324" width="1" height="15" fill="rgb(217,4,46)"/><text x="550.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.10%)</title><rect x="547" y="340" width="1" height="15" fill="rgb(235,183,7)"/><text x="550.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.10%)</title><rect x="548" y="324" width="2" height="15" fill="rgb(224,221,26)"/><text x="551.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.10%)</title><rect x="548" y="340" width="2" height="15" fill="rgb(227,190,34)"/><text x="551.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="548" y="356" width="2" height="15" fill="rgb(212,2,54)"/><text x="551.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="548" y="372" width="2" height="15" fill="rgb(213,112,41)"/><text x="551.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.10%)</title><rect x="548" y="388" width="2" height="15" fill="rgb(252,159,52)"/><text x="551.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.10%)</title><rect x="550" y="388" width="1" height="15" fill="rgb(234,134,47)"/><text x="553.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="551" y="404" width="1" height="15" fill="rgb(214,39,21)"/><text x="554.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="551" y="420" width="1" height="15" fill="rgb(242,227,6)"/><text x="554.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.10%)</title><rect x="551" y="436" width="1" height="15" fill="rgb(251,173,26)"/><text x="554.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.31%)</title><rect x="550" y="340" width="3" height="15" fill="rgb(237,78,35)"/><text x="553.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="550" y="356" width="3" height="15" fill="rgb(250,135,13)"/><text x="553.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.31%)</title><rect x="550" y="372" width="3" height="15" fill="rgb(210,33,44)"/><text x="553.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.21%)</title><rect x="551" y="388" width="2" height="15" fill="rgb(251,116,25)"/><text x="554.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="552" y="404" width="1" height="15" fill="rgb(210,146,30)"/><text x="555.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="552" y="420" width="1" height="15" fill="rgb(229,161,27)"/><text x="555.00" y="430.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="552" y="436" width="1" height="15" fill="rgb(223,184,26)"/><text x="555.00" y="446.50"></text></g><g><title>0x7f92228d2151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="552" y="452" width="1" height="15" fill="rgb(246,229,12)"/><text x="555.00" y="462.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="553" y="404" width="1" height="15" fill="rgb(232,18,31)"/><text x="556.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.10%)</title><rect x="553" y="420" width="1" height="15" fill="rgb(248,97,30)"/><text x="556.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.21%)</title><rect x="553" y="372" width="3" height="15" fill="rgb(233,180,29)"/><text x="556.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.21%)</title><rect x="553" y="388" width="3" height="15" fill="rgb(248,227,1)"/><text x="556.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="554" y="404" width="2" height="15" fill="rgb(232,114,21)"/><text x="557.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="554" y="420" width="2" height="15" fill="rgb(208,8,50)"/><text x="557.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.10%)</title><rect x="554" y="436" width="2" height="15" fill="rgb(251,9,21)"/><text x="557.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:189) (1 samples, 0.10%)</title><rect x="554" y="452" width="2" height="15" fill="rgb(247,20,46)"/><text x="557.00" y="462.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.10%)</title><rect x="554" y="468" width="2" height="15" fill="rgb(212,168,35)"/><text x="557.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="553" y="356" width="4" height="15" fill="rgb(251,88,1)"/><text x="556.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="556" y="372" width="1" height="15" fill="rgb(221,227,2)"/><text x="559.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="556" y="388" width="1" height="15" fill="rgb(236,151,34)"/><text x="559.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.10%)</title><rect x="556" y="404" width="1" height="15" fill="rgb(212,219,11)"/><text x="559.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.10%)</title><rect x="557" y="356" width="1" height="15" fill="rgb(215,210,54)"/><text x="560.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.10%)</title><rect x="557" y="372" width="1" height="15" fill="rgb(207,120,1)"/><text x="560.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (8 samples, 0.82%)</title><rect x="550" y="324" width="9" height="15" fill="rgb(217,129,32)"/><text x="553.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.52%)</title><rect x="553" y="340" width="6" height="15" fill="rgb(217,149,49)"/><text x="556.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.10%)</title><rect x="558" y="356" width="1" height="15" fill="rgb(206,118,31)"/><text x="561.00" y="366.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.10%)</title><rect x="558" y="372" width="1" height="15" fill="rgb(219,161,34)"/><text x="561.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="558" y="388" width="1" height="15" fill="rgb(237,99,7)"/><text x="561.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.10%)</title><rect x="558" y="404" width="1" height="15" fill="rgb(239,46,38)"/><text x="561.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="559" y="372" width="2" height="15" fill="rgb(238,53,26)"/><text x="562.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="559" y="388" width="2" height="15" fill="rgb(231,176,3)"/><text x="562.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.10%)</title><rect x="559" y="404" width="2" height="15" fill="rgb(254,74,54)"/><text x="562.00" y="414.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.10%)</title><rect x="561" y="468" width="1" height="15" fill="rgb(216,139,22)"/><text x="564.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="561" y="404" width="3" height="15" fill="rgb(220,115,32)"/><text x="564.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="561" y="420" width="3" height="15" fill="rgb(210,122,48)"/><text x="564.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="561" y="436" width="3" height="15" fill="rgb(215,153,18)"/><text x="564.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.31%)</title><rect x="561" y="452" width="3" height="15" fill="rgb(232,74,51)"/><text x="564.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.21%)</title><rect x="562" y="468" width="2" height="15" fill="rgb(212,33,50)"/><text x="565.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.72%)</title><rect x="561" y="372" width="8" height="15" fill="rgb(216,106,9)"/><text x="564.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.72%)</title><rect x="561" y="388" width="8" height="15" fill="rgb(216,125,14)"/><text x="564.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.41%)</title><rect x="564" y="404" width="5" height="15" fill="rgb(219,169,36)"/><text x="567.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (4 samples, 0.41%)</title><rect x="564" y="420" width="5" height="15" fill="rgb(223,11,35)"/><text x="567.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.93%)</title><rect x="559" y="356" width="11" height="15" fill="rgb(235,153,10)"/><text x="562.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.10%)</title><rect x="569" y="372" width="1" height="15" fill="rgb(237,5,32)"/><text x="572.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (113 samples, 11.65%)</title><rect x="434" y="180" width="138" height="15" fill="rgb(223,201,33)"/><text x="437.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (25 samples, 2.58%)</title><rect x="541" y="196" width="31" height="15" fill="rgb(227,194,47)"/><text x="544.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (25 samples, 2.58%)</title><rect x="541" y="212" width="31" height="15" fill="rgb(214,100,50)"/><text x="544.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (23 samples, 2.37%)</title><rect x="544" y="228" width="28" height="15" fill="rgb(245,217,51)"/><text x="547.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.37%)</title><rect x="544" y="244" width="28" height="15" fill="rgb(244,229,6)"/><text x="547.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (23 samples, 2.37%)</title><rect x="544" y="260" width="28" height="15" fill="rgb(223,94,5)"/><text x="547.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (21 samples, 2.16%)</title><rect x="546" y="276" width="26" height="15" fill="rgb(233,127,41)"/><text x="549.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (20 samples, 2.06%)</title><rect x="547" y="292" width="25" height="15" fill="rgb(241,104,43)"/><text x="550.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 2.06%)</title><rect x="547" y="308" width="25" height="15" fill="rgb(224,0,11)"/><text x="550.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 1.03%)</title><rect x="559" y="324" width="13" height="15" fill="rgb(216,194,27)"/><text x="562.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.03%)</title><rect x="559" y="340" width="13" height="15" fill="rgb(248,113,25)"/><text x="562.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.10%)</title><rect x="570" y="356" width="2" height="15" fill="rgb(207,74,2)"/><text x="573.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.10%)</title><rect x="570" y="372" width="2" height="15" fill="rgb(253,127,42)"/><text x="573.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.10%)</title><rect x="572" y="180" width="1" height="15" fill="rgb(221,150,41)"/><text x="575.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.10%)</title><rect x="573" y="180" width="1" height="15" fill="rgb(253,184,8)"/><text x="576.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (123 samples, 12.68%)</title><rect x="429" y="100" width="150" height="15" fill="rgb(223,122,49)"/><text x="432.00" y="110.50">profile (bench_AdaB..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (123 samples, 12.68%)</title><rect x="429" y="116" width="150" height="15" fill="rgb(226,167,45)"/><text x="432.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (123 samples, 12.68%)</title><rect x="429" y="132" width="150" height="15" fill="rgb(211,60,23)"/><text x="432.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (123 samples, 12.68%)</title><rect x="429" y="148" width="150" height="15" fill="rgb(221,46,24)"/><text x="432.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (123 samples, 12.68%)</title><rect x="429" y="164" width="150" height="15" fill="rgb(228,184,29)"/><text x="432.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.41%)</title><rect x="574" y="180" width="5" height="15" fill="rgb(211,11,14)"/><text x="577.00" y="190.50"></text></g><g><title>0x7f922281514e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="578" y="196" width="1" height="15" fill="rgb(216,63,18)"/><text x="581.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 1.24%)</title><rect x="587" y="180" width="15" height="15" fill="rgb(253,71,29)"/><text x="590.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.21%)</title><rect x="600" y="196" width="2" height="15" fill="rgb(224,195,21)"/><text x="603.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.10%)</title><rect x="604" y="212" width="2" height="15" fill="rgb(232,114,39)"/><text x="607.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="604" y="228" width="2" height="15" fill="rgb(220,19,25)"/><text x="607.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.10%)</title><rect x="604" y="244" width="2" height="15" fill="rgb(218,166,42)"/><text x="607.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="604" y="260" width="2" height="15" fill="rgb(207,36,44)"/><text x="607.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.10%)</title><rect x="604" y="276" width="2" height="15" fill="rgb(209,51,37)"/><text x="607.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.10%)</title><rect x="604" y="292" width="2" height="15" fill="rgb(205,65,48)"/><text x="607.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.10%)</title><rect x="604" y="308" width="2" height="15" fill="rgb(252,182,0)"/><text x="607.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.10%)</title><rect x="604" y="324" width="2" height="15" fill="rgb(216,211,33)"/><text x="607.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.10%)</title><rect x="604" y="340" width="2" height="15" fill="rgb(215,111,48)"/><text x="607.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.21%)</title><rect x="606" y="212" width="2" height="15" fill="rgb(246,182,9)"/><text x="609.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.21%)</title><rect x="606" y="228" width="2" height="15" fill="rgb(246,197,3)"/><text x="609.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.41%)</title><rect x="604" y="196" width="5" height="15" fill="rgb(225,204,41)"/><text x="607.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.10%)</title><rect x="608" y="212" width="1" height="15" fill="rgb(212,167,16)"/><text x="611.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.10%)</title><rect x="608" y="228" width="1" height="15" fill="rgb(250,174,32)"/><text x="611.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="608" y="244" width="1" height="15" fill="rgb(206,9,52)"/><text x="611.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="608" y="260" width="1" height="15" fill="rgb(252,80,44)"/><text x="611.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="608" y="276" width="1" height="15" fill="rgb(209,31,28)"/><text x="611.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.10%)</title><rect x="608" y="292" width="1" height="15" fill="rgb(208,4,14)"/><text x="611.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.10%)</title><rect x="612" y="276" width="1" height="15" fill="rgb(220,127,41)"/><text x="615.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="612" y="292" width="1" height="15" fill="rgb(223,0,40)"/><text x="615.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:770) (1 samples, 0.10%)</title><rect x="612" y="308" width="1" height="15" fill="rgb(223,173,50)"/><text x="615.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.21%)</title><rect x="612" y="228" width="2" height="15" fill="rgb(218,110,49)"/><text x="615.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="612" y="244" width="2" height="15" fill="rgb(252,14,4)"/><text x="615.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="612" y="260" width="2" height="15" fill="rgb(240,187,47)"/><text x="615.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="613" y="276" width="1" height="15" fill="rgb(214,210,54)"/><text x="616.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.10%)</title><rect x="613" y="292" width="1" height="15" fill="rgb(251,75,41)"/><text x="616.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.10%)</title><rect x="613" y="308" width="1" height="15" fill="rgb(207,89,34)"/><text x="616.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.10%)</title><rect x="613" y="324" width="1" height="15" fill="rgb(207,85,7)"/><text x="616.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="614" y="260" width="1" height="15" fill="rgb(220,168,19)"/><text x="617.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.10%)</title><rect x="614" y="276" width="1" height="15" fill="rgb(249,177,43)"/><text x="617.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.10%)</title><rect x="614" y="292" width="1" height="15" fill="rgb(249,60,34)"/><text x="617.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.10%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(254,17,34)"/><text x="618.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.10%)</title><rect x="615" y="292" width="2" height="15" fill="rgb(225,22,0)"/><text x="618.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.10%)</title><rect x="617" y="308" width="1" height="15" fill="rgb(231,155,2)"/><text x="620.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.10%)</title><rect x="617" y="324" width="1" height="15" fill="rgb(244,53,4)"/><text x="620.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="617" y="340" width="1" height="15" fill="rgb(251,76,48)"/><text x="620.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.21%)</title><rect x="617" y="276" width="2" height="15" fill="rgb(209,149,7)"/><text x="620.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.21%)</title><rect x="617" y="292" width="2" height="15" fill="rgb(209,88,42)"/><text x="620.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.10%)</title><rect x="618" y="308" width="1" height="15" fill="rgb(234,10,18)"/><text x="621.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.10%)</title><rect x="618" y="324" width="1" height="15" fill="rgb(216,152,0)"/><text x="621.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:356) (1 samples, 0.10%)</title><rect x="618" y="340" width="1" height="15" fill="rgb(209,142,29)"/><text x="621.00" y="350.50"></text></g><g><title>0x7f92229769af (libm-2.29.so) (2 samples, 0.21%)</title><rect x="621" y="324" width="3" height="15" fill="rgb(211,39,27)"/><text x="624.00" y="334.50"></text></g><g><title>0x7f92229769cc (libm-2.29.so) (1 samples, 0.10%)</title><rect x="624" y="324" width="1" height="15" fill="rgb(242,96,0)"/><text x="627.00" y="334.50"></text></g><g><title>0x7f92229769e4 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="625" y="324" width="2" height="15" fill="rgb(239,2,54)"/><text x="628.00" y="334.50"></text></g><g><title>0x7f92229769f8 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="627" y="324" width="2" height="15" fill="rgb(207,83,30)"/><text x="630.00" y="334.50"></text></g><g><title>0x7f9222976a19 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="629" y="324" width="1" height="15" fill="rgb(234,165,13)"/><text x="632.00" y="334.50"></text></g><g><title>0x7f9222976a1d (libm-2.29.so) (2 samples, 0.21%)</title><rect x="630" y="324" width="2" height="15" fill="rgb(226,2,42)"/><text x="633.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 1.96%)</title><rect x="614" y="244" width="23" height="15" fill="rgb(236,190,9)"/><text x="617.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 1.86%)</title><rect x="615" y="260" width="22" height="15" fill="rgb(216,71,20)"/><text x="618.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 1.55%)</title><rect x="619" y="276" width="18" height="15" fill="rgb(205,213,15)"/><text x="622.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.55%)</title><rect x="619" y="292" width="18" height="15" fill="rgb(236,160,4)"/><text x="622.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (15 samples, 1.55%)</title><rect x="619" y="308" width="18" height="15" fill="rgb(249,179,35)"/><text x="622.00" y="318.50"></text></g><g><title>0x7f9222976a21 (libm-2.29.so) (4 samples, 0.41%)</title><rect x="632" y="324" width="5" height="15" fill="rgb(208,129,49)"/><text x="635.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (20 samples, 2.06%)</title><rect x="614" y="228" width="24" height="15" fill="rgb(232,116,22)"/><text x="617.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.10%)</title><rect x="637" y="244" width="1" height="15" fill="rgb(231,61,23)"/><text x="640.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (3 samples, 0.31%)</title><rect x="640" y="244" width="3" height="15" fill="rgb(216,19,41)"/><text x="643.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.10%)</title><rect x="643" y="356" width="2" height="15" fill="rgb(235,49,17)"/><text x="646.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="643" y="308" width="3" height="15" fill="rgb(233,2,20)"/><text x="646.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="643" y="324" width="3" height="15" fill="rgb(219,139,34)"/><text x="646.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="643" y="340" width="3" height="15" fill="rgb(250,78,39)"/><text x="646.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="645" y="356" width="1" height="15" fill="rgb(224,161,32)"/><text x="648.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="645" y="372" width="1" height="15" fill="rgb(205,191,35)"/><text x="648.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="645" y="388" width="1" height="15" fill="rgb(230,44,20)"/><text x="648.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.10%)</title><rect x="646" y="324" width="1" height="15" fill="rgb(225,216,48)"/><text x="649.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.10%)</title><rect x="646" y="340" width="1" height="15" fill="rgb(220,88,40)"/><text x="649.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.10%)</title><rect x="646" y="356" width="1" height="15" fill="rgb(222,21,39)"/><text x="649.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.10%)</title><rect x="646" y="372" width="1" height="15" fill="rgb(244,107,52)"/><text x="649.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.10%)</title><rect x="647" y="388" width="1" height="15" fill="rgb(211,181,32)"/><text x="650.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.21%)</title><rect x="647" y="340" width="2" height="15" fill="rgb(228,164,1)"/><text x="650.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.21%)</title><rect x="647" y="356" width="2" height="15" fill="rgb(232,198,19)"/><text x="650.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.21%)</title><rect x="647" y="372" width="2" height="15" fill="rgb(235,96,8)"/><text x="650.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.10%)</title><rect x="648" y="388" width="1" height="15" fill="rgb(236,161,38)"/><text x="651.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.10%)</title><rect x="648" y="404" width="1" height="15" fill="rgb(232,164,38)"/><text x="651.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.10%)</title><rect x="648" y="420" width="1" height="15" fill="rgb(220,180,9)"/><text x="651.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:437) (1 samples, 0.10%)</title><rect x="649" y="372" width="2" height="15" fill="rgb(206,40,12)"/><text x="652.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="649" y="388" width="2" height="15" fill="rgb(247,66,1)"/><text x="652.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3790) (1 samples, 0.10%)</title><rect x="651" y="404" width="1" height="15" fill="rgb(206,1,39)"/><text x="654.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.10%)</title><rect x="651" y="420" width="1" height="15" fill="rgb(248,176,4)"/><text x="654.00" y="430.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.10%)</title><rect x="651" y="436" width="1" height="15" fill="rgb(232,221,31)"/><text x="654.00" y="446.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.21%)</title><rect x="651" y="388" width="2" height="15" fill="rgb(246,182,53)"/><text x="654.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.10%)</title><rect x="652" y="404" width="1" height="15" fill="rgb(252,130,13)"/><text x="655.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.10%)</title><rect x="652" y="420" width="1" height="15" fill="rgb(230,89,34)"/><text x="655.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.10%)</title><rect x="652" y="436" width="1" height="15" fill="rgb(254,134,30)"/><text x="655.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.10%)</title><rect x="652" y="452" width="1" height="15" fill="rgb(217,114,15)"/><text x="655.00" y="462.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.10%)</title><rect x="653" y="404" width="1" height="15" fill="rgb(214,192,41)"/><text x="656.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3614) (1 samples, 0.10%)</title><rect x="653" y="420" width="1" height="15" fill="rgb(244,73,13)"/><text x="656.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (5 samples, 0.52%)</title><rect x="649" y="356" width="6" height="15" fill="rgb(236,100,18)"/><text x="652.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (4 samples, 0.41%)</title><rect x="651" y="372" width="4" height="15" fill="rgb(250,123,36)"/><text x="654.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.21%)</title><rect x="653" y="388" width="2" height="15" fill="rgb(220,32,28)"/><text x="656.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:90) (1 samples, 0.10%)</title><rect x="654" y="404" width="1" height="15" fill="rgb(212,111,21)"/><text x="657.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.10%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(249,74,46)"/><text x="658.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:753) (1 samples, 0.10%)</title><rect x="655" y="388" width="2" height="15" fill="rgb(251,11,24)"/><text x="658.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="657" y="372" width="1" height="15" fill="rgb(220,225,32)"/><text x="660.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.10%)</title><rect x="657" y="388" width="1" height="15" fill="rgb(224,201,46)"/><text x="660.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.31%)</title><rect x="655" y="356" width="4" height="15" fill="rgb(236,180,40)"/><text x="658.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.10%)</title><rect x="658" y="372" width="1" height="15" fill="rgb(238,50,31)"/><text x="661.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.10%)</title><rect x="658" y="388" width="1" height="15" fill="rgb(227,47,1)"/><text x="661.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="659" y="372" width="1" height="15" fill="rgb(221,46,10)"/><text x="662.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.10%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(206,61,21)"/><text x="663.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="662" y="388" width="1" height="15" fill="rgb(231,208,17)"/><text x="665.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.10%)</title><rect x="663" y="404" width="1" height="15" fill="rgb(232,16,11)"/><text x="666.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="664" y="404" width="1" height="15" fill="rgb(218,86,4)"/><text x="667.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.31%)</title><rect x="663" y="388" width="3" height="15" fill="rgb(244,177,18)"/><text x="666.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.10%)</title><rect x="665" y="404" width="1" height="15" fill="rgb(215,209,40)"/><text x="668.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.10%)</title><rect x="666" y="388" width="2" height="15" fill="rgb(228,84,3)"/><text x="669.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="668" y="388" width="1" height="15" fill="rgb(251,42,35)"/><text x="671.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="669" y="388" width="1" height="15" fill="rgb(230,84,51)"/><text x="672.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (21 samples, 2.16%)</title><rect x="647" y="324" width="25" height="15" fill="rgb(221,58,14)"/><text x="650.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 1.96%)</title><rect x="649" y="340" width="23" height="15" fill="rgb(207,1,35)"/><text x="652.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.13%)</title><rect x="659" y="356" width="13" height="15" fill="rgb(225,189,14)"/><text x="662.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 0.93%)</title><rect x="662" y="372" width="10" height="15" fill="rgb(236,132,36)"/><text x="665.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (2 samples, 0.21%)</title><rect x="670" y="388" width="2" height="15" fill="rgb(223,62,54)"/><text x="673.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (53 samples, 5.46%)</title><rect x="609" y="196" width="65" height="15" fill="rgb(205,211,49)"/><text x="612.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (52 samples, 5.36%)</title><rect x="610" y="212" width="64" height="15" fill="rgb(237,83,20)"/><text x="613.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (29 samples, 2.99%)</title><rect x="638" y="228" width="36" height="15" fill="rgb(230,205,46)"/><text x="641.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (25 samples, 2.58%)</title><rect x="643" y="244" width="31" height="15" fill="rgb(209,193,11)"/><text x="646.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 2.58%)</title><rect x="643" y="260" width="31" height="15" fill="rgb(226,127,0)"/><text x="646.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (25 samples, 2.58%)</title><rect x="643" y="276" width="31" height="15" fill="rgb(232,183,29)"/><text x="646.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (25 samples, 2.58%)</title><rect x="643" y="292" width="31" height="15" fill="rgb(244,106,26)"/><text x="646.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (23 samples, 2.37%)</title><rect x="646" y="308" width="28" height="15" fill="rgb(231,127,42)"/><text x="649.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4698) (1 samples, 0.10%)</title><rect x="672" y="324" width="2" height="15" fill="rgb(244,226,42)"/><text x="675.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.10%)</title><rect x="674" y="196" width="1" height="15" fill="rgb(245,167,23)"/><text x="677.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.10%)</title><rect x="675" y="244" width="1" height="15" fill="rgb(210,88,22)"/><text x="678.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:287) (1 samples, 0.10%)</title><rect x="675" y="260" width="1" height="15" fill="rgb(216,44,17)"/><text x="678.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc:76) (1 samples, 0.10%)</title><rect x="675" y="276" width="1" height="15" fill="rgb(233,184,31)"/><text x="678.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="675" y="292" width="1" height="15" fill="rgb(231,73,42)"/><text x="678.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="675" y="308" width="1" height="15" fill="rgb(250,221,27)"/><text x="678.00" y="318.50"></text></g><g><title>0x7f92227f62e8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="675" y="324" width="1" height="15" fill="rgb(241,8,10)"/><text x="678.00" y="334.50"></text></g><g><title>0x7f91ec7bbea0 (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="676" y="468" width="3" height="15" fill="rgb(237,191,36)"/><text x="679.00" y="478.50"></text></g><g><title>0x7f91ec7bbea9 (libgomp.so.1.0.0) (12 samples, 1.24%)</title><rect x="679" y="468" width="14" height="15" fill="rgb(246,198,0)"/><text x="682.00" y="478.50"></text></g><g><title>0x7f91ec7bbeab (libgomp.so.1.0.0) (7 samples, 0.72%)</title><rect x="693" y="468" width="9" height="15" fill="rgb(227,195,16)"/><text x="696.00" y="478.50"></text></g><g><title>0x7f91ec7baab9 (libgomp.so.1.0.0) (31 samples, 3.20%)</title><rect x="676" y="452" width="38" height="15" fill="rgb(242,52,43)"/><text x="679.00" y="462.50">0x7..</text></g><g><title>0x7f91ec7bbead (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="702" y="468" width="12" height="15" fill="rgb(211,16,48)"/><text x="705.00" y="478.50"></text></g><g><title>0x7f91ec7bbcf9 (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="714" y="484" width="3" height="15" fill="rgb(221,21,3)"/><text x="717.00" y="494.50"></text></g><g><title>0x7f91ec7bbcfb (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="717" y="484" width="4" height="15" fill="rgb(232,174,45)"/><text x="720.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (42 samples, 4.33%)</title><rect x="675" y="196" width="51" height="15" fill="rgb(242,42,35)"/><text x="678.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 4.33%)</title><rect x="675" y="212" width="51" height="15" fill="rgb(234,225,5)"/><text x="678.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (42 samples, 4.33%)</title><rect x="675" y="228" width="51" height="15" fill="rgb(206,200,11)"/><text x="678.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (41 samples, 4.23%)</title><rect x="676" y="244" width="50" height="15" fill="rgb(213,185,30)"/><text x="679.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (41 samples, 4.23%)</title><rect x="676" y="260" width="50" height="15" fill="rgb(226,150,18)"/><text x="679.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (41 samples, 4.23%)</title><rect x="676" y="276" width="50" height="15" fill="rgb(222,82,31)"/><text x="679.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (41 samples, 4.23%)</title><rect x="676" y="292" width="50" height="15" fill="rgb(211,53,20)"/><text x="679.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (41 samples, 4.23%)</title><rect x="676" y="308" width="50" height="15" fill="rgb(235,142,45)"/><text x="679.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (41 samples, 4.23%)</title><rect x="676" y="324" width="50" height="15" fill="rgb(244,150,43)"/><text x="679.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (41 samples, 4.23%)</title><rect x="676" y="340" width="50" height="15" fill="rgb(229,48,13)"/><text x="679.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (41 samples, 4.23%)</title><rect x="676" y="356" width="50" height="15" fill="rgb(252,101,24)"/><text x="679.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (41 samples, 4.23%)</title><rect x="676" y="372" width="50" height="15" fill="rgb(254,195,43)"/><text x="679.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (41 samples, 4.23%)</title><rect x="676" y="388" width="50" height="15" fill="rgb(250,46,43)"/><text x="679.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (41 samples, 4.23%)</title><rect x="676" y="404" width="50" height="15" fill="rgb(242,76,31)"/><text x="679.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (41 samples, 4.23%)</title><rect x="676" y="420" width="50" height="15" fill="rgb(224,173,23)"/><text x="679.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (41 samples, 4.23%)</title><rect x="676" y="436" width="50" height="15" fill="rgb(249,189,36)"/><text x="679.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="714" y="452" width="12" height="15" fill="rgb(254,119,22)"/><text x="717.00" y="462.50"></text></g><g><title>0x7f91ec7b9daa (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="714" y="468" width="12" height="15" fill="rgb(216,26,9)"/><text x="717.00" y="478.50"></text></g><g><title>0x7f91ec7bbcfd (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="721" y="484" width="5" height="15" fill="rgb(253,12,27)"/><text x="724.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.10%)</title><rect x="726" y="196" width="1" height="15" fill="rgb(211,145,49)"/><text x="729.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.10%)</title><rect x="727" y="212" width="1" height="15" fill="rgb(220,34,16)"/><text x="730.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.21%)</title><rect x="730" y="228" width="2" height="15" fill="rgb(217,96,17)"/><text x="733.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.10%)</title><rect x="732" y="228" width="1" height="15" fill="rgb(239,111,12)"/><text x="735.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="733" y="260" width="2" height="15" fill="rgb(235,102,29)"/><text x="736.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:559) (1 samples, 0.10%)</title><rect x="733" y="276" width="2" height="15" fill="rgb(211,164,27)"/><text x="736.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="735" y="260" width="1" height="15" fill="rgb(235,37,25)"/><text x="738.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.10%)</title><rect x="735" y="276" width="1" height="15" fill="rgb(253,20,18)"/><text x="738.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.10%)</title><rect x="736" y="308" width="1" height="15" fill="rgb(221,135,52)"/><text x="739.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="736" y="324" width="1" height="15" fill="rgb(232,86,18)"/><text x="739.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.10%)</title><rect x="737" y="324" width="1" height="15" fill="rgb(218,136,3)"/><text x="740.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.31%)</title><rect x="736" y="292" width="3" height="15" fill="rgb(241,80,16)"/><text x="739.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.21%)</title><rect x="737" y="308" width="2" height="15" fill="rgb(218,124,30)"/><text x="740.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.10%)</title><rect x="738" y="324" width="1" height="15" fill="rgb(210,122,38)"/><text x="741.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.10%)</title><rect x="738" y="340" width="1" height="15" fill="rgb(220,22,19)"/><text x="741.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.10%)</title><rect x="738" y="356" width="1" height="15" fill="rgb(251,167,54)"/><text x="741.00" y="366.50"></text></g><g><title>FLOAT_multiply (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="739" y="308" width="2" height="15" fill="rgb(222,84,27)"/><text x="742.00" y="318.50"></text></g><g><title>run_binary_simd_multiply_FLOAT (simd.inc.src:245) (1 samples, 0.10%)</title><rect x="739" y="324" width="2" height="15" fill="rgb(243,177,4)"/><text x="742.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.10%)</title><rect x="739" y="340" width="2" height="15" fill="rgb(254,186,11)"/><text x="742.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (7 samples, 0.72%)</title><rect x="733" y="228" width="9" height="15" fill="rgb(243,57,18)"/><text x="736.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.72%)</title><rect x="733" y="244" width="9" height="15" fill="rgb(207,183,51)"/><text x="736.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="736" y="260" width="6" height="15" fill="rgb(217,225,13)"/><text x="739.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="736" y="276" width="6" height="15" fill="rgb(235,138,35)"/><text x="739.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.21%)</title><rect x="739" y="292" width="3" height="15" fill="rgb(215,206,34)"/><text x="742.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:765) (1 samples, 0.10%)</title><rect x="741" y="308" width="1" height="15" fill="rgb(252,71,36)"/><text x="744.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h:169) (1 samples, 0.10%)</title><rect x="741" y="324" width="1" height="15" fill="rgb(210,76,24)"/><text x="744.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="743" y="260" width="1" height="15" fill="rgb(205,228,28)"/><text x="746.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.10%)</title><rect x="743" y="276" width="1" height="15" fill="rgb(206,171,9)"/><text x="746.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.10%)</title><rect x="744" y="260" width="1" height="15" fill="rgb(224,96,25)"/><text x="747.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="745" y="308" width="2" height="15" fill="rgb(227,178,23)"/><text x="748.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.10%)</title><rect x="745" y="324" width="2" height="15" fill="rgb(252,52,10)"/><text x="748.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="745" y="292" width="3" height="15" fill="rgb(225,169,28)"/><text x="748.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="747" y="308" width="1" height="15" fill="rgb(208,189,8)"/><text x="750.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.10%)</title><rect x="747" y="324" width="1" height="15" fill="rgb(228,229,43)"/><text x="750.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1994) (1 samples, 0.10%)</title><rect x="747" y="340" width="1" height="15" fill="rgb(205,59,36)"/><text x="750.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="748" y="340" width="1" height="15" fill="rgb(215,151,17)"/><text x="751.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.21%)</title><rect x="749" y="356" width="3" height="15" fill="rgb(232,170,45)"/><text x="752.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.10%)</title><rect x="752" y="356" width="1" height="15" fill="rgb(234,4,50)"/><text x="755.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.52%)</title><rect x="748" y="292" width="6" height="15" fill="rgb(222,181,44)"/><text x="751.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.52%)</title><rect x="748" y="308" width="6" height="15" fill="rgb(219,211,34)"/><text x="751.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.52%)</title><rect x="748" y="324" width="6" height="15" fill="rgb(212,81,53)"/><text x="751.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.41%)</title><rect x="749" y="340" width="5" height="15" fill="rgb(244,48,28)"/><text x="752.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.10%)</title><rect x="753" y="356" width="1" height="15" fill="rgb(223,105,50)"/><text x="756.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (11 samples, 1.13%)</title><rect x="742" y="228" width="13" height="15" fill="rgb(242,51,40)"/><text x="745.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.03%)</title><rect x="743" y="244" width="12" height="15" fill="rgb(212,134,26)"/><text x="746.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.82%)</title><rect x="745" y="260" width="10" height="15" fill="rgb(221,42,33)"/><text x="748.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.82%)</title><rect x="745" y="276" width="10" height="15" fill="rgb(238,35,37)"/><text x="748.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="754" y="292" width="1" height="15" fill="rgb(249,219,0)"/><text x="757.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="754" y="308" width="1" height="15" fill="rgb(249,193,20)"/><text x="757.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="754" y="324" width="1" height="15" fill="rgb(254,156,16)"/><text x="757.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="754" y="340" width="1" height="15" fill="rgb(217,155,8)"/><text x="757.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.10%)</title><rect x="754" y="356" width="1" height="15" fill="rgb(209,31,3)"/><text x="757.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (24 samples, 2.47%)</title><rect x="727" y="196" width="29" height="15" fill="rgb(253,217,45)"/><text x="730.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 2.37%)</title><rect x="728" y="212" width="28" height="15" fill="rgb(211,26,16)"/><text x="731.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.10%)</title><rect x="755" y="228" width="1" height="15" fill="rgb(251,171,53)"/><text x="758.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.10%)</title><rect x="755" y="244" width="1" height="15" fill="rgb(230,45,2)"/><text x="758.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.10%)</title><rect x="756" y="196" width="2" height="15" fill="rgb(237,73,50)"/><text x="759.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="758" y="228" width="1" height="15" fill="rgb(251,215,36)"/><text x="761.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="761" y="324" width="2" height="15" fill="rgb(251,72,38)"/><text x="764.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.31%)</title><rect x="763" y="340" width="3" height="15" fill="rgb(216,134,53)"/><text x="766.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.31%)</title><rect x="763" y="356" width="3" height="15" fill="rgb(207,93,8)"/><text x="766.00" y="366.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.41%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(247,0,28)"/><text x="766.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.10%)</title><rect x="766" y="340" width="1" height="15" fill="rgb(254,1,27)"/><text x="769.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.21%)</title><rect x="767" y="340" width="3" height="15" fill="rgb(213,213,34)"/><text x="770.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="769" y="356" width="1" height="15" fill="rgb(252,156,24)"/><text x="772.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.10%)</title><rect x="771" y="388" width="1" height="15" fill="rgb(206,218,27)"/><text x="774.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.10%)</title><rect x="772" y="388" width="1" height="15" fill="rgb(215,27,7)"/><text x="775.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.41%)</title><rect x="770" y="340" width="5" height="15" fill="rgb(233,70,47)"/><text x="773.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="771" y="356" width="4" height="15" fill="rgb(207,66,11)"/><text x="774.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.31%)</title><rect x="771" y="372" width="4" height="15" fill="rgb(224,0,7)"/><text x="774.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.10%)</title><rect x="773" y="388" width="2" height="15" fill="rgb(219,121,40)"/><text x="776.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.72%)</title><rect x="767" y="324" width="9" height="15" fill="rgb(233,169,41)"/><text x="770.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.10%)</title><rect x="775" y="340" width="1" height="15" fill="rgb(226,102,48)"/><text x="778.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="775" y="356" width="1" height="15" fill="rgb(214,171,52)"/><text x="778.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="775" y="372" width="1" height="15" fill="rgb(240,207,19)"/><text x="778.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.10%)</title><rect x="775" y="388" width="1" height="15" fill="rgb(227,141,38)"/><text x="778.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="778" y="356" width="2" height="15" fill="rgb(245,29,38)"/><text x="781.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="778" y="372" width="2" height="15" fill="rgb(222,15,49)"/><text x="781.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="778" y="388" width="2" height="15" fill="rgb(208,97,17)"/><text x="781.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="778" y="404" width="2" height="15" fill="rgb(238,9,2)"/><text x="781.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="780" y="372" width="1" height="15" fill="rgb(245,55,34)"/><text x="783.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="780" y="388" width="1" height="15" fill="rgb(230,92,33)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1900) (1 samples, 0.10%)</title><rect x="780" y="404" width="1" height="15" fill="rgb(217,12,43)"/><text x="783.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="781" y="404" width="1" height="15" fill="rgb(241,119,19)"/><text x="784.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="781" y="420" width="1" height="15" fill="rgb(225,12,33)"/><text x="784.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.10%)</title><rect x="781" y="436" width="1" height="15" fill="rgb(243,94,21)"/><text x="784.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.10%)</title><rect x="781" y="452" width="1" height="15" fill="rgb(230,26,1)"/><text x="784.00" y="462.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.10%)</title><rect x="781" y="468" width="1" height="15" fill="rgb(239,22,11)"/><text x="784.00" y="478.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:355) (1 samples, 0.10%)</title><rect x="781" y="484" width="1" height="15" fill="rgb(218,184,6)"/><text x="784.00" y="494.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.21%)</title><rect x="782" y="468" width="2" height="15" fill="rgb(226,140,26)"/><text x="785.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.52%)</title><rect x="782" y="404" width="6" height="15" fill="rgb(224,140,48)"/><text x="785.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.52%)</title><rect x="782" y="420" width="6" height="15" fill="rgb(235,78,25)"/><text x="785.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.52%)</title><rect x="782" y="436" width="6" height="15" fill="rgb(250,164,50)"/><text x="785.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (5 samples, 0.52%)</title><rect x="782" y="452" width="6" height="15" fill="rgb(249,169,15)"/><text x="785.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (3 samples, 0.31%)</title><rect x="784" y="468" width="4" height="15" fill="rgb(251,156,13)"/><text x="787.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (4 samples, 0.41%)</title><rect x="788" y="420" width="5" height="15" fill="rgb(249,50,29)"/><text x="791.00" y="430.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (5 samples, 0.52%)</title><rect x="793" y="420" width="6" height="15" fill="rgb(219,72,44)"/><text x="796.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (10 samples, 1.03%)</title><rect x="788" y="404" width="12" height="15" fill="rgb(219,19,6)"/><text x="791.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.10%)</title><rect x="799" y="420" width="1" height="15" fill="rgb(230,14,42)"/><text x="802.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.10%)</title><rect x="799" y="436" width="1" height="15" fill="rgb(227,199,14)"/><text x="802.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.10%)</title><rect x="799" y="452" width="1" height="15" fill="rgb(253,149,21)"/><text x="802.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.10%)</title><rect x="799" y="468" width="1" height="15" fill="rgb(222,164,24)"/><text x="802.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (164 samples, 16.91%)</title><rect x="602" y="180" width="199" height="15" fill="rgb(254,104,26)"/><text x="605.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (36 samples, 3.71%)</title><rect x="758" y="196" width="43" height="15" fill="rgb(241,134,12)"/><text x="761.00" y="206.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (36 samples, 3.71%)</title><rect x="758" y="212" width="43" height="15" fill="rgb(210,225,44)"/><text x="761.00" y="222.50">_run..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (35 samples, 3.61%)</title><rect x="759" y="228" width="42" height="15" fill="rgb(233,119,9)"/><text x="762.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (35 samples, 3.61%)</title><rect x="759" y="244" width="42" height="15" fill="rgb(245,92,28)"/><text x="762.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (35 samples, 3.61%)</title><rect x="759" y="260" width="42" height="15" fill="rgb(223,67,49)"/><text x="762.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (33 samples, 3.40%)</title><rect x="761" y="276" width="40" height="15" fill="rgb(241,51,11)"/><text x="764.00" y="286.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (33 samples, 3.40%)</title><rect x="761" y="292" width="40" height="15" fill="rgb(208,183,43)"/><text x="764.00" y="302.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (33 samples, 3.40%)</title><rect x="761" y="308" width="40" height="15" fill="rgb(237,80,53)"/><text x="764.00" y="318.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:132) (21 samples, 2.16%)</title><rect x="776" y="324" width="25" height="15" fill="rgb(249,152,9)"/><text x="779.00" y="334.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (20 samples, 2.06%)</title><rect x="777" y="340" width="24" height="15" fill="rgb(214,183,2)"/><text x="780.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 1.86%)</title><rect x="780" y="356" width="21" height="15" fill="rgb(222,106,33)"/><text x="783.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 1.75%)</title><rect x="781" y="372" width="20" height="15" fill="rgb(239,219,39)"/><text x="784.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 1.75%)</title><rect x="781" y="388" width="20" height="15" fill="rgb(238,158,21)"/><text x="784.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="800" y="404" width="1" height="15" fill="rgb(224,92,17)"/><text x="803.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.10%)</title><rect x="800" y="420" width="1" height="15" fill="rgb(223,60,7)"/><text x="803.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.10%)</title><rect x="801" y="180" width="2" height="15" fill="rgb(254,172,4)"/><text x="804.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.52%)</title><rect x="803" y="180" width="6" height="15" fill="rgb(251,179,43)"/><text x="806.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (190 samples, 19.59%)</title><rect x="579" y="164" width="231" height="15" fill="rgb(237,161,40)"/><text x="582.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.10%)</title><rect x="809" y="180" width="1" height="15" fill="rgb(207,95,38)"/><text x="812.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:45) (315 samples, 32.47%)</title><rect x="428" y="52" width="383" height="15" fill="rgb(230,41,36)"/><text x="431.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:44) (315 samples, 32.47%)</title><rect x="428" y="68" width="383" height="15" fill="rgb(222,107,50)"/><text x="431.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (314 samples, 32.37%)</title><rect x="429" y="84" width="382" height="15" fill="rgb(207,116,33)"/><text x="432.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (191 samples, 19.69%)</title><rect x="579" y="100" width="232" height="15" fill="rgb(211,18,17)"/><text x="582.00" y="110.50">profile (bench_AdaBoostClassif..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 19.69%)</title><rect x="579" y="116" width="232" height="15" fill="rgb(245,31,17)"/><text x="582.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (191 samples, 19.69%)</title><rect x="579" y="132" width="232" height="15" fill="rgb(222,71,21)"/><text x="582.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (191 samples, 19.69%)</title><rect x="579" y="148" width="232" height="15" fill="rgb(239,76,9)"/><text x="582.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="810" y="164" width="1" height="15" fill="rgb(241,102,12)"/><text x="813.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="810" y="180" width="1" height="15" fill="rgb(216,180,19)"/><text x="813.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="810" y="196" width="1" height="15" fill="rgb(251,167,31)"/><text x="813.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="810" y="212" width="1" height="15" fill="rgb(254,220,22)"/><text x="813.00" y="222.50"></text></g><g><title>0x7f92227f4eb0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="810" y="228" width="1" height="15" fill="rgb(228,212,39)"/><text x="813.00" y="238.50"></text></g><g><title>0x7f92227f3c2d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="810" y="244" width="1" height="15" fill="rgb(233,65,47)"/><text x="813.00" y="254.50"></text></g><g><title>__setstate__ (sklearn/base.py:310) (1 samples, 0.10%)</title><rect x="811" y="196" width="1" height="15" fill="rgb(250,137,23)"/><text x="814.00" y="206.50"></text></g><g><title>__setstate__ (sklearn/base.py:320) (1 samples, 0.10%)</title><rect x="812" y="196" width="2" height="15" fill="rgb(232,14,47)"/><text x="815.00" y="206.50"></text></g><g><title>load (_pickle.c:6463) (3 samples, 0.31%)</title><rect x="811" y="148" width="4" height="15" fill="rgb(252,143,6)"/><text x="814.00" y="158.50"></text></g><g><title>load_build (_pickle.c:6203) (3 samples, 0.31%)</title><rect x="811" y="164" width="4" height="15" fill="rgb(237,229,22)"/><text x="814.00" y="174.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (3 samples, 0.31%)</title><rect x="811" y="180" width="4" height="15" fill="rgb(249,80,48)"/><text x="814.00" y="190.50"></text></g><g><title>array_setstate (methods.c:2041) (1 samples, 0.10%)</title><rect x="814" y="196" width="1" height="15" fill="rgb(230,84,46)"/><text x="817.00" y="206.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="814" y="212" width="1" height="15" fill="rgb(232,143,12)"/><text x="817.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="814" y="228" width="1" height="15" fill="rgb(243,52,7)"/><text x="817.00" y="238.50"></text></g><g><title>0x7f92227f6700 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="814" y="244" width="1" height="15" fill="rgb(221,203,26)"/><text x="817.00" y="254.50"></text></g><g><title>0x7f92227f3aa4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="814" y="260" width="1" height="15" fill="rgb(247,121,0)"/><text x="817.00" y="270.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (6 samples, 0.62%)</title><rect x="811" y="100" width="7" height="15" fill="rgb(254,203,20)"/><text x="814.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (6 samples, 0.62%)</title><rect x="811" y="116" width="7" height="15" fill="rgb(252,204,2)"/><text x="814.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (6 samples, 0.62%)</title><rect x="811" y="132" width="7" height="15" fill="rgb(250,146,18)"/><text x="814.00" y="142.50"></text></g><g><title>load (_pickle.c:6479) (3 samples, 0.31%)</title><rect x="815" y="148" width="3" height="15" fill="rgb(246,113,49)"/><text x="818.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c:6335) (3 samples, 0.31%)</title><rect x="815" y="164" width="3" height="15" fill="rgb(206,116,20)"/><text x="818.00" y="174.50"></text></g><g><title>0x7f91fc2377af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="815" y="180" width="3" height="15" fill="rgb(238,116,20)"/><text x="818.00" y="190.50"></text></g><g><title>0x7f91fc21c1e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="815" y="196" width="3" height="15" fill="rgb(238,183,42)"/><text x="818.00" y="206.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="815" y="212" width="3" height="15" fill="rgb(205,26,12)"/><text x="818.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.31%)</title><rect x="815" y="228" width="3" height="15" fill="rgb(223,122,33)"/><text x="818.00" y="238.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (3 samples, 0.31%)</title><rect x="815" y="244" width="3" height="15" fill="rgb(217,40,8)"/><text x="818.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.10%)</title><rect x="817" y="260" width="1" height="15" fill="rgb(240,148,38)"/><text x="820.00" y="270.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:496) (1 samples, 0.10%)</title><rect x="818" y="260" width="2" height="15" fill="rgb(216,166,45)"/><text x="821.00" y="270.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.10%)</title><rect x="818" y="276" width="2" height="15" fill="rgb(215,205,49)"/><text x="821.00" y="286.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.10%)</title><rect x="818" y="292" width="2" height="15" fill="rgb(225,157,29)"/><text x="821.00" y="302.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (2 samples, 0.21%)</title><rect x="818" y="212" width="3" height="15" fill="rgb(208,7,7)"/><text x="821.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:211) (2 samples, 0.21%)</title><rect x="818" y="228" width="3" height="15" fill="rgb(213,130,52)"/><text x="821.00" y="238.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (2 samples, 0.21%)</title><rect x="818" y="244" width="3" height="15" fill="rgb(243,221,11)"/><text x="821.00" y="254.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.10%)</title><rect x="820" y="260" width="1" height="15" fill="rgb(245,200,8)"/><text x="823.00" y="270.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="820" y="276" width="1" height="15" fill="rgb(225,114,49)"/><text x="823.00" y="286.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:80) (1 samples, 0.10%)</title><rect x="821" y="212" width="1" height="15" fill="rgb(240,53,21)"/><text x="824.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.10%)</title><rect x="821" y="228" width="1" height="15" fill="rgb(223,147,19)"/><text x="824.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py:404) (1 samples, 0.10%)</title><rect x="821" y="244" width="1" height="15" fill="rgb(227,132,33)"/><text x="824.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="821" y="260" width="1" height="15" fill="rgb(240,168,50)"/><text x="824.00" y="270.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (4 samples, 0.41%)</title><rect x="818" y="196" width="5" height="15" fill="rgb(241,8,53)"/><text x="821.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.10%)</title><rect x="822" y="212" width="1" height="15" fill="rgb(223,1,1)"/><text x="825.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.10%)</title><rect x="822" y="228" width="1" height="15" fill="rgb(243,15,50)"/><text x="825.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.10%)</title><rect x="822" y="244" width="1" height="15" fill="rgb(242,193,38)"/><text x="825.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.10%)</title><rect x="822" y="260" width="1" height="15" fill="rgb(218,32,11)"/><text x="825.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.10%)</title><rect x="822" y="276" width="1" height="15" fill="rgb(246,91,21)"/><text x="825.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.10%)</title><rect x="822" y="292" width="1" height="15" fill="rgb(227,184,4)"/><text x="825.00" y="302.50"></text></g><g><title>extract (traceback.py:359) (1 samples, 0.10%)</title><rect x="822" y="308" width="1" height="15" fill="rgb(251,190,5)"/><text x="825.00" y="318.50"></text></g><g><title>checkcache (linecache.py:74) (1 samples, 0.10%)</title><rect x="822" y="324" width="1" height="15" fill="rgb(230,60,8)"/><text x="825.00" y="334.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="822" y="340" width="1" height="15" fill="rgb(241,136,39)"/><text x="825.00" y="350.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="822" y="356" width="1" height="15" fill="rgb(208,85,47)"/><text x="825.00" y="366.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:254) (1 samples, 0.10%)</title><rect x="823" y="196" width="2" height="15" fill="rgb(238,48,20)"/><text x="826.00" y="206.50"></text></g><g><title>_normalise_probability (skl2onnx/operator_converters/ada_boost.py:127) (1 samples, 0.10%)</title><rect x="823" y="212" width="2" height="15" fill="rgb(208,52,29)"/><text x="826.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.10%)</title><rect x="823" y="228" width="2" height="15" fill="rgb(216,26,50)"/><text x="826.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:36) (1 samples, 0.10%)</title><rect x="823" y="244" width="2" height="15" fill="rgb(228,226,18)"/><text x="826.00" y="254.50"></text></g><g><title>_create_name_or_use_existing_one (onnxconverter_common/onnx_ops.py:16) (1 samples, 0.10%)</title><rect x="823" y="260" width="2" height="15" fill="rgb(244,220,24)"/><text x="826.00" y="270.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py:328) (1 samples, 0.10%)</title><rect x="823" y="276" width="2" height="15" fill="rgb(237,211,25)"/><text x="826.00" y="286.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.10%)</title><rect x="823" y="292" width="2" height="15" fill="rgb(205,157,13)"/><text x="826.00" y="302.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:28) (12 samples, 1.24%)</title><rect x="811" y="84" width="15" height="15" fill="rgb(241,61,10)"/><text x="814.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (6 samples, 0.62%)</title><rect x="818" y="100" width="8" height="15" fill="rgb(253,103,29)"/><text x="821.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (6 samples, 0.62%)</title><rect x="818" y="116" width="8" height="15" fill="rgb(239,68,42)"/><text x="821.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (6 samples, 0.62%)</title><rect x="818" y="132" width="8" height="15" fill="rgb(216,208,30)"/><text x="821.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (6 samples, 0.62%)</title><rect x="818" y="148" width="8" height="15" fill="rgb(235,61,46)"/><text x="821.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (6 samples, 0.62%)</title><rect x="818" y="164" width="8" height="15" fill="rgb(216,224,28)"/><text x="821.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (6 samples, 0.62%)</title><rect x="818" y="180" width="8" height="15" fill="rgb(241,183,44)"/><text x="821.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.10%)</title><rect x="825" y="196" width="1" height="15" fill="rgb(229,137,8)"/><text x="828.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.10%)</title><rect x="825" y="212" width="1" height="15" fill="rgb(219,100,30)"/><text x="828.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.10%)</title><rect x="825" y="228" width="1" height="15" fill="rgb(250,210,0)"/><text x="828.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.10%)</title><rect x="825" y="244" width="1" height="15" fill="rgb(237,222,52)"/><text x="828.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="825" y="260" width="1" height="15" fill="rgb(217,203,52)"/><text x="828.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="825" y="276" width="1" height="15" fill="rgb(213,111,36)"/><text x="828.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1252) (1 samples, 0.10%)</title><rect x="825" y="292" width="1" height="15" fill="rgb(229,45,9)"/><text x="828.00" y="302.50"></text></g><g><title>0x7f91e24b2ff9 (?) (1 samples, 0.10%)</title><rect x="826" y="212" width="1" height="15" fill="rgb(244,208,46)"/><text x="829.00" y="222.50"></text></g><g><title>0x7f91e24adef6 (?) (1 samples, 0.10%)</title><rect x="826" y="228" width="1" height="15" fill="rgb(230,181,45)"/><text x="829.00" y="238.50"></text></g><g><title>0x7f91e24a2962 (?) (1 samples, 0.10%)</title><rect x="826" y="244" width="1" height="15" fill="rgb(222,106,26)"/><text x="829.00" y="254.50"></text></g><g><title>0x7f91e24d67a7 (?) (1 samples, 0.10%)</title><rect x="826" y="260" width="1" height="15" fill="rgb(236,217,37)"/><text x="829.00" y="270.50"></text></g><g><title>0x7f91e24d6379 (?) (1 samples, 0.10%)</title><rect x="826" y="276" width="1" height="15" fill="rgb(249,215,42)"/><text x="829.00" y="286.50"></text></g><g><title>0x7f91e29348b8 (?) (1 samples, 0.10%)</title><rect x="826" y="292" width="1" height="15" fill="rgb(253,128,31)"/><text x="829.00" y="302.50"></text></g><g><title>0x7f91e2932c7f (?) (1 samples, 0.10%)</title><rect x="826" y="308" width="1" height="15" fill="rgb(228,157,24)"/><text x="829.00" y="318.50"></text></g><g><title>0x7f91e294599c (?) (1 samples, 0.10%)</title><rect x="826" y="324" width="1" height="15" fill="rgb(227,214,3)"/><text x="829.00" y="334.50"></text></g><g><title>0x7f91e26634d3 (?) (1 samples, 0.10%)</title><rect x="826" y="340" width="1" height="15" fill="rgb(232,122,11)"/><text x="829.00" y="350.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="827" y="340" width="1" height="15" fill="rgb(229,100,31)"/><text x="830.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="828" y="340" width="1" height="15" fill="rgb(222,168,14)"/><text x="831.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="828" y="356" width="1" height="15" fill="rgb(205,12,33)"/><text x="831.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="828" y="372" width="1" height="15" fill="rgb(210,39,52)"/><text x="831.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="828" y="388" width="1" height="15" fill="rgb(216,229,50)"/><text x="831.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="828" y="404" width="1" height="15" fill="rgb(248,146,50)"/><text x="831.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="828" y="420" width="1" height="15" fill="rgb(222,34,23)"/><text x="831.00" y="430.50"></text></g><g><title>0x7f92227f6028 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="828" y="436" width="1" height="15" fill="rgb(240,74,36)"/><text x="831.00" y="446.50"></text></g><g><title>0x7f92227f3c1c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="828" y="452" width="1" height="15" fill="rgb(236,167,0)"/><text x="831.00" y="462.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="829" y="340" width="3" height="15" fill="rgb(212,5,21)"/><text x="832.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="832" y="372" width="11" height="15" fill="rgb(231,196,12)"/><text x="835.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="839" y="388" width="4" height="15" fill="rgb(210,125,40)"/><text x="842.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="372" width="1" height="15" fill="rgb(228,72,1)"/><text x="846.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="388" width="1" height="15" fill="rgb(213,59,44)"/><text x="846.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="404" width="1" height="15" fill="rgb(237,162,21)"/><text x="846.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="420" width="1" height="15" fill="rgb(242,187,53)"/><text x="846.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="436" width="1" height="15" fill="rgb(235,65,46)"/><text x="846.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="452" width="1" height="15" fill="rgb(220,73,54)"/><text x="846.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="843" y="468" width="1" height="15" fill="rgb(251,207,42)"/><text x="846.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="843" y="484" width="1" height="15" fill="rgb(211,167,20)"/><text x="846.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="843" y="500" width="1" height="15" fill="rgb(242,149,50)"/><text x="846.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.13%)</title><rect x="832" y="340" width="13" height="15" fill="rgb(226,166,21)"/><text x="835.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.13%)</title><rect x="832" y="356" width="13" height="15" fill="rgb(211,121,16)"/><text x="835.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="844" y="372" width="1" height="15" fill="rgb(210,55,19)"/><text x="847.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="844" y="388" width="1" height="15" fill="rgb(251,153,19)"/><text x="847.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="845" y="340" width="6" height="15" fill="rgb(219,173,10)"/><text x="848.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="845" y="356" width="6" height="15" fill="rgb(224,45,53)"/><text x="848.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="845" y="372" width="6" height="15" fill="rgb(223,42,5)"/><text x="848.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="851" y="372" width="2" height="15" fill="rgb(210,93,36)"/><text x="854.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="851" y="340" width="3" height="15" fill="rgb(229,2,37)"/><text x="854.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="851" y="356" width="3" height="15" fill="rgb(225,190,24)"/><text x="854.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="853" y="372" width="1" height="15" fill="rgb(226,34,7)"/><text x="856.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="853" y="388" width="1" height="15" fill="rgb(254,195,4)"/><text x="856.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="853" y="404" width="1" height="15" fill="rgb(250,69,26)"/><text x="856.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="853" y="420" width="1" height="15" fill="rgb(254,197,53)"/><text x="856.00" y="430.50"></text></g><g><title>0x7f92227f4902 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="853" y="436" width="1" height="15" fill="rgb(220,17,26)"/><text x="856.00" y="446.50"></text></g><g><title>0x7f91e247a9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="871" y="356" width="1" height="15" fill="rgb(254,126,26)"/><text x="874.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="872" y="356" width="1" height="15" fill="rgb(206,43,36)"/><text x="875.00" y="366.50"></text></g><g><title>0x7f91e2479930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(254,93,26)"/><text x="905.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.93%)</title><rect x="904" y="388" width="11" height="15" fill="rgb(243,57,37)"/><text x="907.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.41%)</title><rect x="910" y="404" width="5" height="15" fill="rgb(247,67,47)"/><text x="913.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 3.81%)</title><rect x="873" y="356" width="45" height="15" fill="rgb(236,6,10)"/><text x="876.00" y="366.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.75%)</title><rect x="898" y="372" width="20" height="15" fill="rgb(250,196,53)"/><text x="901.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="915" y="388" width="3" height="15" fill="rgb(237,31,37)"/><text x="918.00" y="398.50"></text></g><g><title>0x7f9222814dbb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="921" y="372" width="1" height="15" fill="rgb(249,13,2)"/><text x="924.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="918" y="356" width="5" height="15" fill="rgb(237,39,30)"/><text x="921.00" y="366.50"></text></g><g><title>0x7f9222814dbe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="922" y="372" width="1" height="15" fill="rgb(222,133,33)"/><text x="925.00" y="382.50"></text></g><g><title>0x7f92122c17a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="927" y="372" width="1" height="15" fill="rgb(215,33,30)"/><text x="930.00" y="382.50"></text></g><g><title>0x7f92227f491e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="928" y="372" width="1" height="15" fill="rgb(215,160,41)"/><text x="931.00" y="382.50"></text></g><g><title>0x7f92227f492f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="929" y="372" width="1" height="15" fill="rgb(244,72,33)"/><text x="932.00" y="382.50"></text></g><g><title>0x7f92227f4961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(215,67,36)"/><text x="933.00" y="382.50"></text></g><g><title>0x7f92227f4998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="932" y="372" width="1" height="15" fill="rgb(206,160,37)"/><text x="935.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.31%)</title><rect x="933" y="372" width="3" height="15" fill="rgb(225,193,16)"/><text x="936.00" y="382.50"></text></g><g><title>0x7f92227f4961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(217,94,17)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f92227f4991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="943" y="388" width="1" height="15" fill="rgb(206,121,41)"/><text x="946.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.86%)</title><rect x="923" y="356" width="22" height="15" fill="rgb(234,224,25)"/><text x="926.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.72%)</title><rect x="936" y="372" width="9" height="15" fill="rgb(212,0,37)"/><text x="939.00" y="382.50"></text></g><g><title>0x7f92227f4a4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="944" y="388" width="1" height="15" fill="rgb(251,100,10)"/><text x="947.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 10.62%)</title><rect x="827" y="260" width="125" height="15" fill="rgb(232,59,53)"/><text x="830.00" y="270.50">onnxruntime::In..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 10.62%)</title><rect x="827" y="276" width="125" height="15" fill="rgb(215,214,0)"/><text x="830.00" y="286.50">onnxruntime::In..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 10.62%)</title><rect x="827" y="292" width="125" height="15" fill="rgb(236,93,30)"/><text x="830.00" y="302.50">onnxruntime::ut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 10.62%)</title><rect x="827" y="308" width="125" height="15" fill="rgb(224,193,6)"/><text x="830.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 10.62%)</title><rect x="827" y="324" width="125" height="15" fill="rgb(214,85,6)"/><text x="830.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (81 samples, 8.35%)</title><rect x="854" y="340" width="98" height="15" fill="rgb(248,110,41)"/><text x="857.00" y="350.50">onnxruntime..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.62%)</title><rect x="945" y="356" width="7" height="15" fill="rgb(228,30,11)"/><text x="948.00" y="366.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (107 samples, 11.03%)</title><rect x="826" y="100" width="130" height="15" fill="rgb(214,146,14)"/><text x="829.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (107 samples, 11.03%)</title><rect x="826" y="116" width="130" height="15" fill="rgb(230,27,0)"/><text x="829.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (107 samples, 11.03%)</title><rect x="826" y="132" width="130" height="15" fill="rgb(252,153,34)"/><text x="829.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (107 samples, 11.03%)</title><rect x="826" y="148" width="130" height="15" fill="rgb(214,209,54)"/><text x="829.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (107 samples, 11.03%)</title><rect x="826" y="164" width="130" height="15" fill="rgb(224,99,7)"/><text x="829.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (107 samples, 11.03%)</title><rect x="826" y="180" width="130" height="15" fill="rgb(206,134,13)"/><text x="829.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (107 samples, 11.03%)</title><rect x="826" y="196" width="130" height="15" fill="rgb(250,86,31)"/><text x="829.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 10.93%)</title><rect x="827" y="212" width="129" height="15" fill="rgb(216,166,20)"/><text x="830.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 10.93%)</title><rect x="827" y="228" width="129" height="15" fill="rgb(242,54,20)"/><text x="830.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 10.93%)</title><rect x="827" y="244" width="129" height="15" fill="rgb(222,70,4)"/><text x="830.00" y="254.50">onnxruntime::pyt..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="952" y="260" width="4" height="15" fill="rgb(231,21,50)"/><text x="955.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="955" y="276" width="1" height="15" fill="rgb(228,214,26)"/><text x="958.00" y="286.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="958" y="340" width="3" height="15" fill="rgb(228,34,26)"/><text x="961.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="958" y="356" width="3" height="15" fill="rgb(242,157,20)"/><text x="961.00" y="366.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="961" y="340" width="1" height="15" fill="rgb(211,59,16)"/><text x="964.00" y="350.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="962" y="340" width="1" height="15" fill="rgb(215,206,6)"/><text x="965.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="962" y="356" width="1" height="15" fill="rgb(217,170,35)"/><text x="965.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="962" y="372" width="1" height="15" fill="rgb(210,162,6)"/><text x="965.00" y="382.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="963" y="340" width="1" height="15" fill="rgb(226,148,30)"/><text x="966.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.03%)</title><rect x="964" y="340" width="13" height="15" fill="rgb(224,87,34)"/><text x="967.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="977" y="340" width="15" height="15" fill="rgb(245,51,27)"/><text x="980.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="977" y="356" width="15" height="15" fill="rgb(234,130,16)"/><text x="980.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="977" y="372" width="15" height="15" fill="rgb(206,49,46)"/><text x="980.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="985" y="388" width="7" height="15" fill="rgb(217,74,19)"/><text x="988.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="992" y="340" width="5" height="15" fill="rgb(216,219,12)"/><text x="995.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.44%)</title><rect x="997" y="340" width="17" height="15" fill="rgb(228,45,16)"/><text x="1000.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.44%)</title><rect x="997" y="356" width="17" height="15" fill="rgb(217,61,32)"/><text x="1000.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.44%)</title><rect x="997" y="372" width="17" height="15" fill="rgb(245,218,36)"/><text x="1000.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="1009" y="388" width="5" height="15" fill="rgb(233,191,40)"/><text x="1012.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1014" y="340" width="3" height="15" fill="rgb(250,197,18)"/><text x="1017.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1014" y="356" width="3" height="15" fill="rgb(242,106,23)"/><text x="1017.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1014" y="372" width="3" height="15" fill="rgb(243,108,44)"/><text x="1017.00" y="382.50"></text></g><g><title>0x7f91e2479930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1093" y="388" width="2" height="15" fill="rgb(210,197,12)"/><text x="1096.00" y="398.50"></text></g><g><title>0x7f91e247aba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1095" y="388" width="1" height="15" fill="rgb(230,100,12)"/><text x="1098.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (18 samples, 1.86%)</title><rect x="1096" y="388" width="22" height="15" fill="rgb(226,116,40)"/><text x="1099.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (17 samples, 1.75%)</title><rect x="1097" y="404" width="21" height="15" fill="rgb(218,208,39)"/><text x="1100.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 8.04%)</title><rect x="1041" y="356" width="95" height="15" fill="rgb(242,94,4)"/><text x="1044.00" y="366.50">onnxruntime..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 4.74%)</title><rect x="1080" y="372" width="56" height="15" fill="rgb(225,53,52)"/><text x="1083.00" y="382.50">std::..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (15 samples, 1.55%)</title><rect x="1118" y="388" width="18" height="15" fill="rgb(223,130,0)"/><text x="1121.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="1136" y="356" width="5" height="15" fill="rgb(220,159,48)"/><text x="1139.00" y="366.50"></text></g><g><title>0x7f9222814dbe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1140" y="372" width="1" height="15" fill="rgb(219,215,19)"/><text x="1143.00" y="382.50"></text></g><g><title>0x7f92122c17a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1144" y="372" width="2" height="15" fill="rgb(212,53,51)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7f92227f4909 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(208,163,47)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7f92227f492c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(218,83,37)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7f92227f4938 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1148" y="372" width="1" height="15" fill="rgb(240,93,33)"/><text x="1151.00" y="382.50"></text></g><g><title>0x7f92227f4945 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="1149" y="372" width="4" height="15" fill="rgb(219,94,32)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7f92227f4965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1153" y="372" width="1" height="15" fill="rgb(218,166,8)"/><text x="1156.00" y="382.50"></text></g><g><title>0x7f92227f4991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1154" y="372" width="1" height="15" fill="rgb(216,85,12)"/><text x="1157.00" y="382.50"></text></g><g><title>0x7f92227f4998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1155" y="372" width="2" height="15" fill="rgb(250,58,16)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7f92227f4a41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1157" y="372" width="1" height="15" fill="rgb(209,92,23)"/><text x="1160.00" y="382.50"></text></g><g><title>0x7f92227f4a55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1158" y="372" width="1" height="15" fill="rgb(220,169,18)"/><text x="1161.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1159" y="372" width="3" height="15" fill="rgb(230,114,36)"/><text x="1162.00" y="382.50"></text></g><g><title>0x7f92122c17a0 (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="1163" y="388" width="2" height="15" fill="rgb(209,223,30)"/><text x="1166.00" y="398.50"></text></g><g><title>0x7f92227f490e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1165" y="388" width="1" height="15" fill="rgb(251,55,54)"/><text x="1168.00" y="398.50"></text></g><g><title>0x7f92227f491e (libc-2.29.so) (3 samples, 0.31%)</title><rect x="1166" y="388" width="4" height="15" fill="rgb(232,199,26)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7f92227f497c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(238,128,13)"/><text x="1173.00" y="398.50"></text></g><g><title>0x7f92227f4991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1171" y="388" width="1" height="15" fill="rgb(249,147,18)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7f92227f4bd8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1172" y="388" width="2" height="15" fill="rgb(208,189,21)"/><text x="1175.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 2.89%)</title><rect x="1141" y="356" width="34" height="15" fill="rgb(235,210,12)"/><text x="1144.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.13%)</title><rect x="1162" y="372" width="13" height="15" fill="rgb(217,63,17)"/><text x="1165.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(254,207,49)"/><text x="1177.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (136 samples, 14.02%)</title><rect x="1017" y="340" width="165" height="15" fill="rgb(225,63,43)"/><text x="1020.00" y="350.50">onnxruntime::ml::Tree..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.62%)</title><rect x="1175" y="356" width="7" height="15" fill="rgb(254,42,46)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 19.28%)</title><rect x="958" y="260" width="228" height="15" fill="rgb(210,37,28)"/><text x="961.00" y="270.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 19.28%)</title><rect x="958" y="276" width="228" height="15" fill="rgb(209,141,46)"/><text x="961.00" y="286.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 19.28%)</title><rect x="958" y="292" width="228" height="15" fill="rgb(244,96,14)"/><text x="961.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 19.28%)</title><rect x="958" y="308" width="228" height="15" fill="rgb(217,208,43)"/><text x="961.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (187 samples, 19.28%)</title><rect x="958" y="324" width="228" height="15" fill="rgb(232,182,32)"/><text x="961.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="1182" y="340" width="4" height="15" fill="rgb(213,80,21)"/><text x="1185.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(208,189,43)"/><text x="1186.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(237,132,39)"/><text x="1186.00" y="382.50"></text></g><g><title>0x7f92227f645f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1185" y="388" width="1" height="15" fill="rgb(236,174,41)"/><text x="1188.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(224,122,6)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.10%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(218,85,45)"/><text x="1189.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(251,27,23)"/><text x="1189.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(251,180,10)"/><text x="1189.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="1186" y="324" width="1" height="15" fill="rgb(210,144,21)"/><text x="1189.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="1186" y="340" width="1" height="15" fill="rgb(249,206,37)"/><text x="1189.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1186" y="356" width="1" height="15" fill="rgb(254,199,0)"/><text x="1189.00" y="366.50"></text></g><g><title>0x7f92227f6028 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1186" y="372" width="1" height="15" fill="rgb(221,210,47)"/><text x="1189.00" y="382.50"></text></g><g><title>0x7f92227f3bd6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1186" y="388" width="1" height="15" fill="rgb(229,135,23)"/><text x="1189.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:52) (310 samples, 31.96%)</title><rect x="811" y="52" width="377" height="15" fill="rgb(227,222,10)"/><text x="814.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_100..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:51) (310 samples, 31.96%)</title><rect x="811" y="68" width="377" height="15" fill="rgb(216,170,32)"/><text x="814.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (298 samples, 30.72%)</title><rect x="826" y="84" width="362" height="15" fill="rgb(209,175,4)"/><text x="829.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (191 samples, 19.69%)</title><rect x="956" y="100" width="232" height="15" fill="rgb(251,3,8)"/><text x="959.00" y="110.50">profile (bench_AdaBoostClassif..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 19.48%)</title><rect x="958" y="116" width="230" height="15" fill="rgb(213,16,12)"/><text x="961.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (189 samples, 19.48%)</title><rect x="958" y="132" width="230" height="15" fill="rgb(251,122,21)"/><text x="961.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (189 samples, 19.48%)</title><rect x="958" y="148" width="230" height="15" fill="rgb(241,1,34)"/><text x="961.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (189 samples, 19.48%)</title><rect x="958" y="164" width="230" height="15" fill="rgb(205,103,30)"/><text x="961.00" y="174.50">_run_whole_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (189 samples, 19.48%)</title><rect x="958" y="180" width="230" height="15" fill="rgb(236,206,20)"/><text x="961.00" y="190.50">run (mlprodict/onnxrt/ops_whol..</text></g><g><title>run (onnxruntime/capi/session.py:136) (189 samples, 19.48%)</title><rect x="958" y="196" width="230" height="15" fill="rgb(242,54,32)"/><text x="961.00" y="206.50">run (onnxruntime/capi/session...</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 19.48%)</title><rect x="958" y="212" width="230" height="15" fill="rgb(231,138,28)"/><text x="961.00" y="222.50">pybind11::cpp_function::dispat..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 19.48%)</title><rect x="958" y="228" width="230" height="15" fill="rgb(220,159,41)"/><text x="961.00" y="238.50">void pybind11::cpp_function::i..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 19.48%)</title><rect x="958" y="244" width="230" height="15" fill="rgb(214,111,39)"/><text x="961.00" y="254.50">onnxruntime::python::addObject..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(218,113,0)"/><text x="1190.00" y="270.50"></text></g><g><title>all (970 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,188,6)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.10%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(215,123,34)"/><text x="1191.00" y="62.50"></text></g></g></svg>