<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.11%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(244,161,16)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(219,57,21)"/><text x="13.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(206,60,29)"/><text x="13.00" y="206.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(206,186,41)"/><text x="13.00" y="222.50"></text></g><g><title>randint (mtrand.c:6086) (1 samples, 0.11%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(214,139,43)"/><text x="13.00" y="238.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c:25435) (1 samples, 0.11%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(229,22,0)"/><text x="13.00" y="254.50"></text></g><g><title>arraydescr_name_get (descriptor.c:1924) (1 samples, 0.11%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(234,150,17)"/><text x="13.00" y="270.50"></text></g><g><title>0x7ff6a5eb0e7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(233,178,13)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:31) (2 samples, 0.22%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(232,156,37)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:11) (2 samples, 0.22%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(250,16,15)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:39) (2 samples, 0.22%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(236,146,48)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.22%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(213,219,41)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (2 samples, 0.22%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(247,37,29)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.22%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(212,93,42)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (2 samples, 0.22%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(241,18,45)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.11%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(209,38,54)"/><text x="14.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.11%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(246,76,36)"/><text x="14.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.11%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(231,66,26)"/><text x="14.00" y="206.50"></text></g><g><title>0x7ff67f8d2b11 (?) (1 samples, 0.11%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(240,151,41)"/><text x="14.00" y="222.50"></text></g><g><title>0x7ff67f90410a (?) (1 samples, 0.11%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(229,143,34)"/><text x="14.00" y="238.50"></text></g><g><title>0x7ff67fb2fd8c (?) (1 samples, 0.11%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(222,46,52)"/><text x="14.00" y="254.50"></text></g><g><title>0x7ff67fb28d50 (?) (1 samples, 0.11%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(241,60,16)"/><text x="14.00" y="270.50"></text></g><g><title>0x7ff67fb28d50 (?) (1 samples, 0.11%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(237,7,3)"/><text x="14.00" y="286.50"></text></g><g><title>0x7ff67fb28d09 (?) (1 samples, 0.11%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(229,6,15)"/><text x="14.00" y="302.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="12" y="84" width="1" height="15" fill="rgb(211,87,32)"/><text x="15.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="12" y="100" width="1" height="15" fill="rgb(216,228,24)"/><text x="15.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.11%)</title><rect x="12" y="116" width="1" height="15" fill="rgb(231,150,47)"/><text x="15.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.11%)</title><rect x="12" y="132" width="1" height="15" fill="rgb(243,7,29)"/><text x="15.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.11%)</title><rect x="12" y="148" width="1" height="15" fill="rgb(223,179,44)"/><text x="15.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.11%)</title><rect x="12" y="164" width="1" height="15" fill="rgb(226,177,23)"/><text x="15.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.11%)</title><rect x="12" y="180" width="1" height="15" fill="rgb(225,2,45)"/><text x="15.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.11%)</title><rect x="12" y="196" width="1" height="15" fill="rgb(251,77,35)"/><text x="15.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:80) (1 samples, 0.11%)</title><rect x="12" y="212" width="1" height="15" fill="rgb(224,110,35)"/><text x="15.00" y="222.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py:328) (1 samples, 0.11%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(226,182,12)"/><text x="15.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.11%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(233,127,20)"/><text x="15.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.11%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(229,103,34)"/><text x="15.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="15" y="212" width="1" height="15" fill="rgb(235,161,2)"/><text x="18.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="15" y="228" width="1" height="15" fill="rgb(250,47,1)"/><text x="18.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="15" y="244" width="1" height="15" fill="rgb(205,152,48)"/><text x="18.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="16" y="212" width="1" height="15" fill="rgb(223,82,51)"/><text x="19.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="16" y="228" width="1" height="15" fill="rgb(254,22,50)"/><text x="19.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.11%)</title><rect x="16" y="244" width="1" height="15" fill="rgb(210,53,26)"/><text x="19.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.11%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(246,68,3)"/><text x="20.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.33%)</title><rect x="17" y="212" width="4" height="15" fill="rgb(250,214,7)"/><text x="20.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.33%)</title><rect x="17" y="228" width="4" height="15" fill="rgb(218,21,40)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.22%)</title><rect x="19" y="244" width="2" height="15" fill="rgb(251,164,8)"/><text x="22.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="23" y="244" width="1" height="15" fill="rgb(233,68,22)"/><text x="26.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.11%)</title><rect x="23" y="260" width="1" height="15" fill="rgb(243,109,51)"/><text x="26.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.11%)</title><rect x="24" y="260" width="1" height="15" fill="rgb(237,163,11)"/><text x="27.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.22%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(245,2,36)"/><text x="27.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.11%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(245,110,46)"/><text x="28.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.11%)</title><rect x="25" y="276" width="2" height="15" fill="rgb(253,221,5)"/><text x="28.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.11%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(244,100,45)"/><text x="30.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(250,121,52)"/><text x="30.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(214,148,1)"/><text x="30.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.11%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(254,136,6)"/><text x="30.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.11%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(233,9,46)"/><text x="30.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.11%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(228,38,28)"/><text x="30.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="28" y="244" width="1" height="15" fill="rgb(240,159,12)"/><text x="31.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.11%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(224,226,27)"/><text x="31.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (6 samples, 0.67%)</title><rect x="23" y="228" width="8" height="15" fill="rgb(236,77,17)"/><text x="26.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.11%)</title><rect x="29" y="244" width="2" height="15" fill="rgb(241,39,44)"/><text x="32.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="29" y="260" width="2" height="15" fill="rgb(239,121,17)"/><text x="32.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (8 samples, 0.89%)</title><rect x="21" y="212" width="11" height="15" fill="rgb(218,176,32)"/><text x="24.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.11%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(252,219,23)"/><text x="34.00" y="238.50"></text></g><g><title>0x7ff67f8ec2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="276" width="1" height="15" fill="rgb(215,223,4)"/><text x="35.00" y="286.50"></text></g><g><title>0x7ff67f8d0d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="292" width="1" height="15" fill="rgb(234,41,40)"/><text x="35.00" y="302.50"></text></g><g><title>0x7ff67f8d0666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="308" width="1" height="15" fill="rgb(213,190,29)"/><text x="35.00" y="318.50"></text></g><g><title>0x7ff67f8c60fe (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="324" width="1" height="15" fill="rgb(229,125,22)"/><text x="35.00" y="334.50"></text></g><g><title>0x7ff67f8ec592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(235,127,48)"/><text x="36.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.11%)</title><rect x="33" y="292" width="2" height="15" fill="rgb(224,16,2)"/><text x="36.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="33" y="308" width="2" height="15" fill="rgb(210,61,24)"/><text x="36.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.11%)</title><rect x="33" y="324" width="2" height="15" fill="rgb(233,110,44)"/><text x="36.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="33" y="340" width="2" height="15" fill="rgb(243,194,3)"/><text x="36.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.11%)</title><rect x="33" y="356" width="2" height="15" fill="rgb(208,118,13)"/><text x="36.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.11%)</title><rect x="33" y="372" width="2" height="15" fill="rgb(207,141,32)"/><text x="36.00" y="382.50"></text></g><g><title>0x7ff67f8ddfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="32" y="244" width="4" height="15" fill="rgb(208,190,16)"/><text x="35.00" y="254.50"></text></g><g><title>0x7ff67f8ed405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="32" y="260" width="4" height="15" fill="rgb(244,66,50)"/><text x="35.00" y="270.50"></text></g><g><title>0x7ff67f8ec6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="35" y="276" width="1" height="15" fill="rgb(227,228,41)"/><text x="38.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (4 samples, 0.45%)</title><rect x="32" y="212" width="5" height="15" fill="rgb(235,125,6)"/><text x="35.00" y="222.50"></text></g><g><title>0x7ff67f8ded2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.45%)</title><rect x="32" y="228" width="5" height="15" fill="rgb(239,219,15)"/><text x="35.00" y="238.50"></text></g><g><title>0x7ff67f8de05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="244" width="1" height="15" fill="rgb(251,225,14)"/><text x="39.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.11%)</title><rect x="36" y="260" width="1" height="15" fill="rgb(229,25,33)"/><text x="39.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.11%)</title><rect x="36" y="276" width="1" height="15" fill="rgb(250,53,22)"/><text x="39.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.11%)</title><rect x="36" y="292" width="1" height="15" fill="rgb(212,226,3)"/><text x="39.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.11%)</title><rect x="37" y="212" width="1" height="15" fill="rgb(242,143,7)"/><text x="40.00" y="222.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.11%)</title><rect x="38" y="228" width="2" height="15" fill="rgb(244,123,7)"/><text x="41.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="40" y="276" width="1" height="15" fill="rgb(219,142,9)"/><text x="43.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="40" y="292" width="1" height="15" fill="rgb(245,37,2)"/><text x="43.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="40" y="308" width="1" height="15" fill="rgb(240,187,1)"/><text x="43.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="40" y="324" width="1" height="15" fill="rgb(244,18,54)"/><text x="43.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="40" y="340" width="1" height="15" fill="rgb(207,87,11)"/><text x="43.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="40" y="356" width="1" height="15" fill="rgb(248,110,10)"/><text x="43.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.11%)</title><rect x="41" y="292" width="1" height="15" fill="rgb(205,108,0)"/><text x="44.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.11%)</title><rect x="41" y="308" width="1" height="15" fill="rgb(241,12,18)"/><text x="44.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.11%)</title><rect x="42" y="308" width="2" height="15" fill="rgb(215,80,48)"/><text x="45.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.11%)</title><rect x="42" y="324" width="2" height="15" fill="rgb(250,199,1)"/><text x="45.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.11%)</title><rect x="42" y="340" width="2" height="15" fill="rgb(225,58,8)"/><text x="45.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.11%)</title><rect x="42" y="356" width="2" height="15" fill="rgb(254,116,46)"/><text x="45.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.11%)</title><rect x="42" y="372" width="2" height="15" fill="rgb(226,125,9)"/><text x="45.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="44" y="340" width="1" height="15" fill="rgb(227,97,52)"/><text x="47.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.11%)</title><rect x="44" y="356" width="1" height="15" fill="rgb(244,31,43)"/><text x="47.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.11%)</title><rect x="44" y="372" width="1" height="15" fill="rgb(253,54,1)"/><text x="47.00" y="382.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.11%)</title><rect x="44" y="388" width="1" height="15" fill="rgb(212,5,13)"/><text x="47.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="44" y="324" width="2" height="15" fill="rgb(232,46,21)"/><text x="47.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.11%)</title><rect x="45" y="340" width="1" height="15" fill="rgb(252,229,13)"/><text x="48.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2306) (1 samples, 0.11%)</title><rect x="45" y="356" width="1" height="15" fill="rgb(230,212,43)"/><text x="48.00" y="366.50"></text></g><g><title>intp_abs (nditer_constr.c:2264) (1 samples, 0.11%)</title><rect x="45" y="372" width="1" height="15" fill="rgb(226,46,31)"/><text x="48.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.11%)</title><rect x="46" y="340" width="2" height="15" fill="rgb(219,73,14)"/><text x="49.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="48" y="340" width="1" height="15" fill="rgb(239,133,9)"/><text x="51.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="49" y="340" width="1" height="15" fill="rgb(209,76,24)"/><text x="52.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="50" y="356" width="3" height="15" fill="rgb(238,24,17)"/><text x="53.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="50" y="372" width="3" height="15" fill="rgb(238,75,18)"/><text x="53.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.22%)</title><rect x="53" y="356" width="3" height="15" fill="rgb(245,57,20)"/><text x="56.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (14 samples, 1.56%)</title><rect x="38" y="212" width="19" height="15" fill="rgb(249,80,54)"/><text x="41.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 1.45%)</title><rect x="40" y="228" width="17" height="15" fill="rgb(222,217,9)"/><text x="43.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 1.45%)</title><rect x="40" y="244" width="17" height="15" fill="rgb(232,77,13)"/><text x="43.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 1.45%)</title><rect x="40" y="260" width="17" height="15" fill="rgb(237,183,44)"/><text x="43.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.34%)</title><rect x="41" y="276" width="16" height="15" fill="rgb(221,194,33)"/><text x="44.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.23%)</title><rect x="42" y="292" width="15" height="15" fill="rgb(250,3,27)"/><text x="45.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.12%)</title><rect x="44" y="308" width="13" height="15" fill="rgb(252,111,33)"/><text x="47.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.89%)</title><rect x="46" y="324" width="11" height="15" fill="rgb(246,9,52)"/><text x="49.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.56%)</title><rect x="50" y="340" width="7" height="15" fill="rgb(245,16,14)"/><text x="53.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.11%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(223,21,2)"/><text x="59.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.11%)</title><rect x="57" y="228" width="1" height="15" fill="rgb(239,39,45)"/><text x="60.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.11%)</title><rect x="57" y="244" width="1" height="15" fill="rgb(240,160,32)"/><text x="60.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2049) (1 samples, 0.11%)</title><rect x="57" y="260" width="1" height="15" fill="rgb(247,47,33)"/><text x="60.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="57" y="276" width="1" height="15" fill="rgb(210,58,53)"/><text x="60.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="58" y="244" width="2" height="15" fill="rgb(250,183,19)"/><text x="61.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="58" y="260" width="2" height="15" fill="rgb(211,104,36)"/><text x="61.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.11%)</title><rect x="58" y="276" width="2" height="15" fill="rgb(228,206,28)"/><text x="61.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.33%)</title><rect x="57" y="212" width="4" height="15" fill="rgb(226,0,49)"/><text x="60.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.22%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(251,49,8)"/><text x="61.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="60" y="244" width="1" height="15" fill="rgb(231,70,46)"/><text x="63.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="60" y="260" width="1" height="15" fill="rgb(243,92,12)"/><text x="63.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="60" y="276" width="1" height="15" fill="rgb(239,148,17)"/><text x="63.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.11%)</title><rect x="60" y="292" width="1" height="15" fill="rgb(214,46,36)"/><text x="63.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="62" y="276" width="1" height="15" fill="rgb(206,2,32)"/><text x="65.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.11%)</title><rect x="62" y="292" width="1" height="15" fill="rgb(231,226,26)"/><text x="65.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="62" y="308" width="1" height="15" fill="rgb(229,58,2)"/><text x="65.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="63" y="324" width="2" height="15" fill="rgb(210,18,30)"/><text x="66.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="66" y="340" width="1" height="15" fill="rgb(223,43,32)"/><text x="69.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.45%)</title><rect x="63" y="276" width="6" height="15" fill="rgb(243,32,16)"/><text x="66.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.45%)</title><rect x="63" y="292" width="6" height="15" fill="rgb(218,75,15)"/><text x="66.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="63" y="308" width="6" height="15" fill="rgb(225,56,50)"/><text x="66.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.33%)</title><rect x="65" y="324" width="4" height="15" fill="rgb(214,189,48)"/><text x="68.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(246,225,1)"/><text x="70.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="69" y="324" width="2" height="15" fill="rgb(251,106,6)"/><text x="72.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (2 samples, 0.22%)</title><rect x="69" y="340" width="2" height="15" fill="rgb(238,73,3)"/><text x="72.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (48 samples, 5.36%)</title><rect x="15" y="196" width="63" height="15" fill="rgb(244,170,31)"/><text x="18.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (13 samples, 1.45%)</title><rect x="61" y="212" width="17" height="15" fill="rgb(232,33,47)"/><text x="64.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.34%)</title><rect x="62" y="228" width="16" height="15" fill="rgb(217,32,45)"/><text x="65.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.34%)</title><rect x="62" y="244" width="16" height="15" fill="rgb(227,0,54)"/><text x="65.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 1.34%)</title><rect x="62" y="260" width="16" height="15" fill="rgb(211,215,16)"/><text x="65.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 0.78%)</title><rect x="69" y="276" width="9" height="15" fill="rgb(209,100,36)"/><text x="72.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 0.78%)</title><rect x="69" y="292" width="9" height="15" fill="rgb(215,3,27)"/><text x="72.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 0.78%)</title><rect x="69" y="308" width="9" height="15" fill="rgb(216,11,43)"/><text x="72.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 0.56%)</title><rect x="71" y="324" width="7" height="15" fill="rgb(250,97,43)"/><text x="74.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 0.56%)</title><rect x="71" y="340" width="7" height="15" fill="rgb(212,228,31)"/><text x="74.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:373) (1 samples, 0.11%)</title><rect x="79" y="212" width="2" height="15" fill="rgb(229,86,29)"/><text x="82.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="81" y="228" width="1" height="15" fill="rgb(207,216,36)"/><text x="84.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.11%)</title><rect x="81" y="244" width="1" height="15" fill="rgb(228,220,50)"/><text x="84.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.11%)</title><rect x="81" y="260" width="1" height="15" fill="rgb(212,215,53)"/><text x="84.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="81" y="276" width="1" height="15" fill="rgb(221,131,21)"/><text x="84.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.11%)</title><rect x="81" y="292" width="1" height="15" fill="rgb(224,137,2)"/><text x="84.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="85" y="324" width="1" height="15" fill="rgb(241,105,30)"/><text x="88.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="86" y="340" width="1" height="15" fill="rgb(209,136,45)"/><text x="89.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="86" y="324" width="3" height="15" fill="rgb(242,185,47)"/><text x="89.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="87" y="340" width="2" height="15" fill="rgb(217,108,20)"/><text x="90.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="87" y="356" width="2" height="15" fill="rgb(226,208,31)"/><text x="90.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.11%)</title><rect x="89" y="372" width="1" height="15" fill="rgb(241,55,17)"/><text x="92.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.56%)</title><rect x="85" y="308" width="6" height="15" fill="rgb(243,51,36)"/><text x="88.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.22%)</title><rect x="89" y="324" width="2" height="15" fill="rgb(229,73,45)"/><text x="92.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="89" y="340" width="2" height="15" fill="rgb(250,207,42)"/><text x="92.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.22%)</title><rect x="89" y="356" width="2" height="15" fill="rgb(209,173,19)"/><text x="92.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="90" y="372" width="1" height="15" fill="rgb(254,190,22)"/><text x="93.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.11%)</title><rect x="90" y="388" width="1" height="15" fill="rgb(252,96,31)"/><text x="93.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:356) (1 samples, 0.11%)</title><rect x="90" y="404" width="1" height="15" fill="rgb(236,105,21)"/><text x="93.00" y="414.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="92" y="356" width="2" height="15" fill="rgb(215,185,22)"/><text x="95.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.11%)</title><rect x="92" y="372" width="2" height="15" fill="rgb(233,75,5)"/><text x="95.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="91" y="324" width="4" height="15" fill="rgb(252,21,47)"/><text x="94.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.33%)</title><rect x="91" y="340" width="4" height="15" fill="rgb(215,62,35)"/><text x="94.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="94" y="356" width="1" height="15" fill="rgb(228,220,12)"/><text x="97.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="94" y="372" width="1" height="15" fill="rgb(213,178,41)"/><text x="97.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="94" y="388" width="1" height="15" fill="rgb(238,55,41)"/><text x="97.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2040) (1 samples, 0.11%)</title><rect x="95" y="372" width="1" height="15" fill="rgb(240,48,35)"/><text x="98.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.67%)</title><rect x="91" y="308" width="8" height="15" fill="rgb(245,19,30)"/><text x="94.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.33%)</title><rect x="95" y="324" width="4" height="15" fill="rgb(209,139,23)"/><text x="98.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="95" y="340" width="4" height="15" fill="rgb(238,88,10)"/><text x="98.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.33%)</title><rect x="95" y="356" width="4" height="15" fill="rgb(228,116,51)"/><text x="98.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (2 samples, 0.22%)</title><rect x="96" y="372" width="3" height="15" fill="rgb(252,133,32)"/><text x="99.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="100" y="340" width="2" height="15" fill="rgb(213,24,22)"/><text x="103.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="100" y="356" width="2" height="15" fill="rgb(226,228,40)"/><text x="103.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="100" y="372" width="2" height="15" fill="rgb(253,83,40)"/><text x="103.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="100" y="388" width="2" height="15" fill="rgb(243,99,11)"/><text x="103.00" y="398.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.11%)</title><rect x="100" y="404" width="2" height="15" fill="rgb(218,165,17)"/><text x="103.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="102" y="356" width="1" height="15" fill="rgb(217,174,16)"/><text x="105.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.11%)</title><rect x="102" y="372" width="1" height="15" fill="rgb(225,213,10)"/><text x="105.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.11%)</title><rect x="102" y="388" width="1" height="15" fill="rgb(237,123,35)"/><text x="105.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.11%)</title><rect x="103" y="356" width="1" height="15" fill="rgb(213,29,24)"/><text x="106.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.11%)</title><rect x="103" y="372" width="1" height="15" fill="rgb(237,42,36)"/><text x="106.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.11%)</title><rect x="104" y="388" width="2" height="15" fill="rgb(211,3,41)"/><text x="107.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="104" y="404" width="2" height="15" fill="rgb(236,71,50)"/><text x="107.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.11%)</title><rect x="104" y="420" width="2" height="15" fill="rgb(214,106,23)"/><text x="107.00" y="430.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:272) (1 samples, 0.11%)</title><rect x="104" y="436" width="2" height="15" fill="rgb(228,84,19)"/><text x="107.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.22%)</title><rect x="104" y="372" width="3" height="15" fill="rgb(212,65,46)"/><text x="107.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.11%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(248,132,0)"/><text x="109.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.11%)</title><rect x="106" y="404" width="1" height="15" fill="rgb(226,196,37)"/><text x="109.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.67%)</title><rect x="102" y="340" width="8" height="15" fill="rgb(213,118,45)"/><text x="105.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="104" y="356" width="6" height="15" fill="rgb(231,186,22)"/><text x="107.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="107" y="372" width="3" height="15" fill="rgb(206,192,53)"/><text x="110.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="107" y="388" width="3" height="15" fill="rgb(253,46,33)"/><text x="110.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.22%)</title><rect x="107" y="404" width="3" height="15" fill="rgb(219,221,15)"/><text x="110.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="110" y="356" width="1" height="15" fill="rgb(209,182,32)"/><text x="113.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="110" y="372" width="1" height="15" fill="rgb(225,201,15)"/><text x="113.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="110" y="388" width="1" height="15" fill="rgb(218,214,40)"/><text x="113.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (26 samples, 2.90%)</title><rect x="78" y="196" width="34" height="15" fill="rgb(250,105,19)"/><text x="81.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (24 samples, 2.68%)</title><rect x="81" y="212" width="31" height="15" fill="rgb(226,201,15)"/><text x="84.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.57%)</title><rect x="82" y="228" width="30" height="15" fill="rgb(238,147,46)"/><text x="85.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (23 samples, 2.57%)</title><rect x="82" y="244" width="30" height="15" fill="rgb(215,67,6)"/><text x="85.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.46%)</title><rect x="83" y="260" width="29" height="15" fill="rgb(234,22,25)"/><text x="86.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (21 samples, 2.34%)</title><rect x="85" y="276" width="27" height="15" fill="rgb(226,210,37)"/><text x="88.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (21 samples, 2.34%)</title><rect x="85" y="292" width="27" height="15" fill="rgb(227,96,18)"/><text x="88.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (10 samples, 1.12%)</title><rect x="99" y="308" width="13" height="15" fill="rgb(211,121,4)"/><text x="102.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.12%)</title><rect x="99" y="324" width="13" height="15" fill="rgb(205,140,31)"/><text x="102.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.22%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(211,135,20)"/><text x="113.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="111" y="356" width="1" height="15" fill="rgb(216,33,54)"/><text x="114.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="111" y="372" width="1" height="15" fill="rgb(248,89,41)"/><text x="114.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="112" y="276" width="2" height="15" fill="rgb(221,89,26)"/><text x="115.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(236,149,49)"/><text x="115.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.22%)</title><rect x="112" y="244" width="3" height="15" fill="rgb(245,103,42)"/><text x="115.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="112" y="260" width="3" height="15" fill="rgb(224,67,53)"/><text x="115.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="114" y="276" width="1" height="15" fill="rgb(225,176,10)"/><text x="117.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="114" y="292" width="1" height="15" fill="rgb(244,11,42)"/><text x="117.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="114" y="308" width="1" height="15" fill="rgb(248,98,47)"/><text x="117.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="114" y="324" width="1" height="15" fill="rgb(221,134,9)"/><text x="117.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="114" y="340" width="1" height="15" fill="rgb(244,217,0)"/><text x="117.00" y="350.50"></text></g><g><title>0x7ff6a5e9c1b3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="114" y="356" width="1" height="15" fill="rgb(212,179,41)"/><text x="117.00" y="366.50"></text></g><g><title>0x7ff6a606cdd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="115" y="292" width="1" height="15" fill="rgb(243,27,34)"/><text x="118.00" y="302.50"></text></g><g><title>0x7ff6a606cea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="116" y="292" width="1" height="15" fill="rgb(206,54,30)"/><text x="119.00" y="302.50"></text></g><g><title>0x7ff6a606ceca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="117" y="292" width="2" height="15" fill="rgb(237,218,29)"/><text x="120.00" y="302.50"></text></g><g><title>0x7ff6a606ced2 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="119" y="292" width="2" height="15" fill="rgb(215,8,40)"/><text x="122.00" y="302.50"></text></g><g><title>0x7ff6a606cefa (libm-2.29.so) (1 samples, 0.11%)</title><rect x="121" y="292" width="2" height="15" fill="rgb(239,45,5)"/><text x="124.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (7 samples, 0.78%)</title><rect x="115" y="260" width="9" height="15" fill="rgb(240,55,39)"/><text x="118.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (7 samples, 0.78%)</title><rect x="115" y="276" width="9" height="15" fill="rgb(218,180,21)"/><text x="118.00" y="286.50"></text></g><g><title>npy_log (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="123" y="292" width="1" height="15" fill="rgb(229,146,9)"/><text x="126.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (10 samples, 1.12%)</title><rect x="112" y="196" width="13" height="15" fill="rgb(246,4,35)"/><text x="115.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.12%)</title><rect x="112" y="212" width="13" height="15" fill="rgb(248,178,16)"/><text x="115.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="112" y="228" width="13" height="15" fill="rgb(249,118,40)"/><text x="115.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 0.89%)</title><rect x="115" y="244" width="10" height="15" fill="rgb(227,117,54)"/><text x="118.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.11%)</title><rect x="124" y="260" width="1" height="15" fill="rgb(240,208,53)"/><text x="127.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="124" y="276" width="1" height="15" fill="rgb(229,208,23)"/><text x="127.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="125" y="244" width="2" height="15" fill="rgb(212,112,0)"/><text x="128.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="125" y="260" width="2" height="15" fill="rgb(227,8,41)"/><text x="128.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.22%)</title><rect x="125" y="212" width="3" height="15" fill="rgb(230,121,41)"/><text x="128.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="125" y="228" width="3" height="15" fill="rgb(211,135,13)"/><text x="128.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="127" y="244" width="1" height="15" fill="rgb(205,45,35)"/><text x="130.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.11%)</title><rect x="127" y="260" width="1" height="15" fill="rgb(237,30,17)"/><text x="130.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="127" y="276" width="1" height="15" fill="rgb(210,148,25)"/><text x="130.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="127" y="292" width="1" height="15" fill="rgb(248,207,36)"/><text x="130.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.11%)</title><rect x="127" y="308" width="1" height="15" fill="rgb(207,147,8)"/><text x="130.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="128" y="324" width="1" height="15" fill="rgb(254,192,48)"/><text x="131.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (2 samples, 0.22%)</title><rect x="129" y="324" width="3" height="15" fill="rgb(219,14,25)"/><text x="132.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="132" y="340" width="1" height="15" fill="rgb(217,38,45)"/><text x="135.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.56%)</title><rect x="128" y="276" width="7" height="15" fill="rgb(250,81,0)"/><text x="131.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.56%)</title><rect x="128" y="292" width="7" height="15" fill="rgb(238,90,30)"/><text x="131.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.56%)</title><rect x="128" y="308" width="7" height="15" fill="rgb(252,39,29)"/><text x="131.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="132" y="324" width="3" height="15" fill="rgb(208,69,10)"/><text x="135.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.11%)</title><rect x="133" y="340" width="2" height="15" fill="rgb(225,104,33)"/><text x="136.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 0.67%)</title><rect x="128" y="212" width="8" height="15" fill="rgb(213,26,17)"/><text x="131.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.67%)</title><rect x="128" y="228" width="8" height="15" fill="rgb(230,67,50)"/><text x="131.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.67%)</title><rect x="128" y="244" width="8" height="15" fill="rgb(234,97,45)"/><text x="131.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.67%)</title><rect x="128" y="260" width="8" height="15" fill="rgb(253,219,51)"/><text x="131.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="135" y="276" width="1" height="15" fill="rgb(212,113,8)"/><text x="138.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(219,185,7)"/><text x="138.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="135" y="308" width="1" height="15" fill="rgb(212,39,54)"/><text x="138.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="135" y="324" width="1" height="15" fill="rgb(214,152,41)"/><text x="138.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.11%)</title><rect x="135" y="340" width="1" height="15" fill="rgb(241,65,11)"/><text x="138.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4441) (1 samples, 0.11%)</title><rect x="136" y="276" width="1" height="15" fill="rgb(227,83,29)"/><text x="139.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="137" y="308" width="2" height="15" fill="rgb(235,203,35)"/><text x="140.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="137" y="324" width="2" height="15" fill="rgb(242,77,34)"/><text x="140.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="137" y="340" width="2" height="15" fill="rgb(253,51,27)"/><text x="140.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="137" y="356" width="2" height="15" fill="rgb(242,88,23)"/><text x="140.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="137" y="372" width="2" height="15" fill="rgb(247,55,0)"/><text x="140.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="137" y="388" width="2" height="15" fill="rgb(250,210,43)"/><text x="140.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="137" y="404" width="2" height="15" fill="rgb(208,53,44)"/><text x="140.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="137" y="420" width="2" height="15" fill="rgb(229,4,44)"/><text x="140.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="137" y="436" width="2" height="15" fill="rgb(236,85,38)"/><text x="140.00" y="446.50"></text></g><g><title>0x7ff6a5e9bdc9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="137" y="452" width="2" height="15" fill="rgb(238,133,52)"/><text x="140.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="139" y="308" width="1" height="15" fill="rgb(212,52,22)"/><text x="142.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="139" y="324" width="1" height="15" fill="rgb(226,69,0)"/><text x="142.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1541) (1 samples, 0.11%)</title><rect x="139" y="340" width="1" height="15" fill="rgb(249,196,33)"/><text x="142.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.11%)</title><rect x="140" y="324" width="1" height="15" fill="rgb(245,167,50)"/><text x="143.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.11%)</title><rect x="141" y="356" width="2" height="15" fill="rgb(223,7,37)"/><text x="144.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="143" y="356" width="1" height="15" fill="rgb(208,165,21)"/><text x="146.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.33%)</title><rect x="141" y="340" width="4" height="15" fill="rgb(213,88,33)"/><text x="144.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.11%)</title><rect x="144" y="356" width="1" height="15" fill="rgb(210,93,38)"/><text x="147.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (101 samples, 11.27%)</title><rect x="13" y="180" width="133" height="15" fill="rgb(220,111,37)"/><text x="16.00" y="190.50">&lt;genexpr&gt; (sklea..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (16 samples, 1.79%)</title><rect x="125" y="196" width="21" height="15" fill="rgb(227,57,0)"/><text x="128.00" y="206.50"></text></g><g><title>array_sum (methods.c:2215) (8 samples, 0.89%)</title><rect x="136" y="212" width="10" height="15" fill="rgb(240,57,40)"/><text x="139.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 0.89%)</title><rect x="136" y="228" width="10" height="15" fill="rgb(248,186,22)"/><text x="139.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 0.89%)</title><rect x="136" y="244" width="10" height="15" fill="rgb(242,135,30)"/><text x="139.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 0.89%)</title><rect x="136" y="260" width="10" height="15" fill="rgb(244,123,40)"/><text x="139.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 0.78%)</title><rect x="137" y="276" width="9" height="15" fill="rgb(227,150,6)"/><text x="140.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 0.78%)</title><rect x="137" y="292" width="9" height="15" fill="rgb(252,91,47)"/><text x="140.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.56%)</title><rect x="140" y="308" width="6" height="15" fill="rgb(220,86,8)"/><text x="143.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.45%)</title><rect x="141" y="324" width="5" height="15" fill="rgb(245,91,19)"/><text x="144.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.11%)</title><rect x="145" y="340" width="1" height="15" fill="rgb(241,219,34)"/><text x="148.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="146" y="212" width="2" height="15" fill="rgb(227,6,39)"/><text x="149.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.11%)</title><rect x="146" y="228" width="2" height="15" fill="rgb(253,158,13)"/><text x="149.00" y="238.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:241) (1 samples, 0.11%)</title><rect x="148" y="276" width="1" height="15" fill="rgb(209,158,13)"/><text x="151.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_add_DOUBLE (simd.inc.src:698) (1 samples, 0.11%)</title><rect x="148" y="292" width="1" height="15" fill="rgb(217,144,48)"/><text x="151.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="148" y="308" width="1" height="15" fill="rgb(254,192,2)"/><text x="151.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="148" y="212" width="2" height="15" fill="rgb(237,189,30)"/><text x="151.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.22%)</title><rect x="148" y="228" width="2" height="15" fill="rgb(221,53,52)"/><text x="151.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.22%)</title><rect x="148" y="244" width="2" height="15" fill="rgb(244,104,15)"/><text x="151.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="148" y="260" width="2" height="15" fill="rgb(253,122,7)"/><text x="151.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="149" y="276" width="1" height="15" fill="rgb(248,125,36)"/><text x="152.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="149" y="292" width="1" height="15" fill="rgb(227,42,27)"/><text x="152.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.11%)</title><rect x="149" y="308" width="1" height="15" fill="rgb(223,223,35)"/><text x="152.00" y="318.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (105 samples, 11.72%)</title><rect x="13" y="164" width="139" height="15" fill="rgb(236,196,27)"/><text x="16.00" y="174.50">decision_function..</text></g><g><title>array_add (number.c:330) (4 samples, 0.45%)</title><rect x="146" y="180" width="6" height="15" fill="rgb(234,199,52)"/><text x="149.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="146" y="196" width="6" height="15" fill="rgb(232,7,44)"/><text x="149.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.11%)</title><rect x="150" y="212" width="2" height="15" fill="rgb(253,138,44)"/><text x="153.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (106 samples, 11.83%)</title><rect x="13" y="148" width="140" height="15" fill="rgb(226,158,7)"/><text x="16.00" y="158.50">predict_proba (sk..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:703) (1 samples, 0.11%)</title><rect x="152" y="164" width="1" height="15" fill="rgb(216,45,48)"/><text x="155.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="152" y="180" width="1" height="15" fill="rgb(238,153,12)"/><text x="155.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="152" y="196" width="1" height="15" fill="rgb(236,122,52)"/><text x="155.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.11%)</title><rect x="152" y="212" width="1" height="15" fill="rgb(245,11,26)"/><text x="155.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.11%)</title><rect x="152" y="228" width="1" height="15" fill="rgb(235,95,51)"/><text x="155.00" y="238.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.11%)</title><rect x="152" y="244" width="1" height="15" fill="rgb(254,97,25)"/><text x="155.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.11%)</title><rect x="152" y="260" width="1" height="15" fill="rgb(216,66,19)"/><text x="155.00" y="270.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.11%)</title><rect x="153" y="180" width="1" height="15" fill="rgb(211,44,38)"/><text x="156.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="153" y="196" width="1" height="15" fill="rgb(216,69,34)"/><text x="156.00" y="206.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.11%)</title><rect x="154" y="180" width="2" height="15" fill="rgb(243,41,45)"/><text x="157.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="154" y="196" width="2" height="15" fill="rgb(218,116,25)"/><text x="157.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="154" y="212" width="2" height="15" fill="rgb(230,88,20)"/><text x="157.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="154" y="228" width="2" height="15" fill="rgb(248,64,22)"/><text x="157.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="154" y="244" width="2" height="15" fill="rgb(225,203,42)"/><text x="157.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.11%)</title><rect x="154" y="260" width="2" height="15" fill="rgb(230,84,37)"/><text x="157.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="154" y="276" width="2" height="15" fill="rgb(223,97,8)"/><text x="157.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (110 samples, 12.28%)</title><rect x="13" y="100" width="145" height="15" fill="rgb(208,184,31)"/><text x="16.00" y="110.50">profile (bench_Ada..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 12.28%)</title><rect x="13" y="116" width="145" height="15" fill="rgb(208,3,35)"/><text x="16.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (110 samples, 12.28%)</title><rect x="13" y="132" width="145" height="15" fill="rgb(224,29,29)"/><text x="16.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (4 samples, 0.45%)</title><rect x="153" y="148" width="5" height="15" fill="rgb(207,183,1)"/><text x="156.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (4 samples, 0.45%)</title><rect x="153" y="164" width="5" height="15" fill="rgb(243,126,24)"/><text x="156.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (2 samples, 0.22%)</title><rect x="156" y="180" width="2" height="15" fill="rgb(221,57,48)"/><text x="159.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="156" y="196" width="2" height="15" fill="rgb(218,188,19)"/><text x="159.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="156" y="212" width="2" height="15" fill="rgb(215,16,40)"/><text x="159.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.22%)</title><rect x="156" y="228" width="2" height="15" fill="rgb(207,57,2)"/><text x="159.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.22%)</title><rect x="156" y="244" width="2" height="15" fill="rgb(242,37,27)"/><text x="159.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.11%)</title><rect x="157" y="260" width="1" height="15" fill="rgb(224,86,16)"/><text x="160.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.11%)</title><rect x="157" y="276" width="1" height="15" fill="rgb(248,9,38)"/><text x="160.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.11%)</title><rect x="157" y="292" width="1" height="15" fill="rgb(242,216,13)"/><text x="160.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.11%)</title><rect x="157" y="308" width="1" height="15" fill="rgb(220,91,8)"/><text x="160.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.11%)</title><rect x="157" y="324" width="1" height="15" fill="rgb(222,138,9)"/><text x="160.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:696) (1 samples, 0.11%)</title><rect x="160" y="180" width="1" height="15" fill="rgb(252,66,30)"/><text x="163.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="164" y="212" width="1" height="15" fill="rgb(242,139,22)"/><text x="167.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="164" y="228" width="1" height="15" fill="rgb(213,34,42)"/><text x="167.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="164" y="244" width="1" height="15" fill="rgb(213,40,37)"/><text x="167.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="165" y="212" width="1" height="15" fill="rgb(232,101,27)"/><text x="168.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.11%)</title><rect x="165" y="228" width="1" height="15" fill="rgb(221,207,45)"/><text x="168.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.11%)</title><rect x="165" y="244" width="1" height="15" fill="rgb(226,113,29)"/><text x="168.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.11%)</title><rect x="165" y="260" width="1" height="15" fill="rgb(217,49,30)"/><text x="168.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.11%)</title><rect x="165" y="276" width="1" height="15" fill="rgb(220,134,20)"/><text x="168.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="165" y="292" width="1" height="15" fill="rgb(233,165,21)"/><text x="168.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.11%)</title><rect x="166" y="228" width="2" height="15" fill="rgb(226,197,4)"/><text x="169.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.11%)</title><rect x="166" y="244" width="2" height="15" fill="rgb(210,65,8)"/><text x="169.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 0.33%)</title><rect x="166" y="212" width="4" height="15" fill="rgb(234,108,34)"/><text x="169.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.22%)</title><rect x="168" y="228" width="2" height="15" fill="rgb(245,40,25)"/><text x="171.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.22%)</title><rect x="168" y="244" width="2" height="15" fill="rgb(212,173,25)"/><text x="171.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="169" y="260" width="1" height="15" fill="rgb(246,183,37)"/><text x="172.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.11%)</title><rect x="170" y="244" width="1" height="15" fill="rgb(246,163,54)"/><text x="173.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.11%)</title><rect x="173" y="260" width="1" height="15" fill="rgb(237,147,3)"/><text x="176.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.33%)</title><rect x="171" y="244" width="4" height="15" fill="rgb(209,90,43)"/><text x="174.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.11%)</title><rect x="174" y="260" width="1" height="15" fill="rgb(222,108,46)"/><text x="177.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.22%)</title><rect x="175" y="244" width="3" height="15" fill="rgb(218,29,23)"/><text x="178.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.22%)</title><rect x="175" y="260" width="3" height="15" fill="rgb(254,206,48)"/><text x="178.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.22%)</title><rect x="175" y="276" width="3" height="15" fill="rgb(243,31,46)"/><text x="178.00" y="286.50"></text></g><g><title>0x7ff6a5eb0e7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="177" y="292" width="1" height="15" fill="rgb(211,205,16)"/><text x="180.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.11%)</title><rect x="178" y="260" width="1" height="15" fill="rgb(225,115,47)"/><text x="181.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.22%)</title><rect x="178" y="244" width="3" height="15" fill="rgb(251,129,26)"/><text x="181.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.11%)</title><rect x="179" y="260" width="2" height="15" fill="rgb(253,169,4)"/><text x="182.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.11%)</title><rect x="179" y="276" width="2" height="15" fill="rgb(232,32,27)"/><text x="182.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="181" y="244" width="1" height="15" fill="rgb(226,151,1)"/><text x="184.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="181" y="260" width="1" height="15" fill="rgb(239,54,11)"/><text x="184.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.11%)</title><rect x="182" y="260" width="1" height="15" fill="rgb(239,170,22)"/><text x="185.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.22%)</title><rect x="182" y="244" width="3" height="15" fill="rgb(249,103,16)"/><text x="185.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.11%)</title><rect x="183" y="260" width="2" height="15" fill="rgb(215,188,32)"/><text x="186.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="186" y="276" width="1" height="15" fill="rgb(224,139,41)"/><text x="189.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.33%)</title><rect x="185" y="260" width="4" height="15" fill="rgb(234,100,26)"/><text x="188.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.11%)</title><rect x="187" y="276" width="2" height="15" fill="rgb(217,210,19)"/><text x="190.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.45%)</title><rect x="185" y="244" width="5" height="15" fill="rgb(233,113,10)"/><text x="188.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.11%)</title><rect x="189" y="260" width="1" height="15" fill="rgb(254,99,21)"/><text x="192.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.11%)</title><rect x="189" y="276" width="1" height="15" fill="rgb(249,221,21)"/><text x="192.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.11%)</title><rect x="190" y="260" width="1" height="15" fill="rgb(213,28,35)"/><text x="193.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (18 samples, 2.01%)</title><rect x="170" y="212" width="24" height="15" fill="rgb(223,62,52)"/><text x="173.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (18 samples, 2.01%)</title><rect x="170" y="228" width="24" height="15" fill="rgb(206,26,47)"/><text x="173.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.33%)</title><rect x="190" y="244" width="4" height="15" fill="rgb(217,221,2)"/><text x="193.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.22%)</title><rect x="191" y="260" width="3" height="15" fill="rgb(205,133,25)"/><text x="194.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.22%)</title><rect x="191" y="276" width="3" height="15" fill="rgb(240,101,22)"/><text x="194.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.22%)</title><rect x="191" y="292" width="3" height="15" fill="rgb(205,181,39)"/><text x="194.00" y="302.50"></text></g><g><title>0x7ff67f8ddf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="195" y="244" width="2" height="15" fill="rgb(211,205,40)"/><text x="198.00" y="254.50"></text></g><g><title>0x7ff67f8cdd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="195" y="260" width="2" height="15" fill="rgb(221,126,4)"/><text x="198.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(215,181,45)"/><text x="198.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="195" y="292" width="2" height="15" fill="rgb(240,138,35)"/><text x="198.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="195" y="308" width="2" height="15" fill="rgb(223,110,41)"/><text x="198.00" y="318.50"></text></g><g><title>0x7ff67f8ec2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="197" y="276" width="1" height="15" fill="rgb(209,3,45)"/><text x="200.00" y="286.50"></text></g><g><title>0x7ff67f8d0d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="197" y="292" width="1" height="15" fill="rgb(240,14,33)"/><text x="200.00" y="302.50"></text></g><g><title>0x7ff67f8d0666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="197" y="308" width="1" height="15" fill="rgb(250,61,31)"/><text x="200.00" y="318.50"></text></g><g><title>0x7ff67f8c62fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="197" y="324" width="1" height="15" fill="rgb(239,169,2)"/><text x="200.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="197" y="340" width="1" height="15" fill="rgb(206,160,36)"/><text x="200.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.11%)</title><rect x="197" y="356" width="1" height="15" fill="rgb(231,211,30)"/><text x="200.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="198" y="340" width="1" height="15" fill="rgb(205,15,25)"/><text x="201.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.11%)</title><rect x="198" y="356" width="1" height="15" fill="rgb(213,130,41)"/><text x="201.00" y="366.50"></text></g><g><title>0x7ff67f8ec592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="198" y="276" width="2" height="15" fill="rgb(225,64,8)"/><text x="201.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.22%)</title><rect x="198" y="292" width="2" height="15" fill="rgb(253,229,15)"/><text x="201.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.22%)</title><rect x="198" y="308" width="2" height="15" fill="rgb(246,153,45)"/><text x="201.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.22%)</title><rect x="198" y="324" width="2" height="15" fill="rgb(207,16,44)"/><text x="201.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.11%)</title><rect x="199" y="340" width="1" height="15" fill="rgb(234,103,27)"/><text x="202.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.11%)</title><rect x="199" y="356" width="1" height="15" fill="rgb(230,146,51)"/><text x="202.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.11%)</title><rect x="199" y="372" width="1" height="15" fill="rgb(237,215,30)"/><text x="202.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="199" y="388" width="1" height="15" fill="rgb(214,209,1)"/><text x="202.00" y="398.50"></text></g><g><title>0x7ff6a5e9c1a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="199" y="404" width="1" height="15" fill="rgb(212,167,52)"/><text x="202.00" y="414.50"></text></g><g><title>0x7ff67f8ec6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="200" y="276" width="2" height="15" fill="rgb(218,219,47)"/><text x="203.00" y="286.50"></text></g><g><title>0x7ff67f8ec6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="202" y="276" width="1" height="15" fill="rgb(237,65,36)"/><text x="205.00" y="286.50"></text></g><g><title>0x7ff67f8ec92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="203" y="276" width="1" height="15" fill="rgb(242,155,40)"/><text x="206.00" y="286.50"></text></g><g><title>0x7ff67f8c19af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="203" y="292" width="1" height="15" fill="rgb(226,198,29)"/><text x="206.00" y="302.50"></text></g><g><title>0x7ff67f8ed405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.78%)</title><rect x="197" y="260" width="9" height="15" fill="rgb(251,199,7)"/><text x="200.00" y="270.50"></text></g><g><title>0x7ff67f8ecc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="204" y="276" width="2" height="15" fill="rgb(209,45,2)"/><text x="207.00" y="286.50"></text></g><g><title>0x7ff67f8c4529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="204" y="292" width="2" height="15" fill="rgb(241,14,52)"/><text x="207.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="204" y="308" width="2" height="15" fill="rgb(229,62,22)"/><text x="207.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="204" y="324" width="2" height="15" fill="rgb(210,14,24)"/><text x="207.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.11%)</title><rect x="204" y="340" width="2" height="15" fill="rgb(241,200,35)"/><text x="207.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.11%)</title><rect x="204" y="356" width="2" height="15" fill="rgb(222,53,7)"/><text x="207.00" y="366.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:216) (1 samples, 0.11%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(234,132,1)"/><text x="207.00" y="382.50"></text></g><g><title>0x7ff67f8ddfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.89%)</title><rect x="197" y="244" width="10" height="15" fill="rgb(214,63,12)"/><text x="200.00" y="254.50"></text></g><g><title>0x7ff67f8ed540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="206" y="260" width="1" height="15" fill="rgb(214,190,6)"/><text x="209.00" y="270.50"></text></g><g><title>0x7ff67f8c22f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="206" y="276" width="1" height="15" fill="rgb(254,226,30)"/><text x="209.00" y="286.50"></text></g><g><title>0x7ff67f8c1530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="206" y="292" width="1" height="15" fill="rgb(232,128,28)"/><text x="209.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.11%)</title><rect x="206" y="308" width="1" height="15" fill="rgb(210,119,47)"/><text x="209.00" y="318.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.11%)</title><rect x="207" y="260" width="1" height="15" fill="rgb(218,50,44)"/><text x="210.00" y="270.50"></text></g><g><title>0x7ff67f8de05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="207" y="244" width="4" height="15" fill="rgb(245,228,7)"/><text x="210.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.22%)</title><rect x="208" y="260" width="3" height="15" fill="rgb(226,52,9)"/><text x="211.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.22%)</title><rect x="208" y="276" width="3" height="15" fill="rgb(205,20,5)"/><text x="211.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.22%)</title><rect x="208" y="292" width="3" height="15" fill="rgb(231,219,28)"/><text x="211.00" y="302.50"></text></g><g><title>0x7ff67f8de13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="211" y="244" width="1" height="15" fill="rgb(247,172,53)"/><text x="214.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (15 samples, 1.67%)</title><rect x="194" y="212" width="20" height="15" fill="rgb(236,88,50)"/><text x="197.00" y="222.50"></text></g><g><title>0x7ff67f8ded2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.56%)</title><rect x="195" y="228" width="19" height="15" fill="rgb(234,184,5)"/><text x="198.00" y="238.50"></text></g><g><title>0x7ff67f8de328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="212" y="244" width="2" height="15" fill="rgb(212,219,38)"/><text x="215.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.11%)</title><rect x="212" y="260" width="2" height="15" fill="rgb(234,7,14)"/><text x="215.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.11%)</title><rect x="212" y="276" width="2" height="15" fill="rgb(250,57,51)"/><text x="215.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.11%)</title><rect x="212" y="292" width="2" height="15" fill="rgb(245,6,22)"/><text x="215.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:511) (1 samples, 0.11%)</title><rect x="212" y="308" width="2" height="15" fill="rgb(212,39,41)"/><text x="215.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.22%)</title><rect x="214" y="212" width="2" height="15" fill="rgb(217,98,52)"/><text x="217.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.11%)</title><rect x="215" y="228" width="1" height="15" fill="rgb(211,122,54)"/><text x="218.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.11%)</title><rect x="215" y="244" width="1" height="15" fill="rgb(245,108,47)"/><text x="218.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.11%)</title><rect x="218" y="324" width="1" height="15" fill="rgb(214,61,34)"/><text x="221.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.11%)</title><rect x="218" y="340" width="1" height="15" fill="rgb(214,3,32)"/><text x="221.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.11%)</title><rect x="218" y="356" width="1" height="15" fill="rgb(239,228,7)"/><text x="221.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="218" y="372" width="1" height="15" fill="rgb(220,184,9)"/><text x="221.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="218" y="388" width="1" height="15" fill="rgb(227,2,50)"/><text x="221.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="218" y="404" width="1" height="15" fill="rgb(234,48,13)"/><text x="221.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="218" y="420" width="1" height="15" fill="rgb(228,26,53)"/><text x="221.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="218" y="436" width="1" height="15" fill="rgb(217,57,17)"/><text x="221.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="218" y="452" width="1" height="15" fill="rgb(236,219,12)"/><text x="221.00" y="462.50"></text></g><g><title>0x7ff6a5e9bdd6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="218" y="468" width="1" height="15" fill="rgb(209,117,8)"/><text x="221.00" y="478.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="219" y="356" width="1" height="15" fill="rgb(232,227,36)"/><text x="222.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="219" y="372" width="1" height="15" fill="rgb(217,197,27)"/><text x="222.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.11%)</title><rect x="219" y="388" width="1" height="15" fill="rgb(213,85,23)"/><text x="222.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.11%)</title><rect x="219" y="404" width="1" height="15" fill="rgb(205,99,14)"/><text x="222.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1491) (1 samples, 0.11%)</title><rect x="219" y="420" width="1" height="15" fill="rgb(240,28,54)"/><text x="222.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="219" y="324" width="3" height="15" fill="rgb(210,219,6)"/><text x="222.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="219" y="340" width="3" height="15" fill="rgb(225,220,4)"/><text x="222.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="220" y="356" width="2" height="15" fill="rgb(221,223,0)"/><text x="223.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.11%)</title><rect x="220" y="372" width="2" height="15" fill="rgb(235,138,28)"/><text x="223.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.11%)</title><rect x="220" y="388" width="2" height="15" fill="rgb(249,104,8)"/><text x="223.00" y="398.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.11%)</title><rect x="220" y="404" width="2" height="15" fill="rgb(227,203,35)"/><text x="223.00" y="414.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.11%)</title><rect x="220" y="420" width="2" height="15" fill="rgb(225,127,27)"/><text x="223.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.11%)</title><rect x="222" y="324" width="1" height="15" fill="rgb(229,88,20)"/><text x="225.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:283) (1 samples, 0.11%)</title><rect x="222" y="340" width="1" height="15" fill="rgb(208,229,36)"/><text x="225.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (2 samples, 0.22%)</title><rect x="223" y="340" width="2" height="15" fill="rgb(249,163,53)"/><text x="226.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.11%)</title><rect x="225" y="340" width="2" height="15" fill="rgb(219,53,26)"/><text x="228.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (3 samples, 0.33%)</title><rect x="227" y="340" width="4" height="15" fill="rgb(241,156,51)"/><text x="230.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="231" y="356" width="1" height="15" fill="rgb(224,43,11)"/><text x="234.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="233" y="372" width="3" height="15" fill="rgb(207,5,21)"/><text x="236.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.45%)</title><rect x="232" y="356" width="5" height="15" fill="rgb(239,215,42)"/><text x="235.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.11%)</title><rect x="236" y="372" width="1" height="15" fill="rgb(220,64,23)"/><text x="239.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="237" y="356" width="2" height="15" fill="rgb(220,115,3)"/><text x="240.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (18 samples, 2.01%)</title><rect x="216" y="212" width="24" height="15" fill="rgb(252,22,21)"/><text x="219.00" y="222.50">p..</text></g><g><title>array_sum (methods.c:2215) (18 samples, 2.01%)</title><rect x="216" y="228" width="24" height="15" fill="rgb(250,28,1)"/><text x="219.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 2.01%)</title><rect x="216" y="244" width="24" height="15" fill="rgb(210,137,17)"/><text x="219.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 2.01%)</title><rect x="216" y="260" width="24" height="15" fill="rgb(236,36,41)"/><text x="219.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 1.90%)</title><rect x="218" y="276" width="22" height="15" fill="rgb(216,205,50)"/><text x="221.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (17 samples, 1.90%)</title><rect x="218" y="292" width="22" height="15" fill="rgb(227,157,27)"/><text x="221.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (17 samples, 1.90%)</title><rect x="218" y="308" width="22" height="15" fill="rgb(223,76,29)"/><text x="221.00" y="318.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.45%)</title><rect x="223" y="324" width="17" height="15" fill="rgb(224,2,39)"/><text x="226.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.78%)</title><rect x="231" y="340" width="9" height="15" fill="rgb(207,18,47)"/><text x="234.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.11%)</title><rect x="239" y="356" width="1" height="15" fill="rgb(235,164,21)"/><text x="242.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.11%)</title><rect x="240" y="228" width="1" height="15" fill="rgb(225,127,21)"/><text x="243.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.11%)</title><rect x="240" y="244" width="1" height="15" fill="rgb(230,214,38)"/><text x="243.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2080) (1 samples, 0.11%)</title><rect x="240" y="260" width="1" height="15" fill="rgb(207,86,51)"/><text x="243.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="243" y="260" width="1" height="15" fill="rgb(247,229,43)"/><text x="246.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="243" y="276" width="1" height="15" fill="rgb(213,203,28)"/><text x="246.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.11%)</title><rect x="243" y="292" width="1" height="15" fill="rgb(205,91,26)"/><text x="246.00" y="302.50"></text></g><g><title>0x7ff6a50bd0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="243" y="308" width="1" height="15" fill="rgb(247,114,21)"/><text x="246.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="244" y="260" width="1" height="15" fill="rgb(235,222,51)"/><text x="247.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="244" y="276" width="1" height="15" fill="rgb(227,207,46)"/><text x="247.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="243" y="244" width="4" height="15" fill="rgb(231,211,39)"/><text x="246.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="245" y="260" width="2" height="15" fill="rgb(253,129,32)"/><text x="248.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="245" y="276" width="2" height="15" fill="rgb(238,175,25)"/><text x="248.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.11%)</title><rect x="245" y="292" width="2" height="15" fill="rgb(237,101,16)"/><text x="248.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="245" y="308" width="2" height="15" fill="rgb(246,63,43)"/><text x="248.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="247" y="292" width="1" height="15" fill="rgb(235,187,26)"/><text x="250.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.22%)</title><rect x="247" y="244" width="2" height="15" fill="rgb(235,95,33)"/><text x="250.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.22%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(254,82,34)"/><text x="250.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.22%)</title><rect x="247" y="276" width="2" height="15" fill="rgb(239,111,17)"/><text x="250.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="248" y="292" width="1" height="15" fill="rgb(224,111,1)"/><text x="251.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 0.89%)</title><rect x="240" y="212" width="11" height="15" fill="rgb(236,205,38)"/><text x="243.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (7 samples, 0.78%)</title><rect x="241" y="228" width="10" height="15" fill="rgb(233,90,10)"/><text x="244.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.11%)</title><rect x="249" y="244" width="2" height="15" fill="rgb(239,97,5)"/><text x="252.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="251" y="276" width="1" height="15" fill="rgb(245,160,48)"/><text x="254.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:283) (1 samples, 0.11%)</title><rect x="251" y="292" width="1" height="15" fill="rgb(250,97,1)"/><text x="254.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="252" y="324" width="1" height="15" fill="rgb(246,1,22)"/><text x="255.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.11%)</title><rect x="253" y="324" width="1" height="15" fill="rgb(232,134,8)"/><text x="256.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="252" y="276" width="4" height="15" fill="rgb(245,115,29)"/><text x="255.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="252" y="292" width="4" height="15" fill="rgb(247,34,24)"/><text x="255.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="252" y="308" width="4" height="15" fill="rgb(248,17,34)"/><text x="255.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.11%)</title><rect x="254" y="324" width="2" height="15" fill="rgb(240,205,17)"/><text x="257.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(222,117,50)"/><text x="259.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="256" y="308" width="2" height="15" fill="rgb(223,90,29)"/><text x="259.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.22%)</title><rect x="256" y="324" width="2" height="15" fill="rgb(231,183,47)"/><text x="259.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.22%)</title><rect x="256" y="340" width="2" height="15" fill="rgb(252,87,23)"/><text x="259.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (75 samples, 8.37%)</title><rect x="161" y="196" width="99" height="15" fill="rgb(236,33,21)"/><text x="164.00" y="206.50">_samme_prob..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (7 samples, 0.78%)</title><rect x="251" y="212" width="9" height="15" fill="rgb(222,193,45)"/><text x="254.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="251" y="228" width="9" height="15" fill="rgb(210,26,3)"/><text x="254.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.78%)</title><rect x="251" y="244" width="9" height="15" fill="rgb(236,149,24)"/><text x="254.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.78%)</title><rect x="251" y="260" width="9" height="15" fill="rgb(253,121,22)"/><text x="254.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.33%)</title><rect x="256" y="276" width="4" height="15" fill="rgb(247,114,47)"/><text x="259.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:306) (1 samples, 0.11%)</title><rect x="258" y="292" width="2" height="15" fill="rgb(218,109,43)"/><text x="261.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.11%)</title><rect x="261" y="212" width="1" height="15" fill="rgb(230,2,49)"/><text x="264.00" y="222.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.22%)</title><rect x="266" y="324" width="3" height="15" fill="rgb(219,8,32)"/><text x="269.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="268" y="340" width="1" height="15" fill="rgb(237,94,23)"/><text x="271.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.22%)</title><rect x="269" y="324" width="3" height="15" fill="rgb(215,125,40)"/><text x="272.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (1 samples, 0.11%)</title><rect x="270" y="340" width="2" height="15" fill="rgb(232,185,32)"/><text x="273.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 0.67%)</title><rect x="265" y="308" width="8" height="15" fill="rgb(231,93,10)"/><text x="268.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.11%)</title><rect x="272" y="324" width="1" height="15" fill="rgb(246,155,48)"/><text x="275.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="272" y="340" width="1" height="15" fill="rgb(233,71,37)"/><text x="275.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="272" y="356" width="1" height="15" fill="rgb(230,23,1)"/><text x="275.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1967) (1 samples, 0.11%)</title><rect x="272" y="372" width="1" height="15" fill="rgb(234,149,15)"/><text x="275.00" y="382.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.11%)</title><rect x="272" y="388" width="1" height="15" fill="rgb(205,90,13)"/><text x="275.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="273" y="324" width="1" height="15" fill="rgb(247,16,6)"/><text x="276.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="274" y="356" width="2" height="15" fill="rgb(214,92,22)"/><text x="277.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.11%)</title><rect x="274" y="372" width="2" height="15" fill="rgb(252,36,24)"/><text x="277.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.11%)</title><rect x="274" y="388" width="2" height="15" fill="rgb(241,138,50)"/><text x="277.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="274" y="404" width="2" height="15" fill="rgb(251,67,37)"/><text x="277.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.11%)</title><rect x="274" y="420" width="2" height="15" fill="rgb(242,167,8)"/><text x="277.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="276" y="356" width="1" height="15" fill="rgb(251,153,9)"/><text x="279.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.11%)</title><rect x="276" y="372" width="1" height="15" fill="rgb(207,45,39)"/><text x="279.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.11%)</title><rect x="276" y="388" width="1" height="15" fill="rgb(253,106,16)"/><text x="279.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:890) (1 samples, 0.11%)</title><rect x="276" y="404" width="1" height="15" fill="rgb(235,29,26)"/><text x="279.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (4 samples, 0.45%)</title><rect x="273" y="308" width="5" height="15" fill="rgb(238,24,7)"/><text x="276.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.33%)</title><rect x="274" y="324" width="4" height="15" fill="rgb(212,122,5)"/><text x="277.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="274" y="340" width="4" height="15" fill="rgb(240,166,26)"/><text x="277.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.11%)</title><rect x="277" y="356" width="1" height="15" fill="rgb(224,182,52)"/><text x="280.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="277" y="372" width="1" height="15" fill="rgb(208,31,43)"/><text x="280.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="277" y="388" width="1" height="15" fill="rgb(215,176,16)"/><text x="280.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="277" y="404" width="1" height="15" fill="rgb(232,44,46)"/><text x="280.00" y="414.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.11%)</title><rect x="281" y="404" width="1" height="15" fill="rgb(208,176,1)"/><text x="284.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.11%)</title><rect x="281" y="420" width="1" height="15" fill="rgb(252,46,2)"/><text x="284.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="281" y="436" width="1" height="15" fill="rgb(234,185,38)"/><text x="284.00" y="446.50"></text></g><g><title>0x7ff6a5e527a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="281" y="452" width="1" height="15" fill="rgb(218,16,32)"/><text x="284.00" y="462.50"></text></g><g><title>0x7ff6a5e52a86 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="281" y="468" width="1" height="15" fill="rgb(206,33,10)"/><text x="284.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.22%)</title><rect x="281" y="372" width="2" height="15" fill="rgb(215,35,40)"/><text x="284.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.22%)</title><rect x="281" y="388" width="2" height="15" fill="rgb(208,25,34)"/><text x="284.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.11%)</title><rect x="282" y="404" width="1" height="15" fill="rgb(228,150,7)"/><text x="285.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.11%)</title><rect x="282" y="420" width="1" height="15" fill="rgb(234,3,9)"/><text x="285.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.11%)</title><rect x="282" y="436" width="1" height="15" fill="rgb(240,222,0)"/><text x="285.00" y="446.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.11%)</title><rect x="282" y="452" width="1" height="15" fill="rgb(212,107,0)"/><text x="285.00" y="462.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.11%)</title><rect x="282" y="468" width="1" height="15" fill="rgb(239,156,15)"/><text x="285.00" y="478.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.11%)</title><rect x="282" y="484" width="1" height="15" fill="rgb(209,126,45)"/><text x="285.00" y="494.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (2 samples, 0.22%)</title><rect x="283" y="404" width="3" height="15" fill="rgb(251,17,24)"/><text x="286.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (2 samples, 0.22%)</title><rect x="286" y="404" width="3" height="15" fill="rgb(206,46,16)"/><text x="289.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.78%)</title><rect x="281" y="340" width="9" height="15" fill="rgb(222,36,36)"/><text x="284.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.78%)</title><rect x="281" y="356" width="9" height="15" fill="rgb(250,30,41)"/><text x="284.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (5 samples, 0.56%)</title><rect x="283" y="372" width="7" height="15" fill="rgb(224,132,19)"/><text x="286.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (5 samples, 0.56%)</title><rect x="283" y="388" width="7" height="15" fill="rgb(251,44,51)"/><text x="286.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.11%)</title><rect x="289" y="404" width="1" height="15" fill="rgb(216,132,34)"/><text x="292.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (24 samples, 2.68%)</title><rect x="260" y="196" width="31" height="15" fill="rgb(238,182,31)"/><text x="263.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (22 samples, 2.46%)</title><rect x="262" y="212" width="29" height="15" fill="rgb(249,169,28)"/><text x="265.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 2.46%)</title><rect x="262" y="228" width="29" height="15" fill="rgb(250,83,28)"/><text x="265.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (22 samples, 2.46%)</title><rect x="262" y="244" width="29" height="15" fill="rgb(211,87,6)"/><text x="265.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (20 samples, 2.23%)</title><rect x="265" y="260" width="26" height="15" fill="rgb(223,16,7)"/><text x="268.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (20 samples, 2.23%)</title><rect x="265" y="276" width="26" height="15" fill="rgb(245,136,44)"/><text x="268.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 2.23%)</title><rect x="265" y="292" width="26" height="15" fill="rgb(209,176,0)"/><text x="268.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (10 samples, 1.12%)</title><rect x="278" y="308" width="13" height="15" fill="rgb(215,72,9)"/><text x="281.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 1.00%)</title><rect x="279" y="324" width="12" height="15" fill="rgb(240,1,38)"/><text x="282.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="290" y="340" width="1" height="15" fill="rgb(244,88,46)"/><text x="293.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="290" y="356" width="1" height="15" fill="rgb(207,74,0)"/><text x="293.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.11%)</title><rect x="290" y="372" width="1" height="15" fill="rgb(233,202,12)"/><text x="293.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.11%)</title><rect x="293" y="228" width="1" height="15" fill="rgb(254,0,14)"/><text x="296.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.11%)</title><rect x="294" y="228" width="1" height="15" fill="rgb(209,36,13)"/><text x="297.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.11%)</title><rect x="294" y="244" width="1" height="15" fill="rgb(228,126,1)"/><text x="297.00" y="254.50"></text></g><g><title>0x7ff6a50be0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="295" y="292" width="3" height="15" fill="rgb(248,26,24)"/><text x="298.00" y="302.50"></text></g><g><title>0x7ff6a606cdd0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="298" y="292" width="1" height="15" fill="rgb(243,222,14)"/><text x="301.00" y="302.50"></text></g><g><title>0x7ff6a606cdee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="299" y="292" width="2" height="15" fill="rgb(232,37,48)"/><text x="302.00" y="302.50"></text></g><g><title>0x7ff6a606ce40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="301" y="292" width="1" height="15" fill="rgb(206,103,3)"/><text x="304.00" y="302.50"></text></g><g><title>0x7ff6a606ce4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="302" y="292" width="1" height="15" fill="rgb(228,147,9)"/><text x="305.00" y="302.50"></text></g><g><title>0x7ff6a606ce6e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="303" y="292" width="2" height="15" fill="rgb(227,210,45)"/><text x="306.00" y="302.50"></text></g><g><title>0x7ff6a606ce7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="305" y="292" width="1" height="15" fill="rgb(243,175,38)"/><text x="308.00" y="302.50"></text></g><g><title>0x7ff6a606ceb6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="306" y="292" width="2" height="15" fill="rgb(227,16,37)"/><text x="309.00" y="302.50"></text></g><g><title>0x7ff6a606cec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="308" y="292" width="2" height="15" fill="rgb(217,169,25)"/><text x="311.00" y="302.50"></text></g><g><title>0x7ff6a606ced2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="310" y="292" width="1" height="15" fill="rgb(217,99,16)"/><text x="313.00" y="302.50"></text></g><g><title>0x7ff6a606ceda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="311" y="292" width="1" height="15" fill="rgb(247,152,6)"/><text x="314.00" y="302.50"></text></g><g><title>0x7ff6a606ceee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="312" y="292" width="3" height="15" fill="rgb(206,149,51)"/><text x="315.00" y="302.50"></text></g><g><title>0x7ff6a606cef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="315" y="292" width="1" height="15" fill="rgb(222,46,23)"/><text x="318.00" y="302.50"></text></g><g><title>0x7ff6a606cf2b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="316" y="292" width="2" height="15" fill="rgb(244,200,22)"/><text x="319.00" y="302.50"></text></g><g><title>0x7ff6a606cf6b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="318" y="292" width="1" height="15" fill="rgb(249,8,24)"/><text x="321.00" y="302.50"></text></g><g><title>0x7ff6a606cff3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="319" y="292" width="1" height="15" fill="rgb(230,141,18)"/><text x="322.00" y="302.50"></text></g><g><title>0x7ff6a606d017 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="320" y="292" width="3" height="15" fill="rgb(232,94,43)"/><text x="323.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (3 samples, 0.33%)</title><rect x="323" y="292" width="4" height="15" fill="rgb(235,118,13)"/><text x="326.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (28 samples, 3.12%)</title><rect x="291" y="196" width="37" height="15" fill="rgb(206,19,47)"/><text x="294.00" y="206.50">_sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (27 samples, 3.01%)</title><rect x="293" y="212" width="35" height="15" fill="rgb(251,26,13)"/><text x="296.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 2.79%)</title><rect x="295" y="228" width="33" height="15" fill="rgb(245,160,20)"/><text x="298.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (25 samples, 2.79%)</title><rect x="295" y="244" width="33" height="15" fill="rgb(251,57,43)"/><text x="298.00" y="254.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (25 samples, 2.79%)</title><rect x="295" y="260" width="33" height="15" fill="rgb(236,47,45)"/><text x="298.00" y="270.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (25 samples, 2.79%)</title><rect x="295" y="276" width="33" height="15" fill="rgb(223,177,25)"/><text x="298.00" y="286.50">Py..</text></g><g><title>npy_log (npy_math_internal.h.src:469) (1 samples, 0.11%)</title><rect x="327" y="292" width="1" height="15" fill="rgb(235,200,54)"/><text x="330.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.11%)</title><rect x="328" y="196" width="2" height="15" fill="rgb(222,163,10)"/><text x="331.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="332" y="244" width="1" height="15" fill="rgb(238,121,18)"/><text x="335.00" y="254.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c:1030) (1 samples, 0.11%)</title><rect x="332" y="260" width="1" height="15" fill="rgb(254,125,31)"/><text x="335.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1691) (1 samples, 0.11%)</title><rect x="333" y="260" width="2" height="15" fill="rgb(242,120,44)"/><text x="336.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="335" y="292" width="1" height="15" fill="rgb(223,25,7)"/><text x="338.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="335" y="308" width="1" height="15" fill="rgb(215,223,36)"/><text x="338.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="335" y="324" width="1" height="15" fill="rgb(212,137,49)"/><text x="338.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="335" y="340" width="1" height="15" fill="rgb(237,125,46)"/><text x="338.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="335" y="356" width="1" height="15" fill="rgb(254,45,27)"/><text x="338.00" y="366.50"></text></g><g><title>0x7ff6a5e9c1e0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="335" y="372" width="1" height="15" fill="rgb(252,68,12)"/><text x="338.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.22%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(235,9,49)"/><text x="338.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="335" y="276" width="2" height="15" fill="rgb(222,20,23)"/><text x="338.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="336" y="292" width="1" height="15" fill="rgb(242,10,44)"/><text x="339.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="336" y="308" width="1" height="15" fill="rgb(246,171,18)"/><text x="339.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.11%)</title><rect x="336" y="324" width="1" height="15" fill="rgb(210,110,42)"/><text x="339.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="332" y="228" width="7" height="15" fill="rgb(213,112,20)"/><text x="335.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="333" y="244" width="6" height="15" fill="rgb(254,117,13)"/><text x="336.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="337" y="260" width="2" height="15" fill="rgb(244,96,39)"/><text x="340.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="337" y="276" width="2" height="15" fill="rgb(251,64,45)"/><text x="340.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:696) (1 samples, 0.11%)</title><rect x="337" y="292" width="2" height="15" fill="rgb(207,154,42)"/><text x="340.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 0.78%)</title><rect x="331" y="212" width="9" height="15" fill="rgb(213,166,27)"/><text x="334.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="339" y="228" width="1" height="15" fill="rgb(216,76,32)"/><text x="342.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="339" y="244" width="1" height="15" fill="rgb(240,60,15)"/><text x="342.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="339" y="260" width="1" height="15" fill="rgb(232,203,25)"/><text x="342.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.11%)</title><rect x="339" y="276" width="1" height="15" fill="rgb(251,214,12)"/><text x="342.00" y="286.50"></text></g><g><title>array_subtract (number.c:334) (1 samples, 0.11%)</title><rect x="340" y="212" width="1" height="15" fill="rgb(218,13,14)"/><text x="343.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="341" y="260" width="2" height="15" fill="rgb(252,163,2)"/><text x="344.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.11%)</title><rect x="341" y="276" width="2" height="15" fill="rgb(234,47,30)"/><text x="344.00" y="286.50"></text></g><g><title>0x7ff6a5e9bcc7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="344" y="436" width="1" height="15" fill="rgb(216,161,28)"/><text x="347.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (3 samples, 0.33%)</title><rect x="343" y="356" width="4" height="15" fill="rgb(239,224,31)"/><text x="346.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (3 samples, 0.33%)</title><rect x="343" y="372" width="4" height="15" fill="rgb(242,217,25)"/><text x="346.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (3 samples, 0.33%)</title><rect x="343" y="388" width="4" height="15" fill="rgb(208,229,15)"/><text x="346.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (3 samples, 0.33%)</title><rect x="343" y="404" width="4" height="15" fill="rgb(250,216,50)"/><text x="346.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.33%)</title><rect x="343" y="420" width="4" height="15" fill="rgb(227,214,51)"/><text x="346.00" y="430.50"></text></g><g><title>0x7ff6a5e9c2b6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="345" y="436" width="2" height="15" fill="rgb(253,26,47)"/><text x="348.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.45%)</title><rect x="343" y="276" width="5" height="15" fill="rgb(219,157,32)"/><text x="346.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 0.45%)</title><rect x="343" y="292" width="5" height="15" fill="rgb(216,51,33)"/><text x="346.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (4 samples, 0.45%)</title><rect x="343" y="308" width="5" height="15" fill="rgb(236,150,39)"/><text x="346.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (4 samples, 0.45%)</title><rect x="343" y="324" width="5" height="15" fill="rgb(218,178,46)"/><text x="346.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (4 samples, 0.45%)</title><rect x="343" y="340" width="5" height="15" fill="rgb(239,41,19)"/><text x="346.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.11%)</title><rect x="347" y="356" width="1" height="15" fill="rgb(233,121,49)"/><text x="350.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.11%)</title><rect x="348" y="324" width="1" height="15" fill="rgb(253,1,34)"/><text x="351.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.33%)</title><rect x="348" y="276" width="4" height="15" fill="rgb(214,82,32)"/><text x="351.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.33%)</title><rect x="348" y="292" width="4" height="15" fill="rgb(214,171,53)"/><text x="351.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.33%)</title><rect x="348" y="308" width="4" height="15" fill="rgb(239,3,35)"/><text x="351.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.22%)</title><rect x="349" y="324" width="3" height="15" fill="rgb(212,229,42)"/><text x="352.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.22%)</title><rect x="349" y="340" width="3" height="15" fill="rgb(209,118,6)"/><text x="352.00" y="350.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="352" y="324" width="1" height="15" fill="rgb(218,71,42)"/><text x="355.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.11%)</title><rect x="352" y="340" width="1" height="15" fill="rgb(210,100,20)"/><text x="355.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.12%)</title><rect x="341" y="244" width="14" height="15" fill="rgb(254,99,45)"/><text x="344.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 1.00%)</title><rect x="343" y="260" width="12" height="15" fill="rgb(236,139,36)"/><text x="346.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="352" y="276" width="3" height="15" fill="rgb(242,5,13)"/><text x="355.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="352" y="292" width="3" height="15" fill="rgb(234,43,43)"/><text x="355.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="352" y="308" width="3" height="15" fill="rgb(236,224,6)"/><text x="355.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="353" y="324" width="2" height="15" fill="rgb(248,14,29)"/><text x="356.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.11%)</title><rect x="353" y="340" width="2" height="15" fill="rgb(250,69,25)"/><text x="356.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (11 samples, 1.23%)</title><rect x="341" y="212" width="15" height="15" fill="rgb(206,127,30)"/><text x="344.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.23%)</title><rect x="341" y="228" width="15" height="15" fill="rgb(252,85,37)"/><text x="344.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.11%)</title><rect x="355" y="244" width="1" height="15" fill="rgb(240,15,49)"/><text x="358.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.11%)</title><rect x="357" y="276" width="1" height="15" fill="rgb(219,122,13)"/><text x="360.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1366) (1 samples, 0.11%)</title><rect x="357" y="292" width="1" height="15" fill="rgb(221,160,54)"/><text x="360.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.11%)</title><rect x="358" y="356" width="2" height="15" fill="rgb(208,25,17)"/><text x="361.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.11%)</title><rect x="358" y="372" width="2" height="15" fill="rgb(247,21,34)"/><text x="361.00" y="382.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.11%)</title><rect x="358" y="388" width="2" height="15" fill="rgb(226,221,52)"/><text x="361.00" y="398.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.11%)</title><rect x="358" y="404" width="2" height="15" fill="rgb(233,109,23)"/><text x="361.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="358" y="308" width="3" height="15" fill="rgb(214,71,6)"/><text x="361.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="358" y="324" width="3" height="15" fill="rgb(233,180,51)"/><text x="361.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.22%)</title><rect x="358" y="340" width="3" height="15" fill="rgb(254,65,17)"/><text x="361.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.11%)</title><rect x="360" y="356" width="1" height="15" fill="rgb(243,29,21)"/><text x="363.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.11%)</title><rect x="360" y="372" width="1" height="15" fill="rgb(246,141,6)"/><text x="363.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="361" y="324" width="1" height="15" fill="rgb(213,38,40)"/><text x="364.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.11%)</title><rect x="361" y="340" width="1" height="15" fill="rgb(220,48,38)"/><text x="364.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.22%)</title><rect x="361" y="308" width="3" height="15" fill="rgb(209,154,36)"/><text x="364.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.11%)</title><rect x="362" y="324" width="2" height="15" fill="rgb(240,61,38)"/><text x="365.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="362" y="340" width="2" height="15" fill="rgb(238,40,1)"/><text x="365.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="362" y="356" width="2" height="15" fill="rgb(235,34,18)"/><text x="365.00" y="366.50"></text></g><g><title>0x7ff6a5e9c510 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="362" y="372" width="2" height="15" fill="rgb(251,14,43)"/><text x="365.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.11%)</title><rect x="364" y="324" width="1" height="15" fill="rgb(215,135,0)"/><text x="367.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.11%)</title><rect x="365" y="324" width="1" height="15" fill="rgb(250,61,23)"/><text x="368.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="366" y="324" width="2" height="15" fill="rgb(227,207,15)"/><text x="369.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.11%)</title><rect x="369" y="340" width="1" height="15" fill="rgb(229,142,52)"/><text x="372.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.22%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(238,94,18)"/><text x="373.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.11%)</title><rect x="373" y="356" width="1" height="15" fill="rgb(245,41,34)"/><text x="376.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.56%)</title><rect x="370" y="340" width="7" height="15" fill="rgb(224,144,11)"/><text x="373.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (2 samples, 0.22%)</title><rect x="374" y="356" width="3" height="15" fill="rgb(212,34,7)"/><text x="377.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.11%)</title><rect x="377" y="340" width="1" height="15" fill="rgb(230,173,3)"/><text x="380.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.22%)</title><rect x="378" y="340" width="3" height="15" fill="rgb(240,107,47)"/><text x="381.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="381" y="340" width="1" height="15" fill="rgb(205,197,13)"/><text x="384.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.22%)</title><rect x="382" y="340" width="3" height="15" fill="rgb(228,203,38)"/><text x="385.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="385" y="340" width="1" height="15" fill="rgb(220,216,4)"/><text x="388.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (18 samples, 2.01%)</title><rect x="364" y="308" width="23" height="15" fill="rgb(244,229,4)"/><text x="367.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 1.67%)</title><rect x="368" y="324" width="19" height="15" fill="rgb(236,184,8)"/><text x="371.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.11%)</title><rect x="386" y="340" width="1" height="15" fill="rgb(221,83,23)"/><text x="389.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (45 samples, 5.02%)</title><rect x="330" y="196" width="59" height="15" fill="rgb(211,202,33)"/><text x="333.00" y="206.50">_samme..</text></g><g><title>array_sum (methods.c:2215) (25 samples, 2.79%)</title><rect x="356" y="212" width="33" height="15" fill="rgb(228,42,49)"/><text x="359.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.79%)</title><rect x="356" y="228" width="33" height="15" fill="rgb(224,183,37)"/><text x="359.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.68%)</title><rect x="357" y="244" width="32" height="15" fill="rgb(242,131,49)"/><text x="360.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 2.68%)</title><rect x="357" y="260" width="32" height="15" fill="rgb(219,139,4)"/><text x="360.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 2.57%)</title><rect x="358" y="276" width="31" height="15" fill="rgb(212,228,46)"/><text x="361.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (23 samples, 2.57%)</title><rect x="358" y="292" width="31" height="15" fill="rgb(239,48,37)"/><text x="361.00" y="302.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="387" y="308" width="2" height="15" fill="rgb(244,41,12)"/><text x="390.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="387" y="324" width="2" height="15" fill="rgb(249,22,47)"/><text x="390.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="340" width="2" height="15" fill="rgb(211,118,27)"/><text x="390.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (174 samples, 19.42%)</title><rect x="161" y="180" width="229" height="15" fill="rgb(234,37,21)"/><text x="164.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_w..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.11%)</title><rect x="389" y="196" width="1" height="15" fill="rgb(219,153,22)"/><text x="392.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.11%)</title><rect x="389" y="212" width="1" height="15" fill="rgb(237,106,38)"/><text x="392.00" y="222.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.11%)</title><rect x="389" y="228" width="1" height="15" fill="rgb(220,1,25)"/><text x="392.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.11%)</title><rect x="389" y="244" width="1" height="15" fill="rgb(232,213,12)"/><text x="392.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:38) (288 samples, 32.14%)</title><rect x="12" y="52" width="379" height="15" fill="rgb(219,44,9)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_100..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:37) (288 samples, 32.14%)</title><rect x="12" y="68" width="379" height="15" fill="rgb(234,47,45)"/><text x="15.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (287 samples, 32.03%)</title><rect x="13" y="84" width="378" height="15" fill="rgb(224,62,17)"/><text x="16.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (177 samples, 19.75%)</title><rect x="158" y="100" width="233" height="15" fill="rgb(217,148,28)"/><text x="161.00" y="110.50">profile (bench_AdaBoostClassif..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (176 samples, 19.64%)</title><rect x="160" y="116" width="231" height="15" fill="rgb(235,144,9)"/><text x="163.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (176 samples, 19.64%)</title><rect x="160" y="132" width="231" height="15" fill="rgb(230,57,28)"/><text x="163.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (176 samples, 19.64%)</title><rect x="160" y="148" width="231" height="15" fill="rgb(218,134,48)"/><text x="163.00" y="158.50">predict_proba (sklearn/ensembl..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (176 samples, 19.64%)</title><rect x="160" y="164" width="231" height="15" fill="rgb(222,113,18)"/><text x="163.00" y="174.50">decision_function (sklearn/ens..</text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="390" y="180" width="1" height="15" fill="rgb(252,226,18)"/><text x="393.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="390" y="196" width="1" height="15" fill="rgb(218,207,13)"/><text x="393.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="390" y="212" width="1" height="15" fill="rgb(221,213,16)"/><text x="393.00" y="222.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.11%)</title><rect x="391" y="244" width="2" height="15" fill="rgb(230,150,22)"/><text x="394.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(252,122,39)"/><text x="394.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="391" y="276" width="2" height="15" fill="rgb(234,165,46)"/><text x="394.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="391" y="292" width="2" height="15" fill="rgb(234,101,23)"/><text x="394.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="391" y="308" width="2" height="15" fill="rgb(209,161,4)"/><text x="394.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="391" y="324" width="2" height="15" fill="rgb(227,80,1)"/><text x="394.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="391" y="340" width="2" height="15" fill="rgb(234,135,21)"/><text x="394.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="391" y="356" width="2" height="15" fill="rgb(241,22,38)"/><text x="394.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.11%)</title><rect x="391" y="372" width="2" height="15" fill="rgb(233,101,19)"/><text x="394.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="391" y="388" width="2" height="15" fill="rgb(244,140,22)"/><text x="394.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="391" y="404" width="2" height="15" fill="rgb(221,73,20)"/><text x="394.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="391" y="420" width="2" height="15" fill="rgb(242,133,54)"/><text x="394.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="391" y="436" width="2" height="15" fill="rgb(242,130,18)"/><text x="394.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="391" y="452" width="2" height="15" fill="rgb(226,4,14)"/><text x="394.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="391" y="468" width="2" height="15" fill="rgb(227,84,22)"/><text x="394.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="391" y="484" width="2" height="15" fill="rgb(237,193,21)"/><text x="394.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:357) (1 samples, 0.11%)</title><rect x="391" y="500" width="2" height="15" fill="rgb(213,10,29)"/><text x="394.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.11%)</title><rect x="391" y="516" width="2" height="15" fill="rgb(243,172,48)"/><text x="394.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:1) (2 samples, 0.22%)</title><rect x="391" y="148" width="3" height="15" fill="rgb(225,211,30)"/><text x="394.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="391" y="164" width="3" height="15" fill="rgb(208,7,25)"/><text x="394.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="391" y="180" width="3" height="15" fill="rgb(228,102,43)"/><text x="394.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="391" y="196" width="3" height="15" fill="rgb(246,111,44)"/><text x="394.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="391" y="212" width="3" height="15" fill="rgb(218,166,40)"/><text x="394.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="391" y="228" width="3" height="15" fill="rgb(244,4,16)"/><text x="394.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.11%)</title><rect x="393" y="244" width="1" height="15" fill="rgb(205,67,4)"/><text x="396.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="393" y="260" width="1" height="15" fill="rgb(206,228,53)"/><text x="396.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="393" y="276" width="1" height="15" fill="rgb(210,33,51)"/><text x="396.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="393" y="292" width="1" height="15" fill="rgb(234,105,41)"/><text x="396.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="393" y="308" width="1" height="15" fill="rgb(216,22,27)"/><text x="396.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="393" y="324" width="1" height="15" fill="rgb(233,202,5)"/><text x="396.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="393" y="340" width="1" height="15" fill="rgb(237,216,23)"/><text x="396.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="393" y="356" width="1" height="15" fill="rgb(217,197,44)"/><text x="396.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.11%)</title><rect x="393" y="372" width="1" height="15" fill="rgb(234,177,50)"/><text x="396.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="393" y="388" width="1" height="15" fill="rgb(240,97,34)"/><text x="396.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="393" y="404" width="1" height="15" fill="rgb(233,140,33)"/><text x="396.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="393" y="420" width="1" height="15" fill="rgb(229,23,35)"/><text x="396.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="393" y="436" width="1" height="15" fill="rgb(214,5,27)"/><text x="396.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="393" y="452" width="1" height="15" fill="rgb(213,32,20)"/><text x="396.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:3) (1 samples, 0.11%)</title><rect x="393" y="468" width="1" height="15" fill="rgb(239,37,33)"/><text x="396.00" y="478.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="394" y="852" width="1" height="15" fill="rgb(245,222,43)"/><text x="397.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="394" y="868" width="1" height="15" fill="rgb(248,192,16)"/><text x="397.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="394" y="884" width="1" height="15" fill="rgb(230,26,10)"/><text x="397.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="394" y="900" width="1" height="15" fill="rgb(251,117,6)"/><text x="397.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.11%)</title><rect x="394" y="916" width="1" height="15" fill="rgb(230,179,17)"/><text x="397.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.11%)</title><rect x="394" y="932" width="1" height="15" fill="rgb(207,110,48)"/><text x="397.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.11%)</title><rect x="394" y="948" width="1" height="15" fill="rgb(253,177,11)"/><text x="397.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.11%)</title><rect x="394" y="964" width="1" height="15" fill="rgb(212,53,14)"/><text x="397.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="394" y="980" width="1" height="15" fill="rgb(234,101,25)"/><text x="397.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="394" y="996" width="1" height="15" fill="rgb(246,226,12)"/><text x="397.00" y="1006.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.11%)</title><rect x="395" y="948" width="2" height="15" fill="rgb(254,49,43)"/><text x="398.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.11%)</title><rect x="395" y="964" width="2" height="15" fill="rgb(241,62,48)"/><text x="398.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.11%)</title><rect x="395" y="980" width="2" height="15" fill="rgb(206,141,32)"/><text x="398.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.22%)</title><rect x="395" y="884" width="3" height="15" fill="rgb(226,112,24)"/><text x="398.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.22%)</title><rect x="395" y="900" width="3" height="15" fill="rgb(254,165,41)"/><text x="398.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.22%)</title><rect x="395" y="916" width="3" height="15" fill="rgb(237,47,6)"/><text x="398.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.22%)</title><rect x="395" y="932" width="3" height="15" fill="rgb(224,130,43)"/><text x="398.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.11%)</title><rect x="397" y="948" width="1" height="15" fill="rgb(231,153,34)"/><text x="400.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.11%)</title><rect x="397" y="964" width="1" height="15" fill="rgb(247,181,24)"/><text x="400.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.11%)</title><rect x="397" y="980" width="1" height="15" fill="rgb(244,195,23)"/><text x="400.00" y="990.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="397" y="996" width="1" height="15" fill="rgb(249,82,26)"/><text x="400.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:2) (4 samples, 0.45%)</title><rect x="394" y="148" width="5" height="15" fill="rgb(236,146,9)"/><text x="397.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="164" width="5" height="15" fill="rgb(216,192,45)"/><text x="397.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="394" y="180" width="5" height="15" fill="rgb(227,21,20)"/><text x="397.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="196" width="5" height="15" fill="rgb(210,91,52)"/><text x="397.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="212" width="5" height="15" fill="rgb(215,130,15)"/><text x="397.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="228" width="5" height="15" fill="rgb(241,157,18)"/><text x="397.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="244" width="5" height="15" fill="rgb(220,128,51)"/><text x="397.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="260" width="5" height="15" fill="rgb(254,59,24)"/><text x="397.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="276" width="5" height="15" fill="rgb(215,166,22)"/><text x="397.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.45%)</title><rect x="394" y="292" width="5" height="15" fill="rgb(227,18,9)"/><text x="397.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="308" width="5" height="15" fill="rgb(214,210,32)"/><text x="397.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="324" width="5" height="15" fill="rgb(235,92,20)"/><text x="397.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="340" width="5" height="15" fill="rgb(252,227,5)"/><text x="397.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="356" width="5" height="15" fill="rgb(237,72,40)"/><text x="397.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="372" width="5" height="15" fill="rgb(237,208,43)"/><text x="397.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.45%)</title><rect x="394" y="388" width="5" height="15" fill="rgb(246,96,7)"/><text x="397.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="404" width="5" height="15" fill="rgb(238,220,49)"/><text x="397.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="420" width="5" height="15" fill="rgb(235,69,29)"/><text x="397.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="436" width="5" height="15" fill="rgb(243,22,50)"/><text x="397.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="452" width="5" height="15" fill="rgb(222,229,31)"/><text x="397.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="468" width="5" height="15" fill="rgb(229,117,22)"/><text x="397.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.45%)</title><rect x="394" y="484" width="5" height="15" fill="rgb(249,162,31)"/><text x="397.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="500" width="5" height="15" fill="rgb(212,161,48)"/><text x="397.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="516" width="5" height="15" fill="rgb(244,192,14)"/><text x="397.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="532" width="5" height="15" fill="rgb(227,97,1)"/><text x="397.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="548" width="5" height="15" fill="rgb(230,57,38)"/><text x="397.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="564" width="5" height="15" fill="rgb(254,150,10)"/><text x="397.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.45%)</title><rect x="394" y="580" width="5" height="15" fill="rgb(235,71,32)"/><text x="397.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="596" width="5" height="15" fill="rgb(231,120,41)"/><text x="397.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.45%)</title><rect x="394" y="612" width="5" height="15" fill="rgb(225,87,12)"/><text x="397.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="628" width="5" height="15" fill="rgb(236,208,22)"/><text x="397.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="644" width="5" height="15" fill="rgb(248,213,25)"/><text x="397.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="660" width="5" height="15" fill="rgb(235,69,19)"/><text x="397.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="676" width="5" height="15" fill="rgb(220,41,1)"/><text x="397.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="692" width="5" height="15" fill="rgb(214,182,29)"/><text x="397.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="708" width="5" height="15" fill="rgb(223,115,14)"/><text x="397.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.45%)</title><rect x="394" y="724" width="5" height="15" fill="rgb(206,57,26)"/><text x="397.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="394" y="740" width="5" height="15" fill="rgb(228,132,23)"/><text x="397.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="394" y="756" width="5" height="15" fill="rgb(206,75,46)"/><text x="397.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="394" y="772" width="5" height="15" fill="rgb(207,38,6)"/><text x="397.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="394" y="788" width="5" height="15" fill="rgb(244,136,32)"/><text x="397.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="394" y="804" width="5" height="15" fill="rgb(231,50,4)"/><text x="397.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.45%)</title><rect x="394" y="820" width="5" height="15" fill="rgb(238,112,16)"/><text x="397.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.45%)</title><rect x="394" y="836" width="5" height="15" fill="rgb(215,117,16)"/><text x="397.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.33%)</title><rect x="395" y="852" width="4" height="15" fill="rgb(218,175,46)"/><text x="398.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.33%)</title><rect x="395" y="868" width="4" height="15" fill="rgb(205,13,24)"/><text x="398.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.11%)</title><rect x="398" y="884" width="1" height="15" fill="rgb(224,122,15)"/><text x="401.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.11%)</title><rect x="398" y="900" width="1" height="15" fill="rgb(223,56,36)"/><text x="401.00" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.11%)</title><rect x="399" y="900" width="2" height="15" fill="rgb(252,180,36)"/><text x="402.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="916" width="2" height="15" fill="rgb(230,113,31)"/><text x="402.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="399" y="932" width="2" height="15" fill="rgb(241,75,22)"/><text x="402.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="399" y="948" width="2" height="15" fill="rgb(248,196,35)"/><text x="402.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="399" y="964" width="2" height="15" fill="rgb(219,133,17)"/><text x="402.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="980" width="2" height="15" fill="rgb(228,200,33)"/><text x="402.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.11%)</title><rect x="399" y="996" width="2" height="15" fill="rgb(210,217,32)"/><text x="402.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="399" y="1012" width="2" height="15" fill="rgb(244,30,7)"/><text x="402.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="1028" width="2" height="15" fill="rgb(212,41,47)"/><text x="402.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="1044" width="2" height="15" fill="rgb(240,66,48)"/><text x="402.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="399" y="1060" width="2" height="15" fill="rgb(254,34,25)"/><text x="402.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="399" y="1076" width="2" height="15" fill="rgb(233,8,21)"/><text x="402.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="399" y="1092" width="2" height="15" fill="rgb(210,93,17)"/><text x="402.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="1108" width="2" height="15" fill="rgb(252,113,43)"/><text x="402.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:94) (1 samples, 0.11%)</title><rect x="399" y="1124" width="2" height="15" fill="rgb(232,95,53)"/><text x="402.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="1140" width="2" height="15" fill="rgb(248,149,47)"/><text x="402.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="399" y="1156" width="2" height="15" fill="rgb(243,27,37)"/><text x="402.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="399" y="1172" width="2" height="15" fill="rgb(229,158,5)"/><text x="402.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="399" y="1188" width="2" height="15" fill="rgb(230,221,25)"/><text x="402.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="1204" width="2" height="15" fill="rgb(213,6,20)"/><text x="402.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/__init__.py:4) (1 samples, 0.11%)</title><rect x="399" y="1220" width="2" height="15" fill="rgb(247,49,15)"/><text x="402.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="1236" width="2" height="15" fill="rgb(249,89,4)"/><text x="402.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="399" y="1252" width="2" height="15" fill="rgb(213,159,53)"/><text x="402.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="399" y="1268" width="2" height="15" fill="rgb(211,61,17)"/><text x="402.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="399" y="1284" width="2" height="15" fill="rgb(207,76,44)"/><text x="402.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="1300" width="2" height="15" fill="rgb(245,106,3)"/><text x="402.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/ivp.py:4) (1 samples, 0.11%)</title><rect x="399" y="1316" width="2" height="15" fill="rgb(251,11,27)"/><text x="402.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="1332" width="2" height="15" fill="rgb(236,163,49)"/><text x="402.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="399" y="1348" width="2" height="15" fill="rgb(251,155,6)"/><text x="402.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="399" y="1364" width="2" height="15" fill="rgb(219,8,9)"/><text x="402.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="399" y="1380" width="2" height="15" fill="rgb(230,37,5)"/><text x="402.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="399" y="1396" width="2" height="15" fill="rgb(231,118,54)"/><text x="402.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/bdf.py:10) (1 samples, 0.11%)</title><rect x="399" y="1412" width="2" height="15" fill="rgb(217,152,19)"/><text x="402.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="399" y="1428" width="2" height="15" fill="rgb(217,182,41)"/><text x="402.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.11%)</title><rect x="401" y="900" width="1" height="15" fill="rgb(221,53,30)"/><text x="404.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="401" y="916" width="1" height="15" fill="rgb(254,199,21)"/><text x="404.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="401" y="932" width="1" height="15" fill="rgb(244,195,12)"/><text x="404.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="401" y="948" width="1" height="15" fill="rgb(226,51,19)"/><text x="404.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="401" y="964" width="1" height="15" fill="rgb(253,79,9)"/><text x="404.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="401" y="980" width="1" height="15" fill="rgb(248,25,23)"/><text x="404.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="401" y="996" width="1" height="15" fill="rgb(228,73,40)"/><text x="404.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="401" y="1012" width="1" height="15" fill="rgb(220,171,20)"/><text x="404.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5390) (1 samples, 0.11%)</title><rect x="401" y="1028" width="1" height="15" fill="rgb(236,3,43)"/><text x="404.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1584) (1 samples, 0.11%)</title><rect x="401" y="1044" width="1" height="15" fill="rgb(243,29,38)"/><text x="404.00" y="1054.50"></text></g><g><title>__init__ (numpy/lib/function_base.py:2045) (1 samples, 0.11%)</title><rect x="401" y="1060" width="1" height="15" fill="rgb(244,58,13)"/><text x="404.00" y="1070.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.33%)</title><rect x="399" y="580" width="4" height="15" fill="rgb(251,103,47)"/><text x="402.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="399" y="596" width="4" height="15" fill="rgb(244,22,7)"/><text x="402.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="399" y="612" width="4" height="15" fill="rgb(206,6,12)"/><text x="402.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="399" y="628" width="4" height="15" fill="rgb(242,223,2)"/><text x="402.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="399" y="644" width="4" height="15" fill="rgb(231,99,1)"/><text x="402.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="399" y="660" width="4" height="15" fill="rgb(222,120,29)"/><text x="402.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.33%)</title><rect x="399" y="676" width="4" height="15" fill="rgb(218,110,3)"/><text x="402.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="399" y="692" width="4" height="15" fill="rgb(231,40,24)"/><text x="402.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="399" y="708" width="4" height="15" fill="rgb(220,220,27)"/><text x="402.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="399" y="724" width="4" height="15" fill="rgb(217,97,28)"/><text x="402.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="399" y="740" width="4" height="15" fill="rgb(220,85,17)"/><text x="402.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="399" y="756" width="4" height="15" fill="rgb(222,18,53)"/><text x="402.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.33%)</title><rect x="399" y="772" width="4" height="15" fill="rgb(245,214,13)"/><text x="402.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.33%)</title><rect x="399" y="788" width="4" height="15" fill="rgb(243,131,26)"/><text x="402.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="399" y="804" width="4" height="15" fill="rgb(222,33,35)"/><text x="402.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="399" y="820" width="4" height="15" fill="rgb(242,3,35)"/><text x="402.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="399" y="836" width="4" height="15" fill="rgb(245,90,15)"/><text x="402.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="399" y="852" width="4" height="15" fill="rgb(252,0,33)"/><text x="402.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="399" y="868" width="4" height="15" fill="rgb(239,73,7)"/><text x="402.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="399" y="884" width="4" height="15" fill="rgb(233,205,33)"/><text x="402.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.11%)</title><rect x="402" y="900" width="1" height="15" fill="rgb(252,219,24)"/><text x="405.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="402" y="916" width="1" height="15" fill="rgb(207,158,52)"/><text x="405.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="402" y="932" width="1" height="15" fill="rgb(243,225,2)"/><text x="405.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="402" y="948" width="1" height="15" fill="rgb(228,60,40)"/><text x="405.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="402" y="964" width="1" height="15" fill="rgb(207,215,43)"/><text x="405.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="402" y="980" width="1" height="15" fill="rgb(215,3,35)"/><text x="405.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="402" y="996" width="1" height="15" fill="rgb(253,55,6)"/><text x="405.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="402" y="1012" width="1" height="15" fill="rgb(252,147,13)"/><text x="405.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:220) (1 samples, 0.11%)</title><rect x="402" y="1028" width="1" height="15" fill="rgb(218,229,13)"/><text x="405.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.11%)</title><rect x="402" y="1044" width="1" height="15" fill="rgb(223,165,21)"/><text x="405.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.11%)</title><rect x="402" y="1060" width="1" height="15" fill="rgb(221,26,47)"/><text x="405.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.11%)</title><rect x="402" y="1076" width="1" height="15" fill="rgb(205,135,32)"/><text x="405.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.11%)</title><rect x="402" y="1092" width="1" height="15" fill="rgb(219,197,11)"/><text x="405.00" y="1102.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.11%)</title><rect x="402" y="1108" width="1" height="15" fill="rgb(244,162,20)"/><text x="405.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="403" y="612" width="2" height="15" fill="rgb(224,2,36)"/><text x="406.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="403" y="628" width="2" height="15" fill="rgb(227,64,17)"/><text x="406.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="403" y="644" width="2" height="15" fill="rgb(230,169,27)"/><text x="406.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="403" y="660" width="2" height="15" fill="rgb(232,123,25)"/><text x="406.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="403" y="676" width="2" height="15" fill="rgb(252,39,33)"/><text x="406.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="403" y="692" width="2" height="15" fill="rgb(224,166,28)"/><text x="406.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.11%)</title><rect x="403" y="708" width="2" height="15" fill="rgb(251,152,8)"/><text x="406.00" y="718.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.11%)</title><rect x="403" y="724" width="2" height="15" fill="rgb(240,201,16)"/><text x="406.00" y="734.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:4) (5 samples, 0.56%)</title><rect x="399" y="148" width="7" height="15" fill="rgb(212,145,15)"/><text x="402.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="399" y="164" width="7" height="15" fill="rgb(254,100,24)"/><text x="402.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.56%)</title><rect x="399" y="180" width="7" height="15" fill="rgb(216,12,42)"/><text x="402.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="399" y="196" width="7" height="15" fill="rgb(210,146,37)"/><text x="402.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="399" y="212" width="7" height="15" fill="rgb(225,6,0)"/><text x="402.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="399" y="228" width="7" height="15" fill="rgb(205,144,24)"/><text x="402.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="399" y="244" width="7" height="15" fill="rgb(217,19,49)"/><text x="402.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="399" y="260" width="7" height="15" fill="rgb(212,41,36)"/><text x="402.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="399" y="276" width="7" height="15" fill="rgb(227,212,45)"/><text x="402.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 0.56%)</title><rect x="399" y="292" width="7" height="15" fill="rgb(215,105,16)"/><text x="402.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="399" y="308" width="7" height="15" fill="rgb(223,125,30)"/><text x="402.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="399" y="324" width="7" height="15" fill="rgb(214,188,53)"/><text x="402.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="399" y="340" width="7" height="15" fill="rgb(245,77,9)"/><text x="402.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="399" y="356" width="7" height="15" fill="rgb(234,229,41)"/><text x="402.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="399" y="372" width="7" height="15" fill="rgb(242,96,24)"/><text x="402.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 0.56%)</title><rect x="399" y="388" width="7" height="15" fill="rgb(213,102,39)"/><text x="402.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="399" y="404" width="7" height="15" fill="rgb(213,169,36)"/><text x="402.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="399" y="420" width="7" height="15" fill="rgb(249,204,28)"/><text x="402.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="399" y="436" width="7" height="15" fill="rgb(250,104,0)"/><text x="402.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="399" y="452" width="7" height="15" fill="rgb(226,134,1)"/><text x="402.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="399" y="468" width="7" height="15" fill="rgb(236,190,32)"/><text x="402.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (5 samples, 0.56%)</title><rect x="399" y="484" width="7" height="15" fill="rgb(228,13,40)"/><text x="402.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.56%)</title><rect x="399" y="500" width="7" height="15" fill="rgb(233,218,37)"/><text x="402.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.56%)</title><rect x="399" y="516" width="7" height="15" fill="rgb(212,190,1)"/><text x="402.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.56%)</title><rect x="399" y="532" width="7" height="15" fill="rgb(215,20,29)"/><text x="402.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.56%)</title><rect x="399" y="548" width="7" height="15" fill="rgb(218,86,50)"/><text x="402.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.56%)</title><rect x="399" y="564" width="7" height="15" fill="rgb(238,9,4)"/><text x="402.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:47) (2 samples, 0.22%)</title><rect x="403" y="580" width="3" height="15" fill="rgb(206,56,12)"/><text x="406.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="403" y="596" width="3" height="15" fill="rgb(207,186,54)"/><text x="406.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="405" y="612" width="1" height="15" fill="rgb(230,225,33)"/><text x="408.00" y="622.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="405" y="628" width="1" height="15" fill="rgb(244,203,3)"/><text x="408.00" y="638.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="405" y="644" width="1" height="15" fill="rgb(231,17,11)"/><text x="408.00" y="654.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="405" y="660" width="1" height="15" fill="rgb(254,108,12)"/><text x="408.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.11%)</title><rect x="405" y="676" width="1" height="15" fill="rgb(247,152,7)"/><text x="408.00" y="686.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.11%)</title><rect x="405" y="692" width="1" height="15" fill="rgb(246,11,44)"/><text x="408.00" y="702.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="405" y="708" width="1" height="15" fill="rgb(251,127,0)"/><text x="408.00" y="718.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="405" y="724" width="1" height="15" fill="rgb(235,102,32)"/><text x="408.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.11%)</title><rect x="406" y="244" width="1" height="15" fill="rgb(248,117,36)"/><text x="409.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="260" width="1" height="15" fill="rgb(242,35,9)"/><text x="409.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="276" width="1" height="15" fill="rgb(214,205,49)"/><text x="409.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="292" width="1" height="15" fill="rgb(250,184,24)"/><text x="409.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="308" width="1" height="15" fill="rgb(213,160,34)"/><text x="409.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="324" width="1" height="15" fill="rgb(223,125,22)"/><text x="409.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.11%)</title><rect x="406" y="340" width="1" height="15" fill="rgb(243,222,21)"/><text x="409.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="356" width="1" height="15" fill="rgb(208,212,53)"/><text x="409.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="406" y="372" width="1" height="15" fill="rgb(237,205,1)"/><text x="409.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="388" width="1" height="15" fill="rgb(210,92,33)"/><text x="409.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="404" width="1" height="15" fill="rgb(235,196,43)"/><text x="409.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="420" width="1" height="15" fill="rgb(206,47,46)"/><text x="409.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="436" width="1" height="15" fill="rgb(225,12,36)"/><text x="409.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="452" width="1" height="15" fill="rgb(225,228,38)"/><text x="409.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="468" width="1" height="15" fill="rgb(207,201,22)"/><text x="409.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.11%)</title><rect x="406" y="484" width="1" height="15" fill="rgb(226,209,41)"/><text x="409.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="500" width="1" height="15" fill="rgb(253,101,8)"/><text x="409.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="516" width="1" height="15" fill="rgb(206,183,46)"/><text x="409.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="532" width="1" height="15" fill="rgb(215,110,23)"/><text x="409.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="548" width="1" height="15" fill="rgb(254,2,38)"/><text x="409.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="564" width="1" height="15" fill="rgb(214,110,33)"/><text x="409.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.11%)</title><rect x="406" y="580" width="1" height="15" fill="rgb(244,117,10)"/><text x="409.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="596" width="1" height="15" fill="rgb(208,115,54)"/><text x="409.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="612" width="1" height="15" fill="rgb(235,221,7)"/><text x="409.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="628" width="1" height="15" fill="rgb(234,214,17)"/><text x="409.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="644" width="1" height="15" fill="rgb(206,87,9)"/><text x="409.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="660" width="1" height="15" fill="rgb(247,1,50)"/><text x="409.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.11%)</title><rect x="406" y="676" width="1" height="15" fill="rgb(244,5,43)"/><text x="409.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="406" y="692" width="1" height="15" fill="rgb(242,112,22)"/><text x="409.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="406" y="708" width="1" height="15" fill="rgb(248,209,15)"/><text x="409.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="406" y="724" width="1" height="15" fill="rgb(211,74,53)"/><text x="409.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="406" y="740" width="1" height="15" fill="rgb(245,122,30)"/><text x="409.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="406" y="756" width="1" height="15" fill="rgb(205,117,18)"/><text x="409.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.11%)</title><rect x="406" y="772" width="1" height="15" fill="rgb(219,154,49)"/><text x="409.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.11%)</title><rect x="406" y="788" width="1" height="15" fill="rgb(217,226,47)"/><text x="409.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.11%)</title><rect x="406" y="804" width="1" height="15" fill="rgb(251,81,25)"/><text x="409.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.11%)</title><rect x="406" y="820" width="1" height="15" fill="rgb(247,69,31)"/><text x="409.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.11%)</title><rect x="406" y="836" width="1" height="15" fill="rgb(227,214,1)"/><text x="409.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="406" y="852" width="1" height="15" fill="rgb(230,157,32)"/><text x="409.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.11%)</title><rect x="406" y="868" width="1" height="15" fill="rgb(250,64,48)"/><text x="409.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.11%)</title><rect x="406" y="884" width="1" height="15" fill="rgb(229,75,38)"/><text x="409.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.11%)</title><rect x="406" y="900" width="1" height="15" fill="rgb(211,24,48)"/><text x="409.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.11%)</title><rect x="406" y="916" width="1" height="15" fill="rgb(243,227,32)"/><text x="409.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.11%)</title><rect x="406" y="932" width="1" height="15" fill="rgb(249,112,25)"/><text x="409.00" y="942.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.11%)</title><rect x="407" y="1108" width="2" height="15" fill="rgb(238,188,28)"/><text x="410.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="407" y="1124" width="2" height="15" fill="rgb(223,127,43)"/><text x="410.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="407" y="1140" width="2" height="15" fill="rgb(231,9,6)"/><text x="410.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="407" y="1156" width="2" height="15" fill="rgb(233,80,25)"/><text x="410.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="407" y="1172" width="2" height="15" fill="rgb(211,160,28)"/><text x="410.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="407" y="1188" width="2" height="15" fill="rgb(248,55,4)"/><text x="410.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.11%)</title><rect x="407" y="1204" width="2" height="15" fill="rgb(220,216,52)"/><text x="410.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="407" y="1220" width="2" height="15" fill="rgb(244,39,44)"/><text x="410.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="407" y="1236" width="2" height="15" fill="rgb(205,158,6)"/><text x="410.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="407" y="1252" width="2" height="15" fill="rgb(232,126,52)"/><text x="410.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="407" y="1268" width="2" height="15" fill="rgb(221,96,27)"/><text x="410.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="407" y="1284" width="2" height="15" fill="rgb(233,115,22)"/><text x="410.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.11%)</title><rect x="407" y="1300" width="2" height="15" fill="rgb(250,99,5)"/><text x="410.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.11%)</title><rect x="407" y="1316" width="2" height="15" fill="rgb(226,19,10)"/><text x="410.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.11%)</title><rect x="407" y="1332" width="2" height="15" fill="rgb(219,30,18)"/><text x="410.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.11%)</title><rect x="407" y="1348" width="2" height="15" fill="rgb(240,71,43)"/><text x="410.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.11%)</title><rect x="407" y="1364" width="2" height="15" fill="rgb(215,142,44)"/><text x="410.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.11%)</title><rect x="409" y="1108" width="1" height="15" fill="rgb(212,71,8)"/><text x="412.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="409" y="1124" width="1" height="15" fill="rgb(222,181,17)"/><text x="412.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="1140" width="1" height="15" fill="rgb(217,24,49)"/><text x="412.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="409" y="1156" width="1" height="15" fill="rgb(237,55,37)"/><text x="412.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="409" y="1172" width="1" height="15" fill="rgb(241,177,15)"/><text x="412.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="409" y="1188" width="1" height="15" fill="rgb(213,224,2)"/><text x="412.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="409" y="1204" width="1" height="15" fill="rgb(250,132,49)"/><text x="412.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="1220" width="1" height="15" fill="rgb(239,60,9)"/><text x="412.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:36) (1 samples, 0.11%)</title><rect x="409" y="1236" width="1" height="15" fill="rgb(246,66,44)"/><text x="412.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="409" y="1252" width="1" height="15" fill="rgb(225,84,34)"/><text x="412.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="409" y="1268" width="1" height="15" fill="rgb(253,0,1)"/><text x="412.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.11%)</title><rect x="409" y="1284" width="1" height="15" fill="rgb(252,103,11)"/><text x="412.00" y="1294.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.11%)</title><rect x="409" y="1300" width="1" height="15" fill="rgb(208,96,52)"/><text x="412.00" y="1310.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:174) (1 samples, 0.11%)</title><rect x="409" y="1316" width="1" height="15" fill="rgb(239,104,25)"/><text x="412.00" y="1326.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:58) (1 samples, 0.11%)</title><rect x="409" y="1332" width="1" height="15" fill="rgb(217,60,15)"/><text x="412.00" y="1342.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:4) (15 samples, 1.67%)</title><rect x="391" y="52" width="20" height="15" fill="rgb(210,28,38)"/><text x="394.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.67%)</title><rect x="391" y="68" width="20" height="15" fill="rgb(246,190,51)"/><text x="394.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.67%)</title><rect x="391" y="84" width="20" height="15" fill="rgb(214,12,19)"/><text x="394.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.67%)</title><rect x="391" y="100" width="20" height="15" fill="rgb(238,72,29)"/><text x="394.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.67%)</title><rect x="391" y="116" width="20" height="15" fill="rgb(234,81,41)"/><text x="394.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.67%)</title><rect x="391" y="132" width="20" height="15" fill="rgb(210,56,14)"/><text x="394.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py:7) (4 samples, 0.45%)</title><rect x="406" y="148" width="5" height="15" fill="rgb(240,109,39)"/><text x="409.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.45%)</title><rect x="406" y="164" width="5" height="15" fill="rgb(234,136,48)"/><text x="409.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.45%)</title><rect x="406" y="180" width="5" height="15" fill="rgb(223,25,40)"/><text x="409.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.45%)</title><rect x="406" y="196" width="5" height="15" fill="rgb(247,53,21)"/><text x="409.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.45%)</title><rect x="406" y="212" width="5" height="15" fill="rgb(244,184,11)"/><text x="409.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.45%)</title><rect x="406" y="228" width="5" height="15" fill="rgb(227,216,10)"/><text x="409.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.33%)</title><rect x="407" y="244" width="4" height="15" fill="rgb(210,160,12)"/><text x="410.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="260" width="4" height="15" fill="rgb(214,77,35)"/><text x="410.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="276" width="4" height="15" fill="rgb(238,34,15)"/><text x="410.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="292" width="4" height="15" fill="rgb(237,15,17)"/><text x="410.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="308" width="4" height="15" fill="rgb(230,201,3)"/><text x="410.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="324" width="4" height="15" fill="rgb(225,221,20)"/><text x="410.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.33%)</title><rect x="407" y="340" width="4" height="15" fill="rgb(248,25,52)"/><text x="410.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="356" width="4" height="15" fill="rgb(211,40,7)"/><text x="410.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="372" width="4" height="15" fill="rgb(247,101,16)"/><text x="410.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="388" width="4" height="15" fill="rgb(239,114,9)"/><text x="410.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="404" width="4" height="15" fill="rgb(243,81,46)"/><text x="410.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="420" width="4" height="15" fill="rgb(228,220,51)"/><text x="410.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.33%)</title><rect x="407" y="436" width="4" height="15" fill="rgb(213,146,45)"/><text x="410.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="452" width="4" height="15" fill="rgb(218,14,17)"/><text x="410.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.33%)</title><rect x="407" y="468" width="4" height="15" fill="rgb(231,123,9)"/><text x="410.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="484" width="4" height="15" fill="rgb(215,4,21)"/><text x="410.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="500" width="4" height="15" fill="rgb(206,207,52)"/><text x="410.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="516" width="4" height="15" fill="rgb(221,86,43)"/><text x="410.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="532" width="4" height="15" fill="rgb(233,179,22)"/><text x="410.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="548" width="4" height="15" fill="rgb(228,164,5)"/><text x="410.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="564" width="4" height="15" fill="rgb(226,40,52)"/><text x="410.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.33%)</title><rect x="407" y="580" width="4" height="15" fill="rgb(240,61,46)"/><text x="410.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="596" width="4" height="15" fill="rgb(235,138,36)"/><text x="410.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="612" width="4" height="15" fill="rgb(245,200,0)"/><text x="410.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="628" width="4" height="15" fill="rgb(235,34,22)"/><text x="410.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="644" width="4" height="15" fill="rgb(206,118,10)"/><text x="410.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="660" width="4" height="15" fill="rgb(253,60,31)"/><text x="410.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.33%)</title><rect x="407" y="676" width="4" height="15" fill="rgb(208,75,10)"/><text x="410.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="692" width="4" height="15" fill="rgb(222,146,27)"/><text x="410.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="708" width="4" height="15" fill="rgb(235,35,6)"/><text x="410.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="724" width="4" height="15" fill="rgb(240,150,49)"/><text x="410.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="740" width="4" height="15" fill="rgb(243,134,34)"/><text x="410.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="756" width="4" height="15" fill="rgb(253,64,27)"/><text x="410.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.33%)</title><rect x="407" y="772" width="4" height="15" fill="rgb(251,32,38)"/><text x="410.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="788" width="4" height="15" fill="rgb(221,116,8)"/><text x="410.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="804" width="4" height="15" fill="rgb(210,16,52)"/><text x="410.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="820" width="4" height="15" fill="rgb(251,102,49)"/><text x="410.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="836" width="4" height="15" fill="rgb(241,146,2)"/><text x="410.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="852" width="4" height="15" fill="rgb(246,100,12)"/><text x="410.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.33%)</title><rect x="407" y="868" width="4" height="15" fill="rgb(224,220,34)"/><text x="410.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="884" width="4" height="15" fill="rgb(223,212,24)"/><text x="410.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.33%)</title><rect x="407" y="900" width="4" height="15" fill="rgb(251,226,53)"/><text x="410.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="916" width="4" height="15" fill="rgb(252,149,47)"/><text x="410.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="932" width="4" height="15" fill="rgb(243,54,16)"/><text x="410.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="948" width="4" height="15" fill="rgb(205,19,1)"/><text x="410.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="964" width="4" height="15" fill="rgb(245,69,50)"/><text x="410.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="980" width="4" height="15" fill="rgb(225,74,36)"/><text x="410.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="996" width="4" height="15" fill="rgb(228,169,25)"/><text x="410.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.33%)</title><rect x="407" y="1012" width="4" height="15" fill="rgb(213,69,4)"/><text x="410.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.33%)</title><rect x="407" y="1028" width="4" height="15" fill="rgb(215,59,24)"/><text x="410.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.33%)</title><rect x="407" y="1044" width="4" height="15" fill="rgb(233,158,7)"/><text x="410.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.33%)</title><rect x="407" y="1060" width="4" height="15" fill="rgb(239,53,12)"/><text x="410.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.33%)</title><rect x="407" y="1076" width="4" height="15" fill="rgb(248,188,23)"/><text x="410.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.33%)</title><rect x="407" y="1092" width="4" height="15" fill="rgb(225,8,50)"/><text x="410.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.11%)</title><rect x="410" y="1108" width="1" height="15" fill="rgb(237,180,2)"/><text x="413.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="410" y="1124" width="1" height="15" fill="rgb(215,144,39)"/><text x="413.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1140" width="1" height="15" fill="rgb(216,193,30)"/><text x="413.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="1156" width="1" height="15" fill="rgb(216,47,18)"/><text x="413.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="1172" width="1" height="15" fill="rgb(236,6,29)"/><text x="413.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="1188" width="1" height="15" fill="rgb(216,123,47)"/><text x="413.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="1204" width="1" height="15" fill="rgb(251,73,49)"/><text x="413.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1220" width="1" height="15" fill="rgb(209,46,54)"/><text x="413.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.11%)</title><rect x="410" y="1236" width="1" height="15" fill="rgb(237,168,52)"/><text x="413.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="410" y="1252" width="1" height="15" fill="rgb(242,209,49)"/><text x="413.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1268" width="1" height="15" fill="rgb(215,138,4)"/><text x="413.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="1284" width="1" height="15" fill="rgb(218,78,51)"/><text x="413.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="1300" width="1" height="15" fill="rgb(230,92,5)"/><text x="413.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="1316" width="1" height="15" fill="rgb(219,37,33)"/><text x="413.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="1332" width="1" height="15" fill="rgb(213,33,4)"/><text x="413.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1348" width="1" height="15" fill="rgb(240,120,38)"/><text x="413.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.11%)</title><rect x="410" y="1364" width="1" height="15" fill="rgb(228,191,16)"/><text x="413.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="410" y="1380" width="1" height="15" fill="rgb(238,26,5)"/><text x="413.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="410" y="1396" width="1" height="15" fill="rgb(252,43,3)"/><text x="413.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="410" y="1412" width="1" height="15" fill="rgb(223,199,23)"/><text x="413.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="410" y="1428" width="1" height="15" fill="rgb(235,121,33)"/><text x="413.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="410" y="1444" width="1" height="15" fill="rgb(222,163,35)"/><text x="413.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.11%)</title><rect x="410" y="1460" width="1" height="15" fill="rgb(237,167,51)"/><text x="413.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.11%)</title><rect x="410" y="1476" width="1" height="15" fill="rgb(227,55,46)"/><text x="413.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.11%)</title><rect x="410" y="1492" width="1" height="15" fill="rgb(206,60,39)"/><text x="413.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.11%)</title><rect x="410" y="1508" width="1" height="15" fill="rgb(234,161,32)"/><text x="413.00" y="1518.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:66) (1 samples, 0.11%)</title><rect x="411" y="212" width="1" height="15" fill="rgb(228,223,26)"/><text x="414.00" y="222.50"></text></g><g><title>add_initializer (skl2onnx/common/_container.py:339) (1 samples, 0.11%)</title><rect x="411" y="228" width="1" height="15" fill="rgb(212,179,16)"/><text x="414.00" y="238.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (2 samples, 0.22%)</title><rect x="411" y="196" width="3" height="15" fill="rgb(215,9,39)"/><text x="414.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:85) (1 samples, 0.11%)</title><rect x="412" y="212" width="2" height="15" fill="rgb(236,99,46)"/><text x="415.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.11%)</title><rect x="412" y="228" width="2" height="15" fill="rgb(221,161,36)"/><text x="415.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.11%)</title><rect x="412" y="244" width="2" height="15" fill="rgb(205,146,2)"/><text x="415.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.11%)</title><rect x="412" y="260" width="2" height="15" fill="rgb(228,136,7)"/><text x="415.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py:404) (1 samples, 0.11%)</title><rect x="412" y="276" width="2" height="15" fill="rgb(217,170,18)"/><text x="415.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="412" y="292" width="2" height="15" fill="rgb(216,30,51)"/><text x="415.00" y="302.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.33%)</title><rect x="411" y="116" width="4" height="15" fill="rgb(226,25,5)"/><text x="414.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.33%)</title><rect x="411" y="132" width="4" height="15" fill="rgb(224,134,32)"/><text x="414.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.33%)</title><rect x="411" y="148" width="4" height="15" fill="rgb(212,187,40)"/><text x="414.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.33%)</title><rect x="411" y="164" width="4" height="15" fill="rgb(248,88,36)"/><text x="414.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.33%)</title><rect x="411" y="180" width="4" height="15" fill="rgb(208,200,4)"/><text x="414.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.11%)</title><rect x="414" y="196" width="1" height="15" fill="rgb(207,212,46)"/><text x="417.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.11%)</title><rect x="414" y="212" width="1" height="15" fill="rgb(239,157,27)"/><text x="417.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:138) (1 samples, 0.11%)</title><rect x="414" y="228" width="1" height="15" fill="rgb(247,131,22)"/><text x="417.00" y="238.50"></text></g><g><title>array_item (mapping.c:1378) (1 samples, 0.11%)</title><rect x="414" y="244" width="1" height="15" fill="rgb(243,79,16)"/><text x="417.00" y="254.50"></text></g><g><title>get_item_pointer (mapping.c:891) (1 samples, 0.11%)</title><rect x="414" y="260" width="1" height="15" fill="rgb(246,130,45)"/><text x="417.00" y="270.50"></text></g><g><title>check_and_adjust_index (common.h:114) (1 samples, 0.11%)</title><rect x="414" y="276" width="1" height="15" fill="rgb(227,154,26)"/><text x="417.00" y="286.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:28) (4 samples, 0.45%)</title><rect x="411" y="84" width="5" height="15" fill="rgb(220,51,51)"/><text x="414.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (4 samples, 0.45%)</title><rect x="411" y="100" width="5" height="15" fill="rgb(241,119,50)"/><text x="414.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.11%)</title><rect x="415" y="116" width="1" height="15" fill="rgb(238,212,39)"/><text x="418.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.11%)</title><rect x="415" y="132" width="1" height="15" fill="rgb(243,114,30)"/><text x="418.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.11%)</title><rect x="415" y="148" width="1" height="15" fill="rgb(224,208,26)"/><text x="418.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.11%)</title><rect x="415" y="164" width="1" height="15" fill="rgb(224,167,2)"/><text x="418.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.11%)</title><rect x="415" y="180" width="1" height="15" fill="rgb(250,81,27)"/><text x="418.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:182) (1 samples, 0.11%)</title><rect x="415" y="196" width="1" height="15" fill="rgb(231,49,24)"/><text x="418.00" y="206.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="415" y="212" width="1" height="15" fill="rgb(246,223,28)"/><text x="418.00" y="222.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="415" y="228" width="1" height="15" fill="rgb(214,71,18)"/><text x="418.00" y="238.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="415" y="244" width="1" height="15" fill="rgb(207,179,19)"/><text x="418.00" y="254.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="415" y="260" width="1" height="15" fill="rgb(224,19,12)"/><text x="418.00" y="270.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 0.22%)</title><rect x="416" y="164" width="3" height="15" fill="rgb(226,130,23)"/><text x="419.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.33%)</title><rect x="422" y="180" width="4" height="15" fill="rgb(223,92,45)"/><text x="425.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.11%)</title><rect x="424" y="196" width="2" height="15" fill="rgb(230,113,48)"/><text x="427.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.22%)</title><rect x="427" y="212" width="3" height="15" fill="rgb(212,143,53)"/><text x="430.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.11%)</title><rect x="428" y="228" width="2" height="15" fill="rgb(228,17,2)"/><text x="431.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.11%)</title><rect x="428" y="244" width="2" height="15" fill="rgb(217,200,34)"/><text x="431.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="428" y="260" width="2" height="15" fill="rgb(243,176,14)"/><text x="431.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="428" y="276" width="2" height="15" fill="rgb(210,218,1)"/><text x="431.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.11%)</title><rect x="428" y="292" width="2" height="15" fill="rgb(211,154,6)"/><text x="431.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:137) (1 samples, 0.11%)</title><rect x="428" y="308" width="2" height="15" fill="rgb(225,218,13)"/><text x="431.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="431" y="260" width="1" height="15" fill="rgb(214,95,1)"/><text x="434.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="431" y="276" width="1" height="15" fill="rgb(250,206,7)"/><text x="434.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 0.56%)</title><rect x="427" y="196" width="7" height="15" fill="rgb(221,75,24)"/><text x="430.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (3 samples, 0.33%)</title><rect x="430" y="212" width="4" height="15" fill="rgb(247,174,44)"/><text x="433.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.22%)</title><rect x="431" y="228" width="3" height="15" fill="rgb(250,197,45)"/><text x="434.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="431" y="244" width="3" height="15" fill="rgb(208,155,53)"/><text x="434.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="432" y="260" width="2" height="15" fill="rgb(234,44,41)"/><text x="435.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.11%)</title><rect x="432" y="276" width="2" height="15" fill="rgb(209,97,1)"/><text x="435.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.11%)</title><rect x="432" y="292" width="2" height="15" fill="rgb(229,216,26)"/><text x="435.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.11%)</title><rect x="432" y="308" width="2" height="15" fill="rgb(236,142,4)"/><text x="435.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.11%)</title><rect x="432" y="324" width="2" height="15" fill="rgb(212,17,41)"/><text x="435.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="432" y="340" width="2" height="15" fill="rgb(219,81,49)"/><text x="435.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.11%)</title><rect x="432" y="356" width="2" height="15" fill="rgb(243,81,45)"/><text x="435.00" y="366.50"></text></g><g><title>0x7ff6a50bd2e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="436" y="324" width="2" height="15" fill="rgb(240,7,6)"/><text x="439.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.22%)</title><rect x="436" y="228" width="3" height="15" fill="rgb(212,81,8)"/><text x="439.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="436" y="244" width="3" height="15" fill="rgb(234,75,35)"/><text x="439.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.22%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(211,77,23)"/><text x="439.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.22%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(251,186,2)"/><text x="439.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.22%)</title><rect x="436" y="292" width="3" height="15" fill="rgb(214,174,52)"/><text x="439.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (2 samples, 0.22%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(253,188,43)"/><text x="439.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="438" y="324" width="1" height="15" fill="rgb(223,135,33)"/><text x="441.00" y="334.50"></text></g><g><title>0x7ff6a6019ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="438" y="340" width="1" height="15" fill="rgb(227,151,10)"/><text x="441.00" y="350.50"></text></g><g><title>0x7ff6a601c997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="439" y="324" width="1" height="15" fill="rgb(211,91,16)"/><text x="442.00" y="334.50"></text></g><g><title>0x7ff6a601c9af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="440" y="324" width="1" height="15" fill="rgb(215,183,40)"/><text x="443.00" y="334.50"></text></g><g><title>0x7ff6a601c9bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="441" y="324" width="2" height="15" fill="rgb(252,118,44)"/><text x="444.00" y="334.50"></text></g><g><title>0x7ff6a601ca19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="443" y="324" width="1" height="15" fill="rgb(218,162,28)"/><text x="446.00" y="334.50"></text></g><g><title>0x7ff6a601ca1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="444" y="324" width="1" height="15" fill="rgb(223,21,47)"/><text x="447.00" y="334.50"></text></g><g><title>0x7ff6a601ca21 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="445" y="324" width="4" height="15" fill="rgb(230,143,23)"/><text x="448.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (9 samples, 1.00%)</title><rect x="439" y="228" width="12" height="15" fill="rgb(234,95,24)"/><text x="442.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.00%)</title><rect x="439" y="244" width="12" height="15" fill="rgb(246,112,34)"/><text x="442.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.00%)</title><rect x="439" y="260" width="12" height="15" fill="rgb(208,51,2)"/><text x="442.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (9 samples, 1.00%)</title><rect x="439" y="276" width="12" height="15" fill="rgb(234,77,0)"/><text x="442.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 1.00%)</title><rect x="439" y="292" width="12" height="15" fill="rgb(251,15,22)"/><text x="442.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (9 samples, 1.00%)</title><rect x="439" y="308" width="12" height="15" fill="rgb(248,169,47)"/><text x="442.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(212,123,39)"/><text x="452.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.11%)</title><rect x="451" y="292" width="1" height="15" fill="rgb(217,203,28)"/><text x="454.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.22%)</title><rect x="452" y="308" width="3" height="15" fill="rgb(238,59,41)"/><text x="455.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.22%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(252,218,24)"/><text x="455.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.22%)</title><rect x="452" y="340" width="3" height="15" fill="rgb(251,130,44)"/><text x="455.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.22%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(207,77,35)"/><text x="455.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.22%)</title><rect x="452" y="372" width="3" height="15" fill="rgb(238,152,50)"/><text x="455.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.22%)</title><rect x="452" y="388" width="3" height="15" fill="rgb(206,86,54)"/><text x="455.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (2 samples, 0.22%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(211,29,34)"/><text x="458.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (2 samples, 0.22%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(234,213,15)"/><text x="458.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (2 samples, 0.22%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(216,48,11)"/><text x="458.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (2 samples, 0.22%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(208,119,0)"/><text x="458.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.11%)</title><rect x="457" y="372" width="2" height="15" fill="rgb(219,199,26)"/><text x="460.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.11%)</title><rect x="457" y="388" width="2" height="15" fill="rgb(246,85,18)"/><text x="460.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.11%)</title><rect x="459" y="372" width="1" height="15" fill="rgb(238,149,52)"/><text x="462.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.11%)</title><rect x="459" y="388" width="1" height="15" fill="rgb(227,92,26)"/><text x="462.00" y="398.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.11%)</title><rect x="459" y="404" width="1" height="15" fill="rgb(231,207,15)"/><text x="462.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.33%)</title><rect x="457" y="356" width="4" height="15" fill="rgb(211,16,47)"/><text x="460.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.11%)</title><rect x="460" y="372" width="1" height="15" fill="rgb(237,106,48)"/><text x="463.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.11%)</title><rect x="460" y="388" width="1" height="15" fill="rgb(217,53,17)"/><text x="463.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2625) (1 samples, 0.11%)</title><rect x="460" y="404" width="1" height="15" fill="rgb(222,157,35)"/><text x="463.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.11%)</title><rect x="461" y="372" width="2" height="15" fill="rgb(218,46,25)"/><text x="464.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="461" y="388" width="2" height="15" fill="rgb(207,7,26)"/><text x="464.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.11%)</title><rect x="463" y="372" width="1" height="15" fill="rgb(254,7,21)"/><text x="466.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="464" y="388" width="1" height="15" fill="rgb(246,205,32)"/><text x="467.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.22%)</title><rect x="465" y="388" width="3" height="15" fill="rgb(216,25,4)"/><text x="468.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="465" y="404" width="3" height="15" fill="rgb(220,75,40)"/><text x="468.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.11%)</title><rect x="468" y="388" width="1" height="15" fill="rgb(219,25,14)"/><text x="471.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (29 samples, 3.24%)</title><rect x="434" y="196" width="38" height="15" fill="rgb(251,62,54)"/><text x="437.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 3.01%)</title><rect x="436" y="212" width="36" height="15" fill="rgb(246,210,28)"/><text x="439.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (16 samples, 1.79%)</title><rect x="451" y="228" width="21" height="15" fill="rgb(236,132,24)"/><text x="454.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (16 samples, 1.79%)</title><rect x="451" y="244" width="21" height="15" fill="rgb(219,95,10)"/><text x="454.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 1.79%)</title><rect x="451" y="260" width="21" height="15" fill="rgb(216,127,24)"/><text x="454.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (16 samples, 1.79%)</title><rect x="451" y="276" width="21" height="15" fill="rgb(224,181,43)"/><text x="454.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (15 samples, 1.67%)</title><rect x="452" y="292" width="20" height="15" fill="rgb(250,87,22)"/><text x="455.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 1.45%)</title><rect x="455" y="308" width="17" height="15" fill="rgb(246,84,31)"/><text x="458.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.23%)</title><rect x="457" y="324" width="15" height="15" fill="rgb(236,129,42)"/><text x="460.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.23%)</title><rect x="457" y="340" width="15" height="15" fill="rgb(242,158,54)"/><text x="460.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 0.89%)</title><rect x="461" y="356" width="11" height="15" fill="rgb(233,116,42)"/><text x="464.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.67%)</title><rect x="464" y="372" width="8" height="15" fill="rgb(213,211,46)"/><text x="467.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.22%)</title><rect x="469" y="388" width="3" height="15" fill="rgb(216,8,12)"/><text x="472.00" y="398.50"></text></g><g><title>0x7ff6669f8422 (?) (1 samples, 0.11%)</title><rect x="473" y="244" width="1" height="15" fill="rgb(241,56,34)"/><text x="476.00" y="254.50"></text></g><g><title>0x7ff6669fe89e (?) (1 samples, 0.11%)</title><rect x="473" y="260" width="1" height="15" fill="rgb(214,25,19)"/><text x="476.00" y="270.50"></text></g><g><title>0x7ff6669fe74f (?) (1 samples, 0.11%)</title><rect x="473" y="276" width="1" height="15" fill="rgb(234,76,2)"/><text x="476.00" y="286.50"></text></g><g><title>0x7ff666a04a3a (?) (1 samples, 0.11%)</title><rect x="473" y="292" width="1" height="15" fill="rgb(228,169,12)"/><text x="476.00" y="302.50"></text></g><g><title>0x7ff66fe56cfa (?) (1 samples, 0.11%)</title><rect x="473" y="308" width="1" height="15" fill="rgb(205,126,5)"/><text x="476.00" y="318.50"></text></g><g><title>0x7ff66fe5fdaa (?) (1 samples, 0.11%)</title><rect x="473" y="324" width="1" height="15" fill="rgb(205,119,8)"/><text x="476.00" y="334.50"></text></g><g><title>0x7ff66fe61cf9 (?) (1 samples, 0.11%)</title><rect x="473" y="340" width="1" height="15" fill="rgb(209,107,45)"/><text x="476.00" y="350.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:389) (1 samples, 0.11%)</title><rect x="474" y="420" width="2" height="15" fill="rgb(234,93,20)"/><text x="477.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h:867) (1 samples, 0.11%)</title><rect x="474" y="436" width="2" height="15" fill="rgb(242,142,48)"/><text x="477.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::any_container&lt;unsigned long, void&gt; (common.h:787) (1 samples, 0.11%)</title><rect x="474" y="452" width="2" height="15" fill="rgb(211,7,47)"/><text x="477.00" y="462.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::any_container&lt;unsigned long const*, void&gt; (common.h:778) (1 samples, 0.11%)</title><rect x="474" y="468" width="2" height="15" fill="rgb(241,106,35)"/><text x="477.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector&lt;unsigned long const*, void&gt; (stl_vector.h:406) (1 samples, 0.11%)</title><rect x="474" y="484" width="2" height="15" fill="rgb(236,108,32)"/><text x="477.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_initialize_dispatch&lt;unsigned long const*&gt; (stl_vector.h:1261) (1 samples, 0.11%)</title><rect x="474" y="500" width="2" height="15" fill="rgb(238,100,33)"/><text x="477.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_initialize&lt;unsigned long const*&gt; (stl_vector.h:1286) (1 samples, 0.11%)</title><rect x="474" y="516" width="2" height="15" fill="rgb(206,16,48)"/><text x="477.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="474" y="532" width="2" height="15" fill="rgb(244,190,48)"/><text x="477.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="548" width="2" height="15" fill="rgb(221,11,3)"/><text x="477.00" y="558.50"></text></g><g><title>0x7ff66fe61ea0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="476" y="468" width="2" height="15" fill="rgb(218,176,39)"/><text x="479.00" y="478.50"></text></g><g><title>0x7ff66fe61ea9 (libgomp.so.1.0.0) (10 samples, 1.12%)</title><rect x="478" y="468" width="14" height="15" fill="rgb(206,51,44)"/><text x="481.00" y="478.50"></text></g><g><title>0x7ff66fe61eab (libgomp.so.1.0.0) (8 samples, 0.89%)</title><rect x="492" y="468" width="10" height="15" fill="rgb(239,145,18)"/><text x="495.00" y="478.50"></text></g><g><title>0x7ff66fe60ab9 (libgomp.so.1.0.0) (25 samples, 2.79%)</title><rect x="476" y="452" width="33" height="15" fill="rgb(252,148,34)"/><text x="479.00" y="462.50">0x..</text></g><g><title>0x7ff66fe61ead (libgomp.so.1.0.0) (5 samples, 0.56%)</title><rect x="502" y="468" width="7" height="15" fill="rgb(208,225,7)"/><text x="505.00" y="478.50"></text></g><g><title>0x7ff66fe61cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="509" y="484" width="1" height="15" fill="rgb(243,15,19)"/><text x="512.00" y="494.50"></text></g><g><title>0x7ff66fe61cf9 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="510" y="484" width="4" height="15" fill="rgb(247,24,31)"/><text x="513.00" y="494.50"></text></g><g><title>0x7ff66fe61cfd (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="514" y="484" width="3" height="15" fill="rgb(209,106,13)"/><text x="517.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (35 samples, 3.91%)</title><rect x="472" y="196" width="46" height="15" fill="rgb(207,144,39)"/><text x="475.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 3.91%)</title><rect x="472" y="212" width="46" height="15" fill="rgb(214,125,36)"/><text x="475.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (34 samples, 3.79%)</title><rect x="473" y="228" width="45" height="15" fill="rgb(214,194,6)"/><text x="476.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 3.68%)</title><rect x="474" y="244" width="44" height="15" fill="rgb(213,142,36)"/><text x="477.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 3.68%)</title><rect x="474" y="260" width="44" height="15" fill="rgb(208,199,4)"/><text x="477.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 3.68%)</title><rect x="474" y="276" width="44" height="15" fill="rgb(228,126,12)"/><text x="477.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 3.68%)</title><rect x="474" y="292" width="44" height="15" fill="rgb(242,223,9)"/><text x="477.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 3.68%)</title><rect x="474" y="308" width="44" height="15" fill="rgb(232,82,22)"/><text x="477.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 3.68%)</title><rect x="474" y="324" width="44" height="15" fill="rgb(224,22,35)"/><text x="477.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 3.68%)</title><rect x="474" y="340" width="44" height="15" fill="rgb(212,68,12)"/><text x="477.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 3.68%)</title><rect x="474" y="356" width="44" height="15" fill="rgb(207,53,19)"/><text x="477.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 3.68%)</title><rect x="474" y="372" width="44" height="15" fill="rgb(209,216,51)"/><text x="477.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 3.68%)</title><rect x="474" y="388" width="44" height="15" fill="rgb(252,39,46)"/><text x="477.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 3.68%)</title><rect x="474" y="404" width="44" height="15" fill="rgb(250,7,34)"/><text x="477.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (32 samples, 3.57%)</title><rect x="476" y="420" width="42" height="15" fill="rgb(215,35,14)"/><text x="479.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (32 samples, 3.57%)</title><rect x="476" y="436" width="42" height="15" fill="rgb(229,161,12)"/><text x="479.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 0.78%)</title><rect x="509" y="452" width="9" height="15" fill="rgb(230,199,15)"/><text x="512.00" y="462.50"></text></g><g><title>0x7ff66fe5fdaa (libgomp.so.1.0.0) (7 samples, 0.78%)</title><rect x="509" y="468" width="9" height="15" fill="rgb(241,147,40)"/><text x="512.00" y="478.50"></text></g><g><title>0x7ff66fe61d6d (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="517" y="484" width="1" height="15" fill="rgb(245,115,8)"/><text x="520.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (3 samples, 0.33%)</title><rect x="518" y="228" width="4" height="15" fill="rgb(236,210,4)"/><text x="521.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1189) (1 samples, 0.11%)</title><rect x="520" y="244" width="2" height="15" fill="rgb(231,203,45)"/><text x="523.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.11%)</title><rect x="522" y="260" width="1" height="15" fill="rgb(215,97,31)"/><text x="525.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.11%)</title><rect x="523" y="292" width="1" height="15" fill="rgb(214,123,27)"/><text x="526.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="524" y="292" width="2" height="15" fill="rgb(223,24,1)"/><text x="527.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:330) (1 samples, 0.11%)</title><rect x="524" y="308" width="2" height="15" fill="rgb(246,122,19)"/><text x="527.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.11%)</title><rect x="526" y="292" width="1" height="15" fill="rgb(206,173,30)"/><text x="529.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.56%)</title><rect x="522" y="228" width="6" height="15" fill="rgb(243,159,15)"/><text x="525.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="522" y="244" width="6" height="15" fill="rgb(243,117,14)"/><text x="525.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.45%)</title><rect x="523" y="260" width="5" height="15" fill="rgb(223,226,10)"/><text x="526.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.45%)</title><rect x="523" y="276" width="5" height="15" fill="rgb(254,61,10)"/><text x="526.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.11%)</title><rect x="527" y="292" width="1" height="15" fill="rgb(248,207,33)"/><text x="530.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:763) (1 samples, 0.11%)</title><rect x="527" y="308" width="1" height="15" fill="rgb(246,43,29)"/><text x="530.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.11%)</title><rect x="528" y="228" width="2" height="15" fill="rgb(244,167,0)"/><text x="531.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="530" y="260" width="1" height="15" fill="rgb(213,40,26)"/><text x="533.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.11%)</title><rect x="530" y="276" width="1" height="15" fill="rgb(250,194,18)"/><text x="533.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.11%)</title><rect x="530" y="292" width="1" height="15" fill="rgb(234,200,6)"/><text x="533.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.11%)</title><rect x="530" y="308" width="1" height="15" fill="rgb(229,112,20)"/><text x="533.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="531" y="292" width="1" height="15" fill="rgb(217,105,32)"/><text x="534.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="531" y="308" width="1" height="15" fill="rgb(246,197,22)"/><text x="534.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="531" y="324" width="1" height="15" fill="rgb(219,86,30)"/><text x="534.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="531" y="340" width="1" height="15" fill="rgb(233,148,45)"/><text x="534.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.11%)</title><rect x="531" y="356" width="1" height="15" fill="rgb(249,97,13)"/><text x="534.00" y="366.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.11%)</title><rect x="532" y="340" width="2" height="15" fill="rgb(231,45,21)"/><text x="535.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.11%)</title><rect x="532" y="356" width="2" height="15" fill="rgb(215,20,37)"/><text x="535.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (13 samples, 1.45%)</title><rect x="518" y="196" width="17" height="15" fill="rgb(246,150,30)"/><text x="521.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (13 samples, 1.45%)</title><rect x="518" y="212" width="17" height="15" fill="rgb(236,134,12)"/><text x="521.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (4 samples, 0.45%)</title><rect x="530" y="228" width="5" height="15" fill="rgb(232,117,29)"/><text x="533.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.45%)</title><rect x="530" y="244" width="5" height="15" fill="rgb(207,128,5)"/><text x="533.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="531" y="260" width="4" height="15" fill="rgb(226,212,7)"/><text x="534.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.33%)</title><rect x="531" y="276" width="4" height="15" fill="rgb(248,183,27)"/><text x="534.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="532" y="292" width="3" height="15" fill="rgb(222,89,18)"/><text x="535.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="532" y="308" width="3" height="15" fill="rgb(217,36,0)"/><text x="535.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="532" y="324" width="3" height="15" fill="rgb(253,197,51)"/><text x="535.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (1 samples, 0.11%)</title><rect x="534" y="340" width="1" height="15" fill="rgb(229,38,44)"/><text x="537.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.11%)</title><rect x="534" y="356" width="1" height="15" fill="rgb(227,71,2)"/><text x="537.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.11%)</title><rect x="535" y="196" width="1" height="15" fill="rgb(251,112,10)"/><text x="538.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.11%)</title><rect x="536" y="212" width="2" height="15" fill="rgb(234,28,2)"/><text x="539.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.11%)</title><rect x="542" y="324" width="1" height="15" fill="rgb(220,178,33)"/><text x="545.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="542" y="340" width="1" height="15" fill="rgb(248,30,41)"/><text x="545.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="542" y="356" width="1" height="15" fill="rgb(211,144,52)"/><text x="545.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="543" y="340" width="1" height="15" fill="rgb(251,150,12)"/><text x="546.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="543" y="356" width="1" height="15" fill="rgb(247,55,39)"/><text x="546.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.11%)</title><rect x="544" y="356" width="2" height="15" fill="rgb(241,155,2)"/><text x="547.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="546" y="388" width="1" height="15" fill="rgb(219,32,27)"/><text x="549.00" y="398.50"></text></g><g><title>0x7ff6a5eb0e82 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="546" y="404" width="1" height="15" fill="rgb(225,92,12)"/><text x="549.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="544" y="340" width="4" height="15" fill="rgb(224,196,28)"/><text x="547.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.22%)</title><rect x="546" y="356" width="2" height="15" fill="rgb(239,165,54)"/><text x="549.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.22%)</title><rect x="546" y="372" width="2" height="15" fill="rgb(232,146,28)"/><text x="549.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="547" y="388" width="1" height="15" fill="rgb(246,131,54)"/><text x="550.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="551" y="372" width="1" height="15" fill="rgb(234,221,26)"/><text x="554.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="551" y="388" width="1" height="15" fill="rgb(252,55,44)"/><text x="554.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="551" y="356" width="2" height="15" fill="rgb(224,62,12)"/><text x="554.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.11%)</title><rect x="552" y="372" width="1" height="15" fill="rgb(247,96,15)"/><text x="555.00" y="382.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.11%)</title><rect x="552" y="388" width="1" height="15" fill="rgb(209,196,50)"/><text x="555.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (9 samples, 1.00%)</title><rect x="543" y="324" width="12" height="15" fill="rgb(253,135,9)"/><text x="546.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 0.56%)</title><rect x="548" y="340" width="7" height="15" fill="rgb(231,76,31)"/><text x="551.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="553" y="356" width="2" height="15" fill="rgb(244,117,3)"/><text x="556.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="553" y="372" width="2" height="15" fill="rgb(216,107,47)"/><text x="556.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.11%)</title><rect x="553" y="388" width="2" height="15" fill="rgb(212,131,8)"/><text x="556.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.11%)</title><rect x="553" y="404" width="2" height="15" fill="rgb(212,20,32)"/><text x="556.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.11%)</title><rect x="555" y="356" width="1" height="15" fill="rgb(220,124,36)"/><text x="558.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="555" y="372" width="1" height="15" fill="rgb(249,104,45)"/><text x="558.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="555" y="388" width="1" height="15" fill="rgb(226,106,45)"/><text x="558.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="555" y="404" width="1" height="15" fill="rgb(234,98,27)"/><text x="558.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="555" y="420" width="1" height="15" fill="rgb(227,107,37)"/><text x="558.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="556" y="420" width="1" height="15" fill="rgb(249,125,26)"/><text x="559.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1485) (1 samples, 0.11%)</title><rect x="556" y="436" width="1" height="15" fill="rgb(213,72,3)"/><text x="559.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="556" y="404" width="3" height="15" fill="rgb(238,100,47)"/><text x="559.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.11%)</title><rect x="557" y="420" width="2" height="15" fill="rgb(226,194,48)"/><text x="560.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.11%)</title><rect x="557" y="436" width="2" height="15" fill="rgb(253,26,38)"/><text x="560.00" y="446.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.11%)</title><rect x="557" y="452" width="2" height="15" fill="rgb(214,116,53)"/><text x="560.00" y="462.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.11%)</title><rect x="557" y="468" width="2" height="15" fill="rgb(246,175,40)"/><text x="560.00" y="478.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:676) (1 samples, 0.11%)</title><rect x="557" y="484" width="2" height="15" fill="rgb(219,172,35)"/><text x="560.00" y="494.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2034) (1 samples, 0.11%)</title><rect x="559" y="436" width="1" height="15" fill="rgb(239,16,6)"/><text x="562.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.22%)</title><rect x="559" y="404" width="2" height="15" fill="rgb(227,156,25)"/><text x="562.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.22%)</title><rect x="559" y="420" width="2" height="15" fill="rgb(230,107,38)"/><text x="562.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="560" y="436" width="1" height="15" fill="rgb(239,14,54)"/><text x="563.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.11%)</title><rect x="560" y="452" width="1" height="15" fill="rgb(210,71,49)"/><text x="563.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (1 samples, 0.11%)</title><rect x="560" y="468" width="1" height="15" fill="rgb(232,185,6)"/><text x="563.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.11%)</title><rect x="561" y="420" width="2" height="15" fill="rgb(222,137,37)"/><text x="564.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (105 samples, 11.72%)</title><rect x="426" y="180" width="138" height="15" fill="rgb(242,132,30)"/><text x="429.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (21 samples, 2.34%)</title><rect x="536" y="196" width="28" height="15" fill="rgb(240,67,32)"/><text x="539.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (20 samples, 2.23%)</title><rect x="538" y="212" width="26" height="15" fill="rgb(242,139,18)"/><text x="541.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (19 samples, 2.12%)</title><rect x="539" y="228" width="25" height="15" fill="rgb(253,92,4)"/><text x="542.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 2.12%)</title><rect x="539" y="244" width="25" height="15" fill="rgb(227,68,46)"/><text x="542.00" y="254.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (19 samples, 2.12%)</title><rect x="539" y="260" width="25" height="15" fill="rgb(217,141,4)"/><text x="542.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (17 samples, 1.90%)</title><rect x="542" y="276" width="22" height="15" fill="rgb(214,42,44)"/><text x="545.00" y="286.50">_..</text></g><g><title>array_clip (methods.c:2381) (17 samples, 1.90%)</title><rect x="542" y="292" width="22" height="15" fill="rgb(222,222,17)"/><text x="545.00" y="302.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 1.90%)</title><rect x="542" y="308" width="22" height="15" fill="rgb(229,44,41)"/><text x="545.00" y="318.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:132) (7 samples, 0.78%)</title><rect x="555" y="324" width="9" height="15" fill="rgb(205,72,35)"/><text x="558.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 0.78%)</title><rect x="555" y="340" width="9" height="15" fill="rgb(228,37,32)"/><text x="558.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.67%)</title><rect x="556" y="356" width="8" height="15" fill="rgb(231,173,54)"/><text x="559.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.67%)</title><rect x="556" y="372" width="8" height="15" fill="rgb(221,9,45)"/><text x="559.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.67%)</title><rect x="556" y="388" width="8" height="15" fill="rgb(227,9,41)"/><text x="559.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="561" y="404" width="3" height="15" fill="rgb(220,116,46)"/><text x="564.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (1 samples, 0.11%)</title><rect x="563" y="420" width="1" height="15" fill="rgb(218,204,23)"/><text x="566.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="564" y="180" width="1" height="15" fill="rgb(223,213,1)"/><text x="567.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.45%)</title><rect x="565" y="180" width="6" height="15" fill="rgb(231,209,50)"/><text x="568.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (118 samples, 13.17%)</title><rect x="416" y="100" width="156" height="15" fill="rgb(242,150,17)"/><text x="419.00" y="110.50">profile (bench_AdaBo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 13.17%)</title><rect x="416" y="116" width="156" height="15" fill="rgb(229,11,6)"/><text x="419.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (118 samples, 13.17%)</title><rect x="416" y="132" width="156" height="15" fill="rgb(244,62,17)"/><text x="419.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (118 samples, 13.17%)</title><rect x="416" y="148" width="156" height="15" fill="rgb(222,55,10)"/><text x="419.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (116 samples, 12.95%)</title><rect x="419" y="164" width="153" height="15" fill="rgb(219,90,22)"/><text x="422.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="571" y="180" width="1" height="15" fill="rgb(233,44,19)"/><text x="574.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.11%)</title><rect x="577" y="180" width="1" height="15" fill="rgb(221,222,13)"/><text x="580.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 1.00%)</title><rect x="578" y="180" width="12" height="15" fill="rgb(210,153,25)"/><text x="581.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.33%)</title><rect x="586" y="196" width="4" height="15" fill="rgb(235,87,34)"/><text x="589.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.11%)</title><rect x="597" y="212" width="1" height="15" fill="rgb(243,176,22)"/><text x="600.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.11%)</title><rect x="597" y="228" width="1" height="15" fill="rgb(237,187,1)"/><text x="600.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.11%)</title><rect x="597" y="244" width="1" height="15" fill="rgb(244,20,39)"/><text x="600.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.11%)</title><rect x="597" y="260" width="1" height="15" fill="rgb(212,177,5)"/><text x="600.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.11%)</title><rect x="597" y="276" width="1" height="15" fill="rgb(214,99,47)"/><text x="600.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (1 samples, 0.11%)</title><rect x="597" y="292" width="1" height="15" fill="rgb(253,214,1)"/><text x="600.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.11%)</title><rect x="597" y="308" width="1" height="15" fill="rgb(253,96,35)"/><text x="600.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:16) (1 samples, 0.11%)</title><rect x="598" y="212" width="2" height="15" fill="rgb(225,18,27)"/><text x="601.00" y="222.50"></text></g><g><title>0x7ff6a5ebb1f2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="600" y="228" width="1" height="15" fill="rgb(232,50,11)"/><text x="603.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.11%)</title><rect x="601" y="260" width="1" height="15" fill="rgb(239,102,24)"/><text x="604.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.11%)</title><rect x="601" y="276" width="1" height="15" fill="rgb(236,164,8)"/><text x="604.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.11%)</title><rect x="601" y="292" width="1" height="15" fill="rgb(238,211,22)"/><text x="604.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:121) (1 samples, 0.11%)</title><rect x="601" y="308" width="1" height="15" fill="rgb(217,215,21)"/><text x="604.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.22%)</title><rect x="601" y="228" width="2" height="15" fill="rgb(222,88,25)"/><text x="604.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.22%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(221,5,29)"/><text x="604.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.11%)</title><rect x="602" y="260" width="1" height="15" fill="rgb(234,221,36)"/><text x="605.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.11%)</title><rect x="602" y="276" width="1" height="15" fill="rgb(225,82,7)"/><text x="605.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.11%)</title><rect x="602" y="292" width="1" height="15" fill="rgb(232,131,30)"/><text x="605.00" y="302.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.11%)</title><rect x="603" y="260" width="2" height="15" fill="rgb(232,96,26)"/><text x="606.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c:476) (1 samples, 0.11%)</title><rect x="603" y="276" width="2" height="15" fill="rgb(214,134,24)"/><text x="606.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (5 samples, 0.56%)</title><rect x="600" y="212" width="6" height="15" fill="rgb(207,202,40)"/><text x="603.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.22%)</title><rect x="603" y="228" width="3" height="15" fill="rgb(233,27,0)"/><text x="606.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.22%)</title><rect x="603" y="244" width="3" height="15" fill="rgb(251,19,7)"/><text x="606.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.11%)</title><rect x="605" y="260" width="1" height="15" fill="rgb(240,184,43)"/><text x="608.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.11%)</title><rect x="605" y="276" width="1" height="15" fill="rgb(210,133,16)"/><text x="608.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.11%)</title><rect x="605" y="292" width="1" height="15" fill="rgb(237,187,28)"/><text x="608.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:167) (1 samples, 0.11%)</title><rect x="605" y="308" width="1" height="15" fill="rgb(251,152,40)"/><text x="608.00" y="318.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.11%)</title><rect x="605" y="324" width="1" height="15" fill="rgb(249,54,15)"/><text x="608.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 1.00%)</title><rect x="596" y="196" width="11" height="15" fill="rgb(216,34,0)"/><text x="599.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.11%)</title><rect x="606" y="212" width="1" height="15" fill="rgb(250,215,5)"/><text x="609.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.11%)</title><rect x="606" y="228" width="1" height="15" fill="rgb(220,91,3)"/><text x="609.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="606" y="244" width="1" height="15" fill="rgb(227,171,26)"/><text x="609.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="606" y="260" width="1" height="15" fill="rgb(242,225,8)"/><text x="609.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.11%)</title><rect x="606" y="276" width="1" height="15" fill="rgb(243,2,27)"/><text x="609.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="606" y="292" width="1" height="15" fill="rgb(245,123,36)"/><text x="609.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="606" y="308" width="1" height="15" fill="rgb(210,172,27)"/><text x="609.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.11%)</title><rect x="607" y="196" width="2" height="15" fill="rgb(223,195,52)"/><text x="610.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.11%)</title><rect x="607" y="212" width="2" height="15" fill="rgb(250,228,49)"/><text x="610.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.11%)</title><rect x="607" y="228" width="2" height="15" fill="rgb(210,186,13)"/><text x="610.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.11%)</title><rect x="607" y="244" width="2" height="15" fill="rgb(239,212,10)"/><text x="610.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.11%)</title><rect x="607" y="260" width="2" height="15" fill="rgb(230,132,30)"/><text x="610.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="607" y="276" width="2" height="15" fill="rgb(227,5,34)"/><text x="610.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="607" y="292" width="2" height="15" fill="rgb(210,2,42)"/><text x="610.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.11%)</title><rect x="607" y="308" width="2" height="15" fill="rgb(212,154,23)"/><text x="610.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="607" y="324" width="2" height="15" fill="rgb(252,145,53)"/><text x="610.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.11%)</title><rect x="607" y="340" width="2" height="15" fill="rgb(246,153,8)"/><text x="610.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.11%)</title><rect x="607" y="356" width="2" height="15" fill="rgb(208,150,0)"/><text x="610.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="607" y="372" width="2" height="15" fill="rgb(208,165,32)"/><text x="610.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="607" y="388" width="2" height="15" fill="rgb(234,123,42)"/><text x="610.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="607" y="404" width="2" height="15" fill="rgb(236,158,47)"/><text x="610.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="607" y="420" width="2" height="15" fill="rgb(229,18,12)"/><text x="610.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="607" y="436" width="2" height="15" fill="rgb(219,136,15)"/><text x="610.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="607" y="452" width="2" height="15" fill="rgb(252,51,10)"/><text x="610.00" y="462.50"></text></g><g><title>0x7ff6a5e9bfd9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="607" y="468" width="2" height="15" fill="rgb(207,117,15)"/><text x="610.00" y="478.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.11%)</title><rect x="610" y="228" width="1" height="15" fill="rgb(253,72,9)"/><text x="613.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="610" y="244" width="1" height="15" fill="rgb(236,13,41)"/><text x="613.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.11%)</title><rect x="610" y="260" width="1" height="15" fill="rgb(221,18,45)"/><text x="613.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.11%)</title><rect x="610" y="276" width="1" height="15" fill="rgb(241,165,27)"/><text x="613.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.11%)</title><rect x="610" y="292" width="1" height="15" fill="rgb(206,76,51)"/><text x="613.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.11%)</title><rect x="610" y="308" width="1" height="15" fill="rgb(232,165,48)"/><text x="613.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="610" y="324" width="1" height="15" fill="rgb(250,83,30)"/><text x="613.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (2 samples, 0.22%)</title><rect x="611" y="228" width="3" height="15" fill="rgb(226,34,17)"/><text x="614.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="614" y="260" width="1" height="15" fill="rgb(222,85,8)"/><text x="617.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.11%)</title><rect x="614" y="276" width="1" height="15" fill="rgb(226,31,20)"/><text x="617.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.11%)</title><rect x="614" y="292" width="1" height="15" fill="rgb(210,179,23)"/><text x="617.00" y="302.50"></text></g><g><title>0x7ff6a601c960 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="615" y="324" width="3" height="15" fill="rgb(208,158,0)"/><text x="618.00" y="334.50"></text></g><g><title>0x7ff6a601c979 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="618" y="324" width="3" height="15" fill="rgb(241,141,1)"/><text x="621.00" y="334.50"></text></g><g><title>0x7ff6a601c9a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="621" y="324" width="1" height="15" fill="rgb(242,182,51)"/><text x="624.00" y="334.50"></text></g><g><title>0x7ff6a601c9af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="622" y="324" width="1" height="15" fill="rgb(230,136,4)"/><text x="625.00" y="334.50"></text></g><g><title>0x7ff6a601c9c8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="623" y="324" width="2" height="15" fill="rgb(222,226,16)"/><text x="626.00" y="334.50"></text></g><g><title>0x7ff6a601c9cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="625" y="324" width="1" height="15" fill="rgb(220,122,49)"/><text x="628.00" y="334.50"></text></g><g><title>0x7ff6a601ca19 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="626" y="324" width="2" height="15" fill="rgb(211,75,44)"/><text x="629.00" y="334.50"></text></g><g><title>0x7ff6a601ca1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(241,181,20)"/><text x="631.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (13 samples, 1.45%)</title><rect x="615" y="308" width="17" height="15" fill="rgb(238,37,5)"/><text x="618.00" y="318.50"></text></g><g><title>0x7ff6a601ca21 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="630" y="324" width="2" height="15" fill="rgb(253,5,40)"/><text x="633.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 1.67%)</title><rect x="615" y="260" width="20" height="15" fill="rgb(205,1,11)"/><text x="618.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 1.67%)</title><rect x="615" y="276" width="20" height="15" fill="rgb(208,54,23)"/><text x="618.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.67%)</title><rect x="615" y="292" width="20" height="15" fill="rgb(214,118,2)"/><text x="618.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (2 samples, 0.22%)</title><rect x="632" y="308" width="3" height="15" fill="rgb(242,119,10)"/><text x="635.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (2 samples, 0.22%)</title><rect x="632" y="324" width="3" height="15" fill="rgb(210,0,13)"/><text x="635.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (17 samples, 1.90%)</title><rect x="614" y="228" width="22" height="15" fill="rgb(214,214,30)"/><text x="617.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 1.90%)</title><rect x="614" y="244" width="22" height="15" fill="rgb(235,158,11)"/><text x="617.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.11%)</title><rect x="635" y="260" width="1" height="15" fill="rgb(223,203,45)"/><text x="638.00" y="270.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.11%)</title><rect x="636" y="244" width="2" height="15" fill="rgb(222,155,35)"/><text x="639.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.11%)</title><rect x="638" y="260" width="1" height="15" fill="rgb(242,224,47)"/><text x="641.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.11%)</title><rect x="638" y="276" width="1" height="15" fill="rgb(225,224,50)"/><text x="641.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c:30) (1 samples, 0.11%)</title><rect x="638" y="292" width="1" height="15" fill="rgb(254,79,39)"/><text x="641.00" y="302.50"></text></g><g><title>0x7ff6a5f78130 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(227,78,19)"/><text x="643.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.11%)</title><rect x="642" y="308" width="1" height="15" fill="rgb(224,82,27)"/><text x="645.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.11%)</title><rect x="642" y="324" width="1" height="15" fill="rgb(221,156,20)"/><text x="645.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.11%)</title><rect x="642" y="340" width="1" height="15" fill="rgb(211,176,1)"/><text x="645.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.11%)</title><rect x="642" y="356" width="1" height="15" fill="rgb(254,146,47)"/><text x="645.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="642" y="372" width="1" height="15" fill="rgb(222,171,17)"/><text x="645.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.11%)</title><rect x="643" y="420" width="1" height="15" fill="rgb(206,102,18)"/><text x="646.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.11%)</title><rect x="643" y="436" width="1" height="15" fill="rgb(207,104,29)"/><text x="646.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.11%)</title><rect x="643" y="452" width="1" height="15" fill="rgb(224,179,4)"/><text x="646.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="643" y="468" width="1" height="15" fill="rgb(221,220,41)"/><text x="646.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.22%)</title><rect x="643" y="356" width="3" height="15" fill="rgb(217,135,19)"/><text x="646.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.22%)</title><rect x="643" y="372" width="3" height="15" fill="rgb(240,153,49)"/><text x="646.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.22%)</title><rect x="643" y="388" width="3" height="15" fill="rgb(254,31,21)"/><text x="646.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.22%)</title><rect x="643" y="404" width="3" height="15" fill="rgb(228,84,11)"/><text x="646.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="644" y="420" width="2" height="15" fill="rgb(212,60,51)"/><text x="647.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="644" y="436" width="2" height="15" fill="rgb(245,95,34)"/><text x="647.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="644" y="452" width="2" height="15" fill="rgb(243,88,28)"/><text x="647.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="644" y="468" width="2" height="15" fill="rgb(224,136,50)"/><text x="647.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="644" y="484" width="2" height="15" fill="rgb(217,129,7)"/><text x="647.00" y="494.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.11%)</title><rect x="646" y="388" width="1" height="15" fill="rgb(226,189,29)"/><text x="649.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.11%)</title><rect x="646" y="404" width="1" height="15" fill="rgb(213,91,16)"/><text x="649.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.11%)</title><rect x="646" y="420" width="1" height="15" fill="rgb(252,33,17)"/><text x="649.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.11%)</title><rect x="646" y="436" width="1" height="15" fill="rgb(253,164,38)"/><text x="649.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.11%)</title><rect x="646" y="452" width="1" height="15" fill="rgb(234,176,18)"/><text x="649.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.22%)</title><rect x="646" y="356" width="2" height="15" fill="rgb(224,187,15)"/><text x="649.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.22%)</title><rect x="646" y="372" width="2" height="15" fill="rgb(230,146,26)"/><text x="649.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.11%)</title><rect x="647" y="388" width="1" height="15" fill="rgb(250,95,11)"/><text x="650.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.11%)</title><rect x="647" y="404" width="1" height="15" fill="rgb(241,6,40)"/><text x="650.00" y="414.50"></text></g><g><title>0x7ff6a50bcb20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="647" y="420" width="1" height="15" fill="rgb(235,63,30)"/><text x="650.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (3 samples, 0.33%)</title><rect x="648" y="388" width="4" height="15" fill="rgb(252,129,42)"/><text x="651.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.11%)</title><rect x="652" y="388" width="1" height="15" fill="rgb(219,1,39)"/><text x="655.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 0.56%)</title><rect x="653" y="388" width="7" height="15" fill="rgb(243,51,11)"/><text x="656.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.22%)</title><rect x="657" y="404" width="3" height="15" fill="rgb(239,221,5)"/><text x="660.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.11%)</title><rect x="660" y="388" width="1" height="15" fill="rgb(214,146,45)"/><text x="663.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.11%)</title><rect x="661" y="388" width="2" height="15" fill="rgb(228,73,11)"/><text x="664.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (12 samples, 1.34%)</title><rect x="648" y="356" width="16" height="15" fill="rgb(250,84,8)"/><text x="651.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 1.34%)</title><rect x="648" y="372" width="16" height="15" fill="rgb(233,170,23)"/><text x="651.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.11%)</title><rect x="663" y="388" width="1" height="15" fill="rgb(254,101,53)"/><text x="666.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 4.80%)</title><rect x="609" y="196" width="56" height="15" fill="rgb(214,158,31)"/><text x="612.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 4.69%)</title><rect x="610" y="212" width="55" height="15" fill="rgb(231,77,44)"/><text x="613.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (22 samples, 2.46%)</title><rect x="636" y="228" width="29" height="15" fill="rgb(231,26,50)"/><text x="639.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (21 samples, 2.34%)</title><rect x="638" y="244" width="27" height="15" fill="rgb(233,40,5)"/><text x="641.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.23%)</title><rect x="639" y="260" width="26" height="15" fill="rgb(207,30,34)"/><text x="642.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (20 samples, 2.23%)</title><rect x="639" y="276" width="26" height="15" fill="rgb(224,37,29)"/><text x="642.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (18 samples, 2.01%)</title><rect x="642" y="292" width="23" height="15" fill="rgb(212,131,12)"/><text x="645.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 1.90%)</title><rect x="643" y="308" width="22" height="15" fill="rgb(246,80,12)"/><text x="646.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (17 samples, 1.90%)</title><rect x="643" y="324" width="22" height="15" fill="rgb(252,54,32)"/><text x="646.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (17 samples, 1.90%)</title><rect x="643" y="340" width="22" height="15" fill="rgb(213,0,7)"/><text x="646.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.11%)</title><rect x="664" y="356" width="1" height="15" fill="rgb(209,223,21)"/><text x="667.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.11%)</title><rect x="664" y="372" width="1" height="15" fill="rgb(232,109,7)"/><text x="667.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:353) (1 samples, 0.11%)</title><rect x="665" y="196" width="2" height="15" fill="rgb(232,194,32)"/><text x="668.00" y="206.50"></text></g><g><title>0x7ff66fe61ea0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="667" y="468" width="1" height="15" fill="rgb(226,200,53)"/><text x="670.00" y="478.50"></text></g><g><title>0x7ff66fe61ea9 (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="668" y="468" width="8" height="15" fill="rgb(219,2,36)"/><text x="671.00" y="478.50"></text></g><g><title>0x7ff66fe61eab (libgomp.so.1.0.0) (9 samples, 1.00%)</title><rect x="676" y="468" width="12" height="15" fill="rgb(223,168,4)"/><text x="679.00" y="478.50"></text></g><g><title>0x7ff66fe60ab9 (libgomp.so.1.0.0) (27 samples, 3.01%)</title><rect x="667" y="452" width="35" height="15" fill="rgb(224,55,36)"/><text x="670.00" y="462.50">0x..</text></g><g><title>0x7ff66fe61ead (libgomp.so.1.0.0) (11 samples, 1.23%)</title><rect x="688" y="468" width="14" height="15" fill="rgb(231,123,10)"/><text x="691.00" y="478.50"></text></g><g><title>0x7ff66fe61cf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="702" y="484" width="2" height="15" fill="rgb(253,174,45)"/><text x="705.00" y="494.50"></text></g><g><title>0x7ff66fe61cf9 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="704" y="484" width="2" height="15" fill="rgb(246,9,52)"/><text x="707.00" y="494.50"></text></g><g><title>0x7ff66fe61cfb (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="706" y="484" width="1" height="15" fill="rgb(248,46,10)"/><text x="709.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (33 samples, 3.68%)</title><rect x="667" y="196" width="43" height="15" fill="rgb(221,18,37)"/><text x="670.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (33 samples, 3.68%)</title><rect x="667" y="212" width="43" height="15" fill="rgb(249,51,37)"/><text x="670.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (33 samples, 3.68%)</title><rect x="667" y="228" width="43" height="15" fill="rgb(217,142,6)"/><text x="670.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 3.68%)</title><rect x="667" y="244" width="43" height="15" fill="rgb(229,173,48)"/><text x="670.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 3.68%)</title><rect x="667" y="260" width="43" height="15" fill="rgb(233,44,27)"/><text x="670.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 3.68%)</title><rect x="667" y="276" width="43" height="15" fill="rgb(207,158,29)"/><text x="670.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 3.68%)</title><rect x="667" y="292" width="43" height="15" fill="rgb(236,171,48)"/><text x="670.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 3.68%)</title><rect x="667" y="308" width="43" height="15" fill="rgb(205,226,54)"/><text x="670.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 3.68%)</title><rect x="667" y="324" width="43" height="15" fill="rgb(252,75,52)"/><text x="670.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 3.68%)</title><rect x="667" y="340" width="43" height="15" fill="rgb(242,6,20)"/><text x="670.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 3.68%)</title><rect x="667" y="356" width="43" height="15" fill="rgb(211,130,17)"/><text x="670.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 3.68%)</title><rect x="667" y="372" width="43" height="15" fill="rgb(244,174,42)"/><text x="670.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 3.68%)</title><rect x="667" y="388" width="43" height="15" fill="rgb(211,106,35)"/><text x="670.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 3.68%)</title><rect x="667" y="404" width="43" height="15" fill="rgb(230,136,26)"/><text x="670.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (33 samples, 3.68%)</title><rect x="667" y="420" width="43" height="15" fill="rgb(247,151,31)"/><text x="670.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (33 samples, 3.68%)</title><rect x="667" y="436" width="43" height="15" fill="rgb(207,195,16)"/><text x="670.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="702" y="452" width="8" height="15" fill="rgb(214,166,3)"/><text x="705.00" y="462.50"></text></g><g><title>0x7ff66fe5fdaa (libgomp.so.1.0.0) (6 samples, 0.67%)</title><rect x="702" y="468" width="8" height="15" fill="rgb(243,1,20)"/><text x="705.00" y="478.50"></text></g><g><title>0x7ff66fe61cfd (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="707" y="484" width="3" height="15" fill="rgb(234,125,30)"/><text x="710.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.11%)</title><rect x="710" y="196" width="1" height="15" fill="rgb(221,204,34)"/><text x="713.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py:17) (1 samples, 0.11%)</title><rect x="710" y="212" width="1" height="15" fill="rgb(250,99,22)"/><text x="713.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="710" y="228" width="1" height="15" fill="rgb(242,144,53)"/><text x="713.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.11%)</title><rect x="710" y="244" width="1" height="15" fill="rgb(214,107,25)"/><text x="713.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.11%)</title><rect x="710" y="260" width="1" height="15" fill="rgb(248,168,32)"/><text x="713.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.22%)</title><rect x="715" y="228" width="3" height="15" fill="rgb(221,108,13)"/><text x="718.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.11%)</title><rect x="718" y="276" width="1" height="15" fill="rgb(241,49,3)"/><text x="721.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.11%)</title><rect x="718" y="292" width="1" height="15" fill="rgb(245,148,15)"/><text x="721.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.11%)</title><rect x="719" y="292" width="2" height="15" fill="rgb(243,185,26)"/><text x="722.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="719" y="308" width="2" height="15" fill="rgb(209,56,29)"/><text x="722.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.11%)</title><rect x="719" y="324" width="2" height="15" fill="rgb(223,212,44)"/><text x="722.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="719" y="340" width="2" height="15" fill="rgb(249,131,5)"/><text x="722.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="721" y="292" width="1" height="15" fill="rgb(213,229,21)"/><text x="724.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="721" y="308" width="1" height="15" fill="rgb(246,59,54)"/><text x="724.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2038) (1 samples, 0.11%)</title><rect x="721" y="324" width="1" height="15" fill="rgb(227,156,28)"/><text x="724.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.11%)</title><rect x="722" y="308" width="1" height="15" fill="rgb(211,167,51)"/><text x="725.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.56%)</title><rect x="718" y="244" width="7" height="15" fill="rgb(242,200,36)"/><text x="721.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.56%)</title><rect x="718" y="260" width="7" height="15" fill="rgb(217,205,35)"/><text x="721.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.45%)</title><rect x="719" y="276" width="6" height="15" fill="rgb(222,202,46)"/><text x="722.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.22%)</title><rect x="722" y="292" width="3" height="15" fill="rgb(229,228,1)"/><text x="725.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.11%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(219,27,30)"/><text x="726.00" y="318.50"></text></g><g><title>0x7ff6a5e9a902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(236,4,21)"/><text x="726.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (6 samples, 0.67%)</title><rect x="718" y="228" width="8" height="15" fill="rgb(218,98,10)"/><text x="721.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.11%)</title><rect x="725" y="244" width="1" height="15" fill="rgb(206,100,9)"/><text x="728.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.11%)</title><rect x="725" y="260" width="1" height="15" fill="rgb(210,40,27)"/><text x="728.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.11%)</title><rect x="726" y="228" width="1" height="15" fill="rgb(222,146,28)"/><text x="729.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.11%)</title><rect x="727" y="292" width="2" height="15" fill="rgb(244,144,9)"/><text x="730.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.11%)</title><rect x="727" y="308" width="2" height="15" fill="rgb(250,156,23)"/><text x="730.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.11%)</title><rect x="727" y="324" width="2" height="15" fill="rgb(234,150,47)"/><text x="730.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.11%)</title><rect x="727" y="340" width="2" height="15" fill="rgb(243,186,25)"/><text x="730.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.11%)</title><rect x="727" y="356" width="2" height="15" fill="rgb(249,112,22)"/><text x="730.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (3 samples, 0.33%)</title><rect x="727" y="228" width="4" height="15" fill="rgb(230,105,8)"/><text x="730.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.33%)</title><rect x="727" y="244" width="4" height="15" fill="rgb(208,195,49)"/><text x="730.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.33%)</title><rect x="727" y="260" width="4" height="15" fill="rgb(215,61,20)"/><text x="730.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.33%)</title><rect x="727" y="276" width="4" height="15" fill="rgb(208,87,30)"/><text x="730.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.22%)</title><rect x="729" y="292" width="2" height="15" fill="rgb(246,99,9)"/><text x="732.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (2 samples, 0.22%)</title><rect x="729" y="308" width="2" height="15" fill="rgb(223,99,44)"/><text x="732.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (2 samples, 0.22%)</title><rect x="729" y="324" width="2" height="15" fill="rgb(241,124,23)"/><text x="732.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (2 samples, 0.22%)</title><rect x="729" y="340" width="2" height="15" fill="rgb(217,132,53)"/><text x="732.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (2 samples, 0.22%)</title><rect x="729" y="356" width="2" height="15" fill="rgb(239,12,26)"/><text x="732.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (16 samples, 1.79%)</title><rect x="711" y="196" width="22" height="15" fill="rgb(245,102,47)"/><text x="714.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (14 samples, 1.56%)</title><rect x="714" y="212" width="19" height="15" fill="rgb(213,134,5)"/><text x="717.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.11%)</title><rect x="731" y="228" width="2" height="15" fill="rgb(242,117,41)"/><text x="734.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.11%)</title><rect x="731" y="244" width="2" height="15" fill="rgb(237,138,25)"/><text x="734.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.11%)</title><rect x="731" y="260" width="2" height="15" fill="rgb(231,21,51)"/><text x="734.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="731" y="276" width="2" height="15" fill="rgb(213,77,50)"/><text x="734.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.11%)</title><rect x="731" y="292" width="2" height="15" fill="rgb(212,228,34)"/><text x="734.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:62) (1 samples, 0.11%)</title><rect x="733" y="212" width="1" height="15" fill="rgb(245,9,27)"/><text x="736.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="734" y="228" width="1" height="15" fill="rgb(239,221,12)"/><text x="737.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="734" y="244" width="1" height="15" fill="rgb(207,217,8)"/><text x="737.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.11%)</title><rect x="734" y="260" width="1" height="15" fill="rgb(236,50,23)"/><text x="737.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.11%)</title><rect x="734" y="276" width="1" height="15" fill="rgb(242,220,41)"/><text x="737.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.11%)</title><rect x="734" y="292" width="1" height="15" fill="rgb(220,210,30)"/><text x="737.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.11%)</title><rect x="734" y="308" width="1" height="15" fill="rgb(250,48,31)"/><text x="737.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.11%)</title><rect x="734" y="324" width="1" height="15" fill="rgb(222,181,44)"/><text x="737.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="734" y="340" width="1" height="15" fill="rgb(226,109,27)"/><text x="737.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="734" y="356" width="1" height="15" fill="rgb(215,125,46)"/><text x="737.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="734" y="372" width="1" height="15" fill="rgb(250,146,54)"/><text x="737.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="734" y="388" width="1" height="15" fill="rgb(221,126,43)"/><text x="737.00" y="398.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.11%)</title><rect x="735" y="276" width="1" height="15" fill="rgb(213,127,15)"/><text x="738.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.11%)</title><rect x="738" y="324" width="1" height="15" fill="rgb(217,193,54)"/><text x="741.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.11%)</title><rect x="738" y="340" width="1" height="15" fill="rgb(228,136,21)"/><text x="741.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.22%)</title><rect x="739" y="340" width="3" height="15" fill="rgb(231,174,32)"/><text x="742.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (2 samples, 0.22%)</title><rect x="742" y="356" width="2" height="15" fill="rgb(217,34,18)"/><text x="745.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (2 samples, 0.22%)</title><rect x="742" y="372" width="2" height="15" fill="rgb(232,178,13)"/><text x="745.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.56%)</title><rect x="739" y="324" width="7" height="15" fill="rgb(215,40,11)"/><text x="742.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.33%)</title><rect x="742" y="340" width="4" height="15" fill="rgb(243,44,34)"/><text x="745.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="744" y="356" width="2" height="15" fill="rgb(237,173,11)"/><text x="747.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="744" y="372" width="2" height="15" fill="rgb(230,168,5)"/><text x="747.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.11%)</title><rect x="744" y="388" width="2" height="15" fill="rgb(211,172,43)"/><text x="747.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.11%)</title><rect x="746" y="340" width="1" height="15" fill="rgb(219,27,48)"/><text x="749.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.11%)</title><rect x="746" y="356" width="1" height="15" fill="rgb(206,120,26)"/><text x="749.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.11%)</title><rect x="747" y="340" width="1" height="15" fill="rgb(217,25,15)"/><text x="750.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.11%)</title><rect x="747" y="356" width="1" height="15" fill="rgb(229,17,40)"/><text x="750.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.11%)</title><rect x="747" y="372" width="1" height="15" fill="rgb(221,90,38)"/><text x="750.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.11%)</title><rect x="747" y="388" width="1" height="15" fill="rgb(212,36,10)"/><text x="750.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="747" y="404" width="1" height="15" fill="rgb(237,229,8)"/><text x="750.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.11%)</title><rect x="747" y="420" width="1" height="15" fill="rgb(252,203,37)"/><text x="750.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="748" y="372" width="2" height="15" fill="rgb(206,192,31)"/><text x="751.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.11%)</title><rect x="748" y="388" width="2" height="15" fill="rgb(237,4,27)"/><text x="751.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.22%)</title><rect x="748" y="356" width="3" height="15" fill="rgb(236,75,2)"/><text x="751.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.11%)</title><rect x="750" y="372" width="1" height="15" fill="rgb(229,67,22)"/><text x="753.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.11%)</title><rect x="750" y="388" width="1" height="15" fill="rgb(246,9,42)"/><text x="753.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 0.56%)</title><rect x="746" y="324" width="6" height="15" fill="rgb(214,4,27)"/><text x="749.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.33%)</title><rect x="748" y="340" width="4" height="15" fill="rgb(245,78,11)"/><text x="751.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.11%)</title><rect x="751" y="356" width="1" height="15" fill="rgb(240,91,21)"/><text x="754.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.11%)</title><rect x="751" y="372" width="1" height="15" fill="rgb(244,159,12)"/><text x="754.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.11%)</title><rect x="751" y="388" width="1" height="15" fill="rgb(254,84,44)"/><text x="754.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.11%)</title><rect x="754" y="372" width="1" height="15" fill="rgb(223,82,16)"/><text x="757.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.11%)</title><rect x="754" y="388" width="1" height="15" fill="rgb(231,194,40)"/><text x="757.00" y="398.50"></text></g><g><title>PyArray_FromArray (ctors.c:2068) (1 samples, 0.11%)</title><rect x="754" y="404" width="1" height="15" fill="rgb(205,47,1)"/><text x="757.00" y="414.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.11%)</title><rect x="755" y="404" width="1" height="15" fill="rgb(229,149,50)"/><text x="758.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.22%)</title><rect x="755" y="372" width="3" height="15" fill="rgb(235,37,25)"/><text x="758.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (2 samples, 0.22%)</title><rect x="755" y="388" width="3" height="15" fill="rgb(249,25,13)"/><text x="758.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.11%)</title><rect x="756" y="404" width="2" height="15" fill="rgb(215,125,37)"/><text x="759.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.11%)</title><rect x="758" y="420" width="1" height="15" fill="rgb(220,115,29)"/><text x="761.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.11%)</title><rect x="758" y="436" width="1" height="15" fill="rgb(225,6,35)"/><text x="761.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.22%)</title><rect x="758" y="404" width="2" height="15" fill="rgb(221,152,38)"/><text x="761.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.11%)</title><rect x="759" y="420" width="1" height="15" fill="rgb(208,103,22)"/><text x="762.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1648) (1 samples, 0.11%)</title><rect x="759" y="436" width="1" height="15" fill="rgb(217,48,22)"/><text x="762.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.11%)</title><rect x="760" y="420" width="1" height="15" fill="rgb(213,227,12)"/><text x="763.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.11%)</title><rect x="760" y="436" width="1" height="15" fill="rgb(229,101,36)"/><text x="763.00" y="446.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (2 samples, 0.22%)</title><rect x="761" y="468" width="3" height="15" fill="rgb(213,162,19)"/><text x="764.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.56%)</title><rect x="760" y="404" width="7" height="15" fill="rgb(236,20,33)"/><text x="763.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.45%)</title><rect x="761" y="420" width="6" height="15" fill="rgb(206,71,9)"/><text x="764.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.45%)</title><rect x="761" y="436" width="6" height="15" fill="rgb(226,101,37)"/><text x="764.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (4 samples, 0.45%)</title><rect x="761" y="452" width="6" height="15" fill="rgb(240,133,43)"/><text x="764.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.22%)</title><rect x="764" y="468" width="3" height="15" fill="rgb(246,82,34)"/><text x="767.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (3 samples, 0.33%)</title><rect x="767" y="420" width="4" height="15" fill="rgb(226,55,52)"/><text x="770.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (138 samples, 15.40%)</title><rect x="590" y="180" width="182" height="15" fill="rgb(222,57,23)"/><text x="593.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (30 samples, 3.35%)</title><rect x="733" y="196" width="39" height="15" fill="rgb(216,180,20)"/><text x="736.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (29 samples, 3.24%)</title><rect x="734" y="212" width="38" height="15" fill="rgb(210,1,29)"/><text x="737.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (28 samples, 3.12%)</title><rect x="735" y="228" width="37" height="15" fill="rgb(235,110,9)"/><text x="738.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (28 samples, 3.12%)</title><rect x="735" y="244" width="37" height="15" fill="rgb(250,116,13)"/><text x="738.00" y="254.50">arr..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (28 samples, 3.12%)</title><rect x="735" y="260" width="37" height="15" fill="rgb(234,13,18)"/><text x="738.00" y="270.50">cli..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 3.01%)</title><rect x="736" y="276" width="36" height="15" fill="rgb(251,150,34)"/><text x="739.00" y="286.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (26 samples, 2.90%)</title><rect x="738" y="292" width="34" height="15" fill="rgb(231,206,43)"/><text x="741.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 2.90%)</title><rect x="738" y="308" width="34" height="15" fill="rgb(250,118,27)"/><text x="741.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (15 samples, 1.67%)</title><rect x="752" y="324" width="20" height="15" fill="rgb(250,220,39)"/><text x="755.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (14 samples, 1.56%)</title><rect x="754" y="340" width="18" height="15" fill="rgb(225,209,15)"/><text x="757.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 1.56%)</title><rect x="754" y="356" width="18" height="15" fill="rgb(225,11,25)"/><text x="757.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.23%)</title><rect x="758" y="372" width="14" height="15" fill="rgb(214,224,36)"/><text x="761.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.23%)</title><rect x="758" y="388" width="14" height="15" fill="rgb(218,77,7)"/><text x="761.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.45%)</title><rect x="767" y="404" width="5" height="15" fill="rgb(245,73,25)"/><text x="770.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.11%)</title><rect x="771" y="420" width="1" height="15" fill="rgb(217,176,12)"/><text x="774.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.11%)</title><rect x="771" y="436" width="1" height="15" fill="rgb(206,83,7)"/><text x="774.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.11%)</title><rect x="771" y="452" width="1" height="15" fill="rgb(237,98,52)"/><text x="774.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.11%)</title><rect x="771" y="468" width="1" height="15" fill="rgb(227,62,23)"/><text x="774.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="772" y="180" width="1" height="15" fill="rgb(240,211,6)"/><text x="775.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (3 samples, 0.33%)</title><rect x="773" y="180" width="4" height="15" fill="rgb(212,221,22)"/><text x="776.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.45%)</title><rect x="777" y="180" width="6" height="15" fill="rgb(238,157,18)"/><text x="780.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:45) (283 samples, 31.58%)</title><rect x="411" y="52" width="373" height="15" fill="rgb(206,166,24)"/><text x="414.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:44) (283 samples, 31.58%)</title><rect x="411" y="68" width="373" height="15" fill="rgb(217,81,11)"/><text x="414.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (279 samples, 31.14%)</title><rect x="416" y="84" width="368" height="15" fill="rgb(210,216,52)"/><text x="419.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (161 samples, 17.97%)</title><rect x="572" y="100" width="212" height="15" fill="rgb(207,137,3)"/><text x="575.00" y="110.50">profile (bench_AdaBoostClas..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (161 samples, 17.97%)</title><rect x="572" y="116" width="212" height="15" fill="rgb(244,216,40)"/><text x="575.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (161 samples, 17.97%)</title><rect x="572" y="132" width="212" height="15" fill="rgb(253,157,30)"/><text x="575.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (161 samples, 17.97%)</title><rect x="572" y="148" width="212" height="15" fill="rgb(223,143,38)"/><text x="575.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (161 samples, 17.97%)</title><rect x="572" y="164" width="212" height="15" fill="rgb(243,226,4)"/><text x="575.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.11%)</title><rect x="783" y="180" width="1" height="15" fill="rgb(240,27,12)"/><text x="786.00" y="190.50"></text></g><g><title>0x7ff6a6166948 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="784" y="724" width="1" height="15" fill="rgb(226,99,42)"/><text x="787.00" y="734.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:28) (2 samples, 0.22%)</title><rect x="784" y="84" width="3" height="15" fill="rgb(245,67,15)"/><text x="787.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.22%)</title><rect x="784" y="100" width="3" height="15" fill="rgb(219,103,6)"/><text x="787.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.22%)</title><rect x="784" y="116" width="3" height="15" fill="rgb(212,20,11)"/><text x="787.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.22%)</title><rect x="784" y="132" width="3" height="15" fill="rgb(225,207,29)"/><text x="787.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.22%)</title><rect x="784" y="148" width="3" height="15" fill="rgb(228,54,5)"/><text x="787.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.22%)</title><rect x="784" y="164" width="3" height="15" fill="rgb(252,64,16)"/><text x="787.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="784" y="180" width="3" height="15" fill="rgb(238,31,43)"/><text x="787.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="784" y="196" width="3" height="15" fill="rgb(221,122,50)"/><text x="787.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="784" y="212" width="3" height="15" fill="rgb(249,142,25)"/><text x="787.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="784" y="228" width="3" height="15" fill="rgb(218,211,17)"/><text x="787.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="784" y="244" width="3" height="15" fill="rgb(249,122,49)"/><text x="787.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.22%)</title><rect x="784" y="260" width="3" height="15" fill="rgb(216,207,48)"/><text x="787.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="784" y="276" width="3" height="15" fill="rgb(253,211,7)"/><text x="787.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="784" y="292" width="3" height="15" fill="rgb(221,31,36)"/><text x="787.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="784" y="308" width="3" height="15" fill="rgb(223,60,8)"/><text x="787.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="784" y="324" width="3" height="15" fill="rgb(248,166,30)"/><text x="787.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="784" y="340" width="3" height="15" fill="rgb(212,42,54)"/><text x="787.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.22%)</title><rect x="784" y="356" width="3" height="15" fill="rgb(245,90,42)"/><text x="787.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="784" y="372" width="3" height="15" fill="rgb(205,221,34)"/><text x="787.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="784" y="388" width="3" height="15" fill="rgb(228,139,12)"/><text x="787.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="784" y="404" width="3" height="15" fill="rgb(225,202,11)"/><text x="787.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="784" y="420" width="3" height="15" fill="rgb(220,15,46)"/><text x="787.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="784" y="436" width="3" height="15" fill="rgb(253,9,53)"/><text x="787.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.22%)</title><rect x="784" y="452" width="3" height="15" fill="rgb(219,11,51)"/><text x="787.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="784" y="468" width="3" height="15" fill="rgb(215,101,30)"/><text x="787.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="784" y="484" width="3" height="15" fill="rgb(236,183,1)"/><text x="787.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.22%)</title><rect x="784" y="500" width="3" height="15" fill="rgb(250,52,1)"/><text x="787.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.22%)</title><rect x="784" y="516" width="3" height="15" fill="rgb(243,109,2)"/><text x="787.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.22%)</title><rect x="784" y="532" width="3" height="15" fill="rgb(214,2,18)"/><text x="787.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="784" y="548" width="3" height="15" fill="rgb(211,39,37)"/><text x="787.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="564" width="3" height="15" fill="rgb(212,51,26)"/><text x="787.00" y="574.50"></text></g><g><title>0x7ff6a6122995 (libdl-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="580" width="3" height="15" fill="rgb(211,58,28)"/><text x="787.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="596" width="3" height="15" fill="rgb(209,169,38)"/><text x="787.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="612" width="3" height="15" fill="rgb(218,219,46)"/><text x="787.00" y="622.50"></text></g><g><title>0x7ff6a6122258 (libdl-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="628" width="3" height="15" fill="rgb(238,43,36)"/><text x="787.00" y="638.50"></text></g><g><title>0x7ff6a616fd7a (ld-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="644" width="3" height="15" fill="rgb(252,226,32)"/><text x="787.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="660" width="3" height="15" fill="rgb(251,219,4)"/><text x="787.00" y="670.50"></text></g><g><title>0x7ff6a6170345 (ld-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="676" width="3" height="15" fill="rgb(212,46,22)"/><text x="787.00" y="686.50"></text></g><g><title>0x7ff6a6168fec (ld-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="692" width="3" height="15" fill="rgb(213,20,45)"/><text x="787.00" y="702.50"></text></g><g><title>0x7ff6a616756b (ld-2.29.so) (2 samples, 0.22%)</title><rect x="784" y="708" width="3" height="15" fill="rgb(240,83,1)"/><text x="787.00" y="718.50"></text></g><g><title>0x7ff6a6166b27 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="785" y="724" width="2" height="15" fill="rgb(235,113,6)"/><text x="788.00" y="734.50"></text></g><g><title>0x7ff6a6166765 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="785" y="740" width="2" height="15" fill="rgb(232,157,36)"/><text x="788.00" y="750.50"></text></g><g><title>0x7ff6a61792c4 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="785" y="756" width="2" height="15" fill="rgb(224,88,24)"/><text x="788.00" y="766.50"></text></g><g><title>0x7ff665b58ff9 (?) (1 samples, 0.11%)</title><rect x="787" y="212" width="1" height="15" fill="rgb(250,87,20)"/><text x="790.00" y="222.50"></text></g><g><title>0x7ff665b53ef6 (?) (1 samples, 0.11%)</title><rect x="787" y="228" width="1" height="15" fill="rgb(246,201,8)"/><text x="790.00" y="238.50"></text></g><g><title>0x7ff665b48962 (?) (1 samples, 0.11%)</title><rect x="787" y="244" width="1" height="15" fill="rgb(229,91,34)"/><text x="790.00" y="254.50"></text></g><g><title>0x7ff665b7c7a7 (?) (1 samples, 0.11%)</title><rect x="787" y="260" width="1" height="15" fill="rgb(217,209,34)"/><text x="790.00" y="270.50"></text></g><g><title>0x7ff665b7c379 (?) (1 samples, 0.11%)</title><rect x="787" y="276" width="1" height="15" fill="rgb(249,24,1)"/><text x="790.00" y="286.50"></text></g><g><title>0x7ff665fda8b8 (?) (1 samples, 0.11%)</title><rect x="787" y="292" width="1" height="15" fill="rgb(225,50,51)"/><text x="790.00" y="302.50"></text></g><g><title>0x7ff665fd8c7f (?) (1 samples, 0.11%)</title><rect x="787" y="308" width="1" height="15" fill="rgb(234,76,5)"/><text x="790.00" y="318.50"></text></g><g><title>0x7ff665fecf25 (?) (1 samples, 0.11%)</title><rect x="787" y="324" width="1" height="15" fill="rgb(253,157,0)"/><text x="790.00" y="334.50"></text></g><g><title>0x7ff665f8a4d0 (?) (1 samples, 0.11%)</title><rect x="787" y="340" width="1" height="15" fill="rgb(244,210,6)"/><text x="790.00" y="350.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="788" y="340" width="1" height="15" fill="rgb(237,174,12)"/><text x="791.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="788" y="356" width="1" height="15" fill="rgb(228,225,2)"/><text x="791.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="788" y="372" width="1" height="15" fill="rgb(243,107,46)"/><text x="791.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="789" y="340" width="1" height="15" fill="rgb(230,70,49)"/><text x="792.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="789" y="356" width="1" height="15" fill="rgb(226,23,32)"/><text x="792.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="789" y="372" width="1" height="15" fill="rgb(252,132,31)"/><text x="792.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="789" y="388" width="1" height="15" fill="rgb(246,133,25)"/><text x="792.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="789" y="404" width="1" height="15" fill="rgb(210,8,27)"/><text x="792.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="789" y="420" width="1" height="15" fill="rgb(248,217,7)"/><text x="792.00" y="430.50"></text></g><g><title>0x7ff6a5e9c028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="789" y="436" width="1" height="15" fill="rgb(206,4,5)"/><text x="792.00" y="446.50"></text></g><g><title>0x7ff6a5e99bdf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="789" y="452" width="1" height="15" fill="rgb(223,169,17)"/><text x="792.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="790" y="340" width="2" height="15" fill="rgb(249,102,50)"/><text x="793.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="790" y="356" width="2" height="15" fill="rgb(253,12,49)"/><text x="793.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="790" y="372" width="2" height="15" fill="rgb(241,98,8)"/><text x="793.00" y="382.50"></text></g><g><title>0x7ff6a5e9aa4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="790" y="388" width="2" height="15" fill="rgb(249,9,0)"/><text x="793.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="792" y="340" width="4" height="15" fill="rgb(231,175,45)"/><text x="795.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="796" y="340" width="5" height="15" fill="rgb(237,193,2)"/><text x="799.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="796" y="356" width="5" height="15" fill="rgb(247,62,19)"/><text x="799.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="796" y="372" width="5" height="15" fill="rgb(249,101,13)"/><text x="799.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="798" y="388" width="3" height="15" fill="rgb(223,181,8)"/><text x="801.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="801" y="340" width="5" height="15" fill="rgb(207,14,18)"/><text x="804.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="805" y="356" width="1" height="15" fill="rgb(223,72,3)"/><text x="808.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="805" y="372" width="1" height="15" fill="rgb(231,82,34)"/><text x="808.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="805" y="388" width="1" height="15" fill="rgb(211,130,27)"/><text x="808.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.12%)</title><rect x="806" y="372" width="13" height="15" fill="rgb(215,133,36)"/><text x="809.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="815" y="388" width="4" height="15" fill="rgb(235,185,1)"/><text x="818.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="372" width="2" height="15" fill="rgb(229,209,49)"/><text x="822.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="388" width="2" height="15" fill="rgb(224,94,28)"/><text x="822.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="404" width="2" height="15" fill="rgb(221,142,3)"/><text x="822.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="420" width="2" height="15" fill="rgb(246,115,34)"/><text x="822.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="436" width="2" height="15" fill="rgb(223,121,35)"/><text x="822.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="452" width="2" height="15" fill="rgb(244,77,29)"/><text x="822.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="468" width="2" height="15" fill="rgb(253,142,18)"/><text x="822.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="484" width="2" height="15" fill="rgb(240,19,33)"/><text x="822.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="500" width="2" height="15" fill="rgb(224,89,18)"/><text x="822.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="819" y="516" width="2" height="15" fill="rgb(226,204,51)"/><text x="822.00" y="526.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="806" y="340" width="16" height="15" fill="rgb(229,191,17)"/><text x="809.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="806" y="356" width="16" height="15" fill="rgb(238,113,10)"/><text x="809.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="821" y="372" width="1" height="15" fill="rgb(251,45,6)"/><text x="824.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="821" y="388" width="1" height="15" fill="rgb(222,217,2)"/><text x="824.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="839" y="356" width="2" height="15" fill="rgb(234,182,20)"/><text x="842.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 1.12%)</title><rect x="880" y="388" width="13" height="15" fill="rgb(240,16,15)"/><text x="883.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.78%)</title><rect x="884" y="404" width="9" height="15" fill="rgb(253,182,32)"/><text x="887.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 5.02%)</title><rect x="841" y="356" width="59" height="15" fill="rgb(214,36,35)"/><text x="844.00" y="366.50">onnxru..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.68%)</title><rect x="868" y="372" width="32" height="15" fill="rgb(207,196,35)"/><text x="871.00" y="382.50">st..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.56%)</title><rect x="893" y="388" width="7" height="15" fill="rgb(245,172,11)"/><text x="896.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="900" y="356" width="6" height="15" fill="rgb(248,177,9)"/><text x="903.00" y="366.50"></text></g><g><title>0x7ff6a5ebadbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="905" y="372" width="1" height="15" fill="rgb(217,44,17)"/><text x="908.00" y="382.50"></text></g><g><title>0x7ff6959677a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="908" y="372" width="1" height="15" fill="rgb(223,132,48)"/><text x="911.00" y="382.50"></text></g><g><title>0x7ff6a5e9a945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="909" y="372" width="1" height="15" fill="rgb(238,37,27)"/><text x="912.00" y="382.50"></text></g><g><title>0x7ff6a5e9a96a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="910" y="372" width="2" height="15" fill="rgb(219,190,26)"/><text x="913.00" y="382.50"></text></g><g><title>0x7ff6a5e9a991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="912" y="372" width="1" height="15" fill="rgb(251,225,36)"/><text x="915.00" y="382.50"></text></g><g><title>0x7ff6a5e9aa55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="913" y="372" width="1" height="15" fill="rgb(250,182,52)"/><text x="916.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="914" y="372" width="3" height="15" fill="rgb(248,130,34)"/><text x="917.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="917" y="372" width="3" height="15" fill="rgb(222,69,30)"/><text x="920.00" y="382.50"></text></g><g><title>0x7ff6a5e9a922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="926" y="388" width="1" height="15" fill="rgb(222,79,2)"/><text x="929.00" y="398.50"></text></g><g><title>0x7ff6a5e9abc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="927" y="388" width="2" height="15" fill="rgb(224,152,49)"/><text x="930.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.01%)</title><rect x="906" y="356" width="24" height="15" fill="rgb(248,28,38)"/><text x="909.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.89%)</title><rect x="920" y="372" width="10" height="15" fill="rgb(218,170,6)"/><text x="923.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="929" y="388" width="1" height="15" fill="rgb(241,145,44)"/><text x="932.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 12.17%)</title><rect x="788" y="260" width="143" height="15" fill="rgb(239,171,17)"/><text x="791.00" y="270.50">onnxruntime::Infer..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 12.17%)</title><rect x="788" y="276" width="143" height="15" fill="rgb(253,195,38)"/><text x="791.00" y="286.50">onnxruntime::Infer..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 12.17%)</title><rect x="788" y="292" width="143" height="15" fill="rgb(233,55,6)"/><text x="791.00" y="302.50">onnxruntime::utils..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 12.17%)</title><rect x="788" y="308" width="143" height="15" fill="rgb(222,159,44)"/><text x="791.00" y="318.50">onnxruntime::utils..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 12.17%)</title><rect x="788" y="324" width="143" height="15" fill="rgb(238,224,9)"/><text x="791.00" y="334.50">onnxruntime::Seque..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 9.26%)</title><rect x="822" y="340" width="109" height="15" fill="rgb(249,182,41)"/><text x="825.00" y="350.50">onnxruntime::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="930" y="356" width="1" height="15" fill="rgb(206,201,54)"/><text x="933.00" y="366.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:18) (111 samples, 12.39%)</title><rect x="787" y="100" width="146" height="15" fill="rgb(228,153,33)"/><text x="790.00" y="110.50">profile (bench_Ada..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (111 samples, 12.39%)</title><rect x="787" y="116" width="146" height="15" fill="rgb(229,206,54)"/><text x="790.00" y="126.50">time_predict (mlpr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (111 samples, 12.39%)</title><rect x="787" y="132" width="146" height="15" fill="rgb(207,60,44)"/><text x="790.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (111 samples, 12.39%)</title><rect x="787" y="148" width="146" height="15" fill="rgb(247,19,15)"/><text x="790.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (111 samples, 12.39%)</title><rect x="787" y="164" width="146" height="15" fill="rgb(251,155,44)"/><text x="790.00" y="174.50">_run_whole_runtime..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (111 samples, 12.39%)</title><rect x="787" y="180" width="146" height="15" fill="rgb(230,47,17)"/><text x="790.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (onnxruntime/capi/session.py:136) (111 samples, 12.39%)</title><rect x="787" y="196" width="146" height="15" fill="rgb(247,163,17)"/><text x="790.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 12.28%)</title><rect x="788" y="212" width="145" height="15" fill="rgb(241,73,22)"/><text x="791.00" y="222.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 12.28%)</title><rect x="788" y="228" width="145" height="15" fill="rgb(235,64,36)"/><text x="791.00" y="238.50">void pybind11::cpp..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 12.28%)</title><rect x="788" y="244" width="145" height="15" fill="rgb(247,52,34)"/><text x="791.00" y="254.50">onnxruntime::pytho..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="931" y="260" width="2" height="15" fill="rgb(208,208,7)"/><text x="934.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="931" y="276" width="2" height="15" fill="rgb(215,5,43)"/><text x="934.00" y="286.50"></text></g><g><title>0x7ff6941f098e (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="931" y="292" width="2" height="15" fill="rgb(209,186,0)"/><text x="934.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="935" y="340" width="2" height="15" fill="rgb(249,203,7)"/><text x="938.00" y="350.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="340" width="1" height="15" fill="rgb(219,185,10)"/><text x="940.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="356" width="1" height="15" fill="rgb(225,148,35)"/><text x="940.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="937" y="372" width="1" height="15" fill="rgb(250,97,29)"/><text x="940.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="938" y="340" width="1" height="15" fill="rgb(233,106,31)"/><text x="941.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="938" y="356" width="1" height="15" fill="rgb(251,78,10)"/><text x="941.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="938" y="372" width="1" height="15" fill="rgb(216,32,7)"/><text x="941.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="938" y="388" width="1" height="15" fill="rgb(247,13,20)"/><text x="941.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="938" y="404" width="1" height="15" fill="rgb(254,119,51)"/><text x="941.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="420" width="1" height="15" fill="rgb(212,96,48)"/><text x="941.00" y="430.50"></text></g><g><title>0x7ff6a5e9c028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="436" width="1" height="15" fill="rgb(240,11,35)"/><text x="941.00" y="446.50"></text></g><g><title>0x7ff6a5e99c1c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="452" width="1" height="15" fill="rgb(208,127,33)"/><text x="941.00" y="462.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="939" y="340" width="2" height="15" fill="rgb(242,228,40)"/><text x="942.00" y="350.50"></text></g><g><title>0x7ff6a5e9a90e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="941" y="388" width="1" height="15" fill="rgb(225,206,51)"/><text x="944.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="941" y="340" width="2" height="15" fill="rgb(231,59,25)"/><text x="944.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="941" y="356" width="2" height="15" fill="rgb(229,192,50)"/><text x="944.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="941" y="372" width="2" height="15" fill="rgb(213,75,8)"/><text x="944.00" y="382.50"></text></g><g><title>0x7ff6a5e9aa4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="942" y="388" width="1" height="15" fill="rgb(209,68,42)"/><text x="945.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.56%)</title><rect x="943" y="340" width="7" height="15" fill="rgb(229,80,42)"/><text x="946.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="950" y="340" width="16" height="15" fill="rgb(228,116,44)"/><text x="953.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="950" y="356" width="16" height="15" fill="rgb(215,58,46)"/><text x="953.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.34%)</title><rect x="950" y="372" width="16" height="15" fill="rgb(223,169,41)"/><text x="953.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="958" y="388" width="8" height="15" fill="rgb(243,99,49)"/><text x="961.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="966" y="340" width="2" height="15" fill="rgb(211,188,32)"/><text x="969.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="968" y="340" width="8" height="15" fill="rgb(220,77,15)"/><text x="971.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="968" y="356" width="8" height="15" fill="rgb(234,119,41)"/><text x="971.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="968" y="372" width="8" height="15" fill="rgb(228,46,45)"/><text x="971.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="975" y="388" width="1" height="15" fill="rgb(241,223,42)"/><text x="978.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="976" y="340" width="1" height="15" fill="rgb(252,202,38)"/><text x="979.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="976" y="356" width="1" height="15" fill="rgb(234,134,9)"/><text x="979.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="976" y="372" width="1" height="15" fill="rgb(227,130,47)"/><text x="979.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1016" y="356" width="1" height="15" fill="rgb(214,2,13)"/><text x="1019.00" y="366.50"></text></g><g><title>0x7ff695966d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1082" y="404" width="1" height="15" fill="rgb(219,110,42)"/><text x="1085.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (21 samples, 2.34%)</title><rect x="1078" y="388" width="27" height="15" fill="rgb(221,217,14)"/><text x="1081.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (17 samples, 1.90%)</title><rect x="1083" y="404" width="22" height="15" fill="rgb(245,164,6)"/><text x="1086.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 9.15%)</title><rect x="1017" y="356" width="108" height="15" fill="rgb(243,102,35)"/><text x="1020.00" y="366.50">onnxruntime::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 5.36%)</title><rect x="1062" y="372" width="63" height="15" fill="rgb(233,52,43)"/><text x="1065.00" y="382.50">std::_..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (15 samples, 1.67%)</title><rect x="1105" y="388" width="20" height="15" fill="rgb(218,26,12)"/><text x="1108.00" y="398.50"></text></g><g><title>0x7ff6a5ebad50 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1129" y="372" width="3" height="15" fill="rgb(233,15,40)"/><text x="1132.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.67%)</title><rect x="1125" y="356" width="8" height="15" fill="rgb(233,73,21)"/><text x="1128.00" y="366.50"></text></g><g><title>0x7ff6a5ebadae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1132" y="372" width="1" height="15" fill="rgb(218,90,20)"/><text x="1135.00" y="382.50"></text></g><g><title>0x7ff6a5e9a900 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="372" width="1" height="15" fill="rgb(244,171,5)"/><text x="1140.00" y="382.50"></text></g><g><title>0x7ff6a5e9a971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="372" width="1" height="15" fill="rgb(235,132,49)"/><text x="1141.00" y="382.50"></text></g><g><title>0x7ff6a5e9a975 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1139" y="372" width="2" height="15" fill="rgb(215,136,24)"/><text x="1142.00" y="382.50"></text></g><g><title>0x7ff6a5e9a991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1141" y="372" width="1" height="15" fill="rgb(253,83,36)"/><text x="1144.00" y="382.50"></text></g><g><title>0x7ff6a5e9a998 (libc-2.29.so) (3 samples, 0.33%)</title><rect x="1142" y="372" width="4" height="15" fill="rgb(224,119,43)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7ff6a5e9abc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(242,181,48)"/><text x="1149.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1147" y="372" width="3" height="15" fill="rgb(238,127,9)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7ff6959677a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1157" y="388" width="1" height="15" fill="rgb(211,67,16)"/><text x="1160.00" y="398.50"></text></g><g><title>0x7ff6a5e9a90a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1158" y="388" width="3" height="15" fill="rgb(248,195,1)"/><text x="1161.00" y="398.50"></text></g><g><title>0x7ff6a5e9a95e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1161" y="388" width="1" height="15" fill="rgb(226,205,1)"/><text x="1164.00" y="398.50"></text></g><g><title>0x7ff6a5e9a965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1162" y="388" width="1" height="15" fill="rgb(252,184,30)"/><text x="1165.00" y="398.50"></text></g><g><title>0x7ff6a5e9a96a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1163" y="388" width="3" height="15" fill="rgb(213,100,51)"/><text x="1166.00" y="398.50"></text></g><g><title>0x7ff6a5e9a991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="388" width="1" height="15" fill="rgb(221,221,7)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7ff6a5e9a998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="388" width="1" height="15" fill="rgb(209,219,8)"/><text x="1170.00" y="398.50"></text></g><g><title>0x7ff6a5e9aa41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(222,157,19)"/><text x="1171.00" y="398.50"></text></g><g><title>0x7ff6a5e9aa55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(211,14,35)"/><text x="1173.00" y="398.50"></text></g><g><title>0x7ff6a5e9abc0 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1171" y="388" width="3" height="15" fill="rgb(211,8,20)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7ff6a5e9abd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(215,224,19)"/><text x="1177.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1175" y="388" width="1" height="15" fill="rgb(253,199,27)"/><text x="1178.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.79%)</title><rect x="1133" y="356" width="45" height="15" fill="rgb(230,69,6)"/><text x="1136.00" y="366.50">std:..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.34%)</title><rect x="1150" y="372" width="28" height="15" fill="rgb(243,173,22)"/><text x="1153.00" y="382.50">s..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1176" y="388" width="2" height="15" fill="rgb(216,110,22)"/><text x="1179.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 17.41%)</title><rect x="977" y="340" width="206" height="15" fill="rgb(247,165,8)"/><text x="980.00" y="350.50">onnxruntime::ml::TreeEnsemb..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (4 samples, 0.45%)</title><rect x="1178" y="356" width="5" height="15" fill="rgb(252,195,9)"/><text x="1181.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1183" y="356" width="1" height="15" fill="rgb(229,180,31)"/><text x="1186.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1183" y="372" width="1" height="15" fill="rgb(219,99,1)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 21.21%)</title><rect x="935" y="260" width="251" height="15" fill="rgb(231,61,20)"/><text x="938.00" y="270.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 21.21%)</title><rect x="935" y="276" width="251" height="15" fill="rgb(213,80,50)"/><text x="938.00" y="286.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 21.21%)</title><rect x="935" y="292" width="251" height="15" fill="rgb(224,115,51)"/><text x="938.00" y="302.50">onnxruntime::utils::ExecuteGraph ..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 21.21%)</title><rect x="935" y="308" width="251" height="15" fill="rgb(225,11,9)"/><text x="938.00" y="318.50">onnxruntime::utils::ExecuteGraphI..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 21.21%)</title><rect x="935" y="324" width="251" height="15" fill="rgb(223,151,19)"/><text x="938.00" y="334.50">onnxruntime::SequentialExecutor::..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(225,15,17)"/><text x="1186.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1184" y="356" width="2" height="15" fill="rgb(249,35,0)"/><text x="1187.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1184" y="372" width="2" height="15" fill="rgb(250,41,19)"/><text x="1187.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="388" width="2" height="15" fill="rgb(244,154,38)"/><text x="1187.00" y="398.50"></text></g><g><title>0x7ff6a5e9c028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="404" width="2" height="15" fill="rgb(254,175,14)"/><text x="1187.00" y="414.50"></text></g><g><title>0x7ff6a5e99bcc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="420" width="2" height="15" fill="rgb(241,58,47)"/><text x="1187.00" y="430.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(218,88,43)"/><text x="1189.00" y="270.50"></text></g><g><title>all (896 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(242,197,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:52) (308 samples, 34.38%)</title><rect x="784" y="52" width="406" height="15" fill="rgb(228,23,13)"/><text x="787.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_4_..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:51) (308 samples, 34.38%)</title><rect x="784" y="68" width="406" height="15" fill="rgb(234,210,1)"/><text x="787.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl_1000..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:29) (306 samples, 34.15%)</title><rect x="787" y="84" width="403" height="15" fill="rgb(245,184,11)"/><text x="790.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_4_12_float_.py:23) (195 samples, 21.76%)</title><rect x="933" y="100" width="257" height="15" fill="rgb(231,23,43)"/><text x="936.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (193 samples, 21.54%)</title><rect x="935" y="116" width="255" height="15" fill="rgb(250,225,20)"/><text x="938.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (193 samples, 21.54%)</title><rect x="935" y="132" width="255" height="15" fill="rgb(244,181,31)"/><text x="938.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (193 samples, 21.54%)</title><rect x="935" y="148" width="255" height="15" fill="rgb(249,85,36)"/><text x="938.00" y="158.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (193 samples, 21.54%)</title><rect x="935" y="164" width="255" height="15" fill="rgb(240,159,30)"/><text x="938.00" y="174.50">_run_whole_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (193 samples, 21.54%)</title><rect x="935" y="180" width="255" height="15" fill="rgb(218,65,20)"/><text x="938.00" y="190.50">run (mlprodict/onnxrt/ops_whole/se..</text></g><g><title>run (onnxruntime/capi/session.py:136) (193 samples, 21.54%)</title><rect x="935" y="196" width="255" height="15" fill="rgb(205,31,34)"/><text x="938.00" y="206.50">run (onnxruntime/capi/session.py:1..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (193 samples, 21.54%)</title><rect x="935" y="212" width="255" height="15" fill="rgb(252,102,2)"/><text x="938.00" y="222.50">pybind11::cpp_function::dispatcher..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (193 samples, 21.54%)</title><rect x="935" y="228" width="255" height="15" fill="rgb(209,187,27)"/><text x="938.00" y="238.50">void pybind11::cpp_function::initi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (193 samples, 21.54%)</title><rect x="935" y="244" width="255" height="15" fill="rgb(229,219,48)"/><text x="938.00" y="254.50">onnxruntime::python::addObjectMeth..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(214,208,33)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(226,130,24)"/><text x="1191.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(247,49,22)"/><text x="1191.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(250,75,22)"/><text x="1191.00" y="318.50"></text></g></g></svg>