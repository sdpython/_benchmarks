<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:31) (1 samples, 0.25%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(250,137,33)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:11) (1 samples, 0.25%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(211,65,41)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:41) (1 samples, 0.25%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(205,206,20)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.25%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(208,179,7)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.25%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(247,221,31)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.25%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(244,42,19)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:244) (1 samples, 0.25%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(248,226,15)"/><text x="13.00" y="158.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:18) (2 samples, 0.51%)</title><rect x="12" y="100" width="6" height="15" fill="rgb(214,124,11)"/><text x="15.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.51%)</title><rect x="12" y="116" width="6" height="15" fill="rgb(242,66,45)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.51%)</title><rect x="12" y="132" width="6" height="15" fill="rgb(253,80,20)"/><text x="15.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.51%)</title><rect x="12" y="148" width="6" height="15" fill="rgb(236,74,11)"/><text x="15.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.25%)</title><rect x="15" y="164" width="3" height="15" fill="rgb(211,57,26)"/><text x="18.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.25%)</title><rect x="15" y="180" width="3" height="15" fill="rgb(225,95,43)"/><text x="18.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.25%)</title><rect x="15" y="196" width="3" height="15" fill="rgb(253,202,52)"/><text x="18.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.25%)</title><rect x="15" y="212" width="3" height="15" fill="rgb(247,106,46)"/><text x="18.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.25%)</title><rect x="15" y="228" width="3" height="15" fill="rgb(222,36,33)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.27%)</title><rect x="36" y="180" width="15" height="15" fill="rgb(248,22,34)"/><text x="39.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.25%)</title><rect x="48" y="196" width="3" height="15" fill="rgb(248,213,31)"/><text x="51.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (9 samples, 2.28%)</title><rect x="27" y="148" width="27" height="15" fill="rgb(224,17,26)"/><text x="30.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 2.28%)</title><rect x="27" y="164" width="27" height="15" fill="rgb(253,55,18)"/><text x="30.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.25%)</title><rect x="51" y="180" width="3" height="15" fill="rgb(218,203,12)"/><text x="54.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.25%)</title><rect x="60" y="196" width="3" height="15" fill="rgb(237,44,10)"/><text x="63.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.25%)</title><rect x="60" y="212" width="3" height="15" fill="rgb(253,54,52)"/><text x="63.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.25%)</title><rect x="63" y="212" width="3" height="15" fill="rgb(238,132,39)"/><text x="66.00" y="222.50"></text></g><g><title>0x7efd0381d1f2 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="75" y="228" width="3" height="15" fill="rgb(207,160,43)"/><text x="78.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (8 samples, 2.03%)</title><rect x="57" y="180" width="24" height="15" fill="rgb(221,202,28)"/><text x="60.00" y="190.50">d..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.52%)</title><rect x="63" y="196" width="18" height="15" fill="rgb(214,44,51)"/><text x="66.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.27%)</title><rect x="66" y="212" width="15" height="15" fill="rgb(232,84,3)"/><text x="69.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="78" y="228" width="3" height="15" fill="rgb(247,160,38)"/><text x="81.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.25%)</title><rect x="87" y="196" width="3" height="15" fill="rgb(214,159,28)"/><text x="90.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.25%)</title><rect x="90" y="196" width="3" height="15" fill="rgb(232,122,22)"/><text x="93.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.51%)</title><rect x="93" y="196" width="6" height="15" fill="rgb(228,193,31)"/><text x="96.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.25%)</title><rect x="96" y="212" width="3" height="15" fill="rgb(219,175,44)"/><text x="99.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.51%)</title><rect x="102" y="228" width="6" height="15" fill="rgb(215,21,31)"/><text x="105.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.02%)</title><rect x="99" y="196" width="12" height="15" fill="rgb(244,221,2)"/><text x="102.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.76%)</title><rect x="102" y="212" width="9" height="15" fill="rgb(212,191,32)"/><text x="105.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.25%)</title><rect x="108" y="228" width="3" height="15" fill="rgb(223,137,9)"/><text x="111.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.76%)</title><rect x="111" y="196" width="9" height="15" fill="rgb(242,29,23)"/><text x="114.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.51%)</title><rect x="114" y="212" width="6" height="15" fill="rgb(246,147,8)"/><text x="117.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.25%)</title><rect x="117" y="228" width="3" height="15" fill="rgb(227,147,4)"/><text x="120.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.25%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(248,61,5)"/><text x="126.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.25%)</title><rect x="126" y="212" width="3" height="15" fill="rgb(229,3,23)"/><text x="129.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.02%)</title><rect x="120" y="196" width="12" height="15" fill="rgb(205,225,24)"/><text x="123.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.25%)</title><rect x="129" y="212" width="3" height="15" fill="rgb(233,111,21)"/><text x="132.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.25%)</title><rect x="132" y="196" width="3" height="15" fill="rgb(214,1,11)"/><text x="135.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.25%)</title><rect x="132" y="212" width="3" height="15" fill="rgb(252,22,50)"/><text x="135.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.25%)</title><rect x="132" y="228" width="3" height="15" fill="rgb(230,31,11)"/><text x="135.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.51%)</title><rect x="135" y="196" width="6" height="15" fill="rgb(253,227,16)"/><text x="138.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.51%)</title><rect x="135" y="212" width="6" height="15" fill="rgb(213,179,13)"/><text x="138.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.25%)</title><rect x="138" y="228" width="3" height="15" fill="rgb(218,190,17)"/><text x="141.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.51%)</title><rect x="144" y="212" width="6" height="15" fill="rgb(220,154,34)"/><text x="147.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 1.02%)</title><rect x="141" y="196" width="12" height="15" fill="rgb(223,56,33)"/><text x="144.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.25%)</title><rect x="150" y="212" width="3" height="15" fill="rgb(247,123,33)"/><text x="153.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (25 samples, 6.35%)</title><rect x="81" y="180" width="75" height="15" fill="rgb(205,207,47)"/><text x="84.00" y="190.50">decision..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.25%)</title><rect x="153" y="196" width="3" height="15" fill="rgb(230,110,6)"/><text x="156.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.25%)</title><rect x="156" y="228" width="3" height="15" fill="rgb(223,41,52)"/><text x="159.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.25%)</title><rect x="156" y="244" width="3" height="15" fill="rgb(229,216,39)"/><text x="159.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.25%)</title><rect x="159" y="276" width="3" height="15" fill="rgb(210,139,8)"/><text x="162.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.25%)</title><rect x="159" y="292" width="3" height="15" fill="rgb(207,203,25)"/><text x="162.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.51%)</title><rect x="159" y="260" width="6" height="15" fill="rgb(213,15,27)"/><text x="162.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.25%)</title><rect x="162" y="276" width="3" height="15" fill="rgb(245,138,1)"/><text x="165.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.25%)</title><rect x="162" y="292" width="3" height="15" fill="rgb(241,160,47)"/><text x="165.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.51%)</title><rect x="165" y="308" width="6" height="15" fill="rgb(253,202,3)"/><text x="168.00" y="318.50"></text></g><g><title>0x7efd0381cd67 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="171" y="324" width="3" height="15" fill="rgb(221,59,18)"/><text x="174.00" y="334.50"></text></g><g><title>0x7efd0381cd6f (libc-2.29.so) (3 samples, 0.76%)</title><rect x="174" y="324" width="9" height="15" fill="rgb(230,209,51)"/><text x="177.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 2.28%)</title><rect x="165" y="260" width="27" height="15" fill="rgb(254,204,19)"/><text x="168.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 2.28%)</title><rect x="165" y="276" width="27" height="15" fill="rgb(230,169,44)"/><text x="168.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (9 samples, 2.28%)</title><rect x="165" y="292" width="27" height="15" fill="rgb(207,120,43)"/><text x="168.00" y="302.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (7 samples, 1.78%)</title><rect x="171" y="308" width="21" height="15" fill="rgb(248,101,27)"/><text x="174.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (3 samples, 0.76%)</title><rect x="183" y="324" width="9" height="15" fill="rgb(215,138,30)"/><text x="186.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.25%)</title><rect x="192" y="308" width="3" height="15" fill="rgb(229,88,22)"/><text x="195.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.25%)</title><rect x="192" y="324" width="3" height="15" fill="rgb(252,13,53)"/><text x="195.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.76%)</title><rect x="192" y="276" width="9" height="15" fill="rgb(231,8,15)"/><text x="195.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.76%)</title><rect x="192" y="292" width="9" height="15" fill="rgb(228,198,4)"/><text x="195.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.51%)</title><rect x="195" y="308" width="6" height="15" fill="rgb(233,103,19)"/><text x="198.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.51%)</title><rect x="195" y="324" width="6" height="15" fill="rgb(210,178,31)"/><text x="198.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.06%)</title><rect x="156" y="212" width="48" height="15" fill="rgb(243,189,33)"/><text x="159.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 3.81%)</title><rect x="159" y="228" width="45" height="15" fill="rgb(233,202,12)"/><text x="162.00" y="238.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 3.81%)</title><rect x="159" y="244" width="45" height="15" fill="rgb(252,174,31)"/><text x="162.00" y="254.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 1.02%)</title><rect x="192" y="260" width="12" height="15" fill="rgb(217,20,45)"/><text x="195.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.25%)</title><rect x="201" y="276" width="3" height="15" fill="rgb(248,13,9)"/><text x="204.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1849) (1 samples, 0.25%)</title><rect x="201" y="292" width="3" height="15" fill="rgb(215,108,4)"/><text x="204.00" y="302.50"></text></g><g><title>array_add (number.c:330) (17 samples, 4.31%)</title><rect x="156" y="196" width="51" height="15" fill="rgb(211,183,25)"/><text x="159.00" y="206.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.25%)</title><rect x="204" y="212" width="3" height="15" fill="rgb(226,21,52)"/><text x="207.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="207" y="196" width="3" height="15" fill="rgb(211,30,5)"/><text x="210.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.25%)</title><rect x="207" y="212" width="3" height="15" fill="rgb(253,223,48)"/><text x="210.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.76%)</title><rect x="210" y="212" width="9" height="15" fill="rgb(222,211,51)"/><text x="213.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.76%)</title><rect x="219" y="212" width="9" height="15" fill="rgb(239,119,46)"/><text x="222.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:39) (1 samples, 0.25%)</title><rect x="228" y="260" width="3" height="15" fill="rgb(242,31,21)"/><text x="231.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.51%)</title><rect x="228" y="212" width="6" height="15" fill="rgb(249,221,39)"/><text x="231.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.51%)</title><rect x="228" y="228" width="6" height="15" fill="rgb(246,4,41)"/><text x="231.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.51%)</title><rect x="228" y="244" width="6" height="15" fill="rgb(209,185,9)"/><text x="231.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.25%)</title><rect x="231" y="260" width="3" height="15" fill="rgb(205,158,51)"/><text x="234.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.25%)</title><rect x="234" y="244" width="3" height="15" fill="rgb(240,192,51)"/><text x="237.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1076) (1 samples, 0.25%)</title><rect x="234" y="260" width="3" height="15" fill="rgb(244,130,10)"/><text x="237.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.25%)</title><rect x="237" y="260" width="3" height="15" fill="rgb(246,169,37)"/><text x="240.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.51%)</title><rect x="237" y="244" width="6" height="15" fill="rgb(252,14,5)"/><text x="240.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.25%)</title><rect x="240" y="260" width="3" height="15" fill="rgb(245,181,1)"/><text x="243.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.25%)</title><rect x="240" y="276" width="3" height="15" fill="rgb(242,1,0)"/><text x="243.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.25%)</title><rect x="240" y="292" width="3" height="15" fill="rgb(245,3,40)"/><text x="243.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="240" y="308" width="3" height="15" fill="rgb(221,24,18)"/><text x="243.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="240" y="324" width="3" height="15" fill="rgb(248,182,15)"/><text x="243.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="240" y="340" width="3" height="15" fill="rgb(217,51,36)"/><text x="243.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.25%)</title><rect x="240" y="356" width="3" height="15" fill="rgb(241,15,23)"/><text x="243.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.25%)</title><rect x="240" y="372" width="3" height="15" fill="rgb(250,58,54)"/><text x="243.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="240" y="388" width="3" height="15" fill="rgb(240,26,32)"/><text x="243.00" y="398.50"></text></g><g><title>0x7efd037fe463 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="240" y="404" width="3" height="15" fill="rgb(217,54,52)"/><text x="243.00" y="414.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2995) (1 samples, 0.25%)</title><rect x="243" y="244" width="3" height="15" fill="rgb(249,190,15)"/><text x="246.00" y="254.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.25%)</title><rect x="243" y="260" width="3" height="15" fill="rgb(217,149,53)"/><text x="246.00" y="270.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="246" y="292" width="3" height="15" fill="rgb(251,203,7)"/><text x="249.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="246" y="308" width="3" height="15" fill="rgb(235,188,50)"/><text x="249.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (65 samples, 16.50%)</title><rect x="57" y="164" width="195" height="15" fill="rgb(208,88,34)"/><text x="60.00" y="174.50">_predict_proba_lr (sklear..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (32 samples, 8.12%)</title><rect x="156" y="180" width="96" height="15" fill="rgb(240,77,31)"/><text x="159.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (14 samples, 3.55%)</title><rect x="210" y="196" width="42" height="15" fill="rgb(244,168,44)"/><text x="213.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.52%)</title><rect x="234" y="212" width="18" height="15" fill="rgb(216,216,11)"/><text x="237.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (6 samples, 1.52%)</title><rect x="234" y="228" width="18" height="15" fill="rgb(205,16,40)"/><text x="237.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.51%)</title><rect x="246" y="244" width="6" height="15" fill="rgb(228,82,34)"/><text x="249.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.51%)</title><rect x="246" y="260" width="6" height="15" fill="rgb(245,224,18)"/><text x="249.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="246" y="276" width="6" height="15" fill="rgb(251,179,2)"/><text x="249.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="249" y="292" width="3" height="15" fill="rgb(248,135,12)"/><text x="252.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.25%)</title><rect x="252" y="196" width="3" height="15" fill="rgb(233,19,39)"/><text x="255.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.25%)</title><rect x="252" y="212" width="3" height="15" fill="rgb(237,52,13)"/><text x="255.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.25%)</title><rect x="252" y="228" width="3" height="15" fill="rgb(244,101,10)"/><text x="255.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.25%)</title><rect x="258" y="244" width="3" height="15" fill="rgb(254,35,29)"/><text x="261.00" y="254.50"></text></g><g><title>strides_to_terms (mem_overlap.c:724) (1 samples, 0.25%)</title><rect x="258" y="260" width="3" height="15" fill="rgb(205,105,21)"/><text x="261.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.25%)</title><rect x="261" y="244" width="3" height="15" fill="rgb(212,74,31)"/><text x="264.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.25%)</title><rect x="261" y="260" width="3" height="15" fill="rgb(246,8,13)"/><text x="264.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="261" y="276" width="3" height="15" fill="rgb(225,27,24)"/><text x="264.00" y="286.50"></text></g><g><title>0x7efd037b4a7e (libc-2.29.so) (1 samples, 0.25%)</title><rect x="261" y="292" width="3" height="15" fill="rgb(246,137,14)"/><text x="264.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (4 samples, 1.02%)</title><rect x="255" y="212" width="12" height="15" fill="rgb(235,64,10)"/><text x="258.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 1.02%)</title><rect x="255" y="228" width="12" height="15" fill="rgb(244,123,28)"/><text x="258.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.25%)</title><rect x="264" y="244" width="3" height="15" fill="rgb(233,42,40)"/><text x="267.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.25%)</title><rect x="264" y="260" width="3" height="15" fill="rgb(239,65,31)"/><text x="267.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:396) (1 samples, 0.25%)</title><rect x="264" y="276" width="3" height="15" fill="rgb(209,163,23)"/><text x="267.00" y="286.50"></text></g><g><title>to_64 (npy_extint128.h:83) (1 samples, 0.25%)</title><rect x="264" y="292" width="3" height="15" fill="rgb(230,65,46)"/><text x="267.00" y="302.50"></text></g><g><title>0x7efce5c029da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="267" y="244" width="3" height="15" fill="rgb(230,28,39)"/><text x="270.00" y="254.50"></text></g><g><title>0x7efce5c029dd (?) (1 samples, 0.25%)</title><rect x="270" y="244" width="3" height="15" fill="rgb(241,128,39)"/><text x="273.00" y="254.50"></text></g><g><title>0x7efce5c23265 (?) (1 samples, 0.25%)</title><rect x="270" y="260" width="3" height="15" fill="rgb(214,62,21)"/><text x="273.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.25%)</title><rect x="270" y="276" width="3" height="15" fill="rgb(206,130,15)"/><text x="273.00" y="286.50"></text></g><g><title>0x7efd039cebb4 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="270" y="292" width="3" height="15" fill="rgb(216,53,47)"/><text x="273.00" y="302.50"></text></g><g><title>0x7efce5d2c9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.76%)</title><rect x="279" y="276" width="9" height="15" fill="rgb(207,79,48)"/><text x="282.00" y="286.50"></text></g><g><title>0x7efd039ceba0 (libm-2.29.so) (2 samples, 0.51%)</title><rect x="300" y="292" width="6" height="15" fill="rgb(227,227,35)"/><text x="303.00" y="302.50"></text></g><g><title>0x7efd039cebe7 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="306" y="292" width="3" height="15" fill="rgb(228,125,42)"/><text x="309.00" y="302.50"></text></g><g><title>0x7efd039cebf9 (libm-2.29.so) (3 samples, 0.76%)</title><rect x="309" y="292" width="9" height="15" fill="rgb(226,105,16)"/><text x="312.00" y="302.50"></text></g><g><title>0x7efd039cec07 (libm-2.29.so) (3 samples, 0.76%)</title><rect x="318" y="292" width="9" height="15" fill="rgb(245,52,30)"/><text x="321.00" y="302.50"></text></g><g><title>0x7efd039cec2e (libm-2.29.so) (2 samples, 0.51%)</title><rect x="327" y="292" width="6" height="15" fill="rgb(208,159,51)"/><text x="330.00" y="302.50"></text></g><g><title>0x7efd039cec3e (libm-2.29.so) (1 samples, 0.25%)</title><rect x="333" y="292" width="3" height="15" fill="rgb(245,120,52)"/><text x="336.00" y="302.50"></text></g><g><title>0x7efd039cec56 (libm-2.29.so) (3 samples, 0.76%)</title><rect x="336" y="292" width="9" height="15" fill="rgb(220,217,5)"/><text x="339.00" y="302.50"></text></g><g><title>0x7efd039cec6a (libm-2.29.so) (2 samples, 0.51%)</title><rect x="345" y="292" width="6" height="15" fill="rgb(251,165,36)"/><text x="348.00" y="302.50"></text></g><g><title>0x7efce5c23265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (27 samples, 6.85%)</title><rect x="273" y="260" width="81" height="15" fill="rgb(213,121,21)"/><text x="276.00" y="270.50">0x7efce5c..</text></g><g><title>exp (libm-2.29.so) (22 samples, 5.58%)</title><rect x="288" y="276" width="66" height="15" fill="rgb(231,87,47)"/><text x="291.00" y="286.50">exp (li..</text></g><g><title>0x7efd039cec7b (libm-2.29.so) (1 samples, 0.25%)</title><rect x="351" y="292" width="3" height="15" fill="rgb(249,215,48)"/><text x="354.00" y="302.50"></text></g><g><title>0x7efce5c23275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="354" y="260" width="3" height="15" fill="rgb(218,114,36)"/><text x="357.00" y="270.50"></text></g><g><title>0x7efce5c029dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (41 samples, 10.41%)</title><rect x="273" y="244" width="123" height="15" fill="rgb(244,64,29)"/><text x="276.00" y="254.50">0x7efce5c029dd ..</text></g><g><title>0x7efce5c23279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.30%)</title><rect x="357" y="260" width="39" height="15" fill="rgb(237,89,49)"/><text x="360.00" y="270.50">0x7..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (44 samples, 11.17%)</title><rect x="267" y="228" width="132" height="15" fill="rgb(220,39,29)"/><text x="270.00" y="238.50">trivial_two_oper..</text></g><g><title>0x7efce5c029e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="396" y="244" width="3" height="15" fill="rgb(213,156,22)"/><text x="399.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (50 samples, 12.69%)</title><rect x="252" y="164" width="150" height="15" fill="rgb(252,221,26)"/><text x="255.00" y="174.50">_predict_proba_lr (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (50 samples, 12.69%)</title><rect x="252" y="180" width="150" height="15" fill="rgb(222,220,36)"/><text x="255.00" y="190.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (49 samples, 12.44%)</title><rect x="255" y="196" width="147" height="15" fill="rgb(227,54,25)"/><text x="258.00" y="206.50">PyUFunc_GenericFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (45 samples, 11.42%)</title><rect x="267" y="212" width="135" height="15" fill="rgb(215,155,36)"/><text x="270.00" y="222.50">execute_legacy_uf..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.25%)</title><rect x="399" y="228" width="3" height="15" fill="rgb(253,207,38)"/><text x="402.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="399" y="244" width="3" height="15" fill="rgb(241,62,18)"/><text x="402.00" y="254.50"></text></g><g><title>0x7efd0381d14a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="405" y="180" width="3" height="15" fill="rgb(252,57,14)"/><text x="408.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.51%)</title><rect x="408" y="180" width="6" height="15" fill="rgb(214,127,35)"/><text x="411.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (2 samples, 0.51%)</title><rect x="408" y="196" width="6" height="15" fill="rgb(248,69,50)"/><text x="411.00" y="206.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.25%)</title><rect x="414" y="180" width="3" height="15" fill="rgb(227,74,47)"/><text x="417.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.25%)</title><rect x="414" y="196" width="3" height="15" fill="rgb(206,160,53)"/><text x="417.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.25%)</title><rect x="414" y="212" width="3" height="15" fill="rgb(236,107,14)"/><text x="417.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.25%)</title><rect x="414" y="228" width="3" height="15" fill="rgb(250,16,8)"/><text x="417.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.25%)</title><rect x="414" y="244" width="3" height="15" fill="rgb(234,205,11)"/><text x="417.00" y="254.50"></text></g><g><title>array_reshape (methods.c:211) (1 samples, 0.25%)</title><rect x="417" y="180" width="3" height="15" fill="rgb(231,113,8)"/><text x="420.00" y="190.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.25%)</title><rect x="417" y="196" width="3" height="15" fill="rgb(239,192,38)"/><text x="420.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.25%)</title><rect x="417" y="212" width="3" height="15" fill="rgb(251,102,42)"/><text x="420.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.25%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(224,148,18)"/><text x="438.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(223,151,5)"/><text x="438.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.25%)</title><rect x="435" y="260" width="3" height="15" fill="rgb(215,113,32)"/><text x="438.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.25%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(249,112,0)"/><text x="438.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.25%)</title><rect x="435" y="292" width="3" height="15" fill="rgb(250,10,17)"/><text x="438.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.25%)</title><rect x="435" y="308" width="3" height="15" fill="rgb(241,88,47)"/><text x="438.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.25%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(241,132,47)"/><text x="441.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.25%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(219,18,46)"/><text x="441.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.25%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(249,17,3)"/><text x="441.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.25%)</title><rect x="441" y="276" width="3" height="15" fill="rgb(252,43,48)"/><text x="444.00" y="286.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.25%)</title><rect x="444" y="308" width="3" height="15" fill="rgb(227,145,47)"/><text x="447.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.76%)</title><rect x="441" y="260" width="9" height="15" fill="rgb(245,177,16)"/><text x="444.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.51%)</title><rect x="444" y="276" width="6" height="15" fill="rgb(242,66,42)"/><text x="447.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.51%)</title><rect x="444" y="292" width="6" height="15" fill="rgb(205,168,10)"/><text x="447.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.25%)</title><rect x="447" y="308" width="3" height="15" fill="rgb(211,218,22)"/><text x="450.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.25%)</title><rect x="447" y="324" width="3" height="15" fill="rgb(225,119,53)"/><text x="450.00" y="334.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.25%)</title><rect x="447" y="340" width="3" height="15" fill="rgb(218,166,27)"/><text x="450.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.25%)</title><rect x="450" y="276" width="3" height="15" fill="rgb(209,99,24)"/><text x="453.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.25%)</title><rect x="450" y="292" width="3" height="15" fill="rgb(248,41,23)"/><text x="453.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.25%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(212,169,28)"/><text x="453.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="450" y="324" width="3" height="15" fill="rgb(229,181,37)"/><text x="453.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="450" y="340" width="3" height="15" fill="rgb(251,159,27)"/><text x="453.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="450" y="356" width="3" height="15" fill="rgb(248,62,43)"/><text x="453.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.25%)</title><rect x="450" y="372" width="3" height="15" fill="rgb(212,155,19)"/><text x="453.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.25%)</title><rect x="450" y="388" width="3" height="15" fill="rgb(241,146,31)"/><text x="453.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="450" y="404" width="3" height="15" fill="rgb(210,112,17)"/><text x="453.00" y="414.50"></text></g><g><title>0x7efd037fdd3b (libc-2.29.so) (1 samples, 0.25%)</title><rect x="450" y="420" width="3" height="15" fill="rgb(224,118,45)"/><text x="453.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.25%)</title><rect x="453" y="308" width="3" height="15" fill="rgb(254,11,52)"/><text x="456.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3773) (1 samples, 0.25%)</title><rect x="453" y="324" width="3" height="15" fill="rgb(235,132,7)"/><text x="456.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.51%)</title><rect x="453" y="276" width="6" height="15" fill="rgb(236,214,5)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.51%)</title><rect x="453" y="292" width="6" height="15" fill="rgb(207,1,21)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.25%)</title><rect x="456" y="308" width="3" height="15" fill="rgb(254,123,21)"/><text x="459.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:54) (1 samples, 0.25%)</title><rect x="456" y="324" width="3" height="15" fill="rgb(225,209,42)"/><text x="459.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:208) (1 samples, 0.25%)</title><rect x="459" y="292" width="3" height="15" fill="rgb(225,83,4)"/><text x="462.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.51%)</title><rect x="459" y="276" width="6" height="15" fill="rgb(251,18,36)"/><text x="462.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.25%)</title><rect x="462" y="292" width="3" height="15" fill="rgb(234,199,41)"/><text x="465.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.25%)</title><rect x="462" y="308" width="3" height="15" fill="rgb(243,68,41)"/><text x="465.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.25%)</title><rect x="462" y="324" width="3" height="15" fill="rgb(214,195,0)"/><text x="465.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.25%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(253,20,33)"/><text x="468.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.25%)</title><rect x="468" y="292" width="3" height="15" fill="rgb(216,140,37)"/><text x="471.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.25%)</title><rect x="474" y="308" width="3" height="15" fill="rgb(211,110,35)"/><text x="477.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.51%)</title><rect x="489" y="324" width="6" height="15" fill="rgb(241,88,36)"/><text x="492.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.76%)</title><rect x="495" y="324" width="9" height="15" fill="rgb(218,52,33)"/><text x="498.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.25%)</title><rect x="504" y="324" width="3" height="15" fill="rgb(246,192,32)"/><text x="507.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (11 samples, 2.79%)</title><rect x="477" y="308" width="33" height="15" fill="rgb(233,83,53)"/><text x="480.00" y="318.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.25%)</title><rect x="507" y="324" width="3" height="15" fill="rgb(226,216,51)"/><text x="510.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.25%)</title><rect x="510" y="308" width="3" height="15" fill="rgb(222,219,25)"/><text x="513.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.51%)</title><rect x="513" y="308" width="6" height="15" fill="rgb(252,163,53)"/><text x="516.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.25%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(229,118,13)"/><text x="522.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (35 samples, 8.88%)</title><rect x="420" y="180" width="105" height="15" fill="rgb(206,5,49)"/><text x="423.00" y="190.50">array_sum (m..</text></g><g><title>forward_ndarray_method (methods.c:108) (35 samples, 8.88%)</title><rect x="420" y="196" width="105" height="15" fill="rgb(250,168,22)"/><text x="423.00" y="206.50">forward_ndar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (32 samples, 8.12%)</title><rect x="429" y="212" width="96" height="15" fill="rgb(247,201,13)"/><text x="432.00" y="222.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (29 samples, 7.36%)</title><rect x="438" y="228" width="87" height="15" fill="rgb(254,29,9)"/><text x="441.00" y="238.50">ufunc_redu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (29 samples, 7.36%)</title><rect x="438" y="244" width="87" height="15" fill="rgb(210,27,30)"/><text x="441.00" y="254.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (25 samples, 6.35%)</title><rect x="450" y="260" width="75" height="15" fill="rgb(208,219,15)"/><text x="453.00" y="270.50">PyUFunc_..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 5.08%)</title><rect x="465" y="276" width="60" height="15" fill="rgb(205,88,6)"/><text x="468.00" y="286.50">PyUFun..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (18 samples, 4.57%)</title><rect x="471" y="292" width="54" height="15" fill="rgb(232,11,52)"/><text x="474.00" y="302.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.25%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(237,158,9)"/><text x="525.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1843) (1 samples, 0.25%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(251,84,40)"/><text x="525.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.25%)</title><rect x="525" y="196" width="3" height="15" fill="rgb(219,58,34)"/><text x="528.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.25%)</title><rect x="525" y="212" width="3" height="15" fill="rgb(217,212,8)"/><text x="528.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.25%)</title><rect x="525" y="228" width="3" height="15" fill="rgb(216,213,37)"/><text x="528.00" y="238.50"></text></g><g><title>0x7efd02a1df00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="528" y="212" width="3" height="15" fill="rgb(208,17,2)"/><text x="531.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.51%)</title><rect x="531" y="228" width="6" height="15" fill="rgb(249,26,16)"/><text x="534.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.51%)</title><rect x="531" y="244" width="6" height="15" fill="rgb(210,99,8)"/><text x="534.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (2 samples, 0.51%)</title><rect x="531" y="260" width="6" height="15" fill="rgb(215,130,36)"/><text x="534.00" y="270.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:925) (2 samples, 0.51%)</title><rect x="531" y="276" width="6" height="15" fill="rgb(207,66,34)"/><text x="534.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.25%)</title><rect x="537" y="228" width="3" height="15" fill="rgb(233,150,32)"/><text x="540.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.25%)</title><rect x="540" y="276" width="3" height="15" fill="rgb(247,191,35)"/><text x="543.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.25%)</title><rect x="543" y="276" width="3" height="15" fill="rgb(212,9,4)"/><text x="546.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.76%)</title><rect x="546" y="276" width="9" height="15" fill="rgb(253,36,39)"/><text x="549.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 2.03%)</title><rect x="540" y="228" width="24" height="15" fill="rgb(246,66,3)"/><text x="543.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 2.03%)</title><rect x="540" y="244" width="24" height="15" fill="rgb(231,107,19)"/><text x="543.00" y="254.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 2.03%)</title><rect x="540" y="260" width="24" height="15" fill="rgb(237,2,8)"/><text x="543.00" y="270.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.76%)</title><rect x="555" y="276" width="9" height="15" fill="rgb(218,163,34)"/><text x="558.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.51%)</title><rect x="558" y="292" width="6" height="15" fill="rgb(223,165,34)"/><text x="561.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.25%)</title><rect x="564" y="276" width="3" height="15" fill="rgb(229,0,13)"/><text x="567.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.25%)</title><rect x="564" y="292" width="3" height="15" fill="rgb(233,54,33)"/><text x="567.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:38) (186 samples, 47.21%)</title><rect x="12" y="52" width="558" height="15" fill="rgb(234,43,10)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_10..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:37) (186 samples, 47.21%)</title><rect x="12" y="68" width="558" height="15" fill="rgb(246,114,13)"/><text x="15.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:29) (186 samples, 47.21%)</title><rect x="12" y="84" width="558" height="15" fill="rgb(224,229,36)"/><text x="15.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_on..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:23) (184 samples, 46.70%)</title><rect x="18" y="100" width="552" height="15" fill="rgb(245,184,46)"/><text x="21.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 46.70%)</title><rect x="18" y="116" width="552" height="15" fill="rgb(242,115,53)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (183 samples, 46.45%)</title><rect x="21" y="132" width="549" height="15" fill="rgb(251,104,38)"/><text x="24.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (172 samples, 43.65%)</title><rect x="54" y="148" width="516" height="15" fill="rgb(253,1,37)"/><text x="57.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (56 samples, 14.21%)</title><rect x="402" y="164" width="168" height="15" fill="rgb(206,54,45)"/><text x="405.00" y="174.50">_predict_proba_lr (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 3.81%)</title><rect x="525" y="180" width="45" height="15" fill="rgb(219,157,29)"/><text x="528.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 3.55%)</title><rect x="528" y="196" width="42" height="15" fill="rgb(228,32,26)"/><text x="531.00" y="206.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (13 samples, 3.30%)</title><rect x="531" y="212" width="39" height="15" fill="rgb(216,66,39)"/><text x="534.00" y="222.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.51%)</title><rect x="564" y="228" width="6" height="15" fill="rgb(244,8,3)"/><text x="567.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.51%)</title><rect x="564" y="244" width="6" height="15" fill="rgb(222,62,32)"/><text x="567.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.51%)</title><rect x="564" y="260" width="6" height="15" fill="rgb(245,93,14)"/><text x="567.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.25%)</title><rect x="567" y="276" width="3" height="15" fill="rgb(228,205,10)"/><text x="570.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.25%)</title><rect x="567" y="292" width="3" height="15" fill="rgb(238,5,26)"/><text x="570.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.25%)</title><rect x="570" y="148" width="3" height="15" fill="rgb(234,155,1)"/><text x="573.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="570" y="164" width="3" height="15" fill="rgb(220,191,31)"/><text x="573.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="570" y="180" width="3" height="15" fill="rgb(221,36,5)"/><text x="573.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="570" y="196" width="3" height="15" fill="rgb(233,21,52)"/><text x="573.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="570" y="212" width="3" height="15" fill="rgb(240,199,3)"/><text x="573.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="570" y="228" width="3" height="15" fill="rgb(220,23,48)"/><text x="573.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.25%)</title><rect x="570" y="244" width="3" height="15" fill="rgb(244,74,49)"/><text x="573.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="570" y="260" width="3" height="15" fill="rgb(254,137,2)"/><text x="573.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="570" y="276" width="3" height="15" fill="rgb(254,136,17)"/><text x="573.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="570" y="292" width="3" height="15" fill="rgb(242,217,31)"/><text x="573.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="570" y="308" width="3" height="15" fill="rgb(241,97,51)"/><text x="573.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="570" y="324" width="3" height="15" fill="rgb(225,69,23)"/><text x="573.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.25%)</title><rect x="570" y="340" width="3" height="15" fill="rgb(245,46,46)"/><text x="573.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(231,123,34)"/><text x="573.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="570" y="372" width="3" height="15" fill="rgb(213,22,39)"/><text x="573.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="570" y="388" width="3" height="15" fill="rgb(236,192,10)"/><text x="573.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="570" y="404" width="3" height="15" fill="rgb(247,203,38)"/><text x="573.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="570" y="420" width="3" height="15" fill="rgb(221,90,19)"/><text x="573.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:64) (1 samples, 0.25%)</title><rect x="570" y="436" width="3" height="15" fill="rgb(216,27,31)"/><text x="573.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="570" y="452" width="3" height="15" fill="rgb(248,111,5)"/><text x="573.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="570" y="468" width="3" height="15" fill="rgb(215,69,18)"/><text x="573.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="570" y="484" width="3" height="15" fill="rgb(248,47,13)"/><text x="573.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="570" y="500" width="3" height="15" fill="rgb(243,33,42)"/><text x="573.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="570" y="516" width="3" height="15" fill="rgb(235,190,21)"/><text x="573.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py:7) (1 samples, 0.25%)</title><rect x="570" y="532" width="3" height="15" fill="rgb(225,150,14)"/><text x="573.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="570" y="548" width="3" height="15" fill="rgb(217,84,17)"/><text x="573.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="570" y="564" width="3" height="15" fill="rgb(217,30,36)"/><text x="573.00" y="574.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:208) (1 samples, 0.25%)</title><rect x="570" y="580" width="3" height="15" fill="rgb(217,125,40)"/><text x="573.00" y="590.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:109) (1 samples, 0.25%)</title><rect x="570" y="596" width="3" height="15" fill="rgb(208,219,3)"/><text x="573.00" y="606.50"></text></g><g><title>splitext (posixpath.py:123) (1 samples, 0.25%)</title><rect x="573" y="964" width="3" height="15" fill="rgb(223,189,51)"/><text x="576.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.51%)</title><rect x="573" y="852" width="6" height="15" fill="rgb(211,45,54)"/><text x="576.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.51%)</title><rect x="573" y="868" width="6" height="15" fill="rgb(223,218,11)"/><text x="576.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.51%)</title><rect x="573" y="884" width="6" height="15" fill="rgb(220,65,37)"/><text x="576.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.51%)</title><rect x="573" y="900" width="6" height="15" fill="rgb(253,38,13)"/><text x="576.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.51%)</title><rect x="573" y="916" width="6" height="15" fill="rgb(210,90,47)"/><text x="576.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.51%)</title><rect x="573" y="932" width="6" height="15" fill="rgb(218,209,25)"/><text x="576.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2581) (2 samples, 0.51%)</title><rect x="573" y="948" width="6" height="15" fill="rgb(228,101,19)"/><text x="576.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.25%)</title><rect x="576" y="964" width="3" height="15" fill="rgb(230,35,42)"/><text x="579.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:135) (1 samples, 0.25%)</title><rect x="576" y="980" width="3" height="15" fill="rgb(245,145,8)"/><text x="579.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.25%)</title><rect x="576" y="996" width="3" height="15" fill="rgb(231,177,35)"/><text x="579.00" y="1006.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.25%)</title><rect x="579" y="900" width="3" height="15" fill="rgb(223,4,33)"/><text x="582.00" y="910.50"></text></g><g><title>isdir (genericpath.py:45) (1 samples, 0.25%)</title><rect x="579" y="916" width="3" height="15" fill="rgb(250,125,34)"/><text x="582.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (4 samples, 1.02%)</title><rect x="573" y="148" width="12" height="15" fill="rgb(237,38,25)"/><text x="576.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="164" width="12" height="15" fill="rgb(218,117,24)"/><text x="576.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.02%)</title><rect x="573" y="180" width="12" height="15" fill="rgb(242,107,44)"/><text x="576.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="196" width="12" height="15" fill="rgb(216,84,51)"/><text x="576.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="212" width="12" height="15" fill="rgb(234,116,5)"/><text x="576.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="228" width="12" height="15" fill="rgb(218,18,30)"/><text x="576.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="244" width="12" height="15" fill="rgb(235,44,37)"/><text x="576.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="260" width="12" height="15" fill="rgb(211,122,5)"/><text x="576.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="276" width="12" height="15" fill="rgb(244,90,10)"/><text x="576.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.02%)</title><rect x="573" y="292" width="12" height="15" fill="rgb(235,38,28)"/><text x="576.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="308" width="12" height="15" fill="rgb(251,4,38)"/><text x="576.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="324" width="12" height="15" fill="rgb(209,177,28)"/><text x="576.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="340" width="12" height="15" fill="rgb(235,51,2)"/><text x="576.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="356" width="12" height="15" fill="rgb(222,35,2)"/><text x="576.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="372" width="12" height="15" fill="rgb(210,66,11)"/><text x="576.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.02%)</title><rect x="573" y="388" width="12" height="15" fill="rgb(247,144,42)"/><text x="576.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="404" width="12" height="15" fill="rgb(247,184,52)"/><text x="576.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="420" width="12" height="15" fill="rgb(213,172,16)"/><text x="576.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="436" width="12" height="15" fill="rgb(232,22,45)"/><text x="576.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="452" width="12" height="15" fill="rgb(211,86,12)"/><text x="576.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="468" width="12" height="15" fill="rgb(205,170,28)"/><text x="576.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.02%)</title><rect x="573" y="484" width="12" height="15" fill="rgb(223,47,28)"/><text x="576.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="500" width="12" height="15" fill="rgb(244,87,47)"/><text x="576.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="516" width="12" height="15" fill="rgb(224,224,25)"/><text x="576.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="532" width="12" height="15" fill="rgb(216,133,45)"/><text x="576.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="548" width="12" height="15" fill="rgb(218,41,50)"/><text x="576.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="564" width="12" height="15" fill="rgb(211,58,40)"/><text x="576.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.02%)</title><rect x="573" y="580" width="12" height="15" fill="rgb(253,142,26)"/><text x="576.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="596" width="12" height="15" fill="rgb(233,124,50)"/><text x="576.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.02%)</title><rect x="573" y="612" width="12" height="15" fill="rgb(246,144,14)"/><text x="576.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="628" width="12" height="15" fill="rgb(234,147,50)"/><text x="576.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="644" width="12" height="15" fill="rgb(221,15,18)"/><text x="576.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="660" width="12" height="15" fill="rgb(249,95,49)"/><text x="576.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="676" width="12" height="15" fill="rgb(242,148,16)"/><text x="576.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="692" width="12" height="15" fill="rgb(220,65,20)"/><text x="576.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="708" width="12" height="15" fill="rgb(226,177,26)"/><text x="576.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.02%)</title><rect x="573" y="724" width="12" height="15" fill="rgb(253,208,53)"/><text x="576.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="573" y="740" width="12" height="15" fill="rgb(216,63,21)"/><text x="576.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="573" y="756" width="12" height="15" fill="rgb(205,120,50)"/><text x="576.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="573" y="772" width="12" height="15" fill="rgb(215,198,28)"/><text x="576.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="573" y="788" width="12" height="15" fill="rgb(214,19,19)"/><text x="576.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="573" y="804" width="12" height="15" fill="rgb(253,13,3)"/><text x="576.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.02%)</title><rect x="573" y="820" width="12" height="15" fill="rgb(211,175,27)"/><text x="576.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.02%)</title><rect x="573" y="836" width="12" height="15" fill="rgb(253,110,18)"/><text x="576.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.51%)</title><rect x="579" y="852" width="6" height="15" fill="rgb(206,41,32)"/><text x="582.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.51%)</title><rect x="579" y="868" width="6" height="15" fill="rgb(253,5,14)"/><text x="582.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.51%)</title><rect x="579" y="884" width="6" height="15" fill="rgb(223,141,13)"/><text x="582.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.25%)</title><rect x="582" y="900" width="3" height="15" fill="rgb(232,42,13)"/><text x="585.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.25%)</title><rect x="582" y="916" width="3" height="15" fill="rgb(219,101,8)"/><text x="585.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.25%)</title><rect x="582" y="932" width="3" height="15" fill="rgb(210,32,53)"/><text x="585.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.25%)</title><rect x="582" y="948" width="3" height="15" fill="rgb(210,85,54)"/><text x="585.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.25%)</title><rect x="585" y="484" width="3" height="15" fill="rgb(246,150,17)"/><text x="588.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="585" y="500" width="3" height="15" fill="rgb(212,108,32)"/><text x="588.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="585" y="516" width="3" height="15" fill="rgb(234,87,42)"/><text x="588.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="585" y="532" width="3" height="15" fill="rgb(218,205,24)"/><text x="588.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="585" y="548" width="3" height="15" fill="rgb(207,209,31)"/><text x="588.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="585" y="564" width="3" height="15" fill="rgb(245,69,21)"/><text x="588.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:21) (1 samples, 0.25%)</title><rect x="585" y="580" width="3" height="15" fill="rgb(212,166,47)"/><text x="588.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="585" y="596" width="3" height="15" fill="rgb(243,71,20)"/><text x="588.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="585" y="612" width="3" height="15" fill="rgb(222,153,52)"/><text x="588.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="585" y="628" width="3" height="15" fill="rgb(252,124,15)"/><text x="588.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="585" y="644" width="3" height="15" fill="rgb(224,215,22)"/><text x="588.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="585" y="660" width="3" height="15" fill="rgb(216,63,5)"/><text x="588.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/io/stata.py:770) (1 samples, 0.25%)</title><rect x="585" y="676" width="3" height="15" fill="rgb(205,157,51)"/><text x="588.00" y="686.50"></text></g><g><title>StataMissingValue (pandas/io/stata.py:820) (1 samples, 0.25%)</title><rect x="585" y="692" width="3" height="15" fill="rgb(238,191,42)"/><text x="588.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.51%)</title><rect x="585" y="292" width="6" height="15" fill="rgb(213,203,21)"/><text x="588.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="585" y="308" width="6" height="15" fill="rgb(250,168,31)"/><text x="588.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="585" y="324" width="6" height="15" fill="rgb(245,214,36)"/><text x="588.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="585" y="340" width="6" height="15" fill="rgb(254,217,25)"/><text x="588.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="585" y="356" width="6" height="15" fill="rgb(238,41,35)"/><text x="588.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="585" y="372" width="6" height="15" fill="rgb(205,186,10)"/><text x="588.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.51%)</title><rect x="585" y="388" width="6" height="15" fill="rgb(252,217,7)"/><text x="588.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="585" y="404" width="6" height="15" fill="rgb(223,57,33)"/><text x="588.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="585" y="420" width="6" height="15" fill="rgb(235,94,17)"/><text x="588.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="585" y="436" width="6" height="15" fill="rgb(227,27,43)"/><text x="588.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="585" y="452" width="6" height="15" fill="rgb(248,129,24)"/><text x="588.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="585" y="468" width="6" height="15" fill="rgb(215,34,23)"/><text x="588.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.25%)</title><rect x="588" y="484" width="3" height="15" fill="rgb(220,81,44)"/><text x="591.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="500" width="3" height="15" fill="rgb(224,29,7)"/><text x="591.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="516" width="3" height="15" fill="rgb(244,227,35)"/><text x="591.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="532" width="3" height="15" fill="rgb(214,181,49)"/><text x="591.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="548" width="3" height="15" fill="rgb(218,55,42)"/><text x="591.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="564" width="3" height="15" fill="rgb(222,25,16)"/><text x="591.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.25%)</title><rect x="588" y="580" width="3" height="15" fill="rgb(223,12,36)"/><text x="591.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="596" width="3" height="15" fill="rgb(210,16,4)"/><text x="591.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="612" width="3" height="15" fill="rgb(224,199,44)"/><text x="591.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="628" width="3" height="15" fill="rgb(222,104,25)"/><text x="591.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="644" width="3" height="15" fill="rgb(244,158,53)"/><text x="591.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="660" width="3" height="15" fill="rgb(245,127,25)"/><text x="591.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.25%)</title><rect x="588" y="676" width="3" height="15" fill="rgb(246,1,12)"/><text x="591.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="692" width="3" height="15" fill="rgb(216,191,45)"/><text x="591.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="708" width="3" height="15" fill="rgb(224,149,30)"/><text x="591.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="724" width="3" height="15" fill="rgb(210,222,22)"/><text x="591.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="740" width="3" height="15" fill="rgb(223,100,5)"/><text x="591.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="756" width="3" height="15" fill="rgb(252,225,30)"/><text x="591.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.25%)</title><rect x="588" y="772" width="3" height="15" fill="rgb(235,193,10)"/><text x="591.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="788" width="3" height="15" fill="rgb(227,100,9)"/><text x="591.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="804" width="3" height="15" fill="rgb(209,8,6)"/><text x="591.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="820" width="3" height="15" fill="rgb(238,33,8)"/><text x="591.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="836" width="3" height="15" fill="rgb(208,111,42)"/><text x="591.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="852" width="3" height="15" fill="rgb(251,188,29)"/><text x="591.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.25%)</title><rect x="588" y="868" width="3" height="15" fill="rgb(219,61,3)"/><text x="591.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="884" width="3" height="15" fill="rgb(210,6,53)"/><text x="591.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="900" width="3" height="15" fill="rgb(240,191,17)"/><text x="591.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="916" width="3" height="15" fill="rgb(225,192,21)"/><text x="591.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="932" width="3" height="15" fill="rgb(243,73,42)"/><text x="591.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="948" width="3" height="15" fill="rgb(233,15,0)"/><text x="591.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.25%)</title><rect x="588" y="964" width="3" height="15" fill="rgb(229,119,4)"/><text x="591.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="980" width="3" height="15" fill="rgb(233,101,5)"/><text x="591.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="996" width="3" height="15" fill="rgb(229,140,41)"/><text x="591.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1012" width="3" height="15" fill="rgb(248,1,33)"/><text x="591.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1028" width="3" height="15" fill="rgb(211,150,11)"/><text x="591.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1044" width="3" height="15" fill="rgb(220,170,21)"/><text x="591.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.25%)</title><rect x="588" y="1060" width="3" height="15" fill="rgb(241,38,20)"/><text x="591.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1076" width="3" height="15" fill="rgb(222,173,37)"/><text x="591.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1092" width="3" height="15" fill="rgb(207,220,41)"/><text x="591.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1108" width="3" height="15" fill="rgb(248,207,10)"/><text x="591.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1124" width="3" height="15" fill="rgb(248,134,41)"/><text x="591.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1140" width="3" height="15" fill="rgb(236,88,23)"/><text x="591.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.25%)</title><rect x="588" y="1156" width="3" height="15" fill="rgb(233,6,49)"/><text x="591.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1172" width="3" height="15" fill="rgb(229,93,15)"/><text x="591.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1188" width="3" height="15" fill="rgb(238,218,24)"/><text x="591.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1204" width="3" height="15" fill="rgb(253,17,20)"/><text x="591.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1220" width="3" height="15" fill="rgb(237,67,31)"/><text x="591.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1236" width="3" height="15" fill="rgb(239,112,28)"/><text x="591.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.25%)</title><rect x="588" y="1252" width="3" height="15" fill="rgb(226,159,41)"/><text x="591.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1268" width="3" height="15" fill="rgb(246,176,38)"/><text x="591.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1284" width="3" height="15" fill="rgb(220,4,31)"/><text x="591.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1300" width="3" height="15" fill="rgb(213,37,16)"/><text x="591.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1316" width="3" height="15" fill="rgb(218,30,47)"/><text x="591.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1332" width="3" height="15" fill="rgb(245,188,20)"/><text x="591.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.25%)</title><rect x="588" y="1348" width="3" height="15" fill="rgb(246,186,16)"/><text x="591.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1364" width="3" height="15" fill="rgb(211,67,38)"/><text x="591.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1380" width="3" height="15" fill="rgb(230,10,20)"/><text x="591.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1396" width="3" height="15" fill="rgb(228,118,53)"/><text x="591.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1412" width="3" height="15" fill="rgb(205,133,23)"/><text x="591.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1428" width="3" height="15" fill="rgb(246,138,36)"/><text x="591.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.25%)</title><rect x="588" y="1444" width="3" height="15" fill="rgb(207,5,7)"/><text x="591.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1460" width="3" height="15" fill="rgb(234,208,1)"/><text x="591.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1476" width="3" height="15" fill="rgb(250,155,44)"/><text x="591.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1492" width="3" height="15" fill="rgb(209,31,48)"/><text x="591.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1508" width="3" height="15" fill="rgb(230,199,18)"/><text x="591.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1524" width="3" height="15" fill="rgb(205,19,25)"/><text x="591.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.25%)</title><rect x="588" y="1540" width="3" height="15" fill="rgb(244,167,10)"/><text x="591.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1556" width="3" height="15" fill="rgb(217,183,50)"/><text x="591.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1572" width="3" height="15" fill="rgb(249,97,41)"/><text x="591.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1588" width="3" height="15" fill="rgb(216,143,44)"/><text x="591.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1604" width="3" height="15" fill="rgb(243,221,40)"/><text x="591.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1620" width="3" height="15" fill="rgb(249,198,3)"/><text x="591.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.25%)</title><rect x="588" y="1636" width="3" height="15" fill="rgb(210,194,8)"/><text x="591.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="588" y="1652" width="3" height="15" fill="rgb(240,91,46)"/><text x="591.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="588" y="1668" width="3" height="15" fill="rgb(239,112,4)"/><text x="591.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="588" y="1684" width="3" height="15" fill="rgb(230,23,6)"/><text x="591.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="588" y="1700" width="3" height="15" fill="rgb(246,81,17)"/><text x="591.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="588" y="1716" width="3" height="15" fill="rgb(232,204,22)"/><text x="591.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.25%)</title><rect x="588" y="1732" width="3" height="15" fill="rgb(224,112,19)"/><text x="591.00" y="1742.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.25%)</title><rect x="588" y="1748" width="3" height="15" fill="rgb(251,198,5)"/><text x="591.00" y="1758.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.25%)</title><rect x="588" y="1764" width="3" height="15" fill="rgb(228,180,38)"/><text x="591.00" y="1774.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1234) (1 samples, 0.25%)</title><rect x="588" y="1780" width="3" height="15" fill="rgb(218,65,40)"/><text x="591.00" y="1790.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="588" y="1796" width="3" height="15" fill="rgb(249,153,27)"/><text x="591.00" y="1806.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (3 samples, 0.76%)</title><rect x="585" y="148" width="9" height="15" fill="rgb(236,228,53)"/><text x="588.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="585" y="164" width="9" height="15" fill="rgb(252,23,6)"/><text x="588.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.76%)</title><rect x="585" y="180" width="9" height="15" fill="rgb(227,203,8)"/><text x="588.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="585" y="196" width="9" height="15" fill="rgb(232,149,14)"/><text x="588.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="585" y="212" width="9" height="15" fill="rgb(231,159,7)"/><text x="588.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="585" y="228" width="9" height="15" fill="rgb(214,150,25)"/><text x="588.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="585" y="244" width="9" height="15" fill="rgb(230,65,14)"/><text x="588.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="585" y="260" width="9" height="15" fill="rgb(240,218,17)"/><text x="588.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="585" y="276" width="9" height="15" fill="rgb(246,205,26)"/><text x="588.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.25%)</title><rect x="591" y="292" width="3" height="15" fill="rgb(243,207,12)"/><text x="594.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(246,57,27)"/><text x="594.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(244,168,15)"/><text x="594.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="340" width="3" height="15" fill="rgb(228,159,48)"/><text x="594.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="356" width="3" height="15" fill="rgb(226,178,41)"/><text x="594.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="372" width="3" height="15" fill="rgb(212,191,16)"/><text x="594.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="388" width="3" height="15" fill="rgb(247,55,18)"/><text x="594.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="404" width="3" height="15" fill="rgb(232,46,3)"/><text x="594.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="420" width="3" height="15" fill="rgb(230,45,11)"/><text x="594.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.25%)</title><rect x="591" y="436" width="3" height="15" fill="rgb(243,185,8)"/><text x="594.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="452" width="3" height="15" fill="rgb(254,142,47)"/><text x="594.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="468" width="3" height="15" fill="rgb(247,90,49)"/><text x="594.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="484" width="3" height="15" fill="rgb(246,116,25)"/><text x="594.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="500" width="3" height="15" fill="rgb(237,161,44)"/><text x="594.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="516" width="3" height="15" fill="rgb(227,162,27)"/><text x="594.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.25%)</title><rect x="591" y="532" width="3" height="15" fill="rgb(221,216,19)"/><text x="594.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="548" width="3" height="15" fill="rgb(211,166,5)"/><text x="594.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="564" width="3" height="15" fill="rgb(226,64,4)"/><text x="594.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="580" width="3" height="15" fill="rgb(225,133,20)"/><text x="594.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="596" width="3" height="15" fill="rgb(245,120,42)"/><text x="594.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="612" width="3" height="15" fill="rgb(227,178,38)"/><text x="594.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.25%)</title><rect x="591" y="628" width="3" height="15" fill="rgb(239,0,10)"/><text x="594.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="644" width="3" height="15" fill="rgb(245,158,54)"/><text x="594.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="660" width="3" height="15" fill="rgb(228,18,22)"/><text x="594.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="676" width="3" height="15" fill="rgb(220,68,49)"/><text x="594.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="692" width="3" height="15" fill="rgb(229,29,37)"/><text x="594.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="708" width="3" height="15" fill="rgb(223,178,1)"/><text x="594.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.25%)</title><rect x="591" y="724" width="3" height="15" fill="rgb(225,34,1)"/><text x="594.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="740" width="3" height="15" fill="rgb(224,160,6)"/><text x="594.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="591" y="756" width="3" height="15" fill="rgb(219,64,40)"/><text x="594.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="772" width="3" height="15" fill="rgb(248,138,31)"/><text x="594.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="788" width="3" height="15" fill="rgb(232,77,35)"/><text x="594.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="804" width="3" height="15" fill="rgb(235,105,47)"/><text x="594.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="820" width="3" height="15" fill="rgb(230,138,36)"/><text x="594.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="836" width="3" height="15" fill="rgb(218,80,29)"/><text x="594.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="852" width="3" height="15" fill="rgb(216,86,11)"/><text x="594.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.25%)</title><rect x="591" y="868" width="3" height="15" fill="rgb(208,127,4)"/><text x="594.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="884" width="3" height="15" fill="rgb(240,188,42)"/><text x="594.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="900" width="3" height="15" fill="rgb(215,211,34)"/><text x="594.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="916" width="3" height="15" fill="rgb(225,38,31)"/><text x="594.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="932" width="3" height="15" fill="rgb(218,159,47)"/><text x="594.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="948" width="3" height="15" fill="rgb(236,165,24)"/><text x="594.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.25%)</title><rect x="591" y="964" width="3" height="15" fill="rgb(234,143,16)"/><text x="594.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="591" y="980" width="3" height="15" fill="rgb(225,205,19)"/><text x="594.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="996" width="3" height="15" fill="rgb(224,56,8)"/><text x="594.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="1012" width="3" height="15" fill="rgb(229,199,34)"/><text x="594.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="1028" width="3" height="15" fill="rgb(226,204,46)"/><text x="594.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="1044" width="3" height="15" fill="rgb(248,122,49)"/><text x="594.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="1060" width="3" height="15" fill="rgb(233,138,23)"/><text x="594.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="1076" width="3" height="15" fill="rgb(229,134,12)"/><text x="594.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.25%)</title><rect x="591" y="1092" width="3" height="15" fill="rgb(249,25,17)"/><text x="594.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="591" y="1108" width="3" height="15" fill="rgb(250,149,5)"/><text x="594.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="1124" width="3" height="15" fill="rgb(230,161,15)"/><text x="594.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="1140" width="3" height="15" fill="rgb(219,27,0)"/><text x="594.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="1156" width="3" height="15" fill="rgb(210,79,19)"/><text x="594.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="1172" width="3" height="15" fill="rgb(245,96,24)"/><text x="594.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="1188" width="3" height="15" fill="rgb(210,128,5)"/><text x="594.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="1204" width="3" height="15" fill="rgb(228,5,38)"/><text x="594.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.25%)</title><rect x="591" y="1220" width="3" height="15" fill="rgb(207,84,30)"/><text x="594.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="591" y="1236" width="3" height="15" fill="rgb(237,197,21)"/><text x="594.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="591" y="1252" width="3" height="15" fill="rgb(235,124,30)"/><text x="594.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="591" y="1268" width="3" height="15" fill="rgb(216,194,36)"/><text x="594.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="591" y="1284" width="3" height="15" fill="rgb(208,14,9)"/><text x="594.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="591" y="1300" width="3" height="15" fill="rgb(234,168,25)"/><text x="594.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.25%)</title><rect x="591" y="1316" width="3" height="15" fill="rgb(237,173,7)"/><text x="594.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.25%)</title><rect x="591" y="1332" width="3" height="15" fill="rgb(246,155,41)"/><text x="594.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.25%)</title><rect x="591" y="1348" width="3" height="15" fill="rgb(242,165,31)"/><text x="594.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.25%)</title><rect x="591" y="1364" width="3" height="15" fill="rgb(214,32,46)"/><text x="594.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="591" y="1380" width="3" height="15" fill="rgb(223,11,23)"/><text x="594.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="591" y="1396" width="3" height="15" fill="rgb(224,136,51)"/><text x="594.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="591" y="1412" width="3" height="15" fill="rgb(240,191,46)"/><text x="594.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.25%)</title><rect x="591" y="1428" width="3" height="15" fill="rgb(224,147,35)"/><text x="594.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.25%)</title><rect x="591" y="1444" width="3" height="15" fill="rgb(220,181,6)"/><text x="594.00" y="1454.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:159) (1 samples, 0.25%)</title><rect x="591" y="1460" width="3" height="15" fill="rgb(229,180,36)"/><text x="594.00" y="1470.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.25%)</title><rect x="594" y="484" width="3" height="15" fill="rgb(216,75,50)"/><text x="597.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="594" y="500" width="3" height="15" fill="rgb(254,132,2)"/><text x="597.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="594" y="516" width="3" height="15" fill="rgb(211,66,12)"/><text x="597.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="594" y="532" width="3" height="15" fill="rgb(228,109,37)"/><text x="597.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="594" y="548" width="3" height="15" fill="rgb(246,129,31)"/><text x="597.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="594" y="564" width="3" height="15" fill="rgb(209,122,3)"/><text x="597.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.25%)</title><rect x="594" y="580" width="3" height="15" fill="rgb(208,6,44)"/><text x="597.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="594" y="596" width="3" height="15" fill="rgb(226,18,4)"/><text x="597.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="594" y="612" width="3" height="15" fill="rgb(210,91,38)"/><text x="597.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="594" y="628" width="3" height="15" fill="rgb(217,38,21)"/><text x="597.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="594" y="644" width="3" height="15" fill="rgb(251,57,4)"/><text x="597.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="594" y="660" width="3" height="15" fill="rgb(241,51,29)"/><text x="597.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.25%)</title><rect x="594" y="676" width="3" height="15" fill="rgb(237,194,16)"/><text x="597.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="594" y="692" width="3" height="15" fill="rgb(251,119,44)"/><text x="597.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="594" y="708" width="3" height="15" fill="rgb(231,23,41)"/><text x="597.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="594" y="724" width="3" height="15" fill="rgb(245,48,11)"/><text x="597.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="594" y="740" width="3" height="15" fill="rgb(231,42,12)"/><text x="597.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="594" y="756" width="3" height="15" fill="rgb(213,28,25)"/><text x="597.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.25%)</title><rect x="594" y="772" width="3" height="15" fill="rgb(207,45,26)"/><text x="597.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="594" y="788" width="3" height="15" fill="rgb(205,84,2)"/><text x="597.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="594" y="804" width="3" height="15" fill="rgb(221,93,19)"/><text x="597.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="594" y="820" width="3" height="15" fill="rgb(211,119,37)"/><text x="597.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="594" y="836" width="3" height="15" fill="rgb(237,208,18)"/><text x="597.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="594" y="852" width="3" height="15" fill="rgb(241,152,30)"/><text x="597.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.25%)</title><rect x="594" y="868" width="3" height="15" fill="rgb(243,14,52)"/><text x="597.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="594" y="884" width="3" height="15" fill="rgb(241,219,16)"/><text x="597.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.25%)</title><rect x="594" y="900" width="3" height="15" fill="rgb(252,83,18)"/><text x="597.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.25%)</title><rect x="594" y="916" width="3" height="15" fill="rgb(214,27,54)"/><text x="597.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.25%)</title><rect x="594" y="932" width="3" height="15" fill="rgb(219,181,34)"/><text x="597.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.25%)</title><rect x="594" y="948" width="3" height="15" fill="rgb(209,64,6)"/><text x="597.00" y="958.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.25%)</title><rect x="594" y="964" width="3" height="15" fill="rgb(245,209,31)"/><text x="597.00" y="974.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.25%)</title><rect x="594" y="980" width="3" height="15" fill="rgb(245,55,15)"/><text x="597.00" y="990.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1449) (1 samples, 0.25%)</title><rect x="594" y="996" width="3" height="15" fill="rgb(253,5,34)"/><text x="597.00" y="1006.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;:1324) (1 samples, 0.25%)</title><rect x="594" y="1012" width="3" height="15" fill="rgb(206,209,34)"/><text x="597.00" y="1022.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:4) (10 samples, 2.54%)</title><rect x="570" y="52" width="30" height="15" fill="rgb(237,93,0)"/><text x="573.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.54%)</title><rect x="570" y="68" width="30" height="15" fill="rgb(248,23,16)"/><text x="573.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.54%)</title><rect x="570" y="84" width="30" height="15" fill="rgb(206,221,21)"/><text x="573.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.54%)</title><rect x="570" y="100" width="30" height="15" fill="rgb(244,93,44)"/><text x="573.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.54%)</title><rect x="570" y="116" width="30" height="15" fill="rgb(220,218,16)"/><text x="573.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.54%)</title><rect x="570" y="132" width="30" height="15" fill="rgb(223,168,40)"/><text x="573.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (2 samples, 0.51%)</title><rect x="594" y="148" width="6" height="15" fill="rgb(215,223,48)"/><text x="597.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="594" y="164" width="6" height="15" fill="rgb(218,82,32)"/><text x="597.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="594" y="180" width="6" height="15" fill="rgb(244,101,24)"/><text x="597.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="594" y="196" width="6" height="15" fill="rgb(243,195,46)"/><text x="597.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="594" y="212" width="6" height="15" fill="rgb(213,24,14)"/><text x="597.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="594" y="228" width="6" height="15" fill="rgb(209,100,53)"/><text x="597.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.51%)</title><rect x="594" y="244" width="6" height="15" fill="rgb(231,152,23)"/><text x="597.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="594" y="260" width="6" height="15" fill="rgb(253,157,46)"/><text x="597.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="594" y="276" width="6" height="15" fill="rgb(248,183,37)"/><text x="597.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="594" y="292" width="6" height="15" fill="rgb(222,169,50)"/><text x="597.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="594" y="308" width="6" height="15" fill="rgb(239,221,18)"/><text x="597.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="594" y="324" width="6" height="15" fill="rgb(237,46,9)"/><text x="597.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.51%)</title><rect x="594" y="340" width="6" height="15" fill="rgb(252,88,46)"/><text x="597.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="594" y="356" width="6" height="15" fill="rgb(250,39,44)"/><text x="597.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.51%)</title><rect x="594" y="372" width="6" height="15" fill="rgb(239,165,22)"/><text x="597.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="594" y="388" width="6" height="15" fill="rgb(220,144,31)"/><text x="597.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="594" y="404" width="6" height="15" fill="rgb(250,200,53)"/><text x="597.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="594" y="420" width="6" height="15" fill="rgb(212,23,18)"/><text x="597.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="594" y="436" width="6" height="15" fill="rgb(222,157,10)"/><text x="597.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="594" y="452" width="6" height="15" fill="rgb(235,185,2)"/><text x="597.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="594" y="468" width="6" height="15" fill="rgb(250,22,25)"/><text x="597.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.25%)</title><rect x="597" y="484" width="3" height="15" fill="rgb(237,3,24)"/><text x="600.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="597" y="500" width="3" height="15" fill="rgb(238,155,6)"/><text x="600.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="597" y="516" width="3" height="15" fill="rgb(224,24,23)"/><text x="600.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="597" y="532" width="3" height="15" fill="rgb(252,153,40)"/><text x="600.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="597" y="548" width="3" height="15" fill="rgb(218,228,50)"/><text x="600.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="597" y="564" width="3" height="15" fill="rgb(248,106,28)"/><text x="600.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.25%)</title><rect x="597" y="580" width="3" height="15" fill="rgb(244,208,8)"/><text x="600.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="597" y="596" width="3" height="15" fill="rgb(239,9,15)"/><text x="600.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="597" y="612" width="3" height="15" fill="rgb(238,154,1)"/><text x="600.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="597" y="628" width="3" height="15" fill="rgb(236,71,9)"/><text x="600.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="597" y="644" width="3" height="15" fill="rgb(228,12,25)"/><text x="600.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="597" y="660" width="3" height="15" fill="rgb(229,97,9)"/><text x="600.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:84) (1 samples, 0.25%)</title><rect x="597" y="676" width="3" height="15" fill="rgb(243,143,19)"/><text x="600.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="597" y="692" width="3" height="15" fill="rgb(217,133,46)"/><text x="600.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="597" y="708" width="3" height="15" fill="rgb(212,56,35)"/><text x="600.00" y="718.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.25%)</title><rect x="597" y="724" width="3" height="15" fill="rgb(252,28,46)"/><text x="600.00" y="734.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.25%)</title><rect x="597" y="740" width="3" height="15" fill="rgb(236,111,34)"/><text x="600.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="597" y="756" width="3" height="15" fill="rgb(240,224,19)"/><text x="600.00" y="766.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.25%)</title><rect x="597" y="772" width="3" height="15" fill="rgb(247,138,9)"/><text x="600.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="597" y="788" width="3" height="15" fill="rgb(234,74,4)"/><text x="600.00" y="798.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.25%)</title><rect x="597" y="804" width="3" height="15" fill="rgb(205,196,11)"/><text x="600.00" y="814.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.25%)</title><rect x="597" y="820" width="3" height="15" fill="rgb(219,91,11)"/><text x="600.00" y="830.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.25%)</title><rect x="597" y="836" width="3" height="15" fill="rgb(205,10,11)"/><text x="600.00" y="846.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:28) (1 samples, 0.25%)</title><rect x="600" y="84" width="2" height="15" fill="rgb(228,171,44)"/><text x="603.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="600" y="100" width="2" height="15" fill="rgb(236,226,11)"/><text x="603.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.25%)</title><rect x="600" y="116" width="2" height="15" fill="rgb(253,55,3)"/><text x="603.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="600" y="132" width="2" height="15" fill="rgb(252,210,15)"/><text x="603.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="600" y="148" width="2" height="15" fill="rgb(224,73,1)"/><text x="603.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.25%)</title><rect x="600" y="164" width="2" height="15" fill="rgb(253,44,4)"/><text x="603.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.25%)</title><rect x="600" y="180" width="2" height="15" fill="rgb(241,210,22)"/><text x="603.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.25%)</title><rect x="600" y="196" width="2" height="15" fill="rgb(241,39,45)"/><text x="603.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="600" y="212" width="2" height="15" fill="rgb(216,127,51)"/><text x="603.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="600" y="228" width="2" height="15" fill="rgb(250,106,50)"/><text x="603.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="600" y="244" width="2" height="15" fill="rgb(223,68,35)"/><text x="603.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="600" y="260" width="2" height="15" fill="rgb(219,75,38)"/><text x="603.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="600" y="276" width="2" height="15" fill="rgb(224,139,31)"/><text x="603.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.25%)</title><rect x="600" y="292" width="2" height="15" fill="rgb(226,163,30)"/><text x="603.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="600" y="308" width="2" height="15" fill="rgb(224,129,19)"/><text x="603.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="600" y="324" width="2" height="15" fill="rgb(226,174,19)"/><text x="603.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="600" y="340" width="2" height="15" fill="rgb(224,21,34)"/><text x="603.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(220,7,4)"/><text x="603.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="600" y="372" width="2" height="15" fill="rgb(211,14,42)"/><text x="603.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.25%)</title><rect x="600" y="388" width="2" height="15" fill="rgb(246,152,38)"/><text x="603.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="600" y="404" width="2" height="15" fill="rgb(220,219,47)"/><text x="603.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="600" y="420" width="2" height="15" fill="rgb(219,164,15)"/><text x="603.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="600" y="436" width="2" height="15" fill="rgb(225,222,20)"/><text x="603.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="600" y="452" width="2" height="15" fill="rgb(207,115,32)"/><text x="603.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="600" y="468" width="2" height="15" fill="rgb(225,170,39)"/><text x="603.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.25%)</title><rect x="600" y="484" width="2" height="15" fill="rgb(229,200,1)"/><text x="603.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.25%)</title><rect x="600" y="500" width="2" height="15" fill="rgb(213,139,9)"/><text x="603.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.25%)</title><rect x="600" y="516" width="2" height="15" fill="rgb(252,156,1)"/><text x="603.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.25%)</title><rect x="600" y="532" width="2" height="15" fill="rgb(225,176,54)"/><text x="603.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.25%)</title><rect x="600" y="548" width="2" height="15" fill="rgb(206,63,31)"/><text x="603.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.25%)</title><rect x="600" y="564" width="2" height="15" fill="rgb(218,204,20)"/><text x="603.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.25%)</title><rect x="600" y="580" width="2" height="15" fill="rgb(253,22,43)"/><text x="603.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.25%)</title><rect x="600" y="596" width="2" height="15" fill="rgb(206,48,20)"/><text x="603.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.25%)</title><rect x="600" y="612" width="2" height="15" fill="rgb(231,47,47)"/><text x="603.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.25%)</title><rect x="600" y="628" width="2" height="15" fill="rgb(213,213,3)"/><text x="603.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.25%)</title><rect x="600" y="644" width="2" height="15" fill="rgb(228,11,15)"/><text x="603.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.25%)</title><rect x="600" y="660" width="2" height="15" fill="rgb(209,125,28)"/><text x="603.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.25%)</title><rect x="600" y="676" width="2" height="15" fill="rgb(222,121,44)"/><text x="603.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.25%)</title><rect x="600" y="692" width="2" height="15" fill="rgb(220,208,36)"/><text x="603.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.25%)</title><rect x="600" y="708" width="2" height="15" fill="rgb(211,85,27)"/><text x="603.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.25%)</title><rect x="600" y="724" width="2" height="15" fill="rgb(234,12,26)"/><text x="603.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.25%)</title><rect x="600" y="740" width="2" height="15" fill="rgb(216,201,6)"/><text x="603.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.25%)</title><rect x="600" y="756" width="2" height="15" fill="rgb(251,94,1)"/><text x="603.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.25%)</title><rect x="600" y="772" width="2" height="15" fill="rgb(226,77,26)"/><text x="603.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.25%)</title><rect x="600" y="788" width="2" height="15" fill="rgb(249,211,1)"/><text x="603.00" y="798.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.25%)</title><rect x="600" y="804" width="2" height="15" fill="rgb(253,63,9)"/><text x="603.00" y="814.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.25%)</title><rect x="600" y="820" width="2" height="15" fill="rgb(225,158,28)"/><text x="603.00" y="830.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.25%)</title><rect x="600" y="836" width="2" height="15" fill="rgb(229,69,16)"/><text x="603.00" y="846.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.25%)</title><rect x="600" y="852" width="2" height="15" fill="rgb(226,7,36)"/><text x="603.00" y="862.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.25%)</title><rect x="600" y="868" width="2" height="15" fill="rgb(254,114,47)"/><text x="603.00" y="878.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.25%)</title><rect x="600" y="884" width="2" height="15" fill="rgb(222,141,14)"/><text x="603.00" y="894.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.25%)</title><rect x="600" y="900" width="2" height="15" fill="rgb(211,169,38)"/><text x="603.00" y="910.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.25%)</title><rect x="600" y="916" width="2" height="15" fill="rgb(219,217,44)"/><text x="603.00" y="926.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.25%)</title><rect x="600" y="932" width="2" height="15" fill="rgb(205,150,33)"/><text x="603.00" y="942.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.25%)</title><rect x="600" y="948" width="2" height="15" fill="rgb(236,23,17)"/><text x="603.00" y="958.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.25%)</title><rect x="600" y="964" width="2" height="15" fill="rgb(222,22,1)"/><text x="603.00" y="974.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.25%)</title><rect x="600" y="980" width="2" height="15" fill="rgb(242,155,22)"/><text x="603.00" y="990.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.25%)</title><rect x="600" y="996" width="2" height="15" fill="rgb(251,27,1)"/><text x="603.00" y="1006.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.25%)</title><rect x="600" y="1012" width="2" height="15" fill="rgb(210,66,19)"/><text x="603.00" y="1022.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.25%)</title><rect x="600" y="1028" width="2" height="15" fill="rgb(217,27,4)"/><text x="603.00" y="1038.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.25%)</title><rect x="600" y="1044" width="2" height="15" fill="rgb(216,156,13)"/><text x="603.00" y="1054.50"></text></g><g><title>parse_postfix (jinja2/parser.py:676) (1 samples, 0.25%)</title><rect x="600" y="1060" width="2" height="15" fill="rgb(206,66,15)"/><text x="603.00" y="1070.50"></text></g><g><title>parse_call (jinja2/parser.py:782) (1 samples, 0.25%)</title><rect x="600" y="1076" width="2" height="15" fill="rgb(223,51,28)"/><text x="603.00" y="1086.50"></text></g><g><title>look (jinja2/lexer.py:327) (1 samples, 0.25%)</title><rect x="600" y="1092" width="2" height="15" fill="rgb(217,8,52)"/><text x="603.00" y="1102.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.25%)</title><rect x="600" y="1108" width="2" height="15" fill="rgb(209,27,25)"/><text x="603.00" y="1118.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.25%)</title><rect x="600" y="1124" width="2" height="15" fill="rgb(240,107,23)"/><text x="603.00" y="1134.50"></text></g><g><title>__new__ (jinja2/lexer.py:238) (1 samples, 0.25%)</title><rect x="600" y="1140" width="2" height="15" fill="rgb(220,225,7)"/><text x="603.00" y="1150.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.25%)</title><rect x="602" y="180" width="3" height="15" fill="rgb(242,48,32)"/><text x="605.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.25%)</title><rect x="605" y="196" width="3" height="15" fill="rgb(231,16,25)"/><text x="608.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.25%)</title><rect x="605" y="212" width="3" height="15" fill="rgb(226,229,15)"/><text x="608.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.25%)</title><rect x="605" y="228" width="3" height="15" fill="rgb(237,138,53)"/><text x="608.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.25%)</title><rect x="605" y="244" width="3" height="15" fill="rgb(211,89,21)"/><text x="608.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.25%)</title><rect x="605" y="260" width="3" height="15" fill="rgb(247,219,2)"/><text x="608.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.25%)</title><rect x="605" y="276" width="3" height="15" fill="rgb(244,90,5)"/><text x="608.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.25%)</title><rect x="605" y="292" width="3" height="15" fill="rgb(238,148,37)"/><text x="608.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.25%)</title><rect x="605" y="308" width="3" height="15" fill="rgb(232,39,15)"/><text x="608.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.25%)</title><rect x="605" y="324" width="3" height="15" fill="rgb(224,172,18)"/><text x="608.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.25%)</title><rect x="605" y="340" width="3" height="15" fill="rgb(240,158,5)"/><text x="608.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.25%)</title><rect x="605" y="356" width="3" height="15" fill="rgb(246,215,8)"/><text x="608.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.25%)</title><rect x="605" y="372" width="3" height="15" fill="rgb(254,131,12)"/><text x="608.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:18) (3 samples, 0.76%)</title><rect x="602" y="100" width="9" height="15" fill="rgb(246,228,2)"/><text x="605.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.76%)</title><rect x="602" y="116" width="9" height="15" fill="rgb(226,18,27)"/><text x="605.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.76%)</title><rect x="602" y="132" width="9" height="15" fill="rgb(247,27,13)"/><text x="605.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.76%)</title><rect x="602" y="148" width="9" height="15" fill="rgb(244,143,0)"/><text x="605.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (3 samples, 0.76%)</title><rect x="602" y="164" width="9" height="15" fill="rgb(239,170,50)"/><text x="605.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.51%)</title><rect x="605" y="180" width="6" height="15" fill="rgb(239,127,27)"/><text x="608.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.25%)</title><rect x="608" y="196" width="3" height="15" fill="rgb(220,107,11)"/><text x="611.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.25%)</title><rect x="608" y="212" width="3" height="15" fill="rgb(238,58,5)"/><text x="611.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.25%)</title><rect x="608" y="228" width="3" height="15" fill="rgb(219,48,27)"/><text x="611.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.25%)</title><rect x="608" y="244" width="3" height="15" fill="rgb(240,164,17)"/><text x="611.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="608" y="260" width="3" height="15" fill="rgb(250,159,49)"/><text x="611.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="608" y="276" width="3" height="15" fill="rgb(223,207,30)"/><text x="611.00" y="286.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.51%)</title><rect x="626" y="164" width="6" height="15" fill="rgb(217,172,26)"/><text x="629.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (8 samples, 2.03%)</title><rect x="635" y="180" width="24" height="15" fill="rgb(218,97,12)"/><text x="638.00" y="190.50">r..</text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.51%)</title><rect x="674" y="260" width="6" height="15" fill="rgb(245,41,41)"/><text x="677.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.25%)</title><rect x="677" y="276" width="3" height="15" fill="rgb(210,3,53)"/><text x="680.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.25%)</title><rect x="683" y="308" width="3" height="15" fill="rgb(224,227,28)"/><text x="686.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="683" y="324" width="3" height="15" fill="rgb(243,66,12)"/><text x="686.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.25%)</title><rect x="683" y="340" width="3" height="15" fill="rgb(207,21,45)"/><text x="686.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.25%)</title><rect x="683" y="356" width="3" height="15" fill="rgb(234,85,19)"/><text x="686.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.25%)</title><rect x="683" y="372" width="3" height="15" fill="rgb(217,170,19)"/><text x="686.00" y="382.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:24) (1 samples, 0.25%)</title><rect x="683" y="388" width="3" height="15" fill="rgb(237,42,23)"/><text x="686.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.25%)</title><rect x="686" y="340" width="3" height="15" fill="rgb(237,226,40)"/><text x="689.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.25%)</title><rect x="686" y="356" width="3" height="15" fill="rgb(205,40,29)"/><text x="689.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.25%)</title><rect x="686" y="372" width="3" height="15" fill="rgb(241,183,47)"/><text x="689.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.25%)</title><rect x="686" y="388" width="3" height="15" fill="rgb(247,162,41)"/><text x="689.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1755) (1 samples, 0.25%)</title><rect x="686" y="404" width="3" height="15" fill="rgb(211,38,30)"/><text x="689.00" y="414.50"></text></g><g><title>ensure_dtype_nbo (ufunc_type_resolution.c:265) (1 samples, 0.25%)</title><rect x="686" y="420" width="3" height="15" fill="rgb(240,126,2)"/><text x="689.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.25%)</title><rect x="689" y="356" width="3" height="15" fill="rgb(207,0,39)"/><text x="692.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.25%)</title><rect x="689" y="372" width="3" height="15" fill="rgb(211,213,7)"/><text x="692.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.25%)</title><rect x="689" y="388" width="3" height="15" fill="rgb(214,209,2)"/><text x="692.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.25%)</title><rect x="689" y="404" width="3" height="15" fill="rgb(249,155,31)"/><text x="692.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="689" y="420" width="3" height="15" fill="rgb(248,166,45)"/><text x="692.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.25%)</title><rect x="692" y="372" width="3" height="15" fill="rgb(220,133,32)"/><text x="695.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.25%)</title><rect x="692" y="388" width="3" height="15" fill="rgb(241,2,28)"/><text x="695.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.51%)</title><rect x="692" y="356" width="6" height="15" fill="rgb(253,115,28)"/><text x="695.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.25%)</title><rect x="695" y="372" width="3" height="15" fill="rgb(215,104,37)"/><text x="698.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.25%)</title><rect x="695" y="388" width="3" height="15" fill="rgb(209,156,45)"/><text x="698.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.25%)</title><rect x="698" y="356" width="3" height="15" fill="rgb(232,76,9)"/><text x="701.00" y="366.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1037) (1 samples, 0.25%)</title><rect x="698" y="372" width="3" height="15" fill="rgb(252,189,54)"/><text x="701.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.25%)</title><rect x="701" y="372" width="3" height="15" fill="rgb(227,1,35)"/><text x="704.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="701" y="388" width="3" height="15" fill="rgb(213,81,7)"/><text x="704.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.25%)</title><rect x="704" y="372" width="3" height="15" fill="rgb(253,74,42)"/><text x="707.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.25%)</title><rect x="707" y="372" width="3" height="15" fill="rgb(236,87,28)"/><text x="710.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (3 samples, 0.76%)</title><rect x="710" y="372" width="9" height="15" fill="rgb(211,176,22)"/><text x="713.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.25%)</title><rect x="719" y="372" width="3" height="15" fill="rgb(240,96,33)"/><text x="722.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.25%)</title><rect x="722" y="388" width="3" height="15" fill="rgb(206,40,11)"/><text x="725.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.51%)</title><rect x="725" y="388" width="6" height="15" fill="rgb(235,196,40)"/><text x="728.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (4 samples, 1.02%)</title><rect x="734" y="404" width="12" height="15" fill="rgb(205,110,31)"/><text x="737.00" y="414.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.51%)</title><rect x="746" y="404" width="6" height="15" fill="rgb(214,62,6)"/><text x="749.00" y="414.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.25%)</title><rect x="752" y="404" width="3" height="15" fill="rgb(245,39,13)"/><text x="755.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (10 samples, 2.54%)</title><rect x="731" y="388" width="30" height="15" fill="rgb(245,118,29)"/><text x="734.00" y="398.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (2 samples, 0.51%)</title><rect x="755" y="404" width="6" height="15" fill="rgb(220,48,46)"/><text x="758.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (4 samples, 1.02%)</title><rect x="761" y="388" width="12" height="15" fill="rgb(238,105,50)"/><text x="764.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.51%)</title><rect x="773" y="388" width="6" height="15" fill="rgb(253,148,46)"/><text x="776.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.25%)</title><rect x="779" y="388" width="3" height="15" fill="rgb(226,143,6)"/><text x="782.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (29 samples, 7.36%)</title><rect x="701" y="356" width="87" height="15" fill="rgb(223,150,30)"/><text x="704.00" y="366.50">PyUFunc_Re..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (22 samples, 5.58%)</title><rect x="722" y="372" width="66" height="15" fill="rgb(216,211,36)"/><text x="725.00" y="382.50">reduce_..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (2 samples, 0.51%)</title><rect x="782" y="388" width="6" height="15" fill="rgb(250,38,6)"/><text x="785.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (37 samples, 9.39%)</title><rect x="680" y="260" width="111" height="15" fill="rgb(209,2,50)"/><text x="683.00" y="270.50">array_sum (me..</text></g><g><title>forward_ndarray_method (methods.c:108) (37 samples, 9.39%)</title><rect x="680" y="276" width="111" height="15" fill="rgb(250,71,30)"/><text x="683.00" y="286.50">forward_ndarr..</text></g><g><title>_sum (numpy/core/_methods.py:38) (37 samples, 9.39%)</title><rect x="680" y="292" width="111" height="15" fill="rgb(231,59,17)"/><text x="683.00" y="302.50">_sum (numpy/c..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (35 samples, 8.88%)</title><rect x="686" y="308" width="105" height="15" fill="rgb(254,202,1)"/><text x="689.00" y="318.50">ufunc_reduce..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (35 samples, 8.88%)</title><rect x="686" y="324" width="105" height="15" fill="rgb(221,5,1)"/><text x="689.00" y="334.50">PyUFunc_Gene..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (34 samples, 8.63%)</title><rect x="689" y="340" width="102" height="15" fill="rgb(213,147,17)"/><text x="692.00" y="350.50">PyUFunc_Redu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.25%)</title><rect x="788" y="356" width="3" height="15" fill="rgb(208,115,13)"/><text x="791.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.25%)</title><rect x="788" y="372" width="3" height="15" fill="rgb(247,226,45)"/><text x="791.00" y="382.50"></text></g><g><title>0x7efd037fc965 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="788" y="388" width="3" height="15" fill="rgb(249,188,8)"/><text x="791.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.25%)</title><rect x="791" y="308" width="3" height="15" fill="rgb(225,72,9)"/><text x="794.00" y="318.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.25%)</title><rect x="794" y="308" width="3" height="15" fill="rgb(251,43,4)"/><text x="797.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (1 samples, 0.25%)</title><rect x="794" y="324" width="3" height="15" fill="rgb(240,37,16)"/><text x="797.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:195) (1 samples, 0.25%)</title><rect x="794" y="340" width="3" height="15" fill="rgb(228,206,6)"/><text x="797.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src:1057) (1 samples, 0.25%)</title><rect x="794" y="356" width="3" height="15" fill="rgb(253,188,53)"/><text x="797.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.25%)</title><rect x="794" y="372" width="3" height="15" fill="rgb(242,83,38)"/><text x="797.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.76%)</title><rect x="791" y="276" width="9" height="15" fill="rgb(222,171,49)"/><text x="794.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.76%)</title><rect x="791" y="292" width="9" height="15" fill="rgb(209,179,26)"/><text x="794.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.25%)</title><rect x="797" y="308" width="3" height="15" fill="rgb(244,73,27)"/><text x="800.00" y="318.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (44 samples, 11.17%)</title><rect x="671" y="244" width="132" height="15" fill="rgb(205,58,45)"/><text x="674.00" y="254.50">norm_l1 (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.02%)</title><rect x="791" y="260" width="12" height="15" fill="rgb(224,170,2)"/><text x="794.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.25%)</title><rect x="800" y="276" width="3" height="15" fill="rgb(252,157,18)"/><text x="803.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.25%)</title><rect x="800" y="292" width="3" height="15" fill="rgb(211,147,54)"/><text x="803.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.25%)</title><rect x="800" y="308" width="3" height="15" fill="rgb(219,176,33)"/><text x="803.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.25%)</title><rect x="800" y="324" width="3" height="15" fill="rgb(232,186,43)"/><text x="803.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.51%)</title><rect x="806" y="260" width="6" height="15" fill="rgb(208,24,26)"/><text x="809.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.51%)</title><rect x="806" y="276" width="6" height="15" fill="rgb(215,5,36)"/><text x="809.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.51%)</title><rect x="806" y="292" width="6" height="15" fill="rgb(221,151,31)"/><text x="809.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.51%)</title><rect x="806" y="308" width="6" height="15" fill="rgb(234,190,27)"/><text x="809.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.25%)</title><rect x="812" y="308" width="3" height="15" fill="rgb(246,154,9)"/><text x="815.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.25%)</title><rect x="812" y="324" width="3" height="15" fill="rgb(228,214,24)"/><text x="815.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.25%)</title><rect x="812" y="340" width="3" height="15" fill="rgb(254,15,10)"/><text x="815.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.51%)</title><rect x="815" y="308" width="6" height="15" fill="rgb(242,148,34)"/><text x="818.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.51%)</title><rect x="815" y="324" width="6" height="15" fill="rgb(252,34,13)"/><text x="818.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.51%)</title><rect x="815" y="340" width="6" height="15" fill="rgb(233,197,11)"/><text x="818.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.51%)</title><rect x="815" y="356" width="6" height="15" fill="rgb(247,187,22)"/><text x="818.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.25%)</title><rect x="818" y="372" width="3" height="15" fill="rgb(222,139,38)"/><text x="821.00" y="382.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:590) (1 samples, 0.25%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(238,202,25)"/><text x="824.00" y="366.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.25%)</title><rect x="824" y="356" width="3" height="15" fill="rgb(243,141,3)"/><text x="827.00" y="366.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.25%)</title><rect x="824" y="372" width="3" height="15" fill="rgb(214,88,49)"/><text x="827.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 2.03%)</title><rect x="821" y="308" width="24" height="15" fill="rgb(220,118,1)"/><text x="824.00" y="318.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (8 samples, 2.03%)</title><rect x="821" y="324" width="24" height="15" fill="rgb(233,111,50)"/><text x="824.00" y="334.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (8 samples, 2.03%)</title><rect x="821" y="340" width="24" height="15" fill="rgb(216,50,15)"/><text x="824.00" y="350.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (6 samples, 1.52%)</title><rect x="827" y="356" width="18" height="15" fill="rgb(223,19,1)"/><text x="830.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (6 samples, 1.52%)</title><rect x="827" y="372" width="18" height="15" fill="rgb(226,109,3)"/><text x="830.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.05%)</title><rect x="812" y="292" width="36" height="15" fill="rgb(213,27,0)"/><text x="815.00" y="302.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.25%)</title><rect x="845" y="308" width="3" height="15" fill="rgb(209,20,28)"/><text x="848.00" y="318.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (16 samples, 4.06%)</title><rect x="803" y="244" width="48" height="15" fill="rgb(226,227,30)"/><text x="806.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 3.30%)</title><rect x="812" y="260" width="39" height="15" fill="rgb(214,113,20)"/><text x="815.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 3.30%)</title><rect x="812" y="276" width="39" height="15" fill="rgb(240,180,44)"/><text x="815.00" y="286.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.25%)</title><rect x="848" y="292" width="3" height="15" fill="rgb(229,131,46)"/><text x="851.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.25%)</title><rect x="848" y="308" width="3" height="15" fill="rgb(242,187,0)"/><text x="851.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (62 samples, 15.74%)</title><rect x="668" y="196" width="186" height="15" fill="rgb(235,184,24)"/><text x="671.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (61 samples, 15.48%)</title><rect x="671" y="212" width="183" height="15" fill="rgb(238,125,33)"/><text x="674.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (61 samples, 15.48%)</title><rect x="671" y="228" width="183" height="15" fill="rgb(242,56,2)"/><text x="674.00" y="238.50">_run (mlprodict/onnxrt/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:44) (1 samples, 0.25%)</title><rect x="851" y="244" width="3" height="15" fill="rgb(245,138,43)"/><text x="854.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.51%)</title><rect x="854" y="196" width="6" height="15" fill="rgb(244,168,36)"/><text x="857.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.25%)</title><rect x="857" y="212" width="3" height="15" fill="rgb(234,121,24)"/><text x="860.00" y="222.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.25%)</title><rect x="866" y="260" width="3" height="15" fill="rgb(214,33,13)"/><text x="869.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.25%)</title><rect x="869" y="292" width="3" height="15" fill="rgb(215,26,29)"/><text x="872.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="872" y="372" width="3" height="15" fill="rgb(254,197,6)"/><text x="875.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="872" y="388" width="3" height="15" fill="rgb(223,16,10)"/><text x="875.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.25%)</title><rect x="872" y="404" width="3" height="15" fill="rgb(227,57,51)"/><text x="875.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.25%)</title><rect x="872" y="420" width="3" height="15" fill="rgb(228,205,54)"/><text x="875.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="872" y="436" width="3" height="15" fill="rgb(248,124,5)"/><text x="875.00" y="446.50"></text></g><g><title>0x7efd037fe78d (libc-2.29.so) (1 samples, 0.25%)</title><rect x="872" y="452" width="3" height="15" fill="rgb(219,25,35)"/><text x="875.00" y="462.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.51%)</title><rect x="872" y="324" width="6" height="15" fill="rgb(211,228,1)"/><text x="875.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (2 samples, 0.51%)</title><rect x="872" y="340" width="6" height="15" fill="rgb(207,121,30)"/><text x="875.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.51%)</title><rect x="872" y="356" width="6" height="15" fill="rgb(219,103,0)"/><text x="875.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.25%)</title><rect x="875" y="372" width="3" height="15" fill="rgb(215,54,52)"/><text x="878.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:68) (1 samples, 0.25%)</title><rect x="875" y="388" width="3" height="15" fill="rgb(233,156,48)"/><text x="878.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 2.54%)</title><rect x="869" y="276" width="30" height="15" fill="rgb(251,43,36)"/><text x="872.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (9 samples, 2.28%)</title><rect x="872" y="292" width="27" height="15" fill="rgb(244,24,12)"/><text x="875.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (9 samples, 2.28%)</title><rect x="872" y="308" width="27" height="15" fill="rgb(240,30,28)"/><text x="875.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (7 samples, 1.78%)</title><rect x="878" y="324" width="21" height="15" fill="rgb(240,177,11)"/><text x="881.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:36) (7 samples, 1.78%)</title><rect x="878" y="340" width="21" height="15" fill="rgb(252,84,20)"/><text x="881.00" y="350.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.52%)</title><rect x="881" y="356" width="18" height="15" fill="rgb(211,129,45)"/><text x="884.00" y="366.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.52%)</title><rect x="881" y="372" width="18" height="15" fill="rgb(245,139,29)"/><text x="884.00" y="382.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="887" y="388" width="12" height="15" fill="rgb(216,51,9)"/><text x="890.00" y="398.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.76%)</title><rect x="899" y="276" width="9" height="15" fill="rgb(224,113,23)"/><text x="902.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (20 samples, 5.08%)</title><rect x="860" y="228" width="60" height="15" fill="rgb(248,202,47)"/><text x="863.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (19 samples, 4.82%)</title><rect x="863" y="244" width="57" height="15" fill="rgb(210,156,50)"/><text x="866.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (17 samples, 4.31%)</title><rect x="869" y="260" width="51" height="15" fill="rgb(237,16,47)"/><text x="872.00" y="270.50">dot (..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="908" y="276" width="12" height="15" fill="rgb(226,215,31)"/><text x="911.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.25%)</title><rect x="920" y="260" width="3" height="15" fill="rgb(210,175,48)"/><text x="923.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.25%)</title><rect x="923" y="260" width="3" height="15" fill="rgb(227,211,14)"/><text x="926.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.25%)</title><rect x="923" y="276" width="3" height="15" fill="rgb(211,19,26)"/><text x="926.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.25%)</title><rect x="926" y="260" width="3" height="15" fill="rgb(229,218,48)"/><text x="929.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.25%)</title><rect x="926" y="276" width="3" height="15" fill="rgb(234,47,7)"/><text x="929.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:240) (1 samples, 0.25%)</title><rect x="926" y="292" width="3" height="15" fill="rgb(216,89,18)"/><text x="929.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.25%)</title><rect x="929" y="260" width="3" height="15" fill="rgb(245,195,16)"/><text x="932.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.25%)</title><rect x="929" y="276" width="3" height="15" fill="rgb(219,139,52)"/><text x="932.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.25%)</title><rect x="932" y="308" width="3" height="15" fill="rgb(230,22,27)"/><text x="935.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (1 samples, 0.25%)</title><rect x="935" y="324" width="3" height="15" fill="rgb(223,63,36)"/><text x="938.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.51%)</title><rect x="935" y="308" width="6" height="15" fill="rgb(238,78,41)"/><text x="938.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.25%)</title><rect x="938" y="324" width="3" height="15" fill="rgb(249,156,19)"/><text x="941.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1057) (1 samples, 0.25%)</title><rect x="938" y="340" width="3" height="15" fill="rgb(210,209,5)"/><text x="941.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.02%)</title><rect x="932" y="292" width="12" height="15" fill="rgb(247,205,52)"/><text x="935.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.25%)</title><rect x="941" y="308" width="3" height="15" fill="rgb(237,26,37)"/><text x="944.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.25%)</title><rect x="944" y="340" width="3" height="15" fill="rgb(247,30,11)"/><text x="947.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.02%)</title><rect x="944" y="292" width="12" height="15" fill="rgb(213,28,29)"/><text x="947.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.02%)</title><rect x="944" y="308" width="12" height="15" fill="rgb(211,117,44)"/><text x="947.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.02%)</title><rect x="944" y="324" width="12" height="15" fill="rgb(230,134,14)"/><text x="947.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.76%)</title><rect x="947" y="340" width="9" height="15" fill="rgb(219,134,0)"/><text x="950.00" y="350.50"></text></g><g><title>0x7efd0381cd6f (libc-2.29.so) (3 samples, 0.76%)</title><rect x="947" y="356" width="9" height="15" fill="rgb(218,126,26)"/><text x="950.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.25%)</title><rect x="956" y="292" width="3" height="15" fill="rgb(240,15,41)"/><text x="959.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.25%)</title><rect x="956" y="308" width="3" height="15" fill="rgb(237,184,17)"/><text x="959.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 3.55%)</title><rect x="920" y="244" width="42" height="15" fill="rgb(219,127,35)"/><text x="923.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 2.54%)</title><rect x="932" y="260" width="30" height="15" fill="rgb(246,121,54)"/><text x="935.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 2.54%)</title><rect x="932" y="276" width="30" height="15" fill="rgb(221,53,42)"/><text x="935.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.25%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(230,206,6)"/><text x="962.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.25%)</title><rect x="959" y="308" width="3" height="15" fill="rgb(226,48,24)"/><text x="962.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.25%)</title><rect x="959" y="324" width="3" height="15" fill="rgb(252,136,53)"/><text x="962.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.25%)</title><rect x="959" y="340" width="3" height="15" fill="rgb(216,68,46)"/><text x="962.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (15 samples, 3.81%)</title><rect x="920" y="228" width="45" height="15" fill="rgb(219,46,21)"/><text x="923.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.25%)</title><rect x="962" y="244" width="3" height="15" fill="rgb(214,158,3)"/><text x="965.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2004) (1 samples, 0.25%)</title><rect x="962" y="260" width="3" height="15" fill="rgb(225,207,27)"/><text x="965.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (1 samples, 0.25%)</title><rect x="965" y="228" width="3" height="15" fill="rgb(224,222,12)"/><text x="968.00" y="238.50"></text></g><g><title>0x7efd038da151 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="965" y="244" width="3" height="15" fill="rgb(235,52,29)"/><text x="968.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.25%)</title><rect x="971" y="244" width="3" height="15" fill="rgb(223,126,42)"/><text x="974.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="971" y="260" width="3" height="15" fill="rgb(226,184,31)"/><text x="974.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.25%)</title><rect x="971" y="276" width="3" height="15" fill="rgb(227,179,30)"/><text x="974.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.25%)</title><rect x="971" y="292" width="3" height="15" fill="rgb(250,80,27)"/><text x="974.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:692) (1 samples, 0.25%)</title><rect x="974" y="308" width="3" height="15" fill="rgb(222,140,11)"/><text x="977.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.51%)</title><rect x="974" y="260" width="6" height="15" fill="rgb(222,133,51)"/><text x="977.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (2 samples, 0.51%)</title><rect x="974" y="276" width="6" height="15" fill="rgb(233,43,26)"/><text x="977.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (2 samples, 0.51%)</title><rect x="974" y="292" width="6" height="15" fill="rgb(222,129,49)"/><text x="977.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:700) (1 samples, 0.25%)</title><rect x="977" y="308" width="3" height="15" fill="rgb(250,134,12)"/><text x="980.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:527) (1 samples, 0.25%)</title><rect x="980" y="324" width="3" height="15" fill="rgb(232,112,11)"/><text x="983.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.51%)</title><rect x="980" y="276" width="6" height="15" fill="rgb(211,166,0)"/><text x="983.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.51%)</title><rect x="980" y="292" width="6" height="15" fill="rgb(205,226,50)"/><text x="983.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.51%)</title><rect x="980" y="308" width="6" height="15" fill="rgb(232,82,44)"/><text x="983.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.25%)</title><rect x="983" y="324" width="3" height="15" fill="rgb(215,51,4)"/><text x="986.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:382) (1 samples, 0.25%)</title><rect x="983" y="340" width="3" height="15" fill="rgb(240,31,10)"/><text x="986.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h:222) (1 samples, 0.25%)</title><rect x="983" y="356" width="3" height="15" fill="rgb(225,104,42)"/><text x="986.00" y="366.50"></text></g><g><title>0x7efce5c23254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="986" y="324" width="3" height="15" fill="rgb(208,115,35)"/><text x="989.00" y="334.50"></text></g><g><title>0x7efce5be0fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.02%)</title><rect x="989" y="340" width="12" height="15" fill="rgb(220,229,38)"/><text x="992.00" y="350.50"></text></g><g><title>0x7efd039ceba0 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1037" y="356" width="3" height="15" fill="rgb(238,186,6)"/><text x="1040.00" y="366.50"></text></g><g><title>0x7efd039cebd3 (libm-2.29.so) (2 samples, 0.51%)</title><rect x="1040" y="356" width="6" height="15" fill="rgb(231,0,33)"/><text x="1043.00" y="366.50"></text></g><g><title>0x7efd039cebe7 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1046" y="356" width="3" height="15" fill="rgb(205,144,31)"/><text x="1049.00" y="366.50"></text></g><g><title>0x7efd039cebf9 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1049" y="356" width="3" height="15" fill="rgb(235,175,54)"/><text x="1052.00" y="366.50"></text></g><g><title>0x7efd039cec07 (libm-2.29.so) (3 samples, 0.76%)</title><rect x="1052" y="356" width="9" height="15" fill="rgb(226,99,0)"/><text x="1055.00" y="366.50"></text></g><g><title>0x7efd039cec18 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1061" y="356" width="3" height="15" fill="rgb(254,101,15)"/><text x="1064.00" y="366.50"></text></g><g><title>0x7efd039cec2e (libm-2.29.so) (3 samples, 0.76%)</title><rect x="1064" y="356" width="9" height="15" fill="rgb(239,2,35)"/><text x="1067.00" y="366.50"></text></g><g><title>0x7efd039cec3e (libm-2.29.so) (2 samples, 0.51%)</title><rect x="1073" y="356" width="6" height="15" fill="rgb(214,53,4)"/><text x="1076.00" y="366.50"></text></g><g><title>0x7efd039cec56 (libm-2.29.so) (3 samples, 0.76%)</title><rect x="1079" y="356" width="9" height="15" fill="rgb(226,198,46)"/><text x="1082.00" y="366.50"></text></g><g><title>0x7efd039cec6a (libm-2.29.so) (2 samples, 0.51%)</title><rect x="1088" y="356" width="6" height="15" fill="rgb(233,179,48)"/><text x="1091.00" y="366.50"></text></g><g><title>0x7efce5c23265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (36 samples, 9.14%)</title><rect x="989" y="324" width="108" height="15" fill="rgb(235,1,16)"/><text x="992.00" y="334.50">0x7efce5c2326..</text></g><g><title>exp (libm-2.29.so) (32 samples, 8.12%)</title><rect x="1001" y="340" width="96" height="15" fill="rgb(222,87,22)"/><text x="1004.00" y="350.50">exp (libm-2..</text></g><g><title>0x7efd039cec7b (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1094" y="356" width="3" height="15" fill="rgb(227,57,6)"/><text x="1097.00" y="366.50"></text></g><g><title>0x7efce5c029dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (46 samples, 11.68%)</title><rect x="986" y="308" width="138" height="15" fill="rgb(220,7,40)"/><text x="989.00" y="318.50">0x7efce5c029dd (s..</text></g><g><title>0x7efce5c23279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.28%)</title><rect x="1097" y="324" width="27" height="15" fill="rgb(237,66,39)"/><text x="1100.00" y="334.50">0..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (53 samples, 13.45%)</title><rect x="968" y="228" width="159" height="15" fill="rgb(208,8,24)"/><text x="971.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (51 samples, 12.94%)</title><rect x="974" y="244" width="153" height="15" fill="rgb(237,181,35)"/><text x="977.00" y="254.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (49 samples, 12.44%)</title><rect x="980" y="260" width="147" height="15" fill="rgb(247,25,41)"/><text x="983.00" y="270.50">PyUFunc_GenericFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (47 samples, 11.93%)</title><rect x="986" y="276" width="141" height="15" fill="rgb(221,116,3)"/><text x="989.00" y="286.50">execute_legacy_uf..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (47 samples, 11.93%)</title><rect x="986" y="292" width="141" height="15" fill="rgb(248,91,31)"/><text x="989.00" y="302.50">trivial_two_opera..</text></g><g><title>0x7efce5c029e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1124" y="308" width="3" height="15" fill="rgb(243,188,25)"/><text x="1127.00" y="318.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.25%)</title><rect x="1133" y="244" width="3" height="15" fill="rgb(205,202,26)"/><text x="1136.00" y="254.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.25%)</title><rect x="1136" y="308" width="3" height="15" fill="rgb(217,127,43)"/><text x="1139.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:104) (1 samples, 0.25%)</title><rect x="1139" y="324" width="3" height="15" fill="rgb(218,200,17)"/><text x="1142.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.25%)</title><rect x="1139" y="340" width="3" height="15" fill="rgb(225,142,46)"/><text x="1142.00" y="350.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3094) (2 samples, 0.51%)</title><rect x="1145" y="340" width="6" height="15" fill="rgb(220,201,45)"/><text x="1148.00" y="350.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3097) (1 samples, 0.25%)</title><rect x="1151" y="340" width="3" height="15" fill="rgb(234,221,44)"/><text x="1154.00" y="350.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3109) (1 samples, 0.25%)</title><rect x="1154" y="340" width="3" height="15" fill="rgb(214,97,45)"/><text x="1157.00" y="350.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3127) (1 samples, 0.25%)</title><rect x="1157" y="340" width="3" height="15" fill="rgb(242,80,24)"/><text x="1160.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (7 samples, 1.78%)</title><rect x="1142" y="324" width="21" height="15" fill="rgb(225,182,36)"/><text x="1145.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3129) (1 samples, 0.25%)</title><rect x="1160" y="340" width="3" height="15" fill="rgb(211,227,54)"/><text x="1163.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (103 samples, 26.14%)</title><rect x="860" y="196" width="309" height="15" fill="rgb(250,192,54)"/><text x="863.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (103 samples, 26.14%)</title><rect x="860" y="212" width="309" height="15" fill="rgb(252,153,54)"/><text x="863.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (14 samples, 3.55%)</title><rect x="1127" y="228" width="42" height="15" fill="rgb(206,17,14)"/><text x="1130.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (11 samples, 2.79%)</title><rect x="1136" y="244" width="33" height="15" fill="rgb(228,129,38)"/><text x="1139.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.79%)</title><rect x="1136" y="260" width="33" height="15" fill="rgb(224,208,10)"/><text x="1139.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (11 samples, 2.79%)</title><rect x="1136" y="276" width="33" height="15" fill="rgb(242,157,17)"/><text x="1139.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 2.79%)</title><rect x="1136" y="292" width="33" height="15" fill="rgb(223,168,52)"/><text x="1139.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c:302) (10 samples, 2.54%)</title><rect x="1139" y="308" width="30" height="15" fill="rgb(254,68,30)"/><text x="1142.00" y="318.50">ar..</text></g><g><title>PyArray_ArgMax (calculation.c:132) (2 samples, 0.51%)</title><rect x="1163" y="324" width="6" height="15" fill="rgb(224,65,51)"/><text x="1166.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (171 samples, 43.40%)</title><rect x="659" y="180" width="513" height="15" fill="rgb(241,229,3)"/><text x="662.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.25%)</title><rect x="1169" y="196" width="3" height="15" fill="rgb(244,131,28)"/><text x="1172.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.25%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(229,72,43)"/><text x="1172.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.25%)</title><rect x="1172" y="180" width="3" height="15" fill="rgb(206,128,47)"/><text x="1175.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (184 samples, 46.70%)</title><rect x="632" y="164" width="552" height="15" fill="rgb(243,114,19)"/><text x="635.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.76%)</title><rect x="1175" y="180" width="9" height="15" fill="rgb(248,77,43)"/><text x="1178.00" y="190.50"></text></g><g><title>0x7efd0381d124 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1181" y="196" width="3" height="15" fill="rgb(211,75,1)"/><text x="1184.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (189 samples, 47.97%)</title><rect x="620" y="132" width="567" height="15" fill="rgb(238,94,46)"/><text x="623.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (188 samples, 47.72%)</title><rect x="623" y="148" width="564" height="15" fill="rgb(242,6,26)"/><text x="626.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.25%)</title><rect x="1184" y="164" width="3" height="15" fill="rgb(244,32,23)"/><text x="1187.00" y="174.50"></text></g><g><title>all (394 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,69,33)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:45) (197 samples, 50.00%)</title><rect x="600" y="52" width="590" height="15" fill="rgb(230,204,12)"/><text x="603.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:44) (197 samples, 50.00%)</title><rect x="600" y="68" width="590" height="15" fill="rgb(217,39,9)"/><text x="603.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_100..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:29) (196 samples, 49.75%)</title><rect x="602" y="84" width="588" height="15" fill="rgb(240,134,37)"/><text x="605.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_10..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_nozipmap.py:23) (193 samples, 48.98%)</title><rect x="611" y="100" width="579" height="15" fill="rgb(206,53,44)"/><text x="614.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 48.48%)</title><rect x="617" y="116" width="573" height="15" fill="rgb(249,74,27)"/><text x="620.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(254,41,41)"/><text x="1190.00" y="142.50"></text></g></g></svg>