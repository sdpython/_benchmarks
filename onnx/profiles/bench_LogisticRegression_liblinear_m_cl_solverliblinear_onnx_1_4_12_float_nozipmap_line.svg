<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1798" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1781.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1781.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:28) (1 samples, 0.47%)</title><rect x="10" y="84" width="5" height="15" fill="rgb(223,57,21)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.47%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(242,175,4)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.47%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(251,137,27)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.47%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(221,113,50)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(231,113,38)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(222,178,36)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(244,94,25)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(230,168,22)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(248,129,47)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:11) (1 samples, 0.47%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(254,124,43)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(243,156,15)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(221,138,50)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(247,218,3)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(237,67,1)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(250,73,52)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py:161) (1 samples, 0.47%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(248,142,11)"/><text x="13.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py:136) (1 samples, 0.47%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(212,95,5)"/><text x="13.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.47%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(244,167,5)"/><text x="13.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.47%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(221,130,48)"/><text x="13.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (1 samples, 0.47%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(214,177,10)"/><text x="13.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(205,170,1)"/><text x="13.00" y="414.50"></text></g><g><title>0x7fa239737995 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(210,130,40)"/><text x="13.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(245,218,48)"/><text x="13.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(247,228,2)"/><text x="13.00" y="462.50"></text></g><g><title>0x7fa239737258 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(231,137,38)"/><text x="13.00" y="478.50"></text></g><g><title>0x7fa239784d7a (ld-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(245,140,8)"/><text x="13.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(246,39,43)"/><text x="13.00" y="510.50"></text></g><g><title>0x7fa23978518b (ld-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(215,115,11)"/><text x="13.00" y="526.50"></text></g><g><title>0x7fa23977ac1a (ld-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(239,95,0)"/><text x="13.00" y="542.50"></text></g><g><title>0x7fa2397783da (ld-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(234,16,11)"/><text x="13.00" y="558.50"></text></g><g><title>0x7fa23978cbd2 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(248,209,3)"/><text x="13.00" y="574.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (1 samples, 0.47%)</title><rect x="15" y="180" width="6" height="15" fill="rgb(221,7,50)"/><text x="18.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.47%)</title><rect x="15" y="196" width="6" height="15" fill="rgb(250,201,50)"/><text x="18.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.47%)</title><rect x="15" y="212" width="6" height="15" fill="rgb(221,195,24)"/><text x="18.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.95%)</title><rect x="15" y="164" width="11" height="15" fill="rgb(235,48,26)"/><text x="18.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.47%)</title><rect x="21" y="180" width="5" height="15" fill="rgb(254,34,53)"/><text x="24.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.47%)</title><rect x="21" y="196" width="5" height="15" fill="rgb(218,60,34)"/><text x="24.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:18) (3 samples, 1.42%)</title><rect x="15" y="100" width="17" height="15" fill="rgb(234,81,26)"/><text x="18.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.42%)</title><rect x="15" y="116" width="17" height="15" fill="rgb(254,44,37)"/><text x="18.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 1.42%)</title><rect x="15" y="132" width="17" height="15" fill="rgb(221,204,25)"/><text x="18.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 1.42%)</title><rect x="15" y="148" width="17" height="15" fill="rgb(250,42,29)"/><text x="18.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.47%)</title><rect x="26" y="164" width="6" height="15" fill="rgb(212,208,41)"/><text x="29.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.47%)</title><rect x="26" y="180" width="6" height="15" fill="rgb(235,212,34)"/><text x="29.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.47%)</title><rect x="26" y="196" width="6" height="15" fill="rgb(208,60,50)"/><text x="29.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.47%)</title><rect x="26" y="212" width="6" height="15" fill="rgb(219,132,36)"/><text x="29.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.47%)</title><rect x="26" y="228" width="6" height="15" fill="rgb(210,25,41)"/><text x="29.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.47%)</title><rect x="26" y="244" width="6" height="15" fill="rgb(210,71,13)"/><text x="29.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.95%)</title><rect x="60" y="180" width="11" height="15" fill="rgb(220,7,52)"/><text x="63.00" y="190.50"></text></g><g><title>0x7fa2394d01d6 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="93" y="196" width="6" height="15" fill="rgb(208,21,43)"/><text x="96.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (11 samples, 5.21%)</title><rect x="43" y="148" width="62" height="15" fill="rgb(247,81,34)"/><text x="46.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 4.74%)</title><rect x="49" y="164" width="56" height="15" fill="rgb(222,25,15)"/><text x="52.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.84%)</title><rect x="71" y="180" width="34" height="15" fill="rgb(242,160,23)"/><text x="74.00" y="190.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.47%)</title><rect x="99" y="196" width="6" height="15" fill="rgb(209,182,36)"/><text x="102.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.47%)</title><rect x="105" y="148" width="5" height="15" fill="rgb(225,205,46)"/><text x="108.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (2 samples, 0.95%)</title><rect x="110" y="148" width="11" height="15" fill="rgb(247,170,25)"/><text x="113.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.47%)</title><rect x="133" y="212" width="5" height="15" fill="rgb(214,205,10)"/><text x="136.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.95%)</title><rect x="138" y="228" width="11" height="15" fill="rgb(211,71,41)"/><text x="141.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (5 samples, 2.37%)</title><rect x="127" y="180" width="28" height="15" fill="rgb(227,211,45)"/><text x="130.00" y="190.50">d..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 2.37%)</title><rect x="127" y="196" width="28" height="15" fill="rgb(207,46,43)"/><text x="130.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.42%)</title><rect x="138" y="212" width="17" height="15" fill="rgb(231,191,10)"/><text x="141.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.47%)</title><rect x="149" y="228" width="6" height="15" fill="rgb(251,12,43)"/><text x="152.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.47%)</title><rect x="155" y="196" width="5" height="15" fill="rgb(240,87,8)"/><text x="158.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.47%)</title><rect x="160" y="196" width="6" height="15" fill="rgb(221,223,17)"/><text x="163.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.47%)</title><rect x="166" y="196" width="6" height="15" fill="rgb(231,214,39)"/><text x="169.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.47%)</title><rect x="183" y="212" width="5" height="15" fill="rgb(220,115,12)"/><text x="186.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.90%)</title><rect x="172" y="196" width="22" height="15" fill="rgb(253,228,22)"/><text x="175.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.47%)</title><rect x="188" y="212" width="6" height="15" fill="rgb(244,9,4)"/><text x="191.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.90%)</title><rect x="194" y="196" width="22" height="15" fill="rgb(242,122,15)"/><text x="197.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.90%)</title><rect x="194" y="212" width="22" height="15" fill="rgb(205,96,5)"/><text x="197.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.42%)</title><rect x="200" y="228" width="16" height="15" fill="rgb(232,225,31)"/><text x="203.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.95%)</title><rect x="216" y="196" width="12" height="15" fill="rgb(235,17,42)"/><text x="219.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.47%)</title><rect x="222" y="212" width="6" height="15" fill="rgb(207,101,20)"/><text x="225.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.47%)</title><rect x="228" y="212" width="5" height="15" fill="rgb(218,111,3)"/><text x="231.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.95%)</title><rect x="228" y="196" width="11" height="15" fill="rgb(247,9,22)"/><text x="231.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.47%)</title><rect x="233" y="212" width="6" height="15" fill="rgb(234,80,27)"/><text x="236.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.47%)</title><rect x="239" y="196" width="5" height="15" fill="rgb(230,71,5)"/><text x="242.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.47%)</title><rect x="244" y="196" width="6" height="15" fill="rgb(212,44,19)"/><text x="247.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.95%)</title><rect x="261" y="228" width="11" height="15" fill="rgb(236,107,9)"/><text x="264.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.95%)</title><rect x="272" y="228" width="12" height="15" fill="rgb(248,142,19)"/><text x="275.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 3.32%)</title><rect x="250" y="212" width="39" height="15" fill="rgb(216,204,20)"/><text x="253.00" y="222.50">_as..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="284" y="228" width="5" height="15" fill="rgb(225,121,43)"/><text x="287.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 3.79%)</title><rect x="250" y="196" width="45" height="15" fill="rgb(217,159,3)"/><text x="253.00" y="206.50">chec..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.47%)</title><rect x="289" y="212" width="6" height="15" fill="rgb(239,44,36)"/><text x="292.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.42%)</title><rect x="295" y="212" width="16" height="15" fill="rgb(219,198,21)"/><text x="298.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.47%)</title><rect x="311" y="212" width="6" height="15" fill="rgb(219,152,52)"/><text x="314.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 4.74%)</title><rect x="295" y="196" width="56" height="15" fill="rgb(225,154,43)"/><text x="298.00" y="206.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.84%)</title><rect x="317" y="212" width="34" height="15" fill="rgb(213,143,15)"/><text x="320.00" y="222.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.90%)</title><rect x="328" y="228" width="23" height="15" fill="rgb(218,173,48)"/><text x="331.00" y="238.50">_..</text></g><g><title>__subclasscheck__ (abc.py:143) (3 samples, 1.42%)</title><rect x="334" y="244" width="17" height="15" fill="rgb(247,26,8)"/><text x="337.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (36 samples, 17.06%)</title><rect x="155" y="180" width="201" height="15" fill="rgb(210,111,35)"/><text x="158.00" y="190.50">decision_function (sklearn..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.47%)</title><rect x="351" y="196" width="5" height="15" fill="rgb(214,213,40)"/><text x="354.00" y="206.50"></text></g><g><title>0x7fa2394d0120 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="367" y="212" width="6" height="15" fill="rgb(226,207,8)"/><text x="370.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.47%)</title><rect x="373" y="228" width="6" height="15" fill="rgb(230,115,46)"/><text x="376.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.47%)</title><rect x="373" y="244" width="6" height="15" fill="rgb(238,67,2)"/><text x="376.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.47%)</title><rect x="379" y="260" width="5" height="15" fill="rgb(239,53,18)"/><text x="382.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.47%)</title><rect x="379" y="276" width="5" height="15" fill="rgb(254,201,24)"/><text x="382.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.47%)</title><rect x="379" y="292" width="5" height="15" fill="rgb(231,127,32)"/><text x="382.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.47%)</title><rect x="379" y="308" width="5" height="15" fill="rgb(235,154,45)"/><text x="382.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.47%)</title><rect x="379" y="324" width="5" height="15" fill="rgb(213,170,2)"/><text x="382.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.47%)</title><rect x="379" y="340" width="5" height="15" fill="rgb(212,87,23)"/><text x="382.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.47%)</title><rect x="379" y="356" width="5" height="15" fill="rgb(254,214,48)"/><text x="382.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.47%)</title><rect x="379" y="372" width="5" height="15" fill="rgb(216,14,14)"/><text x="382.00" y="382.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.47%)</title><rect x="384" y="276" width="6" height="15" fill="rgb(208,145,44)"/><text x="387.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.47%)</title><rect x="384" y="292" width="6" height="15" fill="rgb(224,93,11)"/><text x="387.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.42%)</title><rect x="379" y="244" width="16" height="15" fill="rgb(230,173,30)"/><text x="382.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.95%)</title><rect x="384" y="260" width="11" height="15" fill="rgb(218,42,9)"/><text x="387.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.47%)</title><rect x="390" y="276" width="5" height="15" fill="rgb(247,64,48)"/><text x="393.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2161) (1 samples, 0.47%)</title><rect x="390" y="292" width="5" height="15" fill="rgb(214,92,39)"/><text x="393.00" y="302.50"></text></g><g><title>array_add (number.c:330) (6 samples, 2.84%)</title><rect x="367" y="196" width="34" height="15" fill="rgb(248,203,9)"/><text x="370.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.37%)</title><rect x="373" y="212" width="28" height="15" fill="rgb(206,82,11)"/><text x="376.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.90%)</title><rect x="379" y="228" width="22" height="15" fill="rgb(212,96,3)"/><text x="382.00" y="238.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.47%)</title><rect x="395" y="244" width="6" height="15" fill="rgb(228,51,37)"/><text x="398.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.47%)</title><rect x="407" y="276" width="5" height="15" fill="rgb(254,59,23)"/><text x="410.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.47%)</title><rect x="407" y="292" width="5" height="15" fill="rgb(221,146,6)"/><text x="410.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.47%)</title><rect x="407" y="308" width="5" height="15" fill="rgb(242,166,13)"/><text x="410.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.47%)</title><rect x="407" y="324" width="5" height="15" fill="rgb(205,25,36)"/><text x="410.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.47%)</title><rect x="407" y="340" width="5" height="15" fill="rgb(243,81,35)"/><text x="410.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.47%)</title><rect x="407" y="356" width="5" height="15" fill="rgb(219,124,46)"/><text x="410.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.47%)</title><rect x="412" y="276" width="6" height="15" fill="rgb(230,12,39)"/><text x="415.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.47%)</title><rect x="412" y="292" width="6" height="15" fill="rgb(248,65,53)"/><text x="415.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.47%)</title><rect x="412" y="308" width="6" height="15" fill="rgb(217,83,2)"/><text x="415.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.47%)</title><rect x="412" y="324" width="6" height="15" fill="rgb(226,87,53)"/><text x="415.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.47%)</title><rect x="418" y="308" width="5" height="15" fill="rgb(230,20,50)"/><text x="421.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.47%)</title><rect x="418" y="324" width="5" height="15" fill="rgb(218,107,14)"/><text x="421.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.47%)</title><rect x="423" y="308" width="6" height="15" fill="rgb(237,42,6)"/><text x="426.00" y="318.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="423" y="324" width="6" height="15" fill="rgb(226,26,51)"/><text x="426.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 2.37%)</title><rect x="407" y="244" width="28" height="15" fill="rgb(249,5,5)"/><text x="410.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 2.37%)</title><rect x="407" y="260" width="28" height="15" fill="rgb(210,35,40)"/><text x="410.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 1.42%)</title><rect x="418" y="276" width="17" height="15" fill="rgb(235,27,14)"/><text x="421.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.42%)</title><rect x="418" y="292" width="17" height="15" fill="rgb(238,58,0)"/><text x="421.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.47%)</title><rect x="429" y="308" width="6" height="15" fill="rgb(207,208,34)"/><text x="432.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3998) (1 samples, 0.47%)</title><rect x="429" y="324" width="6" height="15" fill="rgb(242,188,54)"/><text x="432.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.47%)</title><rect x="435" y="244" width="5" height="15" fill="rgb(254,11,9)"/><text x="438.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.47%)</title><rect x="440" y="244" width="6" height="15" fill="rgb(218,214,52)"/><text x="443.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (9 samples, 4.27%)</title><rect x="401" y="196" width="50" height="15" fill="rgb(214,213,18)"/><text x="404.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 3.79%)</title><rect x="407" y="212" width="44" height="15" fill="rgb(223,189,50)"/><text x="410.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 3.79%)</title><rect x="407" y="228" width="44" height="15" fill="rgb(246,197,23)"/><text x="410.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.47%)</title><rect x="446" y="244" width="5" height="15" fill="rgb(249,50,43)"/><text x="449.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.47%)</title><rect x="446" y="260" width="5" height="15" fill="rgb(226,144,44)"/><text x="449.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="446" y="276" width="5" height="15" fill="rgb(217,0,14)"/><text x="449.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="446" y="292" width="5" height="15" fill="rgb(207,214,29)"/><text x="449.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.47%)</title><rect x="446" y="308" width="5" height="15" fill="rgb(223,146,17)"/><text x="449.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (59 samples, 27.96%)</title><rect x="127" y="164" width="330" height="15" fill="rgb(225,205,4)"/><text x="130.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_bas..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (18 samples, 8.53%)</title><rect x="356" y="180" width="101" height="15" fill="rgb(224,159,7)"/><text x="359.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.47%)</title><rect x="451" y="196" width="6" height="15" fill="rgb(246,93,10)"/><text x="454.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.47%)</title><rect x="451" y="212" width="6" height="15" fill="rgb(238,15,39)"/><text x="454.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.47%)</title><rect x="468" y="212" width="6" height="15" fill="rgb(213,46,8)"/><text x="471.00" y="222.50"></text></g><g><title>0x7fa2394c5e54 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="474" y="244" width="5" height="15" fill="rgb(207,200,30)"/><text x="477.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 1.42%)</title><rect x="468" y="180" width="17" height="15" fill="rgb(246,13,7)"/><text x="471.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.42%)</title><rect x="468" y="196" width="17" height="15" fill="rgb(238,229,31)"/><text x="471.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.95%)</title><rect x="474" y="212" width="11" height="15" fill="rgb(252,36,46)"/><text x="477.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.95%)</title><rect x="474" y="228" width="11" height="15" fill="rgb(231,144,17)"/><text x="477.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="479" y="244" width="6" height="15" fill="rgb(208,221,40)"/><text x="482.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.47%)</title><rect x="485" y="196" width="5" height="15" fill="rgb(226,170,31)"/><text x="488.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.47%)</title><rect x="485" y="212" width="5" height="15" fill="rgb(214,174,29)"/><text x="488.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.47%)</title><rect x="490" y="244" width="6" height="15" fill="rgb(225,156,45)"/><text x="493.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.95%)</title><rect x="490" y="212" width="12" height="15" fill="rgb(249,186,38)"/><text x="493.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.95%)</title><rect x="490" y="228" width="12" height="15" fill="rgb(210,173,5)"/><text x="493.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:817) (1 samples, 0.47%)</title><rect x="496" y="244" width="6" height="15" fill="rgb(219,141,27)"/><text x="499.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.42%)</title><rect x="490" y="196" width="17" height="15" fill="rgb(222,52,32)"/><text x="493.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.47%)</title><rect x="502" y="212" width="5" height="15" fill="rgb(216,103,53)"/><text x="505.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.47%)</title><rect x="502" y="228" width="5" height="15" fill="rgb(244,41,43)"/><text x="505.00" y="238.50"></text></g><g><title>0x7fa21b8b59a2 (?) (1 samples, 0.47%)</title><rect x="502" y="244" width="5" height="15" fill="rgb(205,213,15)"/><text x="505.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (10 samples, 4.74%)</title><rect x="457" y="164" width="56" height="15" fill="rgb(227,87,25)"/><text x="460.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.37%)</title><rect x="485" y="180" width="28" height="15" fill="rgb(225,121,52)"/><text x="488.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.47%)</title><rect x="507" y="196" width="6" height="15" fill="rgb(242,216,7)"/><text x="510.00" y="206.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:304) (1 samples, 0.47%)</title><rect x="507" y="212" width="6" height="15" fill="rgb(230,166,8)"/><text x="510.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.47%)</title><rect x="513" y="180" width="5" height="15" fill="rgb(251,23,20)"/><text x="516.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.47%)</title><rect x="513" y="196" width="5" height="15" fill="rgb(250,197,18)"/><text x="516.00" y="206.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.95%)</title><rect x="530" y="228" width="11" height="15" fill="rgb(240,4,3)"/><text x="533.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.95%)</title><rect x="530" y="244" width="11" height="15" fill="rgb(222,197,1)"/><text x="533.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.95%)</title><rect x="530" y="260" width="11" height="15" fill="rgb(252,5,17)"/><text x="533.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.95%)</title><rect x="530" y="276" width="11" height="15" fill="rgb(228,103,46)"/><text x="533.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.95%)</title><rect x="530" y="292" width="11" height="15" fill="rgb(207,82,26)"/><text x="533.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.95%)</title><rect x="530" y="308" width="11" height="15" fill="rgb(244,103,28)"/><text x="533.00" y="318.50"></text></g><g><title>0x7fa2394c5e7a (libc-2.29.so) (1 samples, 0.47%)</title><rect x="535" y="324" width="6" height="15" fill="rgb(215,89,24)"/><text x="538.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4528) (1 samples, 0.47%)</title><rect x="541" y="244" width="5" height="15" fill="rgb(206,12,3)"/><text x="544.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.47%)</title><rect x="546" y="260" width="6" height="15" fill="rgb(240,206,15)"/><text x="549.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.47%)</title><rect x="546" y="276" width="6" height="15" fill="rgb(246,172,25)"/><text x="549.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.47%)</title><rect x="546" y="292" width="6" height="15" fill="rgb(237,123,35)"/><text x="549.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.47%)</title><rect x="546" y="308" width="6" height="15" fill="rgb(251,55,51)"/><text x="549.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.95%)</title><rect x="552" y="276" width="11" height="15" fill="rgb(228,7,3)"/><text x="555.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.95%)</title><rect x="552" y="292" width="11" height="15" fill="rgb(231,212,1)"/><text x="555.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.95%)</title><rect x="552" y="308" width="11" height="15" fill="rgb(234,177,24)"/><text x="555.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.95%)</title><rect x="552" y="324" width="11" height="15" fill="rgb(224,141,54)"/><text x="555.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.47%)</title><rect x="558" y="340" width="5" height="15" fill="rgb(217,71,27)"/><text x="561.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.47%)</title><rect x="563" y="356" width="6" height="15" fill="rgb(235,72,20)"/><text x="566.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.95%)</title><rect x="563" y="276" width="11" height="15" fill="rgb(207,143,41)"/><text x="566.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.95%)</title><rect x="563" y="292" width="11" height="15" fill="rgb(236,214,25)"/><text x="566.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.95%)</title><rect x="563" y="308" width="11" height="15" fill="rgb(208,39,29)"/><text x="566.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.95%)</title><rect x="563" y="324" width="11" height="15" fill="rgb(237,176,27)"/><text x="566.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (2 samples, 0.95%)</title><rect x="563" y="340" width="11" height="15" fill="rgb(251,117,29)"/><text x="566.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.47%)</title><rect x="569" y="356" width="5" height="15" fill="rgb(234,159,40)"/><text x="572.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.47%)</title><rect x="574" y="276" width="6" height="15" fill="rgb(233,156,18)"/><text x="577.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.47%)</title><rect x="574" y="292" width="6" height="15" fill="rgb(233,6,17)"/><text x="577.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2147) (1 samples, 0.47%)</title><rect x="574" y="308" width="6" height="15" fill="rgb(213,131,28)"/><text x="577.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.47%)</title><rect x="580" y="292" width="6" height="15" fill="rgb(245,28,36)"/><text x="583.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 6.16%)</title><rect x="518" y="180" width="73" height="15" fill="rgb(235,19,50)"/><text x="521.00" y="190.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 6.16%)</title><rect x="518" y="196" width="73" height="15" fill="rgb(225,24,51)"/><text x="521.00" y="206.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 5.69%)</title><rect x="524" y="212" width="67" height="15" fill="rgb(230,177,53)"/><text x="527.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 4.27%)</title><rect x="541" y="228" width="50" height="15" fill="rgb(225,137,52)"/><text x="544.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 3.79%)</title><rect x="546" y="244" width="45" height="15" fill="rgb(225,188,36)"/><text x="549.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 3.32%)</title><rect x="552" y="260" width="39" height="15" fill="rgb(216,37,19)"/><text x="555.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.95%)</title><rect x="580" y="276" width="11" height="15" fill="rgb(234,33,22)"/><text x="583.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.47%)</title><rect x="586" y="292" width="5" height="15" fill="rgb(223,6,51)"/><text x="589.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.47%)</title><rect x="591" y="196" width="6" height="15" fill="rgb(227,81,5)"/><text x="594.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.47%)</title><rect x="591" y="212" width="6" height="15" fill="rgb(207,78,23)"/><text x="594.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.47%)</title><rect x="597" y="196" width="5" height="15" fill="rgb(208,21,52)"/><text x="600.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.47%)</title><rect x="597" y="212" width="5" height="15" fill="rgb(216,64,46)"/><text x="600.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.47%)</title><rect x="602" y="244" width="6" height="15" fill="rgb(240,163,54)"/><text x="605.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.47%)</title><rect x="602" y="260" width="6" height="15" fill="rgb(227,101,15)"/><text x="605.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.47%)</title><rect x="602" y="276" width="6" height="15" fill="rgb(211,56,26)"/><text x="605.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:38) (108 samples, 51.18%)</title><rect x="10" y="52" width="603" height="15" fill="rgb(214,97,45)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:37) (108 samples, 51.18%)</title><rect x="10" y="68" width="603" height="15" fill="rgb(244,35,9)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_fl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (107 samples, 50.71%)</title><rect x="15" y="84" width="598" height="15" fill="rgb(234,41,15)"/><text x="18.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (104 samples, 49.29%)</title><rect x="32" y="100" width="581" height="15" fill="rgb(248,163,30)"/><text x="35.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (104 samples, 49.29%)</title><rect x="32" y="116" width="581" height="15" fill="rgb(240,78,12)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (102 samples, 48.34%)</title><rect x="43" y="132" width="570" height="15" fill="rgb(227,104,20)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (88 samples, 41.71%)</title><rect x="121" y="148" width="492" height="15" fill="rgb(252,139,3)"/><text x="124.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (18 samples, 8.53%)</title><rect x="513" y="164" width="100" height="15" fill="rgb(218,152,52)"/><text x="516.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.90%)</title><rect x="591" y="180" width="22" height="15" fill="rgb(233,193,46)"/><text x="594.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.95%)</title><rect x="602" y="196" width="11" height="15" fill="rgb(232,188,21)"/><text x="605.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.95%)</title><rect x="602" y="212" width="11" height="15" fill="rgb(247,190,22)"/><text x="605.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.95%)</title><rect x="602" y="228" width="11" height="15" fill="rgb(238,153,13)"/><text x="605.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.47%)</title><rect x="608" y="244" width="5" height="15" fill="rgb(230,166,28)"/><text x="611.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.47%)</title><rect x="608" y="260" width="5" height="15" fill="rgb(232,43,30)"/><text x="611.00" y="270.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (1 samples, 0.47%)</title><rect x="613" y="148" width="6" height="15" fill="rgb(205,167,51)"/><text x="616.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="613" y="164" width="6" height="15" fill="rgb(212,228,45)"/><text x="616.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="613" y="180" width="6" height="15" fill="rgb(226,8,35)"/><text x="616.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="613" y="196" width="6" height="15" fill="rgb(237,93,33)"/><text x="616.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="613" y="212" width="6" height="15" fill="rgb(221,38,10)"/><text x="616.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="228" width="6" height="15" fill="rgb(213,138,15)"/><text x="616.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.47%)</title><rect x="613" y="244" width="6" height="15" fill="rgb(251,100,9)"/><text x="616.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="613" y="260" width="6" height="15" fill="rgb(251,18,40)"/><text x="616.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="276" width="6" height="15" fill="rgb(222,100,9)"/><text x="616.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="613" y="292" width="6" height="15" fill="rgb(253,70,40)"/><text x="616.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="613" y="308" width="6" height="15" fill="rgb(209,84,23)"/><text x="616.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="613" y="324" width="6" height="15" fill="rgb(220,83,19)"/><text x="616.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="613" y="340" width="6" height="15" fill="rgb(238,225,14)"/><text x="616.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="356" width="6" height="15" fill="rgb(221,224,22)"/><text x="616.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.47%)</title><rect x="613" y="372" width="6" height="15" fill="rgb(251,120,33)"/><text x="616.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="613" y="388" width="6" height="15" fill="rgb(239,47,31)"/><text x="616.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="404" width="6" height="15" fill="rgb(213,185,10)"/><text x="616.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="613" y="420" width="6" height="15" fill="rgb(238,162,38)"/><text x="616.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="613" y="436" width="6" height="15" fill="rgb(241,170,6)"/><text x="616.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="613" y="452" width="6" height="15" fill="rgb(209,2,19)"/><text x="616.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="613" y="468" width="6" height="15" fill="rgb(213,10,14)"/><text x="616.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="484" width="6" height="15" fill="rgb(230,114,47)"/><text x="616.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.47%)</title><rect x="613" y="500" width="6" height="15" fill="rgb(222,104,7)"/><text x="616.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="613" y="516" width="6" height="15" fill="rgb(237,113,53)"/><text x="616.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="532" width="6" height="15" fill="rgb(242,56,31)"/><text x="616.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="613" y="548" width="6" height="15" fill="rgb(246,110,6)"/><text x="616.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="613" y="564" width="6" height="15" fill="rgb(242,7,30)"/><text x="616.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="613" y="580" width="6" height="15" fill="rgb(238,187,12)"/><text x="616.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="613" y="596" width="6" height="15" fill="rgb(225,155,40)"/><text x="616.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="612" width="6" height="15" fill="rgb(232,205,5)"/><text x="616.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.47%)</title><rect x="613" y="628" width="6" height="15" fill="rgb(228,217,47)"/><text x="616.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="613" y="644" width="6" height="15" fill="rgb(215,203,40)"/><text x="616.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="613" y="660" width="6" height="15" fill="rgb(209,160,1)"/><text x="616.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.47%)</title><rect x="613" y="676" width="6" height="15" fill="rgb(246,217,41)"/><text x="616.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.47%)</title><rect x="613" y="692" width="6" height="15" fill="rgb(246,225,43)"/><text x="616.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.47%)</title><rect x="613" y="708" width="6" height="15" fill="rgb(235,177,43)"/><text x="616.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="613" y="724" width="6" height="15" fill="rgb(224,46,45)"/><text x="616.00" y="734.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="740" width="6" height="15" fill="rgb(238,179,53)"/><text x="616.00" y="750.50"></text></g><g><title>0x7fa239737995 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="756" width="6" height="15" fill="rgb(213,55,51)"/><text x="616.00" y="766.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="772" width="6" height="15" fill="rgb(250,100,26)"/><text x="616.00" y="782.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="788" width="6" height="15" fill="rgb(226,59,19)"/><text x="616.00" y="798.50"></text></g><g><title>0x7fa239737258 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="804" width="6" height="15" fill="rgb(235,226,49)"/><text x="616.00" y="814.50"></text></g><g><title>0x7fa239784d7a (ld-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="820" width="6" height="15" fill="rgb(243,222,19)"/><text x="616.00" y="830.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="836" width="6" height="15" fill="rgb(217,163,50)"/><text x="616.00" y="846.50"></text></g><g><title>0x7fa239785345 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="852" width="6" height="15" fill="rgb(214,14,4)"/><text x="616.00" y="862.50"></text></g><g><title>0x7fa23977dfec (ld-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="868" width="6" height="15" fill="rgb(225,101,25)"/><text x="616.00" y="878.50"></text></g><g><title>0x7fa23977c56b (ld-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="884" width="6" height="15" fill="rgb(222,204,21)"/><text x="616.00" y="894.50"></text></g><g><title>0x7fa23977bc10 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="900" width="6" height="15" fill="rgb(211,173,16)"/><text x="616.00" y="910.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.47%)</title><rect x="619" y="884" width="6" height="15" fill="rgb(253,134,35)"/><text x="622.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.47%)</title><rect x="619" y="900" width="6" height="15" fill="rgb(231,217,41)"/><text x="622.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.47%)</title><rect x="619" y="916" width="6" height="15" fill="rgb(222,103,42)"/><text x="622.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.47%)</title><rect x="619" y="932" width="6" height="15" fill="rgb(226,89,36)"/><text x="622.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (2 samples, 0.95%)</title><rect x="619" y="148" width="11" height="15" fill="rgb(223,137,28)"/><text x="622.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="164" width="11" height="15" fill="rgb(236,166,17)"/><text x="622.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.95%)</title><rect x="619" y="180" width="11" height="15" fill="rgb(246,22,33)"/><text x="622.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="196" width="11" height="15" fill="rgb(225,155,0)"/><text x="622.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="212" width="11" height="15" fill="rgb(240,189,45)"/><text x="622.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="228" width="11" height="15" fill="rgb(226,8,52)"/><text x="622.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="244" width="11" height="15" fill="rgb(222,63,32)"/><text x="622.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="260" width="11" height="15" fill="rgb(245,175,25)"/><text x="622.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="276" width="11" height="15" fill="rgb(247,108,28)"/><text x="622.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.95%)</title><rect x="619" y="292" width="11" height="15" fill="rgb(235,217,48)"/><text x="622.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="308" width="11" height="15" fill="rgb(208,57,51)"/><text x="622.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="324" width="11" height="15" fill="rgb(227,93,34)"/><text x="622.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="340" width="11" height="15" fill="rgb(212,73,51)"/><text x="622.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="356" width="11" height="15" fill="rgb(247,147,51)"/><text x="622.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="372" width="11" height="15" fill="rgb(212,32,46)"/><text x="622.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.95%)</title><rect x="619" y="388" width="11" height="15" fill="rgb(215,128,3)"/><text x="622.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="404" width="11" height="15" fill="rgb(225,47,12)"/><text x="622.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="420" width="11" height="15" fill="rgb(230,14,40)"/><text x="622.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="436" width="11" height="15" fill="rgb(212,161,43)"/><text x="622.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="452" width="11" height="15" fill="rgb(237,146,44)"/><text x="622.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="468" width="11" height="15" fill="rgb(241,52,21)"/><text x="622.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.95%)</title><rect x="619" y="484" width="11" height="15" fill="rgb(206,213,1)"/><text x="622.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="500" width="11" height="15" fill="rgb(226,174,40)"/><text x="622.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="516" width="11" height="15" fill="rgb(229,45,8)"/><text x="622.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="532" width="11" height="15" fill="rgb(249,226,7)"/><text x="622.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="548" width="11" height="15" fill="rgb(252,107,34)"/><text x="622.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="564" width="11" height="15" fill="rgb(241,227,8)"/><text x="622.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.95%)</title><rect x="619" y="580" width="11" height="15" fill="rgb(215,198,35)"/><text x="622.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="596" width="11" height="15" fill="rgb(248,148,22)"/><text x="622.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.95%)</title><rect x="619" y="612" width="11" height="15" fill="rgb(212,39,0)"/><text x="622.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="628" width="11" height="15" fill="rgb(221,224,40)"/><text x="622.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="644" width="11" height="15" fill="rgb(231,0,49)"/><text x="622.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="660" width="11" height="15" fill="rgb(251,222,40)"/><text x="622.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="676" width="11" height="15" fill="rgb(206,191,20)"/><text x="622.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="692" width="11" height="15" fill="rgb(249,186,10)"/><text x="622.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="708" width="11" height="15" fill="rgb(242,36,6)"/><text x="622.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.95%)</title><rect x="619" y="724" width="11" height="15" fill="rgb(208,213,49)"/><text x="622.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="619" y="740" width="11" height="15" fill="rgb(208,73,49)"/><text x="622.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="619" y="756" width="11" height="15" fill="rgb(223,17,34)"/><text x="622.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="619" y="772" width="11" height="15" fill="rgb(231,67,38)"/><text x="622.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="619" y="788" width="11" height="15" fill="rgb(232,113,46)"/><text x="622.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="619" y="804" width="11" height="15" fill="rgb(230,99,5)"/><text x="622.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.95%)</title><rect x="619" y="820" width="11" height="15" fill="rgb(230,60,49)"/><text x="622.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.95%)</title><rect x="619" y="836" width="11" height="15" fill="rgb(254,21,34)"/><text x="622.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.95%)</title><rect x="619" y="852" width="11" height="15" fill="rgb(250,156,54)"/><text x="622.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.95%)</title><rect x="619" y="868" width="11" height="15" fill="rgb(211,54,47)"/><text x="622.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.47%)</title><rect x="625" y="884" width="5" height="15" fill="rgb(215,88,52)"/><text x="628.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.47%)</title><rect x="625" y="900" width="5" height="15" fill="rgb(232,29,14)"/><text x="628.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.47%)</title><rect x="625" y="916" width="5" height="15" fill="rgb(211,90,10)"/><text x="628.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.47%)</title><rect x="625" y="932" width="5" height="15" fill="rgb(227,126,29)"/><text x="628.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.47%)</title><rect x="625" y="948" width="5" height="15" fill="rgb(221,142,26)"/><text x="628.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="625" y="964" width="5" height="15" fill="rgb(216,168,43)"/><text x="628.00" y="974.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.47%)</title><rect x="625" y="980" width="5" height="15" fill="rgb(226,102,43)"/><text x="628.00" y="990.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.47%)</title><rect x="625" y="996" width="5" height="15" fill="rgb(220,169,31)"/><text x="628.00" y="1006.50"></text></g><g><title>0x7fa2394dd3bd (libc-2.29.so) (1 samples, 0.47%)</title><rect x="625" y="1012" width="5" height="15" fill="rgb(253,2,27)"/><text x="628.00" y="1022.50"></text></g><g><title>0x7fa2394584cb (libc-2.29.so) (1 samples, 0.47%)</title><rect x="625" y="1028" width="5" height="15" fill="rgb(241,136,7)"/><text x="628.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.47%)</title><rect x="630" y="388" width="6" height="15" fill="rgb(215,60,44)"/><text x="633.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="404" width="6" height="15" fill="rgb(253,41,29)"/><text x="633.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="420" width="6" height="15" fill="rgb(240,42,24)"/><text x="633.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="436" width="6" height="15" fill="rgb(254,112,47)"/><text x="633.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="452" width="6" height="15" fill="rgb(246,204,32)"/><text x="633.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="468" width="6" height="15" fill="rgb(217,140,8)"/><text x="633.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.47%)</title><rect x="630" y="484" width="6" height="15" fill="rgb(234,144,39)"/><text x="633.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="500" width="6" height="15" fill="rgb(233,157,28)"/><text x="633.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="516" width="6" height="15" fill="rgb(230,94,25)"/><text x="633.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="532" width="6" height="15" fill="rgb(252,86,10)"/><text x="633.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="548" width="6" height="15" fill="rgb(242,182,13)"/><text x="633.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="564" width="6" height="15" fill="rgb(222,228,31)"/><text x="633.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.47%)</title><rect x="630" y="580" width="6" height="15" fill="rgb(232,2,38)"/><text x="633.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="596" width="6" height="15" fill="rgb(251,58,20)"/><text x="633.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="630" y="612" width="6" height="15" fill="rgb(252,35,40)"/><text x="633.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="628" width="6" height="15" fill="rgb(242,189,46)"/><text x="633.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="644" width="6" height="15" fill="rgb(214,179,5)"/><text x="633.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="660" width="6" height="15" fill="rgb(249,211,6)"/><text x="633.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="676" width="6" height="15" fill="rgb(228,36,51)"/><text x="633.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="692" width="6" height="15" fill="rgb(211,215,37)"/><text x="633.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="708" width="6" height="15" fill="rgb(207,177,13)"/><text x="633.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.47%)</title><rect x="630" y="724" width="6" height="15" fill="rgb(214,195,47)"/><text x="633.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="740" width="6" height="15" fill="rgb(212,64,6)"/><text x="633.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="756" width="6" height="15" fill="rgb(211,16,30)"/><text x="633.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="772" width="6" height="15" fill="rgb(242,146,19)"/><text x="633.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="788" width="6" height="15" fill="rgb(248,112,16)"/><text x="633.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="804" width="6" height="15" fill="rgb(217,28,37)"/><text x="633.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.47%)</title><rect x="630" y="820" width="6" height="15" fill="rgb(229,40,14)"/><text x="633.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="836" width="6" height="15" fill="rgb(218,191,44)"/><text x="633.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="852" width="6" height="15" fill="rgb(254,23,47)"/><text x="633.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="868" width="6" height="15" fill="rgb(216,21,2)"/><text x="633.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="884" width="6" height="15" fill="rgb(251,173,13)"/><text x="633.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="900" width="6" height="15" fill="rgb(224,112,35)"/><text x="633.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:74) (1 samples, 0.47%)</title><rect x="630" y="916" width="6" height="15" fill="rgb(248,217,9)"/><text x="633.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="630" y="932" width="6" height="15" fill="rgb(218,114,26)"/><text x="633.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="630" y="948" width="6" height="15" fill="rgb(253,224,39)"/><text x="633.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="630" y="964" width="6" height="15" fill="rgb(223,165,46)"/><text x="633.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="630" y="980" width="6" height="15" fill="rgb(209,91,11)"/><text x="633.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="630" y="996" width="6" height="15" fill="rgb(230,96,26)"/><text x="633.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/strings.py:5) (1 samples, 0.47%)</title><rect x="630" y="1012" width="6" height="15" fill="rgb(252,147,14)"/><text x="633.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.95%)</title><rect x="630" y="292" width="11" height="15" fill="rgb(245,198,32)"/><text x="633.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="630" y="308" width="11" height="15" fill="rgb(222,217,50)"/><text x="633.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="630" y="324" width="11" height="15" fill="rgb(235,65,30)"/><text x="633.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="630" y="340" width="11" height="15" fill="rgb(218,127,44)"/><text x="633.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="630" y="356" width="11" height="15" fill="rgb(205,147,30)"/><text x="633.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="630" y="372" width="11" height="15" fill="rgb(214,189,35)"/><text x="633.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.47%)</title><rect x="636" y="388" width="5" height="15" fill="rgb(216,78,15)"/><text x="639.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="636" y="404" width="5" height="15" fill="rgb(248,127,8)"/><text x="639.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="636" y="420" width="5" height="15" fill="rgb(251,182,1)"/><text x="639.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="636" y="436" width="5" height="15" fill="rgb(218,96,7)"/><text x="639.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="636" y="452" width="5" height="15" fill="rgb(216,51,20)"/><text x="639.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="636" y="468" width="5" height="15" fill="rgb(230,153,28)"/><text x="639.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.47%)</title><rect x="636" y="484" width="5" height="15" fill="rgb(234,115,50)"/><text x="639.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="636" y="500" width="5" height="15" fill="rgb(224,149,24)"/><text x="639.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="636" y="516" width="5" height="15" fill="rgb(226,99,22)"/><text x="639.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="636" y="532" width="5" height="15" fill="rgb(242,150,40)"/><text x="639.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="636" y="548" width="5" height="15" fill="rgb(238,13,10)"/><text x="639.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="636" y="564" width="5" height="15" fill="rgb(217,122,18)"/><text x="639.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="636" y="580" width="5" height="15" fill="rgb(221,186,44)"/><text x="639.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="636" y="596" width="5" height="15" fill="rgb(236,55,27)"/><text x="639.00" y="606.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.47%)</title><rect x="636" y="612" width="5" height="15" fill="rgb(237,86,40)"/><text x="639.00" y="622.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.47%)</title><rect x="636" y="628" width="5" height="15" fill="rgb(219,139,4)"/><text x="639.00" y="638.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.47%)</title><rect x="636" y="644" width="5" height="15" fill="rgb(245,67,32)"/><text x="639.00" y="654.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.47%)</title><rect x="636" y="660" width="5" height="15" fill="rgb(206,199,40)"/><text x="639.00" y="670.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.47%)</title><rect x="636" y="676" width="5" height="15" fill="rgb(208,171,52)"/><text x="639.00" y="686.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.47%)</title><rect x="636" y="692" width="5" height="15" fill="rgb(239,228,32)"/><text x="639.00" y="702.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.47%)</title><rect x="636" y="708" width="5" height="15" fill="rgb(213,106,50)"/><text x="639.00" y="718.50"></text></g><g><title>0x7fa22db30372 (?) (1 samples, 0.47%)</title><rect x="636" y="724" width="5" height="15" fill="rgb(254,145,31)"/><text x="639.00" y="734.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.47%)</title><rect x="636" y="740" width="5" height="15" fill="rgb(233,63,52)"/><text x="639.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:73) (1 samples, 0.47%)</title><rect x="641" y="628" width="6" height="15" fill="rgb(232,102,49)"/><text x="644.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="641" y="644" width="6" height="15" fill="rgb(216,107,27)"/><text x="644.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="641" y="660" width="6" height="15" fill="rgb(231,135,32)"/><text x="644.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="641" y="676" width="6" height="15" fill="rgb(252,161,47)"/><text x="644.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="641" y="692" width="6" height="15" fill="rgb(219,59,0)"/><text x="644.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="641" y="708" width="6" height="15" fill="rgb(234,11,23)"/><text x="644.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="641" y="724" width="6" height="15" fill="rgb(205,172,28)"/><text x="644.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="641" y="740" width="6" height="15" fill="rgb(240,34,37)"/><text x="644.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/__check_build/__init__.py:44) (1 samples, 0.47%)</title><rect x="641" y="756" width="6" height="15" fill="rgb(212,69,25)"/><text x="644.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="641" y="772" width="6" height="15" fill="rgb(205,174,47)"/><text x="644.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="641" y="788" width="6" height="15" fill="rgb(241,133,51)"/><text x="644.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.47%)</title><rect x="641" y="804" width="6" height="15" fill="rgb(250,174,16)"/><text x="644.00" y="814.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.47%)</title><rect x="641" y="820" width="6" height="15" fill="rgb(235,19,45)"/><text x="644.00" y="830.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.47%)</title><rect x="641" y="836" width="6" height="15" fill="rgb(237,131,30)"/><text x="644.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="641" y="852" width="6" height="15" fill="rgb(247,170,48)"/><text x="644.00" y="862.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="868" width="6" height="15" fill="rgb(254,80,10)"/><text x="644.00" y="878.50"></text></g><g><title>0x7fa239737995 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="884" width="6" height="15" fill="rgb(254,136,16)"/><text x="644.00" y="894.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="900" width="6" height="15" fill="rgb(252,37,6)"/><text x="644.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="916" width="6" height="15" fill="rgb(231,9,21)"/><text x="644.00" y="926.50"></text></g><g><title>0x7fa239737258 (libdl-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="932" width="6" height="15" fill="rgb(211,29,54)"/><text x="644.00" y="942.50"></text></g><g><title>0x7fa239784d7a (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="948" width="6" height="15" fill="rgb(244,128,31)"/><text x="644.00" y="958.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="964" width="6" height="15" fill="rgb(225,19,16)"/><text x="644.00" y="974.50"></text></g><g><title>0x7fa2397851f0 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="980" width="6" height="15" fill="rgb(225,52,20)"/><text x="644.00" y="990.50"></text></g><g><title>0x7fa23977f876 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="996" width="6" height="15" fill="rgb(218,31,14)"/><text x="644.00" y="1006.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1012" width="6" height="15" fill="rgb(217,136,1)"/><text x="644.00" y="1022.50"></text></g><g><title>0x7fa23977f501 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1028" width="6" height="15" fill="rgb(211,77,35)"/><text x="644.00" y="1038.50"></text></g><g><title>0x7fa23977ae8a (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1044" width="6" height="15" fill="rgb(243,73,5)"/><text x="644.00" y="1054.50"></text></g><g><title>0x7fa2397799b4 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1060" width="6" height="15" fill="rgb(251,204,39)"/><text x="644.00" y="1070.50"></text></g><g><title>0x7fa2397791b6 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1076" width="6" height="15" fill="rgb(247,152,44)"/><text x="644.00" y="1086.50"></text></g><g><title>0x7fa23978ca04 (ld-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="1092" width="6" height="15" fill="rgb(235,96,11)"/><text x="644.00" y="1102.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.95%)</title><rect x="647" y="820" width="11" height="15" fill="rgb(233,67,16)"/><text x="650.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.95%)</title><rect x="647" y="836" width="11" height="15" fill="rgb(230,79,43)"/><text x="650.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="852" width="11" height="15" fill="rgb(253,201,6)"/><text x="650.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="868" width="11" height="15" fill="rgb(229,29,16)"/><text x="650.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="884" width="11" height="15" fill="rgb(245,81,33)"/><text x="650.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="900" width="11" height="15" fill="rgb(253,175,20)"/><text x="650.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="916" width="11" height="15" fill="rgb(229,191,35)"/><text x="650.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="932" width="11" height="15" fill="rgb(212,174,40)"/><text x="650.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.95%)</title><rect x="647" y="948" width="11" height="15" fill="rgb(251,81,34)"/><text x="650.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="964" width="11" height="15" fill="rgb(212,79,49)"/><text x="650.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="980" width="11" height="15" fill="rgb(238,55,6)"/><text x="650.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="996" width="11" height="15" fill="rgb(246,9,11)"/><text x="650.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="1012" width="11" height="15" fill="rgb(213,190,2)"/><text x="650.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1028" width="11" height="15" fill="rgb(239,215,5)"/><text x="650.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.95%)</title><rect x="647" y="1044" width="11" height="15" fill="rgb(211,25,53)"/><text x="650.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1060" width="11" height="15" fill="rgb(234,157,39)"/><text x="650.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="1076" width="11" height="15" fill="rgb(214,28,31)"/><text x="650.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="1092" width="11" height="15" fill="rgb(208,159,5)"/><text x="650.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="1108" width="11" height="15" fill="rgb(208,5,19)"/><text x="650.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1124" width="11" height="15" fill="rgb(220,135,42)"/><text x="650.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.95%)</title><rect x="647" y="1140" width="11" height="15" fill="rgb(231,100,4)"/><text x="650.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1156" width="11" height="15" fill="rgb(216,77,30)"/><text x="650.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="1172" width="11" height="15" fill="rgb(222,56,53)"/><text x="650.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="1188" width="11" height="15" fill="rgb(208,173,39)"/><text x="650.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="1204" width="11" height="15" fill="rgb(205,189,4)"/><text x="650.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1220" width="11" height="15" fill="rgb(217,56,38)"/><text x="650.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.95%)</title><rect x="647" y="1236" width="11" height="15" fill="rgb(213,87,12)"/><text x="650.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1252" width="11" height="15" fill="rgb(216,50,14)"/><text x="650.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="1268" width="11" height="15" fill="rgb(239,149,45)"/><text x="650.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="1284" width="11" height="15" fill="rgb(254,129,44)"/><text x="650.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="1300" width="11" height="15" fill="rgb(239,170,53)"/><text x="650.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1316" width="11" height="15" fill="rgb(241,207,23)"/><text x="650.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.95%)</title><rect x="647" y="1332" width="11" height="15" fill="rgb(213,58,52)"/><text x="650.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1348" width="11" height="15" fill="rgb(243,115,46)"/><text x="650.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.95%)</title><rect x="647" y="1364" width="11" height="15" fill="rgb(229,76,0)"/><text x="650.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1380" width="11" height="15" fill="rgb(206,33,46)"/><text x="650.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1396" width="11" height="15" fill="rgb(247,60,27)"/><text x="650.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="1412" width="11" height="15" fill="rgb(210,80,10)"/><text x="650.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="1428" width="11" height="15" fill="rgb(240,48,49)"/><text x="650.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="647" y="1444" width="11" height="15" fill="rgb(241,205,37)"/><text x="650.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="647" y="1460" width="11" height="15" fill="rgb(219,228,49)"/><text x="650.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (2 samples, 0.95%)</title><rect x="647" y="1476" width="11" height="15" fill="rgb(225,40,20)"/><text x="650.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="647" y="1492" width="11" height="15" fill="rgb(245,14,43)"/><text x="650.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="647" y="1508" width="11" height="15" fill="rgb(221,17,29)"/><text x="650.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="647" y="1524" width="11" height="15" fill="rgb(236,7,34)"/><text x="650.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.95%)</title><rect x="647" y="1540" width="11" height="15" fill="rgb(219,133,16)"/><text x="650.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.95%)</title><rect x="647" y="1556" width="11" height="15" fill="rgb(209,135,25)"/><text x="650.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.95%)</title><rect x="647" y="1572" width="11" height="15" fill="rgb(209,26,27)"/><text x="650.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 1.90%)</title><rect x="641" y="532" width="23" height="15" fill="rgb(214,75,0)"/><text x="644.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.90%)</title><rect x="641" y="548" width="23" height="15" fill="rgb(238,209,22)"/><text x="644.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.90%)</title><rect x="641" y="564" width="23" height="15" fill="rgb(226,46,38)"/><text x="644.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.90%)</title><rect x="641" y="580" width="23" height="15" fill="rgb(233,104,30)"/><text x="644.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.90%)</title><rect x="641" y="596" width="23" height="15" fill="rgb(222,188,41)"/><text x="644.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.90%)</title><rect x="641" y="612" width="23" height="15" fill="rgb(223,92,51)"/><text x="644.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.42%)</title><rect x="647" y="628" width="17" height="15" fill="rgb(232,115,31)"/><text x="650.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="647" y="644" width="17" height="15" fill="rgb(241,102,14)"/><text x="650.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="647" y="660" width="17" height="15" fill="rgb(222,102,54)"/><text x="650.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="647" y="676" width="17" height="15" fill="rgb(221,136,11)"/><text x="650.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="647" y="692" width="17" height="15" fill="rgb(249,223,15)"/><text x="650.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="647" y="708" width="17" height="15" fill="rgb(206,173,48)"/><text x="650.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.42%)</title><rect x="647" y="724" width="17" height="15" fill="rgb(221,196,18)"/><text x="650.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.42%)</title><rect x="647" y="740" width="17" height="15" fill="rgb(218,32,9)"/><text x="650.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.42%)</title><rect x="647" y="756" width="17" height="15" fill="rgb(220,14,25)"/><text x="650.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.42%)</title><rect x="647" y="772" width="17" height="15" fill="rgb(224,2,33)"/><text x="650.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.42%)</title><rect x="647" y="788" width="17" height="15" fill="rgb(253,49,28)"/><text x="650.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.42%)</title><rect x="647" y="804" width="17" height="15" fill="rgb(254,110,45)"/><text x="650.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.47%)</title><rect x="658" y="820" width="6" height="15" fill="rgb(215,187,29)"/><text x="661.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="658" y="836" width="6" height="15" fill="rgb(212,182,19)"/><text x="661.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="658" y="852" width="6" height="15" fill="rgb(249,67,4)"/><text x="661.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="658" y="868" width="6" height="15" fill="rgb(237,224,54)"/><text x="661.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="658" y="884" width="6" height="15" fill="rgb(246,20,25)"/><text x="661.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="900" width="6" height="15" fill="rgb(238,111,48)"/><text x="661.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.47%)</title><rect x="658" y="916" width="6" height="15" fill="rgb(243,128,44)"/><text x="661.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="658" y="932" width="6" height="15" fill="rgb(240,213,16)"/><text x="661.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="658" y="948" width="6" height="15" fill="rgb(219,171,33)"/><text x="661.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="658" y="964" width="6" height="15" fill="rgb(227,172,1)"/><text x="661.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="658" y="980" width="6" height="15" fill="rgb(252,23,31)"/><text x="661.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="996" width="6" height="15" fill="rgb(209,10,22)"/><text x="661.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.47%)</title><rect x="658" y="1012" width="6" height="15" fill="rgb(206,122,0)"/><text x="661.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="658" y="1028" width="6" height="15" fill="rgb(209,167,45)"/><text x="661.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="658" y="1044" width="6" height="15" fill="rgb(217,206,40)"/><text x="661.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="658" y="1060" width="6" height="15" fill="rgb(233,223,21)"/><text x="661.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="658" y="1076" width="6" height="15" fill="rgb(244,113,24)"/><text x="661.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="1092" width="6" height="15" fill="rgb(212,25,15)"/><text x="661.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.47%)</title><rect x="658" y="1108" width="6" height="15" fill="rgb(251,20,26)"/><text x="661.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="658" y="1124" width="6" height="15" fill="rgb(215,197,34)"/><text x="661.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="1140" width="6" height="15" fill="rgb(242,12,16)"/><text x="661.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="658" y="1156" width="6" height="15" fill="rgb(238,30,5)"/><text x="661.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="658" y="1172" width="6" height="15" fill="rgb(229,119,41)"/><text x="661.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="658" y="1188" width="6" height="15" fill="rgb(229,195,13)"/><text x="661.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="658" y="1204" width="6" height="15" fill="rgb(226,88,30)"/><text x="661.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="1220" width="6" height="15" fill="rgb(254,140,19)"/><text x="661.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.47%)</title><rect x="658" y="1236" width="6" height="15" fill="rgb(231,212,47)"/><text x="661.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="658" y="1252" width="6" height="15" fill="rgb(216,64,31)"/><text x="661.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="1268" width="6" height="15" fill="rgb(212,94,34)"/><text x="661.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="658" y="1284" width="6" height="15" fill="rgb(248,212,11)"/><text x="661.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="658" y="1300" width="6" height="15" fill="rgb(237,66,3)"/><text x="661.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="658" y="1316" width="6" height="15" fill="rgb(207,229,18)"/><text x="661.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="658" y="1332" width="6" height="15" fill="rgb(207,172,2)"/><text x="661.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="658" y="1348" width="6" height="15" fill="rgb(231,143,44)"/><text x="661.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1038) (1 samples, 0.47%)</title><rect x="658" y="1364" width="6" height="15" fill="rgb(236,32,39)"/><text x="661.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.47%)</title><rect x="658" y="1380" width="6" height="15" fill="rgb(238,141,33)"/><text x="661.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.47%)</title><rect x="658" y="1396" width="6" height="15" fill="rgb(237,23,30)"/><text x="661.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.47%)</title><rect x="658" y="1412" width="6" height="15" fill="rgb(243,198,44)"/><text x="661.00" y="1422.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.47%)</title><rect x="658" y="1428" width="6" height="15" fill="rgb(228,116,2)"/><text x="661.00" y="1438.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.47%)</title><rect x="658" y="1444" width="6" height="15" fill="rgb(239,3,45)"/><text x="661.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.47%)</title><rect x="658" y="1460" width="6" height="15" fill="rgb(231,89,49)"/><text x="661.00" y="1470.50"></text></g><g><title>_signature_from_callable (inspect.py:2238) (1 samples, 0.47%)</title><rect x="658" y="1476" width="6" height="15" fill="rgb(246,141,23)"/><text x="661.00" y="1486.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:13) (1 samples, 0.47%)</title><rect x="664" y="532" width="5" height="15" fill="rgb(252,78,24)"/><text x="667.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="548" width="5" height="15" fill="rgb(251,27,28)"/><text x="667.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="664" y="564" width="5" height="15" fill="rgb(228,77,10)"/><text x="667.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="664" y="580" width="5" height="15" fill="rgb(251,49,16)"/><text x="667.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="664" y="596" width="5" height="15" fill="rgb(212,193,23)"/><text x="667.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="664" y="612" width="5" height="15" fill="rgb(233,142,6)"/><text x="667.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:19) (1 samples, 0.47%)</title><rect x="664" y="628" width="5" height="15" fill="rgb(232,56,14)"/><text x="667.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="644" width="5" height="15" fill="rgb(222,227,21)"/><text x="667.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="664" y="660" width="5" height="15" fill="rgb(241,128,33)"/><text x="667.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="664" y="676" width="5" height="15" fill="rgb(205,224,1)"/><text x="667.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="664" y="692" width="5" height="15" fill="rgb(242,85,16)"/><text x="667.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="664" y="708" width="5" height="15" fill="rgb(238,112,49)"/><text x="667.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py:28) (1 samples, 0.47%)</title><rect x="664" y="724" width="5" height="15" fill="rgb(212,114,26)"/><text x="667.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="740" width="5" height="15" fill="rgb(214,77,2)"/><text x="667.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="664" y="756" width="5" height="15" fill="rgb(243,94,24)"/><text x="667.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="664" y="772" width="5" height="15" fill="rgb(208,39,50)"/><text x="667.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="664" y="788" width="5" height="15" fill="rgb(208,90,17)"/><text x="667.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="664" y="804" width="5" height="15" fill="rgb(226,3,52)"/><text x="667.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.47%)</title><rect x="664" y="820" width="5" height="15" fill="rgb(221,174,46)"/><text x="667.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="836" width="5" height="15" fill="rgb(226,7,27)"/><text x="667.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="664" y="852" width="5" height="15" fill="rgb(219,5,46)"/><text x="667.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="664" y="868" width="5" height="15" fill="rgb(215,190,14)"/><text x="667.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="664" y="884" width="5" height="15" fill="rgb(239,203,37)"/><text x="667.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="664" y="900" width="5" height="15" fill="rgb(232,155,50)"/><text x="667.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:35) (1 samples, 0.47%)</title><rect x="664" y="916" width="5" height="15" fill="rgb(245,177,9)"/><text x="667.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="932" width="5" height="15" fill="rgb(224,200,35)"/><text x="667.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="664" y="948" width="5" height="15" fill="rgb(238,136,34)"/><text x="667.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="664" y="964" width="5" height="15" fill="rgb(236,47,17)"/><text x="667.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="664" y="980" width="5" height="15" fill="rgb(246,97,36)"/><text x="667.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="664" y="996" width="5" height="15" fill="rgb(247,219,50)"/><text x="667.00" y="1006.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py:6) (1 samples, 0.47%)</title><rect x="664" y="1012" width="5" height="15" fill="rgb(206,209,9)"/><text x="667.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="664" y="1028" width="5" height="15" fill="rgb(208,224,42)"/><text x="667.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.47%)</title><rect x="664" y="1044" width="5" height="15" fill="rgb(248,89,36)"/><text x="667.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.47%)</title><rect x="664" y="1060" width="5" height="15" fill="rgb(251,147,17)"/><text x="667.00" y="1070.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.47%)</title><rect x="669" y="1316" width="6" height="15" fill="rgb(234,81,4)"/><text x="672.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.47%)</title><rect x="669" y="1332" width="6" height="15" fill="rgb(206,139,23)"/><text x="672.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.47%)</title><rect x="669" y="1348" width="6" height="15" fill="rgb(228,33,14)"/><text x="672.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.47%)</title><rect x="669" y="1364" width="6" height="15" fill="rgb(223,72,53)"/><text x="672.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.47%)</title><rect x="669" y="1380" width="6" height="15" fill="rgb(252,209,5)"/><text x="672.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.47%)</title><rect x="669" y="1396" width="6" height="15" fill="rgb(243,123,20)"/><text x="672.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.47%)</title><rect x="669" y="1412" width="6" height="15" fill="rgb(217,149,23)"/><text x="672.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.47%)</title><rect x="669" y="1428" width="6" height="15" fill="rgb(235,87,15)"/><text x="672.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.47%)</title><rect x="669" y="1444" width="6" height="15" fill="rgb(212,112,41)"/><text x="672.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:198) (1 samples, 0.47%)</title><rect x="669" y="1460" width="6" height="15" fill="rgb(206,3,18)"/><text x="672.00" y="1470.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (9 samples, 4.27%)</title><rect x="630" y="148" width="51" height="15" fill="rgb(238,172,52)"/><text x="633.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.27%)</title><rect x="630" y="164" width="51" height="15" fill="rgb(216,151,30)"/><text x="633.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 4.27%)</title><rect x="630" y="180" width="51" height="15" fill="rgb(229,1,19)"/><text x="633.00" y="190.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.27%)</title><rect x="630" y="196" width="51" height="15" fill="rgb(219,71,31)"/><text x="633.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.27%)</title><rect x="630" y="212" width="51" height="15" fill="rgb(223,184,24)"/><text x="633.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.27%)</title><rect x="630" y="228" width="51" height="15" fill="rgb(207,207,9)"/><text x="633.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.27%)</title><rect x="630" y="244" width="51" height="15" fill="rgb(219,83,14)"/><text x="633.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.27%)</title><rect x="630" y="260" width="51" height="15" fill="rgb(246,70,35)"/><text x="633.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.27%)</title><rect x="630" y="276" width="51" height="15" fill="rgb(249,105,52)"/><text x="633.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 3.32%)</title><rect x="641" y="292" width="40" height="15" fill="rgb(215,216,24)"/><text x="644.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.32%)</title><rect x="641" y="308" width="40" height="15" fill="rgb(232,110,43)"/><text x="644.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 3.32%)</title><rect x="641" y="324" width="40" height="15" fill="rgb(209,94,8)"/><text x="644.00" y="334.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.32%)</title><rect x="641" y="340" width="40" height="15" fill="rgb(246,83,12)"/><text x="644.00" y="350.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.32%)</title><rect x="641" y="356" width="40" height="15" fill="rgb(250,70,17)"/><text x="644.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.32%)</title><rect x="641" y="372" width="40" height="15" fill="rgb(220,42,8)"/><text x="644.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.32%)</title><rect x="641" y="388" width="40" height="15" fill="rgb(230,97,51)"/><text x="644.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.32%)</title><rect x="641" y="404" width="40" height="15" fill="rgb(244,93,47)"/><text x="644.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.32%)</title><rect x="641" y="420" width="40" height="15" fill="rgb(234,94,19)"/><text x="644.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 3.32%)</title><rect x="641" y="436" width="40" height="15" fill="rgb(205,170,9)"/><text x="644.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.32%)</title><rect x="641" y="452" width="40" height="15" fill="rgb(228,191,7)"/><text x="644.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.32%)</title><rect x="641" y="468" width="40" height="15" fill="rgb(230,166,19)"/><text x="644.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.32%)</title><rect x="641" y="484" width="40" height="15" fill="rgb(223,35,18)"/><text x="644.00" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.32%)</title><rect x="641" y="500" width="40" height="15" fill="rgb(238,109,5)"/><text x="644.00" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.32%)</title><rect x="641" y="516" width="40" height="15" fill="rgb(231,151,7)"/><text x="644.00" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.95%)</title><rect x="669" y="532" width="12" height="15" fill="rgb(208,217,34)"/><text x="672.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="548" width="12" height="15" fill="rgb(206,4,19)"/><text x="672.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="564" width="12" height="15" fill="rgb(222,10,33)"/><text x="672.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="580" width="12" height="15" fill="rgb(223,168,35)"/><text x="672.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="596" width="12" height="15" fill="rgb(251,14,43)"/><text x="672.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="612" width="12" height="15" fill="rgb(238,228,41)"/><text x="672.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.95%)</title><rect x="669" y="628" width="12" height="15" fill="rgb(230,64,54)"/><text x="672.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="644" width="12" height="15" fill="rgb(250,69,30)"/><text x="672.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="660" width="12" height="15" fill="rgb(215,128,11)"/><text x="672.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="676" width="12" height="15" fill="rgb(210,32,7)"/><text x="672.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="692" width="12" height="15" fill="rgb(253,170,4)"/><text x="672.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="708" width="12" height="15" fill="rgb(214,143,50)"/><text x="672.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.95%)</title><rect x="669" y="724" width="12" height="15" fill="rgb(223,196,13)"/><text x="672.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="740" width="12" height="15" fill="rgb(230,118,10)"/><text x="672.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.95%)</title><rect x="669" y="756" width="12" height="15" fill="rgb(250,213,20)"/><text x="672.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="772" width="12" height="15" fill="rgb(219,93,44)"/><text x="672.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="788" width="12" height="15" fill="rgb(239,129,28)"/><text x="672.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="804" width="12" height="15" fill="rgb(210,110,50)"/><text x="672.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="820" width="12" height="15" fill="rgb(240,112,42)"/><text x="672.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="836" width="12" height="15" fill="rgb(214,28,44)"/><text x="672.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="852" width="12" height="15" fill="rgb(240,106,1)"/><text x="672.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.95%)</title><rect x="669" y="868" width="12" height="15" fill="rgb(224,85,6)"/><text x="672.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="884" width="12" height="15" fill="rgb(232,6,35)"/><text x="672.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="900" width="12" height="15" fill="rgb(216,100,35)"/><text x="672.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="916" width="12" height="15" fill="rgb(215,73,1)"/><text x="672.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="932" width="12" height="15" fill="rgb(237,184,4)"/><text x="672.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="948" width="12" height="15" fill="rgb(226,11,9)"/><text x="672.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.95%)</title><rect x="669" y="964" width="12" height="15" fill="rgb(227,4,46)"/><text x="672.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.95%)</title><rect x="669" y="980" width="12" height="15" fill="rgb(216,59,50)"/><text x="672.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="996" width="12" height="15" fill="rgb(226,73,6)"/><text x="672.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="1012" width="12" height="15" fill="rgb(211,121,32)"/><text x="672.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="1028" width="12" height="15" fill="rgb(224,186,9)"/><text x="672.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="1044" width="12" height="15" fill="rgb(207,59,19)"/><text x="672.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="1060" width="12" height="15" fill="rgb(242,58,29)"/><text x="672.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="1076" width="12" height="15" fill="rgb(206,116,18)"/><text x="672.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.95%)</title><rect x="669" y="1092" width="12" height="15" fill="rgb(235,4,6)"/><text x="672.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.95%)</title><rect x="669" y="1108" width="12" height="15" fill="rgb(210,94,19)"/><text x="672.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="1124" width="12" height="15" fill="rgb(226,114,48)"/><text x="672.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="1140" width="12" height="15" fill="rgb(240,9,11)"/><text x="672.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="1156" width="12" height="15" fill="rgb(231,141,32)"/><text x="672.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="1172" width="12" height="15" fill="rgb(251,128,42)"/><text x="672.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="1188" width="12" height="15" fill="rgb(252,41,40)"/><text x="672.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="1204" width="12" height="15" fill="rgb(247,93,28)"/><text x="672.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.95%)</title><rect x="669" y="1220" width="12" height="15" fill="rgb(222,22,30)"/><text x="672.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.95%)</title><rect x="669" y="1236" width="12" height="15" fill="rgb(228,24,49)"/><text x="672.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.95%)</title><rect x="669" y="1252" width="12" height="15" fill="rgb(213,208,41)"/><text x="672.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.95%)</title><rect x="669" y="1268" width="12" height="15" fill="rgb(209,18,11)"/><text x="672.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.95%)</title><rect x="669" y="1284" width="12" height="15" fill="rgb(233,17,23)"/><text x="672.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.95%)</title><rect x="669" y="1300" width="12" height="15" fill="rgb(232,15,36)"/><text x="672.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.47%)</title><rect x="675" y="1316" width="6" height="15" fill="rgb(216,128,41)"/><text x="678.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="675" y="1332" width="6" height="15" fill="rgb(232,96,45)"/><text x="678.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="675" y="1348" width="6" height="15" fill="rgb(233,50,5)"/><text x="678.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="675" y="1364" width="6" height="15" fill="rgb(214,195,51)"/><text x="678.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="675" y="1380" width="6" height="15" fill="rgb(237,66,33)"/><text x="678.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="675" y="1396" width="6" height="15" fill="rgb(207,103,28)"/><text x="678.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.47%)</title><rect x="675" y="1412" width="6" height="15" fill="rgb(240,176,26)"/><text x="678.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.47%)</title><rect x="675" y="1428" width="6" height="15" fill="rgb(241,222,44)"/><text x="678.00" y="1438.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.47%)</title><rect x="675" y="1444" width="6" height="15" fill="rgb(247,62,6)"/><text x="678.00" y="1454.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.47%)</title><rect x="675" y="1460" width="6" height="15" fill="rgb(222,211,10)"/><text x="678.00" y="1470.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.47%)</title><rect x="675" y="1476" width="6" height="15" fill="rgb(235,215,21)"/><text x="678.00" y="1486.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.47%)</title><rect x="675" y="1492" width="6" height="15" fill="rgb(215,219,54)"/><text x="678.00" y="1502.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.47%)</title><rect x="675" y="1508" width="6" height="15" fill="rgb(224,48,8)"/><text x="678.00" y="1518.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.47%)</title><rect x="675" y="1524" width="6" height="15" fill="rgb(232,126,25)"/><text x="678.00" y="1534.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.47%)</title><rect x="675" y="1540" width="6" height="15" fill="rgb(224,173,3)"/><text x="678.00" y="1550.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.47%)</title><rect x="675" y="1556" width="6" height="15" fill="rgb(249,0,8)"/><text x="678.00" y="1566.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.47%)</title><rect x="675" y="1572" width="6" height="15" fill="rgb(214,79,2)"/><text x="678.00" y="1582.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.47%)</title><rect x="675" y="1588" width="6" height="15" fill="rgb(236,44,7)"/><text x="678.00" y="1598.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.47%)</title><rect x="675" y="1604" width="6" height="15" fill="rgb(224,124,1)"/><text x="678.00" y="1614.50"></text></g><g><title>parse_if (jinja2/parser.py:223) (1 samples, 0.47%)</title><rect x="675" y="1620" width="6" height="15" fill="rgb(230,63,47)"/><text x="678.00" y="1630.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.47%)</title><rect x="675" y="1636" width="6" height="15" fill="rgb(242,102,42)"/><text x="678.00" y="1646.50"></text></g><g><title>subparse (jinja2/parser.py:888) (1 samples, 0.47%)</title><rect x="675" y="1652" width="6" height="15" fill="rgb(241,114,13)"/><text x="678.00" y="1662.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.47%)</title><rect x="675" y="1668" width="6" height="15" fill="rgb(237,121,10)"/><text x="678.00" y="1678.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.47%)</title><rect x="675" y="1684" width="6" height="15" fill="rgb(243,187,45)"/><text x="678.00" y="1694.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.47%)</title><rect x="675" y="1700" width="6" height="15" fill="rgb(231,151,50)"/><text x="678.00" y="1710.50"></text></g><g><title>tokeniter (jinja2/lexer.py:627) (1 samples, 0.47%)</title><rect x="675" y="1716" width="6" height="15" fill="rgb(212,114,22)"/><text x="678.00" y="1726.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.47%)</title><rect x="675" y="1732" width="6" height="15" fill="rgb(211,81,16)"/><text x="678.00" y="1742.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.47%)</title><rect x="675" y="1748" width="6" height="15" fill="rgb(235,71,10)"/><text x="678.00" y="1758.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:4) (13 samples, 6.16%)</title><rect x="613" y="52" width="73" height="15" fill="rgb(223,90,8)"/><text x="616.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 6.16%)</title><rect x="613" y="68" width="73" height="15" fill="rgb(214,32,38)"/><text x="616.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 6.16%)</title><rect x="613" y="84" width="73" height="15" fill="rgb(248,142,13)"/><text x="616.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 6.16%)</title><rect x="613" y="100" width="73" height="15" fill="rgb(232,178,26)"/><text x="616.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 6.16%)</title><rect x="613" y="116" width="73" height="15" fill="rgb(243,135,4)"/><text x="616.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 6.16%)</title><rect x="613" y="132" width="73" height="15" fill="rgb(210,23,49)"/><text x="616.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (1 samples, 0.47%)</title><rect x="681" y="148" width="5" height="15" fill="rgb(248,165,49)"/><text x="684.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="164" width="5" height="15" fill="rgb(239,181,29)"/><text x="684.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="180" width="5" height="15" fill="rgb(250,146,46)"/><text x="684.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="196" width="5" height="15" fill="rgb(225,119,40)"/><text x="684.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="212" width="5" height="15" fill="rgb(234,160,27)"/><text x="684.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="228" width="5" height="15" fill="rgb(209,10,37)"/><text x="684.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.47%)</title><rect x="681" y="244" width="5" height="15" fill="rgb(224,168,30)"/><text x="684.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="260" width="5" height="15" fill="rgb(220,150,28)"/><text x="684.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="276" width="5" height="15" fill="rgb(223,112,7)"/><text x="684.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="292" width="5" height="15" fill="rgb(241,107,39)"/><text x="684.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="308" width="5" height="15" fill="rgb(210,222,25)"/><text x="684.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="324" width="5" height="15" fill="rgb(214,89,44)"/><text x="684.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.47%)</title><rect x="681" y="340" width="5" height="15" fill="rgb(210,96,47)"/><text x="684.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="356" width="5" height="15" fill="rgb(251,24,39)"/><text x="684.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="681" y="372" width="5" height="15" fill="rgb(233,158,41)"/><text x="684.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="388" width="5" height="15" fill="rgb(214,142,46)"/><text x="684.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="404" width="5" height="15" fill="rgb(212,191,27)"/><text x="684.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="420" width="5" height="15" fill="rgb(235,154,2)"/><text x="684.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="436" width="5" height="15" fill="rgb(241,36,42)"/><text x="684.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="452" width="5" height="15" fill="rgb(208,203,27)"/><text x="684.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="468" width="5" height="15" fill="rgb(245,111,29)"/><text x="684.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.47%)</title><rect x="681" y="484" width="5" height="15" fill="rgb(240,46,45)"/><text x="684.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="500" width="5" height="15" fill="rgb(241,59,27)"/><text x="684.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="516" width="5" height="15" fill="rgb(243,82,29)"/><text x="684.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="532" width="5" height="15" fill="rgb(211,183,0)"/><text x="684.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="548" width="5" height="15" fill="rgb(218,33,0)"/><text x="684.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="564" width="5" height="15" fill="rgb(246,214,50)"/><text x="684.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.47%)</title><rect x="681" y="580" width="5" height="15" fill="rgb(224,34,0)"/><text x="684.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="596" width="5" height="15" fill="rgb(238,78,22)"/><text x="684.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="612" width="5" height="15" fill="rgb(235,193,30)"/><text x="684.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="628" width="5" height="15" fill="rgb(213,23,47)"/><text x="684.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="644" width="5" height="15" fill="rgb(213,1,32)"/><text x="684.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="660" width="5" height="15" fill="rgb(219,53,49)"/><text x="684.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.47%)</title><rect x="681" y="676" width="5" height="15" fill="rgb(248,112,14)"/><text x="684.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="681" y="692" width="5" height="15" fill="rgb(244,44,31)"/><text x="684.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="681" y="708" width="5" height="15" fill="rgb(236,53,14)"/><text x="684.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="681" y="724" width="5" height="15" fill="rgb(209,85,51)"/><text x="684.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="681" y="740" width="5" height="15" fill="rgb(231,217,6)"/><text x="684.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="681" y="756" width="5" height="15" fill="rgb(232,56,26)"/><text x="684.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.47%)</title><rect x="681" y="772" width="5" height="15" fill="rgb(215,107,30)"/><text x="684.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.47%)</title><rect x="681" y="788" width="5" height="15" fill="rgb(215,148,45)"/><text x="684.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.47%)</title><rect x="681" y="804" width="5" height="15" fill="rgb(250,178,4)"/><text x="684.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.47%)</title><rect x="681" y="820" width="5" height="15" fill="rgb(207,172,10)"/><text x="684.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.47%)</title><rect x="681" y="836" width="5" height="15" fill="rgb(223,115,43)"/><text x="684.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.47%)</title><rect x="681" y="852" width="5" height="15" fill="rgb(244,16,18)"/><text x="684.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.47%)</title><rect x="681" y="868" width="5" height="15" fill="rgb(211,20,22)"/><text x="684.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.47%)</title><rect x="681" y="884" width="5" height="15" fill="rgb(221,162,12)"/><text x="684.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.47%)</title><rect x="681" y="900" width="5" height="15" fill="rgb(232,10,30)"/><text x="684.00" y="910.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:28) (1 samples, 0.47%)</title><rect x="686" y="84" width="6" height="15" fill="rgb(245,98,37)"/><text x="689.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.47%)</title><rect x="686" y="100" width="6" height="15" fill="rgb(238,47,33)"/><text x="689.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.47%)</title><rect x="686" y="116" width="6" height="15" fill="rgb(224,219,45)"/><text x="689.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.47%)</title><rect x="686" y="132" width="6" height="15" fill="rgb(227,9,6)"/><text x="689.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.47%)</title><rect x="686" y="148" width="6" height="15" fill="rgb(244,53,40)"/><text x="689.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.47%)</title><rect x="686" y="164" width="6" height="15" fill="rgb(245,225,50)"/><text x="689.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.47%)</title><rect x="686" y="180" width="6" height="15" fill="rgb(237,189,22)"/><text x="689.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.47%)</title><rect x="686" y="196" width="6" height="15" fill="rgb(214,51,32)"/><text x="689.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="686" y="212" width="6" height="15" fill="rgb(245,157,54)"/><text x="689.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="686" y="228" width="6" height="15" fill="rgb(248,68,24)"/><text x="689.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="686" y="244" width="6" height="15" fill="rgb(228,200,21)"/><text x="689.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="686" y="260" width="6" height="15" fill="rgb(228,75,5)"/><text x="689.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="686" y="276" width="6" height="15" fill="rgb(244,185,30)"/><text x="689.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.47%)</title><rect x="686" y="292" width="6" height="15" fill="rgb(243,133,49)"/><text x="689.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="686" y="308" width="6" height="15" fill="rgb(226,76,45)"/><text x="689.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="686" y="324" width="6" height="15" fill="rgb(229,131,19)"/><text x="689.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="686" y="340" width="6" height="15" fill="rgb(219,54,49)"/><text x="689.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="686" y="356" width="6" height="15" fill="rgb(238,220,37)"/><text x="689.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="686" y="372" width="6" height="15" fill="rgb(210,62,33)"/><text x="689.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.47%)</title><rect x="686" y="388" width="6" height="15" fill="rgb(207,154,37)"/><text x="689.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="686" y="404" width="6" height="15" fill="rgb(235,100,5)"/><text x="689.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="686" y="420" width="6" height="15" fill="rgb(240,166,44)"/><text x="689.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="686" y="436" width="6" height="15" fill="rgb(235,39,52)"/><text x="689.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="686" y="452" width="6" height="15" fill="rgb(227,204,30)"/><text x="689.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="686" y="468" width="6" height="15" fill="rgb(252,160,13)"/><text x="689.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.47%)</title><rect x="686" y="484" width="6" height="15" fill="rgb(216,17,7)"/><text x="689.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.47%)</title><rect x="686" y="500" width="6" height="15" fill="rgb(230,175,36)"/><text x="689.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.47%)</title><rect x="686" y="516" width="6" height="15" fill="rgb(239,152,25)"/><text x="689.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.47%)</title><rect x="686" y="532" width="6" height="15" fill="rgb(226,156,26)"/><text x="689.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.47%)</title><rect x="686" y="548" width="6" height="15" fill="rgb(224,106,31)"/><text x="689.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.47%)</title><rect x="686" y="564" width="6" height="15" fill="rgb(246,114,22)"/><text x="689.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.47%)</title><rect x="686" y="580" width="6" height="15" fill="rgb(226,215,29)"/><text x="689.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.47%)</title><rect x="686" y="596" width="6" height="15" fill="rgb(235,72,14)"/><text x="689.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.47%)</title><rect x="686" y="612" width="6" height="15" fill="rgb(205,23,42)"/><text x="689.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.47%)</title><rect x="686" y="628" width="6" height="15" fill="rgb(252,218,29)"/><text x="689.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.47%)</title><rect x="686" y="644" width="6" height="15" fill="rgb(253,135,8)"/><text x="689.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.47%)</title><rect x="686" y="660" width="6" height="15" fill="rgb(212,151,43)"/><text x="689.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.47%)</title><rect x="686" y="676" width="6" height="15" fill="rgb(216,161,1)"/><text x="689.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:209) (1 samples, 0.47%)</title><rect x="686" y="692" width="6" height="15" fill="rgb(241,170,33)"/><text x="689.00" y="702.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.47%)</title><rect x="686" y="708" width="6" height="15" fill="rgb(208,207,18)"/><text x="689.00" y="718.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.47%)</title><rect x="686" y="724" width="6" height="15" fill="rgb(211,55,17)"/><text x="689.00" y="734.50"></text></g><g><title>wrap (jinja2/lexer.py:597) (1 samples, 0.47%)</title><rect x="686" y="740" width="6" height="15" fill="rgb(235,123,9)"/><text x="689.00" y="750.50"></text></g><g><title>__new__ (jinja2/lexer.py:238) (1 samples, 0.47%)</title><rect x="686" y="756" width="6" height="15" fill="rgb(252,109,27)"/><text x="689.00" y="766.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="697" y="116" width="6" height="15" fill="rgb(249,193,45)"/><text x="700.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="697" y="132" width="6" height="15" fill="rgb(216,153,45)"/><text x="700.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.47%)</title><rect x="697" y="148" width="6" height="15" fill="rgb(213,128,23)"/><text x="700.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.47%)</title><rect x="709" y="164" width="5" height="15" fill="rgb(215,195,0)"/><text x="712.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.47%)</title><rect x="714" y="164" width="6" height="15" fill="rgb(219,225,0)"/><text x="717.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.47%)</title><rect x="720" y="164" width="5" height="15" fill="rgb(208,140,34)"/><text x="723.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 1.42%)</title><rect x="725" y="180" width="17" height="15" fill="rgb(220,12,2)"/><text x="728.00" y="190.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.47%)</title><rect x="776" y="260" width="5" height="15" fill="rgb(242,149,18)"/><text x="779.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.47%)</title><rect x="781" y="260" width="6" height="15" fill="rgb(223,99,52)"/><text x="784.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.47%)</title><rect x="781" y="276" width="6" height="15" fill="rgb(216,120,17)"/><text x="784.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.47%)</title><rect x="781" y="292" width="6" height="15" fill="rgb(217,108,48)"/><text x="784.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.47%)</title><rect x="781" y="308" width="6" height="15" fill="rgb(238,116,32)"/><text x="784.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.47%)</title><rect x="792" y="388" width="6" height="15" fill="rgb(244,178,45)"/><text x="795.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="792" y="404" width="6" height="15" fill="rgb(216,92,38)"/><text x="795.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.90%)</title><rect x="792" y="308" width="23" height="15" fill="rgb(250,16,35)"/><text x="795.00" y="318.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.90%)</title><rect x="792" y="324" width="23" height="15" fill="rgb(214,45,29)"/><text x="795.00" y="334.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 1.90%)</title><rect x="792" y="340" width="23" height="15" fill="rgb(235,78,11)"/><text x="795.00" y="350.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 1.90%)</title><rect x="792" y="356" width="23" height="15" fill="rgb(245,14,23)"/><text x="795.00" y="366.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.90%)</title><rect x="792" y="372" width="23" height="15" fill="rgb(218,191,44)"/><text x="795.00" y="382.50">P..</text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.42%)</title><rect x="798" y="388" width="17" height="15" fill="rgb(245,225,54)"/><text x="801.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.47%)</title><rect x="815" y="324" width="5" height="15" fill="rgb(233,125,18)"/><text x="818.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.47%)</title><rect x="815" y="340" width="5" height="15" fill="rgb(245,42,33)"/><text x="818.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.47%)</title><rect x="820" y="324" width="6" height="15" fill="rgb(213,113,21)"/><text x="823.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1965) (1 samples, 0.47%)</title><rect x="820" y="340" width="6" height="15" fill="rgb(210,199,0)"/><text x="823.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.47%)</title><rect x="826" y="356" width="6" height="15" fill="rgb(210,10,42)"/><text x="829.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.47%)</title><rect x="826" y="372" width="6" height="15" fill="rgb(243,44,39)"/><text x="829.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.47%)</title><rect x="826" y="388" width="6" height="15" fill="rgb(205,200,37)"/><text x="829.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.47%)</title><rect x="826" y="404" width="6" height="15" fill="rgb(215,113,23)"/><text x="829.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.47%)</title><rect x="832" y="372" width="5" height="15" fill="rgb(212,220,42)"/><text x="835.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.95%)</title><rect x="832" y="356" width="11" height="15" fill="rgb(235,154,5)"/><text x="835.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.47%)</title><rect x="837" y="372" width="6" height="15" fill="rgb(253,82,54)"/><text x="840.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.47%)</title><rect x="837" y="388" width="6" height="15" fill="rgb(239,178,3)"/><text x="840.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.47%)</title><rect x="837" y="404" width="6" height="15" fill="rgb(218,120,53)"/><text x="840.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3472) (1 samples, 0.47%)</title><rect x="837" y="420" width="6" height="15" fill="rgb(227,115,23)"/><text x="840.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.47%)</title><rect x="843" y="372" width="5" height="15" fill="rgb(246,144,12)"/><text x="846.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.47%)</title><rect x="848" y="372" width="6" height="15" fill="rgb(231,226,29)"/><text x="851.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1461) (1 samples, 0.47%)</title><rect x="848" y="388" width="6" height="15" fill="rgb(249,168,39)"/><text x="851.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.42%)</title><rect x="843" y="356" width="17" height="15" fill="rgb(233,51,14)"/><text x="846.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.47%)</title><rect x="854" y="372" width="6" height="15" fill="rgb(232,182,51)"/><text x="857.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.47%)</title><rect x="854" y="388" width="6" height="15" fill="rgb(252,124,51)"/><text x="857.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (19 samples, 9.00%)</title><rect x="759" y="244" width="106" height="15" fill="rgb(207,176,24)"/><text x="762.00" y="254.50">norm_l1 (mlp..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 6.64%)</title><rect x="787" y="260" width="78" height="15" fill="rgb(252,193,23)"/><text x="790.00" y="270.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 6.64%)</title><rect x="787" y="276" width="78" height="15" fill="rgb(223,30,33)"/><text x="790.00" y="286.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 6.16%)</title><rect x="792" y="292" width="73" height="15" fill="rgb(243,47,17)"/><text x="795.00" y="302.50">_sum (nu..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 4.27%)</title><rect x="815" y="308" width="50" height="15" fill="rgb(215,110,19)"/><text x="818.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 3.32%)</title><rect x="826" y="324" width="39" height="15" fill="rgb(238,17,25)"/><text x="829.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 3.32%)</title><rect x="826" y="340" width="39" height="15" fill="rgb(206,143,7)"/><text x="829.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.47%)</title><rect x="860" y="356" width="5" height="15" fill="rgb(205,128,32)"/><text x="863.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.47%)</title><rect x="860" y="372" width="5" height="15" fill="rgb(223,2,11)"/><text x="863.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.47%)</title><rect x="860" y="388" width="5" height="15" fill="rgb(228,120,41)"/><text x="863.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.47%)</title><rect x="860" y="404" width="5" height="15" fill="rgb(223,198,42)"/><text x="863.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.47%)</title><rect x="865" y="276" width="6" height="15" fill="rgb(212,121,13)"/><text x="868.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.47%)</title><rect x="871" y="324" width="5" height="15" fill="rgb(224,31,20)"/><text x="874.00" y="334.50"></text></g><g><title>0x7fa2394d014e (libc-2.29.so) (1 samples, 0.47%)</title><rect x="871" y="340" width="5" height="15" fill="rgb(230,228,33)"/><text x="874.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.47%)</title><rect x="876" y="324" width="6" height="15" fill="rgb(234,195,32)"/><text x="879.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.47%)</title><rect x="876" y="340" width="6" height="15" fill="rgb(215,80,41)"/><text x="879.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.90%)</title><rect x="865" y="260" width="23" height="15" fill="rgb(227,12,53)"/><text x="868.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.42%)</title><rect x="871" y="276" width="17" height="15" fill="rgb(238,9,46)"/><text x="874.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.42%)</title><rect x="871" y="292" width="17" height="15" fill="rgb(234,2,42)"/><text x="874.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.42%)</title><rect x="871" y="308" width="17" height="15" fill="rgb(237,21,27)"/><text x="874.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.47%)</title><rect x="882" y="324" width="6" height="15" fill="rgb(246,184,53)"/><text x="885.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (25 samples, 11.85%)</title><rect x="753" y="196" width="140" height="15" fill="rgb(254,222,2)"/><text x="756.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 11.85%)</title><rect x="753" y="212" width="140" height="15" fill="rgb(229,65,37)"/><text x="756.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (24 samples, 11.37%)</title><rect x="759" y="228" width="134" height="15" fill="rgb(234,69,2)"/><text x="762.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (5 samples, 2.37%)</title><rect x="865" y="244" width="28" height="15" fill="rgb(239,118,6)"/><text x="868.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.47%)</title><rect x="888" y="260" width="5" height="15" fill="rgb(225,226,32)"/><text x="891.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.47%)</title><rect x="888" y="276" width="5" height="15" fill="rgb(219,14,30)"/><text x="891.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.95%)</title><rect x="910" y="276" width="11" height="15" fill="rgb(250,63,4)"/><text x="913.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (2 samples, 0.95%)</title><rect x="910" y="292" width="11" height="15" fill="rgb(218,129,53)"/><text x="913.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (4 samples, 1.90%)</title><rect x="904" y="228" width="23" height="15" fill="rgb(224,212,29)"/><text x="907.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 1.90%)</title><rect x="904" y="244" width="23" height="15" fill="rgb(240,55,15)"/><text x="907.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 1.42%)</title><rect x="910" y="260" width="17" height="15" fill="rgb(216,7,28)"/><text x="913.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.47%)</title><rect x="921" y="276" width="6" height="15" fill="rgb(222,185,45)"/><text x="924.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (1 samples, 0.47%)</title><rect x="921" y="292" width="6" height="15" fill="rgb(236,21,42)"/><text x="924.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.47%)</title><rect x="921" y="308" width="6" height="15" fill="rgb(231,51,22)"/><text x="924.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:588) (1 samples, 0.47%)</title><rect x="921" y="324" width="6" height="15" fill="rgb(223,198,49)"/><text x="924.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.47%)</title><rect x="927" y="260" width="5" height="15" fill="rgb(238,101,53)"/><text x="930.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.47%)</title><rect x="932" y="260" width="6" height="15" fill="rgb(238,166,1)"/><text x="935.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.47%)</title><rect x="932" y="276" width="6" height="15" fill="rgb(238,77,17)"/><text x="935.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1875) (1 samples, 0.47%)</title><rect x="932" y="292" width="6" height="15" fill="rgb(224,54,15)"/><text x="935.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.47%)</title><rect x="938" y="260" width="5" height="15" fill="rgb(211,190,26)"/><text x="941.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.47%)</title><rect x="938" y="276" width="5" height="15" fill="rgb(224,212,27)"/><text x="941.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.47%)</title><rect x="943" y="292" width="6" height="15" fill="rgb(209,85,22)"/><text x="946.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.47%)</title><rect x="943" y="308" width="6" height="15" fill="rgb(246,49,43)"/><text x="946.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:777) (1 samples, 0.47%)</title><rect x="943" y="324" width="6" height="15" fill="rgb(219,209,2)"/><text x="946.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 2.37%)</title><rect x="927" y="228" width="28" height="15" fill="rgb(232,86,9)"/><text x="930.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.37%)</title><rect x="927" y="244" width="28" height="15" fill="rgb(238,121,2)"/><text x="930.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.95%)</title><rect x="943" y="260" width="12" height="15" fill="rgb(213,191,51)"/><text x="946.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.95%)</title><rect x="943" y="276" width="12" height="15" fill="rgb(252,187,29)"/><text x="946.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.47%)</title><rect x="949" y="292" width="6" height="15" fill="rgb(247,207,43)"/><text x="952.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.47%)</title><rect x="949" y="308" width="6" height="15" fill="rgb(240,69,39)"/><text x="952.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.47%)</title><rect x="949" y="324" width="6" height="15" fill="rgb(210,136,14)"/><text x="952.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.47%)</title><rect x="955" y="228" width="5" height="15" fill="rgb(227,165,39)"/><text x="958.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.47%)</title><rect x="966" y="276" width="5" height="15" fill="rgb(251,178,21)"/><text x="969.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.95%)</title><rect x="966" y="260" width="11" height="15" fill="rgb(228,205,0)"/><text x="969.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.47%)</title><rect x="971" y="276" width="6" height="15" fill="rgb(252,118,35)"/><text x="974.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (4 samples, 1.90%)</title><rect x="960" y="228" width="23" height="15" fill="rgb(214,71,46)"/><text x="963.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.42%)</title><rect x="966" y="244" width="17" height="15" fill="rgb(212,168,28)"/><text x="969.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.47%)</title><rect x="977" y="260" width="6" height="15" fill="rgb(225,66,16)"/><text x="980.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.47%)</title><rect x="977" y="276" width="6" height="15" fill="rgb(248,59,22)"/><text x="980.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.47%)</title><rect x="977" y="292" width="6" height="15" fill="rgb(234,54,28)"/><text x="980.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.47%)</title><rect x="977" y="308" width="6" height="15" fill="rgb(213,82,18)"/><text x="980.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:618) (1 samples, 0.47%)</title><rect x="977" y="324" width="6" height="15" fill="rgb(212,5,32)"/><text x="980.00" y="334.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.47%)</title><rect x="983" y="292" width="5" height="15" fill="rgb(246,17,53)"/><text x="986.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.47%)</title><rect x="988" y="308" width="6" height="15" fill="rgb(236,228,28)"/><text x="991.00" y="318.50"></text></g><g><title>0x7fa2394c5e7a (libc-2.29.so) (1 samples, 0.47%)</title><rect x="988" y="324" width="6" height="15" fill="rgb(229,63,22)"/><text x="991.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (46 samples, 21.80%)</title><rect x="742" y="180" width="257" height="15" fill="rgb(246,49,54)"/><text x="745.00" y="190.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (19 samples, 9.00%)</title><rect x="893" y="196" width="106" height="15" fill="rgb(233,175,36)"/><text x="896.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 8.06%)</title><rect x="904" y="212" width="95" height="15" fill="rgb(222,57,4)"/><text x="907.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (3 samples, 1.42%)</title><rect x="983" y="228" width="16" height="15" fill="rgb(211,134,50)"/><text x="986.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 1.42%)</title><rect x="983" y="244" width="16" height="15" fill="rgb(223,120,54)"/><text x="986.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.42%)</title><rect x="983" y="260" width="16" height="15" fill="rgb(205,179,26)"/><text x="986.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 1.42%)</title><rect x="983" y="276" width="16" height="15" fill="rgb(243,80,18)"/><text x="986.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.95%)</title><rect x="988" y="292" width="11" height="15" fill="rgb(236,174,14)"/><text x="991.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.47%)</title><rect x="994" y="308" width="5" height="15" fill="rgb(228,104,29)"/><text x="997.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.47%)</title><rect x="994" y="324" width="5" height="15" fill="rgb(223,42,7)"/><text x="997.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.47%)</title><rect x="994" y="340" width="5" height="15" fill="rgb(229,218,43)"/><text x="997.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 1.42%)</title><rect x="999" y="180" width="17" height="15" fill="rgb(239,56,31)"/><text x="1002.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.47%)</title><rect x="1016" y="180" width="6" height="15" fill="rgb(244,26,11)"/><text x="1019.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.95%)</title><rect x="1022" y="180" width="11" height="15" fill="rgb(236,10,54)"/><text x="1025.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 1.42%)</title><rect x="1033" y="180" width="17" height="15" fill="rgb(234,202,29)"/><text x="1036.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (63 samples, 29.86%)</title><rect x="703" y="132" width="352" height="15" fill="rgb(228,225,41)"/><text x="706.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (62 samples, 29.38%)</title><rect x="709" y="148" width="346" height="15" fill="rgb(242,4,44)"/><text x="712.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (59 samples, 27.96%)</title><rect x="725" y="164" width="330" height="15" fill="rgb(245,115,14)"/><text x="728.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.47%)</title><rect x="1050" y="180" width="5" height="15" fill="rgb(232,215,4)"/><text x="1053.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:45) (67 samples, 31.75%)</title><rect x="686" y="52" width="375" height="15" fill="rgb(246,92,28)"/><text x="689.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:44) (67 samples, 31.75%)</title><rect x="686" y="68" width="375" height="15" fill="rgb(237,25,47)"/><text x="689.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (66 samples, 31.28%)</title><rect x="692" y="84" width="369" height="15" fill="rgb(236,198,31)"/><text x="695.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (66 samples, 31.28%)</title><rect x="692" y="100" width="369" height="15" fill="rgb(230,130,5)"/><text x="695.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (64 samples, 30.33%)</title><rect x="703" y="116" width="358" height="15" fill="rgb(239,112,41)"/><text x="706.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.47%)</title><rect x="1055" y="132" width="6" height="15" fill="rgb(227,29,52)"/><text x="1058.00" y="142.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.47%)</title><rect x="1094" y="164" width="6" height="15" fill="rgb(240,128,2)"/><text x="1097.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.95%)</title><rect x="1111" y="196" width="11" height="15" fill="rgb(244,204,16)"/><text x="1114.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.95%)</title><rect x="1111" y="212" width="11" height="15" fill="rgb(231,80,52)"/><text x="1114.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.95%)</title><rect x="1111" y="228" width="11" height="15" fill="rgb(218,162,4)"/><text x="1114.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1117" y="244" width="5" height="15" fill="rgb(246,69,23)"/><text x="1120.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1117" y="260" width="5" height="15" fill="rgb(235,107,37)"/><text x="1120.00" y="270.50"></text></g><g><title>0x7fa1f9d5946c (?) (1 samples, 0.47%)</title><rect x="1122" y="212" width="6" height="15" fill="rgb(215,146,48)"/><text x="1125.00" y="222.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1122" y="228" width="6" height="15" fill="rgb(212,202,53)"/><text x="1125.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1122" y="244" width="6" height="15" fill="rgb(249,5,43)"/><text x="1125.00" y="254.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.95%)</title><rect x="1139" y="356" width="11" height="15" fill="rgb(221,184,27)"/><text x="1142.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.95%)</title><rect x="1139" y="372" width="11" height="15" fill="rgb(221,215,22)"/><text x="1142.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.95%)</title><rect x="1139" y="388" width="11" height="15" fill="rgb(252,195,19)"/><text x="1142.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="404" width="5" height="15" fill="rgb(246,105,19)"/><text x="1148.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="420" width="5" height="15" fill="rgb(249,219,43)"/><text x="1148.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="436" width="5" height="15" fill="rgb(235,152,11)"/><text x="1148.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="452" width="5" height="15" fill="rgb(228,167,49)"/><text x="1148.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="468" width="5" height="15" fill="rgb(243,131,52)"/><text x="1148.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="484" width="5" height="15" fill="rgb(205,54,27)"/><text x="1148.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="500" width="5" height="15" fill="rgb(231,120,5)"/><text x="1148.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1145" y="516" width="5" height="15" fill="rgb(229,99,44)"/><text x="1148.00" y="526.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.90%)</title><rect x="1134" y="340" width="22" height="15" fill="rgb(251,14,45)"/><text x="1137.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1150" y="356" width="6" height="15" fill="rgb(231,40,49)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.84%)</title><rect x="1128" y="292" width="34" height="15" fill="rgb(223,151,23)"/><text x="1131.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.84%)</title><rect x="1128" y="308" width="34" height="15" fill="rgb(208,58,26)"/><text x="1131.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.84%)</title><rect x="1128" y="324" width="34" height="15" fill="rgb(248,29,54)"/><text x="1131.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="340" width="6" height="15" fill="rgb(214,116,50)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="356" width="6" height="15" fill="rgb(246,80,49)"/><text x="1159.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="372" width="6" height="15" fill="rgb(218,5,23)"/><text x="1159.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="388" width="6" height="15" fill="rgb(218,204,13)"/><text x="1159.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="404" width="6" height="15" fill="rgb(212,154,11)"/><text x="1159.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="420" width="6" height="15" fill="rgb(231,149,21)"/><text x="1159.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="436" width="6" height="15" fill="rgb(246,113,51)"/><text x="1159.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="452" width="6" height="15" fill="rgb(206,112,52)"/><text x="1159.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="468" width="6" height="15" fill="rgb(210,71,20)"/><text x="1159.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="484" width="6" height="15" fill="rgb(243,29,24)"/><text x="1159.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="500" width="6" height="15" fill="rgb(238,70,3)"/><text x="1159.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="516" width="6" height="15" fill="rgb(244,217,18)"/><text x="1159.00" y="526.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="532" width="6" height="15" fill="rgb(245,141,38)"/><text x="1159.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1156" y="548" width="6" height="15" fill="rgb(251,164,6)"/><text x="1159.00" y="558.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1156" y="564" width="6" height="15" fill="rgb(251,131,30)"/><text x="1159.00" y="574.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.32%)</title><rect x="1128" y="276" width="39" height="15" fill="rgb(211,220,2)"/><text x="1131.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1162" y="292" width="5" height="15" fill="rgb(208,35,21)"/><text x="1165.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1162" y="308" width="5" height="15" fill="rgb(249,164,23)"/><text x="1165.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.79%)</title><rect x="1128" y="244" width="45" height="15" fill="rgb(230,13,6)"/><text x="1131.00" y="254.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.79%)</title><rect x="1128" y="260" width="45" height="15" fill="rgb(234,138,32)"/><text x="1131.00" y="270.50">onnx..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1167" y="276" width="6" height="15" fill="rgb(244,111,7)"/><text x="1170.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (14 samples, 6.64%)</title><rect x="1100" y="164" width="78" height="15" fill="rgb(214,137,18)"/><text x="1103.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (14 samples, 6.64%)</title><rect x="1100" y="180" width="78" height="15" fill="rgb(212,180,50)"/><text x="1103.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (10 samples, 4.74%)</title><rect x="1122" y="196" width="56" height="15" fill="rgb(209,152,48)"/><text x="1125.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.27%)</title><rect x="1128" y="212" width="50" height="15" fill="rgb(242,144,31)"/><text x="1131.00" y="222.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.27%)</title><rect x="1128" y="228" width="50" height="15" fill="rgb(236,219,15)"/><text x="1131.00" y="238.50">void ..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1173" y="244" width="5" height="15" fill="rgb(230,123,2)"/><text x="1176.00" y="254.50"></text></g><g><title>all (211 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,49,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:52) (23 samples, 10.90%)</title><rect x="1061" y="52" width="129" height="15" fill="rgb(250,38,21)"/><text x="1064.00" y="62.50">&lt;module&gt; (bench_..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:51) (23 samples, 10.90%)</title><rect x="1061" y="68" width="129" height="15" fill="rgb(253,144,10)"/><text x="1064.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (23 samples, 10.90%)</title><rect x="1061" y="84" width="129" height="15" fill="rgb(228,24,9)"/><text x="1064.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (23 samples, 10.90%)</title><rect x="1061" y="100" width="129" height="15" fill="rgb(250,175,33)"/><text x="1064.00" y="110.50">profile (bench_L..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (22 samples, 10.43%)</title><rect x="1066" y="116" width="124" height="15" fill="rgb(242,4,31)"/><text x="1069.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (20 samples, 9.48%)</title><rect x="1078" y="132" width="112" height="15" fill="rgb(227,3,12)"/><text x="1081.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (17 samples, 8.06%)</title><rect x="1094" y="148" width="96" height="15" fill="rgb(231,77,35)"/><text x="1097.00" y="158.50">run (mlprod..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.95%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(248,197,53)"/><text x="1181.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.95%)</title><rect x="1178" y="180" width="12" height="15" fill="rgb(237,193,14)"/><text x="1181.00" y="190.50"></text></g></g></svg>