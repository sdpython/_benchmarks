<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(243,158,41)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(224,60,8)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(207,218,35)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(228,23,13)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(248,208,37)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(207,70,40)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(205,65,20)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(242,163,52)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(232,182,36)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(226,33,22)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(246,53,47)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="11" y="980" width="3" height="15" fill="rgb(215,83,13)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="11" y="996" width="3" height="15" fill="rgb(228,100,21)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="11" y="1012" width="3" height="15" fill="rgb(252,214,43)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.23%)</title><rect x="11" y="1028" width="3" height="15" fill="rgb(213,166,9)"/><text x="14.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.11%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(242,27,10)"/><text x="15.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="1060" width="2" height="15" fill="rgb(241,170,21)"/><text x="15.00" y="1070.50"></text></g><g><title>0x7fc4055f63bd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="1076" width="2" height="15" fill="rgb(216,22,48)"/><text x="15.00" y="1086.50"></text></g><g><title>0x7fc4055714cb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="1092" width="2" height="15" fill="rgb(253,143,2)"/><text x="15.00" y="1102.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(214,103,45)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(236,60,38)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(208,21,53)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(217,177,49)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(253,38,31)"/><text x="17.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(213,3,31)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(212,111,41)"/><text x="17.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(229,161,43)"/><text x="17.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(205,96,36)"/><text x="17.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(215,114,42)"/><text x="17.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(243,60,50)"/><text x="17.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(230,144,38)"/><text x="17.00" y="1054.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(233,73,48)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(227,151,18)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(232,26,33)"/><text x="18.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(206,147,37)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(243,215,9)"/><text x="18.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.68%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(211,139,35)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(229,171,26)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(229,151,34)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(240,202,33)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(231,57,8)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(250,132,24)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.68%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(229,214,17)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(218,71,18)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(236,75,22)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(205,70,10)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(250,12,53)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(237,184,17)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.68%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(243,202,30)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(242,141,20)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(247,146,15)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(221,200,32)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(253,142,52)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(243,155,51)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.68%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(244,185,45)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(241,178,46)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(244,199,17)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(218,42,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(216,125,24)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(205,23,10)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(238,167,32)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(253,105,45)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(247,90,36)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.68%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(225,137,6)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(213,145,21)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(207,105,21)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(235,110,32)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(252,19,26)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(221,136,53)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.68%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(251,85,31)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 0.68%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(248,63,9)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 0.68%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(251,178,37)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(238,171,13)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(219,133,5)"/><text x="18.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.11%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(225,22,39)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(251,31,33)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(207,50,39)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(252,18,13)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(228,158,46)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(210,142,4)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(250,119,6)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="292" width="1" height="15" fill="rgb(246,111,41)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="308" width="1" height="15" fill="rgb(227,122,8)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="324" width="1" height="15" fill="rgb(210,213,6)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="340" width="1" height="15" fill="rgb(224,49,6)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="356" width="1" height="15" fill="rgb(211,87,40)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="372" width="1" height="15" fill="rgb(240,94,42)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.11%)</title><rect x="18" y="388" width="1" height="15" fill="rgb(219,85,13)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="404" width="1" height="15" fill="rgb(211,157,51)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="420" width="1" height="15" fill="rgb(229,204,26)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="436" width="1" height="15" fill="rgb(208,32,1)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="452" width="1" height="15" fill="rgb(221,70,24)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="468" width="1" height="15" fill="rgb(244,65,22)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="484" width="1" height="15" fill="rgb(239,23,45)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="500" width="1" height="15" fill="rgb(208,87,2)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="516" width="1" height="15" fill="rgb(253,146,5)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="532" width="1" height="15" fill="rgb(228,122,10)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="548" width="1" height="15" fill="rgb(217,92,50)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="564" width="1" height="15" fill="rgb(245,170,51)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(213,141,37)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(215,77,29)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(253,72,19)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(251,116,19)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(247,203,52)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(247,26,20)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(207,62,51)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(205,69,3)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="708" width="1" height="15" fill="rgb(244,181,26)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="724" width="1" height="15" fill="rgb(253,183,7)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="740" width="1" height="15" fill="rgb(235,137,34)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="756" width="1" height="15" fill="rgb(214,68,47)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.11%)</title><rect x="18" y="772" width="1" height="15" fill="rgb(227,229,47)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="788" width="1" height="15" fill="rgb(233,127,9)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="804" width="1" height="15" fill="rgb(251,209,15)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="820" width="1" height="15" fill="rgb(230,55,31)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="836" width="1" height="15" fill="rgb(210,21,43)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(230,29,41)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(235,23,42)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(211,152,24)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(236,188,24)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(246,63,20)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(213,210,35)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(212,204,37)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(208,155,54)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(221,177,48)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(246,225,35)"/><text x="21.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(224,138,21)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(222,65,20)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(218,133,10)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(211,106,46)"/><text x="21.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(211,219,23)"/><text x="21.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(213,78,13)"/><text x="21.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(247,14,14)"/><text x="21.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(235,124,37)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(249,65,11)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(244,190,13)"/><text x="21.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(229,51,18)"/><text x="21.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(254,85,25)"/><text x="21.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(228,107,12)"/><text x="21.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(209,168,36)"/><text x="21.00" y="1230.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.11%)</title><rect x="19" y="1364" width="1" height="15" fill="rgb(222,213,23)"/><text x="22.00" y="1374.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.11%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(254,33,27)"/><text x="22.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="19" y="1396" width="1" height="15" fill="rgb(221,95,2)"/><text x="22.00" y="1406.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="19" y="1412" width="1" height="15" fill="rgb(209,4,9)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1124" width="3" height="15" fill="rgb(254,122,14)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1140" width="3" height="15" fill="rgb(254,121,37)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1156" width="3" height="15" fill="rgb(207,196,5)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="19" y="1172" width="3" height="15" fill="rgb(220,173,9)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1188" width="3" height="15" fill="rgb(250,42,24)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.23%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(253,108,8)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(209,0,30)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(217,185,39)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(216,113,47)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(237,121,9)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(238,1,14)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.23%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(238,167,35)"/><text x="22.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.23%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(219,13,24)"/><text x="22.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.23%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(215,40,3)"/><text x="22.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.23%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(243,148,19)"/><text x="22.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(229,19,45)"/><text x="23.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.11%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(237,172,40)"/><text x="23.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="484" width="4" height="15" fill="rgb(219,67,21)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="500" width="4" height="15" fill="rgb(234,201,26)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="516" width="4" height="15" fill="rgb(228,209,2)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="532" width="4" height="15" fill="rgb(222,71,54)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="548" width="4" height="15" fill="rgb(228,209,20)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="564" width="4" height="15" fill="rgb(217,130,9)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.34%)</title><rect x="19" y="580" width="4" height="15" fill="rgb(205,10,38)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="596" width="4" height="15" fill="rgb(216,180,5)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="612" width="4" height="15" fill="rgb(250,82,35)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="628" width="4" height="15" fill="rgb(243,14,1)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="644" width="4" height="15" fill="rgb(213,56,3)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="660" width="4" height="15" fill="rgb(243,85,27)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.34%)</title><rect x="19" y="676" width="4" height="15" fill="rgb(224,33,23)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="692" width="4" height="15" fill="rgb(230,79,25)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="708" width="4" height="15" fill="rgb(215,156,10)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="724" width="4" height="15" fill="rgb(210,45,29)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="740" width="4" height="15" fill="rgb(222,163,11)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="756" width="4" height="15" fill="rgb(247,6,46)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.34%)</title><rect x="19" y="772" width="4" height="15" fill="rgb(232,64,49)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="788" width="4" height="15" fill="rgb(216,138,41)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="804" width="4" height="15" fill="rgb(248,7,9)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="820" width="4" height="15" fill="rgb(223,44,10)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(215,111,54)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(228,191,35)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.34%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(233,88,27)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(218,210,47)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(219,62,23)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(237,15,19)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(212,112,12)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(246,1,32)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(224,195,33)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(229,14,17)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(235,195,16)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.34%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(234,135,4)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(224,68,34)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="1044" width="4" height="15" fill="rgb(241,99,7)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="1060" width="4" height="15" fill="rgb(239,96,4)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="19" y="1076" width="4" height="15" fill="rgb(209,34,12)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="19" y="1092" width="4" height="15" fill="rgb(207,112,53)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.34%)</title><rect x="19" y="1108" width="4" height="15" fill="rgb(236,10,26)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1124" width="1" height="15" fill="rgb(209,121,45)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1140" width="1" height="15" fill="rgb(240,6,27)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1156" width="1" height="15" fill="rgb(229,8,19)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1172" width="1" height="15" fill="rgb(233,69,41)"/><text x="25.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1188" width="1" height="15" fill="rgb(220,108,8)"/><text x="25.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1204" width="1" height="15" fill="rgb(239,209,7)"/><text x="25.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1220" width="1" height="15" fill="rgb(225,199,14)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(211,213,52)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(211,77,30)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1268" width="1" height="15" fill="rgb(234,170,40)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1284" width="1" height="15" fill="rgb(223,61,33)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1300" width="1" height="15" fill="rgb(231,33,49)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1316" width="1" height="15" fill="rgb(212,85,43)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1332" width="1" height="15" fill="rgb(251,74,26)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1348" width="1" height="15" fill="rgb(225,82,23)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.11%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(241,153,3)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1380" width="1" height="15" fill="rgb(237,162,45)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1396" width="1" height="15" fill="rgb(244,192,32)"/><text x="25.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1412" width="1" height="15" fill="rgb(217,171,23)"/><text x="25.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(218,49,1)"/><text x="25.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(227,226,2)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="22" y="1460" width="1" height="15" fill="rgb(228,70,4)"/><text x="25.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="22" y="1476" width="1" height="15" fill="rgb(241,159,4)"/><text x="25.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="22" y="1492" width="1" height="15" fill="rgb(224,122,6)"/><text x="25.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="22" y="1508" width="1" height="15" fill="rgb(215,82,36)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="22" y="1524" width="1" height="15" fill="rgb(248,7,24)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="22" y="1540" width="1" height="15" fill="rgb(238,226,12)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="22" y="1556" width="1" height="15" fill="rgb(237,190,24)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="22" y="1572" width="1" height="15" fill="rgb(225,85,43)"/><text x="25.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="22" y="1588" width="1" height="15" fill="rgb(253,221,20)"/><text x="25.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1604" width="1" height="15" fill="rgb(205,214,13)"/><text x="25.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1620" width="1" height="15" fill="rgb(216,89,11)"/><text x="25.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;, pybind11::bytes, onnx::OpSchema::Attribute*, &gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda(onnx::OpSchema::Attribute*)#3} const&amp;&amp;&amp;, pybind11::bytes (*)(onnx::OpSchema::Attribute*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1636" width="1" height="15" fill="rgb(239,226,4)"/><text x="25.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1652" width="1" height="15" fill="rgb(238,67,51)"/><text x="25.00" y="1662.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1668" width="1" height="15" fill="rgb(245,205,39)"/><text x="25.00" y="1678.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.994] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="22" y="1684" width="1" height="15" fill="rgb(237,23,45)"/><text x="25.00" y="1694.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="22" y="1700" width="1" height="15" fill="rgb(247,201,11)"/><text x="25.00" y="1710.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.11%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(244,52,16)"/><text x="26.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.11%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(230,8,39)"/><text x="26.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(234,14,25)"/><text x="26.00" y="1070.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(247,18,39)"/><text x="26.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1892" width="2" height="15" fill="rgb(238,71,29)"/><text x="27.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1908" width="2" height="15" fill="rgb(221,35,26)"/><text x="27.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1924" width="2" height="15" fill="rgb(250,205,13)"/><text x="27.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="1940" width="2" height="15" fill="rgb(230,91,39)"/><text x="27.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1956" width="2" height="15" fill="rgb(218,149,2)"/><text x="27.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.11%)</title><rect x="24" y="1972" width="2" height="15" fill="rgb(229,167,43)"/><text x="27.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="1988" width="2" height="15" fill="rgb(245,203,19)"/><text x="27.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="2004" width="2" height="15" fill="rgb(243,18,24)"/><text x="27.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="2020" width="2" height="15" fill="rgb(235,169,35)"/><text x="27.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="2036" width="2" height="15" fill="rgb(220,98,26)"/><text x="27.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="2052" width="2" height="15" fill="rgb(248,64,49)"/><text x="27.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py) (1 samples, 0.11%)</title><rect x="24" y="2068" width="2" height="15" fill="rgb(223,229,41)"/><text x="27.00" y="2078.50"></text></g><g><title>Parser (matplotlib/mathtext.py) (1 samples, 0.11%)</title><rect x="24" y="2084" width="2" height="15" fill="rgb(234,170,20)"/><text x="27.00" y="2094.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/mathtext.py) (1 samples, 0.11%)</title><rect x="24" y="2100" width="2" height="15" fill="rgb(231,34,50)"/><text x="27.00" y="2110.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/mathtext.py) (1 samples, 0.11%)</title><rect x="24" y="2116" width="2" height="15" fill="rgb(239,53,42)"/><text x="27.00" y="2126.50"></text></g><g><title>&lt;genexpr&gt; (matplotlib/mathtext.py) (1 samples, 0.11%)</title><rect x="24" y="2132" width="2" height="15" fill="rgb(211,196,42)"/><text x="27.00" y="2142.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.68%)</title><rect x="19" y="244" width="8" height="15" fill="rgb(246,64,34)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="260" width="8" height="15" fill="rgb(209,197,48)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="276" width="8" height="15" fill="rgb(231,146,20)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="292" width="8" height="15" fill="rgb(220,117,35)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="19" y="308" width="8" height="15" fill="rgb(250,218,29)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="324" width="8" height="15" fill="rgb(226,17,46)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.68%)</title><rect x="19" y="340" width="8" height="15" fill="rgb(217,225,33)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="356" width="8" height="15" fill="rgb(249,107,35)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="372" width="8" height="15" fill="rgb(247,42,47)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="388" width="8" height="15" fill="rgb(214,214,12)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.68%)</title><rect x="19" y="404" width="8" height="15" fill="rgb(232,215,18)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="420" width="8" height="15" fill="rgb(223,1,3)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 0.68%)</title><rect x="19" y="436" width="8" height="15" fill="rgb(210,90,19)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="452" width="8" height="15" fill="rgb(205,100,1)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.68%)</title><rect x="19" y="468" width="8" height="15" fill="rgb(222,60,28)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="484" width="4" height="15" fill="rgb(214,170,26)"/><text x="26.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="500" width="4" height="15" fill="rgb(242,125,43)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="516" width="4" height="15" fill="rgb(244,133,5)"/><text x="26.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.34%)</title><rect x="23" y="532" width="4" height="15" fill="rgb(217,155,29)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="548" width="4" height="15" fill="rgb(213,113,43)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="564" width="4" height="15" fill="rgb(218,58,43)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="580" width="4" height="15" fill="rgb(246,39,4)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="596" width="4" height="15" fill="rgb(229,189,0)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="612" width="4" height="15" fill="rgb(213,189,16)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.34%)</title><rect x="23" y="628" width="4" height="15" fill="rgb(206,223,14)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="644" width="4" height="15" fill="rgb(212,222,18)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="660" width="4" height="15" fill="rgb(213,90,45)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="676" width="4" height="15" fill="rgb(240,175,23)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="692" width="4" height="15" fill="rgb(235,35,21)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="708" width="4" height="15" fill="rgb(250,49,51)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.34%)</title><rect x="23" y="724" width="4" height="15" fill="rgb(208,178,23)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="740" width="4" height="15" fill="rgb(244,51,17)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="756" width="4" height="15" fill="rgb(210,16,27)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="772" width="4" height="15" fill="rgb(236,96,36)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="788" width="4" height="15" fill="rgb(225,177,2)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="804" width="4" height="15" fill="rgb(223,210,29)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.34%)</title><rect x="23" y="820" width="4" height="15" fill="rgb(242,146,26)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="836" width="4" height="15" fill="rgb(239,77,53)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="852" width="4" height="15" fill="rgb(238,81,32)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="868" width="4" height="15" fill="rgb(227,18,2)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="884" width="4" height="15" fill="rgb(236,98,48)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="900" width="4" height="15" fill="rgb(230,56,36)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.34%)</title><rect x="23" y="916" width="4" height="15" fill="rgb(223,120,52)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(248,103,17)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(254,47,21)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(224,180,28)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="23" y="980" width="4" height="15" fill="rgb(208,9,21)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="23" y="996" width="4" height="15" fill="rgb(232,184,20)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.34%)</title><rect x="23" y="1012" width="4" height="15" fill="rgb(216,2,41)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(235,57,6)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(209,41,36)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(249,131,43)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(225,102,13)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(235,213,49)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.23%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(231,35,49)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1124" width="3" height="15" fill="rgb(253,207,46)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1140" width="3" height="15" fill="rgb(215,130,50)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1156" width="3" height="15" fill="rgb(209,47,51)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1172" width="3" height="15" fill="rgb(253,156,11)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1188" width="3" height="15" fill="rgb(211,7,35)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.23%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(218,156,5)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(225,146,16)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(254,123,30)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(247,19,39)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(206,94,31)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(254,68,5)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.23%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(235,210,26)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(244,113,42)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1332" width="3" height="15" fill="rgb(213,125,4)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1348" width="3" height="15" fill="rgb(245,223,4)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1364" width="3" height="15" fill="rgb(253,136,34)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1380" width="3" height="15" fill="rgb(247,46,52)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.23%)</title><rect x="24" y="1396" width="3" height="15" fill="rgb(218,173,38)"/><text x="27.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1412" width="3" height="15" fill="rgb(239,160,44)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1428" width="3" height="15" fill="rgb(211,178,26)"/><text x="27.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1444" width="3" height="15" fill="rgb(220,213,28)"/><text x="27.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1460" width="3" height="15" fill="rgb(251,130,26)"/><text x="27.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1476" width="3" height="15" fill="rgb(251,50,47)"/><text x="27.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.23%)</title><rect x="24" y="1492" width="3" height="15" fill="rgb(236,227,4)"/><text x="27.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1508" width="3" height="15" fill="rgb(207,87,8)"/><text x="27.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1524" width="3" height="15" fill="rgb(238,164,0)"/><text x="27.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1540" width="3" height="15" fill="rgb(242,195,9)"/><text x="27.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1556" width="3" height="15" fill="rgb(246,159,2)"/><text x="27.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1572" width="3" height="15" fill="rgb(207,165,36)"/><text x="27.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.23%)</title><rect x="24" y="1588" width="3" height="15" fill="rgb(223,14,0)"/><text x="27.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1604" width="3" height="15" fill="rgb(250,162,31)"/><text x="27.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1620" width="3" height="15" fill="rgb(221,43,18)"/><text x="27.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1636" width="3" height="15" fill="rgb(220,66,30)"/><text x="27.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1652" width="3" height="15" fill="rgb(221,147,53)"/><text x="27.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1668" width="3" height="15" fill="rgb(210,89,30)"/><text x="27.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.23%)</title><rect x="24" y="1684" width="3" height="15" fill="rgb(223,203,54)"/><text x="27.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1700" width="3" height="15" fill="rgb(230,127,46)"/><text x="27.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1716" width="3" height="15" fill="rgb(209,63,53)"/><text x="27.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1732" width="3" height="15" fill="rgb(206,192,23)"/><text x="27.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1748" width="3" height="15" fill="rgb(211,220,38)"/><text x="27.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1764" width="3" height="15" fill="rgb(230,152,7)"/><text x="27.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.23%)</title><rect x="24" y="1780" width="3" height="15" fill="rgb(218,143,32)"/><text x="27.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1796" width="3" height="15" fill="rgb(208,211,31)"/><text x="27.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1812" width="3" height="15" fill="rgb(240,10,40)"/><text x="27.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1828" width="3" height="15" fill="rgb(247,82,43)"/><text x="27.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="1844" width="3" height="15" fill="rgb(237,189,26)"/><text x="27.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="1860" width="3" height="15" fill="rgb(248,56,34)"/><text x="27.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.23%)</title><rect x="24" y="1876" width="3" height="15" fill="rgb(224,55,27)"/><text x="27.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="26" y="1892" width="1" height="15" fill="rgb(238,24,54)"/><text x="29.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="26" y="1908" width="1" height="15" fill="rgb(245,38,39)"/><text x="29.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.11%)</title><rect x="26" y="1924" width="1" height="15" fill="rgb(210,170,13)"/><text x="29.00" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="68" width="18" height="15" fill="rgb(234,187,18)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="84" width="18" height="15" fill="rgb(219,50,46)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(246,178,50)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.59%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(211,163,34)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="132" width="18" height="15" fill="rgb(221,146,50)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (14 samples, 1.59%)</title><rect x="10" y="148" width="18" height="15" fill="rgb(242,222,8)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="164" width="18" height="15" fill="rgb(227,6,7)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="180" width="18" height="15" fill="rgb(232,130,2)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="19" y="196" width="9" height="15" fill="rgb(228,72,28)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="19" y="212" width="9" height="15" fill="rgb(228,185,14)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="19" y="228" width="9" height="15" fill="rgb(230,123,52)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(245,174,3)"/><text x="30.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(205,117,16)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(246,204,32)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(254,28,15)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(249,76,19)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(243,28,9)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.11%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(243,4,3)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(215,175,50)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(208,159,25)"/><text x="30.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(234,41,37)"/><text x="30.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(228,132,22)"/><text x="30.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(223,164,13)"/><text x="30.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(212,177,19)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(212,132,17)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(248,24,28)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(247,53,14)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(212,72,51)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(217,51,14)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(220,71,3)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="548" width="1" height="15" fill="rgb(254,161,33)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="564" width="1" height="15" fill="rgb(250,63,51)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="580" width="1" height="15" fill="rgb(230,103,52)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="596" width="1" height="15" fill="rgb(240,12,6)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="612" width="1" height="15" fill="rgb(254,4,37)"/><text x="30.00" y="622.50"></text></g><g><title>0x7fc3df48f373 (?) (1 samples, 0.11%)</title><rect x="27" y="628" width="1" height="15" fill="rgb(246,59,13)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="644" width="1" height="15" fill="rgb(220,161,8)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="660" width="1" height="15" fill="rgb(243,201,46)"/><text x="30.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="676" width="1" height="15" fill="rgb(243,143,33)"/><text x="30.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="692" width="1" height="15" fill="rgb(205,182,54)"/><text x="30.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="708" width="1" height="15" fill="rgb(230,28,44)"/><text x="30.00" y="718.50"></text></g><g><title>0x7fc3df252eea (?) (1 samples, 0.11%)</title><rect x="27" y="724" width="1" height="15" fill="rgb(208,204,35)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="740" width="1" height="15" fill="rgb(207,151,18)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="756" width="1" height="15" fill="rgb(231,94,9)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="772" width="1" height="15" fill="rgb(250,165,48)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="788" width="1" height="15" fill="rgb(207,209,20)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="804" width="1" height="15" fill="rgb(217,75,21)"/><text x="30.00" y="814.50"></text></g><g><title>0x7fc3defeb887 (?) (1 samples, 0.11%)</title><rect x="27" y="820" width="1" height="15" fill="rgb(246,217,43)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="836" width="1" height="15" fill="rgb(210,109,11)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="852" width="1" height="15" fill="rgb(220,175,3)"/><text x="30.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="868" width="1" height="15" fill="rgb(246,101,20)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="884" width="1" height="15" fill="rgb(251,98,36)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="900" width="1" height="15" fill="rgb(234,227,38)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="916" width="1" height="15" fill="rgb(216,119,31)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="932" width="1" height="15" fill="rgb(208,50,20)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="948" width="1" height="15" fill="rgb(206,83,39)"/><text x="30.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="964" width="1" height="15" fill="rgb(205,11,13)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="980" width="1" height="15" fill="rgb(250,73,40)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="996" width="1" height="15" fill="rgb(221,15,35)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1012" width="1" height="15" fill="rgb(205,116,29)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1028" width="1" height="15" fill="rgb(253,67,35)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1044" width="1" height="15" fill="rgb(250,180,52)"/><text x="30.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.11%)</title><rect x="27" y="1060" width="1" height="15" fill="rgb(213,195,11)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1076" width="1" height="15" fill="rgb(214,214,45)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1092" width="1" height="15" fill="rgb(230,27,40)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1108" width="1" height="15" fill="rgb(205,139,42)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1124" width="1" height="15" fill="rgb(244,179,7)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1140" width="1" height="15" fill="rgb(218,100,18)"/><text x="30.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1156" width="1" height="15" fill="rgb(208,93,39)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1172" width="1" height="15" fill="rgb(244,68,47)"/><text x="30.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1188" width="1" height="15" fill="rgb(222,40,22)"/><text x="30.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1204" width="1" height="15" fill="rgb(240,77,26)"/><text x="30.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1220" width="1" height="15" fill="rgb(236,146,42)"/><text x="30.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1236" width="1" height="15" fill="rgb(227,15,19)"/><text x="30.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1252" width="1" height="15" fill="rgb(253,63,52)"/><text x="30.00" y="1262.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="32" y="340" width="3" height="15" fill="rgb(237,26,7)"/><text x="35.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.25%)</title><rect x="35" y="340" width="15" height="15" fill="rgb(223,47,42)"/><text x="38.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.27%)</title><rect x="50" y="372" width="26" height="15" fill="rgb(229,100,0)"/><text x="53.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.13%)</title><rect x="63" y="388" width="13" height="15" fill="rgb(238,111,16)"/><text x="66.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="468" width="1" height="15" fill="rgb(245,120,6)"/><text x="81.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="484" width="1" height="15" fill="rgb(243,218,15)"/><text x="81.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="500" width="1" height="15" fill="rgb(225,73,17)"/><text x="81.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="78" y="516" width="1" height="15" fill="rgb(254,82,54)"/><text x="81.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="78" y="532" width="1" height="15" fill="rgb(213,209,26)"/><text x="81.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="548" width="1" height="15" fill="rgb(229,96,8)"/><text x="81.00" y="558.50"></text></g><g><title>0x7fc4055ca700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="78" y="564" width="1" height="15" fill="rgb(219,162,30)"/><text x="81.00" y="574.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="372" width="4" height="15" fill="rgb(234,79,42)"/><text x="79.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="388" width="4" height="15" fill="rgb(231,39,17)"/><text x="79.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="404" width="4" height="15" fill="rgb(207,50,47)"/><text x="79.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="420" width="4" height="15" fill="rgb(226,93,21)"/><text x="79.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="436" width="4" height="15" fill="rgb(231,211,47)"/><text x="79.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="76" y="452" width="4" height="15" fill="rgb(243,110,13)"/><text x="79.00" y="462.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="79" y="468" width="1" height="15" fill="rgb(222,144,28)"/><text x="82.00" y="478.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.72%)</title><rect x="50" y="340" width="32" height="15" fill="rgb(254,225,24)"/><text x="53.00" y="350.50">on..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.72%)</title><rect x="50" y="356" width="32" height="15" fill="rgb(235,136,44)"/><text x="53.00" y="366.50">on..</text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="80" y="372" width="2" height="15" fill="rgb(221,98,17)"/><text x="83.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="80" y="388" width="2" height="15" fill="rgb(246,198,3)"/><text x="83.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="80" y="404" width="2" height="15" fill="rgb(251,112,38)"/><text x="83.00" y="414.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.68%)</title><rect x="82" y="340" width="8" height="15" fill="rgb(239,54,44)"/><text x="85.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="356" width="2" height="15" fill="rgb(226,108,28)"/><text x="91.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="88" y="372" width="2" height="15" fill="rgb(243,169,31)"/><text x="91.00" y="382.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.13%)</title><rect x="90" y="340" width="13" height="15" fill="rgb(243,36,47)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.13%)</title><rect x="90" y="356" width="13" height="15" fill="rgb(225,17,21)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.13%)</title><rect x="90" y="372" width="13" height="15" fill="rgb(233,161,38)"/><text x="93.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="99" y="388" width="4" height="15" fill="rgb(233,76,39)"/><text x="102.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="147" y="356" width="6" height="15" fill="rgb(217,217,34)"/><text x="150.00" y="366.50"></text></g><g><title>0x7fc3c524d930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="244" y="388" width="4" height="15" fill="rgb(233,54,14)"/><text x="247.00" y="398.50"></text></g><g><title>0x7fc3c524eba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="248" y="388" width="1" height="15" fill="rgb(227,186,11)"/><text x="251.00" y="398.50"></text></g><g><title>0x7fc3f5094d50 (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="257" y="404" width="3" height="15" fill="rgb(223,191,28)"/><text x="260.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (22 samples, 2.49%)</title><rect x="249" y="388" width="29" height="15" fill="rgb(226,178,19)"/><text x="252.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.59%)</title><rect x="260" y="404" width="18" height="15" fill="rgb(234,107,18)"/><text x="263.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 12.02%)</title><rect x="153" y="356" width="141" height="15" fill="rgb(244,9,1)"/><text x="156.00" y="366.50">onnxruntime::ml::..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 6.01%)</title><rect x="224" y="372" width="70" height="15" fill="rgb(205,74,12)"/><text x="227.00" y="382.50">std::_R..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (12 samples, 1.36%)</title><rect x="278" y="388" width="16" height="15" fill="rgb(218,99,27)"/><text x="281.00" y="398.50"></text></g><g><title>0x7fc4055e8d97 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="305" y="372" width="2" height="15" fill="rgb(224,84,22)"/><text x="308.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.13%)</title><rect x="294" y="356" width="14" height="15" fill="rgb(248,176,50)"/><text x="297.00" y="366.50"></text></g><g><title>0x7fc4055e8dae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="307" y="372" width="1" height="15" fill="rgb(243,14,49)"/><text x="310.00" y="382.50"></text></g><g><title>0x7fc3c524e0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="313" y="372" width="2" height="15" fill="rgb(210,147,6)"/><text x="316.00" y="382.50"></text></g><g><title>0x7fc3f50957a0 (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="315" y="372" width="2" height="15" fill="rgb(244,186,24)"/><text x="318.00" y="382.50"></text></g><g><title>0x7fc4055c8906 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="317" y="372" width="3" height="15" fill="rgb(249,10,19)"/><text x="320.00" y="382.50"></text></g><g><title>0x7fc4055c890e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(246,4,3)"/><text x="323.00" y="382.50"></text></g><g><title>0x7fc4055c891c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(238,94,3)"/><text x="324.00" y="382.50"></text></g><g><title>0x7fc4055c8929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(217,203,36)"/><text x="326.00" y="382.50"></text></g><g><title>0x7fc4055c892c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="324" y="372" width="1" height="15" fill="rgb(221,28,41)"/><text x="327.00" y="382.50"></text></g><g><title>0x7fc4055c8961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="372" width="2" height="15" fill="rgb(225,52,8)"/><text x="328.00" y="382.50"></text></g><g><title>0x7fc4055c896a (libc-2.29.so) (2 samples, 0.23%)</title><rect x="327" y="372" width="2" height="15" fill="rgb(216,59,49)"/><text x="330.00" y="382.50"></text></g><g><title>0x7fc4055c8971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="329" y="372" width="2" height="15" fill="rgb(235,154,26)"/><text x="332.00" y="382.50"></text></g><g><title>0x7fc4055c8982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="331" y="372" width="1" height="15" fill="rgb(222,69,30)"/><text x="334.00" y="382.50"></text></g><g><title>0x7fc4055c8991 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="332" y="372" width="4" height="15" fill="rgb(237,68,52)"/><text x="335.00" y="382.50"></text></g><g><title>0x7fc4055c8998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="336" y="372" width="1" height="15" fill="rgb(244,209,21)"/><text x="339.00" y="382.50"></text></g><g><title>0x7fc4055c8a38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="337" y="372" width="2" height="15" fill="rgb(219,82,39)"/><text x="340.00" y="382.50"></text></g><g><title>0x7fc4055c8a41 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="339" y="372" width="4" height="15" fill="rgb(245,87,14)"/><text x="342.00" y="382.50"></text></g><g><title>0x7fc4055c8a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="343" y="372" width="1" height="15" fill="rgb(244,107,28)"/><text x="346.00" y="382.50"></text></g><g><title>0x7fc4055c8a55 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="344" y="372" width="3" height="15" fill="rgb(245,172,45)"/><text x="347.00" y="382.50"></text></g><g><title>0x7fc4055c8bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="347" y="372" width="1" height="15" fill="rgb(212,63,36)"/><text x="350.00" y="382.50"></text></g><g><title>0x7fc4055c8be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="348" y="372" width="1" height="15" fill="rgb(208,96,8)"/><text x="351.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 0.68%)</title><rect x="349" y="372" width="8" height="15" fill="rgb(224,18,50)"/><text x="352.00" y="382.50"></text></g><g><title>0x7fc4055c8904 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(205,192,49)"/><text x="368.00" y="398.50"></text></g><g><title>0x7fc4055c8908 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="367" y="388" width="1" height="15" fill="rgb(233,20,9)"/><text x="370.00" y="398.50"></text></g><g><title>0x7fc4055c8929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="368" y="388" width="1" height="15" fill="rgb(213,100,0)"/><text x="371.00" y="398.50"></text></g><g><title>0x7fc4055c8965 (libc-2.29.so) (4 samples, 0.45%)</title><rect x="369" y="388" width="6" height="15" fill="rgb(250,195,4)"/><text x="372.00" y="398.50"></text></g><g><title>0x7fc4055c897c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="375" y="388" width="1" height="15" fill="rgb(207,216,6)"/><text x="378.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 5.90%)</title><rect x="308" y="356" width="69" height="15" fill="rgb(205,103,2)"/><text x="311.00" y="366.50">std::_R..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.70%)</title><rect x="357" y="372" width="20" height="15" fill="rgb(241,179,27)"/><text x="360.00" y="382.50"></text></g><g><title>0x7fc4055c8991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="376" y="388" width="1" height="15" fill="rgb(230,161,7)"/><text x="379.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (212 samples, 24.04%)</title><rect x="103" y="340" width="284" height="15" fill="rgb(214,30,16)"/><text x="106.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifie..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (7 samples, 0.79%)</title><rect x="377" y="356" width="10" height="15" fill="rgb(222,205,11)"/><text x="380.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="387" y="356" width="1" height="15" fill="rgb(215,66,38)"/><text x="390.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="372" width="1" height="15" fill="rgb(228,0,13)"/><text x="390.00" y="382.50"></text></g><g><title>0x7fc4055c9fe4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="387" y="388" width="1" height="15" fill="rgb(221,202,7)"/><text x="390.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 30.27%)</title><rect x="32" y="260" width="357" height="15" fill="rgb(206,0,50)"/><text x="35.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 30.27%)</title><rect x="32" y="276" width="357" height="15" fill="rgb(223,85,9)"/><text x="35.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 30.27%)</title><rect x="32" y="292" width="357" height="15" fill="rgb(214,197,45)"/><text x="35.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 30.27%)</title><rect x="32" y="308" width="357" height="15" fill="rgb(217,86,4)"/><text x="35.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (267 samples, 30.27%)</title><rect x="32" y="324" width="357" height="15" fill="rgb(232,12,12)"/><text x="35.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="387" y="340" width="2" height="15" fill="rgb(247,64,9)"/><text x="390.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="388" y="356" width="1" height="15" fill="rgb(226,137,14)"/><text x="391.00" y="366.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (273 samples, 30.95%)</title><rect x="28" y="100" width="365" height="15" fill="rgb(217,71,44)"/><text x="31.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (270 samples, 30.61%)</title><rect x="32" y="116" width="361" height="15" fill="rgb(235,65,23)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (270 samples, 30.61%)</title><rect x="32" y="132" width="361" height="15" fill="rgb(214,58,17)"/><text x="35.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (270 samples, 30.61%)</title><rect x="32" y="148" width="361" height="15" fill="rgb(238,222,49)"/><text x="35.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (270 samples, 30.61%)</title><rect x="32" y="164" width="361" height="15" fill="rgb(233,161,26)"/><text x="35.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (270 samples, 30.61%)</title><rect x="32" y="180" width="361" height="15" fill="rgb(241,160,44)"/><text x="35.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (270 samples, 30.61%)</title><rect x="32" y="196" width="361" height="15" fill="rgb(248,80,14)"/><text x="35.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (270 samples, 30.61%)</title><rect x="32" y="212" width="361" height="15" fill="rgb(230,153,53)"/><text x="35.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (270 samples, 30.61%)</title><rect x="32" y="228" width="361" height="15" fill="rgb(222,82,16)"/><text x="35.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (270 samples, 30.61%)</title><rect x="32" y="244" width="361" height="15" fill="rgb(221,148,9)"/><text x="35.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="389" y="260" width="4" height="15" fill="rgb(225,69,18)"/><text x="392.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="392" y="276" width="1" height="15" fill="rgb(252,71,44)"/><text x="395.00" y="286.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="393" y="132" width="2" height="15" fill="rgb(235,144,26)"/><text x="396.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="393" y="148" width="2" height="15" fill="rgb(252,180,45)"/><text x="396.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="393" y="164" width="2" height="15" fill="rgb(252,160,52)"/><text x="396.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="180" width="2" height="15" fill="rgb(229,102,40)"/><text x="396.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="196" width="2" height="15" fill="rgb(253,126,10)"/><text x="396.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="212" width="2" height="15" fill="rgb(217,92,39)"/><text x="396.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="393" y="228" width="2" height="15" fill="rgb(232,21,21)"/><text x="396.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="244" width="2" height="15" fill="rgb(218,115,42)"/><text x="396.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.11%)</title><rect x="393" y="260" width="2" height="15" fill="rgb(209,36,4)"/><text x="396.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="276" width="2" height="15" fill="rgb(211,211,5)"/><text x="396.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="292" width="2" height="15" fill="rgb(254,114,11)"/><text x="396.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="308" width="2" height="15" fill="rgb(251,100,30)"/><text x="396.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="393" y="324" width="2" height="15" fill="rgb(246,169,21)"/><text x="396.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="340" width="2" height="15" fill="rgb(232,210,37)"/><text x="396.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.11%)</title><rect x="393" y="356" width="2" height="15" fill="rgb(237,62,51)"/><text x="396.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="372" width="2" height="15" fill="rgb(244,142,9)"/><text x="396.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="388" width="2" height="15" fill="rgb(218,142,9)"/><text x="396.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="404" width="2" height="15" fill="rgb(254,84,49)"/><text x="396.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="393" y="420" width="2" height="15" fill="rgb(207,107,11)"/><text x="396.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="436" width="2" height="15" fill="rgb(247,177,43)"/><text x="396.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.11%)</title><rect x="393" y="452" width="2" height="15" fill="rgb(252,44,24)"/><text x="396.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="468" width="2" height="15" fill="rgb(205,194,32)"/><text x="396.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="484" width="2" height="15" fill="rgb(237,221,52)"/><text x="396.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="500" width="2" height="15" fill="rgb(246,22,33)"/><text x="396.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="516" width="2" height="15" fill="rgb(222,33,30)"/><text x="396.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="393" y="532" width="2" height="15" fill="rgb(223,205,38)"/><text x="396.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="393" y="548" width="2" height="15" fill="rgb(234,123,16)"/><text x="396.00" y="558.50"></text></g><g><title>0x7fc3c528eaf0 (?) (1 samples, 0.11%)</title><rect x="393" y="564" width="2" height="15" fill="rgb(216,68,51)"/><text x="396.00" y="574.50"></text></g><g><title>0x7fc3c52a11d2 (?) (1 samples, 0.11%)</title><rect x="393" y="580" width="2" height="15" fill="rgb(205,140,24)"/><text x="396.00" y="590.50"></text></g><g><title>0x7fc3c52a07b8 (?) (1 samples, 0.11%)</title><rect x="393" y="596" width="2" height="15" fill="rgb(234,89,37)"/><text x="396.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="393" y="612" width="2" height="15" fill="rgb(220,101,33)"/><text x="396.00" y="622.50"></text></g><g><title>0x7fc3c529e994 (?) (1 samples, 0.11%)</title><rect x="393" y="628" width="2" height="15" fill="rgb(222,177,18)"/><text x="396.00" y="638.50"></text></g><g><title>0x7fc3c529d6db (?) (1 samples, 0.11%)</title><rect x="393" y="644" width="2" height="15" fill="rgb(216,26,52)"/><text x="396.00" y="654.50"></text></g><g><title>0x7fc3c5826d1b (?) (1 samples, 0.11%)</title><rect x="393" y="660" width="2" height="15" fill="rgb(233,132,52)"/><text x="396.00" y="670.50"></text></g><g><title>0x7fc3c5840187 (?) (1 samples, 0.11%)</title><rect x="393" y="676" width="2" height="15" fill="rgb(253,102,5)"/><text x="396.00" y="686.50"></text></g><g><title>0x7fc3c582355a (?) (1 samples, 0.11%)</title><rect x="393" y="692" width="2" height="15" fill="rgb(248,62,8)"/><text x="396.00" y="702.50"></text></g><g><title>0x7fc3c58447b0 (?) (1 samples, 0.11%)</title><rect x="393" y="708" width="2" height="15" fill="rgb(243,119,48)"/><text x="396.00" y="718.50"></text></g><g><title>0x7fc3c57d300f (?) (1 samples, 0.11%)</title><rect x="393" y="724" width="2" height="15" fill="rgb(229,17,2)"/><text x="396.00" y="734.50"></text></g><g><title>0x7fc3c57d28d1 (?) (1 samples, 0.11%)</title><rect x="393" y="740" width="2" height="15" fill="rgb(239,197,20)"/><text x="396.00" y="750.50"></text></g><g><title>0x7fc3c57d1ed4 (?) (1 samples, 0.11%)</title><rect x="393" y="756" width="2" height="15" fill="rgb(226,149,21)"/><text x="396.00" y="766.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.23%)</title><rect x="393" y="116" width="3" height="15" fill="rgb(229,214,11)"/><text x="396.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="395" y="132" width="1" height="15" fill="rgb(228,150,13)"/><text x="398.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="395" y="148" width="1" height="15" fill="rgb(234,213,17)"/><text x="398.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="395" y="164" width="1" height="15" fill="rgb(217,154,16)"/><text x="398.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="395" y="180" width="1" height="15" fill="rgb(228,105,46)"/><text x="398.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="395" y="196" width="1" height="15" fill="rgb(224,166,37)"/><text x="398.00" y="206.50"></text></g><g><title>_normalise_probability (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="395" y="212" width="1" height="15" fill="rgb(207,10,17)"/><text x="398.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="395" y="228" width="1" height="15" fill="rgb(218,0,49)"/><text x="398.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="395" y="244" width="1" height="15" fill="rgb(234,37,0)"/><text x="398.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="395" y="260" width="1" height="15" fill="rgb(208,39,31)"/><text x="398.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="395" y="276" width="1" height="15" fill="rgb(238,153,12)"/><text x="398.00" y="286.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (276 samples, 31.29%)</title><rect x="28" y="68" width="369" height="15" fill="rgb(247,25,33)"/><text x="31.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (276 samples, 31.29%)</title><rect x="28" y="84" width="369" height="15" fill="rgb(228,81,10)"/><text x="31.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.34%)</title><rect x="393" y="100" width="4" height="15" fill="rgb(214,79,0)"/><text x="396.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h) (1 samples, 0.11%)</title><rect x="396" y="116" width="1" height="15" fill="rgb(214,164,22)"/><text x="399.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c) (1 samples, 0.11%)</title><rect x="396" y="132" width="1" height="15" fill="rgb(229,66,23)"/><text x="399.00" y="142.50"></text></g><g><title>load (_pickle.c) (1 samples, 0.11%)</title><rect x="396" y="148" width="1" height="15" fill="rgb(231,193,27)"/><text x="399.00" y="158.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.11%)</title><rect x="464" y="228" width="2" height="15" fill="rgb(250,62,45)"/><text x="467.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.11%)</title><rect x="464" y="244" width="2" height="15" fill="rgb(216,140,48)"/><text x="467.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.11%)</title><rect x="464" y="260" width="2" height="15" fill="rgb(230,62,8)"/><text x="467.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="466" y="244" width="1" height="15" fill="rgb(216,31,43)"/><text x="469.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (6 samples, 0.68%)</title><rect x="462" y="212" width="8" height="15" fill="rgb(211,208,31)"/><text x="465.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.34%)</title><rect x="466" y="228" width="4" height="15" fill="rgb(234,152,2)"/><text x="469.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.23%)</title><rect x="467" y="244" width="3" height="15" fill="rgb(215,207,6)"/><text x="470.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.23%)</title><rect x="467" y="260" width="3" height="15" fill="rgb(233,112,31)"/><text x="470.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.23%)</title><rect x="467" y="276" width="3" height="15" fill="rgb(214,31,40)"/><text x="470.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (2 samples, 0.23%)</title><rect x="467" y="292" width="3" height="15" fill="rgb(245,100,44)"/><text x="470.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (2 samples, 0.23%)</title><rect x="467" y="308" width="3" height="15" fill="rgb(210,212,46)"/><text x="470.00" y="318.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.11%)</title><rect x="471" y="244" width="1" height="15" fill="rgb(246,187,52)"/><text x="474.00" y="254.50"></text></g><g><title>0x7fc4055de734 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="471" y="260" width="1" height="15" fill="rgb(211,176,9)"/><text x="474.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="472" y="244" width="2" height="15" fill="rgb(220,181,40)"/><text x="475.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.11%)</title><rect x="472" y="260" width="2" height="15" fill="rgb(205,163,16)"/><text x="475.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="472" y="276" width="2" height="15" fill="rgb(250,8,4)"/><text x="475.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="472" y="292" width="2" height="15" fill="rgb(214,11,38)"/><text x="475.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="472" y="308" width="2" height="15" fill="rgb(221,94,38)"/><text x="475.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 0.57%)</title><rect x="470" y="212" width="6" height="15" fill="rgb(231,110,19)"/><text x="473.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.45%)</title><rect x="471" y="228" width="5" height="15" fill="rgb(214,163,6)"/><text x="474.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.23%)</title><rect x="474" y="244" width="2" height="15" fill="rgb(216,222,10)"/><text x="477.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.23%)</title><rect x="474" y="260" width="2" height="15" fill="rgb(222,69,36)"/><text x="477.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="475" y="276" width="1" height="15" fill="rgb(205,161,13)"/><text x="478.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="475" y="292" width="1" height="15" fill="rgb(228,0,23)"/><text x="478.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="475" y="308" width="1" height="15" fill="rgb(249,203,40)"/><text x="478.00" y="318.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.11%)</title><rect x="476" y="244" width="2" height="15" fill="rgb(231,205,29)"/><text x="479.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="479" y="276" width="1" height="15" fill="rgb(218,97,31)"/><text x="482.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="479" y="292" width="1" height="15" fill="rgb(254,127,17)"/><text x="482.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="480" y="292" width="2" height="15" fill="rgb(214,140,49)"/><text x="483.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="480" y="308" width="2" height="15" fill="rgb(253,33,2)"/><text x="483.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="480" y="324" width="2" height="15" fill="rgb(233,174,14)"/><text x="483.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="480" y="340" width="2" height="15" fill="rgb(245,117,34)"/><text x="483.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(253,213,14)"/><text x="483.00" y="366.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="482" y="356" width="1" height="15" fill="rgb(252,185,15)"/><text x="485.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (6 samples, 0.68%)</title><rect x="476" y="212" width="8" height="15" fill="rgb(239,114,52)"/><text x="479.00" y="222.50"></text></g><g><title>array_add (number.c) (6 samples, 0.68%)</title><rect x="476" y="228" width="8" height="15" fill="rgb(229,213,9)"/><text x="479.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.57%)</title><rect x="478" y="244" width="6" height="15" fill="rgb(213,98,46)"/><text x="481.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.57%)</title><rect x="478" y="260" width="6" height="15" fill="rgb(237,151,13)"/><text x="481.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.34%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(233,124,50)"/><text x="483.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.23%)</title><rect x="482" y="292" width="2" height="15" fill="rgb(230,216,11)"/><text x="485.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.23%)</title><rect x="482" y="308" width="2" height="15" fill="rgb(238,153,38)"/><text x="485.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (2 samples, 0.23%)</title><rect x="482" y="324" width="2" height="15" fill="rgb(238,53,3)"/><text x="485.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (2 samples, 0.23%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(246,77,42)"/><text x="485.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="483" y="356" width="1" height="15" fill="rgb(245,175,46)"/><text x="486.00" y="366.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.11%)</title><rect x="505" y="244" width="1" height="15" fill="rgb(236,0,20)"/><text x="508.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="507" y="276" width="2" height="15" fill="rgb(233,72,2)"/><text x="510.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="507" y="292" width="2" height="15" fill="rgb(210,171,43)"/><text x="510.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="507" y="308" width="2" height="15" fill="rgb(238,59,21)"/><text x="510.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.11%)</title><rect x="507" y="324" width="2" height="15" fill="rgb(221,10,17)"/><text x="510.00" y="334.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="509" y="276" width="1" height="15" fill="rgb(243,89,35)"/><text x="512.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="509" y="292" width="1" height="15" fill="rgb(206,166,1)"/><text x="512.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="510" y="276" width="1" height="15" fill="rgb(216,124,2)"/><text x="513.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="511" y="276" width="2" height="15" fill="rgb(241,89,6)"/><text x="514.00" y="286.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.11%)</title><rect x="514" y="308" width="1" height="15" fill="rgb(226,152,41)"/><text x="517.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="514" y="324" width="1" height="15" fill="rgb(220,92,30)"/><text x="517.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="514" y="340" width="1" height="15" fill="rgb(223,8,46)"/><text x="517.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="514" y="356" width="1" height="15" fill="rgb(213,207,48)"/><text x="517.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="517" y="324" width="1" height="15" fill="rgb(251,214,3)"/><text x="520.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="517" y="340" width="1" height="15" fill="rgb(226,124,5)"/><text x="520.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="517" y="356" width="1" height="15" fill="rgb(242,41,6)"/><text x="520.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="517" y="372" width="1" height="15" fill="rgb(215,72,37)"/><text x="520.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="517" y="388" width="1" height="15" fill="rgb(212,151,22)"/><text x="520.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.34%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(226,59,32)"/><text x="518.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="518" y="324" width="1" height="15" fill="rgb(241,24,45)"/><text x="521.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="518" y="340" width="1" height="15" fill="rgb(227,68,35)"/><text x="521.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="518" y="356" width="1" height="15" fill="rgb(254,7,11)"/><text x="521.00" y="366.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="518" y="372" width="1" height="15" fill="rgb(217,106,22)"/><text x="521.00" y="382.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.68%)</title><rect x="519" y="308" width="8" height="15" fill="rgb(252,82,3)"/><text x="522.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.68%)</title><rect x="519" y="324" width="8" height="15" fill="rgb(245,47,5)"/><text x="522.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 0.68%)</title><rect x="519" y="340" width="8" height="15" fill="rgb(205,64,37)"/><text x="522.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.45%)</title><rect x="522" y="356" width="5" height="15" fill="rgb(236,70,15)"/><text x="525.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="527" y="308" width="2" height="15" fill="rgb(219,186,35)"/><text x="530.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="529" y="308" width="1" height="15" fill="rgb(250,73,37)"/><text x="532.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="529" y="324" width="1" height="15" fill="rgb(214,203,17)"/><text x="532.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 2.27%)</title><rect x="506" y="260" width="27" height="15" fill="rgb(210,184,30)"/><text x="509.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.70%)</title><rect x="513" y="276" width="20" height="15" fill="rgb(242,52,27)"/><text x="516.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.70%)</title><rect x="513" y="292" width="20" height="15" fill="rgb(241,179,27)"/><text x="516.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (2 samples, 0.23%)</title><rect x="530" y="308" width="3" height="15" fill="rgb(236,222,48)"/><text x="533.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(242,107,22)"/><text x="534.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 3.40%)</title><rect x="494" y="228" width="40" height="15" fill="rgb(211,36,44)"/><text x="497.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 2.38%)</title><rect x="506" y="244" width="28" height="15" fill="rgb(212,143,35)"/><text x="509.00" y="254.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="533" y="260" width="1" height="15" fill="rgb(209,194,3)"/><text x="536.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="534" y="228" width="1" height="15" fill="rgb(206,33,51)"/><text x="537.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="534" y="244" width="1" height="15" fill="rgb(239,188,5)"/><text x="537.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.11%)</title><rect x="534" y="260" width="1" height="15" fill="rgb(238,184,48)"/><text x="537.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="534" y="276" width="1" height="15" fill="rgb(251,43,19)"/><text x="537.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="534" y="292" width="1" height="15" fill="rgb(225,18,10)"/><text x="537.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="534" y="308" width="1" height="15" fill="rgb(240,159,46)"/><text x="537.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="534" y="324" width="1" height="15" fill="rgb(206,193,26)"/><text x="537.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.11%)</title><rect x="534" y="340" width="1" height="15" fill="rgb(226,37,45)"/><text x="537.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.11%)</title><rect x="534" y="356" width="1" height="15" fill="rgb(244,113,2)"/><text x="537.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="534" y="372" width="1" height="15" fill="rgb(227,119,40)"/><text x="537.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.11%)</title><rect x="535" y="228" width="2" height="15" fill="rgb(227,205,6)"/><text x="538.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.11%)</title><rect x="535" y="244" width="2" height="15" fill="rgb(210,96,51)"/><text x="538.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="535" y="260" width="2" height="15" fill="rgb(228,220,23)"/><text x="538.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="535" y="276" width="2" height="15" fill="rgb(216,209,27)"/><text x="538.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="535" y="292" width="2" height="15" fill="rgb(240,203,19)"/><text x="538.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="535" y="308" width="2" height="15" fill="rgb(210,178,19)"/><text x="538.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="535" y="324" width="2" height="15" fill="rgb(227,206,20)"/><text x="538.00" y="334.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="535" y="340" width="2" height="15" fill="rgb(238,218,13)"/><text x="538.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (2 samples, 0.23%)</title><rect x="537" y="228" width="2" height="15" fill="rgb(248,146,12)"/><text x="540.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="538" y="244" width="1" height="15" fill="rgb(240,113,0)"/><text x="541.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="538" y="260" width="1" height="15" fill="rgb(230,163,9)"/><text x="541.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="538" y="276" width="1" height="15" fill="rgb(205,27,39)"/><text x="541.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="538" y="292" width="1" height="15" fill="rgb(209,228,44)"/><text x="541.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (1 samples, 0.11%)</title><rect x="538" y="308" width="1" height="15" fill="rgb(206,118,20)"/><text x="541.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="538" y="324" width="1" height="15" fill="rgb(235,64,47)"/><text x="541.00" y="334.50"></text></g><g><title>0x7fc405747ea6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="538" y="340" width="1" height="15" fill="rgb(228,28,38)"/><text x="541.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="541" y="292" width="1" height="15" fill="rgb(242,169,44)"/><text x="544.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="541" y="308" width="1" height="15" fill="rgb(240,36,5)"/><text x="544.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="541" y="324" width="1" height="15" fill="rgb(224,210,54)"/><text x="544.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="541" y="340" width="1" height="15" fill="rgb(225,158,11)"/><text x="544.00" y="350.50"></text></g><g><title>0x7fc4055807a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="541" y="356" width="1" height="15" fill="rgb(251,213,24)"/><text x="544.00" y="366.50"></text></g><g><title>0x7fc4055807c2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="541" y="372" width="1" height="15" fill="rgb(223,216,4)"/><text x="544.00" y="382.50"></text></g><g><title>0x7fc405580760 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="541" y="388" width="1" height="15" fill="rgb(227,114,8)"/><text x="544.00" y="398.50"></text></g><g><title>0x7fc40574a960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="542" y="324" width="1" height="15" fill="rgb(228,213,5)"/><text x="545.00" y="334.50"></text></g><g><title>0x7fc40574a979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(224,49,32)"/><text x="546.00" y="334.50"></text></g><g><title>0x7fc40574a997 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="545" y="324" width="1" height="15" fill="rgb(252,89,33)"/><text x="548.00" y="334.50"></text></g><g><title>0x7fc40574a9a4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="546" y="324" width="1" height="15" fill="rgb(249,210,21)"/><text x="549.00" y="334.50"></text></g><g><title>0x7fc40574a9af (libm-2.29.so) (3 samples, 0.34%)</title><rect x="547" y="324" width="4" height="15" fill="rgb(228,10,52)"/><text x="550.00" y="334.50"></text></g><g><title>0x7fc40574a9bd (libm-2.29.so) (1 samples, 0.11%)</title><rect x="551" y="324" width="2" height="15" fill="rgb(254,30,24)"/><text x="554.00" y="334.50"></text></g><g><title>0x7fc40574a9e4 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="553" y="324" width="2" height="15" fill="rgb(219,57,13)"/><text x="556.00" y="334.50"></text></g><g><title>0x7fc40574a9f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="555" y="324" width="2" height="15" fill="rgb(215,179,50)"/><text x="558.00" y="334.50"></text></g><g><title>0x7fc40574aa04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="557" y="324" width="1" height="15" fill="rgb(213,175,27)"/><text x="560.00" y="334.50"></text></g><g><title>0x7fc40574aa15 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="558" y="324" width="1" height="15" fill="rgb(215,169,41)"/><text x="561.00" y="334.50"></text></g><g><title>0x7fc40574aa19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="559" y="324" width="2" height="15" fill="rgb(213,176,41)"/><text x="562.00" y="334.50"></text></g><g><title>0x7fc40574aa21 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="561" y="324" width="4" height="15" fill="rgb(246,163,33)"/><text x="564.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.23%)</title><rect x="565" y="324" width="2" height="15" fill="rgb(228,115,5)"/><text x="568.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src) (20 samples, 2.27%)</title><rect x="542" y="308" width="27" height="15" fill="rgb(254,73,17)"/><text x="545.00" y="318.50">F..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="567" y="324" width="2" height="15" fill="rgb(238,203,19)"/><text x="570.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (23 samples, 2.61%)</title><rect x="539" y="228" width="31" height="15" fill="rgb(215,222,35)"/><text x="542.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 2.61%)</title><rect x="539" y="244" width="31" height="15" fill="rgb(240,17,10)"/><text x="542.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 2.61%)</title><rect x="539" y="260" width="31" height="15" fill="rgb(243,148,8)"/><text x="542.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (22 samples, 2.49%)</title><rect x="541" y="276" width="29" height="15" fill="rgb(248,106,18)"/><text x="544.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (21 samples, 2.38%)</title><rect x="542" y="292" width="28" height="15" fill="rgb(213,65,23)"/><text x="545.00" y="302.50">t..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="569" y="308" width="1" height="15" fill="rgb(238,59,11)"/><text x="572.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.23%)</title><rect x="575" y="356" width="3" height="15" fill="rgb(224,206,44)"/><text x="578.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.23%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(221,7,20)"/><text x="578.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.23%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(233,158,53)"/><text x="578.00" y="398.50"></text></g><g><title>0x7fc4056a6151 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="577" y="404" width="1" height="15" fill="rgb(230,3,4)"/><text x="580.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.34%)</title><rect x="575" y="324" width="4" height="15" fill="rgb(215,123,10)"/><text x="578.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.34%)</title><rect x="575" y="340" width="4" height="15" fill="rgb(221,141,15)"/><text x="578.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="578" y="356" width="1" height="15" fill="rgb(220,64,3)"/><text x="581.00" y="366.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="582" y="372" width="1" height="15" fill="rgb(249,6,29)"/><text x="585.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="583" y="436" width="2" height="15" fill="rgb(231,63,30)"/><text x="586.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="583" y="452" width="2" height="15" fill="rgb(205,89,50)"/><text x="586.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="583" y="468" width="2" height="15" fill="rgb(241,121,34)"/><text x="586.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="583" y="484" width="2" height="15" fill="rgb(217,26,43)"/><text x="586.00" y="494.50"></text></g><g><title>0x7fc4055c9d14 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="583" y="500" width="2" height="15" fill="rgb(215,173,17)"/><text x="586.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.23%)</title><rect x="583" y="404" width="3" height="15" fill="rgb(230,110,44)"/><text x="586.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.23%)</title><rect x="583" y="420" width="3" height="15" fill="rgb(233,33,33)"/><text x="586.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="585" y="436" width="1" height="15" fill="rgb(246,195,38)"/><text x="588.00" y="446.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.34%)</title><rect x="583" y="372" width="4" height="15" fill="rgb(227,70,11)"/><text x="586.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.34%)</title><rect x="583" y="388" width="4" height="15" fill="rgb(219,48,44)"/><text x="586.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="586" y="404" width="1" height="15" fill="rgb(237,109,18)"/><text x="589.00" y="414.50"></text></g><g><title>0x7fc405580a00 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="586" y="420" width="1" height="15" fill="rgb(220,25,46)"/><text x="589.00" y="430.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="589" y="420" width="1" height="15" fill="rgb(242,151,12)"/><text x="592.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.34%)</title><rect x="587" y="372" width="4" height="15" fill="rgb(219,9,28)"/><text x="590.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.34%)</title><rect x="587" y="388" width="4" height="15" fill="rgb(246,192,36)"/><text x="590.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.34%)</title><rect x="587" y="404" width="4" height="15" fill="rgb(205,177,53)"/><text x="590.00" y="414.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="590" y="420" width="1" height="15" fill="rgb(207,224,15)"/><text x="593.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (11 samples, 1.25%)</title><rect x="593" y="388" width="15" height="15" fill="rgb(228,152,13)"/><text x="596.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.45%)</title><rect x="602" y="404" width="6" height="15" fill="rgb(219,200,1)"/><text x="605.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (35 samples, 3.97%)</title><rect x="570" y="228" width="47" height="15" fill="rgb(230,101,10)"/><text x="573.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (35 samples, 3.97%)</title><rect x="570" y="244" width="47" height="15" fill="rgb(225,182,33)"/><text x="573.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (35 samples, 3.97%)</title><rect x="570" y="260" width="47" height="15" fill="rgb(249,175,15)"/><text x="573.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (34 samples, 3.85%)</title><rect x="571" y="276" width="46" height="15" fill="rgb(240,66,33)"/><text x="574.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (34 samples, 3.85%)</title><rect x="571" y="292" width="46" height="15" fill="rgb(220,3,52)"/><text x="574.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (32 samples, 3.63%)</title><rect x="574" y="308" width="43" height="15" fill="rgb(216,192,24)"/><text x="577.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (28 samples, 3.17%)</title><rect x="579" y="324" width="38" height="15" fill="rgb(211,88,1)"/><text x="582.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 2.95%)</title><rect x="582" y="340" width="35" height="15" fill="rgb(232,211,13)"/><text x="585.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (26 samples, 2.95%)</title><rect x="582" y="356" width="35" height="15" fill="rgb(223,192,21)"/><text x="585.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (19 samples, 2.15%)</title><rect x="591" y="372" width="26" height="15" fill="rgb(253,143,43)"/><text x="594.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 0.79%)</title><rect x="608" y="388" width="9" height="15" fill="rgb(220,156,17)"/><text x="611.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="616" y="404" width="1" height="15" fill="rgb(239,132,32)"/><text x="619.00" y="414.50"></text></g><g><title>0x7fc3c6126422 (?) (1 samples, 0.11%)</title><rect x="617" y="244" width="1" height="15" fill="rgb(221,113,8)"/><text x="620.00" y="254.50"></text></g><g><title>0x7fc3c612c89e (?) (1 samples, 0.11%)</title><rect x="617" y="260" width="1" height="15" fill="rgb(250,130,54)"/><text x="620.00" y="270.50"></text></g><g><title>0x7fc3c612c74f (?) (1 samples, 0.11%)</title><rect x="617" y="276" width="1" height="15" fill="rgb(244,37,49)"/><text x="620.00" y="286.50"></text></g><g><title>0x7fc3c6132a3a (?) (1 samples, 0.11%)</title><rect x="617" y="292" width="1" height="15" fill="rgb(225,22,33)"/><text x="620.00" y="302.50"></text></g><g><title>0x7fc3cf58eab9 (?) (1 samples, 0.11%)</title><rect x="617" y="308" width="1" height="15" fill="rgb(212,47,17)"/><text x="620.00" y="318.50"></text></g><g><title>0x7fc3cf58fea9 (?) (1 samples, 0.11%)</title><rect x="617" y="324" width="1" height="15" fill="rgb(226,161,21)"/><text x="620.00" y="334.50"></text></g><g><title>clone (libc-2.29.so) (1 samples, 0.11%)</title><rect x="618" y="244" width="2" height="15" fill="rgb(254,144,46)"/><text x="621.00" y="254.50"></text></g><g><title>0x7fc3cf58fea0 (libgomp.so.1.0.0) (2 samples, 0.23%)</title><rect x="620" y="468" width="2" height="15" fill="rgb(236,142,48)"/><text x="623.00" y="478.50"></text></g><g><title>0x7fc3cf58fea9 (libgomp.so.1.0.0) (15 samples, 1.70%)</title><rect x="622" y="468" width="20" height="15" fill="rgb(242,0,21)"/><text x="625.00" y="478.50"></text></g><g><title>0x7fc3cf58feab (libgomp.so.1.0.0) (19 samples, 2.15%)</title><rect x="642" y="468" width="26" height="15" fill="rgb(208,35,45)"/><text x="645.00" y="478.50">0..</text></g><g><title>0x7fc3cf58eab9 (libgomp.so.1.0.0) (54 samples, 6.12%)</title><rect x="620" y="452" width="72" height="15" fill="rgb(211,99,44)"/><text x="623.00" y="462.50">0x7fc3cf..</text></g><g><title>0x7fc3cf58fead (libgomp.so.1.0.0) (18 samples, 2.04%)</title><rect x="668" y="468" width="24" height="15" fill="rgb(218,203,17)"/><text x="671.00" y="478.50">0..</text></g><g><title>0x7fc3cf58fcf0 (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="692" y="484" width="1" height="15" fill="rgb(234,29,16)"/><text x="695.00" y="494.50"></text></g><g><title>0x7fc3cf58fcf9 (libgomp.so.1.0.0) (3 samples, 0.34%)</title><rect x="693" y="484" width="4" height="15" fill="rgb(208,33,30)"/><text x="696.00" y="494.50"></text></g><g><title>0x7fc3cf58fcfb (libgomp.so.1.0.0) (5 samples, 0.57%)</title><rect x="697" y="484" width="7" height="15" fill="rgb(212,154,42)"/><text x="700.00" y="494.50"></text></g><g><title>0x7fc3cf58fcfd (libgomp.so.1.0.0) (6 samples, 0.68%)</title><rect x="704" y="484" width="8" height="15" fill="rgb(252,185,8)"/><text x="707.00" y="494.50"></text></g><g><title>0x7fc3cf58ddaa (libgomp.so.1.0.0) (16 samples, 1.81%)</title><rect x="692" y="468" width="21" height="15" fill="rgb(251,86,3)"/><text x="695.00" y="478.50"></text></g><g><title>0x7fc3cf58fd1e (libgomp.so.1.0.0) (1 samples, 0.11%)</title><rect x="712" y="484" width="1" height="15" fill="rgb(217,136,10)"/><text x="715.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (193 samples, 21.88%)</title><rect x="458" y="196" width="258" height="15" fill="rgb(214,29,25)"/><text x="461.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (173 samples, 19.61%)</title><rect x="484" y="212" width="232" height="15" fill="rgb(221,215,43)"/><text x="487.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (74 samples, 8.39%)</title><rect x="617" y="228" width="99" height="15" fill="rgb(213,70,42)"/><text x="620.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (72 samples, 8.16%)</title><rect x="620" y="244" width="96" height="15" fill="rgb(242,62,29)"/><text x="623.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (72 samples, 8.16%)</title><rect x="620" y="260" width="96" height="15" fill="rgb(222,115,22)"/><text x="623.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (72 samples, 8.16%)</title><rect x="620" y="276" width="96" height="15" fill="rgb(208,139,42)"/><text x="623.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (72 samples, 8.16%)</title><rect x="620" y="292" width="96" height="15" fill="rgb(224,207,16)"/><text x="623.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (72 samples, 8.16%)</title><rect x="620" y="308" width="96" height="15" fill="rgb(207,189,25)"/><text x="623.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (72 samples, 8.16%)</title><rect x="620" y="324" width="96" height="15" fill="rgb(231,178,6)"/><text x="623.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (72 samples, 8.16%)</title><rect x="620" y="340" width="96" height="15" fill="rgb(221,104,33)"/><text x="623.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h) (72 samples, 8.16%)</title><rect x="620" y="356" width="96" height="15" fill="rgb(208,149,46)"/><text x="623.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (72 samples, 8.16%)</title><rect x="620" y="372" width="96" height="15" fill="rgb(253,165,16)"/><text x="623.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h) (72 samples, 8.16%)</title><rect x="620" y="388" width="96" height="15" fill="rgb(239,44,14)"/><text x="623.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (72 samples, 8.16%)</title><rect x="620" y="404" width="96" height="15" fill="rgb(236,202,34)"/><text x="623.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (72 samples, 8.16%)</title><rect x="620" y="420" width="96" height="15" fill="rgb(219,97,33)"/><text x="623.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (72 samples, 8.16%)</title><rect x="620" y="436" width="96" height="15" fill="rgb(246,225,3)"/><text x="623.00" y="446.50">pybind11::g..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (18 samples, 2.04%)</title><rect x="692" y="452" width="24" height="15" fill="rgb(227,138,38)"/><text x="695.00" y="462.50">G..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (2 samples, 0.23%)</title><rect x="713" y="468" width="3" height="15" fill="rgb(246,24,23)"/><text x="716.00" y="478.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="732" y="372" width="1" height="15" fill="rgb(245,191,17)"/><text x="735.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="732" y="388" width="1" height="15" fill="rgb(253,62,21)"/><text x="735.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="732" y="404" width="1" height="15" fill="rgb(242,92,31)"/><text x="735.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="732" y="420" width="1" height="15" fill="rgb(234,151,0)"/><text x="735.00" y="430.50"></text></g><g><title>0x7fc4056a7004 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="732" y="436" width="1" height="15" fill="rgb(217,128,34)"/><text x="735.00" y="446.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="733" y="436" width="2" height="15" fill="rgb(242,103,11)"/><text x="736.00" y="446.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="733" y="452" width="2" height="15" fill="rgb(213,71,1)"/><text x="736.00" y="462.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.23%)</title><rect x="733" y="404" width="3" height="15" fill="rgb(253,72,50)"/><text x="736.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (2 samples, 0.23%)</title><rect x="733" y="420" width="3" height="15" fill="rgb(218,52,16)"/><text x="736.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="735" y="436" width="1" height="15" fill="rgb(221,102,19)"/><text x="738.00" y="446.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.34%)</title><rect x="733" y="388" width="4" height="15" fill="rgb(229,105,52)"/><text x="736.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="736" y="404" width="1" height="15" fill="rgb(224,217,45)"/><text x="739.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="736" y="420" width="1" height="15" fill="rgb(250,171,26)"/><text x="739.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="736" y="436" width="1" height="15" fill="rgb(217,25,10)"/><text x="739.00" y="446.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="736" y="452" width="1" height="15" fill="rgb(205,124,38)"/><text x="739.00" y="462.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (9 samples, 1.02%)</title><rect x="739" y="420" width="12" height="15" fill="rgb(251,81,32)"/><text x="742.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="753" y="436" width="2" height="15" fill="rgb(208,29,36)"/><text x="756.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.45%)</title><rect x="751" y="420" width="5" height="15" fill="rgb(248,58,4)"/><text x="754.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="755" y="436" width="1" height="15" fill="rgb(243,169,6)"/><text x="758.00" y="446.50"></text></g><g><title>0x7fc4055c8b87 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="756" y="436" width="1" height="15" fill="rgb(205,165,4)"/><text x="759.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.23%)</title><rect x="756" y="420" width="3" height="15" fill="rgb(254,62,38)"/><text x="759.00" y="430.50"></text></g><g><title>0x7fc4055c8d93 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="757" y="436" width="2" height="15" fill="rgb(213,218,39)"/><text x="760.00" y="446.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="759" y="436" width="1" height="15" fill="rgb(212,191,31)"/><text x="762.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="759" y="452" width="1" height="15" fill="rgb(239,29,36)"/><text x="762.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="761" y="468" width="2" height="15" fill="rgb(233,50,12)"/><text x="764.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.68%)</title><rect x="759" y="420" width="8" height="15" fill="rgb(223,67,1)"/><text x="762.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.57%)</title><rect x="760" y="436" width="7" height="15" fill="rgb(205,176,25)"/><text x="763.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.45%)</title><rect x="761" y="452" width="6" height="15" fill="rgb(215,51,27)"/><text x="764.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="763" y="468" width="4" height="15" fill="rgb(215,176,6)"/><text x="766.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (23 samples, 2.61%)</title><rect x="737" y="388" width="31" height="15" fill="rgb(219,66,10)"/><text x="740.00" y="398.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (23 samples, 2.61%)</title><rect x="737" y="404" width="31" height="15" fill="rgb(244,117,26)"/><text x="740.00" y="414.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="767" y="420" width="1" height="15" fill="rgb(225,78,9)"/><text x="770.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="767" y="436" width="1" height="15" fill="rgb(232,109,29)"/><text x="770.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="767" y="452" width="1" height="15" fill="rgb(214,185,21)"/><text x="770.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="767" y="468" width="1" height="15" fill="rgb(218,117,20)"/><text x="770.00" y="478.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="768" y="388" width="1" height="15" fill="rgb(246,177,31)"/><text x="771.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (29 samples, 3.29%)</title><rect x="732" y="340" width="39" height="15" fill="rgb(227,152,35)"/><text x="735.00" y="350.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 3.29%)</title><rect x="732" y="356" width="39" height="15" fill="rgb(245,117,50)"/><text x="735.00" y="366.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 3.17%)</title><rect x="733" y="372" width="38" height="15" fill="rgb(242,137,12)"/><text x="736.00" y="382.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="769" y="388" width="2" height="15" fill="rgb(234,105,1)"/><text x="772.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="769" y="404" width="2" height="15" fill="rgb(209,109,19)"/><text x="772.00" y="414.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.11%)</title><rect x="771" y="356" width="1" height="15" fill="rgb(244,77,11)"/><text x="774.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.23%)</title><rect x="771" y="340" width="2" height="15" fill="rgb(245,171,32)"/><text x="774.00" y="350.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.11%)</title><rect x="772" y="356" width="1" height="15" fill="rgb(209,46,31)"/><text x="775.00" y="366.50"></text></g><g><title>_arraydescr_isnative (descriptor.c) (1 samples, 0.11%)</title><rect x="772" y="372" width="1" height="15" fill="rgb(249,58,19)"/><text x="775.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="777" y="356" width="2" height="15" fill="rgb(252,149,24)"/><text x="780.00" y="366.50"></text></g><g><title>0x7fc4055dee7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="777" y="372" width="2" height="15" fill="rgb(214,192,5)"/><text x="780.00" y="382.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (7 samples, 0.79%)</title><rect x="779" y="356" width="9" height="15" fill="rgb(222,38,10)"/><text x="782.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.57%)</title><rect x="781" y="372" width="7" height="15" fill="rgb(245,144,35)"/><text x="784.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (5 samples, 0.57%)</title><rect x="781" y="388" width="7" height="15" fill="rgb(246,154,29)"/><text x="784.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.23%)</title><rect x="785" y="404" width="3" height="15" fill="rgb(249,136,46)"/><text x="788.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.23%)</title><rect x="785" y="420" width="3" height="15" fill="rgb(247,83,5)"/><text x="788.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.23%)</title><rect x="785" y="436" width="3" height="15" fill="rgb(241,41,47)"/><text x="788.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.23%)</title><rect x="785" y="452" width="3" height="15" fill="rgb(239,14,12)"/><text x="788.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.23%)</title><rect x="785" y="468" width="3" height="15" fill="rgb(236,189,16)"/><text x="788.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="787" y="484" width="1" height="15" fill="rgb(250,151,54)"/><text x="790.00" y="494.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (292 samples, 33.11%)</title><rect x="399" y="164" width="390" height="15" fill="rgb(238,22,50)"/><text x="402.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (284 samples, 32.20%)</title><rect x="410" y="180" width="379" height="15" fill="rgb(253,229,35)"/><text x="413.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (55 samples, 6.24%)</title><rect x="716" y="196" width="73" height="15" fill="rgb(220,74,18)"/><text x="719.00" y="206.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (53 samples, 6.01%)</title><rect x="719" y="212" width="70" height="15" fill="rgb(229,164,31)"/><text x="722.00" y="222.50">_run (m..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 5.56%)</title><rect x="724" y="228" width="65" height="15" fill="rgb(225,134,4)"/><text x="727.00" y="238.50">clip (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 5.44%)</title><rect x="725" y="244" width="64" height="15" fill="rgb(212,55,44)"/><text x="728.00" y="254.50">array_i..</text></g><g><title>clip (numpy/core/fromnumeric.py) (48 samples, 5.44%)</title><rect x="725" y="260" width="64" height="15" fill="rgb(250,51,52)"/><text x="728.00" y="270.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (47 samples, 5.33%)</title><rect x="727" y="276" width="62" height="15" fill="rgb(240,25,40)"/><text x="730.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (47 samples, 5.33%)</title><rect x="727" y="292" width="62" height="15" fill="rgb(247,102,28)"/><text x="730.00" y="302.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (47 samples, 5.33%)</title><rect x="727" y="308" width="62" height="15" fill="rgb(250,35,32)"/><text x="730.00" y="318.50">forwar..</text></g><g><title>_clip (numpy/core/_methods.py) (47 samples, 5.33%)</title><rect x="727" y="324" width="62" height="15" fill="rgb(244,152,33)"/><text x="730.00" y="334.50">_clip ..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (12 samples, 1.36%)</title><rect x="773" y="340" width="16" height="15" fill="rgb(243,132,6)"/><text x="776.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="788" y="356" width="1" height="15" fill="rgb(242,48,42)"/><text x="791.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="788" y="372" width="1" height="15" fill="rgb(211,76,2)"/><text x="791.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="788" y="388" width="1" height="15" fill="rgb(242,77,48)"/><text x="791.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="789" y="180" width="2" height="15" fill="rgb(236,22,30)"/><text x="792.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="791" y="180" width="1" height="15" fill="rgb(254,33,53)"/><text x="794.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="791" y="196" width="1" height="15" fill="rgb(244,68,37)"/><text x="794.00" y="206.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (296 samples, 33.56%)</title><rect x="397" y="100" width="396" height="15" fill="rgb(234,115,21)"/><text x="400.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (296 samples, 33.56%)</title><rect x="397" y="116" width="396" height="15" fill="rgb(239,80,33)"/><text x="400.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (295 samples, 33.45%)</title><rect x="399" y="132" width="394" height="15" fill="rgb(205,172,21)"/><text x="402.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (295 samples, 33.45%)</title><rect x="399" y="148" width="394" height="15" fill="rgb(213,118,3)"/><text x="402.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.34%)</title><rect x="789" y="164" width="4" height="15" fill="rgb(241,135,4)"/><text x="792.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="792" y="180" width="1" height="15" fill="rgb(231,206,46)"/><text x="795.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="792" y="196" width="1" height="15" fill="rgb(220,141,33)"/><text x="795.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="792" y="212" width="1" height="15" fill="rgb(232,211,52)"/><text x="795.00" y="222.50"></text></g><g><title>0x7fc4055c8eb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="792" y="228" width="1" height="15" fill="rgb(235,163,41)"/><text x="795.00" y="238.50"></text></g><g><title>0x7fc4055c7b9b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="792" y="244" width="1" height="15" fill="rgb(224,31,3)"/><text x="795.00" y="254.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="793" y="564" width="2" height="15" fill="rgb(251,111,43)"/><text x="796.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="793" y="580" width="2" height="15" fill="rgb(207,126,16)"/><text x="796.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="793" y="596" width="2" height="15" fill="rgb(243,71,25)"/><text x="796.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="793" y="612" width="2" height="15" fill="rgb(229,197,34)"/><text x="796.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="793" y="628" width="2" height="15" fill="rgb(254,83,30)"/><text x="796.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="793" y="644" width="2" height="15" fill="rgb(244,143,46)"/><text x="796.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="793" y="660" width="2" height="15" fill="rgb(242,5,36)"/><text x="796.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="676" width="2" height="15" fill="rgb(222,197,9)"/><text x="796.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="692" width="2" height="15" fill="rgb(247,138,7)"/><text x="796.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="708" width="2" height="15" fill="rgb(210,91,11)"/><text x="796.00" y="718.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="724" width="2" height="15" fill="rgb(207,70,11)"/><text x="796.00" y="734.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="740" width="2" height="15" fill="rgb(205,101,1)"/><text x="796.00" y="750.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="793" y="756" width="2" height="15" fill="rgb(222,61,32)"/><text x="796.00" y="766.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (298 samples, 33.79%)</title><rect x="397" y="68" width="399" height="15" fill="rgb(207,87,0)"/><text x="400.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (298 samples, 33.79%)</title><rect x="397" y="84" width="399" height="15" fill="rgb(220,202,7)"/><text x="400.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.23%)</title><rect x="793" y="100" width="3" height="15" fill="rgb(212,106,28)"/><text x="796.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.23%)</title><rect x="793" y="116" width="3" height="15" fill="rgb(214,89,45)"/><text x="796.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.23%)</title><rect x="793" y="132" width="3" height="15" fill="rgb(252,122,29)"/><text x="796.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.23%)</title><rect x="793" y="148" width="3" height="15" fill="rgb(210,33,25)"/><text x="796.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.23%)</title><rect x="793" y="164" width="3" height="15" fill="rgb(239,161,28)"/><text x="796.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.23%)</title><rect x="793" y="180" width="3" height="15" fill="rgb(225,34,24)"/><text x="796.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.23%)</title><rect x="793" y="196" width="3" height="15" fill="rgb(213,65,40)"/><text x="796.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="212" width="3" height="15" fill="rgb(241,99,17)"/><text x="796.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="228" width="3" height="15" fill="rgb(250,57,15)"/><text x="796.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="244" width="3" height="15" fill="rgb(237,105,49)"/><text x="796.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="793" y="260" width="3" height="15" fill="rgb(212,174,31)"/><text x="796.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="276" width="3" height="15" fill="rgb(223,108,17)"/><text x="796.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.23%)</title><rect x="793" y="292" width="3" height="15" fill="rgb(253,52,7)"/><text x="796.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="308" width="3" height="15" fill="rgb(254,173,8)"/><text x="796.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="324" width="3" height="15" fill="rgb(206,198,33)"/><text x="796.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(215,162,0)"/><text x="796.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(247,7,5)"/><text x="796.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="372" width="3" height="15" fill="rgb(245,74,16)"/><text x="796.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.23%)</title><rect x="793" y="388" width="3" height="15" fill="rgb(218,137,46)"/><text x="796.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="404" width="3" height="15" fill="rgb(254,215,30)"/><text x="796.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="420" width="3" height="15" fill="rgb(225,201,53)"/><text x="796.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="436" width="3" height="15" fill="rgb(242,44,53)"/><text x="796.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="793" y="452" width="3" height="15" fill="rgb(225,69,5)"/><text x="796.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="793" y="468" width="3" height="15" fill="rgb(226,23,32)"/><text x="796.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.23%)</title><rect x="793" y="484" width="3" height="15" fill="rgb(225,112,50)"/><text x="796.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.23%)</title><rect x="793" y="500" width="3" height="15" fill="rgb(218,69,49)"/><text x="796.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.23%)</title><rect x="793" y="516" width="3" height="15" fill="rgb(243,179,45)"/><text x="796.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.23%)</title><rect x="793" y="532" width="3" height="15" fill="rgb(237,174,43)"/><text x="796.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.23%)</title><rect x="793" y="548" width="3" height="15" fill="rgb(225,206,40)"/><text x="796.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="795" y="564" width="1" height="15" fill="rgb(235,93,41)"/><text x="798.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="580" width="1" height="15" fill="rgb(239,229,48)"/><text x="798.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="596" width="1" height="15" fill="rgb(253,144,22)"/><text x="798.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="612" width="1" height="15" fill="rgb(234,5,41)"/><text x="798.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="628" width="1" height="15" fill="rgb(252,211,43)"/><text x="798.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="644" width="1" height="15" fill="rgb(227,228,35)"/><text x="798.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="660" width="1" height="15" fill="rgb(227,108,23)"/><text x="798.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="676" width="1" height="15" fill="rgb(243,50,27)"/><text x="798.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="692" width="1" height="15" fill="rgb(251,128,35)"/><text x="798.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="708" width="1" height="15" fill="rgb(224,67,29)"/><text x="798.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="724" width="1" height="15" fill="rgb(219,209,39)"/><text x="798.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="740" width="1" height="15" fill="rgb(222,204,31)"/><text x="798.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="756" width="1" height="15" fill="rgb(231,74,27)"/><text x="798.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.11%)</title><rect x="795" y="772" width="1" height="15" fill="rgb(232,127,23)"/><text x="798.00" y="782.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="796" y="324" width="2" height="15" fill="rgb(246,19,39)"/><text x="799.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="796" y="340" width="2" height="15" fill="rgb(249,104,43)"/><text x="799.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.11%)</title><rect x="796" y="356" width="2" height="15" fill="rgb(241,162,0)"/><text x="799.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="796" y="372" width="2" height="15" fill="rgb(249,77,50)"/><text x="799.00" y="382.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (2 samples, 0.23%)</title><rect x="796" y="196" width="3" height="15" fill="rgb(211,223,38)"/><text x="799.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.23%)</title><rect x="796" y="212" width="3" height="15" fill="rgb(248,228,48)"/><text x="799.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (2 samples, 0.23%)</title><rect x="796" y="228" width="3" height="15" fill="rgb(205,79,26)"/><text x="799.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.23%)</title><rect x="796" y="244" width="3" height="15" fill="rgb(245,200,35)"/><text x="799.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.23%)</title><rect x="796" y="260" width="3" height="15" fill="rgb(228,21,22)"/><text x="799.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.23%)</title><rect x="796" y="276" width="3" height="15" fill="rgb(225,69,39)"/><text x="799.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.23%)</title><rect x="796" y="292" width="3" height="15" fill="rgb(218,22,30)"/><text x="799.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.23%)</title><rect x="796" y="308" width="3" height="15" fill="rgb(243,93,35)"/><text x="799.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="798" y="324" width="1" height="15" fill="rgb(235,117,36)"/><text x="801.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.11%)</title><rect x="798" y="340" width="1" height="15" fill="rgb(233,158,38)"/><text x="801.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="798" y="356" width="1" height="15" fill="rgb(221,203,23)"/><text x="801.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="798" y="372" width="1" height="15" fill="rgb(243,195,2)"/><text x="801.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="798" y="388" width="1" height="15" fill="rgb(249,41,8)"/><text x="801.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="798" y="404" width="1" height="15" fill="rgb(214,192,10)"/><text x="801.00" y="414.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="799" y="196" width="1" height="15" fill="rgb(216,120,31)"/><text x="802.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="799" y="212" width="1" height="15" fill="rgb(216,33,40)"/><text x="802.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="799" y="228" width="1" height="15" fill="rgb(253,198,29)"/><text x="802.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="799" y="244" width="1" height="15" fill="rgb(241,43,8)"/><text x="802.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="799" y="260" width="1" height="15" fill="rgb(221,44,52)"/><text x="802.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="799" y="276" width="1" height="15" fill="rgb(217,44,45)"/><text x="802.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="799" y="292" width="1" height="15" fill="rgb(245,14,32)"/><text x="802.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="799" y="308" width="1" height="15" fill="rgb(246,72,47)"/><text x="802.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="799" y="324" width="1" height="15" fill="rgb(253,34,29)"/><text x="802.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="799" y="340" width="1" height="15" fill="rgb(233,109,24)"/><text x="802.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.11%)</title><rect x="799" y="356" width="1" height="15" fill="rgb(237,164,34)"/><text x="802.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="800" y="260" width="2" height="15" fill="rgb(247,14,19)"/><text x="803.00" y="270.50"></text></g><g><title>0x7fc4055c8e64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="800" y="276" width="2" height="15" fill="rgb(244,228,24)"/><text x="803.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.23%)</title><rect x="800" y="244" width="3" height="15" fill="rgb(250,160,3)"/><text x="803.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.11%)</title><rect x="802" y="260" width="1" height="15" fill="rgb(230,163,22)"/><text x="805.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="802" y="276" width="1" height="15" fill="rgb(241,43,20)"/><text x="805.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="802" y="292" width="1" height="15" fill="rgb(207,153,50)"/><text x="805.00" y="302.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (6 samples, 0.68%)</title><rect x="796" y="180" width="8" height="15" fill="rgb(238,126,39)"/><text x="799.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.34%)</title><rect x="800" y="196" width="4" height="15" fill="rgb(249,82,18)"/><text x="803.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.34%)</title><rect x="800" y="212" width="4" height="15" fill="rgb(234,191,7)"/><text x="803.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.34%)</title><rect x="800" y="228" width="4" height="15" fill="rgb(251,190,33)"/><text x="803.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="803" y="244" width="1" height="15" fill="rgb(218,215,11)"/><text x="806.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.11%)</title><rect x="803" y="260" width="1" height="15" fill="rgb(213,186,8)"/><text x="806.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.11%)</title><rect x="803" y="276" width="1" height="15" fill="rgb(243,212,54)"/><text x="806.00" y="286.50"></text></g><g><title>0x7fc40579ac46 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="803" y="292" width="1" height="15" fill="rgb(223,203,34)"/><text x="806.00" y="302.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (7 samples, 0.79%)</title><rect x="796" y="164" width="10" height="15" fill="rgb(228,160,50)"/><text x="799.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="804" y="180" width="2" height="15" fill="rgb(211,8,4)"/><text x="807.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="804" y="196" width="2" height="15" fill="rgb(207,100,0)"/><text x="807.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="804" y="212" width="2" height="15" fill="rgb(229,188,37)"/><text x="807.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="804" y="228" width="2" height="15" fill="rgb(235,208,48)"/><text x="807.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="804" y="244" width="2" height="15" fill="rgb(245,15,33)"/><text x="807.00" y="254.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="804" y="260" width="2" height="15" fill="rgb(236,228,36)"/><text x="807.00" y="270.50"></text></g><g><title>0x7fc4055e9124 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="818" y="212" width="1" height="15" fill="rgb(226,176,44)"/><text x="821.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (3 samples, 0.34%)</title><rect x="819" y="212" width="4" height="15" fill="rgb(237,131,30)"/><text x="822.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="823" y="228" width="1" height="15" fill="rgb(224,96,0)"/><text x="826.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="823" y="244" width="1" height="15" fill="rgb(212,33,41)"/><text x="826.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.23%)</title><rect x="823" y="212" width="3" height="15" fill="rgb(222,221,48)"/><text x="826.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(208,71,36)"/><text x="827.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(232,18,20)"/><text x="827.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(234,65,17)"/><text x="827.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="826" y="212" width="1" height="15" fill="rgb(240,195,27)"/><text x="829.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="826" y="228" width="1" height="15" fill="rgb(213,209,27)"/><text x="829.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="826" y="244" width="1" height="15" fill="rgb(233,192,26)"/><text x="829.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.11%)</title><rect x="826" y="260" width="1" height="15" fill="rgb(252,46,22)"/><text x="829.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="826" y="276" width="1" height="15" fill="rgb(217,6,44)"/><text x="829.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="826" y="292" width="1" height="15" fill="rgb(209,150,10)"/><text x="829.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="826" y="308" width="1" height="15" fill="rgb(240,90,19)"/><text x="829.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="826" y="324" width="1" height="15" fill="rgb(225,113,17)"/><text x="829.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="826" y="340" width="1" height="15" fill="rgb(248,7,44)"/><text x="829.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="828" y="244" width="2" height="15" fill="rgb(228,200,47)"/><text x="831.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="828" y="260" width="2" height="15" fill="rgb(209,156,24)"/><text x="831.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="828" y="276" width="2" height="15" fill="rgb(228,198,48)"/><text x="831.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="830" y="260" width="1" height="15" fill="rgb(224,89,45)"/><text x="833.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="830" y="276" width="1" height="15" fill="rgb(252,208,53)"/><text x="833.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="830" y="292" width="1" height="15" fill="rgb(244,13,4)"/><text x="833.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.11%)</title><rect x="830" y="308" width="1" height="15" fill="rgb(222,37,20)"/><text x="833.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="831" y="276" width="1" height="15" fill="rgb(208,144,28)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="831" y="292" width="1" height="15" fill="rgb(226,137,7)"/><text x="834.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.11%)</title><rect x="831" y="308" width="1" height="15" fill="rgb(232,168,23)"/><text x="834.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="832" y="308" width="2" height="15" fill="rgb(222,31,8)"/><text x="835.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.34%)</title><rect x="831" y="260" width="4" height="15" fill="rgb(221,155,33)"/><text x="834.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.23%)</title><rect x="832" y="276" width="3" height="15" fill="rgb(253,85,24)"/><text x="835.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (2 samples, 0.23%)</title><rect x="832" y="292" width="3" height="15" fill="rgb(250,50,14)"/><text x="835.00" y="302.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="834" y="308" width="1" height="15" fill="rgb(220,7,33)"/><text x="837.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.68%)</title><rect x="830" y="244" width="8" height="15" fill="rgb(238,41,23)"/><text x="833.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.23%)</title><rect x="835" y="260" width="3" height="15" fill="rgb(209,51,30)"/><text x="838.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="836" y="276" width="2" height="15" fill="rgb(247,227,30)"/><text x="839.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="836" y="292" width="2" height="15" fill="rgb(233,185,48)"/><text x="839.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="836" y="308" width="2" height="15" fill="rgb(246,179,3)"/><text x="839.00" y="318.50"></text></g><g><title>array_multiply (number.c) (9 samples, 1.02%)</title><rect x="827" y="212" width="12" height="15" fill="rgb(215,128,7)"/><text x="830.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 0.91%)</title><rect x="828" y="228" width="11" height="15" fill="rgb(220,39,7)"/><text x="831.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="838" y="244" width="1" height="15" fill="rgb(213,182,27)"/><text x="841.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="838" y="260" width="1" height="15" fill="rgb(252,141,34)"/><text x="841.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="838" y="276" width="1" height="15" fill="rgb(241,136,0)"/><text x="841.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="839" y="260" width="1" height="15" fill="rgb(220,56,13)"/><text x="842.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.11%)</title><rect x="839" y="276" width="1" height="15" fill="rgb(218,59,28)"/><text x="842.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.34%)</title><rect x="842" y="340" width="4" height="15" fill="rgb(221,215,2)"/><text x="845.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (5 samples, 0.57%)</title><rect x="842" y="292" width="6" height="15" fill="rgb(207,52,4)"/><text x="845.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (5 samples, 0.57%)</title><rect x="842" y="308" width="6" height="15" fill="rgb(226,192,5)"/><text x="845.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (5 samples, 0.57%)</title><rect x="842" y="324" width="6" height="15" fill="rgb(206,121,25)"/><text x="845.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (2 samples, 0.23%)</title><rect x="846" y="340" width="2" height="15" fill="rgb(253,212,36)"/><text x="849.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.23%)</title><rect x="850" y="308" width="2" height="15" fill="rgb(245,125,9)"/><text x="853.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="851" y="324" width="1" height="15" fill="rgb(212,202,28)"/><text x="854.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="851" y="340" width="1" height="15" fill="rgb(239,139,22)"/><text x="854.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="851" y="356" width="1" height="15" fill="rgb(243,198,54)"/><text x="854.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="851" y="372" width="1" height="15" fill="rgb(245,149,16)"/><text x="854.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.45%)</title><rect x="848" y="292" width="6" height="15" fill="rgb(214,1,45)"/><text x="851.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="852" y="308" width="2" height="15" fill="rgb(217,36,8)"/><text x="855.00" y="318.50"></text></g><g><title>array_subtract (number.c) (18 samples, 2.04%)</title><rect x="839" y="212" width="24" height="15" fill="rgb(222,147,19)"/><text x="842.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 2.04%)</title><rect x="839" y="228" width="24" height="15" fill="rgb(241,180,1)"/><text x="842.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 2.04%)</title><rect x="839" y="244" width="24" height="15" fill="rgb(209,81,53)"/><text x="842.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="840" y="260" width="23" height="15" fill="rgb(241,120,40)"/><text x="843.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="840" y="276" width="23" height="15" fill="rgb(246,151,38)"/><text x="843.00" y="286.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.79%)</title><rect x="854" y="292" width="9" height="15" fill="rgb(232,52,29)"/><text x="857.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.79%)</title><rect x="854" y="308" width="9" height="15" fill="rgb(213,48,46)"/><text x="857.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.79%)</title><rect x="854" y="324" width="9" height="15" fill="rgb(250,100,4)"/><text x="857.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.34%)</title><rect x="859" y="340" width="4" height="15" fill="rgb(211,140,29)"/><text x="862.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.11%)</title><rect x="864" y="340" width="2" height="15" fill="rgb(244,194,47)"/><text x="867.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.34%)</title><rect x="864" y="276" width="4" height="15" fill="rgb(236,48,8)"/><text x="867.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.34%)</title><rect x="864" y="292" width="4" height="15" fill="rgb(230,16,4)"/><text x="867.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.34%)</title><rect x="864" y="308" width="4" height="15" fill="rgb(238,18,25)"/><text x="867.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.34%)</title><rect x="864" y="324" width="4" height="15" fill="rgb(235,212,4)"/><text x="867.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.23%)</title><rect x="866" y="340" width="2" height="15" fill="rgb(243,213,15)"/><text x="869.00" y="350.50"></text></g><g><title>0x7fc4055dee6d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="867" y="356" width="1" height="15" fill="rgb(211,4,1)"/><text x="870.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="870" y="340" width="1" height="15" fill="rgb(243,94,10)"/><text x="873.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="870" y="356" width="1" height="15" fill="rgb(250,153,7)"/><text x="873.00" y="366.50"></text></g><g><title>0x7fc4055ca700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="870" y="372" width="1" height="15" fill="rgb(214,138,36)"/><text x="873.00" y="382.50"></text></g><g><title>0x7fc4055c7b06 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="870" y="388" width="1" height="15" fill="rgb(217,1,34)"/><text x="873.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.23%)</title><rect x="870" y="324" width="2" height="15" fill="rgb(249,149,9)"/><text x="873.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="871" y="340" width="1" height="15" fill="rgb(209,27,24)"/><text x="874.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.11%)</title><rect x="871" y="356" width="1" height="15" fill="rgb(222,22,1)"/><text x="874.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="872" y="324" width="2" height="15" fill="rgb(241,43,28)"/><text x="875.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="872" y="340" width="2" height="15" fill="rgb(244,72,50)"/><text x="875.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="872" y="356" width="2" height="15" fill="rgb(218,155,30)"/><text x="875.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="872" y="372" width="2" height="15" fill="rgb(227,208,34)"/><text x="875.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="872" y="388" width="2" height="15" fill="rgb(239,192,0)"/><text x="875.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="872" y="404" width="2" height="15" fill="rgb(218,206,19)"/><text x="875.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="872" y="420" width="2" height="15" fill="rgb(212,122,43)"/><text x="875.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="872" y="436" width="2" height="15" fill="rgb(244,55,17)"/><text x="875.00" y="446.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="875" y="372" width="1" height="15" fill="rgb(224,217,28)"/><text x="878.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="876" y="372" width="2" height="15" fill="rgb(253,123,22)"/><text x="879.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.45%)</title><rect x="874" y="324" width="5" height="15" fill="rgb(217,227,42)"/><text x="877.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 0.45%)</title><rect x="874" y="340" width="5" height="15" fill="rgb(254,8,50)"/><text x="877.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (4 samples, 0.45%)</title><rect x="874" y="356" width="5" height="15" fill="rgb(229,131,41)"/><text x="877.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="878" y="372" width="1" height="15" fill="rgb(215,27,36)"/><text x="881.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.91%)</title><rect x="883" y="340" width="11" height="15" fill="rgb(242,109,24)"/><text x="886.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.45%)</title><rect x="888" y="356" width="6" height="15" fill="rgb(245,42,6)"/><text x="891.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (24 samples, 2.72%)</title><rect x="870" y="308" width="32" height="15" fill="rgb(225,59,44)"/><text x="873.00" y="318.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="879" y="324" width="23" height="15" fill="rgb(241,228,42)"/><text x="882.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.68%)</title><rect x="894" y="340" width="8" height="15" fill="rgb(253,80,25)"/><text x="897.00" y="350.50"></text></g><g><title>array_sum (methods.c) (30 samples, 3.40%)</title><rect x="863" y="212" width="40" height="15" fill="rgb(241,109,35)"/><text x="866.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (30 samples, 3.40%)</title><rect x="863" y="228" width="40" height="15" fill="rgb(238,50,13)"/><text x="866.00" y="238.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (30 samples, 3.40%)</title><rect x="863" y="244" width="40" height="15" fill="rgb(205,183,26)"/><text x="866.00" y="254.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (29 samples, 3.29%)</title><rect x="864" y="260" width="39" height="15" fill="rgb(220,126,0)"/><text x="867.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (26 samples, 2.95%)</title><rect x="868" y="276" width="35" height="15" fill="rgb(214,195,1)"/><text x="871.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (25 samples, 2.83%)</title><rect x="870" y="292" width="33" height="15" fill="rgb(253,124,45)"/><text x="873.00" y="302.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="902" y="308" width="1" height="15" fill="rgb(219,105,35)"/><text x="905.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="902" y="324" width="1" height="15" fill="rgb(205,9,14)"/><text x="905.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="902" y="340" width="1" height="15" fill="rgb(220,16,8)"/><text x="905.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="913" y="356" width="1" height="15" fill="rgb(214,154,16)"/><text x="916.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="913" y="372" width="1" height="15" fill="rgb(207,189,18)"/><text x="916.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="913" y="388" width="1" height="15" fill="rgb(232,10,10)"/><text x="916.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="913" y="404" width="1" height="15" fill="rgb(219,219,21)"/><text x="916.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="913" y="420" width="1" height="15" fill="rgb(231,225,36)"/><text x="916.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="914" y="372" width="1" height="15" fill="rgb(222,127,25)"/><text x="917.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="914" y="388" width="1" height="15" fill="rgb(218,84,26)"/><text x="917.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="914" y="404" width="1" height="15" fill="rgb(228,28,38)"/><text x="917.00" y="414.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="915" y="372" width="2" height="15" fill="rgb(250,183,22)"/><text x="918.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.68%)</title><rect x="917" y="372" width="8" height="15" fill="rgb(246,175,39)"/><text x="920.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (6 samples, 0.68%)</title><rect x="917" y="388" width="8" height="15" fill="rgb(244,40,19)"/><text x="920.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (6 samples, 0.68%)</title><rect x="917" y="404" width="8" height="15" fill="rgb(249,59,48)"/><text x="920.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (12 samples, 1.36%)</title><rect x="910" y="324" width="16" height="15" fill="rgb(228,60,50)"/><text x="913.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.25%)</title><rect x="911" y="340" width="15" height="15" fill="rgb(219,153,16)"/><text x="914.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.02%)</title><rect x="914" y="356" width="12" height="15" fill="rgb(226,33,35)"/><text x="917.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="925" y="372" width="1" height="15" fill="rgb(237,50,42)"/><text x="928.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="925" y="388" width="1" height="15" fill="rgb(213,138,29)"/><text x="928.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="926" y="324" width="1" height="15" fill="rgb(215,212,32)"/><text x="929.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="934" y="340" width="4" height="15" fill="rgb(228,47,4)"/><text x="937.00" y="350.50"></text></g><g><title>0x7fc4055dee7a (libc-2.29.so) (2 samples, 0.23%)</title><rect x="935" y="356" width="3" height="15" fill="rgb(233,143,20)"/><text x="938.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="941" y="372" width="1" height="15" fill="rgb(254,194,11)"/><text x="944.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="941" y="388" width="1" height="15" fill="rgb(234,210,3)"/><text x="944.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="941" y="404" width="1" height="15" fill="rgb(241,13,45)"/><text x="944.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="941" y="420" width="1" height="15" fill="rgb(216,114,5)"/><text x="944.00" y="430.50"></text></g><g><title>0x7fc4055de730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="947" y="420" width="2" height="15" fill="rgb(252,27,6)"/><text x="950.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.11%)</title><rect x="949" y="420" width="1" height="15" fill="rgb(250,193,36)"/><text x="952.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="949" y="436" width="1" height="15" fill="rgb(205,151,47)"/><text x="952.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="949" y="452" width="1" height="15" fill="rgb(248,56,47)"/><text x="952.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c) (1 samples, 0.11%)</title><rect x="949" y="468" width="1" height="15" fill="rgb(218,158,54)"/><text x="952.00" y="478.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.11%)</title><rect x="949" y="484" width="1" height="15" fill="rgb(208,121,5)"/><text x="952.00" y="494.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.11%)</title><rect x="949" y="500" width="1" height="15" fill="rgb(225,76,17)"/><text x="952.00" y="510.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.13%)</title><rect x="938" y="340" width="13" height="15" fill="rgb(221,87,34)"/><text x="941.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.13%)</title><rect x="938" y="356" width="13" height="15" fill="rgb(242,153,14)"/><text x="941.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 0.79%)</title><rect x="942" y="372" width="9" height="15" fill="rgb(227,137,13)"/><text x="945.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.57%)</title><rect x="945" y="388" width="6" height="15" fill="rgb(218,139,11)"/><text x="948.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.45%)</title><rect x="946" y="404" width="5" height="15" fill="rgb(234,182,38)"/><text x="949.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.11%)</title><rect x="950" y="420" width="1" height="15" fill="rgb(227,51,33)"/><text x="953.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="951" y="372" width="2" height="15" fill="rgb(249,133,8)"/><text x="954.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.23%)</title><rect x="951" y="356" width="3" height="15" fill="rgb(229,221,6)"/><text x="954.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="953" y="372" width="1" height="15" fill="rgb(212,141,13)"/><text x="956.00" y="382.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (38 samples, 4.31%)</title><rect x="905" y="244" width="50" height="15" fill="rgb(209,163,16)"/><text x="908.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (37 samples, 4.20%)</title><rect x="906" y="260" width="49" height="15" fill="rgb(241,201,8)"/><text x="909.00" y="270.50">_wra..</text></g><g><title>array_clip (methods.c) (37 samples, 4.20%)</title><rect x="906" y="276" width="49" height="15" fill="rgb(224,165,46)"/><text x="909.00" y="286.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (37 samples, 4.20%)</title><rect x="906" y="292" width="49" height="15" fill="rgb(210,68,2)"/><text x="909.00" y="302.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py) (37 samples, 4.20%)</title><rect x="906" y="308" width="49" height="15" fill="rgb(210,150,32)"/><text x="909.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (21 samples, 2.38%)</title><rect x="927" y="324" width="28" height="15" fill="rgb(229,70,26)"/><text x="930.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.34%)</title><rect x="951" y="340" width="4" height="15" fill="rgb(244,96,29)"/><text x="954.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="954" y="356" width="1" height="15" fill="rgb(206,140,36)"/><text x="957.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="954" y="372" width="1" height="15" fill="rgb(210,167,47)"/><text x="957.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="954" y="388" width="1" height="15" fill="rgb(217,154,1)"/><text x="957.00" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (40 samples, 4.54%)</title><rect x="903" y="212" width="54" height="15" fill="rgb(253,82,40)"/><text x="906.00" y="222.50">clip ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (40 samples, 4.54%)</title><rect x="903" y="228" width="54" height="15" fill="rgb(221,187,36)"/><text x="906.00" y="238.50">array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="955" y="244" width="2" height="15" fill="rgb(217,12,9)"/><text x="958.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="955" y="260" width="2" height="15" fill="rgb(222,96,18)"/><text x="958.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="955" y="276" width="2" height="15" fill="rgb(224,66,48)"/><text x="958.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="955" y="292" width="2" height="15" fill="rgb(219,119,33)"/><text x="958.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.11%)</title><rect x="959" y="372" width="2" height="15" fill="rgb(243,152,33)"/><text x="962.00" y="382.50"></text></g><g><title>0x7fc3df01a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="959" y="276" width="3" height="15" fill="rgb(249,150,7)"/><text x="962.00" y="286.50"></text></g><g><title>0x7fc3deffed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(243,150,4)"/><text x="962.00" y="302.50"></text></g><g><title>0x7fc3deffe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="959" y="308" width="3" height="15" fill="rgb(222,56,41)"/><text x="962.00" y="318.50"></text></g><g><title>0x7fc3deff42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="959" y="324" width="3" height="15" fill="rgb(235,162,15)"/><text x="962.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.23%)</title><rect x="959" y="340" width="3" height="15" fill="rgb(219,208,48)"/><text x="962.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.23%)</title><rect x="959" y="356" width="3" height="15" fill="rgb(208,71,49)"/><text x="962.00" y="366.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.11%)</title><rect x="961" y="372" width="1" height="15" fill="rgb(242,2,23)"/><text x="964.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="961" y="388" width="1" height="15" fill="rgb(211,72,42)"/><text x="964.00" y="398.50"></text></g><g><title>0x7fc3df01a456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="962" y="276" width="1" height="15" fill="rgb(238,85,27)"/><text x="965.00" y="286.50"></text></g><g><title>0x7fc3df01a53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="963" y="276" width="2" height="15" fill="rgb(236,9,33)"/><text x="966.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="965" y="388" width="1" height="15" fill="rgb(253,21,27)"/><text x="968.00" y="398.50"></text></g><g><title>0x7fc3df01a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="965" y="276" width="2" height="15" fill="rgb(207,34,43)"/><text x="968.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.23%)</title><rect x="965" y="292" width="2" height="15" fill="rgb(223,170,33)"/><text x="968.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.23%)</title><rect x="965" y="308" width="2" height="15" fill="rgb(249,54,42)"/><text x="968.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.23%)</title><rect x="965" y="324" width="2" height="15" fill="rgb(207,6,45)"/><text x="968.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.23%)</title><rect x="965" y="340" width="2" height="15" fill="rgb(213,109,22)"/><text x="968.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.23%)</title><rect x="965" y="356" width="2" height="15" fill="rgb(224,24,11)"/><text x="968.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.23%)</title><rect x="965" y="372" width="2" height="15" fill="rgb(253,60,14)"/><text x="968.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="966" y="388" width="1" height="15" fill="rgb(247,6,22)"/><text x="969.00" y="398.50"></text></g><g><title>0x7fc4055e9103 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="966" y="404" width="1" height="15" fill="rgb(242,174,17)"/><text x="969.00" y="414.50"></text></g><g><title>0x7fc3df01a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="967" y="276" width="2" height="15" fill="rgb(245,37,13)"/><text x="970.00" y="286.50"></text></g><g><title>0x7fc3df01a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="969" y="276" width="1" height="15" fill="rgb(242,83,11)"/><text x="972.00" y="286.50"></text></g><g><title>0x7fc3df01a6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="970" y="276" width="1" height="15" fill="rgb(244,32,37)"/><text x="973.00" y="286.50"></text></g><g><title>0x7fc3df01a6de (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="971" y="276" width="2" height="15" fill="rgb(217,189,47)"/><text x="974.00" y="286.50"></text></g><g><title>0x7fc3df01a6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="973" y="276" width="1" height="15" fill="rgb(214,28,44)"/><text x="976.00" y="286.50"></text></g><g><title>0x7fc3df01a87d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="974" y="276" width="1" height="15" fill="rgb(215,200,5)"/><text x="977.00" y="286.50"></text></g><g><title>0x7fc3df01a92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="975" y="276" width="2" height="15" fill="rgb(226,194,36)"/><text x="978.00" y="286.50"></text></g><g><title>0x7fc3defef9af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="975" y="292" width="2" height="15" fill="rgb(233,59,24)"/><text x="978.00" y="302.50"></text></g><g><title>0x7fc3df00bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.70%)</title><rect x="959" y="244" width="20" height="15" fill="rgb(245,43,30)"/><text x="962.00" y="254.50"></text></g><g><title>0x7fc3df01b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.70%)</title><rect x="959" y="260" width="20" height="15" fill="rgb(212,15,12)"/><text x="962.00" y="270.50"></text></g><g><title>0x7fc3df01ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="977" y="276" width="2" height="15" fill="rgb(208,23,36)"/><text x="980.00" y="286.50"></text></g><g><title>0x7fc3deff2529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="977" y="292" width="2" height="15" fill="rgb(223,161,43)"/><text x="980.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.23%)</title><rect x="977" y="308" width="2" height="15" fill="rgb(252,133,10)"/><text x="980.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.23%)</title><rect x="977" y="324" width="2" height="15" fill="rgb(239,171,22)"/><text x="980.00" y="334.50"></text></g><g><title>0x7fc3df00bfbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="979" y="244" width="2" height="15" fill="rgb(209,130,20)"/><text x="982.00" y="254.50"></text></g><g><title>0x7fc3df00c011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="981" y="244" width="1" height="15" fill="rgb(244,80,43)"/><text x="984.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.11%)</title><rect x="982" y="276" width="1" height="15" fill="rgb(225,127,0)"/><text x="985.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="982" y="292" width="1" height="15" fill="rgb(229,15,54)"/><text x="985.00" y="302.50"></text></g><g><title>0x7fc3df00c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="982" y="244" width="3" height="15" fill="rgb(243,228,42)"/><text x="985.00" y="254.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.23%)</title><rect x="982" y="260" width="3" height="15" fill="rgb(253,107,29)"/><text x="985.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="983" y="276" width="2" height="15" fill="rgb(239,122,2)"/><text x="986.00" y="286.50"></text></g><g><title>0x7fc3df00cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.27%)</title><rect x="959" y="228" width="27" height="15" fill="rgb(230,148,7)"/><text x="962.00" y="238.50">0..</text></g><g><title>0x7fc3df00c163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="985" y="244" width="1" height="15" fill="rgb(246,115,53)"/><text x="988.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.11%)</title><rect x="994" y="260" width="2" height="15" fill="rgb(211,180,34)"/><text x="997.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.11%)</title><rect x="996" y="260" width="1" height="15" fill="rgb(228,145,2)"/><text x="999.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.11%)</title><rect x="997" y="260" width="1" height="15" fill="rgb(225,207,18)"/><text x="1000.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1000" y="276" width="1" height="15" fill="rgb(241,217,46)"/><text x="1003.00" y="286.50"></text></g><g><title>0x7fc4055dee7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1000" y="292" width="1" height="15" fill="rgb(250,67,7)"/><text x="1003.00" y="302.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.45%)</title><rect x="998" y="260" width="6" height="15" fill="rgb(208,83,30)"/><text x="1001.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="1001" y="276" width="3" height="15" fill="rgb(254,88,19)"/><text x="1004.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 1.36%)</title><rect x="1004" y="260" width="16" height="15" fill="rgb(214,109,3)"/><text x="1007.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.34%)</title><rect x="1016" y="276" width="4" height="15" fill="rgb(219,121,30)"/><text x="1019.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.34%)</title><rect x="1020" y="260" width="4" height="15" fill="rgb(225,153,44)"/><text x="1023.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (34 samples, 3.85%)</title><rect x="986" y="228" width="46" height="15" fill="rgb(225,156,50)"/><text x="989.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (34 samples, 3.85%)</title><rect x="986" y="244" width="46" height="15" fill="rgb(209,193,20)"/><text x="989.00" y="254.50">chec..</text></g><g><title>simplefilter (warnings.py) (6 samples, 0.68%)</title><rect x="1024" y="260" width="8" height="15" fill="rgb(252,156,25)"/><text x="1027.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.45%)</title><rect x="1026" y="276" width="6" height="15" fill="rgb(233,23,53)"/><text x="1029.00" y="286.50"></text></g><g><title>0x7fc4047ead70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1033" y="276" width="1" height="15" fill="rgb(243,132,34)"/><text x="1036.00" y="286.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (3 samples, 0.34%)</title><rect x="1032" y="244" width="4" height="15" fill="rgb(221,164,34)"/><text x="1035.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (3 samples, 0.34%)</title><rect x="1032" y="260" width="4" height="15" fill="rgb(254,7,5)"/><text x="1035.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1034" y="276" width="2" height="15" fill="rgb(240,20,43)"/><text x="1037.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (4 samples, 0.45%)</title><rect x="1032" y="228" width="5" height="15" fill="rgb(240,169,20)"/><text x="1035.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.11%)</title><rect x="1036" y="244" width="1" height="15" fill="rgb(254,102,49)"/><text x="1039.00" y="254.50"></text></g><g><title>array_richcompare (arrayobject.c) (2 samples, 0.23%)</title><rect x="1037" y="228" width="3" height="15" fill="rgb(250,115,23)"/><text x="1040.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1038" y="244" width="2" height="15" fill="rgb(222,61,0)"/><text x="1041.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1038" y="260" width="2" height="15" fill="rgb(234,155,11)"/><text x="1041.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1038" y="276" width="2" height="15" fill="rgb(207,44,17)"/><text x="1041.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1038" y="292" width="2" height="15" fill="rgb(251,185,52)"/><text x="1041.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1038" y="308" width="2" height="15" fill="rgb(227,63,0)"/><text x="1041.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="1038" y="324" width="2" height="15" fill="rgb(226,16,41)"/><text x="1041.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="1038" y="340" width="2" height="15" fill="rgb(220,84,45)"/><text x="1041.00" y="350.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="1038" y="356" width="2" height="15" fill="rgb(232,144,41)"/><text x="1041.00" y="366.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.23%)</title><rect x="1040" y="228" width="2" height="15" fill="rgb(251,167,14)"/><text x="1043.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.11%)</title><rect x="1041" y="244" width="1" height="15" fill="rgb(205,132,44)"/><text x="1044.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.34%)</title><rect x="1042" y="292" width="4" height="15" fill="rgb(247,162,3)"/><text x="1045.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.34%)</title><rect x="1042" y="308" width="4" height="15" fill="rgb(219,63,6)"/><text x="1045.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.34%)</title><rect x="1042" y="324" width="4" height="15" fill="rgb(231,211,20)"/><text x="1045.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.34%)</title><rect x="1042" y="340" width="4" height="15" fill="rgb(213,77,11)"/><text x="1045.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.34%)</title><rect x="1042" y="356" width="4" height="15" fill="rgb(215,181,25)"/><text x="1045.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="1045" y="372" width="1" height="15" fill="rgb(225,95,54)"/><text x="1048.00" y="382.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.11%)</title><rect x="1046" y="308" width="2" height="15" fill="rgb(216,10,27)"/><text x="1049.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1048" y="356" width="1" height="15" fill="rgb(211,98,31)"/><text x="1051.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1049" y="356" width="1" height="15" fill="rgb(208,143,5)"/><text x="1052.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1049" y="372" width="1" height="15" fill="rgb(205,15,53)"/><text x="1052.00" y="382.50"></text></g><g><title>0x7fc4055ca727 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1049" y="388" width="1" height="15" fill="rgb(206,138,19)"/><text x="1052.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.34%)</title><rect x="1048" y="340" width="4" height="15" fill="rgb(225,160,9)"/><text x="1051.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1050" y="356" width="2" height="15" fill="rgb(247,96,35)"/><text x="1053.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="1052" y="340" width="1" height="15" fill="rgb(209,225,0)"/><text x="1055.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="1052" y="356" width="1" height="15" fill="rgb(242,105,21)"/><text x="1055.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1052" y="372" width="1" height="15" fill="rgb(242,181,9)"/><text x="1055.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1052" y="388" width="1" height="15" fill="rgb(246,213,41)"/><text x="1055.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1052" y="404" width="1" height="15" fill="rgb(217,8,6)"/><text x="1055.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="1053" y="340" width="1" height="15" fill="rgb(230,71,5)"/><text x="1056.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1053" y="356" width="1" height="15" fill="rgb(232,71,15)"/><text x="1056.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1053" y="372" width="1" height="15" fill="rgb(205,206,5)"/><text x="1056.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.91%)</title><rect x="1058" y="356" width="11" height="15" fill="rgb(237,195,37)"/><text x="1061.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.45%)</title><rect x="1064" y="372" width="5" height="15" fill="rgb(207,73,44)"/><text x="1067.00" y="382.50"></text></g><g><title>array_sum (methods.c) (26 samples, 2.95%)</title><rect x="1042" y="228" width="35" height="15" fill="rgb(224,206,16)"/><text x="1045.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (26 samples, 2.95%)</title><rect x="1042" y="244" width="35" height="15" fill="rgb(246,225,23)"/><text x="1045.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (26 samples, 2.95%)</title><rect x="1042" y="260" width="35" height="15" fill="rgb(216,166,51)"/><text x="1045.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (26 samples, 2.95%)</title><rect x="1042" y="276" width="35" height="15" fill="rgb(214,163,52)"/><text x="1045.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 2.61%)</title><rect x="1046" y="292" width="31" height="15" fill="rgb(246,63,47)"/><text x="1049.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (22 samples, 2.49%)</title><rect x="1048" y="308" width="29" height="15" fill="rgb(236,66,39)"/><text x="1051.00" y="318.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (22 samples, 2.49%)</title><rect x="1048" y="324" width="29" height="15" fill="rgb(226,86,40)"/><text x="1051.00" y="334.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="1054" y="340" width="23" height="15" fill="rgb(224,131,29)"/><text x="1057.00" y="350.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.68%)</title><rect x="1069" y="356" width="8" height="15" fill="rgb(211,108,49)"/><text x="1072.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 1.02%)</title><rect x="1081" y="244" width="12" height="15" fill="rgb(239,108,9)"/><text x="1084.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1092" y="260" width="1" height="15" fill="rgb(206,162,17)"/><text x="1095.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 1.70%)</title><rect x="1077" y="228" width="20" height="15" fill="rgb(218,100,16)"/><text x="1080.00" y="238.50"></text></g><g><title>isclass (inspect.py) (3 samples, 0.34%)</title><rect x="1093" y="244" width="4" height="15" fill="rgb(214,165,28)"/><text x="1096.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1097" y="244" width="2" height="15" fill="rgb(233,164,21)"/><text x="1100.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1097" y="260" width="2" height="15" fill="rgb(216,223,52)"/><text x="1100.00" y="270.50"></text></g><g><title>0x7fc4047eb9d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1097" y="276" width="2" height="15" fill="rgb(229,158,49)"/><text x="1100.00" y="286.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1099" y="260" width="1" height="15" fill="rgb(243,76,40)"/><text x="1102.00" y="270.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1099" y="276" width="1" height="15" fill="rgb(224,224,18)"/><text x="1102.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 0.68%)</title><rect x="1100" y="292" width="8" height="15" fill="rgb(240,39,25)"/><text x="1103.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 0.68%)</title><rect x="1100" y="308" width="8" height="15" fill="rgb(237,61,2)"/><text x="1103.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (6 samples, 0.68%)</title><rect x="1100" y="324" width="8" height="15" fill="rgb(205,30,4)"/><text x="1103.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 0.68%)</title><rect x="1100" y="340" width="8" height="15" fill="rgb(219,121,8)"/><text x="1103.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1108" y="308" width="1" height="15" fill="rgb(241,41,46)"/><text x="1111.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.23%)</title><rect x="1108" y="292" width="3" height="15" fill="rgb(240,114,34)"/><text x="1111.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1109" y="308" width="2" height="15" fill="rgb(248,211,51)"/><text x="1112.00" y="318.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1109" y="324" width="2" height="15" fill="rgb(213,90,7)"/><text x="1112.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1111" y="292" width="1" height="15" fill="rgb(246,218,26)"/><text x="1114.00" y="302.50"></text></g><g><title>0x7fc4055c893b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1111" y="308" width="1" height="15" fill="rgb(235,172,31)"/><text x="1114.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.79%)</title><rect x="1112" y="292" width="9" height="15" fill="rgb(250,46,21)"/><text x="1115.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.79%)</title><rect x="1112" y="308" width="9" height="15" fill="rgb(253,125,32)"/><text x="1115.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.79%)</title><rect x="1112" y="324" width="9" height="15" fill="rgb(212,157,13)"/><text x="1115.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.45%)</title><rect x="1116" y="340" width="5" height="15" fill="rgb(223,27,18)"/><text x="1119.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (124 samples, 14.06%)</title><rect x="957" y="212" width="166" height="15" fill="rgb(224,13,12)"/><text x="960.00" y="222.50">predict_proba (sklear..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 2.15%)</title><rect x="1097" y="228" width="26" height="15" fill="rgb(230,205,26)"/><text x="1100.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 2.04%)</title><rect x="1099" y="244" width="24" height="15" fill="rgb(232,170,49)"/><text x="1102.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="1100" y="260" width="23" height="15" fill="rgb(237,135,49)"/><text x="1103.00" y="270.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 1.93%)</title><rect x="1100" y="276" width="23" height="15" fill="rgb(247,37,19)"/><text x="1103.00" y="286.50">i..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1121" y="292" width="2" height="15" fill="rgb(229,6,1)"/><text x="1124.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1123" y="260" width="1" height="15" fill="rgb(224,43,16)"/><text x="1126.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1123" y="276" width="1" height="15" fill="rgb(228,128,22)"/><text x="1126.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1123" y="292" width="1" height="15" fill="rgb(212,50,2)"/><text x="1126.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1123" y="308" width="1" height="15" fill="rgb(220,59,18)"/><text x="1126.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1123" y="324" width="1" height="15" fill="rgb(228,184,38)"/><text x="1126.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1123" y="340" width="1" height="15" fill="rgb(230,0,35)"/><text x="1126.00" y="350.50"></text></g><g><title>0x7fc4055ca1a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1123" y="356" width="1" height="15" fill="rgb(254,62,45)"/><text x="1126.00" y="366.50"></text></g><g><title>0x7fc4047ec0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="1129" y="292" width="3" height="15" fill="rgb(222,194,38)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7fc40579ae01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1132" y="292" width="1" height="15" fill="rgb(254,215,20)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7fc40579ae4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(222,99,14)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7fc40579ae8d (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(248,162,38)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7fc40579aeb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(215,149,48)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7fc40579aed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(210,220,54)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fc40579aeda (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1140" y="292" width="1" height="15" fill="rgb(238,148,43)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7fc40579aeee (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1141" y="292" width="3" height="15" fill="rgb(219,104,18)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7fc40579aef6 (libm-2.29.so) (5 samples, 0.57%)</title><rect x="1144" y="292" width="7" height="15" fill="rgb(232,77,8)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7fc40579aefa (libm-2.29.so) (4 samples, 0.45%)</title><rect x="1151" y="292" width="5" height="15" fill="rgb(226,55,36)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fc40579af2b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1156" y="292" width="1" height="15" fill="rgb(212,8,8)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fc40579af6b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1157" y="292" width="2" height="15" fill="rgb(214,29,13)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7fc40579af97 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(227,214,29)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7fc40579afab (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1160" y="292" width="1" height="15" fill="rgb(241,94,16)"/><text x="1163.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (3 samples, 0.34%)</title><rect x="1161" y="292" width="4" height="15" fill="rgb(253,138,29)"/><text x="1164.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (33 samples, 3.74%)</title><rect x="1123" y="244" width="44" height="15" fill="rgb(231,218,24)"/><text x="1126.00" y="254.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (32 samples, 3.63%)</title><rect x="1124" y="260" width="43" height="15" fill="rgb(253,0,32)"/><text x="1127.00" y="270.50">triv..</text></g><g><title>PyUFunc_d_d (loops.c.src) (32 samples, 3.63%)</title><rect x="1124" y="276" width="43" height="15" fill="rgb(239,101,53)"/><text x="1127.00" y="286.50">PyUF..</text></g><g><title>npy_log (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(244,149,37)"/><text x="1168.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (269 samples, 30.50%)</title><rect x="808" y="196" width="360" height="15" fill="rgb(229,139,17)"/><text x="811.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting...</text></g><g><title>ufunc_generic_call (ufunc_object.c) (34 samples, 3.85%)</title><rect x="1123" y="212" width="45" height="15" fill="rgb(217,5,0)"/><text x="1126.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (34 samples, 3.85%)</title><rect x="1123" y="228" width="45" height="15" fill="rgb(217,10,31)"/><text x="1126.00" y="238.50">PyUF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1167" y="244" width="1" height="15" fill="rgb(253,199,2)"/><text x="1170.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (270 samples, 30.61%)</title><rect x="808" y="180" width="361" height="15" fill="rgb(222,150,22)"/><text x="811.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1168" y="196" width="1" height="15" fill="rgb(213,87,49)"/><text x="1171.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.23%)</title><rect x="1169" y="180" width="3" height="15" fill="rgb(241,53,8)"/><text x="1172.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.23%)</title><rect x="1169" y="196" width="3" height="15" fill="rgb(231,101,34)"/><text x="1172.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1172" y="228" width="1" height="15" fill="rgb(212,65,36)"/><text x="1175.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1172" y="244" width="1" height="15" fill="rgb(210,111,11)"/><text x="1175.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1172" y="260" width="1" height="15" fill="rgb(214,207,29)"/><text x="1175.00" y="270.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1172" y="276" width="1" height="15" fill="rgb(233,23,7)"/><text x="1175.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1175" y="308" width="1" height="15" fill="rgb(235,172,33)"/><text x="1178.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.34%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(226,60,25)"/><text x="1178.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.34%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(230,154,9)"/><text x="1178.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.34%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(233,34,42)"/><text x="1178.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.23%)</title><rect x="1176" y="308" width="3" height="15" fill="rgb(228,173,46)"/><text x="1179.00" y="318.50"></text></g><g><title>array_add (number.c) (6 samples, 0.68%)</title><rect x="1172" y="180" width="8" height="15" fill="rgb(218,116,10)"/><text x="1175.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.68%)</title><rect x="1172" y="196" width="8" height="15" fill="rgb(251,175,24)"/><text x="1175.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.68%)</title><rect x="1172" y="212" width="8" height="15" fill="rgb(229,226,46)"/><text x="1175.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.57%)</title><rect x="1173" y="228" width="7" height="15" fill="rgb(217,229,26)"/><text x="1176.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (5 samples, 0.57%)</title><rect x="1173" y="244" width="7" height="15" fill="rgb(228,18,29)"/><text x="1176.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1179" y="260" width="1" height="15" fill="rgb(205,197,25)"/><text x="1182.00" y="270.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (288 samples, 32.65%)</title><rect x="796" y="100" width="385" height="15" fill="rgb(246,100,4)"/><text x="799.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (288 samples, 32.65%)</title><rect x="796" y="116" width="385" height="15" fill="rgb(216,49,26)"/><text x="799.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (288 samples, 32.65%)</title><rect x="796" y="132" width="385" height="15" fill="rgb(214,41,10)"/><text x="799.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (288 samples, 32.65%)</title><rect x="796" y="148" width="385" height="15" fill="rgb(241,150,53)"/><text x="799.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (281 samples, 31.86%)</title><rect x="806" y="164" width="375" height="15" fill="rgb(223,92,8)"/><text x="809.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosti..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1180" y="180" width="1" height="15" fill="rgb(247,44,17)"/><text x="1183.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1180" y="196" width="1" height="15" fill="rgb(216,0,11)"/><text x="1183.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1180" y="212" width="1" height="15" fill="rgb(230,164,48)"/><text x="1183.00" y="222.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (289 samples, 32.77%)</title><rect x="796" y="68" width="387" height="15" fill="rgb(214,147,12)"/><text x="799.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (289 samples, 32.77%)</title><rect x="796" y="84" width="387" height="15" fill="rgb(254,208,9)"/><text x="799.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1181" y="100" width="2" height="15" fill="rgb(207,149,39)"/><text x="1184.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1181" y="116" width="2" height="15" fill="rgb(238,210,13)"/><text x="1184.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="1181" y="132" width="2" height="15" fill="rgb(222,80,53)"/><text x="1184.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="1181" y="148" width="2" height="15" fill="rgb(217,101,19)"/><text x="1184.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="1181" y="164" width="2" height="15" fill="rgb(229,37,13)"/><text x="1184.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1181" y="180" width="2" height="15" fill="rgb(231,39,21)"/><text x="1184.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="1181" y="196" width="2" height="15" fill="rgb(205,118,14)"/><text x="1184.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="1181" y="212" width="2" height="15" fill="rgb(233,8,22)"/><text x="1184.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1181" y="228" width="2" height="15" fill="rgb(224,59,54)"/><text x="1184.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(250,86,54)"/><text x="1184.00" y="254.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1183" y="180" width="1" height="15" fill="rgb(238,111,17)"/><text x="1186.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1183" y="196" width="1" height="15" fill="rgb(236,125,8)"/><text x="1186.00" y="206.50"></text></g><g><title>set_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1183" y="212" width="1" height="15" fill="rgb(220,38,15)"/><text x="1186.00" y="222.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1183" y="228" width="1" height="15" fill="rgb(225,141,47)"/><text x="1186.00" y="238.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.11%)</title><rect x="1183" y="244" width="1" height="15" fill="rgb(216,47,40)"/><text x="1186.00" y="254.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.11%)</title><rect x="1183" y="260" width="1" height="15" fill="rgb(221,131,13)"/><text x="1186.00" y="270.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1183" y="276" width="1" height="15" fill="rgb(234,217,19)"/><text x="1186.00" y="286.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.11%)</title><rect x="1183" y="292" width="1" height="15" fill="rgb(241,58,15)"/><text x="1186.00" y="302.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.11%)</title><rect x="1183" y="308" width="1" height="15" fill="rgb(235,146,27)"/><text x="1186.00" y="318.50"></text></g><g><title>0x7fc3df000b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="212" width="1" height="15" fill="rgb(226,215,22)"/><text x="1187.00" y="222.50"></text></g><g><title>0x7fc3df03210a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="228" width="1" height="15" fill="rgb(245,193,47)"/><text x="1187.00" y="238.50"></text></g><g><title>0x7fc3df25dd8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="244" width="1" height="15" fill="rgb(222,117,27)"/><text x="1187.00" y="254.50"></text></g><g><title>0x7fc3df256d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="260" width="1" height="15" fill="rgb(242,39,27)"/><text x="1187.00" y="270.50"></text></g><g><title>0x7fc3df256d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="276" width="1" height="15" fill="rgb(250,17,10)"/><text x="1187.00" y="286.50"></text></g><g><title>0x7fc3df256d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="292" width="1" height="15" fill="rgb(210,90,44)"/><text x="1187.00" y="302.50"></text></g><g><title>0x7fc3df256e00 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1184" y="308" width="1" height="15" fill="rgb(205,98,31)"/><text x="1187.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (1 samples, 0.11%)</title><rect x="1185" y="452" width="2" height="15" fill="rgb(239,122,18)"/><text x="1188.00" y="462.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c) (1 samples, 0.11%)</title><rect x="1185" y="468" width="2" height="15" fill="rgb(207,33,4)"/><text x="1188.00" y="478.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c) (1 samples, 0.11%)</title><rect x="1185" y="484" width="2" height="15" fill="rgb(238,147,30)"/><text x="1188.00" y="494.50"></text></g><g><title>__init__ (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="308" width="3" height="15" fill="rgb(217,102,39)"/><text x="1188.00" y="318.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="324" width="3" height="15" fill="rgb(228,131,15)"/><text x="1188.00" y="334.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="340" width="3" height="15" fill="rgb(214,81,16)"/><text x="1188.00" y="350.50"></text></g><g><title>__init__ (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="356" width="3" height="15" fill="rgb(234,162,36)"/><text x="1188.00" y="366.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="372" width="3" height="15" fill="rgb(242,179,7)"/><text x="1188.00" y="382.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="388" width="3" height="15" fill="rgb(222,49,47)"/><text x="1188.00" y="398.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="404" width="3" height="15" fill="rgb(220,216,16)"/><text x="1188.00" y="414.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="420" width="3" height="15" fill="rgb(239,212,10)"/><text x="1188.00" y="430.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (2 samples, 0.23%)</title><rect x="1185" y="436" width="3" height="15" fill="rgb(208,183,12)"/><text x="1188.00" y="446.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (bit_generator.c) (1 samples, 0.11%)</title><rect x="1187" y="452" width="1" height="15" fill="rgb(213,116,28)"/><text x="1190.00" y="462.50"></text></g><g><title>0x7fc4056a6fec (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1187" y="468" width="1" height="15" fill="rgb(253,219,13)"/><text x="1190.00" y="478.50"></text></g><g><title>all (882 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,98,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (882 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(216,40,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (5 samples, 0.57%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(223,110,29)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (5 samples, 0.57%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(250,116,51)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.57%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(206,199,43)"/><text x="1186.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.57%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(252,86,13)"/><text x="1186.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.57%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(209,29,42)"/><text x="1186.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.57%)</title><rect x="1183" y="148" width="7" height="15" fill="rgb(249,46,38)"/><text x="1186.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.57%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(246,45,16)"/><text x="1186.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 0.45%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(222,80,54)"/><text x="1187.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 0.45%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(245,124,30)"/><text x="1187.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (3 samples, 0.34%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(208,150,20)"/><text x="1188.00" y="222.50"></text></g><g><title>__init__ (mtrand.c) (3 samples, 0.34%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(231,27,5)"/><text x="1188.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c) (3 samples, 0.34%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(233,122,35)"/><text x="1188.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (3 samples, 0.34%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(205,217,45)"/><text x="1188.00" y="270.50"></text></g><g><title>__init__ (mt19937.c) (3 samples, 0.34%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(247,202,12)"/><text x="1188.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c) (3 samples, 0.34%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(218,201,32)"/><text x="1188.00" y="302.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(229,153,0)"/><text x="1191.00" y="318.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.11%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(253,191,33)"/><text x="1191.00" y="334.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.11%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(230,77,19)"/><text x="1191.00" y="350.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c) (1 samples, 0.11%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(240,168,51)"/><text x="1191.00" y="366.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c) (1 samples, 0.11%)</title><rect x="1188" y="372" width="2" height="15" fill="rgb(235,108,4)"/><text x="1191.00" y="382.50"></text></g></g></svg>