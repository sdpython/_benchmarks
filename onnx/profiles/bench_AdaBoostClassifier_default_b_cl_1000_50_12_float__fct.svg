<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(225,3,23)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(216,163,6)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(212,67,47)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(241,9,20)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(211,148,14)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(214,18,28)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(253,152,35)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(224,226,53)"/><text x="14.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(218,213,18)"/><text x="14.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(209,17,26)"/><text x="14.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.33%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(207,118,30)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.33%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(240,222,6)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="868" width="1" height="15" fill="rgb(240,68,23)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(240,178,16)"/><text x="15.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(231,69,4)"/><text x="15.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(205,222,43)"/><text x="15.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(219,2,11)"/><text x="15.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(231,215,40)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.11%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(209,109,4)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(208,177,30)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(239,68,4)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(238,36,30)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(236,31,32)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(235,134,34)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.11%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(242,122,16)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(228,136,32)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1044" width="2" height="15" fill="rgb(218,4,31)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1060" width="2" height="15" fill="rgb(232,82,46)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="1076" width="2" height="15" fill="rgb(225,31,40)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1092" width="2" height="15" fill="rgb(247,70,54)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.11%)</title><rect x="13" y="1108" width="2" height="15" fill="rgb(221,203,29)"/><text x="16.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(238,213,42)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1140" width="2" height="15" fill="rgb(233,169,34)"/><text x="16.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1156" width="2" height="15" fill="rgb(222,91,52)"/><text x="16.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="1172" width="2" height="15" fill="rgb(212,52,45)"/><text x="16.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(218,35,49)"/><text x="16.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.11%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(226,104,53)"/><text x="16.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1220" width="2" height="15" fill="rgb(248,108,48)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1236" width="2" height="15" fill="rgb(221,35,8)"/><text x="16.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="13" y="1252" width="2" height="15" fill="rgb(222,192,16)"/><text x="16.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="1268" width="2" height="15" fill="rgb(238,165,2)"/><text x="16.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="1284" width="2" height="15" fill="rgb(219,68,45)"/><text x="16.00" y="1294.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="13" y="1300" width="2" height="15" fill="rgb(244,16,35)"/><text x="16.00" y="1310.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="1316" width="2" height="15" fill="rgb(227,59,9)"/><text x="16.00" y="1326.50"></text></g><g><title>0x7fa9b2a8a8a4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="1332" width="2" height="15" fill="rgb(252,111,33)"/><text x="16.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(240,35,40)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(240,36,40)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(230,76,19)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(253,172,29)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(219,161,23)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(233,13,4)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(240,118,33)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(224,177,53)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(252,71,36)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(233,139,39)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(236,139,39)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(250,217,41)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(224,106,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(206,181,47)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(240,93,45)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(227,126,16)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(242,129,12)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(205,52,49)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(242,125,12)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(223,79,7)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(246,85,41)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(244,136,21)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(248,143,31)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(235,108,16)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(213,133,40)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(248,166,14)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(216,64,22)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(210,137,32)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(240,130,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(227,224,29)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(209,75,6)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(231,65,25)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(247,67,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(205,191,22)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="13" y="836" width="3" height="15" fill="rgb(251,73,8)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(227,136,4)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(207,168,35)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(236,206,6)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(231,133,50)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(243,130,38)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(221,62,17)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(217,5,4)"/><text x="18.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(214,203,44)"/><text x="18.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(231,202,17)"/><text x="18.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(233,66,54)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(254,169,54)"/><text x="18.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(214,189,38)"/><text x="18.00" y="1038.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(219,0,32)"/><text x="18.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(241,202,30)"/><text x="18.00" y="1070.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(233,34,24)"/><text x="18.00" y="1086.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="15" y="1092" width="1" height="15" fill="rgb(231,222,18)"/><text x="18.00" y="1102.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="15" y="1108" width="1" height="15" fill="rgb(235,93,5)"/><text x="18.00" y="1118.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(218,209,43)"/><text x="19.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(240,227,3)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(229,18,38)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(242,102,2)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(249,48,32)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(231,108,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(215,156,3)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(231,53,2)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(239,83,52)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="324" width="2" height="15" fill="rgb(239,15,44)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="340" width="2" height="15" fill="rgb(210,132,48)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="356" width="2" height="15" fill="rgb(232,4,1)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="372" width="2" height="15" fill="rgb(227,216,4)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.22%)</title><rect x="16" y="388" width="2" height="15" fill="rgb(211,124,9)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="404" width="2" height="15" fill="rgb(246,80,54)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="420" width="2" height="15" fill="rgb(217,97,38)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="436" width="2" height="15" fill="rgb(214,187,41)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="452" width="2" height="15" fill="rgb(221,174,8)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="468" width="2" height="15" fill="rgb(214,183,43)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="484" width="2" height="15" fill="rgb(221,84,7)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(234,19,14)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(219,16,11)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(242,160,10)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(244,59,20)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(240,97,12)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.22%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(218,79,48)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(220,207,32)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(213,100,18)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(229,222,32)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(251,111,45)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(250,120,20)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.22%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(220,194,6)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(241,167,11)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(237,135,28)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(208,71,34)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(246,39,30)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(222,140,6)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.22%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(245,16,24)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(245,149,28)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(241,67,29)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(212,121,42)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(250,202,23)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(214,26,14)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(247,229,33)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(226,74,5)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.22%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(243,78,1)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(208,176,29)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(214,37,14)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(230,175,31)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(245,188,4)"/><text x="19.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(209,99,15)"/><text x="19.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(216,0,45)"/><text x="19.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(217,189,47)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.22%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(242,125,42)"/><text x="19.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.22%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(207,80,49)"/><text x="19.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.22%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(247,40,15)"/><text x="19.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (2 samples, 0.22%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(228,217,25)"/><text x="19.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.11%)</title><rect x="17" y="1092" width="1" height="15" fill="rgb(240,192,5)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.11%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(224,73,0)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(249,189,34)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(213,44,48)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(249,115,1)"/><text x="21.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(245,76,38)"/><text x="21.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(230,49,15)"/><text x="21.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.11%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(207,176,45)"/><text x="21.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(244,90,18)"/><text x="21.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(220,56,53)"/><text x="21.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(219,13,33)"/><text x="21.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(248,145,35)"/><text x="21.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(234,76,34)"/><text x="21.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/__init__.py) (1 samples, 0.11%)</title><rect x="18" y="1396" width="2" height="15" fill="rgb(237,46,17)"/><text x="21.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1412" width="2" height="15" fill="rgb(205,4,7)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1428" width="2" height="15" fill="rgb(208,219,16)"/><text x="21.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1444" width="2" height="15" fill="rgb(217,6,38)"/><text x="21.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="18" y="1460" width="2" height="15" fill="rgb(247,195,6)"/><text x="21.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="18" y="1476" width="2" height="15" fill="rgb(227,88,3)"/><text x="21.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.11%)</title><rect x="18" y="1492" width="2" height="15" fill="rgb(249,11,27)"/><text x="21.00" y="1502.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.11%)</title><rect x="18" y="1508" width="2" height="15" fill="rgb(217,24,52)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1124" width="3" height="15" fill="rgb(205,161,35)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1140" width="3" height="15" fill="rgb(249,164,5)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1156" width="3" height="15" fill="rgb(220,200,1)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="18" y="1172" width="3" height="15" fill="rgb(232,62,22)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="18" y="1188" width="3" height="15" fill="rgb(223,97,17)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(222,181,4)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(222,31,0)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(209,99,40)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(205,195,14)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(218,5,19)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(230,96,18)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(251,205,22)"/><text x="23.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(241,40,17)"/><text x="23.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(223,77,51)"/><text x="23.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(224,194,4)"/><text x="23.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.11%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(229,149,42)"/><text x="23.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.11%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(239,11,30)"/><text x="23.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.11%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(213,87,26)"/><text x="23.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(224,17,35)"/><text x="23.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(207,75,24)"/><text x="23.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(251,159,39)"/><text x="23.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1460" width="1" height="15" fill="rgb(235,14,38)"/><text x="23.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(250,195,11)"/><text x="23.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(230,35,51)"/><text x="23.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(229,83,33)"/><text x="23.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(227,221,20)"/><text x="23.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(231,123,48)"/><text x="23.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(244,69,51)"/><text x="23.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(220,24,31)"/><text x="23.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(241,29,49)"/><text x="23.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1604" width="1" height="15" fill="rgb(228,165,26)"/><text x="23.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="20" y="1620" width="1" height="15" fill="rgb(217,190,8)"/><text x="23.00" y="1630.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(207,5,2)"/><text x="24.00" y="1518.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.22%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(232,25,43)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.22%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(208,213,22)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.22%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(243,42,40)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(216,68,24)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.22%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(211,36,10)"/><text x="25.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.22%)</title><rect x="22" y="1588" width="3" height="15" fill="rgb(225,143,20)"/><text x="25.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="24" y="1604" width="1" height="15" fill="rgb(237,96,49)"/><text x="27.00" y="1614.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.11%)</title><rect x="24" y="1620" width="1" height="15" fill="rgb(245,196,19)"/><text x="27.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="484" width="8" height="15" fill="rgb(231,3,51)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="500" width="8" height="15" fill="rgb(226,183,0)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="516" width="8" height="15" fill="rgb(224,204,45)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="532" width="8" height="15" fill="rgb(245,212,23)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="548" width="8" height="15" fill="rgb(217,158,40)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="564" width="8" height="15" fill="rgb(242,2,33)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 0.65%)</title><rect x="18" y="580" width="8" height="15" fill="rgb(215,138,43)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="596" width="8" height="15" fill="rgb(209,62,5)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="612" width="8" height="15" fill="rgb(214,111,9)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="628" width="8" height="15" fill="rgb(234,224,26)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="644" width="8" height="15" fill="rgb(226,94,50)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="660" width="8" height="15" fill="rgb(237,100,6)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 0.65%)</title><rect x="18" y="676" width="8" height="15" fill="rgb(230,186,42)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="692" width="8" height="15" fill="rgb(252,196,17)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="708" width="8" height="15" fill="rgb(235,106,13)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="724" width="8" height="15" fill="rgb(235,11,42)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="740" width="8" height="15" fill="rgb(244,2,22)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="756" width="8" height="15" fill="rgb(219,175,49)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 0.65%)</title><rect x="18" y="772" width="8" height="15" fill="rgb(242,84,13)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="788" width="8" height="15" fill="rgb(210,62,19)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="804" width="8" height="15" fill="rgb(211,130,42)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="820" width="8" height="15" fill="rgb(243,110,28)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="836" width="8" height="15" fill="rgb(213,77,37)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="852" width="8" height="15" fill="rgb(240,142,8)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 0.65%)</title><rect x="18" y="868" width="8" height="15" fill="rgb(216,10,20)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="884" width="8" height="15" fill="rgb(231,41,16)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="900" width="8" height="15" fill="rgb(243,227,51)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="916" width="8" height="15" fill="rgb(218,177,29)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="932" width="8" height="15" fill="rgb(245,120,9)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="948" width="8" height="15" fill="rgb(222,202,13)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="964" width="8" height="15" fill="rgb(241,223,51)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="980" width="8" height="15" fill="rgb(215,12,2)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="996" width="8" height="15" fill="rgb(236,36,21)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 0.65%)</title><rect x="18" y="1012" width="8" height="15" fill="rgb(229,108,17)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="1028" width="8" height="15" fill="rgb(234,51,45)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="1044" width="8" height="15" fill="rgb(228,36,54)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="1060" width="8" height="15" fill="rgb(234,69,29)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.65%)</title><rect x="18" y="1076" width="8" height="15" fill="rgb(252,151,52)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.65%)</title><rect x="18" y="1092" width="8" height="15" fill="rgb(223,47,31)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 0.65%)</title><rect x="18" y="1108" width="8" height="15" fill="rgb(246,45,8)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1124" width="5" height="15" fill="rgb(226,70,23)"/><text x="24.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1140" width="5" height="15" fill="rgb(205,78,14)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1156" width="5" height="15" fill="rgb(242,184,35)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1172" width="5" height="15" fill="rgb(221,70,44)"/><text x="24.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1188" width="5" height="15" fill="rgb(254,189,50)"/><text x="24.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="21" y="1204" width="5" height="15" fill="rgb(224,62,0)"/><text x="24.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1220" width="5" height="15" fill="rgb(218,198,49)"/><text x="24.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.43%)</title><rect x="21" y="1236" width="5" height="15" fill="rgb(231,58,4)"/><text x="24.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1252" width="5" height="15" fill="rgb(241,73,30)"/><text x="24.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1268" width="5" height="15" fill="rgb(211,116,42)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1284" width="5" height="15" fill="rgb(217,11,20)"/><text x="24.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1300" width="5" height="15" fill="rgb(230,44,9)"/><text x="24.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1316" width="5" height="15" fill="rgb(244,171,48)"/><text x="24.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="21" y="1332" width="5" height="15" fill="rgb(252,73,24)"/><text x="24.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1348" width="5" height="15" fill="rgb(253,7,6)"/><text x="24.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.43%)</title><rect x="21" y="1364" width="5" height="15" fill="rgb(240,20,25)"/><text x="24.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1380" width="5" height="15" fill="rgb(248,57,52)"/><text x="24.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1396" width="5" height="15" fill="rgb(243,0,18)"/><text x="24.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1412" width="5" height="15" fill="rgb(224,178,18)"/><text x="24.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.43%)</title><rect x="21" y="1428" width="5" height="15" fill="rgb(236,150,7)"/><text x="24.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="21" y="1444" width="5" height="15" fill="rgb(219,146,12)"/><text x="24.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.43%)</title><rect x="21" y="1460" width="5" height="15" fill="rgb(241,177,14)"/><text x="24.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.43%)</title><rect x="21" y="1476" width="5" height="15" fill="rgb(231,222,27)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.43%)</title><rect x="21" y="1492" width="5" height="15" fill="rgb(246,45,31)"/><text x="24.00" y="1502.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.11%)</title><rect x="25" y="1508" width="1" height="15" fill="rgb(247,2,42)"/><text x="28.00" y="1518.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.11%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(220,131,51)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(254,77,21)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(237,70,12)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(235,0,27)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(227,136,11)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(213,41,21)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.11%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(213,176,29)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(218,28,32)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(228,150,3)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(206,131,44)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(244,62,45)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(227,33,5)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.11%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(244,138,22)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(213,71,42)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(244,146,5)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1348" width="1" height="15" fill="rgb(217,142,50)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1364" width="1" height="15" fill="rgb(228,39,7)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1380" width="1" height="15" fill="rgb(245,123,41)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.11%)</title><rect x="26" y="1396" width="1" height="15" fill="rgb(237,178,36)"/><text x="29.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1412" width="1" height="15" fill="rgb(228,22,4)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1428" width="1" height="15" fill="rgb(228,117,45)"/><text x="29.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1444" width="1" height="15" fill="rgb(243,101,32)"/><text x="29.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1460" width="1" height="15" fill="rgb(238,83,46)"/><text x="29.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1476" width="1" height="15" fill="rgb(253,76,43)"/><text x="29.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1492" width="1" height="15" fill="rgb(207,12,45)"/><text x="29.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.22%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(239,0,52)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(238,57,9)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(210,115,46)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(227,98,29)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(207,148,19)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(232,36,10)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.22%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(209,140,33)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(211,162,34)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(229,34,40)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(236,141,1)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(240,70,47)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(218,78,14)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.22%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(254,22,18)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(207,54,52)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(231,28,39)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(206,138,33)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(250,126,52)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(253,70,6)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.22%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(231,33,36)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(208,188,4)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(237,5,0)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(208,220,41)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(246,61,36)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(248,75,23)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(215,26,37)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(246,140,41)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(228,205,54)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(220,215,26)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(211,190,41)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1188" width="2" height="15" fill="rgb(230,118,35)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(250,229,53)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(211,216,43)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(244,102,18)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(249,205,0)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(251,142,24)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(211,1,9)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(236,44,38)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(250,148,43)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(214,55,19)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(218,209,11)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(218,143,42)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(235,104,21)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(246,11,43)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1412" width="2" height="15" fill="rgb(237,110,7)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1428" width="2" height="15" fill="rgb(237,22,0)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1444" width="2" height="15" fill="rgb(249,115,23)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1460" width="2" height="15" fill="rgb(247,127,0)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1476" width="2" height="15" fill="rgb(228,187,21)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.11%)</title><rect x="27" y="1492" width="2" height="15" fill="rgb(210,153,21)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1508" width="2" height="15" fill="rgb(215,26,13)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1524" width="2" height="15" fill="rgb(222,53,37)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(248,216,15)"/><text x="30.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(218,150,50)"/><text x="30.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(246,53,45)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.11%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(247,136,12)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(224,54,22)"/><text x="30.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(210,25,11)"/><text x="30.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(207,209,42)"/><text x="30.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(223,90,24)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(245,217,32)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.11%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(250,55,29)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1700" width="2" height="15" fill="rgb(239,162,47)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1716" width="2" height="15" fill="rgb(219,9,8)"/><text x="30.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1732" width="2" height="15" fill="rgb(243,56,52)"/><text x="30.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="1748" width="2" height="15" fill="rgb(252,154,53)"/><text x="30.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="1764" width="2" height="15" fill="rgb(253,19,10)"/><text x="30.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.11%)</title><rect x="27" y="1780" width="2" height="15" fill="rgb(254,118,22)"/><text x="30.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.11%)</title><rect x="27" y="1796" width="2" height="15" fill="rgb(231,189,22)"/><text x="30.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.11%)</title><rect x="27" y="1812" width="2" height="15" fill="rgb(206,63,13)"/><text x="30.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.11%)</title><rect x="27" y="1828" width="2" height="15" fill="rgb(206,187,12)"/><text x="30.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.11%)</title><rect x="27" y="1844" width="2" height="15" fill="rgb(254,158,0)"/><text x="30.00" y="1854.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 0.98%)</title><rect x="18" y="340" width="12" height="15" fill="rgb(214,101,25)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="356" width="12" height="15" fill="rgb(207,89,22)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="372" width="12" height="15" fill="rgb(250,144,35)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="388" width="12" height="15" fill="rgb(229,102,25)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.98%)</title><rect x="18" y="404" width="12" height="15" fill="rgb(209,74,24)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="420" width="12" height="15" fill="rgb(233,81,36)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 0.98%)</title><rect x="18" y="436" width="12" height="15" fill="rgb(252,52,9)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="452" width="12" height="15" fill="rgb(205,171,1)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.98%)</title><rect x="18" y="468" width="12" height="15" fill="rgb(219,198,17)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(223,92,30)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(230,126,26)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(229,210,34)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.33%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(236,40,23)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(241,56,39)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(220,57,0)"/><text x="29.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(228,103,4)"/><text x="29.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(237,178,41)"/><text x="29.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(224,134,26)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.33%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(238,70,43)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(242,131,54)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(232,90,47)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(245,133,17)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(209,165,44)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(246,185,31)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.11%)</title><rect x="29" y="724" width="1" height="15" fill="rgb(223,8,17)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="740" width="1" height="15" fill="rgb(221,218,32)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="756" width="1" height="15" fill="rgb(247,33,32)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="772" width="1" height="15" fill="rgb(230,12,41)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="788" width="1" height="15" fill="rgb(250,50,45)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="804" width="1" height="15" fill="rgb(237,215,1)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.11%)</title><rect x="29" y="820" width="1" height="15" fill="rgb(227,208,24)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="836" width="1" height="15" fill="rgb(222,62,6)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="852" width="1" height="15" fill="rgb(210,62,10)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="868" width="1" height="15" fill="rgb(230,213,53)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="884" width="1" height="15" fill="rgb(226,3,5)"/><text x="32.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="900" width="1" height="15" fill="rgb(247,24,51)"/><text x="32.00" y="910.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="916" width="1" height="15" fill="rgb(248,227,51)"/><text x="32.00" y="926.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="932" width="1" height="15" fill="rgb(223,131,37)"/><text x="32.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 1.09%)</title><rect x="18" y="244" width="13" height="15" fill="rgb(243,229,2)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.09%)</title><rect x="18" y="260" width="13" height="15" fill="rgb(222,51,49)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.09%)</title><rect x="18" y="276" width="13" height="15" fill="rgb(211,95,9)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.09%)</title><rect x="18" y="292" width="13" height="15" fill="rgb(246,178,26)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.09%)</title><rect x="18" y="308" width="13" height="15" fill="rgb(214,227,25)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.09%)</title><rect x="18" y="324" width="13" height="15" fill="rgb(216,134,51)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.11%)</title><rect x="30" y="340" width="1" height="15" fill="rgb(215,102,35)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="356" width="1" height="15" fill="rgb(243,209,53)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="372" width="1" height="15" fill="rgb(206,162,53)"/><text x="33.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="388" width="1" height="15" fill="rgb(215,133,49)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="404" width="1" height="15" fill="rgb(228,24,11)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="420" width="1" height="15" fill="rgb(208,137,26)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="436" width="1" height="15" fill="rgb(246,173,29)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="452" width="1" height="15" fill="rgb(245,219,49)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="468" width="1" height="15" fill="rgb(235,149,33)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="484" width="1" height="15" fill="rgb(212,30,11)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="500" width="1" height="15" fill="rgb(217,73,2)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="516" width="1" height="15" fill="rgb(220,223,7)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="532" width="1" height="15" fill="rgb(251,69,49)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="548" width="1" height="15" fill="rgb(251,33,50)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="564" width="1" height="15" fill="rgb(254,87,39)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="30" y="580" width="1" height="15" fill="rgb(239,191,2)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="596" width="1" height="15" fill="rgb(225,30,16)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="612" width="1" height="15" fill="rgb(221,85,9)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="628" width="1" height="15" fill="rgb(248,151,14)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="644" width="1" height="15" fill="rgb(221,8,49)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="660" width="1" height="15" fill="rgb(248,24,11)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="30" y="676" width="1" height="15" fill="rgb(235,201,34)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="692" width="1" height="15" fill="rgb(240,63,48)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="708" width="1" height="15" fill="rgb(226,46,29)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="724" width="1" height="15" fill="rgb(228,83,54)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="740" width="1" height="15" fill="rgb(246,219,25)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="756" width="1" height="15" fill="rgb(245,108,17)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="772" width="1" height="15" fill="rgb(213,132,47)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="788" width="1" height="15" fill="rgb(205,92,18)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="804" width="1" height="15" fill="rgb(205,155,8)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="820" width="1" height="15" fill="rgb(211,108,15)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="836" width="1" height="15" fill="rgb(253,44,18)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="852" width="1" height="15" fill="rgb(246,150,49)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="868" width="1" height="15" fill="rgb(221,13,19)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="884" width="1" height="15" fill="rgb(245,181,35)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="900" width="1" height="15" fill="rgb(244,148,2)"/><text x="33.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="916" width="1" height="15" fill="rgb(247,51,13)"/><text x="33.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="932" width="1" height="15" fill="rgb(236,128,22)"/><text x="33.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="948" width="1" height="15" fill="rgb(219,67,37)"/><text x="33.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.11%)</title><rect x="30" y="964" width="1" height="15" fill="rgb(252,9,29)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="980" width="1" height="15" fill="rgb(232,216,32)"/><text x="33.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="996" width="1" height="15" fill="rgb(240,2,3)"/><text x="33.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1012" width="1" height="15" fill="rgb(248,118,54)"/><text x="33.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1028" width="1" height="15" fill="rgb(216,74,24)"/><text x="33.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1044" width="1" height="15" fill="rgb(225,227,48)"/><text x="33.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.11%)</title><rect x="30" y="1060" width="1" height="15" fill="rgb(237,46,37)"/><text x="33.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1076" width="1" height="15" fill="rgb(213,131,11)"/><text x="33.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1092" width="1" height="15" fill="rgb(217,227,28)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1108" width="1" height="15" fill="rgb(219,22,3)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1124" width="1" height="15" fill="rgb(246,160,18)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1140" width="1" height="15" fill="rgb(226,189,35)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1156" width="1" height="15" fill="rgb(237,145,30)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1172" width="1" height="15" fill="rgb(235,227,47)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1188" width="1" height="15" fill="rgb(214,221,40)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="1204" width="1" height="15" fill="rgb(232,99,21)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1220" width="1" height="15" fill="rgb(232,154,9)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1236" width="1" height="15" fill="rgb(211,170,50)"/><text x="33.00" y="1246.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1252" width="1" height="15" fill="rgb(222,228,53)"/><text x="33.00" y="1262.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1268" width="1" height="15" fill="rgb(212,62,38)"/><text x="33.00" y="1278.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1284" width="1" height="15" fill="rgb(244,55,50)"/><text x="33.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1300" width="1" height="15" fill="rgb(213,102,7)"/><text x="33.00" y="1310.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1316" width="1" height="15" fill="rgb(226,217,54)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="68" width="23" height="15" fill="rgb(249,18,9)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="84" width="23" height="15" fill="rgb(241,229,0)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(231,222,26)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 1.96%)</title><rect x="10" y="116" width="23" height="15" fill="rgb(213,134,33)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="132" width="23" height="15" fill="rgb(206,77,6)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (18 samples, 1.96%)</title><rect x="10" y="148" width="23" height="15" fill="rgb(239,94,41)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="164" width="23" height="15" fill="rgb(230,222,19)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 1.96%)</title><rect x="10" y="180" width="23" height="15" fill="rgb(207,213,1)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.20%)</title><rect x="18" y="196" width="15" height="15" fill="rgb(230,207,0)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.20%)</title><rect x="18" y="212" width="15" height="15" fill="rgb(242,22,5)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.20%)</title><rect x="18" y="228" width="15" height="15" fill="rgb(244,212,29)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="244" width="2" height="15" fill="rgb(226,85,54)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(235,222,7)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="276" width="2" height="15" fill="rgb(228,101,4)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(206,129,23)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="308" width="2" height="15" fill="rgb(235,38,52)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="324" width="2" height="15" fill="rgb(224,83,41)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(217,184,18)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(243,75,28)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(219,217,16)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(206,4,13)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(231,52,44)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(246,58,53)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(208,153,42)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(222,82,22)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(207,92,6)"/><text x="34.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(215,84,17)"/><text x="34.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(243,185,18)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(227,85,28)"/><text x="34.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.11%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(237,219,44)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(242,58,29)"/><text x="34.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(208,225,8)"/><text x="34.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(215,142,52)"/><text x="34.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(246,5,16)"/><text x="34.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(225,111,50)"/><text x="34.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(229,95,32)"/><text x="34.00" y="638.50"></text></g><g><title>0x7fa972746ff9 (?) (1 samples, 0.11%)</title><rect x="33" y="212" width="1" height="15" fill="rgb(254,65,54)"/><text x="36.00" y="222.50"></text></g><g><title>0x7fa972741ef6 (?) (1 samples, 0.11%)</title><rect x="33" y="228" width="1" height="15" fill="rgb(221,199,53)"/><text x="36.00" y="238.50"></text></g><g><title>0x7fa972736962 (?) (1 samples, 0.11%)</title><rect x="33" y="244" width="1" height="15" fill="rgb(219,9,11)"/><text x="36.00" y="254.50"></text></g><g><title>0x7fa97276a7a7 (?) (1 samples, 0.11%)</title><rect x="33" y="260" width="1" height="15" fill="rgb(229,149,16)"/><text x="36.00" y="270.50"></text></g><g><title>0x7fa97276a379 (?) (1 samples, 0.11%)</title><rect x="33" y="276" width="1" height="15" fill="rgb(232,96,12)"/><text x="36.00" y="286.50"></text></g><g><title>0x7fa972bc88b8 (?) (1 samples, 0.11%)</title><rect x="33" y="292" width="1" height="15" fill="rgb(232,89,39)"/><text x="36.00" y="302.50"></text></g><g><title>0x7fa972bc6c7f (?) (1 samples, 0.11%)</title><rect x="33" y="308" width="1" height="15" fill="rgb(232,2,2)"/><text x="36.00" y="318.50"></text></g><g><title>0x7fa972bd999c (?) (1 samples, 0.11%)</title><rect x="33" y="324" width="1" height="15" fill="rgb(226,56,52)"/><text x="36.00" y="334.50"></text></g><g><title>0x7fa9728f719e (?) (1 samples, 0.11%)</title><rect x="33" y="340" width="1" height="15" fill="rgb(221,136,19)"/><text x="36.00" y="350.50"></text></g><g><title>0x7fa9728f3ebd (?) (1 samples, 0.11%)</title><rect x="33" y="356" width="1" height="15" fill="rgb(232,46,40)"/><text x="36.00" y="366.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.65%)</title><rect x="34" y="340" width="8" height="15" fill="rgb(216,124,35)"/><text x="37.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="356" width="2" height="15" fill="rgb(253,20,46)"/><text x="43.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="372" width="2" height="15" fill="rgb(215,133,38)"/><text x="43.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="388" width="2" height="15" fill="rgb(234,195,48)"/><text x="43.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="404" width="2" height="15" fill="rgb(232,119,44)"/><text x="43.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="420" width="2" height="15" fill="rgb(205,76,17)"/><text x="43.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="40" y="436" width="2" height="15" fill="rgb(254,201,0)"/><text x="43.00" y="446.50"></text></g><g><title>0x7fa9b2a976d2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="40" y="452" width="2" height="15" fill="rgb(233,207,19)"/><text x="43.00" y="462.50"></text></g><g><title>0x7fa9b2a87bc6 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="42" y="452" width="2" height="15" fill="rgb(247,202,7)"/><text x="45.00" y="462.50"></text></g><g><title>0x7fa9b2a87c20 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="44" y="452" width="1" height="15" fill="rgb(251,63,9)"/><text x="47.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="42" y="340" width="5" height="15" fill="rgb(232,194,10)"/><text x="45.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="42" y="356" width="5" height="15" fill="rgb(250,80,10)"/><text x="45.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="42" y="372" width="5" height="15" fill="rgb(212,41,53)"/><text x="45.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="42" y="388" width="5" height="15" fill="rgb(236,92,45)"/><text x="45.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.43%)</title><rect x="42" y="404" width="5" height="15" fill="rgb(228,44,25)"/><text x="45.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.43%)</title><rect x="42" y="420" width="5" height="15" fill="rgb(207,81,51)"/><text x="45.00" y="430.50"></text></g><g><title>0x7fa9b2a8a028 (libc-2.29.so) (4 samples, 0.43%)</title><rect x="42" y="436" width="5" height="15" fill="rgb(225,55,50)"/><text x="45.00" y="446.50"></text></g><g><title>0x7fa9b2a87c2d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="45" y="452" width="2" height="15" fill="rgb(238,38,9)"/><text x="48.00" y="462.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.09%)</title><rect x="47" y="340" width="13" height="15" fill="rgb(254,150,29)"/><text x="50.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="356" width="2" height="15" fill="rgb(236,22,45)"/><text x="61.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="372" width="2" height="15" fill="rgb(223,197,2)"/><text x="61.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="388" width="2" height="15" fill="rgb(234,112,23)"/><text x="61.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="404" width="2" height="15" fill="rgb(249,153,8)"/><text x="61.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="420" width="2" height="15" fill="rgb(206,105,40)"/><text x="61.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="436" width="2" height="15" fill="rgb(246,16,33)"/><text x="61.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="452" width="2" height="15" fill="rgb(239,182,9)"/><text x="61.00" y="462.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="58" y="468" width="2" height="15" fill="rgb(236,79,40)"/><text x="61.00" y="478.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.52%)</title><rect x="60" y="372" width="17" height="15" fill="rgb(214,51,28)"/><text x="63.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.65%)</title><rect x="70" y="388" width="7" height="15" fill="rgb(211,69,41)"/><text x="73.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="372" width="2" height="15" fill="rgb(229,40,30)"/><text x="80.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="388" width="2" height="15" fill="rgb(237,130,42)"/><text x="80.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="404" width="2" height="15" fill="rgb(205,173,36)"/><text x="80.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="420" width="2" height="15" fill="rgb(213,126,4)"/><text x="80.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="436" width="2" height="15" fill="rgb(244,167,14)"/><text x="80.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="452" width="2" height="15" fill="rgb(220,70,35)"/><text x="80.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="77" y="468" width="2" height="15" fill="rgb(250,82,52)"/><text x="80.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="77" y="484" width="2" height="15" fill="rgb(254,33,31)"/><text x="80.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="77" y="500" width="2" height="15" fill="rgb(224,20,3)"/><text x="80.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.85%)</title><rect x="60" y="340" width="21" height="15" fill="rgb(252,151,15)"/><text x="63.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.85%)</title><rect x="60" y="356" width="21" height="15" fill="rgb(207,210,44)"/><text x="63.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="79" y="372" width="2" height="15" fill="rgb(217,78,31)"/><text x="82.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="79" y="388" width="2" height="15" fill="rgb(254,155,52)"/><text x="82.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="79" y="404" width="2" height="15" fill="rgb(212,42,20)"/><text x="82.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="79" y="420" width="2" height="15" fill="rgb(217,80,47)"/><text x="82.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="79" y="436" width="2" height="15" fill="rgb(220,112,52)"/><text x="82.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="81" y="340" width="2" height="15" fill="rgb(218,19,1)"/><text x="84.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="81" y="356" width="2" height="15" fill="rgb(224,122,44)"/><text x="84.00" y="366.50"></text></g><g><title>0x7fa9b2a88945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="85" y="372" width="1" height="15" fill="rgb(225,162,23)"/><text x="88.00" y="382.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="83" y="340" width="5" height="15" fill="rgb(238,147,11)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="85" y="356" width="3" height="15" fill="rgb(242,118,12)"/><text x="88.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="86" y="372" width="2" height="15" fill="rgb(228,10,44)"/><text x="89.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="86" y="388" width="2" height="15" fill="rgb(236,172,16)"/><text x="89.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="88" y="340" width="19" height="15" fill="rgb(208,189,30)"/><text x="91.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="88" y="356" width="19" height="15" fill="rgb(243,76,22)"/><text x="91.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.63%)</title><rect x="88" y="372" width="19" height="15" fill="rgb(208,74,29)"/><text x="91.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.76%)</title><rect x="98" y="388" width="9" height="15" fill="rgb(213,111,23)"/><text x="101.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="107" y="372" width="1" height="15" fill="rgb(253,132,17)"/><text x="110.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="107" y="340" width="3" height="15" fill="rgb(244,8,19)"/><text x="110.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(235,134,49)"/><text x="110.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="108" y="372" width="2" height="15" fill="rgb(210,165,19)"/><text x="111.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="108" y="388" width="2" height="15" fill="rgb(205,88,30)"/><text x="111.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="108" y="404" width="2" height="15" fill="rgb(214,101,43)"/><text x="111.00" y="414.50"></text></g><g><title>0x7fa97270e9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="157" y="356" width="1" height="15" fill="rgb(249,84,6)"/><text x="160.00" y="366.50"></text></g><g><title>0x7fa9b2a88991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="158" y="356" width="2" height="15" fill="rgb(231,150,17)"/><text x="161.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="160" y="356" width="5" height="15" fill="rgb(237,215,32)"/><text x="163.00" y="366.50"></text></g><g><title>0x7fa97270d930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="271" y="388" width="4" height="15" fill="rgb(243,194,22)"/><text x="274.00" y="398.50"></text></g><g><title>0x7fa97270eba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="275" y="388" width="1" height="15" fill="rgb(237,25,30)"/><text x="278.00" y="398.50"></text></g><g><title>0x7fa9a2554d50 (libstdc++.so.6.0.28) (3 samples, 0.33%)</title><rect x="284" y="404" width="4" height="15" fill="rgb(248,207,3)"/><text x="287.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (39 samples, 4.24%)</title><rect x="276" y="388" width="50" height="15" fill="rgb(225,78,52)"/><text x="279.00" y="398.50">opera..</text></g><g><title>malloc (libc-2.29.so) (30 samples, 3.26%)</title><rect x="288" y="404" width="38" height="15" fill="rgb(219,144,32)"/><text x="291.00" y="414.50">mal..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 14.46%)</title><rect x="165" y="356" width="170" height="15" fill="rgb(246,185,42)"/><text x="168.00" y="366.50">onnxruntime::ml::TreeE..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 7.61%)</title><rect x="246" y="372" width="89" height="15" fill="rgb(248,108,31)"/><text x="249.00" y="382.50">std::_Rb_t..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.76%)</title><rect x="326" y="388" width="9" height="15" fill="rgb(243,159,5)"/><text x="329.00" y="398.50"></text></g><g><title>0x7fa97270d850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="347" y="372" width="2" height="15" fill="rgb(243,27,42)"/><text x="350.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.30%)</title><rect x="335" y="356" width="16" height="15" fill="rgb(243,136,45)"/><text x="338.00" y="366.50"></text></g><g><title>0x7fa9b2aa8dbe (libc-2.29.so) (1 samples, 0.11%)</title><rect x="349" y="372" width="2" height="15" fill="rgb(215,229,40)"/><text x="352.00" y="382.50"></text></g><g><title>0x7fa9a25557a0 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="352" y="372" width="3" height="15" fill="rgb(219,18,50)"/><text x="355.00" y="382.50"></text></g><g><title>0x7fa9b2a88906 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="355" y="372" width="2" height="15" fill="rgb(254,170,0)"/><text x="358.00" y="382.50"></text></g><g><title>0x7fa9b2a8890e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="357" y="372" width="1" height="15" fill="rgb(250,206,32)"/><text x="360.00" y="382.50"></text></g><g><title>0x7fa9b2a88929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="358" y="372" width="2" height="15" fill="rgb(254,219,3)"/><text x="361.00" y="382.50"></text></g><g><title>0x7fa9b2a8893b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="360" y="372" width="1" height="15" fill="rgb(218,32,2)"/><text x="363.00" y="382.50"></text></g><g><title>0x7fa9b2a88971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="372" width="1" height="15" fill="rgb(219,112,33)"/><text x="364.00" y="382.50"></text></g><g><title>0x7fa9b2a8897c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="362" y="372" width="2" height="15" fill="rgb(231,225,31)"/><text x="365.00" y="382.50"></text></g><g><title>0x7fa9b2a88991 (libc-2.29.so) (5 samples, 0.54%)</title><rect x="364" y="372" width="6" height="15" fill="rgb(219,168,37)"/><text x="367.00" y="382.50"></text></g><g><title>0x7fa9b2a88998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="370" y="372" width="1" height="15" fill="rgb(229,117,27)"/><text x="373.00" y="382.50"></text></g><g><title>0x7fa9b2a88a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="371" y="372" width="1" height="15" fill="rgb(225,96,11)"/><text x="374.00" y="382.50"></text></g><g><title>0x7fa9b2a88bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="372" y="372" width="2" height="15" fill="rgb(240,62,39)"/><text x="375.00" y="382.50"></text></g><g><title>0x7fa9b2a88bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="374" y="372" width="1" height="15" fill="rgb(227,167,31)"/><text x="377.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (12 samples, 1.30%)</title><rect x="375" y="372" width="15" height="15" fill="rgb(219,121,48)"/><text x="378.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="390" y="372" width="2" height="15" fill="rgb(212,69,13)"/><text x="393.00" y="382.50"></text></g><g><title>0x7fa9b2a88902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="398" y="388" width="1" height="15" fill="rgb(207,65,28)"/><text x="401.00" y="398.50"></text></g><g><title>0x7fa9b2a88917 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="399" y="388" width="2" height="15" fill="rgb(237,112,2)"/><text x="402.00" y="398.50"></text></g><g><title>0x7fa9b2a88991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="401" y="388" width="1" height="15" fill="rgb(219,86,40)"/><text x="404.00" y="398.50"></text></g><g><title>0x7fa9b2a88a41 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="402" y="388" width="3" height="15" fill="rgb(227,165,31)"/><text x="405.00" y="398.50"></text></g><g><title>0x7fa9b2a88bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="405" y="388" width="1" height="15" fill="rgb(245,136,39)"/><text x="408.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 4.78%)</title><rect x="351" y="356" width="56" height="15" fill="rgb(253,144,33)"/><text x="354.00" y="366.50">std::..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.30%)</title><rect x="392" y="372" width="15" height="15" fill="rgb(232,105,21)"/><text x="395.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="406" y="388" width="1" height="15" fill="rgb(215,158,2)"/><text x="409.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (241 samples, 26.20%)</title><rect x="110" y="340" width="309" height="15" fill="rgb(216,120,6)"/><text x="113.00" y="350.50">onnxruntime::ml::TreeEnsembleClassifier&lt;f..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 0.98%)</title><rect x="407" y="356" width="12" height="15" fill="rgb(211,103,13)"/><text x="410.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 32.72%)</title><rect x="34" y="260" width="386" height="15" fill="rgb(205,179,41)"/><text x="37.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 32.72%)</title><rect x="34" y="276" width="386" height="15" fill="rgb(243,161,35)"/><text x="37.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 32.72%)</title><rect x="34" y="292" width="386" height="15" fill="rgb(215,158,36)"/><text x="37.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 32.72%)</title><rect x="34" y="308" width="386" height="15" fill="rgb(235,75,24)"/><text x="37.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 32.72%)</title><rect x="34" y="324" width="386" height="15" fill="rgb(208,224,7)"/><text x="37.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="419" y="340" width="1" height="15" fill="rgb(219,63,48)"/><text x="422.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="419" y="356" width="1" height="15" fill="rgb(209,178,4)"/><text x="422.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="419" y="372" width="1" height="15" fill="rgb(217,26,44)"/><text x="422.00" y="382.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="420" y="260" width="6" height="15" fill="rgb(234,184,27)"/><text x="423.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(236,197,47)"/><text x="426.00" y="286.50"></text></g><g><title>0x7fa9b2a889b3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="426" y="292" width="2" height="15" fill="rgb(234,155,35)"/><text x="429.00" y="302.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (309 samples, 33.59%)</title><rect x="33" y="68" width="396" height="15" fill="rgb(243,24,46)"/><text x="36.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (309 samples, 33.59%)</title><rect x="33" y="84" width="396" height="15" fill="rgb(218,224,18)"/><text x="36.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (309 samples, 33.59%)</title><rect x="33" y="100" width="396" height="15" fill="rgb(252,190,3)"/><text x="36.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (309 samples, 33.59%)</title><rect x="33" y="116" width="396" height="15" fill="rgb(244,213,23)"/><text x="36.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (309 samples, 33.59%)</title><rect x="33" y="132" width="396" height="15" fill="rgb(245,112,52)"/><text x="36.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (309 samples, 33.59%)</title><rect x="33" y="148" width="396" height="15" fill="rgb(248,183,42)"/><text x="36.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (309 samples, 33.59%)</title><rect x="33" y="164" width="396" height="15" fill="rgb(245,18,51)"/><text x="36.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (309 samples, 33.59%)</title><rect x="33" y="180" width="396" height="15" fill="rgb(247,73,18)"/><text x="36.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (309 samples, 33.59%)</title><rect x="33" y="196" width="396" height="15" fill="rgb(243,113,26)"/><text x="36.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (308 samples, 33.48%)</title><rect x="34" y="212" width="395" height="15" fill="rgb(208,166,24)"/><text x="37.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (308 samples, 33.48%)</title><rect x="34" y="228" width="395" height="15" fill="rgb(219,92,33)"/><text x="37.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (308 samples, 33.48%)</title><rect x="34" y="244" width="395" height="15" fill="rgb(236,19,36)"/><text x="37.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modul..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="426" y="260" width="3" height="15" fill="rgb(225,190,1)"/><text x="429.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="426" y="276" width="3" height="15" fill="rgb(249,187,13)"/><text x="429.00" y="286.50"></text></g><g><title>0x7fa9b2a88d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="428" y="292" width="1" height="15" fill="rgb(227,224,8)"/><text x="431.00" y="302.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="435" y="180" width="3" height="15" fill="rgb(242,34,27)"/><text x="438.00" y="190.50"></text></g><g><title>0x7fa9b2a89de0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="437" y="196" width="1" height="15" fill="rgb(238,162,38)"/><text x="440.00" y="206.50"></text></g><g><title>0x7fa9b2aa91f2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="488" y="196" width="1" height="15" fill="rgb(219,15,45)"/><text x="491.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.11%)</title><rect x="489" y="196" width="1" height="15" fill="rgb(241,191,24)"/><text x="492.00" y="206.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.11%)</title><rect x="496" y="276" width="1" height="15" fill="rgb(211,203,20)"/><text x="499.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.11%)</title><rect x="496" y="292" width="1" height="15" fill="rgb(210,146,8)"/><text x="499.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="496" y="308" width="1" height="15" fill="rgb(211,176,19)"/><text x="499.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="496" y="324" width="1" height="15" fill="rgb(220,79,4)"/><text x="499.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (2 samples, 0.22%)</title><rect x="496" y="212" width="2" height="15" fill="rgb(213,119,10)"/><text x="499.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="496" y="228" width="2" height="15" fill="rgb(211,78,41)"/><text x="499.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.22%)</title><rect x="496" y="244" width="2" height="15" fill="rgb(225,227,38)"/><text x="499.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="496" y="260" width="2" height="15" fill="rgb(247,148,45)"/><text x="499.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="497" y="276" width="1" height="15" fill="rgb(237,151,24)"/><text x="500.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.11%)</title><rect x="497" y="292" width="1" height="15" fill="rgb(238,223,44)"/><text x="500.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.11%)</title><rect x="497" y="308" width="1" height="15" fill="rgb(206,228,53)"/><text x="500.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.11%)</title><rect x="497" y="324" width="1" height="15" fill="rgb(245,157,2)"/><text x="500.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="497" y="340" width="1" height="15" fill="rgb(241,67,8)"/><text x="500.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.11%)</title><rect x="498" y="212" width="1" height="15" fill="rgb(218,203,7)"/><text x="501.00" y="222.50"></text></g><g><title>0x7fa9b2aa91ef (libc-2.29.so) (1 samples, 0.11%)</title><rect x="498" y="228" width="1" height="15" fill="rgb(217,94,43)"/><text x="501.00" y="238.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.11%)</title><rect x="499" y="276" width="2" height="15" fill="rgb(228,40,12)"/><text x="502.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="499" y="292" width="2" height="15" fill="rgb(222,124,28)"/><text x="502.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="499" y="308" width="2" height="15" fill="rgb(207,125,10)"/><text x="502.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.22%)</title><rect x="499" y="244" width="3" height="15" fill="rgb(212,82,46)"/><text x="502.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.22%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(238,62,51)"/><text x="502.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.11%)</title><rect x="501" y="276" width="1" height="15" fill="rgb(236,141,44)"/><text x="504.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="501" y="292" width="1" height="15" fill="rgb(216,38,33)"/><text x="504.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="501" y="308" width="1" height="15" fill="rgb(237,134,29)"/><text x="504.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.33%)</title><rect x="499" y="212" width="4" height="15" fill="rgb(250,141,27)"/><text x="502.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.33%)</title><rect x="499" y="228" width="4" height="15" fill="rgb(222,105,18)"/><text x="502.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="502" y="244" width="1" height="15" fill="rgb(248,120,35)"/><text x="505.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="502" y="260" width="1" height="15" fill="rgb(218,16,21)"/><text x="505.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.11%)</title><rect x="503" y="212" width="2" height="15" fill="rgb(250,87,17)"/><text x="506.00" y="222.50"></text></g><g><title>array_add (number.c) (1 samples, 0.11%)</title><rect x="503" y="228" width="2" height="15" fill="rgb(221,136,49)"/><text x="506.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="503" y="244" width="2" height="15" fill="rgb(234,52,25)"/><text x="506.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="503" y="260" width="2" height="15" fill="rgb(226,152,7)"/><text x="506.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="503" y="276" width="2" height="15" fill="rgb(225,183,1)"/><text x="506.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="503" y="292" width="2" height="15" fill="rgb(216,126,31)"/><text x="506.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.11%)</title><rect x="503" y="308" width="2" height="15" fill="rgb(207,141,34)"/><text x="506.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="503" y="324" width="2" height="15" fill="rgb(221,63,37)"/><text x="506.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="503" y="340" width="2" height="15" fill="rgb(205,131,15)"/><text x="506.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(241,7,15)"/><text x="506.00" y="366.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.11%)</title><rect x="512" y="244" width="2" height="15" fill="rgb(247,123,53)"/><text x="515.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="512" y="260" width="2" height="15" fill="rgb(209,108,2)"/><text x="515.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="514" y="260" width="1" height="15" fill="rgb(206,25,52)"/><text x="517.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="514" y="276" width="1" height="15" fill="rgb(218,4,27)"/><text x="517.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="514" y="292" width="1" height="15" fill="rgb(219,15,13)"/><text x="517.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="514" y="308" width="1" height="15" fill="rgb(234,66,46)"/><text x="517.00" y="318.50"></text></g><g><title>0x7fa9b2aa9120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="515" y="276" width="1" height="15" fill="rgb(220,103,14)"/><text x="518.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="516" y="276" width="1" height="15" fill="rgb(254,193,24)"/><text x="519.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="516" y="292" width="1" height="15" fill="rgb(253,116,39)"/><text x="519.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="517" y="276" width="2" height="15" fill="rgb(212,65,44)"/><text x="520.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="517" y="292" width="2" height="15" fill="rgb(252,197,14)"/><text x="520.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="519" y="292" width="1" height="15" fill="rgb(238,193,31)"/><text x="522.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.11%)</title><rect x="520" y="308" width="1" height="15" fill="rgb(236,102,13)"/><text x="523.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="520" y="324" width="1" height="15" fill="rgb(236,74,14)"/><text x="523.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="520" y="340" width="1" height="15" fill="rgb(247,94,41)"/><text x="523.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="520" y="356" width="1" height="15" fill="rgb(244,109,11)"/><text x="523.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="521" y="324" width="2" height="15" fill="rgb(213,154,53)"/><text x="524.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="523" y="324" width="1" height="15" fill="rgb(219,138,35)"/><text x="526.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.11%)</title><rect x="524" y="324" width="1" height="15" fill="rgb(246,65,0)"/><text x="527.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.43%)</title><rect x="521" y="308" width="5" height="15" fill="rgb(223,197,40)"/><text x="524.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.11%)</title><rect x="525" y="324" width="1" height="15" fill="rgb(221,202,13)"/><text x="528.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(234,15,29)"/><text x="529.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="528" y="308" width="1" height="15" fill="rgb(220,37,41)"/><text x="531.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="530" y="324" width="2" height="15" fill="rgb(214,194,5)"/><text x="533.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.65%)</title><rect x="529" y="308" width="8" height="15" fill="rgb(225,79,46)"/><text x="532.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.43%)</title><rect x="532" y="324" width="5" height="15" fill="rgb(214,199,11)"/><text x="535.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.43%)</title><rect x="532" y="340" width="5" height="15" fill="rgb(238,198,19)"/><text x="535.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.43%)</title><rect x="532" y="356" width="5" height="15" fill="rgb(248,133,21)"/><text x="535.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="537" y="308" width="1" height="15" fill="rgb(207,136,4)"/><text x="540.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="538" y="308" width="1" height="15" fill="rgb(227,133,13)"/><text x="541.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="538" y="324" width="1" height="15" fill="rgb(251,173,54)"/><text x="541.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (19 samples, 2.07%)</title><rect x="519" y="276" width="24" height="15" fill="rgb(250,206,5)"/><text x="522.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 1.96%)</title><rect x="520" y="292" width="23" height="15" fill="rgb(244,108,46)"/><text x="523.00" y="302.50">i..</text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (3 samples, 0.33%)</title><rect x="539" y="308" width="4" height="15" fill="rgb(218,190,16)"/><text x="542.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="542" y="324" width="1" height="15" fill="rgb(247,156,40)"/><text x="545.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 2.50%)</title><rect x="515" y="260" width="29" height="15" fill="rgb(238,156,29)"/><text x="518.00" y="270.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="543" y="276" width="1" height="15" fill="rgb(229,43,0)"/><text x="546.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 2.93%)</title><rect x="511" y="228" width="35" height="15" fill="rgb(212,206,51)"/><text x="514.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (25 samples, 2.72%)</title><rect x="514" y="244" width="32" height="15" fill="rgb(226,49,18)"/><text x="517.00" y="254.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="544" y="260" width="2" height="15" fill="rgb(227,212,36)"/><text x="547.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (3 samples, 0.33%)</title><rect x="546" y="228" width="3" height="15" fill="rgb(244,210,23)"/><text x="549.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (3 samples, 0.33%)</title><rect x="546" y="244" width="3" height="15" fill="rgb(232,111,12)"/><text x="549.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (3 samples, 0.33%)</title><rect x="546" y="260" width="3" height="15" fill="rgb(215,122,8)"/><text x="549.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (2 samples, 0.22%)</title><rect x="547" y="276" width="2" height="15" fill="rgb(218,97,5)"/><text x="550.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.22%)</title><rect x="547" y="292" width="2" height="15" fill="rgb(233,123,43)"/><text x="550.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (2 samples, 0.22%)</title><rect x="547" y="308" width="2" height="15" fill="rgb(231,162,49)"/><text x="550.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="548" y="324" width="1" height="15" fill="rgb(243,11,10)"/><text x="551.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="548" y="340" width="1" height="15" fill="rgb(227,218,7)"/><text x="551.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="548" y="356" width="1" height="15" fill="rgb(217,102,54)"/><text x="551.00" y="366.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.11%)</title><rect x="549" y="324" width="2" height="15" fill="rgb(245,179,42)"/><text x="552.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="549" y="340" width="2" height="15" fill="rgb(228,127,24)"/><text x="552.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(223,171,9)"/><text x="552.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="549" y="372" width="2" height="15" fill="rgb(218,9,27)"/><text x="552.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (2 samples, 0.22%)</title><rect x="549" y="228" width="3" height="15" fill="rgb(224,194,12)"/><text x="552.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (2 samples, 0.22%)</title><rect x="549" y="244" width="3" height="15" fill="rgb(249,198,22)"/><text x="552.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="549" y="260" width="3" height="15" fill="rgb(253,139,17)"/><text x="552.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="549" y="276" width="3" height="15" fill="rgb(235,144,0)"/><text x="552.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="549" y="292" width="3" height="15" fill="rgb(222,92,54)"/><text x="552.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="549" y="308" width="3" height="15" fill="rgb(246,17,18)"/><text x="552.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.11%)</title><rect x="551" y="324" width="1" height="15" fill="rgb(245,123,26)"/><text x="554.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="551" y="340" width="1" height="15" fill="rgb(206,170,12)"/><text x="554.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="551" y="356" width="1" height="15" fill="rgb(246,88,39)"/><text x="554.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="551" y="372" width="1" height="15" fill="rgb(227,103,16)"/><text x="554.00" y="382.50"></text></g><g><title>0x7fa9b2a88929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="553" y="340" width="2" height="15" fill="rgb(254,150,28)"/><text x="556.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.22%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(213,182,30)"/><text x="556.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.22%)</title><rect x="553" y="308" width="3" height="15" fill="rgb(235,103,26)"/><text x="556.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.22%)</title><rect x="553" y="324" width="3" height="15" fill="rgb(240,64,45)"/><text x="556.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="555" y="340" width="1" height="15" fill="rgb(243,88,25)"/><text x="558.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="555" y="356" width="1" height="15" fill="rgb(237,24,5)"/><text x="558.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="555" y="372" width="1" height="15" fill="rgb(232,143,43)"/><text x="558.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="556" y="292" width="1" height="15" fill="rgb(210,177,12)"/><text x="559.00" y="302.50"></text></g><g><title>0x7fa9b2c0a960 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="557" y="324" width="1" height="15" fill="rgb(248,186,13)"/><text x="560.00" y="334.50"></text></g><g><title>0x7fa9b2c0a979 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="558" y="324" width="2" height="15" fill="rgb(236,110,35)"/><text x="561.00" y="334.50"></text></g><g><title>0x7fa9b2c0a9c8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="560" y="324" width="1" height="15" fill="rgb(220,33,29)"/><text x="563.00" y="334.50"></text></g><g><title>0x7fa9b2c0a9cc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="561" y="324" width="1" height="15" fill="rgb(209,144,28)"/><text x="564.00" y="334.50"></text></g><g><title>0x7fa9b2c0a9e4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="562" y="324" width="2" height="15" fill="rgb(242,223,5)"/><text x="565.00" y="334.50"></text></g><g><title>0x7fa9b2c0a9f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="564" y="324" width="1" height="15" fill="rgb(228,216,21)"/><text x="567.00" y="334.50"></text></g><g><title>0x7fa9b2c0aa04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="565" y="324" width="1" height="15" fill="rgb(225,96,37)"/><text x="568.00" y="334.50"></text></g><g><title>0x7fa9b2c0aa19 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="566" y="324" width="3" height="15" fill="rgb(245,42,28)"/><text x="569.00" y="334.50"></text></g><g><title>0x7fa9b2c0aa1d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="569" y="324" width="1" height="15" fill="rgb(242,86,47)"/><text x="572.00" y="334.50"></text></g><g><title>0x7fa9b2c0aa21 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="570" y="324" width="3" height="15" fill="rgb(245,156,45)"/><text x="573.00" y="334.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.22%)</title><rect x="573" y="324" width="2" height="15" fill="rgb(224,182,51)"/><text x="576.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.17%)</title><rect x="553" y="276" width="26" height="15" fill="rgb(224,8,19)"/><text x="556.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (17 samples, 1.85%)</title><rect x="557" y="292" width="22" height="15" fill="rgb(241,76,26)"/><text x="560.00" y="302.50">t..</text></g><g><title>FLOAT_log (loops.c.src) (17 samples, 1.85%)</title><rect x="557" y="308" width="22" height="15" fill="rgb(242,194,22)"/><text x="560.00" y="318.50">F..</text></g><g><title>npy_logf (npy_math_internal.h.src) (3 samples, 0.33%)</title><rect x="575" y="324" width="4" height="15" fill="rgb(217,166,13)"/><text x="578.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="579" y="276" width="1" height="15" fill="rgb(228,141,12)"/><text x="582.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="579" y="292" width="1" height="15" fill="rgb(228,134,27)"/><text x="582.00" y="302.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.11%)</title><rect x="579" y="308" width="1" height="15" fill="rgb(237,43,35)"/><text x="582.00" y="318.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="580" y="276" width="2" height="15" fill="rgb(228,175,20)"/><text x="583.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(238,78,3)"/><text x="583.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="580" y="308" width="2" height="15" fill="rgb(251,148,23)"/><text x="583.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (24 samples, 2.61%)</title><rect x="552" y="228" width="31" height="15" fill="rgb(216,137,16)"/><text x="555.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 2.50%)</title><rect x="553" y="244" width="30" height="15" fill="rgb(217,18,22)"/><text x="556.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (23 samples, 2.50%)</title><rect x="553" y="260" width="30" height="15" fill="rgb(245,176,32)"/><text x="556.00" y="270.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="582" y="276" width="1" height="15" fill="rgb(231,105,21)"/><text x="585.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="582" y="292" width="1" height="15" fill="rgb(222,145,48)"/><text x="585.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="582" y="308" width="1" height="15" fill="rgb(215,141,15)"/><text x="585.00" y="318.50"></text></g><g><title>0x7fa9b2aa912b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="585" y="244" width="2" height="15" fill="rgb(221,79,22)"/><text x="588.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="589" y="308" width="2" height="15" fill="rgb(250,65,42)"/><text x="592.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(253,8,39)"/><text x="594.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="592" y="388" width="1" height="15" fill="rgb(206,109,42)"/><text x="595.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="593" y="372" width="1" height="15" fill="rgb(212,35,53)"/><text x="596.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="593" y="388" width="1" height="15" fill="rgb(228,62,45)"/><text x="596.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="593" y="404" width="1" height="15" fill="rgb(246,44,38)"/><text x="596.00" y="414.50"></text></g><g><title>0x7fa9b2a40785 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="593" y="420" width="1" height="15" fill="rgb(246,221,46)"/><text x="596.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="594" y="372" width="2" height="15" fill="rgb(219,71,48)"/><text x="597.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="594" y="388" width="2" height="15" fill="rgb(227,61,2)"/><text x="597.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="594" y="404" width="2" height="15" fill="rgb(252,69,4)"/><text x="597.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src) (10 samples, 1.09%)</title><rect x="601" y="388" width="13" height="15" fill="rgb(207,66,37)"/><text x="604.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (7 samples, 0.76%)</title><rect x="605" y="404" width="9" height="15" fill="rgb(226,85,13)"/><text x="608.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (25 samples, 2.72%)</title><rect x="591" y="356" width="32" height="15" fill="rgb(252,161,36)"/><text x="594.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (21 samples, 2.28%)</title><rect x="596" y="372" width="27" height="15" fill="rgb(214,10,7)"/><text x="599.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 0.76%)</title><rect x="614" y="388" width="9" height="15" fill="rgb(243,90,28)"/><text x="617.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 2.83%)</title><rect x="591" y="340" width="33" height="15" fill="rgb(205,19,20)"/><text x="594.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="623" y="356" width="1" height="15" fill="rgb(220,156,5)"/><text x="626.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="623" y="372" width="1" height="15" fill="rgb(223,162,31)"/><text x="626.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="623" y="388" width="1" height="15" fill="rgb(248,39,33)"/><text x="626.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="623" y="404" width="1" height="15" fill="rgb(243,94,47)"/><text x="626.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (33 samples, 3.59%)</title><rect x="583" y="228" width="42" height="15" fill="rgb(243,62,20)"/><text x="586.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (30 samples, 3.26%)</title><rect x="587" y="244" width="38" height="15" fill="rgb(238,153,36)"/><text x="590.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (29 samples, 3.15%)</title><rect x="588" y="260" width="37" height="15" fill="rgb(251,9,49)"/><text x="591.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (29 samples, 3.15%)</title><rect x="588" y="276" width="37" height="15" fill="rgb(216,149,30)"/><text x="591.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (28 samples, 3.04%)</title><rect x="589" y="292" width="36" height="15" fill="rgb(252,68,49)"/><text x="592.00" y="302.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (27 samples, 2.93%)</title><rect x="591" y="308" width="34" height="15" fill="rgb(244,129,28)"/><text x="594.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (27 samples, 2.93%)</title><rect x="591" y="324" width="34" height="15" fill="rgb(239,99,41)"/><text x="594.00" y="334.50">Py..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="624" y="340" width="1" height="15" fill="rgb(254,95,45)"/><text x="627.00" y="350.50"></text></g><g><title>0x7fa9735e6422 (?) (1 samples, 0.11%)</title><rect x="625" y="244" width="1" height="15" fill="rgb(223,127,45)"/><text x="628.00" y="254.50"></text></g><g><title>0x7fa9735ec89e (?) (1 samples, 0.11%)</title><rect x="625" y="260" width="1" height="15" fill="rgb(227,164,28)"/><text x="628.00" y="270.50"></text></g><g><title>0x7fa9735ec74f (?) (1 samples, 0.11%)</title><rect x="625" y="276" width="1" height="15" fill="rgb(224,137,26)"/><text x="628.00" y="286.50"></text></g><g><title>0x7fa9735f2a3a (?) (1 samples, 0.11%)</title><rect x="625" y="292" width="1" height="15" fill="rgb(214,61,1)"/><text x="628.00" y="302.50"></text></g><g><title>0x7fa97ca4eab9 (?) (1 samples, 0.11%)</title><rect x="625" y="308" width="1" height="15" fill="rgb(234,114,38)"/><text x="628.00" y="318.50"></text></g><g><title>0x7fa97ca4fead (?) (1 samples, 0.11%)</title><rect x="625" y="324" width="1" height="15" fill="rgb(218,199,31)"/><text x="628.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.11%)</title><rect x="626" y="436" width="2" height="15" fill="rgb(223,48,31)"/><text x="629.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.11%)</title><rect x="626" y="452" width="2" height="15" fill="rgb(212,156,24)"/><text x="629.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.11%)</title><rect x="626" y="468" width="2" height="15" fill="rgb(250,66,50)"/><text x="629.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.11%)</title><rect x="626" y="484" width="2" height="15" fill="rgb(249,186,24)"/><text x="629.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.11%)</title><rect x="626" y="500" width="2" height="15" fill="rgb(252,186,20)"/><text x="629.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.11%)</title><rect x="626" y="516" width="2" height="15" fill="rgb(237,176,26)"/><text x="629.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.11%)</title><rect x="626" y="532" width="2" height="15" fill="rgb(222,100,46)"/><text x="629.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.11%)</title><rect x="626" y="548" width="2" height="15" fill="rgb(246,82,14)"/><text x="629.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="626" y="564" width="2" height="15" fill="rgb(223,70,25)"/><text x="629.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="626" y="580" width="2" height="15" fill="rgb(223,77,31)"/><text x="629.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="626" y="596" width="2" height="15" fill="rgb(230,62,10)"/><text x="629.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="626" y="612" width="2" height="15" fill="rgb(226,88,54)"/><text x="629.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="626" y="628" width="2" height="15" fill="rgb(221,22,13)"/><text x="629.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="644" width="2" height="15" fill="rgb(236,72,40)"/><text x="629.00" y="654.50"></text></g><g><title>0x7fa9b2a8a028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="660" width="2" height="15" fill="rgb(209,208,53)"/><text x="629.00" y="670.50"></text></g><g><title>0x7fa9b2a87bc6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="676" width="2" height="15" fill="rgb(205,137,8)"/><text x="629.00" y="686.50"></text></g><g><title>0x7fa97ca4fea0 (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="628" y="468" width="4" height="15" fill="rgb(215,129,11)"/><text x="631.00" y="478.50"></text></g><g><title>0x7fa97ca4fea9 (libgomp.so.1.0.0) (13 samples, 1.41%)</title><rect x="632" y="468" width="16" height="15" fill="rgb(236,53,0)"/><text x="635.00" y="478.50"></text></g><g><title>0x7fa97ca4feab (libgomp.so.1.0.0) (22 samples, 2.39%)</title><rect x="648" y="468" width="28" height="15" fill="rgb(254,32,11)"/><text x="651.00" y="478.50">0..</text></g><g><title>0x7fa97ca4eab9 (libgomp.so.1.0.0) (59 samples, 6.41%)</title><rect x="628" y="452" width="75" height="15" fill="rgb(223,82,4)"/><text x="631.00" y="462.50">0x7fa97c..</text></g><g><title>0x7fa97ca4fead (libgomp.so.1.0.0) (21 samples, 2.28%)</title><rect x="676" y="468" width="27" height="15" fill="rgb(233,177,1)"/><text x="679.00" y="478.50">0..</text></g><g><title>0x7fa97ca4fcf9 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="703" y="484" width="3" height="15" fill="rgb(207,47,34)"/><text x="706.00" y="494.50"></text></g><g><title>0x7fa97ca4fcfb (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="706" y="484" width="4" height="15" fill="rgb(223,145,36)"/><text x="709.00" y="494.50"></text></g><g><title>0x7fa97ca4ddaa (libgomp.so.1.0.0) (8 samples, 0.87%)</title><rect x="703" y="468" width="11" height="15" fill="rgb(242,193,19)"/><text x="706.00" y="478.50"></text></g><g><title>0x7fa97ca4fcfd (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="710" y="484" width="4" height="15" fill="rgb(247,33,30)"/><text x="713.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (175 samples, 19.02%)</title><rect x="490" y="196" width="225" height="15" fill="rgb(222,13,2)"/><text x="493.00" y="206.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (164 samples, 17.83%)</title><rect x="505" y="212" width="210" height="15" fill="rgb(246,206,45)"/><text x="508.00" y="222.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (70 samples, 7.61%)</title><rect x="625" y="228" width="90" height="15" fill="rgb(232,57,49)"/><text x="628.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (69 samples, 7.50%)</title><rect x="626" y="244" width="89" height="15" fill="rgb(235,178,45)"/><text x="629.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (69 samples, 7.50%)</title><rect x="626" y="260" width="89" height="15" fill="rgb(230,17,44)"/><text x="629.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (69 samples, 7.50%)</title><rect x="626" y="276" width="89" height="15" fill="rgb(233,86,36)"/><text x="629.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (69 samples, 7.50%)</title><rect x="626" y="292" width="89" height="15" fill="rgb(251,139,16)"/><text x="629.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (69 samples, 7.50%)</title><rect x="626" y="308" width="89" height="15" fill="rgb(239,227,2)"/><text x="629.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (69 samples, 7.50%)</title><rect x="626" y="324" width="89" height="15" fill="rgb(241,165,5)"/><text x="629.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (69 samples, 7.50%)</title><rect x="626" y="340" width="89" height="15" fill="rgb(224,34,38)"/><text x="629.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (69 samples, 7.50%)</title><rect x="626" y="356" width="89" height="15" fill="rgb(228,140,44)"/><text x="629.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (69 samples, 7.50%)</title><rect x="626" y="372" width="89" height="15" fill="rgb(235,143,28)"/><text x="629.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (69 samples, 7.50%)</title><rect x="626" y="388" width="89" height="15" fill="rgb(228,163,4)"/><text x="629.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (69 samples, 7.50%)</title><rect x="626" y="404" width="89" height="15" fill="rgb(237,207,50)"/><text x="629.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (69 samples, 7.50%)</title><rect x="626" y="420" width="89" height="15" fill="rgb(235,64,0)"/><text x="629.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (68 samples, 7.39%)</title><rect x="628" y="436" width="87" height="15" fill="rgb(213,129,14)"/><text x="631.00" y="446.50">pybind11::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (9 samples, 0.98%)</title><rect x="703" y="452" width="12" height="15" fill="rgb(248,226,37)"/><text x="706.00" y="462.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (1 samples, 0.11%)</title><rect x="714" y="468" width="1" height="15" fill="rgb(245,184,14)"/><text x="717.00" y="478.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (stl_bvector.h) (1 samples, 0.11%)</title><rect x="714" y="484" width="1" height="15" fill="rgb(249,92,43)"/><text x="717.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (stl_bvector.h) (1 samples, 0.11%)</title><rect x="714" y="500" width="1" height="15" fill="rgb(226,66,25)"/><text x="717.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator+ (stl_bvector.h) (1 samples, 0.11%)</title><rect x="714" y="516" width="1" height="15" fill="rgb(238,178,38)"/><text x="717.00" y="526.50"></text></g><g><title>std::_Bit_iterator::operator+= (stl_bvector.h) (1 samples, 0.11%)</title><rect x="714" y="532" width="1" height="15" fill="rgb(244,38,31)"/><text x="717.00" y="542.50"></text></g><g><title>std::_Bit_iterator_base::_M_incr (stl_bvector.h) (1 samples, 0.11%)</title><rect x="714" y="548" width="1" height="15" fill="rgb(230,130,4)"/><text x="717.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="714" y="564" width="1" height="15" fill="rgb(251,55,37)"/><text x="717.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="714" y="580" width="1" height="15" fill="rgb(254,218,39)"/><text x="717.00" y="590.50"></text></g><g><title>0x7fa9b2a8a09a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="714" y="596" width="1" height="15" fill="rgb(250,139,21)"/><text x="717.00" y="606.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (9 samples, 0.98%)</title><rect x="729" y="420" width="12" height="15" fill="rgb(241,96,36)"/><text x="732.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="741" y="436" width="1" height="15" fill="rgb(218,137,17)"/><text x="744.00" y="446.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.11%)</title><rect x="741" y="452" width="1" height="15" fill="rgb(240,84,18)"/><text x="744.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="741" y="420" width="2" height="15" fill="rgb(237,34,50)"/><text x="744.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="742" y="436" width="1" height="15" fill="rgb(207,171,44)"/><text x="745.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="742" y="452" width="1" height="15" fill="rgb(218,226,20)"/><text x="745.00" y="462.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="742" y="468" width="1" height="15" fill="rgb(209,30,21)"/><text x="745.00" y="478.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.11%)</title><rect x="742" y="484" width="1" height="15" fill="rgb(222,223,46)"/><text x="745.00" y="494.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.11%)</title><rect x="743" y="420" width="1" height="15" fill="rgb(226,0,20)"/><text x="746.00" y="430.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.33%)</title><rect x="744" y="468" width="4" height="15" fill="rgb(213,191,39)"/><text x="747.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.43%)</title><rect x="744" y="420" width="6" height="15" fill="rgb(205,89,9)"/><text x="747.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.43%)</title><rect x="744" y="436" width="6" height="15" fill="rgb(254,89,30)"/><text x="747.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.43%)</title><rect x="744" y="452" width="6" height="15" fill="rgb(206,72,48)"/><text x="747.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="748" y="468" width="2" height="15" fill="rgb(238,45,36)"/><text x="751.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (17 samples, 1.85%)</title><rect x="729" y="388" width="22" height="15" fill="rgb(231,87,2)"/><text x="732.00" y="398.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 1.85%)</title><rect x="729" y="404" width="22" height="15" fill="rgb(230,66,40)"/><text x="732.00" y="414.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="750" y="420" width="1" height="15" fill="rgb(227,110,44)"/><text x="753.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="750" y="436" width="1" height="15" fill="rgb(208,160,21)"/><text x="753.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="750" y="452" width="1" height="15" fill="rgb(236,27,42)"/><text x="753.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="750" y="468" width="1" height="15" fill="rgb(229,18,37)"/><text x="753.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (20 samples, 2.17%)</title><rect x="726" y="340" width="26" height="15" fill="rgb(227,37,45)"/><text x="729.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 2.07%)</title><rect x="728" y="356" width="24" height="15" fill="rgb(242,136,40)"/><text x="731.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 2.07%)</title><rect x="728" y="372" width="24" height="15" fill="rgb(220,113,5)"/><text x="731.00" y="382.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="751" y="388" width="1" height="15" fill="rgb(210,117,8)"/><text x="754.00" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(205,222,18)"/><text x="756.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="759" y="404" width="1" height="15" fill="rgb(249,152,15)"/><text x="762.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="759" y="420" width="1" height="15" fill="rgb(227,92,44)"/><text x="762.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="759" y="436" width="1" height="15" fill="rgb(254,107,2)"/><text x="762.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (6 samples, 0.65%)</title><rect x="756" y="356" width="8" height="15" fill="rgb(212,43,31)"/><text x="759.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.65%)</title><rect x="756" y="372" width="8" height="15" fill="rgb(238,153,28)"/><text x="759.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (6 samples, 0.65%)</title><rect x="756" y="388" width="8" height="15" fill="rgb(237,72,14)"/><text x="759.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.33%)</title><rect x="760" y="404" width="4" height="15" fill="rgb(236,186,2)"/><text x="763.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.33%)</title><rect x="760" y="420" width="4" height="15" fill="rgb(248,107,9)"/><text x="763.00" y="430.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (2 samples, 0.22%)</title><rect x="761" y="436" width="3" height="15" fill="rgb(211,79,24)"/><text x="764.00" y="446.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="764" y="388" width="1" height="15" fill="rgb(240,112,45)"/><text x="767.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="764" y="372" width="2" height="15" fill="rgb(251,160,27)"/><text x="767.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="765" y="388" width="1" height="15" fill="rgb(223,74,14)"/><text x="768.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="765" y="404" width="1" height="15" fill="rgb(226,95,7)"/><text x="768.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="765" y="420" width="1" height="15" fill="rgb(241,162,50)"/><text x="768.00" y="430.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (264 samples, 28.70%)</title><rect x="429" y="164" width="339" height="15" fill="rgb(244,87,43)"/><text x="432.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (257 samples, 27.93%)</title><rect x="438" y="180" width="330" height="15" fill="rgb(220,219,36)"/><text x="441.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (41 samples, 4.46%)</title><rect x="715" y="196" width="53" height="15" fill="rgb(212,213,14)"/><text x="718.00" y="206.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (40 samples, 4.35%)</title><rect x="716" y="212" width="52" height="15" fill="rgb(252,192,48)"/><text x="719.00" y="222.50">_run ..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (40 samples, 4.35%)</title><rect x="716" y="228" width="52" height="15" fill="rgb(213,151,29)"/><text x="719.00" y="238.50">clip ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (38 samples, 4.13%)</title><rect x="719" y="244" width="49" height="15" fill="rgb(215,145,0)"/><text x="722.00" y="254.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py) (38 samples, 4.13%)</title><rect x="719" y="260" width="49" height="15" fill="rgb(222,52,45)"/><text x="722.00" y="270.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (38 samples, 4.13%)</title><rect x="719" y="276" width="49" height="15" fill="rgb(254,183,13)"/><text x="722.00" y="286.50">_wra..</text></g><g><title>array_clip (methods.c) (37 samples, 4.02%)</title><rect x="720" y="292" width="48" height="15" fill="rgb(208,221,40)"/><text x="723.00" y="302.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (37 samples, 4.02%)</title><rect x="720" y="308" width="48" height="15" fill="rgb(235,97,1)"/><text x="723.00" y="318.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py) (35 samples, 3.80%)</title><rect x="723" y="324" width="45" height="15" fill="rgb(210,26,35)"/><text x="726.00" y="334.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (12 samples, 1.30%)</title><rect x="752" y="340" width="16" height="15" fill="rgb(230,200,4)"/><text x="755.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.33%)</title><rect x="764" y="356" width="4" height="15" fill="rgb(206,62,40)"/><text x="767.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="766" y="372" width="2" height="15" fill="rgb(211,46,10)"/><text x="769.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="766" y="388" width="2" height="15" fill="rgb(215,163,6)"/><text x="769.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="766" y="404" width="2" height="15" fill="rgb(221,175,25)"/><text x="769.00" y="414.50"></text></g><g><title>0x7fa9b2a88eb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="769" y="228" width="1" height="15" fill="rgb(229,14,28)"/><text x="772.00" y="238.50"></text></g><g><title>0x7fa9b2a87b9b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="769" y="244" width="1" height="15" fill="rgb(217,161,33)"/><text x="772.00" y="254.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (267 samples, 29.02%)</title><rect x="429" y="100" width="342" height="15" fill="rgb(240,226,50)"/><text x="432.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (267 samples, 29.02%)</title><rect x="429" y="116" width="342" height="15" fill="rgb(206,175,34)"/><text x="432.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (267 samples, 29.02%)</title><rect x="429" y="132" width="342" height="15" fill="rgb(212,112,3)"/><text x="432.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (267 samples, 29.02%)</title><rect x="429" y="148" width="342" height="15" fill="rgb(230,58,31)"/><text x="432.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.33%)</title><rect x="768" y="164" width="3" height="15" fill="rgb(222,204,16)"/><text x="771.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (3 samples, 0.33%)</title><rect x="768" y="180" width="3" height="15" fill="rgb(224,23,34)"/><text x="771.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (3 samples, 0.33%)</title><rect x="768" y="196" width="3" height="15" fill="rgb(242,178,13)"/><text x="771.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (3 samples, 0.33%)</title><rect x="768" y="212" width="3" height="15" fill="rgb(227,227,10)"/><text x="771.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="770" y="228" width="1" height="15" fill="rgb(216,6,25)"/><text x="773.00" y="238.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (268 samples, 29.13%)</title><rect x="429" y="68" width="344" height="15" fill="rgb(223,226,39)"/><text x="432.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (268 samples, 29.13%)</title><rect x="429" y="84" width="344" height="15" fill="rgb(234,157,5)"/><text x="432.00" y="94.50">setup_profile (bench_AdaBoostClassifier_defaul..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="771" y="100" width="2" height="15" fill="rgb(243,18,38)"/><text x="774.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="771" y="116" width="2" height="15" fill="rgb(222,209,27)"/><text x="774.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="771" y="132" width="2" height="15" fill="rgb(238,8,40)"/><text x="774.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="771" y="148" width="2" height="15" fill="rgb(246,76,32)"/><text x="774.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="771" y="164" width="2" height="15" fill="rgb(232,169,52)"/><text x="774.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="771" y="180" width="2" height="15" fill="rgb(217,163,42)"/><text x="774.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="771" y="196" width="2" height="15" fill="rgb(244,176,25)"/><text x="774.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="771" y="212" width="2" height="15" fill="rgb(251,48,44)"/><text x="774.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py) (1 samples, 0.11%)</title><rect x="771" y="228" width="2" height="15" fill="rgb(239,229,14)"/><text x="774.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="771" y="244" width="2" height="15" fill="rgb(254,132,49)"/><text x="774.00" y="254.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.33%)</title><rect x="773" y="164" width="4" height="15" fill="rgb(247,52,46)"/><text x="776.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (3 samples, 0.33%)</title><rect x="773" y="180" width="4" height="15" fill="rgb(246,71,51)"/><text x="776.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (3 samples, 0.33%)</title><rect x="773" y="196" width="4" height="15" fill="rgb(234,140,43)"/><text x="776.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.33%)</title><rect x="773" y="212" width="4" height="15" fill="rgb(228,111,34)"/><text x="776.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (3 samples, 0.33%)</title><rect x="773" y="228" width="4" height="15" fill="rgb(216,227,7)"/><text x="776.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.33%)</title><rect x="773" y="244" width="4" height="15" fill="rgb(249,171,32)"/><text x="776.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.22%)</title><rect x="774" y="260" width="3" height="15" fill="rgb(217,202,46)"/><text x="777.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="774" y="276" width="3" height="15" fill="rgb(235,43,28)"/><text x="777.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.22%)</title><rect x="774" y="292" width="3" height="15" fill="rgb(240,117,45)"/><text x="777.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.22%)</title><rect x="774" y="308" width="3" height="15" fill="rgb(244,67,10)"/><text x="777.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="774" y="324" width="3" height="15" fill="rgb(232,79,6)"/><text x="777.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (2 samples, 0.22%)</title><rect x="774" y="340" width="3" height="15" fill="rgb(218,114,18)"/><text x="777.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="774" y="356" width="3" height="15" fill="rgb(217,168,23)"/><text x="777.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="774" y="372" width="3" height="15" fill="rgb(244,21,36)"/><text x="777.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="775" y="388" width="2" height="15" fill="rgb(223,136,35)"/><text x="778.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="775" y="404" width="2" height="15" fill="rgb(242,66,27)"/><text x="778.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="775" y="420" width="2" height="15" fill="rgb(238,85,47)"/><text x="778.00" y="430.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="777" y="164" width="1" height="15" fill="rgb(244,178,25)"/><text x="780.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="777" y="180" width="1" height="15" fill="rgb(212,129,27)"/><text x="780.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.11%)</title><rect x="777" y="196" width="1" height="15" fill="rgb(218,65,14)"/><text x="780.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.22%)</title><rect x="791" y="212" width="2" height="15" fill="rgb(252,186,18)"/><text x="794.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="793" y="228" width="3" height="15" fill="rgb(252,79,17)"/><text x="796.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.22%)</title><rect x="793" y="244" width="3" height="15" fill="rgb(239,17,51)"/><text x="796.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.33%)</title><rect x="793" y="212" width="4" height="15" fill="rgb(209,82,24)"/><text x="796.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="796" y="228" width="1" height="15" fill="rgb(205,96,35)"/><text x="799.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="244" width="1" height="15" fill="rgb(230,28,42)"/><text x="799.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="260" width="1" height="15" fill="rgb(234,40,33)"/><text x="799.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="796" y="276" width="1" height="15" fill="rgb(208,170,37)"/><text x="799.00" y="286.50"></text></g><g><title>0x7fa9b2a88e64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="796" y="292" width="1" height="15" fill="rgb(228,90,9)"/><text x="799.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="798" y="260" width="3" height="15" fill="rgb(216,68,46)"/><text x="801.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.22%)</title><rect x="798" y="276" width="3" height="15" fill="rgb(249,34,21)"/><text x="801.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (2 samples, 0.22%)</title><rect x="798" y="292" width="3" height="15" fill="rgb(219,39,33)"/><text x="801.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (2 samples, 0.22%)</title><rect x="798" y="308" width="3" height="15" fill="rgb(244,128,7)"/><text x="801.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (2 samples, 0.22%)</title><rect x="798" y="324" width="3" height="15" fill="rgb(209,210,16)"/><text x="801.00" y="334.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="801" y="260" width="1" height="15" fill="rgb(247,193,28)"/><text x="804.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.11%)</title><rect x="801" y="276" width="1" height="15" fill="rgb(222,66,9)"/><text x="804.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="802" y="260" width="1" height="15" fill="rgb(239,107,36)"/><text x="805.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="802" y="276" width="1" height="15" fill="rgb(220,53,47)"/><text x="805.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="802" y="292" width="1" height="15" fill="rgb(224,183,26)"/><text x="805.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="802" y="308" width="1" height="15" fill="rgb(230,22,40)"/><text x="805.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="802" y="324" width="1" height="15" fill="rgb(238,126,12)"/><text x="805.00" y="334.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="802" y="340" width="1" height="15" fill="rgb(210,139,14)"/><text x="805.00" y="350.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="806" y="308" width="1" height="15" fill="rgb(233,94,5)"/><text x="809.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.43%)</title><rect x="803" y="260" width="6" height="15" fill="rgb(206,154,29)"/><text x="806.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.43%)</title><rect x="803" y="276" width="6" height="15" fill="rgb(211,59,22)"/><text x="806.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (3 samples, 0.33%)</title><rect x="805" y="292" width="4" height="15" fill="rgb(250,212,31)"/><text x="808.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="807" y="308" width="2" height="15" fill="rgb(206,199,35)"/><text x="810.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.09%)</title><rect x="798" y="244" width="13" height="15" fill="rgb(205,71,19)"/><text x="801.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.22%)</title><rect x="809" y="260" width="2" height="15" fill="rgb(237,208,21)"/><text x="812.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="811" y="260" width="1" height="15" fill="rgb(222,143,31)"/><text x="814.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="811" y="276" width="1" height="15" fill="rgb(254,48,11)"/><text x="814.00" y="286.50"></text></g><g><title>array_multiply (number.c) (13 samples, 1.41%)</title><rect x="797" y="212" width="17" height="15" fill="rgb(213,4,24)"/><text x="800.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.41%)</title><rect x="797" y="228" width="17" height="15" fill="rgb(218,97,40)"/><text x="800.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="811" y="244" width="3" height="15" fill="rgb(213,138,15)"/><text x="814.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="260" width="2" height="15" fill="rgb(215,121,6)"/><text x="815.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="276" width="2" height="15" fill="rgb(251,8,33)"/><text x="815.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="814" y="212" width="1" height="15" fill="rgb(220,157,9)"/><text x="817.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="814" y="228" width="1" height="15" fill="rgb(226,64,29)"/><text x="817.00" y="238.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="815" y="260" width="1" height="15" fill="rgb(235,21,48)"/><text x="818.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="815" y="276" width="1" height="15" fill="rgb(230,66,2)"/><text x="818.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="815" y="292" width="1" height="15" fill="rgb(237,41,35)"/><text x="818.00" y="302.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.11%)</title><rect x="816" y="292" width="2" height="15" fill="rgb(230,191,49)"/><text x="819.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="816" y="308" width="2" height="15" fill="rgb(242,148,21)"/><text x="819.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="816" y="324" width="2" height="15" fill="rgb(235,201,54)"/><text x="819.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="816" y="340" width="2" height="15" fill="rgb(223,48,20)"/><text x="819.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="818" y="372" width="1" height="15" fill="rgb(252,223,34)"/><text x="821.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="818" y="388" width="1" height="15" fill="rgb(239,82,40)"/><text x="821.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="818" y="404" width="1" height="15" fill="rgb(230,88,27)"/><text x="821.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="818" y="420" width="1" height="15" fill="rgb(217,136,15)"/><text x="821.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.22%)</title><rect x="818" y="308" width="2" height="15" fill="rgb(254,14,33)"/><text x="821.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.22%)</title><rect x="818" y="324" width="2" height="15" fill="rgb(254,217,11)"/><text x="821.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.22%)</title><rect x="818" y="340" width="2" height="15" fill="rgb(218,181,54)"/><text x="821.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="818" y="356" width="2" height="15" fill="rgb(224,27,48)"/><text x="821.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="819" y="372" width="1" height="15" fill="rgb(234,122,25)"/><text x="822.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="818" y="292" width="3" height="15" fill="rgb(247,184,36)"/><text x="821.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="820" y="308" width="1" height="15" fill="rgb(206,39,9)"/><text x="823.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.65%)</title><rect x="821" y="292" width="8" height="15" fill="rgb(246,123,18)"/><text x="824.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.65%)</title><rect x="821" y="308" width="8" height="15" fill="rgb(224,116,36)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 0.65%)</title><rect x="821" y="324" width="8" height="15" fill="rgb(253,154,0)"/><text x="824.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="827" y="340" width="2" height="15" fill="rgb(243,213,29)"/><text x="830.00" y="350.50"></text></g><g><title>array_subtract (number.c) (12 samples, 1.30%)</title><rect x="815" y="212" width="15" height="15" fill="rgb(236,176,18)"/><text x="818.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 1.30%)</title><rect x="815" y="228" width="15" height="15" fill="rgb(208,195,12)"/><text x="818.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 1.30%)</title><rect x="815" y="244" width="15" height="15" fill="rgb(231,13,41)"/><text x="818.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.20%)</title><rect x="816" y="260" width="14" height="15" fill="rgb(242,164,38)"/><text x="819.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 1.20%)</title><rect x="816" y="276" width="14" height="15" fill="rgb(216,65,34)"/><text x="819.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="829" y="292" width="1" height="15" fill="rgb(220,51,54)"/><text x="832.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="834" y="340" width="2" height="15" fill="rgb(207,151,54)"/><text x="837.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="833" y="324" width="4" height="15" fill="rgb(251,168,37)"/><text x="836.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="836" y="340" width="1" height="15" fill="rgb(251,203,6)"/><text x="839.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.11%)</title><rect x="836" y="356" width="1" height="15" fill="rgb(210,218,21)"/><text x="839.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="837" y="324" width="1" height="15" fill="rgb(247,130,52)"/><text x="840.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="837" y="340" width="1" height="15" fill="rgb(214,161,6)"/><text x="840.00" y="350.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.11%)</title><rect x="837" y="356" width="1" height="15" fill="rgb(224,189,22)"/><text x="840.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="838" y="356" width="1" height="15" fill="rgb(227,164,19)"/><text x="841.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="838" y="372" width="1" height="15" fill="rgb(244,32,31)"/><text x="841.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="838" y="388" width="1" height="15" fill="rgb(212,70,1)"/><text x="841.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="838" y="404" width="1" height="15" fill="rgb(230,211,36)"/><text x="841.00" y="414.50"></text></g><g><title>0x7fa9b1caab20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="839" y="372" width="2" height="15" fill="rgb(218,194,49)"/><text x="842.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.33%)</title><rect x="838" y="324" width="4" height="15" fill="rgb(239,215,14)"/><text x="841.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.33%)</title><rect x="838" y="340" width="4" height="15" fill="rgb(229,180,44)"/><text x="841.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="839" y="356" width="3" height="15" fill="rgb(237,128,4)"/><text x="842.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="841" y="372" width="1" height="15" fill="rgb(237,54,2)"/><text x="844.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 0.54%)</title><rect x="847" y="340" width="6" height="15" fill="rgb(213,96,3)"/><text x="850.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.22%)</title><rect x="851" y="356" width="2" height="15" fill="rgb(253,200,8)"/><text x="854.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 1.96%)</title><rect x="832" y="308" width="23" height="15" fill="rgb(221,28,33)"/><text x="835.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (10 samples, 1.09%)</title><rect x="842" y="324" width="13" height="15" fill="rgb(241,138,14)"/><text x="845.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="853" y="340" width="2" height="15" fill="rgb(207,47,48)"/><text x="856.00" y="350.50"></text></g><g><title>array_sum (methods.c) (20 samples, 2.17%)</title><rect x="830" y="212" width="26" height="15" fill="rgb(230,16,36)"/><text x="833.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (20 samples, 2.17%)</title><rect x="830" y="228" width="26" height="15" fill="rgb(231,70,1)"/><text x="833.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (20 samples, 2.17%)</title><rect x="830" y="244" width="26" height="15" fill="rgb(208,109,41)"/><text x="833.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (20 samples, 2.17%)</title><rect x="830" y="260" width="26" height="15" fill="rgb(207,198,8)"/><text x="833.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (20 samples, 2.17%)</title><rect x="830" y="276" width="26" height="15" fill="rgb(247,132,4)"/><text x="833.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (19 samples, 2.07%)</title><rect x="832" y="292" width="24" height="15" fill="rgb(208,35,5)"/><text x="835.00" y="302.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="855" y="308" width="1" height="15" fill="rgb(226,40,19)"/><text x="858.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="855" y="324" width="1" height="15" fill="rgb(218,182,44)"/><text x="858.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="855" y="340" width="1" height="15" fill="rgb(252,193,37)"/><text x="858.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="862" y="356" width="3" height="15" fill="rgb(210,176,24)"/><text x="865.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="862" y="372" width="3" height="15" fill="rgb(246,73,45)"/><text x="865.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="862" y="388" width="3" height="15" fill="rgb(227,156,12)"/><text x="865.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="862" y="404" width="3" height="15" fill="rgb(242,158,34)"/><text x="865.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="862" y="420" width="3" height="15" fill="rgb(235,89,31)"/><text x="865.00" y="430.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="865" y="388" width="1" height="15" fill="rgb(231,30,35)"/><text x="868.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="865" y="404" width="1" height="15" fill="rgb(248,116,47)"/><text x="868.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="865" y="420" width="1" height="15" fill="rgb(231,38,54)"/><text x="868.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="865" y="436" width="1" height="15" fill="rgb(237,84,4)"/><text x="868.00" y="446.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="865" y="452" width="1" height="15" fill="rgb(210,142,10)"/><text x="868.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 0.87%)</title><rect x="865" y="372" width="10" height="15" fill="rgb(222,147,1)"/><text x="868.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (7 samples, 0.76%)</title><rect x="866" y="388" width="9" height="15" fill="rgb(207,120,36)"/><text x="869.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (7 samples, 0.76%)</title><rect x="866" y="404" width="9" height="15" fill="rgb(228,103,34)"/><text x="869.00" y="414.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.22%)</title><rect x="875" y="388" width="3" height="15" fill="rgb(243,175,52)"/><text x="878.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.22%)</title><rect x="875" y="404" width="3" height="15" fill="rgb(238,42,36)"/><text x="878.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (2 samples, 0.22%)</title><rect x="875" y="420" width="3" height="15" fill="rgb(224,12,22)"/><text x="878.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.22%)</title><rect x="875" y="436" width="3" height="15" fill="rgb(231,103,28)"/><text x="878.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (2 samples, 0.22%)</title><rect x="875" y="452" width="3" height="15" fill="rgb(221,68,43)"/><text x="878.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (2 samples, 0.22%)</title><rect x="875" y="468" width="3" height="15" fill="rgb(238,123,40)"/><text x="878.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (13 samples, 1.41%)</title><rect x="862" y="324" width="17" height="15" fill="rgb(209,93,16)"/><text x="865.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.41%)</title><rect x="862" y="340" width="17" height="15" fill="rgb(210,163,41)"/><text x="865.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.20%)</title><rect x="865" y="356" width="14" height="15" fill="rgb(221,128,45)"/><text x="868.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.33%)</title><rect x="875" y="372" width="4" height="15" fill="rgb(224,104,29)"/><text x="878.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="878" y="388" width="1" height="15" fill="rgb(235,78,21)"/><text x="881.00" y="398.50"></text></g><g><title>locate_key (ufunc_object.c) (1 samples, 0.11%)</title><rect x="878" y="404" width="1" height="15" fill="rgb(213,165,37)"/><text x="881.00" y="414.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.43%)</title><rect x="883" y="340" width="5" height="15" fill="rgb(243,226,32)"/><text x="886.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="892" y="388" width="1" height="15" fill="rgb(238,60,25)"/><text x="895.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="892" y="404" width="1" height="15" fill="rgb(243,109,12)"/><text x="895.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="892" y="420" width="1" height="15" fill="rgb(208,191,16)"/><text x="895.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (7 samples, 0.76%)</title><rect x="888" y="340" width="9" height="15" fill="rgb(233,155,26)"/><text x="891.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 0.76%)</title><rect x="888" y="356" width="9" height="15" fill="rgb(250,68,6)"/><text x="891.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (5 samples, 0.54%)</title><rect x="891" y="372" width="6" height="15" fill="rgb(206,153,2)"/><text x="894.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.33%)</title><rect x="893" y="388" width="4" height="15" fill="rgb(229,190,8)"/><text x="896.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="895" y="404" width="2" height="15" fill="rgb(224,179,3)"/><text x="898.00" y="414.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="900" y="372" width="1" height="15" fill="rgb(230,6,19)"/><text x="903.00" y="382.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="901" y="372" width="1" height="15" fill="rgb(208,127,8)"/><text x="904.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="901" y="388" width="1" height="15" fill="rgb(247,116,22)"/><text x="904.00" y="398.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="902" y="372" width="3" height="15" fill="rgb(231,169,23)"/><text x="905.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="903" y="388" width="2" height="15" fill="rgb(222,212,48)"/><text x="906.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="903" y="404" width="2" height="15" fill="rgb(244,54,45)"/><text x="906.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="903" y="420" width="2" height="15" fill="rgb(211,97,13)"/><text x="906.00" y="430.50"></text></g><g><title>0x7fa9b2a9eeae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="910" y="388" width="1" height="15" fill="rgb(220,228,5)"/><text x="913.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="911" y="404" width="1" height="15" fill="rgb(224,82,34)"/><text x="914.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (42 samples, 4.57%)</title><rect x="860" y="244" width="54" height="15" fill="rgb(209,42,38)"/><text x="863.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (42 samples, 4.57%)</title><rect x="860" y="260" width="54" height="15" fill="rgb(209,208,2)"/><text x="863.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c) (42 samples, 4.57%)</title><rect x="860" y="276" width="54" height="15" fill="rgb(238,205,38)"/><text x="863.00" y="286.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (42 samples, 4.57%)</title><rect x="860" y="292" width="54" height="15" fill="rgb(220,211,17)"/><text x="863.00" y="302.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (42 samples, 4.57%)</title><rect x="860" y="308" width="54" height="15" fill="rgb(240,21,18)"/><text x="863.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (27 samples, 2.93%)</title><rect x="879" y="324" width="35" height="15" fill="rgb(247,19,26)"/><text x="882.00" y="334.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.41%)</title><rect x="897" y="340" width="17" height="15" fill="rgb(234,56,40)"/><text x="900.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.20%)</title><rect x="900" y="356" width="14" height="15" fill="rgb(236,173,5)"/><text x="903.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (7 samples, 0.76%)</title><rect x="905" y="372" width="9" height="15" fill="rgb(224,4,32)"/><text x="908.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="911" y="388" width="3" height="15" fill="rgb(232,204,2)"/><text x="914.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="912" y="404" width="2" height="15" fill="rgb(234,105,18)"/><text x="915.00" y="414.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 5.22%)</title><rect x="856" y="212" width="62" height="15" fill="rgb(220,72,37)"/><text x="859.00" y="222.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (47 samples, 5.11%)</title><rect x="857" y="228" width="61" height="15" fill="rgb(227,104,48)"/><text x="860.00" y="238.50">array_..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.33%)</title><rect x="914" y="244" width="4" height="15" fill="rgb(252,194,21)"/><text x="917.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.33%)</title><rect x="914" y="260" width="4" height="15" fill="rgb(248,56,34)"/><text x="917.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.33%)</title><rect x="914" y="276" width="4" height="15" fill="rgb(247,139,52)"/><text x="917.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.33%)</title><rect x="914" y="292" width="4" height="15" fill="rgb(251,128,6)"/><text x="917.00" y="302.50"></text></g><g><title>0x7fa98c4cbf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="924" y="244" width="1" height="15" fill="rgb(222,109,0)"/><text x="927.00" y="254.50"></text></g><g><title>0x7fa98c4bbd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="924" y="260" width="1" height="15" fill="rgb(206,76,2)"/><text x="927.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.11%)</title><rect x="924" y="276" width="1" height="15" fill="rgb(215,222,33)"/><text x="927.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="924" y="292" width="1" height="15" fill="rgb(209,9,16)"/><text x="927.00" y="302.50"></text></g><g><title>0x7fa98c4da225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="925" y="276" width="3" height="15" fill="rgb(249,153,25)"/><text x="928.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.11%)</title><rect x="927" y="292" width="1" height="15" fill="rgb(242,185,20)"/><text x="930.00" y="302.50"></text></g><g><title>0x7fa98c4bed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="292" width="1" height="15" fill="rgb(243,212,8)"/><text x="931.00" y="302.50"></text></g><g><title>0x7fa98c4be666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="308" width="1" height="15" fill="rgb(233,171,12)"/><text x="931.00" y="318.50"></text></g><g><title>0x7fa98c4b42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="324" width="1" height="15" fill="rgb(238,60,18)"/><text x="931.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="340" width="1" height="15" fill="rgb(209,75,27)"/><text x="931.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="356" width="1" height="15" fill="rgb(235,93,2)"/><text x="931.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.11%)</title><rect x="928" y="372" width="1" height="15" fill="rgb(221,85,45)"/><text x="931.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="928" y="388" width="1" height="15" fill="rgb(234,72,15)"/><text x="931.00" y="398.50"></text></g><g><title>0x7fa98c4b1fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="929" y="308" width="1" height="15" fill="rgb(228,85,2)"/><text x="932.00" y="318.50"></text></g><g><title>0x7fa98c4b1902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="929" y="324" width="1" height="15" fill="rgb(229,104,48)"/><text x="932.00" y="334.50"></text></g><g><title>0x7fa98c4da2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="928" y="276" width="4" height="15" fill="rgb(231,74,49)"/><text x="931.00" y="286.50"></text></g><g><title>0x7fa98c4bee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="929" y="292" width="3" height="15" fill="rgb(227,62,13)"/><text x="932.00" y="302.50"></text></g><g><title>0x7fa98c4b2022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="930" y="308" width="2" height="15" fill="rgb(241,59,17)"/><text x="933.00" y="318.50"></text></g><g><title>0x7fa98c4da456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="932" y="276" width="1" height="15" fill="rgb(226,94,35)"/><text x="935.00" y="286.50"></text></g><g><title>0x7fa98c4da4b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="933" y="276" width="1" height="15" fill="rgb(249,96,47)"/><text x="936.00" y="286.50"></text></g><g><title>0x7fa98c4da511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="934" y="276" width="2" height="15" fill="rgb(252,67,25)"/><text x="937.00" y="286.50"></text></g><g><title>0x7fa98c4da592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="936" y="276" width="3" height="15" fill="rgb(219,154,52)"/><text x="939.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="937" y="292" width="2" height="15" fill="rgb(219,147,28)"/><text x="940.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.22%)</title><rect x="937" y="308" width="2" height="15" fill="rgb(249,32,54)"/><text x="940.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.11%)</title><rect x="938" y="324" width="1" height="15" fill="rgb(235,77,13)"/><text x="941.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="938" y="340" width="1" height="15" fill="rgb(221,88,30)"/><text x="941.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.11%)</title><rect x="938" y="356" width="1" height="15" fill="rgb(233,74,6)"/><text x="941.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.11%)</title><rect x="938" y="372" width="1" height="15" fill="rgb(241,160,22)"/><text x="941.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="388" width="1" height="15" fill="rgb(238,71,24)"/><text x="941.00" y="398.50"></text></g><g><title>0x7fa9b2aa9103 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="938" y="404" width="1" height="15" fill="rgb(228,168,29)"/><text x="941.00" y="414.50"></text></g><g><title>0x7fa98c4da6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="939" y="276" width="2" height="15" fill="rgb(223,181,30)"/><text x="942.00" y="286.50"></text></g><g><title>0x7fa98c4da887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="941" y="276" width="1" height="15" fill="rgb(217,227,10)"/><text x="944.00" y="286.50"></text></g><g><title>0x7fa98c4cbfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.52%)</title><rect x="925" y="244" width="18" height="15" fill="rgb(217,14,12)"/><text x="928.00" y="254.50"></text></g><g><title>0x7fa98c4db405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.52%)</title><rect x="925" y="260" width="18" height="15" fill="rgb(207,72,22)"/><text x="928.00" y="270.50"></text></g><g><title>0x7fa98c4dac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="942" y="276" width="1" height="15" fill="rgb(241,12,32)"/><text x="945.00" y="286.50"></text></g><g><title>0x7fa98c4b256c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="942" y="292" width="1" height="15" fill="rgb(209,81,7)"/><text x="945.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (7 samples, 0.76%)</title><rect x="946" y="292" width="9" height="15" fill="rgb(235,224,27)"/><text x="949.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (10 samples, 1.09%)</title><rect x="943" y="276" width="13" height="15" fill="rgb(216,146,11)"/><text x="946.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="955" y="292" width="1" height="15" fill="rgb(238,57,30)"/><text x="958.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="955" y="308" width="1" height="15" fill="rgb(210,24,30)"/><text x="958.00" y="318.50"></text></g><g><title>0x7fa98c4ccd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 2.83%)</title><rect x="924" y="228" width="33" height="15" fill="rgb(211,96,11)"/><text x="927.00" y="238.50">0x..</text></g><g><title>0x7fa98c4cc05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.20%)</title><rect x="943" y="244" width="14" height="15" fill="rgb(219,149,1)"/><text x="946.00" y="254.50"></text></g><g><title>array_take (methods.c) (11 samples, 1.20%)</title><rect x="943" y="260" width="14" height="15" fill="rgb(207,163,5)"/><text x="946.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="956" y="276" width="1" height="15" fill="rgb(243,170,30)"/><text x="959.00" y="286.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.22%)</title><rect x="975" y="260" width="3" height="15" fill="rgb(245,66,8)"/><text x="978.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 0.54%)</title><rect x="978" y="260" width="6" height="15" fill="rgb(219,177,21)"/><text x="981.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="983" y="276" width="1" height="15" fill="rgb(241,157,45)"/><text x="986.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 0.54%)</title><rect x="984" y="260" width="7" height="15" fill="rgb(231,117,19)"/><text x="987.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.22%)</title><rect x="988" y="276" width="3" height="15" fill="rgb(218,128,48)"/><text x="991.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(250,228,17)"/><text x="992.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.22%)</title><rect x="991" y="260" width="2" height="15" fill="rgb(238,55,21)"/><text x="994.00" y="270.50"></text></g><g><title>0x7fa9b2a9e730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="992" y="276" width="1" height="15" fill="rgb(216,50,45)"/><text x="995.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="993" y="260" width="2" height="15" fill="rgb(248,38,20)"/><text x="996.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="993" y="276" width="2" height="15" fill="rgb(214,106,30)"/><text x="996.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.11%)</title><rect x="993" y="292" width="2" height="15" fill="rgb(239,119,9)"/><text x="996.00" y="302.50"></text></g><g><title>0x7fa9b2b66df0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="993" y="308" width="2" height="15" fill="rgb(210,59,14)"/><text x="996.00" y="318.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.22%)</title><rect x="995" y="260" width="2" height="15" fill="rgb(234,25,10)"/><text x="998.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (37 samples, 4.02%)</title><rect x="957" y="228" width="48" height="15" fill="rgb(218,173,21)"/><text x="960.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (35 samples, 3.80%)</title><rect x="960" y="244" width="45" height="15" fill="rgb(225,220,9)"/><text x="963.00" y="254.50">chec..</text></g><g><title>simplefilter (warnings.py) (6 samples, 0.65%)</title><rect x="997" y="260" width="8" height="15" fill="rgb(247,111,11)"/><text x="1000.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (5 samples, 0.54%)</title><rect x="998" y="276" width="7" height="15" fill="rgb(233,154,4)"/><text x="1001.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1005" y="228" width="1" height="15" fill="rgb(214,88,22)"/><text x="1008.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1005" y="244" width="1" height="15" fill="rgb(243,24,15)"/><text x="1008.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.11%)</title><rect x="1005" y="260" width="1" height="15" fill="rgb(212,8,1)"/><text x="1008.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1006" y="228" width="1" height="15" fill="rgb(225,35,12)"/><text x="1009.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1006" y="244" width="1" height="15" fill="rgb(233,115,24)"/><text x="1009.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1006" y="260" width="1" height="15" fill="rgb(218,47,23)"/><text x="1009.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1007" y="260" width="2" height="15" fill="rgb(231,124,4)"/><text x="1010.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1007" y="276" width="2" height="15" fill="rgb(240,102,52)"/><text x="1010.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1007" y="292" width="2" height="15" fill="rgb(216,47,38)"/><text x="1010.00" y="302.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1009" y="276" width="1" height="15" fill="rgb(238,107,12)"/><text x="1012.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1009" y="292" width="1" height="15" fill="rgb(250,168,18)"/><text x="1012.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="1011" y="292" width="1" height="15" fill="rgb(236,141,41)"/><text x="1014.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1011" y="308" width="1" height="15" fill="rgb(218,73,7)"/><text x="1014.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="1011" y="324" width="1" height="15" fill="rgb(244,93,43)"/><text x="1014.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1011" y="340" width="1" height="15" fill="rgb(226,222,37)"/><text x="1014.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1010" y="276" width="4" height="15" fill="rgb(209,90,9)"/><text x="1013.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1012" y="292" width="2" height="15" fill="rgb(217,147,9)"/><text x="1015.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.11%)</title><rect x="1012" y="308" width="2" height="15" fill="rgb(210,113,43)"/><text x="1015.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(217,106,31)"/><text x="1015.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1012" y="340" width="2" height="15" fill="rgb(222,141,26)"/><text x="1015.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1012" y="356" width="2" height="15" fill="rgb(205,71,27)"/><text x="1015.00" y="366.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h) (1 samples, 0.11%)</title><rect x="1012" y="372" width="2" height="15" fill="rgb(211,197,25)"/><text x="1015.00" y="382.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 0.65%)</title><rect x="1007" y="228" width="8" height="15" fill="rgb(215,7,12)"/><text x="1010.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.65%)</title><rect x="1007" y="244" width="8" height="15" fill="rgb(211,123,22)"/><text x="1010.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.54%)</title><rect x="1009" y="260" width="6" height="15" fill="rgb(239,205,46)"/><text x="1012.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1014" y="276" width="1" height="15" fill="rgb(235,71,24)"/><text x="1017.00" y="286.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1015" y="244" width="1" height="15" fill="rgb(251,176,27)"/><text x="1018.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.22%)</title><rect x="1015" y="228" width="3" height="15" fill="rgb(222,61,42)"/><text x="1018.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.11%)</title><rect x="1016" y="244" width="2" height="15" fill="rgb(247,25,41)"/><text x="1019.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.33%)</title><rect x="1020" y="292" width="4" height="15" fill="rgb(242,153,25)"/><text x="1023.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.33%)</title><rect x="1020" y="308" width="4" height="15" fill="rgb(233,146,26)"/><text x="1023.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.33%)</title><rect x="1020" y="324" width="4" height="15" fill="rgb(216,203,34)"/><text x="1023.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="1021" y="340" width="3" height="15" fill="rgb(227,39,20)"/><text x="1024.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="1021" y="356" width="3" height="15" fill="rgb(252,193,17)"/><text x="1024.00" y="366.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.11%)</title><rect x="1024" y="308" width="1" height="15" fill="rgb(231,28,10)"/><text x="1027.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.11%)</title><rect x="1025" y="308" width="2" height="15" fill="rgb(241,4,44)"/><text x="1028.00" y="318.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1028" y="356" width="1" height="15" fill="rgb(245,109,0)"/><text x="1031.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1029" y="356" width="1" height="15" fill="rgb(223,224,20)"/><text x="1032.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.22%)</title><rect x="1030" y="356" width="3" height="15" fill="rgb(226,126,39)"/><text x="1033.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.54%)</title><rect x="1028" y="340" width="6" height="15" fill="rgb(252,201,3)"/><text x="1031.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1033" y="356" width="1" height="15" fill="rgb(207,132,40)"/><text x="1036.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="1034" y="340" width="2" height="15" fill="rgb(224,51,33)"/><text x="1037.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="1034" y="356" width="2" height="15" fill="rgb(246,110,42)"/><text x="1037.00" y="366.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1034" y="372" width="2" height="15" fill="rgb(240,52,40)"/><text x="1037.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="1036" y="340" width="1" height="15" fill="rgb(218,39,8)"/><text x="1039.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1036" y="356" width="1" height="15" fill="rgb(217,126,2)"/><text x="1039.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1036" y="372" width="1" height="15" fill="rgb(229,165,36)"/><text x="1039.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1036" y="388" width="1" height="15" fill="rgb(247,29,26)"/><text x="1039.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (12 samples, 1.30%)</title><rect x="1042" y="356" width="15" height="15" fill="rgb(230,102,49)"/><text x="1045.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 0.54%)</title><rect x="1051" y="372" width="6" height="15" fill="rgb(246,192,22)"/><text x="1054.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (32 samples, 3.48%)</title><rect x="1027" y="324" width="41" height="15" fill="rgb(237,160,15)"/><text x="1030.00" y="334.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (24 samples, 2.61%)</title><rect x="1037" y="340" width="31" height="15" fill="rgb(254,34,47)"/><text x="1040.00" y="350.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (8 samples, 0.87%)</title><rect x="1057" y="356" width="11" height="15" fill="rgb(216,105,33)"/><text x="1060.00" y="366.50"></text></g><g><title>array_sum (methods.c) (40 samples, 4.35%)</title><rect x="1018" y="228" width="51" height="15" fill="rgb(237,51,28)"/><text x="1021.00" y="238.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (40 samples, 4.35%)</title><rect x="1018" y="244" width="51" height="15" fill="rgb(248,153,39)"/><text x="1021.00" y="254.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (40 samples, 4.35%)</title><rect x="1018" y="260" width="51" height="15" fill="rgb(245,46,54)"/><text x="1021.00" y="270.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (38 samples, 4.13%)</title><rect x="1020" y="276" width="49" height="15" fill="rgb(245,108,9)"/><text x="1023.00" y="286.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (35 samples, 3.80%)</title><rect x="1024" y="292" width="45" height="15" fill="rgb(222,172,29)"/><text x="1027.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (33 samples, 3.59%)</title><rect x="1027" y="308" width="42" height="15" fill="rgb(222,169,16)"/><text x="1030.00" y="318.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1068" y="324" width="1" height="15" fill="rgb(232,164,47)"/><text x="1071.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1068" y="340" width="1" height="15" fill="rgb(222,81,15)"/><text x="1071.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1068" y="356" width="1" height="15" fill="rgb(239,200,3)"/><text x="1071.00" y="366.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 0.76%)</title><rect x="1069" y="228" width="9" height="15" fill="rgb(236,197,53)"/><text x="1072.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.65%)</title><rect x="1070" y="244" width="8" height="15" fill="rgb(207,98,36)"/><text x="1073.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.22%)</title><rect x="1075" y="260" width="3" height="15" fill="rgb(235,50,43)"/><text x="1078.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1078" y="260" width="1" height="15" fill="rgb(227,168,24)"/><text x="1081.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (9 samples, 0.98%)</title><rect x="1080" y="292" width="12" height="15" fill="rgb(227,50,45)"/><text x="1083.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (9 samples, 0.98%)</title><rect x="1080" y="308" width="12" height="15" fill="rgb(253,65,8)"/><text x="1083.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (9 samples, 0.98%)</title><rect x="1080" y="324" width="12" height="15" fill="rgb(233,42,10)"/><text x="1083.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 0.98%)</title><rect x="1080" y="340" width="12" height="15" fill="rgb(209,76,9)"/><text x="1083.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1092" y="308" width="1" height="15" fill="rgb(245,184,14)"/><text x="1095.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1093" y="308" width="2" height="15" fill="rgb(235,119,2)"/><text x="1096.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="1092" y="292" width="4" height="15" fill="rgb(223,147,5)"/><text x="1095.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1095" y="308" width="1" height="15" fill="rgb(243,15,38)"/><text x="1098.00" y="318.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.11%)</title><rect x="1096" y="292" width="1" height="15" fill="rgb(254,223,2)"/><text x="1099.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (11 samples, 1.20%)</title><rect x="1097" y="292" width="14" height="15" fill="rgb(215,45,34)"/><text x="1100.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (11 samples, 1.20%)</title><rect x="1097" y="308" width="14" height="15" fill="rgb(245,68,48)"/><text x="1100.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (10 samples, 1.09%)</title><rect x="1098" y="324" width="13" height="15" fill="rgb(213,9,25)"/><text x="1101.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 0.76%)</title><rect x="1102" y="340" width="9" height="15" fill="rgb(250,135,28)"/><text x="1105.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 2.83%)</title><rect x="1079" y="260" width="34" height="15" fill="rgb(214,85,48)"/><text x="1082.00" y="270.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (25 samples, 2.72%)</title><rect x="1080" y="276" width="33" height="15" fill="rgb(237,154,27)"/><text x="1083.00" y="286.50">it..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1111" y="292" width="2" height="15" fill="rgb(232,193,14)"/><text x="1114.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 3.04%)</title><rect x="1078" y="244" width="36" height="15" fill="rgb(226,49,12)"/><text x="1081.00" y="254.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1113" y="260" width="1" height="15" fill="rgb(211,172,48)"/><text x="1116.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1113" y="276" width="1" height="15" fill="rgb(217,19,28)"/><text x="1116.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (154 samples, 16.74%)</title><rect x="918" y="212" width="197" height="15" fill="rgb(248,166,22)"/><text x="921.00" y="222.50">predict_proba (sklearn/tr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 3.15%)</title><rect x="1078" y="228" width="37" height="15" fill="rgb(229,17,41)"/><text x="1081.00" y="238.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1114" y="244" width="1" height="15" fill="rgb(228,119,8)"/><text x="1117.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1114" y="260" width="1" height="15" fill="rgb(238,218,17)"/><text x="1117.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1115" y="228" width="1" height="15" fill="rgb(249,8,11)"/><text x="1118.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1115" y="244" width="1" height="15" fill="rgb(206,138,50)"/><text x="1118.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1116" y="244" width="2" height="15" fill="rgb(238,154,34)"/><text x="1119.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1116" y="260" width="2" height="15" fill="rgb(228,152,0)"/><text x="1119.00" y="270.50"></text></g><g><title>0x7fa9b1cac0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1123" y="292" width="1" height="15" fill="rgb(241,58,30)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7fa9b2c5add0 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1124" y="292" width="3" height="15" fill="rgb(233,165,32)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7fa9b2c5adee (libm-2.29.so) (3 samples, 0.33%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(245,77,28)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1131" y="292" width="1" height="15" fill="rgb(231,126,54)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae25 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(233,48,42)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae40 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(220,131,18)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae4d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1136" y="292" width="1" height="15" fill="rgb(219,5,17)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae61 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(219,73,29)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae6e (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1139" y="292" width="3" height="15" fill="rgb(222,113,26)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1142" y="292" width="1" height="15" fill="rgb(222,165,18)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7fa9b2c5ae8d (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(220,46,16)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fa9b2c5aea2 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(231,194,46)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7fa9b2c5aeb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="292" width="1" height="15" fill="rgb(223,115,38)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7fa9b2c5aec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(218,26,9)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7fa9b2c5aeca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1150" y="292" width="1" height="15" fill="rgb(247,98,52)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7fa9b2c5aeda (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(254,89,31)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fa9b2c5aeee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(223,97,8)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7fa9b2c5aef6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1156" y="292" width="1" height="15" fill="rgb(214,65,2)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fa9b2c5aefa (libm-2.29.so) (4 samples, 0.43%)</title><rect x="1157" y="292" width="6" height="15" fill="rgb(240,2,45)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7fa9b2c5af97 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1163" y="292" width="1" height="15" fill="rgb(227,57,34)"/><text x="1166.00" y="302.50"></text></g><g><title>0x7fa9b2c5afd3 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(244,111,29)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7fa9b2c5b013 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(245,199,34)"/><text x="1169.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="1" height="15" fill="rgb(236,130,2)"/><text x="1171.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (41 samples, 4.46%)</title><rect x="1118" y="244" width="52" height="15" fill="rgb(248,156,10)"/><text x="1121.00" y="254.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (41 samples, 4.46%)</title><rect x="1118" y="260" width="52" height="15" fill="rgb(244,189,0)"/><text x="1121.00" y="270.50">trivi..</text></g><g><title>PyUFunc_d_d (loops.c.src) (41 samples, 4.46%)</title><rect x="1118" y="276" width="52" height="15" fill="rgb(228,222,43)"/><text x="1121.00" y="286.50">PyUFu..</text></g><g><title>npy_log (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="1169" y="292" width="1" height="15" fill="rgb(248,217,26)"/><text x="1172.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (306 samples, 33.26%)</title><rect x="779" y="180" width="393" height="15" fill="rgb(223,196,43)"/><text x="782.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (305 samples, 33.15%)</title><rect x="780" y="196" width="392" height="15" fill="rgb(250,13,20)"/><text x="783.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (44 samples, 4.78%)</title><rect x="1115" y="212" width="57" height="15" fill="rgb(231,212,6)"/><text x="1118.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (43 samples, 4.67%)</title><rect x="1116" y="228" width="56" height="15" fill="rgb(240,62,33)"/><text x="1119.00" y="238.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1170" y="244" width="2" height="15" fill="rgb(237,130,21)"/><text x="1173.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(243,74,14)"/><text x="1173.00" y="270.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1172" y="180" width="1" height="15" fill="rgb(227,224,10)"/><text x="1175.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1172" y="196" width="1" height="15" fill="rgb(241,53,28)"/><text x="1175.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1172" y="212" width="1" height="15" fill="rgb(231,121,31)"/><text x="1175.00" y="222.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="1173" y="228" width="1" height="15" fill="rgb(212,3,13)"/><text x="1176.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1173" y="244" width="1" height="15" fill="rgb(208,210,13)"/><text x="1176.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1173" y="260" width="1" height="15" fill="rgb(243,89,33)"/><text x="1176.00" y="270.50"></text></g><g><title>array_add (number.c) (2 samples, 0.22%)</title><rect x="1173" y="180" width="2" height="15" fill="rgb(217,108,3)"/><text x="1176.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1173" y="196" width="2" height="15" fill="rgb(210,121,17)"/><text x="1176.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1173" y="212" width="2" height="15" fill="rgb(211,185,32)"/><text x="1176.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1174" y="228" width="1" height="15" fill="rgb(242,58,52)"/><text x="1177.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1174" y="244" width="1" height="15" fill="rgb(209,78,42)"/><text x="1177.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="1174" y="260" width="1" height="15" fill="rgb(246,125,51)"/><text x="1177.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1174" y="276" width="1" height="15" fill="rgb(220,68,29)"/><text x="1177.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1174" y="292" width="1" height="15" fill="rgb(209,164,5)"/><text x="1177.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1174" y="308" width="1" height="15" fill="rgb(226,63,16)"/><text x="1177.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="1175" y="228" width="2" height="15" fill="rgb(237,45,49)"/><text x="1178.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(218,44,31)"/><text x="1178.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(226,56,11)"/><text x="1178.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(237,155,4)"/><text x="1178.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="1175" y="292" width="2" height="15" fill="rgb(242,108,51)"/><text x="1178.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (316 samples, 34.35%)</title><rect x="773" y="100" width="405" height="15" fill="rgb(233,199,31)"/><text x="776.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1000_50_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (316 samples, 34.35%)</title><rect x="773" y="116" width="405" height="15" fill="rgb(214,156,18)"/><text x="776.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (316 samples, 34.35%)</title><rect x="773" y="132" width="405" height="15" fill="rgb(226,37,23)"/><text x="776.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (316 samples, 34.35%)</title><rect x="773" y="148" width="405" height="15" fill="rgb(212,34,35)"/><text x="776.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (312 samples, 33.91%)</title><rect x="778" y="164" width="400" height="15" fill="rgb(210,184,0)"/><text x="781.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.p..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1175" y="180" width="3" height="15" fill="rgb(230,9,3)"/><text x="1178.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1175" y="196" width="3" height="15" fill="rgb(215,83,30)"/><text x="1178.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1175" y="212" width="3" height="15" fill="rgb(212,115,51)"/><text x="1178.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1177" y="228" width="1" height="15" fill="rgb(212,13,11)"/><text x="1180.00" y="238.50"></text></g><g><title>add_initializer (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1178" y="228" width="1" height="15" fill="rgb(253,89,18)"/><text x="1181.00" y="238.50"></text></g><g><title>make_tensor (onnx/helper.py) (1 samples, 0.11%)</title><rect x="1178" y="244" width="1" height="15" fill="rgb(247,123,50)"/><text x="1181.00" y="254.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.33%)</title><rect x="1178" y="116" width="4" height="15" fill="rgb(213,125,12)"/><text x="1181.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.33%)</title><rect x="1178" y="132" width="4" height="15" fill="rgb(224,28,32)"/><text x="1181.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.33%)</title><rect x="1178" y="148" width="4" height="15" fill="rgb(226,159,47)"/><text x="1181.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.33%)</title><rect x="1178" y="164" width="4" height="15" fill="rgb(208,70,31)"/><text x="1181.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (3 samples, 0.33%)</title><rect x="1178" y="180" width="4" height="15" fill="rgb(218,142,2)"/><text x="1181.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.33%)</title><rect x="1178" y="196" width="4" height="15" fill="rgb(211,194,11)"/><text x="1181.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (3 samples, 0.33%)</title><rect x="1178" y="212" width="4" height="15" fill="rgb(236,76,7)"/><text x="1181.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.22%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(252,21,16)"/><text x="1182.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.11%)</title><rect x="1181" y="244" width="1" height="15" fill="rgb(216,119,0)"/><text x="1184.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1181" y="260" width="1" height="15" fill="rgb(227,166,48)"/><text x="1184.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1181" y="276" width="1" height="15" fill="rgb(217,129,15)"/><text x="1184.00" y="286.50"></text></g><g><title>google::protobuf::python::cmessage::InternalGetScalar (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1181" y="292" width="1" height="15" fill="rgb(226,123,4)"/><text x="1184.00" y="302.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1181" y="308" width="1" height="15" fill="rgb(232,226,24)"/><text x="1184.00" y="318.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (320 samples, 34.78%)</title><rect x="773" y="68" width="410" height="15" fill="rgb(211,109,16)"/><text x="776.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1000..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (320 samples, 34.78%)</title><rect x="773" y="84" width="410" height="15" fill="rgb(244,142,24)"/><text x="776.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_10..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.43%)</title><rect x="1178" y="100" width="5" height="15" fill="rgb(210,220,41)"/><text x="1181.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.11%)</title><rect x="1182" y="116" width="1" height="15" fill="rgb(240,159,49)"/><text x="1185.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.11%)</title><rect x="1182" y="132" width="1" height="15" fill="rgb(234,229,34)"/><text x="1185.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1182" y="148" width="1" height="15" fill="rgb(206,227,31)"/><text x="1185.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1182" y="164" width="1" height="15" fill="rgb(234,92,23)"/><text x="1185.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1182" y="180" width="1" height="15" fill="rgb(222,29,42)"/><text x="1185.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="1182" y="196" width="1" height="15" fill="rgb(224,218,39)"/><text x="1185.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1182" y="212" width="1" height="15" fill="rgb(226,39,20)"/><text x="1185.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.11%)</title><rect x="1182" y="228" width="1" height="15" fill="rgb(224,187,25)"/><text x="1185.00" y="238.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1183" y="180" width="1" height="15" fill="rgb(238,208,20)"/><text x="1186.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.11%)</title><rect x="1183" y="196" width="1" height="15" fill="rgb(225,35,31)"/><text x="1186.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1183" y="212" width="1" height="15" fill="rgb(205,168,7)"/><text x="1186.00" y="222.50"></text></g><g><title>0x7fa98c4cb7af (?) (1 samples, 0.11%)</title><rect x="1184" y="212" width="2" height="15" fill="rgb(210,50,14)"/><text x="1187.00" y="222.50"></text></g><g><title>0x7fa98c4b01e5 (?) (1 samples, 0.11%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(211,62,45)"/><text x="1187.00" y="238.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(206,126,39)"/><text x="1187.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.11%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(220,155,5)"/><text x="1187.00" y="270.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="1184" y="276" width="2" height="15" fill="rgb(252,26,0)"/><text x="1187.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="1184" y="292" width="2" height="15" fill="rgb(242,58,48)"/><text x="1187.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(214,63,43)"/><text x="1189.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(236,72,17)"/><text x="1189.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(213,6,41)"/><text x="1189.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.33%)</title><rect x="1184" y="180" width="4" height="15" fill="rgb(220,8,25)"/><text x="1187.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.33%)</title><rect x="1184" y="196" width="4" height="15" fill="rgb(214,30,15)"/><text x="1187.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(225,94,7)"/><text x="1190.00" y="222.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(246,95,47)"/><text x="1190.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(207,123,26)"/><text x="1190.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallMethO (mtrand.c) (1 samples, 0.11%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(242,94,32)"/><text x="1190.00" y="270.50"></text></g><g><title>_legacy_seeding (mt19937.c) (1 samples, 0.11%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(216,86,10)"/><text x="1190.00" y="286.50"></text></g><g><title>_legacy_seeding (mt19937.c) (1 samples, 0.11%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(220,65,0)"/><text x="1190.00" y="302.50"></text></g><g><title>mt19937_seed (mt19937.c) (1 samples, 0.11%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(206,64,28)"/><text x="1190.00" y="318.50"></text></g><g><title>all (920 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,17,15)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (920 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(220,187,50)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1000_50_12_float_.py) (5 samples, 0.54%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(238,105,0)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (5 samples, 0.54%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(208,222,48)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.54%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(234,128,19)"/><text x="1186.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.54%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(240,43,28)"/><text x="1186.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.54%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(229,196,48)"/><text x="1186.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.54%)</title><rect x="1183" y="148" width="7" height="15" fill="rgb(216,8,25)"/><text x="1186.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.54%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(232,40,18)"/><text x="1186.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.11%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(210,29,0)"/><text x="1191.00" y="190.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.11%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(245,52,24)"/><text x="1191.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(237,140,18)"/><text x="1191.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(227,50,22)"/><text x="1191.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(209,133,24)"/><text x="1191.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(229,75,39)"/><text x="1191.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(235,205,16)"/><text x="1191.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.11%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(246,118,40)"/><text x="1191.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(231,179,39)"/><text x="1191.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(213,58,5)"/><text x="1191.00" y="334.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(218,65,32)"/><text x="1191.00" y="350.50"></text></g></g></svg>