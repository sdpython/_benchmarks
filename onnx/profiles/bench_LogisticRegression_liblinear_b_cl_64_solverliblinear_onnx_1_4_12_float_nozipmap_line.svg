<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.41%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(247,99,38)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.41%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(253,170,1)"/><text x="13.00" y="190.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(234,103,37)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(228,147,34)"/><text x="13.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.41%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(220,24,22)"/><text x="13.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(208,48,17)"/><text x="13.00" y="254.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:18) (2 samples, 0.82%)</title><rect x="10" y="100" width="9" height="15" fill="rgb(210,84,22)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.82%)</title><rect x="10" y="116" width="9" height="15" fill="rgb(241,54,42)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.82%)</title><rect x="10" y="132" width="9" height="15" fill="rgb(215,31,36)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.82%)</title><rect x="10" y="148" width="9" height="15" fill="rgb(243,54,3)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.41%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(219,110,47)"/><text x="17.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(254,97,10)"/><text x="17.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.41%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(237,166,19)"/><text x="17.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.41%)</title><rect x="14" y="212" width="5" height="15" fill="rgb(214,190,45)"/><text x="17.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.41%)</title><rect x="43" y="164" width="5" height="15" fill="rgb(213,2,12)"/><text x="46.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 1.23%)</title><rect x="48" y="164" width="15" height="15" fill="rgb(221,62,22)"/><text x="51.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.82%)</title><rect x="53" y="180" width="10" height="15" fill="rgb(227,79,2)"/><text x="56.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.41%)</title><rect x="68" y="180" width="4" height="15" fill="rgb(253,125,35)"/><text x="71.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.23%)</title><rect x="72" y="180" width="15" height="15" fill="rgb(207,70,2)"/><text x="75.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.41%)</title><rect x="82" y="196" width="5" height="15" fill="rgb(248,64,2)"/><text x="85.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (13 samples, 5.33%)</title><rect x="39" y="148" width="62" height="15" fill="rgb(217,152,51)"/><text x="42.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 3.28%)</title><rect x="63" y="164" width="38" height="15" fill="rgb(221,195,43)"/><text x="66.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 1.23%)</title><rect x="87" y="180" width="14" height="15" fill="rgb(239,183,39)"/><text x="90.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.82%)</title><rect x="101" y="212" width="10" height="15" fill="rgb(250,95,37)"/><text x="104.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.41%)</title><rect x="106" y="228" width="5" height="15" fill="rgb(219,222,31)"/><text x="109.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 1.23%)</title><rect x="101" y="180" width="15" height="15" fill="rgb(241,211,50)"/><text x="104.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 1.23%)</title><rect x="101" y="196" width="15" height="15" fill="rgb(235,53,1)"/><text x="104.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.41%)</title><rect x="111" y="212" width="5" height="15" fill="rgb(232,123,47)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:455) (1 samples, 0.41%)</title><rect x="121" y="196" width="5" height="15" fill="rgb(243,93,49)"/><text x="124.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.41%)</title><rect x="126" y="196" width="4" height="15" fill="rgb(247,177,41)"/><text x="129.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:474) (1 samples, 0.41%)</title><rect x="130" y="212" width="5" height="15" fill="rgb(208,131,27)"/><text x="133.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.41%)</title><rect x="135" y="212" width="5" height="15" fill="rgb(248,126,10)"/><text x="138.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.41%)</title><rect x="140" y="212" width="5" height="15" fill="rgb(209,154,1)"/><text x="143.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.64%)</title><rect x="130" y="196" width="20" height="15" fill="rgb(221,189,16)"/><text x="133.00" y="206.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.41%)</title><rect x="145" y="212" width="5" height="15" fill="rgb(214,67,17)"/><text x="148.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.41%)</title><rect x="155" y="212" width="4" height="15" fill="rgb(213,40,16)"/><text x="158.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 1.23%)</title><rect x="150" y="196" width="14" height="15" fill="rgb(236,22,34)"/><text x="153.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.41%)</title><rect x="159" y="212" width="5" height="15" fill="rgb(216,77,33)"/><text x="162.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.41%)</title><rect x="159" y="228" width="5" height="15" fill="rgb(218,80,10)"/><text x="162.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.82%)</title><rect x="164" y="196" width="10" height="15" fill="rgb(239,209,16)"/><text x="167.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.41%)</title><rect x="169" y="212" width="5" height="15" fill="rgb(211,161,50)"/><text x="172.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1618) (1 samples, 0.41%)</title><rect x="169" y="228" width="5" height="15" fill="rgb(237,197,26)"/><text x="172.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.23%)</title><rect x="174" y="196" width="14" height="15" fill="rgb(215,216,20)"/><text x="177.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.41%)</title><rect x="184" y="212" width="4" height="15" fill="rgb(221,94,19)"/><text x="187.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.23%)</title><rect x="188" y="196" width="15" height="15" fill="rgb(227,10,53)"/><text x="191.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.41%)</title><rect x="198" y="212" width="5" height="15" fill="rgb(235,192,48)"/><text x="201.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.41%)</title><rect x="208" y="212" width="5" height="15" fill="rgb(241,64,14)"/><text x="211.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 1.23%)</title><rect x="203" y="196" width="14" height="15" fill="rgb(215,193,53)"/><text x="206.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.41%)</title><rect x="213" y="212" width="4" height="15" fill="rgb(235,178,25)"/><text x="216.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.41%)</title><rect x="237" y="228" width="5" height="15" fill="rgb(219,133,7)"/><text x="240.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 2.05%)</title><rect x="222" y="212" width="24" height="15" fill="rgb(229,187,11)"/><text x="225.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.41%)</title><rect x="242" y="228" width="4" height="15" fill="rgb(242,40,51)"/><text x="245.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 3.28%)</title><rect x="217" y="196" width="39" height="15" fill="rgb(242,196,36)"/><text x="220.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.82%)</title><rect x="246" y="212" width="10" height="15" fill="rgb(251,53,11)"/><text x="249.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.41%)</title><rect x="251" y="228" width="5" height="15" fill="rgb(254,206,7)"/><text x="254.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.23%)</title><rect x="256" y="212" width="15" height="15" fill="rgb(212,151,6)"/><text x="259.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.41%)</title><rect x="271" y="212" width="4" height="15" fill="rgb(228,92,25)"/><text x="274.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.41%)</title><rect x="271" y="228" width="4" height="15" fill="rgb(235,108,41)"/><text x="274.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.87%)</title><rect x="256" y="196" width="34" height="15" fill="rgb(223,220,30)"/><text x="259.00" y="206.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.23%)</title><rect x="275" y="212" width="15" height="15" fill="rgb(239,90,11)"/><text x="278.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.82%)</title><rect x="280" y="228" width="10" height="15" fill="rgb(216,54,20)"/><text x="283.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.82%)</title><rect x="280" y="244" width="10" height="15" fill="rgb(253,91,49)"/><text x="283.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (37 samples, 15.16%)</title><rect x="116" y="180" width="179" height="15" fill="rgb(219,72,40)"/><text x="119.00" y="190.50">decision_function (skle..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.41%)</title><rect x="290" y="196" width="5" height="15" fill="rgb(237,2,37)"/><text x="293.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.41%)</title><rect x="295" y="180" width="5" height="15" fill="rgb(252,43,19)"/><text x="298.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.41%)</title><rect x="295" y="196" width="5" height="15" fill="rgb(248,137,1)"/><text x="298.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.41%)</title><rect x="295" y="212" width="5" height="15" fill="rgb(219,223,41)"/><text x="298.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.41%)</title><rect x="295" y="228" width="5" height="15" fill="rgb(221,222,27)"/><text x="298.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.41%)</title><rect x="295" y="244" width="5" height="15" fill="rgb(251,72,25)"/><text x="298.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="309" y="212" width="5" height="15" fill="rgb(218,5,22)"/><text x="312.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.41%)</title><rect x="309" y="228" width="5" height="15" fill="rgb(235,22,41)"/><text x="312.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.41%)</title><rect x="309" y="244" width="5" height="15" fill="rgb(253,142,26)"/><text x="312.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.41%)</title><rect x="309" y="260" width="5" height="15" fill="rgb(227,14,16)"/><text x="312.00" y="270.50"></text></g><g><title>array_add (number.c:330) (3 samples, 1.23%)</title><rect x="305" y="196" width="14" height="15" fill="rgb(234,96,52)"/><text x="308.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.41%)</title><rect x="314" y="212" width="5" height="15" fill="rgb(249,32,17)"/><text x="317.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.41%)</title><rect x="319" y="196" width="5" height="15" fill="rgb(228,134,18)"/><text x="322.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.41%)</title><rect x="319" y="212" width="5" height="15" fill="rgb(231,162,21)"/><text x="322.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.41%)</title><rect x="319" y="228" width="5" height="15" fill="rgb(238,40,21)"/><text x="322.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.41%)</title><rect x="329" y="212" width="5" height="15" fill="rgb(254,52,43)"/><text x="332.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.41%)</title><rect x="329" y="228" width="5" height="15" fill="rgb(217,201,35)"/><text x="332.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.41%)</title><rect x="329" y="244" width="5" height="15" fill="rgb(216,173,15)"/><text x="332.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.41%)</title><rect x="329" y="260" width="5" height="15" fill="rgb(241,62,14)"/><text x="332.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.41%)</title><rect x="334" y="228" width="4" height="15" fill="rgb(227,35,46)"/><text x="337.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2553) (1 samples, 0.41%)</title><rect x="338" y="244" width="5" height="15" fill="rgb(227,197,30)"/><text x="341.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.41%)</title><rect x="343" y="244" width="5" height="15" fill="rgb(229,172,36)"/><text x="346.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.41%)</title><rect x="343" y="260" width="5" height="15" fill="rgb(215,79,7)"/><text x="346.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.41%)</title><rect x="348" y="260" width="5" height="15" fill="rgb(220,83,16)"/><text x="351.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.41%)</title><rect x="348" y="276" width="5" height="15" fill="rgb(237,97,22)"/><text x="351.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.82%)</title><rect x="348" y="244" width="10" height="15" fill="rgb(241,208,43)"/><text x="351.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.41%)</title><rect x="353" y="260" width="5" height="15" fill="rgb(251,149,37)"/><text x="356.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.41%)</title><rect x="353" y="276" width="5" height="15" fill="rgb(205,167,13)"/><text x="356.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.41%)</title><rect x="353" y="292" width="5" height="15" fill="rgb(229,192,3)"/><text x="356.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.41%)</title><rect x="353" y="308" width="5" height="15" fill="rgb(211,58,1)"/><text x="356.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.41%)</title><rect x="353" y="324" width="5" height="15" fill="rgb(247,1,29)"/><text x="356.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.41%)</title><rect x="353" y="340" width="5" height="15" fill="rgb(226,38,14)"/><text x="356.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.41%)</title><rect x="358" y="276" width="5" height="15" fill="rgb(225,76,45)"/><text x="361.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.41%)</title><rect x="358" y="292" width="5" height="15" fill="rgb(219,179,44)"/><text x="361.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.41%)</title><rect x="358" y="308" width="5" height="15" fill="rgb(213,215,50)"/><text x="361.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.41%)</title><rect x="358" y="324" width="5" height="15" fill="rgb(205,136,6)"/><text x="361.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.41%)</title><rect x="363" y="308" width="4" height="15" fill="rgb(240,223,15)"/><text x="366.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.41%)</title><rect x="367" y="308" width="5" height="15" fill="rgb(245,164,26)"/><text x="370.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:52) (1 samples, 0.41%)</title><rect x="367" y="324" width="5" height="15" fill="rgb(245,99,51)"/><text x="370.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (4 samples, 1.64%)</title><rect x="358" y="244" width="19" height="15" fill="rgb(213,38,16)"/><text x="361.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.64%)</title><rect x="358" y="260" width="19" height="15" fill="rgb(230,107,44)"/><text x="361.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 1.23%)</title><rect x="363" y="276" width="14" height="15" fill="rgb(224,16,40)"/><text x="366.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.23%)</title><rect x="363" y="292" width="14" height="15" fill="rgb(205,60,11)"/><text x="366.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.41%)</title><rect x="372" y="308" width="5" height="15" fill="rgb(226,139,38)"/><text x="375.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.41%)</title><rect x="372" y="324" width="5" height="15" fill="rgb(206,51,28)"/><text x="375.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.41%)</title><rect x="372" y="340" width="5" height="15" fill="rgb(244,102,35)"/><text x="375.00" y="350.50"></text></g><g><title>0x7f86672bba86 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="372" y="356" width="5" height="15" fill="rgb(253,79,29)"/><text x="375.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2961) (1 samples, 0.41%)</title><rect x="377" y="244" width="5" height="15" fill="rgb(229,4,49)"/><text x="380.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:213) (1 samples, 0.41%)</title><rect x="377" y="260" width="5" height="15" fill="rgb(207,215,42)"/><text x="380.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.41%)</title><rect x="382" y="244" width="5" height="15" fill="rgb(228,16,37)"/><text x="385.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.41%)</title><rect x="382" y="260" width="5" height="15" fill="rgb(241,83,0)"/><text x="385.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.41%)</title><rect x="382" y="276" width="5" height="15" fill="rgb(236,78,38)"/><text x="385.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.41%)</title><rect x="382" y="292" width="5" height="15" fill="rgb(251,28,25)"/><text x="385.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (61 samples, 25.00%)</title><rect x="101" y="164" width="295" height="15" fill="rgb(244,50,9)"/><text x="104.00" y="174.50">_predict_proba_lr (sklearn/linear_model..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (20 samples, 8.20%)</title><rect x="300" y="180" width="96" height="15" fill="rgb(251,71,27)"/><text x="303.00" y="190.50">decision_fu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (15 samples, 6.15%)</title><rect x="324" y="196" width="72" height="15" fill="rgb(206,19,43)"/><text x="327.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 5.33%)</title><rect x="334" y="212" width="62" height="15" fill="rgb(243,145,22)"/><text x="337.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 4.92%)</title><rect x="338" y="228" width="58" height="15" fill="rgb(216,126,10)"/><text x="341.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.82%)</title><rect x="387" y="244" width="9" height="15" fill="rgb(228,173,26)"/><text x="390.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (2 samples, 0.82%)</title><rect x="387" y="260" width="9" height="15" fill="rgb(219,133,44)"/><text x="390.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (2 samples, 0.82%)</title><rect x="387" y="276" width="9" height="15" fill="rgb(253,112,11)"/><text x="390.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.82%)</title><rect x="387" y="292" width="9" height="15" fill="rgb(240,94,7)"/><text x="390.00" y="302.50"></text></g><g><title>0x7f86673e1151 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="411" y="260" width="5" height="15" fill="rgb(247,118,38)"/><text x="414.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.82%)</title><rect x="411" y="180" width="10" height="15" fill="rgb(234,136,20)"/><text x="414.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.82%)</title><rect x="411" y="196" width="10" height="15" fill="rgb(243,213,42)"/><text x="414.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.82%)</title><rect x="411" y="212" width="10" height="15" fill="rgb(217,105,0)"/><text x="414.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.82%)</title><rect x="411" y="228" width="10" height="15" fill="rgb(254,123,33)"/><text x="414.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.82%)</title><rect x="411" y="244" width="10" height="15" fill="rgb(250,191,7)"/><text x="414.00" y="254.50"></text></g><g><title>0x7f86673e1ff0 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="416" y="260" width="5" height="15" fill="rgb(213,105,32)"/><text x="419.00" y="270.50"></text></g><g><title>0x7f864972a25c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="421" y="260" width="4" height="15" fill="rgb(220,45,17)"/><text x="424.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.82%)</title><rect x="421" y="180" width="9" height="15" fill="rgb(205,73,28)"/><text x="424.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.82%)</title><rect x="421" y="196" width="9" height="15" fill="rgb(234,214,29)"/><text x="424.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.82%)</title><rect x="421" y="212" width="9" height="15" fill="rgb(246,175,26)"/><text x="424.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.82%)</title><rect x="421" y="228" width="9" height="15" fill="rgb(235,5,20)"/><text x="424.00" y="238.50"></text></g><g><title>0x7f86497099dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="421" y="244" width="9" height="15" fill="rgb(207,76,46)"/><text x="424.00" y="254.50"></text></g><g><title>0x7f864972a265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="425" y="260" width="5" height="15" fill="rgb(207,50,39)"/><text x="428.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.41%)</title><rect x="425" y="276" width="5" height="15" fill="rgb(207,23,21)"/><text x="428.00" y="286.50"></text></g><g><title>0x7f86674d5be2 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="425" y="292" width="5" height="15" fill="rgb(225,221,21)"/><text x="428.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 3.28%)</title><rect x="396" y="164" width="39" height="15" fill="rgb(232,28,38)"/><text x="399.00" y="174.50">_pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.41%)</title><rect x="430" y="180" width="5" height="15" fill="rgb(228,113,23)"/><text x="433.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.41%)</title><rect x="430" y="196" width="5" height="15" fill="rgb(239,40,22)"/><text x="433.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.41%)</title><rect x="445" y="180" width="5" height="15" fill="rgb(219,16,15)"/><text x="448.00" y="190.50"></text></g><g><title>array_reshape (methods.c:179) (2 samples, 0.82%)</title><rect x="450" y="180" width="9" height="15" fill="rgb(212,119,32)"/><text x="453.00" y="190.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.41%)</title><rect x="459" y="180" width="5" height="15" fill="rgb(220,76,12)"/><text x="462.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.41%)</title><rect x="459" y="196" width="5" height="15" fill="rgb(218,66,22)"/><text x="462.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.41%)</title><rect x="459" y="212" width="5" height="15" fill="rgb(219,208,22)"/><text x="462.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.41%)</title><rect x="459" y="228" width="5" height="15" fill="rgb(251,182,4)"/><text x="462.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.41%)</title><rect x="459" y="244" width="5" height="15" fill="rgb(234,215,1)"/><text x="462.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.41%)</title><rect x="469" y="228" width="5" height="15" fill="rgb(220,127,54)"/><text x="472.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.41%)</title><rect x="469" y="244" width="5" height="15" fill="rgb(247,73,33)"/><text x="472.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.41%)</title><rect x="469" y="260" width="5" height="15" fill="rgb(216,12,27)"/><text x="472.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.41%)</title><rect x="469" y="276" width="5" height="15" fill="rgb(239,181,21)"/><text x="472.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.41%)</title><rect x="469" y="292" width="5" height="15" fill="rgb(221,135,16)"/><text x="472.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.41%)</title><rect x="469" y="308" width="5" height="15" fill="rgb(212,78,30)"/><text x="472.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.41%)</title><rect x="474" y="244" width="5" height="15" fill="rgb(217,170,14)"/><text x="477.00" y="254.50"></text></g><g><title>0x7f8667319730 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="474" y="260" width="5" height="15" fill="rgb(214,138,19)"/><text x="477.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.41%)</title><rect x="479" y="260" width="4" height="15" fill="rgb(232,40,31)"/><text x="482.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.41%)</title><rect x="479" y="276" width="4" height="15" fill="rgb(243,6,51)"/><text x="482.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.41%)</title><rect x="479" y="292" width="4" height="15" fill="rgb(224,146,40)"/><text x="482.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.41%)</title><rect x="479" y="308" width="4" height="15" fill="rgb(208,168,43)"/><text x="482.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.41%)</title><rect x="479" y="324" width="4" height="15" fill="rgb(218,188,4)"/><text x="482.00" y="334.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.41%)</title><rect x="479" y="340" width="4" height="15" fill="rgb(223,136,13)"/><text x="482.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.41%)</title><rect x="483" y="324" width="5" height="15" fill="rgb(250,82,30)"/><text x="486.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3899) (1 samples, 0.41%)</title><rect x="483" y="340" width="5" height="15" fill="rgb(247,142,40)"/><text x="486.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.41%)</title><rect x="488" y="356" width="5" height="15" fill="rgb(223,98,1)"/><text x="491.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 1.23%)</title><rect x="483" y="276" width="15" height="15" fill="rgb(226,152,40)"/><text x="486.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 1.23%)</title><rect x="483" y="292" width="15" height="15" fill="rgb(247,193,1)"/><text x="486.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 1.23%)</title><rect x="483" y="308" width="15" height="15" fill="rgb(234,89,40)"/><text x="486.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.82%)</title><rect x="488" y="324" width="10" height="15" fill="rgb(222,31,52)"/><text x="491.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (2 samples, 0.82%)</title><rect x="488" y="340" width="10" height="15" fill="rgb(234,58,4)"/><text x="491.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.41%)</title><rect x="493" y="356" width="5" height="15" fill="rgb(230,42,37)"/><text x="496.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.41%)</title><rect x="498" y="276" width="5" height="15" fill="rgb(210,61,52)"/><text x="501.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:256) (1 samples, 0.41%)</title><rect x="498" y="292" width="5" height="15" fill="rgb(246,82,2)"/><text x="501.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 3.69%)</title><rect x="464" y="180" width="44" height="15" fill="rgb(225,82,47)"/><text x="467.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 3.69%)</title><rect x="464" y="196" width="44" height="15" fill="rgb(246,151,31)"/><text x="467.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 3.28%)</title><rect x="469" y="212" width="39" height="15" fill="rgb(211,129,7)"/><text x="472.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.87%)</title><rect x="474" y="228" width="34" height="15" fill="rgb(250,219,41)"/><text x="477.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 2.46%)</title><rect x="479" y="244" width="29" height="15" fill="rgb(207,181,37)"/><text x="482.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 2.05%)</title><rect x="483" y="260" width="25" height="15" fill="rgb(240,204,11)"/><text x="486.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.41%)</title><rect x="503" y="276" width="5" height="15" fill="rgb(231,179,17)"/><text x="506.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.41%)</title><rect x="503" y="292" width="5" height="15" fill="rgb(208,63,36)"/><text x="506.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.41%)</title><rect x="508" y="196" width="4" height="15" fill="rgb(235,62,35)"/><text x="511.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.41%)</title><rect x="508" y="212" width="4" height="15" fill="rgb(238,183,31)"/><text x="511.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.41%)</title><rect x="508" y="228" width="4" height="15" fill="rgb(235,74,48)"/><text x="511.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.41%)</title><rect x="512" y="244" width="5" height="15" fill="rgb(254,69,24)"/><text x="515.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="512" y="260" width="5" height="15" fill="rgb(241,208,33)"/><text x="515.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.82%)</title><rect x="512" y="228" width="10" height="15" fill="rgb(228,131,25)"/><text x="515.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.41%)</title><rect x="517" y="244" width="5" height="15" fill="rgb(225,162,37)"/><text x="520.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.41%)</title><rect x="517" y="260" width="5" height="15" fill="rgb(248,86,0)"/><text x="520.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1069) (1 samples, 0.41%)</title><rect x="517" y="276" width="5" height="15" fill="rgb(215,220,20)"/><text x="520.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.23%)</title><rect x="512" y="212" width="15" height="15" fill="rgb(236,84,25)"/><text x="515.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.41%)</title><rect x="522" y="228" width="5" height="15" fill="rgb(213,27,43)"/><text x="525.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:346) (1 samples, 0.41%)</title><rect x="522" y="244" width="5" height="15" fill="rgb(218,219,19)"/><text x="525.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.64%)</title><rect x="512" y="196" width="20" height="15" fill="rgb(207,175,45)"/><text x="515.00" y="206.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.41%)</title><rect x="527" y="212" width="5" height="15" fill="rgb(237,84,11)"/><text x="530.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.41%)</title><rect x="527" y="228" width="5" height="15" fill="rgb(247,95,34)"/><text x="530.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.41%)</title><rect x="527" y="244" width="5" height="15" fill="rgb(210,12,5)"/><text x="530.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (104 samples, 42.62%)</title><rect x="34" y="132" width="503" height="15" fill="rgb(234,223,24)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (90 samples, 36.89%)</title><rect x="101" y="148" width="436" height="15" fill="rgb(212,29,43)"/><text x="104.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 8.61%)</title><rect x="435" y="164" width="102" height="15" fill="rgb(248,226,35)"/><text x="438.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.46%)</title><rect x="508" y="180" width="29" height="15" fill="rgb(221,100,36)"/><text x="511.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.41%)</title><rect x="532" y="196" width="5" height="15" fill="rgb(248,4,48)"/><text x="535.00" y="206.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.41%)</title><rect x="532" y="212" width="5" height="15" fill="rgb(220,49,33)"/><text x="535.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.41%)</title><rect x="532" y="228" width="5" height="15" fill="rgb(225,95,48)"/><text x="535.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.41%)</title><rect x="532" y="244" width="5" height="15" fill="rgb(223,72,30)"/><text x="535.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:38) (110 samples, 45.08%)</title><rect x="10" y="52" width="531" height="15" fill="rgb(209,117,2)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:37) (110 samples, 45.08%)</title><rect x="10" y="68" width="531" height="15" fill="rgb(229,178,24)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_o..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (110 samples, 45.08%)</title><rect x="10" y="84" width="531" height="15" fill="rgb(230,10,37)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (108 samples, 44.26%)</title><rect x="19" y="100" width="522" height="15" fill="rgb(237,136,0)"/><text x="22.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onn..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (107 samples, 43.85%)</title><rect x="24" y="116" width="517" height="15" fill="rgb(218,10,26)"/><text x="27.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="537" y="132" width="4" height="15" fill="rgb(210,172,44)"/><text x="540.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.41%)</title><rect x="541" y="148" width="5" height="15" fill="rgb(218,201,29)"/><text x="544.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="541" y="164" width="5" height="15" fill="rgb(221,5,27)"/><text x="544.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="541" y="180" width="5" height="15" fill="rgb(238,87,4)"/><text x="544.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="541" y="196" width="5" height="15" fill="rgb(242,109,52)"/><text x="544.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="541" y="212" width="5" height="15" fill="rgb(227,194,20)"/><text x="544.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="541" y="228" width="5" height="15" fill="rgb(254,45,32)"/><text x="544.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.41%)</title><rect x="541" y="244" width="5" height="15" fill="rgb(251,100,28)"/><text x="544.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="541" y="260" width="5" height="15" fill="rgb(222,36,37)"/><text x="544.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="541" y="276" width="5" height="15" fill="rgb(251,22,13)"/><text x="544.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="541" y="292" width="5" height="15" fill="rgb(249,134,49)"/><text x="544.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="541" y="308" width="5" height="15" fill="rgb(217,44,27)"/><text x="544.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="541" y="324" width="5" height="15" fill="rgb(239,158,21)"/><text x="544.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="541" y="340" width="5" height="15" fill="rgb(207,185,10)"/><text x="544.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="541" y="356" width="5" height="15" fill="rgb(253,206,50)"/><text x="544.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:86) (1 samples, 0.41%)</title><rect x="541" y="372" width="5" height="15" fill="rgb(254,11,1)"/><text x="544.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="541" y="388" width="5" height="15" fill="rgb(235,157,12)"/><text x="544.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="541" y="404" width="5" height="15" fill="rgb(235,119,33)"/><text x="544.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="541" y="420" width="5" height="15" fill="rgb(238,157,38)"/><text x="544.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="541" y="436" width="5" height="15" fill="rgb(245,153,48)"/><text x="544.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="541" y="452" width="5" height="15" fill="rgb(216,190,37)"/><text x="544.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="541" y="468" width="5" height="15" fill="rgb(243,41,13)"/><text x="544.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="541" y="484" width="5" height="15" fill="rgb(220,133,22)"/><text x="544.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="541" y="500" width="5" height="15" fill="rgb(241,96,16)"/><text x="544.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.41%)</title><rect x="546" y="852" width="5" height="15" fill="rgb(245,159,50)"/><text x="549.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.41%)</title><rect x="546" y="868" width="5" height="15" fill="rgb(243,202,49)"/><text x="549.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.41%)</title><rect x="546" y="884" width="5" height="15" fill="rgb(248,89,28)"/><text x="549.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.41%)</title><rect x="546" y="900" width="5" height="15" fill="rgb(250,132,6)"/><text x="549.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="546" y="916" width="5" height="15" fill="rgb(239,119,31)"/><text x="549.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="546" y="932" width="5" height="15" fill="rgb(235,198,37)"/><text x="549.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="546" y="948" width="5" height="15" fill="rgb(231,9,26)"/><text x="549.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="546" y="964" width="5" height="15" fill="rgb(240,198,22)"/><text x="549.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.41%)</title><rect x="546" y="980" width="5" height="15" fill="rgb(244,191,21)"/><text x="549.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.41%)</title><rect x="546" y="996" width="5" height="15" fill="rgb(207,42,37)"/><text x="549.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.41%)</title><rect x="546" y="1012" width="5" height="15" fill="rgb(225,151,45)"/><text x="549.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.41%)</title><rect x="551" y="916" width="5" height="15" fill="rgb(234,110,48)"/><text x="554.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.41%)</title><rect x="551" y="932" width="5" height="15" fill="rgb(225,213,50)"/><text x="554.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.41%)</title><rect x="551" y="948" width="5" height="15" fill="rgb(226,179,23)"/><text x="554.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.41%)</title><rect x="556" y="964" width="5" height="15" fill="rgb(214,65,52)"/><text x="559.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.41%)</title><rect x="561" y="964" width="5" height="15" fill="rgb(219,197,39)"/><text x="564.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.41%)</title><rect x="561" y="980" width="5" height="15" fill="rgb(243,95,30)"/><text x="564.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.41%)</title><rect x="561" y="996" width="5" height="15" fill="rgb(241,125,12)"/><text x="564.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.41%)</title><rect x="561" y="1012" width="5" height="15" fill="rgb(220,12,12)"/><text x="564.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="561" y="1028" width="5" height="15" fill="rgb(214,177,16)"/><text x="564.00" y="1038.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (4 samples, 1.64%)</title><rect x="551" y="884" width="19" height="15" fill="rgb(241,20,3)"/><text x="554.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (4 samples, 1.64%)</title><rect x="551" y="900" width="19" height="15" fill="rgb(222,216,24)"/><text x="554.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 1.23%)</title><rect x="556" y="916" width="14" height="15" fill="rgb(211,55,7)"/><text x="559.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 1.23%)</title><rect x="556" y="932" width="14" height="15" fill="rgb(238,108,47)"/><text x="559.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 1.23%)</title><rect x="556" y="948" width="14" height="15" fill="rgb(253,15,26)"/><text x="559.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.41%)</title><rect x="566" y="964" width="4" height="15" fill="rgb(236,169,21)"/><text x="569.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="566" y="980" width="4" height="15" fill="rgb(232,133,26)"/><text x="569.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (5 samples, 2.05%)</title><rect x="551" y="852" width="24" height="15" fill="rgb(232,207,3)"/><text x="554.00" y="862.50">_..</text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (5 samples, 2.05%)</title><rect x="551" y="868" width="24" height="15" fill="rgb(240,109,30)"/><text x="554.00" y="878.50">&lt;..</text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.41%)</title><rect x="570" y="884" width="5" height="15" fill="rgb(206,120,23)"/><text x="573.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.41%)</title><rect x="570" y="900" width="5" height="15" fill="rgb(239,211,15)"/><text x="573.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.41%)</title><rect x="570" y="916" width="5" height="15" fill="rgb(224,37,54)"/><text x="573.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.41%)</title><rect x="570" y="932" width="5" height="15" fill="rgb(227,186,43)"/><text x="573.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1489) (1 samples, 0.41%)</title><rect x="570" y="948" width="5" height="15" fill="rgb(252,61,38)"/><text x="573.00" y="958.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.41%)</title><rect x="575" y="916" width="5" height="15" fill="rgb(222,108,21)"/><text x="578.00" y="926.50"></text></g><g><title>splitext (posixpath.py:123) (1 samples, 0.41%)</title><rect x="575" y="932" width="5" height="15" fill="rgb(211,159,17)"/><text x="578.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.82%)</title><rect x="575" y="884" width="10" height="15" fill="rgb(237,1,21)"/><text x="578.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.82%)</title><rect x="575" y="900" width="10" height="15" fill="rgb(229,56,13)"/><text x="578.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="580" y="916" width="5" height="15" fill="rgb(221,39,19)"/><text x="583.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="580" y="932" width="5" height="15" fill="rgb(216,106,47)"/><text x="583.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.41%)</title><rect x="580" y="948" width="5" height="15" fill="rgb(215,150,36)"/><text x="583.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.41%)</title><rect x="580" y="964" width="5" height="15" fill="rgb(232,13,42)"/><text x="583.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (9 samples, 3.69%)</title><rect x="546" y="820" width="44" height="15" fill="rgb(239,72,45)"/><text x="549.00" y="830.50">&lt;mod..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (9 samples, 3.69%)</title><rect x="546" y="836" width="44" height="15" fill="rgb(235,34,42)"/><text x="549.00" y="846.50">_cal..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.23%)</title><rect x="575" y="852" width="15" height="15" fill="rgb(217,86,43)"/><text x="578.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.23%)</title><rect x="575" y="868" width="15" height="15" fill="rgb(234,108,30)"/><text x="578.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.41%)</title><rect x="585" y="884" width="5" height="15" fill="rgb(247,117,15)"/><text x="588.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.41%)</title><rect x="585" y="900" width="5" height="15" fill="rgb(249,58,31)"/><text x="588.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.41%)</title><rect x="585" y="916" width="5" height="15" fill="rgb(241,30,15)"/><text x="588.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="585" y="932" width="5" height="15" fill="rgb(214,193,23)"/><text x="588.00" y="942.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:26) (1 samples, 0.41%)</title><rect x="590" y="1012" width="5" height="15" fill="rgb(227,72,29)"/><text x="593.00" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="590" y="1028" width="5" height="15" fill="rgb(232,62,28)"/><text x="593.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="590" y="1044" width="5" height="15" fill="rgb(231,131,33)"/><text x="593.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="590" y="1060" width="5" height="15" fill="rgb(242,187,52)"/><text x="593.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="590" y="1076" width="5" height="15" fill="rgb(252,67,43)"/><text x="593.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="590" y="1092" width="5" height="15" fill="rgb(220,197,30)"/><text x="593.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="590" y="1108" width="5" height="15" fill="rgb(223,209,50)"/><text x="593.00" y="1118.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (1 samples, 0.41%)</title><rect x="590" y="1124" width="5" height="15" fill="rgb(244,204,16)"/><text x="593.00" y="1134.50"></text></g><g><title>0x7f8667319776 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="590" y="1140" width="5" height="15" fill="rgb(237,222,19)"/><text x="593.00" y="1150.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.41%)</title><rect x="595" y="1012" width="5" height="15" fill="rgb(219,200,20)"/><text x="598.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="595" y="1028" width="5" height="15" fill="rgb(215,162,49)"/><text x="598.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="595" y="1044" width="5" height="15" fill="rgb(221,216,23)"/><text x="598.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="595" y="1060" width="5" height="15" fill="rgb(240,143,9)"/><text x="598.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="595" y="1076" width="5" height="15" fill="rgb(235,51,39)"/><text x="598.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="595" y="1092" width="5" height="15" fill="rgb(211,115,2)"/><text x="598.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.41%)</title><rect x="595" y="1108" width="5" height="15" fill="rgb(208,118,26)"/><text x="598.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="595" y="1124" width="5" height="15" fill="rgb(239,90,37)"/><text x="598.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="595" y="1140" width="5" height="15" fill="rgb(223,147,44)"/><text x="598.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="595" y="1156" width="5" height="15" fill="rgb(253,143,41)"/><text x="598.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="595" y="1172" width="5" height="15" fill="rgb(217,42,24)"/><text x="598.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="595" y="1188" width="5" height="15" fill="rgb(245,121,32)"/><text x="598.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py:49) (1 samples, 0.41%)</title><rect x="595" y="1204" width="5" height="15" fill="rgb(226,80,32)"/><text x="598.00" y="1214.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="595" y="1220" width="5" height="15" fill="rgb(229,114,22)"/><text x="598.00" y="1230.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="595" y="1236" width="5" height="15" fill="rgb(221,150,38)"/><text x="598.00" y="1246.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.41%)</title><rect x="595" y="1252" width="5" height="15" fill="rgb(210,1,43)"/><text x="598.00" y="1262.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.41%)</title><rect x="595" y="1268" width="5" height="15" fill="rgb(238,228,33)"/><text x="598.00" y="1278.50"></text></g><g><title>_compile (sre_compile.py:82) (1 samples, 0.41%)</title><rect x="595" y="1284" width="5" height="15" fill="rgb(234,180,41)"/><text x="598.00" y="1294.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (12 samples, 4.92%)</title><rect x="546" y="148" width="58" height="15" fill="rgb(235,114,44)"/><text x="549.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="164" width="58" height="15" fill="rgb(254,184,3)"/><text x="549.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (12 samples, 4.92%)</title><rect x="546" y="180" width="58" height="15" fill="rgb(224,228,7)"/><text x="549.00" y="190.50">_find_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="196" width="58" height="15" fill="rgb(248,110,6)"/><text x="549.00" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="212" width="58" height="15" fill="rgb(234,59,10)"/><text x="549.00" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="228" width="58" height="15" fill="rgb(208,73,40)"/><text x="549.00" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="244" width="58" height="15" fill="rgb(240,66,38)"/><text x="549.00" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="260" width="58" height="15" fill="rgb(238,134,24)"/><text x="549.00" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="276" width="58" height="15" fill="rgb(206,178,50)"/><text x="549.00" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (12 samples, 4.92%)</title><rect x="546" y="292" width="58" height="15" fill="rgb(228,68,22)"/><text x="549.00" y="302.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="308" width="58" height="15" fill="rgb(242,98,12)"/><text x="549.00" y="318.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="324" width="58" height="15" fill="rgb(233,66,20)"/><text x="549.00" y="334.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="340" width="58" height="15" fill="rgb(253,5,54)"/><text x="549.00" y="350.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="356" width="58" height="15" fill="rgb(245,20,6)"/><text x="549.00" y="366.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="372" width="58" height="15" fill="rgb(211,216,1)"/><text x="549.00" y="382.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (12 samples, 4.92%)</title><rect x="546" y="388" width="58" height="15" fill="rgb(206,190,4)"/><text x="549.00" y="398.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="404" width="58" height="15" fill="rgb(230,175,41)"/><text x="549.00" y="414.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="420" width="58" height="15" fill="rgb(213,124,33)"/><text x="549.00" y="430.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="436" width="58" height="15" fill="rgb(220,82,22)"/><text x="549.00" y="446.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="452" width="58" height="15" fill="rgb(230,88,5)"/><text x="549.00" y="462.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="468" width="58" height="15" fill="rgb(221,158,23)"/><text x="549.00" y="478.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (12 samples, 4.92%)</title><rect x="546" y="484" width="58" height="15" fill="rgb(248,227,13)"/><text x="549.00" y="494.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="500" width="58" height="15" fill="rgb(242,55,12)"/><text x="549.00" y="510.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="516" width="58" height="15" fill="rgb(218,54,27)"/><text x="549.00" y="526.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="532" width="58" height="15" fill="rgb(218,192,44)"/><text x="549.00" y="542.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="548" width="58" height="15" fill="rgb(252,117,21)"/><text x="549.00" y="558.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="564" width="58" height="15" fill="rgb(209,111,4)"/><text x="549.00" y="574.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (12 samples, 4.92%)</title><rect x="546" y="580" width="58" height="15" fill="rgb(236,28,29)"/><text x="549.00" y="590.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="596" width="58" height="15" fill="rgb(212,65,18)"/><text x="549.00" y="606.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (12 samples, 4.92%)</title><rect x="546" y="612" width="58" height="15" fill="rgb(248,143,1)"/><text x="549.00" y="622.50">_find_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="628" width="58" height="15" fill="rgb(232,33,37)"/><text x="549.00" y="638.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="644" width="58" height="15" fill="rgb(206,71,20)"/><text x="549.00" y="654.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="660" width="58" height="15" fill="rgb(240,126,52)"/><text x="549.00" y="670.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="676" width="58" height="15" fill="rgb(214,96,7)"/><text x="549.00" y="686.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="692" width="58" height="15" fill="rgb(221,54,44)"/><text x="549.00" y="702.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="708" width="58" height="15" fill="rgb(216,147,35)"/><text x="549.00" y="718.50">_call_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (12 samples, 4.92%)</title><rect x="546" y="724" width="58" height="15" fill="rgb(238,27,25)"/><text x="549.00" y="734.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.92%)</title><rect x="546" y="740" width="58" height="15" fill="rgb(223,170,37)"/><text x="549.00" y="750.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.92%)</title><rect x="546" y="756" width="58" height="15" fill="rgb(252,198,32)"/><text x="549.00" y="766.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.92%)</title><rect x="546" y="772" width="58" height="15" fill="rgb(210,0,23)"/><text x="549.00" y="782.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.92%)</title><rect x="546" y="788" width="58" height="15" fill="rgb(207,150,10)"/><text x="549.00" y="798.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.92%)</title><rect x="546" y="804" width="58" height="15" fill="rgb(242,96,22)"/><text x="549.00" y="814.50">_call_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (3 samples, 1.23%)</title><rect x="590" y="820" width="14" height="15" fill="rgb(219,221,13)"/><text x="593.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="590" y="836" width="14" height="15" fill="rgb(226,44,25)"/><text x="593.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="590" y="852" width="14" height="15" fill="rgb(239,217,1)"/><text x="593.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="590" y="868" width="14" height="15" fill="rgb(249,193,20)"/><text x="593.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="590" y="884" width="14" height="15" fill="rgb(254,98,12)"/><text x="593.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="590" y="900" width="14" height="15" fill="rgb(213,156,46)"/><text x="593.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (3 samples, 1.23%)</title><rect x="590" y="916" width="14" height="15" fill="rgb(221,172,40)"/><text x="593.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="590" y="932" width="14" height="15" fill="rgb(243,227,14)"/><text x="593.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="590" y="948" width="14" height="15" fill="rgb(211,181,41)"/><text x="593.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="590" y="964" width="14" height="15" fill="rgb(221,65,45)"/><text x="593.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="590" y="980" width="14" height="15" fill="rgb(248,90,38)"/><text x="593.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="590" y="996" width="14" height="15" fill="rgb(229,170,37)"/><text x="593.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:33) (1 samples, 0.41%)</title><rect x="600" y="1012" width="4" height="15" fill="rgb(224,131,31)"/><text x="603.00" y="1022.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="600" y="1028" width="4" height="15" fill="rgb(206,102,51)"/><text x="603.00" y="1038.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="600" y="1044" width="4" height="15" fill="rgb(215,176,41)"/><text x="603.00" y="1054.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.41%)</title><rect x="600" y="1060" width="4" height="15" fill="rgb(235,34,26)"/><text x="603.00" y="1070.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.41%)</title><rect x="600" y="1076" width="4" height="15" fill="rgb(246,86,24)"/><text x="603.00" y="1086.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="600" y="1092" width="4" height="15" fill="rgb(220,17,45)"/><text x="603.00" y="1102.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.41%)</title><rect x="600" y="1108" width="4" height="15" fill="rgb(245,64,28)"/><text x="603.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.41%)</title><rect x="604" y="292" width="5" height="15" fill="rgb(213,153,42)"/><text x="607.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="308" width="5" height="15" fill="rgb(229,22,30)"/><text x="607.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="324" width="5" height="15" fill="rgb(232,87,10)"/><text x="607.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="340" width="5" height="15" fill="rgb(247,35,33)"/><text x="607.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="356" width="5" height="15" fill="rgb(220,106,5)"/><text x="607.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="372" width="5" height="15" fill="rgb(252,214,3)"/><text x="607.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.41%)</title><rect x="604" y="388" width="5" height="15" fill="rgb(210,29,47)"/><text x="607.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="404" width="5" height="15" fill="rgb(248,21,44)"/><text x="607.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="420" width="5" height="15" fill="rgb(206,204,3)"/><text x="607.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="436" width="5" height="15" fill="rgb(249,202,44)"/><text x="607.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="452" width="5" height="15" fill="rgb(236,14,51)"/><text x="607.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="468" width="5" height="15" fill="rgb(253,202,43)"/><text x="607.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.41%)</title><rect x="604" y="484" width="5" height="15" fill="rgb(252,179,28)"/><text x="607.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="500" width="5" height="15" fill="rgb(242,3,14)"/><text x="607.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="516" width="5" height="15" fill="rgb(211,44,19)"/><text x="607.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="532" width="5" height="15" fill="rgb(241,79,1)"/><text x="607.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="548" width="5" height="15" fill="rgb(250,180,3)"/><text x="607.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="564" width="5" height="15" fill="rgb(250,138,25)"/><text x="607.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.41%)</title><rect x="604" y="580" width="5" height="15" fill="rgb(208,194,26)"/><text x="607.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="596" width="5" height="15" fill="rgb(223,222,25)"/><text x="607.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="612" width="5" height="15" fill="rgb(246,89,38)"/><text x="607.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="628" width="5" height="15" fill="rgb(233,61,25)"/><text x="607.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="644" width="5" height="15" fill="rgb(235,71,8)"/><text x="607.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="660" width="5" height="15" fill="rgb(225,135,36)"/><text x="607.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.41%)</title><rect x="604" y="676" width="5" height="15" fill="rgb(249,38,43)"/><text x="607.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="692" width="5" height="15" fill="rgb(207,72,3)"/><text x="607.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="708" width="5" height="15" fill="rgb(225,212,51)"/><text x="607.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="724" width="5" height="15" fill="rgb(241,65,40)"/><text x="607.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="740" width="5" height="15" fill="rgb(223,16,1)"/><text x="607.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="756" width="5" height="15" fill="rgb(247,96,30)"/><text x="607.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.41%)</title><rect x="604" y="772" width="5" height="15" fill="rgb(235,170,1)"/><text x="607.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="788" width="5" height="15" fill="rgb(234,166,41)"/><text x="607.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="804" width="5" height="15" fill="rgb(245,165,36)"/><text x="607.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="820" width="5" height="15" fill="rgb(219,32,48)"/><text x="607.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="836" width="5" height="15" fill="rgb(227,18,32)"/><text x="607.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="852" width="5" height="15" fill="rgb(240,203,53)"/><text x="607.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.41%)</title><rect x="604" y="868" width="5" height="15" fill="rgb(205,229,10)"/><text x="607.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="604" y="884" width="5" height="15" fill="rgb(226,184,18)"/><text x="607.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="604" y="900" width="5" height="15" fill="rgb(225,30,52)"/><text x="607.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="604" y="916" width="5" height="15" fill="rgb(250,5,46)"/><text x="607.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="604" y="932" width="5" height="15" fill="rgb(213,162,4)"/><text x="607.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="604" y="948" width="5" height="15" fill="rgb(246,14,54)"/><text x="607.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.41%)</title><rect x="604" y="964" width="5" height="15" fill="rgb(231,145,39)"/><text x="607.00" y="974.50"></text></g><g><title>NDFrame (pandas/core/generic.py:6618) (1 samples, 0.41%)</title><rect x="604" y="980" width="5" height="15" fill="rgb(205,94,12)"/><text x="607.00" y="990.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.41%)</title><rect x="604" y="996" width="5" height="15" fill="rgb(236,81,16)"/><text x="607.00" y="1006.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.41%)</title><rect x="604" y="1012" width="5" height="15" fill="rgb(238,80,12)"/><text x="607.00" y="1022.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.41%)</title><rect x="604" y="1028" width="5" height="15" fill="rgb(233,54,23)"/><text x="607.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.41%)</title><rect x="604" y="1044" width="5" height="15" fill="rgb(207,36,31)"/><text x="607.00" y="1054.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.41%)</title><rect x="604" y="1060" width="5" height="15" fill="rgb(215,37,0)"/><text x="607.00" y="1070.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.41%)</title><rect x="604" y="1076" width="5" height="15" fill="rgb(240,162,45)"/><text x="607.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (1 samples, 0.41%)</title><rect x="609" y="532" width="5" height="15" fill="rgb(234,199,5)"/><text x="612.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="548" width="5" height="15" fill="rgb(222,191,39)"/><text x="612.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="564" width="5" height="15" fill="rgb(251,114,50)"/><text x="612.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="580" width="5" height="15" fill="rgb(211,73,43)"/><text x="612.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="596" width="5" height="15" fill="rgb(249,43,30)"/><text x="612.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="612" width="5" height="15" fill="rgb(246,30,4)"/><text x="612.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.41%)</title><rect x="609" y="628" width="5" height="15" fill="rgb(223,10,20)"/><text x="612.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="644" width="5" height="15" fill="rgb(229,165,35)"/><text x="612.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="660" width="5" height="15" fill="rgb(245,215,13)"/><text x="612.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="676" width="5" height="15" fill="rgb(239,226,54)"/><text x="612.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="692" width="5" height="15" fill="rgb(247,135,39)"/><text x="612.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="708" width="5" height="15" fill="rgb(216,147,2)"/><text x="612.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.41%)</title><rect x="609" y="724" width="5" height="15" fill="rgb(216,17,44)"/><text x="612.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="740" width="5" height="15" fill="rgb(228,173,19)"/><text x="612.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="756" width="5" height="15" fill="rgb(228,95,18)"/><text x="612.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="772" width="5" height="15" fill="rgb(233,101,54)"/><text x="612.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="788" width="5" height="15" fill="rgb(247,67,42)"/><text x="612.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="804" width="5" height="15" fill="rgb(234,223,25)"/><text x="612.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.41%)</title><rect x="609" y="820" width="5" height="15" fill="rgb(252,212,21)"/><text x="612.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="836" width="5" height="15" fill="rgb(227,166,50)"/><text x="612.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="852" width="5" height="15" fill="rgb(235,205,29)"/><text x="612.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="868" width="5" height="15" fill="rgb(248,19,13)"/><text x="612.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="884" width="5" height="15" fill="rgb(227,77,1)"/><text x="612.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="900" width="5" height="15" fill="rgb(231,170,18)"/><text x="612.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.41%)</title><rect x="609" y="916" width="5" height="15" fill="rgb(206,201,42)"/><text x="612.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="932" width="5" height="15" fill="rgb(238,23,46)"/><text x="612.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="948" width="5" height="15" fill="rgb(250,213,47)"/><text x="612.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="964" width="5" height="15" fill="rgb(213,158,54)"/><text x="612.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="980" width="5" height="15" fill="rgb(238,52,32)"/><text x="612.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="996" width="5" height="15" fill="rgb(251,188,37)"/><text x="612.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.41%)</title><rect x="609" y="1012" width="5" height="15" fill="rgb(215,116,45)"/><text x="612.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="1028" width="5" height="15" fill="rgb(220,183,35)"/><text x="612.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="1044" width="5" height="15" fill="rgb(227,210,7)"/><text x="612.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="1060" width="5" height="15" fill="rgb(237,133,13)"/><text x="612.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="1076" width="5" height="15" fill="rgb(247,219,22)"/><text x="612.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="1092" width="5" height="15" fill="rgb(206,53,27)"/><text x="612.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.41%)</title><rect x="609" y="1108" width="5" height="15" fill="rgb(235,160,28)"/><text x="612.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="609" y="1124" width="5" height="15" fill="rgb(243,183,28)"/><text x="612.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="1140" width="5" height="15" fill="rgb(239,79,33)"/><text x="612.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="1156" width="5" height="15" fill="rgb(229,47,18)"/><text x="612.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="1172" width="5" height="15" fill="rgb(249,58,50)"/><text x="612.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="1188" width="5" height="15" fill="rgb(244,12,16)"/><text x="612.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="1204" width="5" height="15" fill="rgb(229,143,18)"/><text x="612.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="1220" width="5" height="15" fill="rgb(234,37,38)"/><text x="612.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.41%)</title><rect x="609" y="1236" width="5" height="15" fill="rgb(227,77,29)"/><text x="612.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="609" y="1252" width="5" height="15" fill="rgb(240,13,3)"/><text x="612.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="1268" width="5" height="15" fill="rgb(248,4,54)"/><text x="612.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="609" y="1284" width="5" height="15" fill="rgb(227,203,5)"/><text x="612.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="609" y="1300" width="5" height="15" fill="rgb(217,193,45)"/><text x="612.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="609" y="1316" width="5" height="15" fill="rgb(252,203,24)"/><text x="612.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="609" y="1332" width="5" height="15" fill="rgb(250,222,28)"/><text x="612.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="609" y="1348" width="5" height="15" fill="rgb(223,194,31)"/><text x="612.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4633) (1 samples, 0.41%)</title><rect x="609" y="1364" width="5" height="15" fill="rgb(238,70,20)"/><text x="612.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.41%)</title><rect x="609" y="1380" width="5" height="15" fill="rgb(232,158,47)"/><text x="612.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.41%)</title><rect x="609" y="1396" width="5" height="15" fill="rgb(243,112,9)"/><text x="612.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.41%)</title><rect x="609" y="1412" width="5" height="15" fill="rgb(251,120,45)"/><text x="612.00" y="1422.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.41%)</title><rect x="609" y="1428" width="5" height="15" fill="rgb(243,96,1)"/><text x="612.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.41%)</title><rect x="614" y="1316" width="5" height="15" fill="rgb(234,60,17)"/><text x="617.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.41%)</title><rect x="614" y="1332" width="5" height="15" fill="rgb(215,152,7)"/><text x="617.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.41%)</title><rect x="614" y="1348" width="5" height="15" fill="rgb(236,181,35)"/><text x="617.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.41%)</title><rect x="614" y="1364" width="5" height="15" fill="rgb(205,88,50)"/><text x="617.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.41%)</title><rect x="614" y="1380" width="5" height="15" fill="rgb(248,32,50)"/><text x="617.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.41%)</title><rect x="614" y="1396" width="5" height="15" fill="rgb(212,188,1)"/><text x="617.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.41%)</title><rect x="614" y="1412" width="5" height="15" fill="rgb(213,86,26)"/><text x="617.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.41%)</title><rect x="614" y="1428" width="5" height="15" fill="rgb(210,130,11)"/><text x="617.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.41%)</title><rect x="614" y="1444" width="5" height="15" fill="rgb(254,174,52)"/><text x="617.00" y="1454.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.41%)</title><rect x="614" y="1460" width="5" height="15" fill="rgb(226,217,52)"/><text x="617.00" y="1470.50"></text></g><g><title>0x7f86556516d5 (?) (1 samples, 0.41%)</title><rect x="614" y="1476" width="5" height="15" fill="rgb(242,140,2)"/><text x="617.00" y="1486.50"></text></g><g><title>0x7f86556f7689 (?) (1 samples, 0.41%)</title><rect x="614" y="1492" width="5" height="15" fill="rgb(231,11,37)"/><text x="617.00" y="1502.50"></text></g><g><title>0x7f86556f757f (?) (1 samples, 0.41%)</title><rect x="614" y="1508" width="5" height="15" fill="rgb(219,227,32)"/><text x="617.00" y="1518.50"></text></g><g><title>0x7f86556f7440 (?) (1 samples, 0.41%)</title><rect x="614" y="1524" width="5" height="15" fill="rgb(210,5,13)"/><text x="617.00" y="1534.50"></text></g><g><title>0x7f865569418c (?) (1 samples, 0.41%)</title><rect x="614" y="1540" width="5" height="15" fill="rgb(249,71,53)"/><text x="617.00" y="1550.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (4 samples, 1.64%)</title><rect x="604" y="148" width="20" height="15" fill="rgb(216,76,30)"/><text x="607.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="604" y="164" width="20" height="15" fill="rgb(210,46,25)"/><text x="607.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.64%)</title><rect x="604" y="180" width="20" height="15" fill="rgb(240,40,12)"/><text x="607.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="604" y="196" width="20" height="15" fill="rgb(229,69,8)"/><text x="607.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="604" y="212" width="20" height="15" fill="rgb(205,204,13)"/><text x="607.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="604" y="228" width="20" height="15" fill="rgb(235,76,10)"/><text x="607.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="604" y="244" width="20" height="15" fill="rgb(230,214,24)"/><text x="607.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="604" y="260" width="20" height="15" fill="rgb(224,227,41)"/><text x="607.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="604" y="276" width="20" height="15" fill="rgb(233,65,0)"/><text x="607.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.23%)</title><rect x="609" y="292" width="15" height="15" fill="rgb(227,114,27)"/><text x="612.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="609" y="308" width="15" height="15" fill="rgb(238,212,50)"/><text x="612.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.23%)</title><rect x="609" y="324" width="15" height="15" fill="rgb(210,211,3)"/><text x="612.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="609" y="340" width="15" height="15" fill="rgb(234,149,7)"/><text x="612.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="609" y="356" width="15" height="15" fill="rgb(229,122,52)"/><text x="612.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="609" y="372" width="15" height="15" fill="rgb(243,180,18)"/><text x="612.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="609" y="388" width="15" height="15" fill="rgb(222,217,12)"/><text x="612.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="609" y="404" width="15" height="15" fill="rgb(205,225,47)"/><text x="612.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="609" y="420" width="15" height="15" fill="rgb(246,133,29)"/><text x="612.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.23%)</title><rect x="609" y="436" width="15" height="15" fill="rgb(220,206,36)"/><text x="612.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="609" y="452" width="15" height="15" fill="rgb(234,64,37)"/><text x="612.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="609" y="468" width="15" height="15" fill="rgb(244,209,44)"/><text x="612.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="609" y="484" width="15" height="15" fill="rgb(220,188,51)"/><text x="612.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="609" y="500" width="15" height="15" fill="rgb(207,180,21)"/><text x="612.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="609" y="516" width="15" height="15" fill="rgb(214,56,8)"/><text x="612.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.82%)</title><rect x="614" y="532" width="10" height="15" fill="rgb(235,155,44)"/><text x="617.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="548" width="10" height="15" fill="rgb(229,160,23)"/><text x="617.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="564" width="10" height="15" fill="rgb(229,162,49)"/><text x="617.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="580" width="10" height="15" fill="rgb(215,71,13)"/><text x="617.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="596" width="10" height="15" fill="rgb(229,214,34)"/><text x="617.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="612" width="10" height="15" fill="rgb(221,172,18)"/><text x="617.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.82%)</title><rect x="614" y="628" width="10" height="15" fill="rgb(231,20,29)"/><text x="617.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="644" width="10" height="15" fill="rgb(245,116,25)"/><text x="617.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="660" width="10" height="15" fill="rgb(247,59,5)"/><text x="617.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="676" width="10" height="15" fill="rgb(228,143,36)"/><text x="617.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="692" width="10" height="15" fill="rgb(238,30,5)"/><text x="617.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="708" width="10" height="15" fill="rgb(248,134,13)"/><text x="617.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.82%)</title><rect x="614" y="724" width="10" height="15" fill="rgb(209,80,3)"/><text x="617.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="740" width="10" height="15" fill="rgb(221,184,41)"/><text x="617.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="614" y="756" width="10" height="15" fill="rgb(251,70,41)"/><text x="617.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="772" width="10" height="15" fill="rgb(234,166,18)"/><text x="617.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="788" width="10" height="15" fill="rgb(205,1,18)"/><text x="617.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="804" width="10" height="15" fill="rgb(249,93,37)"/><text x="617.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="820" width="10" height="15" fill="rgb(207,72,47)"/><text x="617.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="836" width="10" height="15" fill="rgb(214,212,27)"/><text x="617.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="852" width="10" height="15" fill="rgb(206,147,30)"/><text x="617.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.82%)</title><rect x="614" y="868" width="10" height="15" fill="rgb(247,168,28)"/><text x="617.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="884" width="10" height="15" fill="rgb(234,90,14)"/><text x="617.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="900" width="10" height="15" fill="rgb(220,169,30)"/><text x="617.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="916" width="10" height="15" fill="rgb(243,75,0)"/><text x="617.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="932" width="10" height="15" fill="rgb(236,217,4)"/><text x="617.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="948" width="10" height="15" fill="rgb(245,112,30)"/><text x="617.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.82%)</title><rect x="614" y="964" width="10" height="15" fill="rgb(210,98,7)"/><text x="617.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.82%)</title><rect x="614" y="980" width="10" height="15" fill="rgb(244,11,40)"/><text x="617.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="996" width="10" height="15" fill="rgb(223,100,52)"/><text x="617.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="1012" width="10" height="15" fill="rgb(237,137,37)"/><text x="617.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="1028" width="10" height="15" fill="rgb(233,207,25)"/><text x="617.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="1044" width="10" height="15" fill="rgb(244,181,44)"/><text x="617.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="1060" width="10" height="15" fill="rgb(223,144,33)"/><text x="617.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="1076" width="10" height="15" fill="rgb(213,151,35)"/><text x="617.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.82%)</title><rect x="614" y="1092" width="10" height="15" fill="rgb(227,75,38)"/><text x="617.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.82%)</title><rect x="614" y="1108" width="10" height="15" fill="rgb(235,45,46)"/><text x="617.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="1124" width="10" height="15" fill="rgb(222,209,39)"/><text x="617.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="1140" width="10" height="15" fill="rgb(248,64,10)"/><text x="617.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="1156" width="10" height="15" fill="rgb(227,172,33)"/><text x="617.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="1172" width="10" height="15" fill="rgb(228,14,32)"/><text x="617.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="1188" width="10" height="15" fill="rgb(248,12,24)"/><text x="617.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="1204" width="10" height="15" fill="rgb(243,4,1)"/><text x="617.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.82%)</title><rect x="614" y="1220" width="10" height="15" fill="rgb(235,125,53)"/><text x="617.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="614" y="1236" width="10" height="15" fill="rgb(236,22,23)"/><text x="617.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="614" y="1252" width="10" height="15" fill="rgb(215,143,48)"/><text x="617.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="614" y="1268" width="10" height="15" fill="rgb(224,191,47)"/><text x="617.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="614" y="1284" width="10" height="15" fill="rgb(209,208,50)"/><text x="617.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="614" y="1300" width="10" height="15" fill="rgb(233,131,29)"/><text x="617.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.41%)</title><rect x="619" y="1316" width="5" height="15" fill="rgb(226,180,0)"/><text x="622.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="619" y="1332" width="5" height="15" fill="rgb(234,202,47)"/><text x="622.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="619" y="1348" width="5" height="15" fill="rgb(219,175,11)"/><text x="622.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="619" y="1364" width="5" height="15" fill="rgb(246,169,4)"/><text x="622.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="619" y="1380" width="5" height="15" fill="rgb(239,160,53)"/><text x="622.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="619" y="1396" width="5" height="15" fill="rgb(243,74,14)"/><text x="622.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.41%)</title><rect x="619" y="1412" width="5" height="15" fill="rgb(228,69,11)"/><text x="622.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.41%)</title><rect x="619" y="1428" width="5" height="15" fill="rgb(252,110,53)"/><text x="622.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="619" y="1444" width="5" height="15" fill="rgb(220,98,23)"/><text x="622.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="619" y="1460" width="5" height="15" fill="rgb(224,156,10)"/><text x="622.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="619" y="1476" width="5" height="15" fill="rgb(218,16,51)"/><text x="622.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="619" y="1492" width="5" height="15" fill="rgb(252,208,30)"/><text x="622.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="619" y="1508" width="5" height="15" fill="rgb(238,83,54)"/><text x="622.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.41%)</title><rect x="619" y="1524" width="5" height="15" fill="rgb(252,176,19)"/><text x="622.00" y="1534.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.41%)</title><rect x="619" y="1540" width="5" height="15" fill="rgb(226,183,33)"/><text x="622.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="619" y="1556" width="5" height="15" fill="rgb(226,162,38)"/><text x="622.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="619" y="1572" width="5" height="15" fill="rgb(249,97,48)"/><text x="622.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="619" y="1588" width="5" height="15" fill="rgb(232,125,54)"/><text x="622.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="619" y="1604" width="5" height="15" fill="rgb(210,21,43)"/><text x="622.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="619" y="1620" width="5" height="15" fill="rgb(219,42,30)"/><text x="622.00" y="1630.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.41%)</title><rect x="619" y="1636" width="5" height="15" fill="rgb(237,105,30)"/><text x="622.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="619" y="1652" width="5" height="15" fill="rgb(243,210,5)"/><text x="622.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="619" y="1668" width="5" height="15" fill="rgb(212,176,23)"/><text x="622.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="619" y="1684" width="5" height="15" fill="rgb(238,158,46)"/><text x="622.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="619" y="1700" width="5" height="15" fill="rgb(210,151,15)"/><text x="622.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="619" y="1716" width="5" height="15" fill="rgb(231,69,3)"/><text x="622.00" y="1726.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:42) (1 samples, 0.41%)</title><rect x="619" y="1732" width="5" height="15" fill="rgb(239,172,9)"/><text x="622.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="619" y="1748" width="5" height="15" fill="rgb(244,219,29)"/><text x="622.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="619" y="1764" width="5" height="15" fill="rgb(216,226,39)"/><text x="622.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="619" y="1780" width="5" height="15" fill="rgb(212,172,48)"/><text x="622.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="619" y="1796" width="5" height="15" fill="rgb(206,1,43)"/><text x="622.00" y="1806.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.41%)</title><rect x="619" y="1812" width="5" height="15" fill="rgb(254,219,52)"/><text x="622.00" y="1822.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.41%)</title><rect x="619" y="1828" width="5" height="15" fill="rgb(209,227,2)"/><text x="622.00" y="1838.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.41%)</title><rect x="619" y="1844" width="5" height="15" fill="rgb(234,12,29)"/><text x="622.00" y="1854.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="619" y="1860" width="5" height="15" fill="rgb(221,120,19)"/><text x="622.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.41%)</title><rect x="624" y="980" width="5" height="15" fill="rgb(230,72,8)"/><text x="627.00" y="990.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.41%)</title><rect x="624" y="996" width="5" height="15" fill="rgb(220,39,48)"/><text x="627.00" y="1006.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:168) (1 samples, 0.41%)</title><rect x="624" y="1012" width="5" height="15" fill="rgb(230,125,14)"/><text x="627.00" y="1022.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (2 samples, 0.82%)</title><rect x="624" y="772" width="9" height="15" fill="rgb(230,6,23)"/><text x="627.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="624" y="788" width="9" height="15" fill="rgb(211,135,8)"/><text x="627.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="624" y="804" width="9" height="15" fill="rgb(215,156,34)"/><text x="627.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="624" y="820" width="9" height="15" fill="rgb(252,124,37)"/><text x="627.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="624" y="836" width="9" height="15" fill="rgb(221,143,21)"/><text x="627.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="624" y="852" width="9" height="15" fill="rgb(239,106,50)"/><text x="627.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (2 samples, 0.82%)</title><rect x="624" y="868" width="9" height="15" fill="rgb(221,139,1)"/><text x="627.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="624" y="884" width="9" height="15" fill="rgb(243,89,42)"/><text x="627.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="624" y="900" width="9" height="15" fill="rgb(249,224,45)"/><text x="627.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="624" y="916" width="9" height="15" fill="rgb(205,139,25)"/><text x="627.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="624" y="932" width="9" height="15" fill="rgb(208,27,9)"/><text x="627.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="624" y="948" width="9" height="15" fill="rgb(254,115,10)"/><text x="627.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:46) (2 samples, 0.82%)</title><rect x="624" y="964" width="9" height="15" fill="rgb(241,0,21)"/><text x="627.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="629" y="980" width="4" height="15" fill="rgb(243,229,24)"/><text x="632.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="629" y="996" width="4" height="15" fill="rgb(227,176,25)"/><text x="632.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.41%)</title><rect x="629" y="1012" width="4" height="15" fill="rgb(218,90,9)"/><text x="632.00" y="1022.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:588) (1 samples, 0.41%)</title><rect x="629" y="1028" width="4" height="15" fill="rgb(213,171,39)"/><text x="632.00" y="1038.50"></text></g><g><title>_new_module (&lt;frozen importlib._bootstrap&gt;:36) (1 samples, 0.41%)</title><rect x="629" y="1044" width="4" height="15" fill="rgb(213,63,38)"/><text x="632.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.41%)</title><rect x="633" y="900" width="5" height="15" fill="rgb(235,94,44)"/><text x="636.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="916" width="5" height="15" fill="rgb(235,153,43)"/><text x="636.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="633" y="932" width="5" height="15" fill="rgb(231,6,29)"/><text x="636.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="948" width="5" height="15" fill="rgb(248,52,22)"/><text x="636.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="964" width="5" height="15" fill="rgb(216,205,54)"/><text x="636.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="980" width="5" height="15" fill="rgb(230,148,14)"/><text x="636.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="996" width="5" height="15" fill="rgb(254,42,53)"/><text x="636.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="1012" width="5" height="15" fill="rgb(239,17,54)"/><text x="636.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1028" width="5" height="15" fill="rgb(230,190,30)"/><text x="636.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.41%)</title><rect x="633" y="1044" width="5" height="15" fill="rgb(206,138,49)"/><text x="636.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="633" y="1060" width="5" height="15" fill="rgb(227,73,32)"/><text x="636.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1076" width="5" height="15" fill="rgb(244,193,45)"/><text x="636.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="1092" width="5" height="15" fill="rgb(208,180,6)"/><text x="636.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="1108" width="5" height="15" fill="rgb(250,189,25)"/><text x="636.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="1124" width="5" height="15" fill="rgb(207,154,41)"/><text x="636.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="1140" width="5" height="15" fill="rgb(213,145,26)"/><text x="636.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1156" width="5" height="15" fill="rgb(230,212,9)"/><text x="636.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.41%)</title><rect x="633" y="1172" width="5" height="15" fill="rgb(239,65,43)"/><text x="636.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="633" y="1188" width="5" height="15" fill="rgb(223,39,30)"/><text x="636.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1204" width="5" height="15" fill="rgb(239,215,16)"/><text x="636.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="1220" width="5" height="15" fill="rgb(252,183,24)"/><text x="636.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="1236" width="5" height="15" fill="rgb(217,76,44)"/><text x="636.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="1252" width="5" height="15" fill="rgb(228,26,43)"/><text x="636.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="1268" width="5" height="15" fill="rgb(209,157,29)"/><text x="636.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1284" width="5" height="15" fill="rgb(234,46,0)"/><text x="636.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.41%)</title><rect x="633" y="1300" width="5" height="15" fill="rgb(228,229,20)"/><text x="636.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="1316" width="5" height="15" fill="rgb(237,197,5)"/><text x="636.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="1332" width="5" height="15" fill="rgb(222,165,7)"/><text x="636.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="1348" width="5" height="15" fill="rgb(211,122,51)"/><text x="636.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="1364" width="5" height="15" fill="rgb(212,74,21)"/><text x="636.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1380" width="5" height="15" fill="rgb(235,108,20)"/><text x="636.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.41%)</title><rect x="633" y="1396" width="5" height="15" fill="rgb(244,5,27)"/><text x="636.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="633" y="1412" width="5" height="15" fill="rgb(240,181,0)"/><text x="636.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1428" width="5" height="15" fill="rgb(215,67,36)"/><text x="636.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="1444" width="5" height="15" fill="rgb(233,27,50)"/><text x="636.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="1460" width="5" height="15" fill="rgb(231,87,51)"/><text x="636.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="1476" width="5" height="15" fill="rgb(205,196,10)"/><text x="636.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="1492" width="5" height="15" fill="rgb(225,118,53)"/><text x="636.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="1508" width="5" height="15" fill="rgb(206,173,24)"/><text x="636.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ed448.py:15) (1 samples, 0.41%)</title><rect x="633" y="1524" width="5" height="15" fill="rgb(218,196,25)"/><text x="636.00" y="1534.50"></text></g><g><title>wrapper (six.py:860) (1 samples, 0.41%)</title><rect x="633" y="1540" width="5" height="15" fill="rgb(215,101,23)"/><text x="636.00" y="1550.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.41%)</title><rect x="633" y="1556" width="5" height="15" fill="rgb(248,122,54)"/><text x="636.00" y="1566.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:4) (21 samples, 8.61%)</title><rect x="541" y="52" width="102" height="15" fill="rgb(220,84,31)"/><text x="544.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 8.61%)</title><rect x="541" y="68" width="102" height="15" fill="rgb(235,105,21)"/><text x="544.00" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 8.61%)</title><rect x="541" y="84" width="102" height="15" fill="rgb(242,47,15)"/><text x="544.00" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 8.61%)</title><rect x="541" y="100" width="102" height="15" fill="rgb(223,19,51)"/><text x="544.00" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 8.61%)</title><rect x="541" y="116" width="102" height="15" fill="rgb(254,48,22)"/><text x="544.00" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 8.61%)</title><rect x="541" y="132" width="102" height="15" fill="rgb(247,30,8)"/><text x="544.00" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (4 samples, 1.64%)</title><rect x="624" y="148" width="19" height="15" fill="rgb(245,208,48)"/><text x="627.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="164" width="19" height="15" fill="rgb(252,203,40)"/><text x="627.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="180" width="19" height="15" fill="rgb(205,150,13)"/><text x="627.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="196" width="19" height="15" fill="rgb(227,33,31)"/><text x="627.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="212" width="19" height="15" fill="rgb(249,173,7)"/><text x="627.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="228" width="19" height="15" fill="rgb(226,126,46)"/><text x="627.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.64%)</title><rect x="624" y="244" width="19" height="15" fill="rgb(237,126,13)"/><text x="627.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="260" width="19" height="15" fill="rgb(233,201,22)"/><text x="627.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="276" width="19" height="15" fill="rgb(224,141,42)"/><text x="627.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="292" width="19" height="15" fill="rgb(213,120,0)"/><text x="627.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="308" width="19" height="15" fill="rgb(218,56,11)"/><text x="627.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="324" width="19" height="15" fill="rgb(244,15,25)"/><text x="627.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.64%)</title><rect x="624" y="340" width="19" height="15" fill="rgb(207,82,26)"/><text x="627.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="356" width="19" height="15" fill="rgb(251,42,3)"/><text x="627.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.64%)</title><rect x="624" y="372" width="19" height="15" fill="rgb(233,149,4)"/><text x="627.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="388" width="19" height="15" fill="rgb(218,2,1)"/><text x="627.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="404" width="19" height="15" fill="rgb(242,192,2)"/><text x="627.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="420" width="19" height="15" fill="rgb(238,3,0)"/><text x="627.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="436" width="19" height="15" fill="rgb(213,131,41)"/><text x="627.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="452" width="19" height="15" fill="rgb(235,226,24)"/><text x="627.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="468" width="19" height="15" fill="rgb(241,4,25)"/><text x="627.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (4 samples, 1.64%)</title><rect x="624" y="484" width="19" height="15" fill="rgb(218,92,49)"/><text x="627.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="500" width="19" height="15" fill="rgb(217,75,54)"/><text x="627.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="516" width="19" height="15" fill="rgb(241,228,54)"/><text x="627.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="532" width="19" height="15" fill="rgb(235,54,20)"/><text x="627.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="548" width="19" height="15" fill="rgb(242,182,43)"/><text x="627.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="564" width="19" height="15" fill="rgb(238,155,25)"/><text x="627.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (4 samples, 1.64%)</title><rect x="624" y="580" width="19" height="15" fill="rgb(217,75,21)"/><text x="627.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="596" width="19" height="15" fill="rgb(222,60,2)"/><text x="627.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="612" width="19" height="15" fill="rgb(250,209,6)"/><text x="627.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="628" width="19" height="15" fill="rgb(225,111,40)"/><text x="627.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="644" width="19" height="15" fill="rgb(250,224,46)"/><text x="627.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="660" width="19" height="15" fill="rgb(249,21,16)"/><text x="627.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (4 samples, 1.64%)</title><rect x="624" y="676" width="19" height="15" fill="rgb(216,27,30)"/><text x="627.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.64%)</title><rect x="624" y="692" width="19" height="15" fill="rgb(245,89,39)"/><text x="627.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.64%)</title><rect x="624" y="708" width="19" height="15" fill="rgb(234,91,46)"/><text x="627.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.64%)</title><rect x="624" y="724" width="19" height="15" fill="rgb(243,105,6)"/><text x="627.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.64%)</title><rect x="624" y="740" width="19" height="15" fill="rgb(250,163,44)"/><text x="627.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.64%)</title><rect x="624" y="756" width="19" height="15" fill="rgb(250,176,3)"/><text x="627.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.82%)</title><rect x="633" y="772" width="10" height="15" fill="rgb(232,80,18)"/><text x="636.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.82%)</title><rect x="633" y="788" width="10" height="15" fill="rgb(211,46,41)"/><text x="636.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="633" y="804" width="10" height="15" fill="rgb(232,38,40)"/><text x="636.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="633" y="820" width="10" height="15" fill="rgb(233,196,16)"/><text x="636.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="633" y="836" width="10" height="15" fill="rgb(232,163,32)"/><text x="636.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="633" y="852" width="10" height="15" fill="rgb(248,138,35)"/><text x="636.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="633" y="868" width="10" height="15" fill="rgb(240,157,35)"/><text x="636.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="633" y="884" width="10" height="15" fill="rgb(250,116,35)"/><text x="636.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.41%)</title><rect x="638" y="900" width="5" height="15" fill="rgb(233,102,1)"/><text x="641.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="638" y="916" width="5" height="15" fill="rgb(245,10,26)"/><text x="641.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="638" y="932" width="5" height="15" fill="rgb(236,217,8)"/><text x="641.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="638" y="948" width="5" height="15" fill="rgb(254,117,37)"/><text x="641.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="638" y="964" width="5" height="15" fill="rgb(247,156,26)"/><text x="641.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="638" y="980" width="5" height="15" fill="rgb(239,44,26)"/><text x="641.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.41%)</title><rect x="638" y="996" width="5" height="15" fill="rgb(249,53,15)"/><text x="641.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="638" y="1012" width="5" height="15" fill="rgb(236,114,30)"/><text x="641.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="638" y="1028" width="5" height="15" fill="rgb(244,34,11)"/><text x="641.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="638" y="1044" width="5" height="15" fill="rgb(219,164,1)"/><text x="641.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="638" y="1060" width="5" height="15" fill="rgb(222,136,28)"/><text x="641.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="638" y="1076" width="5" height="15" fill="rgb(213,45,9)"/><text x="641.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:68) (1 samples, 0.41%)</title><rect x="638" y="1092" width="5" height="15" fill="rgb(236,29,38)"/><text x="641.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="638" y="1108" width="5" height="15" fill="rgb(242,92,24)"/><text x="641.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="638" y="1124" width="5" height="15" fill="rgb(218,176,50)"/><text x="641.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="638" y="1140" width="5" height="15" fill="rgb(243,194,3)"/><text x="641.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="638" y="1156" width="5" height="15" fill="rgb(248,3,20)"/><text x="641.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="638" y="1172" width="5" height="15" fill="rgb(237,98,40)"/><text x="641.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x448.py:18) (1 samples, 0.41%)</title><rect x="638" y="1188" width="5" height="15" fill="rgb(245,201,4)"/><text x="641.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.41%)</title><rect x="638" y="1204" width="5" height="15" fill="rgb(221,221,54)"/><text x="641.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:108) (1 samples, 0.41%)</title><rect x="638" y="1220" width="5" height="15" fill="rgb(251,108,19)"/><text x="641.00" y="1230.50"></text></g><g><title>__eq__ (inspect.py:2877) (1 samples, 0.41%)</title><rect x="638" y="1236" width="5" height="15" fill="rgb(219,217,42)"/><text x="641.00" y="1246.50"></text></g><g><title>_hash_basis (inspect.py:2862) (1 samples, 0.41%)</title><rect x="638" y="1252" width="5" height="15" fill="rgb(243,41,14)"/><text x="641.00" y="1262.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:28) (1 samples, 0.41%)</title><rect x="643" y="84" width="5" height="15" fill="rgb(224,131,30)"/><text x="646.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.41%)</title><rect x="643" y="100" width="5" height="15" fill="rgb(232,142,34)"/><text x="646.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.41%)</title><rect x="643" y="116" width="5" height="15" fill="rgb(208,149,12)"/><text x="646.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.41%)</title><rect x="643" y="132" width="5" height="15" fill="rgb(206,74,23)"/><text x="646.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.41%)</title><rect x="643" y="148" width="5" height="15" fill="rgb(243,72,18)"/><text x="646.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.41%)</title><rect x="643" y="164" width="5" height="15" fill="rgb(245,24,10)"/><text x="646.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.41%)</title><rect x="643" y="180" width="5" height="15" fill="rgb(211,186,36)"/><text x="646.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.41%)</title><rect x="643" y="196" width="5" height="15" fill="rgb(239,84,34)"/><text x="646.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="643" y="212" width="5" height="15" fill="rgb(246,75,37)"/><text x="646.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="643" y="228" width="5" height="15" fill="rgb(235,211,2)"/><text x="646.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="643" y="244" width="5" height="15" fill="rgb(208,205,11)"/><text x="646.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="643" y="260" width="5" height="15" fill="rgb(220,26,30)"/><text x="646.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="643" y="276" width="5" height="15" fill="rgb(246,120,36)"/><text x="646.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.41%)</title><rect x="643" y="292" width="5" height="15" fill="rgb(248,91,36)"/><text x="646.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="643" y="308" width="5" height="15" fill="rgb(221,227,40)"/><text x="646.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="643" y="324" width="5" height="15" fill="rgb(248,22,49)"/><text x="646.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="643" y="340" width="5" height="15" fill="rgb(253,93,19)"/><text x="646.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="643" y="356" width="5" height="15" fill="rgb(230,121,27)"/><text x="646.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="643" y="372" width="5" height="15" fill="rgb(218,76,6)"/><text x="646.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.41%)</title><rect x="643" y="388" width="5" height="15" fill="rgb(230,69,22)"/><text x="646.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.41%)</title><rect x="643" y="404" width="5" height="15" fill="rgb(207,171,0)"/><text x="646.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.41%)</title><rect x="643" y="420" width="5" height="15" fill="rgb(230,78,54)"/><text x="646.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.41%)</title><rect x="643" y="436" width="5" height="15" fill="rgb(243,129,43)"/><text x="646.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.41%)</title><rect x="643" y="452" width="5" height="15" fill="rgb(225,30,31)"/><text x="646.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:42) (1 samples, 0.41%)</title><rect x="643" y="468" width="5" height="15" fill="rgb(234,210,22)"/><text x="646.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:242) (1 samples, 0.41%)</title><rect x="643" y="484" width="5" height="15" fill="rgb(228,155,51)"/><text x="646.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 1.23%)</title><rect x="662" y="148" width="15" height="15" fill="rgb(249,182,4)"/><text x="665.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.41%)</title><rect x="677" y="164" width="5" height="15" fill="rgb(225,82,30)"/><text x="680.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (2 samples, 0.82%)</title><rect x="682" y="164" width="9" height="15" fill="rgb(211,179,42)"/><text x="685.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 2.05%)</title><rect x="701" y="180" width="24" height="15" fill="rgb(210,143,11)"/><text x="704.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.41%)</title><rect x="720" y="196" width="5" height="15" fill="rgb(229,10,54)"/><text x="723.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.41%)</title><rect x="754" y="260" width="5" height="15" fill="rgb(251,198,3)"/><text x="757.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.41%)</title><rect x="754" y="276" width="5" height="15" fill="rgb(212,206,30)"/><text x="757.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.41%)</title><rect x="759" y="292" width="5" height="15" fill="rgb(233,48,20)"/><text x="762.00" y="302.50"></text></g><g><title>_fix_unknown_dimension (shape.c:486) (1 samples, 0.41%)</title><rect x="759" y="308" width="5" height="15" fill="rgb(239,107,7)"/><text x="762.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.82%)</title><rect x="759" y="260" width="10" height="15" fill="rgb(254,187,20)"/><text x="762.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.82%)</title><rect x="759" y="276" width="10" height="15" fill="rgb(216,39,43)"/><text x="762.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.41%)</title><rect x="764" y="292" width="5" height="15" fill="rgb(222,35,43)"/><text x="767.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.41%)</title><rect x="764" y="308" width="5" height="15" fill="rgb(235,203,53)"/><text x="767.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.41%)</title><rect x="769" y="308" width="5" height="15" fill="rgb(209,66,21)"/><text x="772.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.41%)</title><rect x="774" y="388" width="4" height="15" fill="rgb(245,73,16)"/><text x="777.00" y="398.50"></text></g><g><title>0x7f86673e1151 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="774" y="404" width="4" height="15" fill="rgb(211,210,4)"/><text x="777.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.82%)</title><rect x="774" y="308" width="9" height="15" fill="rgb(208,192,0)"/><text x="777.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.82%)</title><rect x="774" y="324" width="9" height="15" fill="rgb(226,175,4)"/><text x="777.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.82%)</title><rect x="774" y="340" width="9" height="15" fill="rgb(218,188,22)"/><text x="777.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.82%)</title><rect x="774" y="356" width="9" height="15" fill="rgb(236,152,54)"/><text x="777.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.82%)</title><rect x="774" y="372" width="9" height="15" fill="rgb(248,209,47)"/><text x="777.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.41%)</title><rect x="778" y="388" width="5" height="15" fill="rgb(218,106,15)"/><text x="781.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.41%)</title><rect x="783" y="324" width="5" height="15" fill="rgb(238,200,32)"/><text x="786.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.41%)</title><rect x="788" y="356" width="5" height="15" fill="rgb(231,198,35)"/><text x="791.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.41%)</title><rect x="788" y="372" width="5" height="15" fill="rgb(235,90,24)"/><text x="791.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.41%)</title><rect x="788" y="388" width="5" height="15" fill="rgb(242,44,25)"/><text x="791.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.41%)</title><rect x="788" y="404" width="5" height="15" fill="rgb(229,84,42)"/><text x="791.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.41%)</title><rect x="788" y="420" width="5" height="15" fill="rgb(206,13,38)"/><text x="791.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.41%)</title><rect x="788" y="436" width="5" height="15" fill="rgb(212,38,12)"/><text x="791.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:77) (1 samples, 0.41%)</title><rect x="793" y="404" width="5" height="15" fill="rgb(226,82,9)"/><text x="796.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.82%)</title><rect x="793" y="356" width="10" height="15" fill="rgb(205,26,52)"/><text x="796.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.82%)</title><rect x="793" y="372" width="10" height="15" fill="rgb(214,40,17)"/><text x="796.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.82%)</title><rect x="793" y="388" width="10" height="15" fill="rgb(220,109,16)"/><text x="796.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:90) (1 samples, 0.41%)</title><rect x="798" y="404" width="5" height="15" fill="rgb(241,3,46)"/><text x="801.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.41%)</title><rect x="803" y="388" width="4" height="15" fill="rgb(241,16,16)"/><text x="806.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.82%)</title><rect x="803" y="356" width="9" height="15" fill="rgb(242,135,11)"/><text x="806.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.82%)</title><rect x="803" y="372" width="9" height="15" fill="rgb(225,154,53)"/><text x="806.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2048) (1 samples, 0.41%)</title><rect x="807" y="388" width="5" height="15" fill="rgb(228,28,12)"/><text x="810.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 2.46%)</title><rect x="788" y="324" width="29" height="15" fill="rgb(253,123,2)"/><text x="791.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 2.46%)</title><rect x="788" y="340" width="29" height="15" fill="rgb(216,57,44)"/><text x="791.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.41%)</title><rect x="812" y="356" width="5" height="15" fill="rgb(218,134,50)"/><text x="815.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.41%)</title><rect x="812" y="372" width="5" height="15" fill="rgb(220,126,44)"/><text x="815.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.41%)</title><rect x="812" y="388" width="5" height="15" fill="rgb(247,202,44)"/><text x="815.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 4.51%)</title><rect x="769" y="260" width="53" height="15" fill="rgb(224,201,28)"/><text x="772.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 4.51%)</title><rect x="769" y="276" width="53" height="15" fill="rgb(233,53,23)"/><text x="772.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 4.51%)</title><rect x="769" y="292" width="53" height="15" fill="rgb(240,171,49)"/><text x="772.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 3.28%)</title><rect x="783" y="308" width="39" height="15" fill="rgb(235,132,43)"/><text x="786.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.41%)</title><rect x="817" y="324" width="5" height="15" fill="rgb(249,21,18)"/><text x="820.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.41%)</title><rect x="817" y="340" width="5" height="15" fill="rgb(252,79,44)"/><text x="820.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.41%)</title><rect x="822" y="260" width="5" height="15" fill="rgb(216,58,18)"/><text x="825.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.41%)</title><rect x="822" y="276" width="5" height="15" fill="rgb(215,35,51)"/><text x="825.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.41%)</title><rect x="822" y="292" width="5" height="15" fill="rgb(243,205,34)"/><text x="825.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.41%)</title><rect x="822" y="308" width="5" height="15" fill="rgb(218,96,3)"/><text x="825.00" y="318.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1338) (1 samples, 0.41%)</title><rect x="832" y="308" width="4" height="15" fill="rgb(210,161,35)"/><text x="835.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.23%)</title><rect x="827" y="260" width="14" height="15" fill="rgb(229,197,15)"/><text x="830.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.23%)</title><rect x="827" y="276" width="14" height="15" fill="rgb(238,57,51)"/><text x="830.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 1.23%)</title><rect x="827" y="292" width="14" height="15" fill="rgb(232,39,3)"/><text x="830.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.41%)</title><rect x="836" y="308" width="5" height="15" fill="rgb(250,153,22)"/><text x="839.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.41%)</title><rect x="836" y="324" width="5" height="15" fill="rgb(243,2,4)"/><text x="839.00" y="334.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 9.43%)</title><rect x="735" y="244" width="111" height="15" fill="rgb(212,28,54)"/><text x="738.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.41%)</title><rect x="841" y="260" width="5" height="15" fill="rgb(229,31,53)"/><text x="844.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.41%)</title><rect x="841" y="276" width="5" height="15" fill="rgb(240,187,17)"/><text x="844.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.41%)</title><rect x="846" y="276" width="5" height="15" fill="rgb(208,55,40)"/><text x="849.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.41%)</title><rect x="846" y="292" width="5" height="15" fill="rgb(206,48,41)"/><text x="849.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.41%)</title><rect x="851" y="308" width="5" height="15" fill="rgb(253,71,18)"/><text x="854.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.41%)</title><rect x="851" y="324" width="5" height="15" fill="rgb(215,223,33)"/><text x="854.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.41%)</title><rect x="851" y="340" width="5" height="15" fill="rgb(206,32,2)"/><text x="854.00" y="350.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:853) (1 samples, 0.41%)</title><rect x="851" y="356" width="5" height="15" fill="rgb(208,183,4)"/><text x="854.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.41%)</title><rect x="856" y="308" width="5" height="15" fill="rgb(207,140,6)"/><text x="859.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.41%)</title><rect x="856" y="324" width="5" height="15" fill="rgb(233,150,5)"/><text x="859.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.23%)</title><rect x="851" y="276" width="14" height="15" fill="rgb(254,41,29)"/><text x="854.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.23%)</title><rect x="851" y="292" width="14" height="15" fill="rgb(223,106,23)"/><text x="854.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.41%)</title><rect x="861" y="308" width="4" height="15" fill="rgb(208,221,16)"/><text x="864.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1742) (1 samples, 0.41%)</title><rect x="861" y="324" width="4" height="15" fill="rgb(221,24,28)"/><text x="864.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 2.05%)</title><rect x="846" y="260" width="24" height="15" fill="rgb(206,52,8)"/><text x="849.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.41%)</title><rect x="865" y="276" width="5" height="15" fill="rgb(230,184,31)"/><text x="868.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 12.30%)</title><rect x="730" y="196" width="145" height="15" fill="rgb(222,203,42)"/><text x="733.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 12.30%)</title><rect x="730" y="212" width="145" height="15" fill="rgb(225,215,1)"/><text x="733.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (29 samples, 11.89%)</title><rect x="735" y="228" width="140" height="15" fill="rgb(209,37,38)"/><text x="738.00" y="238.50">_run (mlprodict/o..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 2.46%)</title><rect x="846" y="244" width="29" height="15" fill="rgb(237,151,26)"/><text x="849.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.41%)</title><rect x="870" y="260" width="5" height="15" fill="rgb(246,229,35)"/><text x="873.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.41%)</title><rect x="870" y="276" width="5" height="15" fill="rgb(251,75,35)"/><text x="873.00" y="286.50"></text></g><g><title>0x7f8667324120 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="870" y="292" width="5" height="15" fill="rgb(209,164,48)"/><text x="873.00" y="302.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.41%)</title><rect x="890" y="244" width="5" height="15" fill="rgb(240,123,11)"/><text x="893.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:231) (1 samples, 0.41%)</title><rect x="904" y="276" width="5" height="15" fill="rgb(231,63,31)"/><text x="907.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.41%)</title><rect x="909" y="308" width="5" height="15" fill="rgb(243,104,48)"/><text x="912.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.82%)</title><rect x="909" y="276" width="10" height="15" fill="rgb(210,211,5)"/><text x="912.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.82%)</title><rect x="909" y="292" width="10" height="15" fill="rgb(234,90,23)"/><text x="912.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.41%)</title><rect x="914" y="308" width="5" height="15" fill="rgb(245,65,1)"/><text x="917.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.41%)</title><rect x="914" y="324" width="5" height="15" fill="rgb(228,187,2)"/><text x="917.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.41%)</title><rect x="914" y="340" width="5" height="15" fill="rgb(239,216,14)"/><text x="917.00" y="350.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.41%)</title><rect x="919" y="292" width="5" height="15" fill="rgb(227,15,32)"/><text x="922.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.41%)</title><rect x="924" y="340" width="4" height="15" fill="rgb(233,223,10)"/><text x="927.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.41%)</title><rect x="924" y="356" width="4" height="15" fill="rgb(245,44,35)"/><text x="927.00" y="366.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.41%)</title><rect x="924" y="372" width="4" height="15" fill="rgb(237,57,41)"/><text x="927.00" y="382.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (2 samples, 0.82%)</title><rect x="924" y="308" width="9" height="15" fill="rgb(208,60,3)"/><text x="927.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.82%)</title><rect x="924" y="324" width="9" height="15" fill="rgb(212,99,49)"/><text x="927.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2214) (1 samples, 0.41%)</title><rect x="928" y="340" width="5" height="15" fill="rgb(207,184,35)"/><text x="931.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (10 samples, 4.10%)</title><rect x="890" y="228" width="48" height="15" fill="rgb(206,193,27)"/><text x="893.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (9 samples, 3.69%)</title><rect x="895" y="244" width="43" height="15" fill="rgb(246,220,0)"/><text x="898.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (9 samples, 3.69%)</title><rect x="895" y="260" width="43" height="15" fill="rgb(238,209,53)"/><text x="898.00" y="270.50">dot ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.64%)</title><rect x="919" y="276" width="19" height="15" fill="rgb(216,95,34)"/><text x="922.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 1.23%)</title><rect x="924" y="292" width="14" height="15" fill="rgb(237,154,8)"/><text x="927.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.41%)</title><rect x="933" y="308" width="5" height="15" fill="rgb(231,3,41)"/><text x="936.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:564) (1 samples, 0.41%)</title><rect x="933" y="324" width="5" height="15" fill="rgb(237,104,27)"/><text x="936.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.41%)</title><rect x="938" y="228" width="5" height="15" fill="rgb(226,124,32)"/><text x="941.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.41%)</title><rect x="953" y="276" width="4" height="15" fill="rgb(248,172,20)"/><text x="956.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.41%)</title><rect x="953" y="292" width="4" height="15" fill="rgb(249,109,51)"/><text x="956.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.41%)</title><rect x="957" y="292" width="5" height="15" fill="rgb(235,40,36)"/><text x="960.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.41%)</title><rect x="957" y="308" width="5" height="15" fill="rgb(205,139,16)"/><text x="960.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.41%)</title><rect x="957" y="324" width="5" height="15" fill="rgb(215,80,50)"/><text x="960.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:322) (1 samples, 0.41%)</title><rect x="962" y="308" width="5" height="15" fill="rgb(230,7,38)"/><text x="965.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 2.46%)</title><rect x="943" y="228" width="29" height="15" fill="rgb(221,9,49)"/><text x="946.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.64%)</title><rect x="953" y="244" width="19" height="15" fill="rgb(223,94,52)"/><text x="956.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.64%)</title><rect x="953" y="260" width="19" height="15" fill="rgb(251,161,31)"/><text x="956.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.23%)</title><rect x="957" y="276" width="15" height="15" fill="rgb(254,129,45)"/><text x="960.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.82%)</title><rect x="962" y="292" width="10" height="15" fill="rgb(228,133,27)"/><text x="965.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.41%)</title><rect x="967" y="308" width="5" height="15" fill="rgb(212,156,54)"/><text x="970.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.41%)</title><rect x="967" y="324" width="5" height="15" fill="rgb(215,11,31)"/><text x="970.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (2 samples, 0.82%)</title><rect x="972" y="228" width="10" height="15" fill="rgb(248,5,45)"/><text x="975.00" y="238.50"></text></g><g><title>0x7f86673e1151 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="977" y="244" width="5" height="15" fill="rgb(233,9,51)"/><text x="980.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.41%)</title><rect x="986" y="260" width="5" height="15" fill="rgb(212,199,39)"/><text x="989.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.41%)</title><rect x="986" y="276" width="5" height="15" fill="rgb(223,160,27)"/><text x="989.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.41%)</title><rect x="991" y="276" width="5" height="15" fill="rgb(232,57,16)"/><text x="994.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.41%)</title><rect x="991" y="292" width="5" height="15" fill="rgb(210,61,28)"/><text x="994.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.41%)</title><rect x="991" y="308" width="5" height="15" fill="rgb(228,136,19)"/><text x="994.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.41%)</title><rect x="991" y="324" width="5" height="15" fill="rgb(221,97,1)"/><text x="994.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.41%)</title><rect x="991" y="340" width="5" height="15" fill="rgb(207,218,41)"/><text x="994.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.41%)</title><rect x="991" y="356" width="5" height="15" fill="rgb(243,72,41)"/><text x="994.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.41%)</title><rect x="991" y="372" width="5" height="15" fill="rgb(234,145,31)"/><text x="994.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.23%)</title><rect x="986" y="244" width="15" height="15" fill="rgb(245,50,9)"/><text x="989.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.82%)</title><rect x="991" y="260" width="10" height="15" fill="rgb(252,90,5)"/><text x="994.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.41%)</title><rect x="996" y="276" width="5" height="15" fill="rgb(252,111,11)"/><text x="999.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.41%)</title><rect x="996" y="292" width="5" height="15" fill="rgb(215,165,17)"/><text x="999.00" y="302.50"></text></g><g><title>0x7f864970833d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="996" y="308" width="5" height="15" fill="rgb(219,169,37)"/><text x="999.00" y="318.50"></text></g><g><title>0x7f864972a214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="996" y="324" width="5" height="15" fill="rgb(228,60,4)"/><text x="999.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.41%)</title><rect x="996" y="340" width="5" height="15" fill="rgb(226,215,45)"/><text x="999.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (5 samples, 2.05%)</title><rect x="982" y="228" width="24" height="15" fill="rgb(237,67,8)"/><text x="985.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.41%)</title><rect x="1001" y="244" width="5" height="15" fill="rgb(211,119,37)"/><text x="1004.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.41%)</title><rect x="1001" y="260" width="5" height="15" fill="rgb(211,65,35)"/><text x="1004.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.82%)</title><rect x="1006" y="244" width="9" height="15" fill="rgb(233,161,5)"/><text x="1009.00" y="254.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.41%)</title><rect x="1030" y="324" width="5" height="15" fill="rgb(228,133,2)"/><text x="1033.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1030" y="340" width="5" height="15" fill="rgb(228,17,14)"/><text x="1033.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (34 samples, 13.93%)</title><rect x="875" y="196" width="165" height="15" fill="rgb(225,58,23)"/><text x="878.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 13.11%)</title><rect x="885" y="212" width="155" height="15" fill="rgb(236,212,40)"/><text x="888.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 2.87%)</title><rect x="1006" y="228" width="34" height="15" fill="rgb(218,40,46)"/><text x="1009.00" y="238.50">_r..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 2.05%)</title><rect x="1015" y="244" width="25" height="15" fill="rgb(234,121,41)"/><text x="1018.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.05%)</title><rect x="1015" y="260" width="25" height="15" fill="rgb(237,87,37)"/><text x="1018.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 2.05%)</title><rect x="1015" y="276" width="25" height="15" fill="rgb(215,117,9)"/><text x="1018.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.23%)</title><rect x="1025" y="292" width="15" height="15" fill="rgb(224,116,18)"/><text x="1028.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.82%)</title><rect x="1030" y="308" width="10" height="15" fill="rgb(235,79,22)"/><text x="1033.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.41%)</title><rect x="1035" y="324" width="5" height="15" fill="rgb(235,23,4)"/><text x="1038.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1035" y="340" width="5" height="15" fill="rgb(236,200,45)"/><text x="1038.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (67 samples, 27.46%)</title><rect x="725" y="180" width="324" height="15" fill="rgb(231,38,10)"/><text x="728.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.82%)</title><rect x="1040" y="196" width="9" height="15" fill="rgb(217,47,7)"/><text x="1043.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3251) (1 samples, 0.41%)</title><rect x="1044" y="212" width="5" height="15" fill="rgb(212,93,5)"/><text x="1047.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.41%)</title><rect x="1049" y="180" width="5" height="15" fill="rgb(221,16,22)"/><text x="1052.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.41%)</title><rect x="1054" y="180" width="5" height="15" fill="rgb(239,0,26)"/><text x="1057.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.41%)</title><rect x="1059" y="180" width="5" height="15" fill="rgb(219,83,14)"/><text x="1062.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (78 samples, 31.97%)</title><rect x="691" y="164" width="378" height="15" fill="rgb(220,179,34)"/><text x="694.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.41%)</title><rect x="1064" y="180" width="5" height="15" fill="rgb(230,222,38)"/><text x="1067.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (86 samples, 35.25%)</title><rect x="658" y="132" width="415" height="15" fill="rgb(230,61,26)"/><text x="661.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (82 samples, 33.61%)</title><rect x="677" y="148" width="396" height="15" fill="rgb(252,161,8)"/><text x="680.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.41%)</title><rect x="1069" y="164" width="4" height="15" fill="rgb(251,20,41)"/><text x="1072.00" y="174.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="1073" y="132" width="5" height="15" fill="rgb(233,50,45)"/><text x="1076.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:45) (91 samples, 37.30%)</title><rect x="643" y="52" width="440" height="15" fill="rgb(208,120,25)"/><text x="646.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:44) (91 samples, 37.30%)</title><rect x="643" y="68" width="440" height="15" fill="rgb(252,222,52)"/><text x="646.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (90 samples, 36.89%)</title><rect x="648" y="84" width="435" height="15" fill="rgb(230,227,18)"/><text x="651.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (90 samples, 36.89%)</title><rect x="648" y="100" width="435" height="15" fill="rgb(252,72,15)"/><text x="651.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (89 samples, 36.48%)</title><rect x="653" y="116" width="430" height="15" fill="rgb(248,96,1)"/><text x="656.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="1078" y="132" width="5" height="15" fill="rgb(219,25,9)"/><text x="1081.00" y="142.50"></text></g><g><title>0x7f8627bacff9 (?) (1 samples, 0.41%)</title><rect x="1102" y="212" width="5" height="15" fill="rgb(208,97,25)"/><text x="1105.00" y="222.50"></text></g><g><title>0x7f8627ba7ef6 (?) (1 samples, 0.41%)</title><rect x="1102" y="228" width="5" height="15" fill="rgb(246,193,31)"/><text x="1105.00" y="238.50"></text></g><g><title>0x7f8627b9c962 (?) (1 samples, 0.41%)</title><rect x="1102" y="244" width="5" height="15" fill="rgb(234,20,1)"/><text x="1105.00" y="254.50"></text></g><g><title>0x7f8627bd07a7 (?) (1 samples, 0.41%)</title><rect x="1102" y="260" width="5" height="15" fill="rgb(232,146,32)"/><text x="1105.00" y="270.50"></text></g><g><title>0x7f8627bd0379 (?) (1 samples, 0.41%)</title><rect x="1102" y="276" width="5" height="15" fill="rgb(228,208,18)"/><text x="1105.00" y="286.50"></text></g><g><title>0x7f862802e8b8 (?) (1 samples, 0.41%)</title><rect x="1102" y="292" width="5" height="15" fill="rgb(236,217,16)"/><text x="1105.00" y="302.50"></text></g><g><title>0x7f862802cc7f (?) (1 samples, 0.41%)</title><rect x="1102" y="308" width="5" height="15" fill="rgb(229,44,33)"/><text x="1105.00" y="318.50"></text></g><g><title>0x7f8628040f25 (?) (1 samples, 0.41%)</title><rect x="1102" y="324" width="5" height="15" fill="rgb(232,179,36)"/><text x="1105.00" y="334.50"></text></g><g><title>0x7f8627fe6cd9 (?) (1 samples, 0.41%)</title><rect x="1102" y="340" width="5" height="15" fill="rgb(208,132,37)"/><text x="1105.00" y="350.50"></text></g><g><title>0x7f8627fe3257 (?) (1 samples, 0.41%)</title><rect x="1102" y="356" width="5" height="15" fill="rgb(240,195,24)"/><text x="1105.00" y="366.50"></text></g><g><title>0x7f8627fc6d3d (?) (1 samples, 0.41%)</title><rect x="1102" y="372" width="5" height="15" fill="rgb(209,198,26)"/><text x="1105.00" y="382.50"></text></g><g><title>0x7f8627fc6860 (?) (1 samples, 0.41%)</title><rect x="1102" y="388" width="5" height="15" fill="rgb(213,191,52)"/><text x="1105.00" y="398.50"></text></g><g><title>0x7f8627fc66f5 (?) (1 samples, 0.41%)</title><rect x="1102" y="404" width="5" height="15" fill="rgb(220,52,15)"/><text x="1105.00" y="414.50"></text></g><g><title>0x7f8627fc586f (?) (1 samples, 0.41%)</title><rect x="1102" y="420" width="5" height="15" fill="rgb(209,226,53)"/><text x="1105.00" y="430.50"></text></g><g><title>0x7f8627fc56d7 (?) (1 samples, 0.41%)</title><rect x="1102" y="436" width="5" height="15" fill="rgb(216,15,12)"/><text x="1105.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1102" y="452" width="5" height="15" fill="rgb(227,225,54)"/><text x="1105.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1102" y="468" width="5" height="15" fill="rgb(245,46,30)"/><text x="1105.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1112" y="260" width="5" height="15" fill="rgb(225,224,12)"/><text x="1115.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1117" y="292" width="5" height="15" fill="rgb(238,113,15)"/><text x="1120.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1122" y="292" width="5" height="15" fill="rgb(237,114,53)"/><text x="1125.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="356" width="5" height="15" fill="rgb(232,25,19)"/><text x="1134.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="372" width="5" height="15" fill="rgb(213,82,11)"/><text x="1134.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="388" width="5" height="15" fill="rgb(224,199,16)"/><text x="1134.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="404" width="5" height="15" fill="rgb(225,16,2)"/><text x="1134.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="420" width="5" height="15" fill="rgb(254,62,41)"/><text x="1134.00" y="430.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1131" y="436" width="5" height="15" fill="rgb(220,84,45)"/><text x="1134.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1131" y="452" width="5" height="15" fill="rgb(243,214,36)"/><text x="1134.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1136" y="356" width="5" height="15" fill="rgb(254,146,29)"/><text x="1139.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1136" y="372" width="5" height="15" fill="rgb(233,142,25)"/><text x="1139.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1136" y="388" width="5" height="15" fill="rgb(234,81,38)"/><text x="1139.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1131" y="340" width="15" height="15" fill="rgb(208,94,13)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1141" y="356" width="5" height="15" fill="rgb(221,15,17)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1146" y="340" width="5" height="15" fill="rgb(244,215,29)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.46%)</title><rect x="1127" y="308" width="29" height="15" fill="rgb(248,24,45)"/><text x="1130.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.46%)</title><rect x="1127" y="324" width="29" height="15" fill="rgb(216,156,11)"/><text x="1130.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1151" y="340" width="5" height="15" fill="rgb(222,121,13)"/><text x="1154.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1151" y="356" width="5" height="15" fill="rgb(208,199,27)"/><text x="1154.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.69%)</title><rect x="1117" y="260" width="43" height="15" fill="rgb(215,101,5)"/><text x="1120.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.69%)</title><rect x="1117" y="276" width="43" height="15" fill="rgb(235,126,36)"/><text x="1120.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.87%)</title><rect x="1127" y="292" width="33" height="15" fill="rgb(231,76,30)"/><text x="1130.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1156" y="308" width="4" height="15" fill="rgb(241,107,19)"/><text x="1159.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(216,31,28)"/><text x="1159.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.92%)</title><rect x="1107" y="244" width="58" height="15" fill="rgb(239,110,53)"/><text x="1110.00" y="254.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1160" y="260" width="5" height="15" fill="rgb(217,59,39)"/><text x="1163.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1160" y="276" width="5" height="15" fill="rgb(224,150,54)"/><text x="1163.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1160" y="292" width="5" height="15" fill="rgb(224,22,22)"/><text x="1163.00" y="302.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1165" y="244" width="5" height="15" fill="rgb(227,56,50)"/><text x="1168.00" y="254.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1170" y="244" width="5" height="15" fill="rgb(252,155,25)"/><text x="1173.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (18 samples, 7.38%)</title><rect x="1093" y="164" width="87" height="15" fill="rgb(254,95,18)"/><text x="1096.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (18 samples, 7.38%)</title><rect x="1093" y="180" width="87" height="15" fill="rgb(211,170,22)"/><text x="1096.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (16 samples, 6.56%)</title><rect x="1102" y="196" width="78" height="15" fill="rgb(207,45,11)"/><text x="1105.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.15%)</title><rect x="1107" y="212" width="73" height="15" fill="rgb(205,100,27)"/><text x="1110.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.15%)</title><rect x="1107" y="228" width="73" height="15" fill="rgb(217,185,38)"/><text x="1110.00" y="238.50">void pyb..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1175" y="244" width="5" height="15" fill="rgb(215,121,29)"/><text x="1178.00" y="254.50"></text></g><g><title>all (244 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,186,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:52) (22 samples, 9.02%)</title><rect x="1083" y="52" width="107" height="15" fill="rgb(209,28,44)"/><text x="1086.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:51) (22 samples, 9.02%)</title><rect x="1083" y="68" width="107" height="15" fill="rgb(213,37,45)"/><text x="1086.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:29) (22 samples, 9.02%)</title><rect x="1083" y="84" width="107" height="15" fill="rgb(252,36,8)"/><text x="1086.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_float_nozipmap.py:23) (22 samples, 9.02%)</title><rect x="1083" y="100" width="107" height="15" fill="rgb(223,38,10)"/><text x="1086.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (21 samples, 8.61%)</title><rect x="1088" y="116" width="102" height="15" fill="rgb(209,52,13)"/><text x="1091.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (21 samples, 8.61%)</title><rect x="1088" y="132" width="102" height="15" fill="rgb(209,193,32)"/><text x="1091.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (20 samples, 8.20%)</title><rect x="1093" y="148" width="97" height="15" fill="rgb(248,5,17)"/><text x="1096.00" y="158.50">run (mlprod..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.82%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(224,11,0)"/><text x="1183.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.82%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(244,83,8)"/><text x="1183.00" y="190.50"></text></g></g></svg>