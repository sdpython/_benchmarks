<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:31) (1 samples, 0.35%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(206,91,35)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:11) (1 samples, 0.35%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(226,17,4)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:41) (1 samples, 0.35%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(222,196,53)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (1 samples, 0.35%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(212,15,44)"/><text x="13.00" y="110.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(218,8,18)"/><text x="13.00" y="126.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.35%)</title><rect x="34" y="164" width="4" height="15" fill="rgb(250,108,32)"/><text x="37.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.35%)</title><rect x="51" y="180" width="4" height="15" fill="rgb(221,171,50)"/><text x="54.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.40%)</title><rect x="67" y="196" width="17" height="15" fill="rgb(213,103,15)"/><text x="70.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.80%)</title><rect x="55" y="180" width="33" height="15" fill="rgb(209,96,34)"/><text x="58.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="84" y="196" width="4" height="15" fill="rgb(227,204,3)"/><text x="87.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (14 samples, 4.90%)</title><rect x="34" y="148" width="58" height="15" fill="rgb(253,136,16)"/><text x="37.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 4.55%)</title><rect x="38" y="164" width="54" height="15" fill="rgb(220,13,42)"/><text x="41.00" y="174.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.35%)</title><rect x="88" y="180" width="4" height="15" fill="rgb(229,154,15)"/><text x="91.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.35%)</title><rect x="92" y="148" width="4" height="15" fill="rgb(233,27,9)"/><text x="95.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.35%)</title><rect x="96" y="148" width="4" height="15" fill="rgb(249,157,54)"/><text x="99.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.35%)</title><rect x="117" y="212" width="4" height="15" fill="rgb(249,217,39)"/><text x="120.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (8 samples, 2.80%)</title><rect x="109" y="180" width="33" height="15" fill="rgb(245,137,33)"/><text x="112.00" y="190.50">de..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.80%)</title><rect x="109" y="196" width="33" height="15" fill="rgb(253,34,22)"/><text x="112.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.75%)</title><rect x="121" y="212" width="21" height="15" fill="rgb(252,177,51)"/><text x="124.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.70%)</title><rect x="133" y="228" width="9" height="15" fill="rgb(206,128,14)"/><text x="136.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.35%)</title><rect x="146" y="196" width="4" height="15" fill="rgb(244,84,6)"/><text x="149.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.35%)</title><rect x="150" y="196" width="4" height="15" fill="rgb(247,64,13)"/><text x="153.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.35%)</title><rect x="154" y="196" width="4" height="15" fill="rgb(229,108,0)"/><text x="157.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.35%)</title><rect x="158" y="196" width="4" height="15" fill="rgb(223,37,24)"/><text x="161.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.70%)</title><rect x="162" y="196" width="8" height="15" fill="rgb(229,148,35)"/><text x="165.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.35%)</title><rect x="170" y="196" width="5" height="15" fill="rgb(246,105,41)"/><text x="173.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.35%)</title><rect x="175" y="196" width="4" height="15" fill="rgb(249,17,19)"/><text x="178.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.35%)</title><rect x="191" y="212" width="4" height="15" fill="rgb(236,78,44)"/><text x="194.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.35%)</title><rect x="195" y="212" width="4" height="15" fill="rgb(225,95,25)"/><text x="198.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 2.45%)</title><rect x="179" y="196" width="29" height="15" fill="rgb(213,26,53)"/><text x="182.00" y="206.50">ch..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.70%)</title><rect x="199" y="212" width="9" height="15" fill="rgb(211,209,17)"/><text x="202.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:165) (1 samples, 0.35%)</title><rect x="212" y="212" width="4" height="15" fill="rgb(247,201,31)"/><text x="215.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 1.05%)</title><rect x="208" y="196" width="12" height="15" fill="rgb(232,71,35)"/><text x="211.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.35%)</title><rect x="216" y="212" width="4" height="15" fill="rgb(234,4,14)"/><text x="219.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.35%)</title><rect x="216" y="228" width="4" height="15" fill="rgb(214,205,34)"/><text x="219.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.05%)</title><rect x="220" y="196" width="12" height="15" fill="rgb(245,101,6)"/><text x="223.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.70%)</title><rect x="232" y="196" width="9" height="15" fill="rgb(225,196,22)"/><text x="235.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.35%)</title><rect x="236" y="212" width="5" height="15" fill="rgb(218,54,53)"/><text x="239.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.35%)</title><rect x="245" y="212" width="4" height="15" fill="rgb(235,74,37)"/><text x="248.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.05%)</title><rect x="241" y="196" width="12" height="15" fill="rgb(238,227,20)"/><text x="244.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.35%)</title><rect x="249" y="212" width="4" height="15" fill="rgb(220,10,23)"/><text x="252.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.70%)</title><rect x="257" y="212" width="8" height="15" fill="rgb(240,219,40)"/><text x="260.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.70%)</title><rect x="257" y="228" width="8" height="15" fill="rgb(246,9,3)"/><text x="260.00" y="238.50"></text></g><g><title>0x7f40d111fe50 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="261" y="244" width="4" height="15" fill="rgb(238,145,22)"/><text x="264.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.75%)</title><rect x="253" y="196" width="21" height="15" fill="rgb(238,86,32)"/><text x="256.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.70%)</title><rect x="265" y="212" width="9" height="15" fill="rgb(217,127,38)"/><text x="268.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.35%)</title><rect x="274" y="196" width="4" height="15" fill="rgb(243,12,12)"/><text x="277.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.70%)</title><rect x="290" y="228" width="8" height="15" fill="rgb(250,123,27)"/><text x="293.00" y="238.50"></text></g><g><title>0x7f40d111fe50 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="294" y="244" width="4" height="15" fill="rgb(206,177,11)"/><text x="297.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.45%)</title><rect x="278" y="196" width="29" height="15" fill="rgb(209,53,21)"/><text x="281.00" y="206.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 2.45%)</title><rect x="278" y="212" width="29" height="15" fill="rgb(210,10,36)"/><text x="281.00" y="222.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.70%)</title><rect x="298" y="228" width="9" height="15" fill="rgb(218,58,54)"/><text x="301.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.05%)</title><rect x="311" y="212" width="12" height="15" fill="rgb(251,159,13)"/><text x="314.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.70%)</title><rect x="323" y="212" width="8" height="15" fill="rgb(209,199,4)"/><text x="326.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.70%)</title><rect x="323" y="228" width="8" height="15" fill="rgb(253,220,50)"/><text x="326.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (47 samples, 16.43%)</title><rect x="142" y="180" width="193" height="15" fill="rgb(230,105,5)"/><text x="145.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.45%)</title><rect x="307" y="196" width="28" height="15" fill="rgb(246,93,22)"/><text x="310.00" y="206.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.35%)</title><rect x="331" y="212" width="4" height="15" fill="rgb(241,145,47)"/><text x="334.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (2 samples, 0.70%)</title><rect x="335" y="180" width="9" height="15" fill="rgb(248,152,21)"/><text x="338.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:665) (2 samples, 0.70%)</title><rect x="335" y="196" width="9" height="15" fill="rgb(239,222,14)"/><text x="338.00" y="206.50"></text></g><g><title>array_add (number.c:329) (1 samples, 0.35%)</title><rect x="344" y="196" width="4" height="15" fill="rgb(245,28,2)"/><text x="347.00" y="206.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.35%)</title><rect x="344" y="212" width="4" height="15" fill="rgb(244,1,12)"/><text x="347.00" y="222.50"></text></g><g><title>0x7f40d032af00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="348" y="244" width="4" height="15" fill="rgb(215,215,50)"/><text x="351.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.35%)</title><rect x="352" y="276" width="4" height="15" fill="rgb(210,217,42)"/><text x="355.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(209,129,4)"/><text x="355.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.35%)</title><rect x="356" y="276" width="4" height="15" fill="rgb(232,60,54)"/><text x="359.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1176) (1 samples, 0.35%)</title><rect x="356" y="292" width="4" height="15" fill="rgb(242,192,9)"/><text x="359.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.05%)</title><rect x="352" y="260" width="12" height="15" fill="rgb(249,106,3)"/><text x="355.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.35%)</title><rect x="360" y="276" width="4" height="15" fill="rgb(223,50,5)"/><text x="363.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1640) (1 samples, 0.35%)</title><rect x="360" y="292" width="4" height="15" fill="rgb(240,104,48)"/><text x="363.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.75%)</title><rect x="348" y="228" width="20" height="15" fill="rgb(229,145,41)"/><text x="351.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.40%)</title><rect x="352" y="244" width="16" height="15" fill="rgb(252,217,54)"/><text x="355.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1587) (1 samples, 0.35%)</title><rect x="364" y="260" width="4" height="15" fill="rgb(227,120,54)"/><text x="367.00" y="270.50"></text></g><g><title>array_add (number.c:330) (6 samples, 2.10%)</title><rect x="348" y="196" width="25" height="15" fill="rgb(230,214,34)"/><text x="351.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.10%)</title><rect x="348" y="212" width="25" height="15" fill="rgb(243,96,21)"/><text x="351.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.35%)</title><rect x="368" y="228" width="5" height="15" fill="rgb(237,152,17)"/><text x="371.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="377" y="212" width="4" height="15" fill="rgb(239,103,2)"/><text x="380.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:459) (1 samples, 0.35%)</title><rect x="377" y="228" width="4" height="15" fill="rgb(224,85,42)"/><text x="380.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2592) (1 samples, 0.35%)</title><rect x="381" y="244" width="4" height="15" fill="rgb(206,137,3)"/><text x="384.00" y="254.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c:2511) (1 samples, 0.35%)</title><rect x="381" y="260" width="4" height="15" fill="rgb(208,61,24)"/><text x="384.00" y="270.50"></text></g><g><title>0x7f40d1129db3 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="381" y="276" width="4" height="15" fill="rgb(227,50,19)"/><text x="384.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2645) (1 samples, 0.35%)</title><rect x="385" y="244" width="4" height="15" fill="rgb(216,43,17)"/><text x="388.00" y="254.50"></text></g><g><title>_validate_num_dims (ufunc_object.c:2044) (1 samples, 0.35%)</title><rect x="385" y="260" width="4" height="15" fill="rgb(235,80,8)"/><text x="388.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.35%)</title><rect x="389" y="244" width="4" height="15" fill="rgb(206,190,21)"/><text x="392.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.35%)</title><rect x="389" y="260" width="4" height="15" fill="rgb(251,181,50)"/><text x="392.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.35%)</title><rect x="389" y="276" width="4" height="15" fill="rgb(252,219,0)"/><text x="392.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.35%)</title><rect x="389" y="292" width="4" height="15" fill="rgb(231,131,43)"/><text x="392.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.35%)</title><rect x="389" y="308" width="4" height="15" fill="rgb(245,147,35)"/><text x="392.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.35%)</title><rect x="393" y="260" width="4" height="15" fill="rgb(208,161,29)"/><text x="396.00" y="270.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.35%)</title><rect x="397" y="324" width="4" height="15" fill="rgb(237,181,27)"/><text x="400.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 1.05%)</title><rect x="393" y="244" width="13" height="15" fill="rgb(240,147,27)"/><text x="396.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.70%)</title><rect x="397" y="260" width="9" height="15" fill="rgb(237,127,9)"/><text x="400.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.70%)</title><rect x="397" y="276" width="9" height="15" fill="rgb(231,173,10)"/><text x="400.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.70%)</title><rect x="397" y="292" width="9" height="15" fill="rgb(225,194,41)"/><text x="400.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.70%)</title><rect x="397" y="308" width="9" height="15" fill="rgb(229,150,34)"/><text x="400.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.35%)</title><rect x="401" y="324" width="5" height="15" fill="rgb(229,153,11)"/><text x="404.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="401" y="340" width="5" height="15" fill="rgb(252,132,10)"/><text x="404.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.35%)</title><rect x="401" y="356" width="5" height="15" fill="rgb(216,13,26)"/><text x="404.00" y="366.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:144) (1 samples, 0.35%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(232,140,49)"/><text x="409.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (2 samples, 0.70%)</title><rect x="406" y="244" width="8" height="15" fill="rgb(216,27,16)"/><text x="409.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:152) (1 samples, 0.35%)</title><rect x="410" y="260" width="4" height="15" fill="rgb(232,104,8)"/><text x="413.00" y="270.50"></text></g><g><title>0x7f40d112a120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="410" y="276" width="4" height="15" fill="rgb(254,221,8)"/><text x="413.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 3.85%)</title><rect x="373" y="196" width="45" height="15" fill="rgb(222,75,33)"/><text x="376.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.15%)</title><rect x="381" y="212" width="37" height="15" fill="rgb(210,63,35)"/><text x="384.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 3.15%)</title><rect x="381" y="228" width="37" height="15" fill="rgb(237,190,40)"/><text x="384.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.35%)</title><rect x="414" y="244" width="4" height="15" fill="rgb(236,171,41)"/><text x="417.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.35%)</title><rect x="414" y="260" width="4" height="15" fill="rgb(208,225,4)"/><text x="417.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="414" y="276" width="4" height="15" fill="rgb(214,16,22)"/><text x="417.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="414" y="292" width="4" height="15" fill="rgb(247,20,7)"/><text x="417.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.35%)</title><rect x="414" y="308" width="4" height="15" fill="rgb(240,5,8)"/><text x="417.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (21 samples, 7.34%)</title><rect x="344" y="180" width="86" height="15" fill="rgb(241,25,30)"/><text x="347.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 1.05%)</title><rect x="418" y="196" width="12" height="15" fill="rgb(252,91,34)"/><text x="421.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 1.05%)</title><rect x="418" y="212" width="12" height="15" fill="rgb(207,168,34)"/><text x="421.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (79 samples, 27.62%)</title><rect x="109" y="164" width="325" height="15" fill="rgb(226,227,43)"/><text x="112.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_ba..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.35%)</title><rect x="430" y="180" width="4" height="15" fill="rgb(244,84,37)"/><text x="433.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="443" y="180" width="4" height="15" fill="rgb(228,209,15)"/><text x="446.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="443" y="196" width="4" height="15" fill="rgb(221,165,46)"/><text x="446.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.35%)</title><rect x="443" y="212" width="4" height="15" fill="rgb(226,170,34)"/><text x="446.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="447" y="196" width="4" height="15" fill="rgb(206,157,33)"/><text x="450.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.35%)</title><rect x="447" y="212" width="4" height="15" fill="rgb(232,59,52)"/><text x="450.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.35%)</title><rect x="447" y="228" width="4" height="15" fill="rgb(252,109,37)"/><text x="450.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (5 samples, 1.75%)</title><rect x="434" y="164" width="21" height="15" fill="rgb(220,142,0)"/><text x="437.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.70%)</title><rect x="447" y="180" width="8" height="15" fill="rgb(219,146,36)"/><text x="450.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="451" y="196" width="4" height="15" fill="rgb(215,187,4)"/><text x="454.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.35%)</title><rect x="451" y="212" width="4" height="15" fill="rgb(223,162,5)"/><text x="454.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.35%)</title><rect x="455" y="164" width="4" height="15" fill="rgb(233,140,25)"/><text x="458.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.35%)</title><rect x="463" y="180" width="4" height="15" fill="rgb(217,137,0)"/><text x="466.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.35%)</title><rect x="476" y="228" width="4" height="15" fill="rgb(248,80,42)"/><text x="479.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="476" y="244" width="4" height="15" fill="rgb(224,196,10)"/><text x="479.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.35%)</title><rect x="476" y="260" width="4" height="15" fill="rgb(243,157,44)"/><text x="479.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.35%)</title><rect x="476" y="276" width="4" height="15" fill="rgb(236,124,31)"/><text x="479.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.35%)</title><rect x="476" y="292" width="4" height="15" fill="rgb(227,42,6)"/><text x="479.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.35%)</title><rect x="476" y="308" width="4" height="15" fill="rgb(228,43,7)"/><text x="479.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="476" y="324" width="4" height="15" fill="rgb(238,166,38)"/><text x="479.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.35%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(241,163,50)"/><text x="483.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.35%)</title><rect x="480" y="292" width="4" height="15" fill="rgb(206,115,50)"/><text x="483.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.35%)</title><rect x="480" y="308" width="4" height="15" fill="rgb(228,149,6)"/><text x="483.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.35%)</title><rect x="480" y="324" width="4" height="15" fill="rgb(233,85,45)"/><text x="483.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.35%)</title><rect x="484" y="340" width="4" height="15" fill="rgb(212,9,6)"/><text x="487.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1523) (1 samples, 0.35%)</title><rect x="484" y="356" width="4" height="15" fill="rgb(252,90,10)"/><text x="487.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.70%)</title><rect x="484" y="276" width="8" height="15" fill="rgb(217,19,32)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.70%)</title><rect x="484" y="292" width="8" height="15" fill="rgb(230,120,25)"/><text x="487.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.70%)</title><rect x="484" y="308" width="8" height="15" fill="rgb(250,52,8)"/><text x="487.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.70%)</title><rect x="484" y="324" width="8" height="15" fill="rgb(225,135,44)"/><text x="487.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.35%)</title><rect x="488" y="340" width="4" height="15" fill="rgb(206,122,10)"/><text x="491.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.35%)</title><rect x="488" y="356" width="4" height="15" fill="rgb(237,48,0)"/><text x="491.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.35%)</title><rect x="492" y="276" width="4" height="15" fill="rgb(233,15,31)"/><text x="495.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.35%)</title><rect x="492" y="292" width="4" height="15" fill="rgb(211,24,0)"/><text x="495.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2199) (1 samples, 0.35%)</title><rect x="492" y="308" width="4" height="15" fill="rgb(232,46,13)"/><text x="495.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (8 samples, 2.80%)</title><rect x="467" y="180" width="33" height="15" fill="rgb(226,109,31)"/><text x="470.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 2.80%)</title><rect x="467" y="196" width="33" height="15" fill="rgb(250,47,32)"/><text x="470.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 2.10%)</title><rect x="476" y="212" width="24" height="15" fill="rgb(243,31,43)"/><text x="479.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.75%)</title><rect x="480" y="228" width="20" height="15" fill="rgb(251,119,2)"/><text x="483.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.75%)</title><rect x="480" y="244" width="20" height="15" fill="rgb(209,29,17)"/><text x="483.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.75%)</title><rect x="480" y="260" width="20" height="15" fill="rgb(226,27,25)"/><text x="483.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.35%)</title><rect x="496" y="276" width="4" height="15" fill="rgb(253,18,39)"/><text x="499.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.35%)</title><rect x="496" y="292" width="4" height="15" fill="rgb(210,191,14)"/><text x="499.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="500" y="196" width="5" height="15" fill="rgb(248,194,26)"/><text x="503.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.35%)</title><rect x="500" y="212" width="5" height="15" fill="rgb(226,160,7)"/><text x="503.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.35%)</title><rect x="500" y="228" width="5" height="15" fill="rgb(238,88,11)"/><text x="503.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.35%)</title><rect x="500" y="244" width="5" height="15" fill="rgb(231,208,24)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.35%)</title><rect x="500" y="260" width="5" height="15" fill="rgb(214,166,35)"/><text x="503.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.35%)</title><rect x="505" y="228" width="4" height="15" fill="rgb(245,213,14)"/><text x="508.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.35%)</title><rect x="505" y="244" width="4" height="15" fill="rgb(233,156,28)"/><text x="508.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.35%)</title><rect x="505" y="260" width="4" height="15" fill="rgb(215,170,9)"/><text x="508.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (117 samples, 40.91%)</title><rect x="30" y="132" width="483" height="15" fill="rgb(221,153,9)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (100 samples, 34.97%)</title><rect x="100" y="148" width="413" height="15" fill="rgb(238,219,28)"/><text x="103.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (13 samples, 4.55%)</title><rect x="459" y="164" width="54" height="15" fill="rgb(244,34,39)"/><text x="462.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.05%)</title><rect x="500" y="180" width="13" height="15" fill="rgb(228,3,22)"/><text x="503.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.70%)</title><rect x="505" y="196" width="8" height="15" fill="rgb(221,165,48)"/><text x="508.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.70%)</title><rect x="505" y="212" width="8" height="15" fill="rgb(237,59,14)"/><text x="508.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.35%)</title><rect x="509" y="228" width="4" height="15" fill="rgb(234,144,20)"/><text x="512.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:38) (122 samples, 42.66%)</title><rect x="14" y="52" width="503" height="15" fill="rgb(229,165,4)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onn..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:37) (122 samples, 42.66%)</title><rect x="14" y="68" width="503" height="15" fill="rgb(237,27,19)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:29) (122 samples, 42.66%)</title><rect x="14" y="84" width="503" height="15" fill="rgb(246,200,13)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinea..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:23) (122 samples, 42.66%)</title><rect x="14" y="100" width="503" height="15" fill="rgb(222,217,5)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (121 samples, 42.31%)</title><rect x="18" y="116" width="499" height="15" fill="rgb(250,122,20)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="513" y="132" width="4" height="15" fill="rgb(241,75,6)"/><text x="516.00" y="142.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.35%)</title><rect x="517" y="244" width="4" height="15" fill="rgb(221,100,19)"/><text x="520.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="517" y="260" width="4" height="15" fill="rgb(233,158,40)"/><text x="520.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="517" y="276" width="4" height="15" fill="rgb(246,19,29)"/><text x="520.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="517" y="292" width="4" height="15" fill="rgb(244,154,22)"/><text x="520.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="517" y="308" width="4" height="15" fill="rgb(230,68,25)"/><text x="520.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="517" y="324" width="4" height="15" fill="rgb(234,191,48)"/><text x="520.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="517" y="340" width="4" height="15" fill="rgb(227,200,30)"/><text x="520.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="517" y="356" width="4" height="15" fill="rgb(232,180,7)"/><text x="520.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:69) (1 samples, 0.35%)</title><rect x="517" y="372" width="4" height="15" fill="rgb(213,56,45)"/><text x="520.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="517" y="388" width="4" height="15" fill="rgb(210,105,9)"/><text x="520.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="517" y="404" width="4" height="15" fill="rgb(217,175,24)"/><text x="520.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="517" y="420" width="4" height="15" fill="rgb(212,216,16)"/><text x="520.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="517" y="436" width="4" height="15" fill="rgb(235,56,14)"/><text x="520.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="517" y="452" width="4" height="15" fill="rgb(220,43,2)"/><text x="520.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.35%)</title><rect x="517" y="468" width="4" height="15" fill="rgb(252,164,50)"/><text x="520.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.35%)</title><rect x="517" y="484" width="4" height="15" fill="rgb(207,216,43)"/><text x="520.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.35%)</title><rect x="517" y="500" width="4" height="15" fill="rgb(212,188,36)"/><text x="520.00" y="510.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:1) (2 samples, 0.70%)</title><rect x="517" y="148" width="8" height="15" fill="rgb(251,173,45)"/><text x="520.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="517" y="164" width="8" height="15" fill="rgb(217,181,52)"/><text x="520.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="517" y="180" width="8" height="15" fill="rgb(248,169,40)"/><text x="520.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="517" y="196" width="8" height="15" fill="rgb(231,224,46)"/><text x="520.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="517" y="212" width="8" height="15" fill="rgb(252,227,43)"/><text x="520.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="517" y="228" width="8" height="15" fill="rgb(207,196,39)"/><text x="520.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.35%)</title><rect x="521" y="244" width="4" height="15" fill="rgb(222,72,12)"/><text x="524.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="521" y="260" width="4" height="15" fill="rgb(206,95,33)"/><text x="524.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="276" width="4" height="15" fill="rgb(232,216,29)"/><text x="524.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="292" width="4" height="15" fill="rgb(248,115,6)"/><text x="524.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="308" width="4" height="15" fill="rgb(247,20,3)"/><text x="524.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="521" y="324" width="4" height="15" fill="rgb(251,21,26)"/><text x="524.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="521" y="340" width="4" height="15" fill="rgb(248,162,26)"/><text x="524.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="356" width="4" height="15" fill="rgb(213,157,49)"/><text x="524.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.35%)</title><rect x="521" y="372" width="4" height="15" fill="rgb(247,12,47)"/><text x="524.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="521" y="388" width="4" height="15" fill="rgb(220,62,2)"/><text x="524.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="404" width="4" height="15" fill="rgb(252,86,13)"/><text x="524.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="420" width="4" height="15" fill="rgb(226,173,20)"/><text x="524.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="436" width="4" height="15" fill="rgb(249,162,29)"/><text x="524.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="521" y="452" width="4" height="15" fill="rgb(223,36,9)"/><text x="524.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="521" y="468" width="4" height="15" fill="rgb(236,106,10)"/><text x="524.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="484" width="4" height="15" fill="rgb(221,217,15)"/><text x="524.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.35%)</title><rect x="521" y="500" width="4" height="15" fill="rgb(252,168,42)"/><text x="524.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="516" width="4" height="15" fill="rgb(218,152,37)"/><text x="524.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="532" width="4" height="15" fill="rgb(223,47,48)"/><text x="524.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="521" y="548" width="4" height="15" fill="rgb(225,126,29)"/><text x="524.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="521" y="564" width="4" height="15" fill="rgb(239,42,23)"/><text x="524.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="580" width="4" height="15" fill="rgb(253,94,20)"/><text x="524.00" y="590.50"></text></g><g><title>0x7f40c39d0585 (?) (1 samples, 0.35%)</title><rect x="521" y="596" width="4" height="15" fill="rgb(225,206,23)"/><text x="524.00" y="606.50"></text></g><g><title>0x7f40c39d6075 (?) (1 samples, 0.35%)</title><rect x="521" y="612" width="4" height="15" fill="rgb(249,221,25)"/><text x="524.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="521" y="628" width="4" height="15" fill="rgb(228,183,48)"/><text x="524.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="521" y="644" width="4" height="15" fill="rgb(251,67,51)"/><text x="524.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="521" y="660" width="4" height="15" fill="rgb(220,58,21)"/><text x="524.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="521" y="676" width="4" height="15" fill="rgb(244,175,39)"/><text x="524.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="521" y="692" width="4" height="15" fill="rgb(223,127,42)"/><text x="524.00" y="702.50"></text></g><g><title>0x7f40c330daca (?) (1 samples, 0.35%)</title><rect x="521" y="708" width="4" height="15" fill="rgb(211,65,28)"/><text x="524.00" y="718.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.35%)</title><rect x="525" y="852" width="4" height="15" fill="rgb(221,1,20)"/><text x="528.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.35%)</title><rect x="525" y="868" width="4" height="15" fill="rgb(229,172,50)"/><text x="528.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.35%)</title><rect x="525" y="884" width="4" height="15" fill="rgb(242,72,32)"/><text x="528.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.35%)</title><rect x="525" y="900" width="4" height="15" fill="rgb(235,131,39)"/><text x="528.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.35%)</title><rect x="525" y="916" width="4" height="15" fill="rgb(235,205,22)"/><text x="528.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.35%)</title><rect x="525" y="932" width="4" height="15" fill="rgb(241,214,53)"/><text x="528.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.35%)</title><rect x="525" y="948" width="4" height="15" fill="rgb(207,114,6)"/><text x="528.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.35%)</title><rect x="525" y="964" width="4" height="15" fill="rgb(237,214,17)"/><text x="528.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.35%)</title><rect x="525" y="980" width="4" height="15" fill="rgb(222,224,31)"/><text x="528.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:212) (1 samples, 0.35%)</title><rect x="525" y="996" width="4" height="15" fill="rgb(234,190,44)"/><text x="528.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (3 samples, 1.05%)</title><rect x="525" y="148" width="13" height="15" fill="rgb(209,227,31)"/><text x="528.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="164" width="13" height="15" fill="rgb(229,17,16)"/><text x="528.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.05%)</title><rect x="525" y="180" width="13" height="15" fill="rgb(244,184,11)"/><text x="528.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="196" width="13" height="15" fill="rgb(235,119,44)"/><text x="528.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="212" width="13" height="15" fill="rgb(243,78,2)"/><text x="528.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="228" width="13" height="15" fill="rgb(217,133,27)"/><text x="528.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="244" width="13" height="15" fill="rgb(220,192,27)"/><text x="528.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="260" width="13" height="15" fill="rgb(254,131,44)"/><text x="528.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="276" width="13" height="15" fill="rgb(208,164,26)"/><text x="528.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.05%)</title><rect x="525" y="292" width="13" height="15" fill="rgb(209,223,20)"/><text x="528.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="308" width="13" height="15" fill="rgb(228,41,20)"/><text x="528.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="324" width="13" height="15" fill="rgb(229,177,21)"/><text x="528.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="340" width="13" height="15" fill="rgb(227,4,3)"/><text x="528.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="356" width="13" height="15" fill="rgb(233,140,47)"/><text x="528.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="372" width="13" height="15" fill="rgb(221,149,17)"/><text x="528.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.05%)</title><rect x="525" y="388" width="13" height="15" fill="rgb(230,104,17)"/><text x="528.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="404" width="13" height="15" fill="rgb(216,215,43)"/><text x="528.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="420" width="13" height="15" fill="rgb(248,10,10)"/><text x="528.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="436" width="13" height="15" fill="rgb(227,161,32)"/><text x="528.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="452" width="13" height="15" fill="rgb(252,228,6)"/><text x="528.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="468" width="13" height="15" fill="rgb(236,7,2)"/><text x="528.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.05%)</title><rect x="525" y="484" width="13" height="15" fill="rgb(216,91,14)"/><text x="528.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="500" width="13" height="15" fill="rgb(223,14,44)"/><text x="528.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="516" width="13" height="15" fill="rgb(213,7,34)"/><text x="528.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="532" width="13" height="15" fill="rgb(222,80,10)"/><text x="528.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="548" width="13" height="15" fill="rgb(213,193,18)"/><text x="528.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="564" width="13" height="15" fill="rgb(237,137,9)"/><text x="528.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.05%)</title><rect x="525" y="580" width="13" height="15" fill="rgb(211,199,10)"/><text x="528.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="596" width="13" height="15" fill="rgb(215,173,20)"/><text x="528.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.05%)</title><rect x="525" y="612" width="13" height="15" fill="rgb(241,12,51)"/><text x="528.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="628" width="13" height="15" fill="rgb(219,17,9)"/><text x="528.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="644" width="13" height="15" fill="rgb(239,183,18)"/><text x="528.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="660" width="13" height="15" fill="rgb(233,87,9)"/><text x="528.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="676" width="13" height="15" fill="rgb(239,69,15)"/><text x="528.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="692" width="13" height="15" fill="rgb(227,122,21)"/><text x="528.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="708" width="13" height="15" fill="rgb(214,21,26)"/><text x="528.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.05%)</title><rect x="525" y="724" width="13" height="15" fill="rgb(254,181,18)"/><text x="528.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="525" y="740" width="13" height="15" fill="rgb(215,108,49)"/><text x="528.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="525" y="756" width="13" height="15" fill="rgb(242,77,5)"/><text x="528.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="525" y="772" width="13" height="15" fill="rgb(244,226,11)"/><text x="528.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="525" y="788" width="13" height="15" fill="rgb(213,133,13)"/><text x="528.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="525" y="804" width="13" height="15" fill="rgb(206,138,25)"/><text x="528.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.05%)</title><rect x="525" y="820" width="13" height="15" fill="rgb(223,157,3)"/><text x="528.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.05%)</title><rect x="525" y="836" width="13" height="15" fill="rgb(248,82,2)"/><text x="528.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.70%)</title><rect x="529" y="852" width="9" height="15" fill="rgb(212,198,42)"/><text x="532.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.70%)</title><rect x="529" y="868" width="9" height="15" fill="rgb(215,112,11)"/><text x="532.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (2 samples, 0.70%)</title><rect x="529" y="884" width="9" height="15" fill="rgb(236,139,10)"/><text x="532.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (2 samples, 0.70%)</title><rect x="529" y="900" width="9" height="15" fill="rgb(225,200,43)"/><text x="532.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (2 samples, 0.70%)</title><rect x="529" y="916" width="9" height="15" fill="rgb(243,55,26)"/><text x="532.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.35%)</title><rect x="533" y="932" width="5" height="15" fill="rgb(220,5,32)"/><text x="536.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.35%)</title><rect x="533" y="948" width="5" height="15" fill="rgb(233,137,23)"/><text x="536.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1546) (1 samples, 0.35%)</title><rect x="533" y="964" width="5" height="15" fill="rgb(244,148,13)"/><text x="536.00" y="974.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.35%)</title><rect x="533" y="980" width="5" height="15" fill="rgb(249,227,12)"/><text x="536.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.35%)</title><rect x="538" y="484" width="4" height="15" fill="rgb(244,126,9)"/><text x="541.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="500" width="4" height="15" fill="rgb(235,64,2)"/><text x="541.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="516" width="4" height="15" fill="rgb(218,24,51)"/><text x="541.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="532" width="4" height="15" fill="rgb(244,225,51)"/><text x="541.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="538" y="548" width="4" height="15" fill="rgb(221,187,46)"/><text x="541.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="564" width="4" height="15" fill="rgb(213,19,2)"/><text x="541.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.35%)</title><rect x="538" y="580" width="4" height="15" fill="rgb(253,55,9)"/><text x="541.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="596" width="4" height="15" fill="rgb(225,106,32)"/><text x="541.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="612" width="4" height="15" fill="rgb(246,138,42)"/><text x="541.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="628" width="4" height="15" fill="rgb(212,163,31)"/><text x="541.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="538" y="644" width="4" height="15" fill="rgb(238,218,25)"/><text x="541.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="660" width="4" height="15" fill="rgb(216,127,30)"/><text x="541.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.35%)</title><rect x="538" y="676" width="4" height="15" fill="rgb(250,80,0)"/><text x="541.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="692" width="4" height="15" fill="rgb(207,179,28)"/><text x="541.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="708" width="4" height="15" fill="rgb(239,193,42)"/><text x="541.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="724" width="4" height="15" fill="rgb(250,102,33)"/><text x="541.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="740" width="4" height="15" fill="rgb(222,8,17)"/><text x="541.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="756" width="4" height="15" fill="rgb(240,41,39)"/><text x="541.00" y="766.50"></text></g><g><title>0x7f40bd94f40e (?) (1 samples, 0.35%)</title><rect x="538" y="772" width="4" height="15" fill="rgb(243,95,20)"/><text x="541.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="788" width="4" height="15" fill="rgb(239,207,23)"/><text x="541.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="804" width="4" height="15" fill="rgb(218,83,3)"/><text x="541.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="820" width="4" height="15" fill="rgb(205,0,48)"/><text x="541.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="836" width="4" height="15" fill="rgb(207,72,49)"/><text x="541.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="852" width="4" height="15" fill="rgb(206,209,0)"/><text x="541.00" y="862.50"></text></g><g><title>0x7f40bd708cd2 (?) (1 samples, 0.35%)</title><rect x="538" y="868" width="4" height="15" fill="rgb(215,47,38)"/><text x="541.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="884" width="4" height="15" fill="rgb(209,157,2)"/><text x="541.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="900" width="4" height="15" fill="rgb(225,34,23)"/><text x="541.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="916" width="4" height="15" fill="rgb(238,27,43)"/><text x="541.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="932" width="4" height="15" fill="rgb(231,198,23)"/><text x="541.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="948" width="4" height="15" fill="rgb(237,29,4)"/><text x="541.00" y="958.50"></text></g><g><title>0x7f40bcdfe0e5 (?) (1 samples, 0.35%)</title><rect x="538" y="964" width="4" height="15" fill="rgb(221,225,4)"/><text x="541.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="980" width="4" height="15" fill="rgb(207,84,8)"/><text x="541.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="996" width="4" height="15" fill="rgb(226,26,42)"/><text x="541.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="1012" width="4" height="15" fill="rgb(210,152,26)"/><text x="541.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="1028" width="4" height="15" fill="rgb(237,138,22)"/><text x="541.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="1044" width="4" height="15" fill="rgb(210,107,31)"/><text x="541.00" y="1054.50"></text></g><g><title>0x7f40bcb82e68 (?) (1 samples, 0.35%)</title><rect x="538" y="1060" width="4" height="15" fill="rgb(220,146,54)"/><text x="541.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="1076" width="4" height="15" fill="rgb(224,116,54)"/><text x="541.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="1092" width="4" height="15" fill="rgb(242,114,52)"/><text x="541.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="1108" width="4" height="15" fill="rgb(238,144,12)"/><text x="541.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="1124" width="4" height="15" fill="rgb(239,184,28)"/><text x="541.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="1140" width="4" height="15" fill="rgb(226,86,34)"/><text x="541.00" y="1150.50"></text></g><g><title>0x7f40bc9132fb (?) (1 samples, 0.35%)</title><rect x="538" y="1156" width="4" height="15" fill="rgb(216,113,5)"/><text x="541.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="1172" width="4" height="15" fill="rgb(211,148,27)"/><text x="541.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="1188" width="4" height="15" fill="rgb(222,121,33)"/><text x="541.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="1204" width="4" height="15" fill="rgb(225,56,8)"/><text x="541.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="1220" width="4" height="15" fill="rgb(226,70,11)"/><text x="541.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="1236" width="4" height="15" fill="rgb(226,60,10)"/><text x="541.00" y="1246.50"></text></g><g><title>0x7f40bc6f7153 (?) (1 samples, 0.35%)</title><rect x="538" y="1252" width="4" height="15" fill="rgb(215,129,25)"/><text x="541.00" y="1262.50"></text></g><g><title>0x7f40bc6f5c13 (?) (1 samples, 0.35%)</title><rect x="538" y="1268" width="4" height="15" fill="rgb(230,83,20)"/><text x="541.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="538" y="1284" width="4" height="15" fill="rgb(252,107,51)"/><text x="541.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="538" y="1300" width="4" height="15" fill="rgb(228,83,7)"/><text x="541.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="538" y="1316" width="4" height="15" fill="rgb(238,202,0)"/><text x="541.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="538" y="1332" width="4" height="15" fill="rgb(230,149,0)"/><text x="541.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="538" y="1348" width="4" height="15" fill="rgb(223,126,23)"/><text x="541.00" y="1358.50"></text></g><g><title>0x7f40bc492181 (?) (1 samples, 0.35%)</title><rect x="538" y="1364" width="4" height="15" fill="rgb(241,118,33)"/><text x="541.00" y="1374.50"></text></g><g><title>0x7f40bc4951c9 (?) (1 samples, 0.35%)</title><rect x="538" y="1380" width="4" height="15" fill="rgb(235,64,20)"/><text x="541.00" y="1390.50"></text></g><g><title>0x7f40bc4c1167 (?) (1 samples, 0.35%)</title><rect x="538" y="1396" width="4" height="15" fill="rgb(220,74,46)"/><text x="541.00" y="1406.50"></text></g><g><title>0x7f40bc4bcb64 (?) (1 samples, 0.35%)</title><rect x="538" y="1412" width="4" height="15" fill="rgb(253,200,12)"/><text x="541.00" y="1422.50"></text></g><g><title>0x7f40bc4a007b (?) (1 samples, 0.35%)</title><rect x="538" y="1428" width="4" height="15" fill="rgb(207,176,26)"/><text x="541.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.35%)</title><rect x="538" y="1444" width="4" height="15" fill="rgb(228,26,0)"/><text x="541.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.35%)</title><rect x="538" y="1460" width="4" height="15" fill="rgb(229,120,52)"/><text x="541.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.35%)</title><rect x="538" y="1476" width="4" height="15" fill="rgb(229,137,16)"/><text x="541.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py:96) (1 samples, 0.35%)</title><rect x="538" y="1492" width="4" height="15" fill="rgb(211,181,39)"/><text x="541.00" y="1502.50"></text></g><g><title>join (posixpath.py:92) (1 samples, 0.35%)</title><rect x="538" y="1508" width="4" height="15" fill="rgb(215,220,16)"/><text x="541.00" y="1518.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.35%)</title><rect x="538" y="1524" width="4" height="15" fill="rgb(219,187,3)"/><text x="541.00" y="1534.50"></text></g><g><title>unicode_resize (python3.7) (1 samples, 0.35%)</title><rect x="538" y="1540" width="4" height="15" fill="rgb(219,126,22)"/><text x="541.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.35%)</title><rect x="542" y="868" width="4" height="15" fill="rgb(210,178,37)"/><text x="545.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="884" width="4" height="15" fill="rgb(236,180,12)"/><text x="545.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="900" width="4" height="15" fill="rgb(205,154,6)"/><text x="545.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="916" width="4" height="15" fill="rgb(220,133,36)"/><text x="545.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="932" width="4" height="15" fill="rgb(208,52,9)"/><text x="545.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="948" width="4" height="15" fill="rgb(205,80,7)"/><text x="545.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.35%)</title><rect x="542" y="964" width="4" height="15" fill="rgb(244,56,34)"/><text x="545.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="980" width="4" height="15" fill="rgb(233,11,42)"/><text x="545.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="996" width="4" height="15" fill="rgb(230,105,22)"/><text x="545.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1012" width="4" height="15" fill="rgb(229,114,3)"/><text x="545.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1028" width="4" height="15" fill="rgb(218,190,4)"/><text x="545.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1044" width="4" height="15" fill="rgb(247,49,40)"/><text x="545.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.35%)</title><rect x="542" y="1060" width="4" height="15" fill="rgb(226,57,16)"/><text x="545.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1076" width="4" height="15" fill="rgb(210,166,27)"/><text x="545.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1092" width="4" height="15" fill="rgb(209,123,2)"/><text x="545.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1108" width="4" height="15" fill="rgb(248,70,19)"/><text x="545.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1124" width="4" height="15" fill="rgb(218,221,26)"/><text x="545.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1140" width="4" height="15" fill="rgb(210,153,1)"/><text x="545.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.35%)</title><rect x="542" y="1156" width="4" height="15" fill="rgb(252,199,47)"/><text x="545.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1172" width="4" height="15" fill="rgb(247,117,38)"/><text x="545.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1188" width="4" height="15" fill="rgb(223,51,5)"/><text x="545.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1204" width="4" height="15" fill="rgb(240,88,28)"/><text x="545.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1220" width="4" height="15" fill="rgb(221,202,42)"/><text x="545.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1236" width="4" height="15" fill="rgb(218,37,47)"/><text x="545.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.35%)</title><rect x="542" y="1252" width="4" height="15" fill="rgb(234,176,30)"/><text x="545.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1268" width="4" height="15" fill="rgb(252,132,3)"/><text x="545.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1284" width="4" height="15" fill="rgb(216,195,17)"/><text x="545.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1300" width="4" height="15" fill="rgb(248,54,27)"/><text x="545.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1316" width="4" height="15" fill="rgb(209,185,13)"/><text x="545.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1332" width="4" height="15" fill="rgb(241,16,33)"/><text x="545.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.35%)</title><rect x="542" y="1348" width="4" height="15" fill="rgb(224,94,40)"/><text x="545.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1364" width="4" height="15" fill="rgb(229,68,23)"/><text x="545.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1380" width="4" height="15" fill="rgb(243,151,19)"/><text x="545.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1396" width="4" height="15" fill="rgb(228,100,44)"/><text x="545.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1412" width="4" height="15" fill="rgb(236,13,4)"/><text x="545.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1428" width="4" height="15" fill="rgb(238,225,49)"/><text x="545.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.35%)</title><rect x="542" y="1444" width="4" height="15" fill="rgb(244,21,12)"/><text x="545.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1460" width="4" height="15" fill="rgb(212,205,42)"/><text x="545.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1476" width="4" height="15" fill="rgb(224,155,52)"/><text x="545.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1492" width="4" height="15" fill="rgb(207,67,41)"/><text x="545.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1508" width="4" height="15" fill="rgb(206,197,20)"/><text x="545.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1524" width="4" height="15" fill="rgb(206,220,8)"/><text x="545.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.35%)</title><rect x="542" y="1540" width="4" height="15" fill="rgb(206,220,48)"/><text x="545.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1556" width="4" height="15" fill="rgb(230,161,13)"/><text x="545.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1572" width="4" height="15" fill="rgb(230,195,0)"/><text x="545.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1588" width="4" height="15" fill="rgb(213,104,27)"/><text x="545.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1604" width="4" height="15" fill="rgb(254,17,0)"/><text x="545.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1620" width="4" height="15" fill="rgb(230,114,1)"/><text x="545.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.35%)</title><rect x="542" y="1636" width="4" height="15" fill="rgb(246,39,28)"/><text x="545.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="542" y="1652" width="4" height="15" fill="rgb(208,20,11)"/><text x="545.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="542" y="1668" width="4" height="15" fill="rgb(219,21,0)"/><text x="545.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="542" y="1684" width="4" height="15" fill="rgb(232,4,23)"/><text x="545.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="542" y="1700" width="4" height="15" fill="rgb(245,180,33)"/><text x="545.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="542" y="1716" width="4" height="15" fill="rgb(214,15,45)"/><text x="545.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.35%)</title><rect x="542" y="1732" width="4" height="15" fill="rgb(213,161,44)"/><text x="545.00" y="1742.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.35%)</title><rect x="542" y="1748" width="4" height="15" fill="rgb(240,100,34)"/><text x="545.00" y="1758.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.35%)</title><rect x="542" y="1764" width="4" height="15" fill="rgb(243,200,9)"/><text x="545.00" y="1774.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.35%)</title><rect x="542" y="1780" width="4" height="15" fill="rgb(214,119,34)"/><text x="545.00" y="1790.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.35%)</title><rect x="542" y="1796" width="4" height="15" fill="rgb(248,47,34)"/><text x="545.00" y="1806.50"></text></g><g><title>_signature_from_callable (inspect.py:2238) (1 samples, 0.35%)</title><rect x="542" y="1812" width="4" height="15" fill="rgb(245,160,50)"/><text x="545.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.05%)</title><rect x="538" y="292" width="12" height="15" fill="rgb(225,38,46)"/><text x="541.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="538" y="308" width="12" height="15" fill="rgb(232,194,42)"/><text x="541.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="538" y="324" width="12" height="15" fill="rgb(253,167,1)"/><text x="541.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="538" y="340" width="12" height="15" fill="rgb(206,12,14)"/><text x="541.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="538" y="356" width="12" height="15" fill="rgb(239,75,0)"/><text x="541.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="538" y="372" width="12" height="15" fill="rgb(213,96,37)"/><text x="541.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.05%)</title><rect x="538" y="388" width="12" height="15" fill="rgb(224,144,18)"/><text x="541.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="538" y="404" width="12" height="15" fill="rgb(214,74,39)"/><text x="541.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="538" y="420" width="12" height="15" fill="rgb(229,56,13)"/><text x="541.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="538" y="436" width="12" height="15" fill="rgb(207,192,2)"/><text x="541.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="538" y="452" width="12" height="15" fill="rgb(251,101,12)"/><text x="541.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="538" y="468" width="12" height="15" fill="rgb(245,199,19)"/><text x="541.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.70%)</title><rect x="542" y="484" width="8" height="15" fill="rgb(242,138,53)"/><text x="545.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="542" y="500" width="8" height="15" fill="rgb(227,53,10)"/><text x="545.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="542" y="516" width="8" height="15" fill="rgb(251,9,46)"/><text x="545.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="542" y="532" width="8" height="15" fill="rgb(227,24,34)"/><text x="545.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="542" y="548" width="8" height="15" fill="rgb(224,170,21)"/><text x="545.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="542" y="564" width="8" height="15" fill="rgb(250,45,6)"/><text x="545.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.70%)</title><rect x="542" y="580" width="8" height="15" fill="rgb(206,147,25)"/><text x="545.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="542" y="596" width="8" height="15" fill="rgb(213,197,10)"/><text x="545.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="542" y="612" width="8" height="15" fill="rgb(248,218,18)"/><text x="545.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="542" y="628" width="8" height="15" fill="rgb(240,76,23)"/><text x="545.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="542" y="644" width="8" height="15" fill="rgb(242,155,10)"/><text x="545.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="542" y="660" width="8" height="15" fill="rgb(215,66,42)"/><text x="545.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.70%)</title><rect x="542" y="676" width="8" height="15" fill="rgb(231,133,41)"/><text x="545.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="542" y="692" width="8" height="15" fill="rgb(230,1,21)"/><text x="545.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="542" y="708" width="8" height="15" fill="rgb(212,21,9)"/><text x="545.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="542" y="724" width="8" height="15" fill="rgb(225,131,5)"/><text x="545.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="542" y="740" width="8" height="15" fill="rgb(252,204,12)"/><text x="545.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="542" y="756" width="8" height="15" fill="rgb(237,102,14)"/><text x="545.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.70%)</title><rect x="542" y="772" width="8" height="15" fill="rgb(210,185,23)"/><text x="545.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="542" y="788" width="8" height="15" fill="rgb(226,78,45)"/><text x="545.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="542" y="804" width="8" height="15" fill="rgb(214,93,21)"/><text x="545.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="542" y="820" width="8" height="15" fill="rgb(233,31,49)"/><text x="545.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="542" y="836" width="8" height="15" fill="rgb(234,147,5)"/><text x="545.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="542" y="852" width="8" height="15" fill="rgb(235,27,5)"/><text x="545.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.35%)</title><rect x="546" y="868" width="4" height="15" fill="rgb(213,2,6)"/><text x="549.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="546" y="884" width="4" height="15" fill="rgb(254,51,15)"/><text x="549.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="546" y="900" width="4" height="15" fill="rgb(205,195,51)"/><text x="549.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="546" y="916" width="4" height="15" fill="rgb(223,151,21)"/><text x="549.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="546" y="932" width="4" height="15" fill="rgb(228,149,14)"/><text x="549.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="546" y="948" width="4" height="15" fill="rgb(216,39,15)"/><text x="549.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:11488) (1 samples, 0.35%)</title><rect x="546" y="964" width="4" height="15" fill="rgb(248,144,13)"/><text x="549.00" y="974.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.35%)</title><rect x="550" y="1044" width="4" height="15" fill="rgb(242,222,14)"/><text x="553.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="550" y="1060" width="4" height="15" fill="rgb(205,216,5)"/><text x="553.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="550" y="1076" width="4" height="15" fill="rgb(211,121,48)"/><text x="553.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="550" y="1092" width="4" height="15" fill="rgb(211,65,0)"/><text x="553.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.35%)</title><rect x="550" y="1108" width="4" height="15" fill="rgb(229,118,45)"/><text x="553.00" y="1118.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.35%)</title><rect x="550" y="1124" width="4" height="15" fill="rgb(221,69,49)"/><text x="553.00" y="1134.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.35%)</title><rect x="550" y="1140" width="4" height="15" fill="rgb(222,38,42)"/><text x="553.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.70%)</title><rect x="550" y="532" width="8" height="15" fill="rgb(228,13,1)"/><text x="553.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="550" y="548" width="8" height="15" fill="rgb(249,28,20)"/><text x="553.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="550" y="564" width="8" height="15" fill="rgb(218,81,16)"/><text x="553.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="550" y="580" width="8" height="15" fill="rgb(227,187,7)"/><text x="553.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="550" y="596" width="8" height="15" fill="rgb(216,214,47)"/><text x="553.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="612" width="8" height="15" fill="rgb(213,216,5)"/><text x="553.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.70%)</title><rect x="550" y="628" width="8" height="15" fill="rgb(246,132,38)"/><text x="553.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="550" y="644" width="8" height="15" fill="rgb(221,171,16)"/><text x="553.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="550" y="660" width="8" height="15" fill="rgb(235,70,11)"/><text x="553.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="550" y="676" width="8" height="15" fill="rgb(206,3,40)"/><text x="553.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="550" y="692" width="8" height="15" fill="rgb(227,33,7)"/><text x="553.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="708" width="8" height="15" fill="rgb(213,219,33)"/><text x="553.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.70%)</title><rect x="550" y="724" width="8" height="15" fill="rgb(236,150,20)"/><text x="553.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="550" y="740" width="8" height="15" fill="rgb(212,62,35)"/><text x="553.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="550" y="756" width="8" height="15" fill="rgb(214,121,54)"/><text x="553.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="550" y="772" width="8" height="15" fill="rgb(219,15,13)"/><text x="553.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="550" y="788" width="8" height="15" fill="rgb(233,115,21)"/><text x="553.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="804" width="8" height="15" fill="rgb(225,165,6)"/><text x="553.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.70%)</title><rect x="550" y="820" width="8" height="15" fill="rgb(215,208,24)"/><text x="553.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="550" y="836" width="8" height="15" fill="rgb(253,141,48)"/><text x="553.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="852" width="8" height="15" fill="rgb(222,140,1)"/><text x="553.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="550" y="868" width="8" height="15" fill="rgb(248,66,49)"/><text x="553.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="550" y="884" width="8" height="15" fill="rgb(225,162,29)"/><text x="553.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="550" y="900" width="8" height="15" fill="rgb(207,129,15)"/><text x="553.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="550" y="916" width="8" height="15" fill="rgb(212,138,15)"/><text x="553.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="932" width="8" height="15" fill="rgb(217,205,13)"/><text x="553.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.70%)</title><rect x="550" y="948" width="8" height="15" fill="rgb(222,182,19)"/><text x="553.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="550" y="964" width="8" height="15" fill="rgb(237,113,37)"/><text x="553.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="550" y="980" width="8" height="15" fill="rgb(206,198,14)"/><text x="553.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="550" y="996" width="8" height="15" fill="rgb(224,35,47)"/><text x="553.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="550" y="1012" width="8" height="15" fill="rgb(233,153,3)"/><text x="553.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="550" y="1028" width="8" height="15" fill="rgb(251,51,23)"/><text x="553.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.35%)</title><rect x="554" y="1044" width="4" height="15" fill="rgb(213,135,17)"/><text x="557.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1060" width="4" height="15" fill="rgb(225,225,30)"/><text x="557.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1076" width="4" height="15" fill="rgb(212,125,35)"/><text x="557.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1092" width="4" height="15" fill="rgb(208,228,33)"/><text x="557.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="554" y="1108" width="4" height="15" fill="rgb(240,194,47)"/><text x="557.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1124" width="4" height="15" fill="rgb(221,16,7)"/><text x="557.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.35%)</title><rect x="554" y="1140" width="4" height="15" fill="rgb(234,205,4)"/><text x="557.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1156" width="4" height="15" fill="rgb(219,158,4)"/><text x="557.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1172" width="4" height="15" fill="rgb(236,54,46)"/><text x="557.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1188" width="4" height="15" fill="rgb(205,162,29)"/><text x="557.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="554" y="1204" width="4" height="15" fill="rgb(245,1,40)"/><text x="557.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1220" width="4" height="15" fill="rgb(230,197,22)"/><text x="557.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.35%)</title><rect x="554" y="1236" width="4" height="15" fill="rgb(223,209,19)"/><text x="557.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1252" width="4" height="15" fill="rgb(215,69,44)"/><text x="557.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1268" width="4" height="15" fill="rgb(233,45,34)"/><text x="557.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1284" width="4" height="15" fill="rgb(226,151,36)"/><text x="557.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="554" y="1300" width="4" height="15" fill="rgb(241,17,35)"/><text x="557.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1316" width="4" height="15" fill="rgb(231,35,1)"/><text x="557.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.35%)</title><rect x="554" y="1332" width="4" height="15" fill="rgb(226,26,13)"/><text x="557.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1348" width="4" height="15" fill="rgb(234,220,33)"/><text x="557.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="554" y="1364" width="4" height="15" fill="rgb(210,26,13)"/><text x="557.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1380" width="4" height="15" fill="rgb(228,87,44)"/><text x="557.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1396" width="4" height="15" fill="rgb(218,125,49)"/><text x="557.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1412" width="4" height="15" fill="rgb(215,164,24)"/><text x="557.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1428" width="4" height="15" fill="rgb(239,65,28)"/><text x="557.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="554" y="1444" width="4" height="15" fill="rgb(249,144,49)"/><text x="557.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1460" width="4" height="15" fill="rgb(223,121,50)"/><text x="557.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.35%)</title><rect x="554" y="1476" width="4" height="15" fill="rgb(250,166,11)"/><text x="557.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1492" width="4" height="15" fill="rgb(234,133,47)"/><text x="557.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1508" width="4" height="15" fill="rgb(233,63,14)"/><text x="557.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1524" width="4" height="15" fill="rgb(240,67,35)"/><text x="557.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="554" y="1540" width="4" height="15" fill="rgb(207,98,32)"/><text x="557.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="554" y="1556" width="4" height="15" fill="rgb(246,4,22)"/><text x="557.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.35%)</title><rect x="554" y="1572" width="4" height="15" fill="rgb(231,227,52)"/><text x="557.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="554" y="1588" width="4" height="15" fill="rgb(244,85,53)"/><text x="557.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="554" y="1604" width="4" height="15" fill="rgb(217,88,33)"/><text x="557.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="554" y="1620" width="4" height="15" fill="rgb(214,48,7)"/><text x="557.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.35%)</title><rect x="554" y="1636" width="4" height="15" fill="rgb(219,43,30)"/><text x="557.00" y="1646.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.35%)</title><rect x="554" y="1652" width="4" height="15" fill="rgb(246,85,52)"/><text x="557.00" y="1662.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.35%)</title><rect x="554" y="1668" width="4" height="15" fill="rgb(211,182,32)"/><text x="557.00" y="1678.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:42) (1 samples, 0.35%)</title><rect x="558" y="1732" width="4" height="15" fill="rgb(248,81,32)"/><text x="561.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="558" y="1748" width="4" height="15" fill="rgb(238,179,12)"/><text x="561.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="558" y="1764" width="4" height="15" fill="rgb(222,96,36)"/><text x="561.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="558" y="1780" width="4" height="15" fill="rgb(227,51,51)"/><text x="561.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="558" y="1796" width="4" height="15" fill="rgb(218,122,44)"/><text x="561.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="558" y="1812" width="4" height="15" fill="rgb(209,120,4)"/><text x="561.00" y="1822.50"></text></g><g><title>&lt;module&gt; (asyncio/unix_events.py:22) (1 samples, 0.35%)</title><rect x="558" y="1828" width="4" height="15" fill="rgb(235,19,22)"/><text x="561.00" y="1838.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="558" y="1844" width="4" height="15" fill="rgb(218,2,32)"/><text x="561.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="558" y="1860" width="4" height="15" fill="rgb(232,34,51)"/><text x="561.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="558" y="1876" width="4" height="15" fill="rgb(205,164,40)"/><text x="561.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="558" y="1892" width="4" height="15" fill="rgb(220,211,7)"/><text x="561.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="558" y="1908" width="4" height="15" fill="rgb(225,116,19)"/><text x="561.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="558" y="1924" width="4" height="15" fill="rgb(222,163,32)"/><text x="561.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="558" y="1940" width="4" height="15" fill="rgb(215,219,21)"/><text x="561.00" y="1950.50"></text></g><g><title>&lt;module&gt; (asyncio/selector_events.py:567) (1 samples, 0.35%)</title><rect x="558" y="1956" width="4" height="15" fill="rgb(237,103,19)"/><text x="561.00" y="1966.50"></text></g><g><title>_SelectorTransport (asyncio/selector_events.py:632) (1 samples, 0.35%)</title><rect x="558" y="1972" width="4" height="15" fill="rgb(240,189,10)"/><text x="561.00" y="1982.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.70%)</title><rect x="558" y="1092" width="8" height="15" fill="rgb(211,103,36)"/><text x="561.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.70%)</title><rect x="558" y="1108" width="8" height="15" fill="rgb(223,127,23)"/><text x="561.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1124" width="8" height="15" fill="rgb(223,38,54)"/><text x="561.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1140" width="8" height="15" fill="rgb(224,209,10)"/><text x="561.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1156" width="8" height="15" fill="rgb(236,8,47)"/><text x="561.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1172" width="8" height="15" fill="rgb(220,194,32)"/><text x="561.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1188" width="8" height="15" fill="rgb(219,34,12)"/><text x="561.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1204" width="8" height="15" fill="rgb(222,14,45)"/><text x="561.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.70%)</title><rect x="558" y="1220" width="8" height="15" fill="rgb(237,129,29)"/><text x="561.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1236" width="8" height="15" fill="rgb(240,166,46)"/><text x="561.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1252" width="8" height="15" fill="rgb(248,147,18)"/><text x="561.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1268" width="8" height="15" fill="rgb(250,229,44)"/><text x="561.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1284" width="8" height="15" fill="rgb(245,183,14)"/><text x="561.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1300" width="8" height="15" fill="rgb(245,130,45)"/><text x="561.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.70%)</title><rect x="558" y="1316" width="8" height="15" fill="rgb(222,96,13)"/><text x="561.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1332" width="8" height="15" fill="rgb(252,160,32)"/><text x="561.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1348" width="8" height="15" fill="rgb(234,90,24)"/><text x="561.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1364" width="8" height="15" fill="rgb(245,26,38)"/><text x="561.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1380" width="8" height="15" fill="rgb(232,81,34)"/><text x="561.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1396" width="8" height="15" fill="rgb(212,14,26)"/><text x="561.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.70%)</title><rect x="558" y="1412" width="8" height="15" fill="rgb(224,221,1)"/><text x="561.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (2 samples, 0.70%)</title><rect x="558" y="1428" width="8" height="15" fill="rgb(230,17,36)"/><text x="561.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1444" width="8" height="15" fill="rgb(233,167,2)"/><text x="561.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1460" width="8" height="15" fill="rgb(225,211,8)"/><text x="561.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1476" width="8" height="15" fill="rgb(252,221,49)"/><text x="561.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1492" width="8" height="15" fill="rgb(253,3,44)"/><text x="561.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1508" width="8" height="15" fill="rgb(206,197,46)"/><text x="561.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (2 samples, 0.70%)</title><rect x="558" y="1524" width="8" height="15" fill="rgb(213,153,5)"/><text x="561.00" y="1534.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (2 samples, 0.70%)</title><rect x="558" y="1540" width="8" height="15" fill="rgb(246,161,6)"/><text x="561.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1556" width="8" height="15" fill="rgb(235,130,51)"/><text x="561.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1572" width="8" height="15" fill="rgb(235,45,27)"/><text x="561.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1588" width="8" height="15" fill="rgb(244,33,45)"/><text x="561.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1604" width="8" height="15" fill="rgb(210,111,15)"/><text x="561.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1620" width="8" height="15" fill="rgb(212,20,25)"/><text x="561.00" y="1630.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (2 samples, 0.70%)</title><rect x="558" y="1636" width="8" height="15" fill="rgb(237,108,12)"/><text x="561.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="558" y="1652" width="8" height="15" fill="rgb(245,81,13)"/><text x="561.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="558" y="1668" width="8" height="15" fill="rgb(229,88,52)"/><text x="561.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="558" y="1684" width="8" height="15" fill="rgb(253,184,37)"/><text x="561.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="558" y="1700" width="8" height="15" fill="rgb(215,45,36)"/><text x="561.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="558" y="1716" width="8" height="15" fill="rgb(220,138,41)"/><text x="561.00" y="1726.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.35%)</title><rect x="562" y="1732" width="4" height="15" fill="rgb(217,129,27)"/><text x="565.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="562" y="1748" width="4" height="15" fill="rgb(232,14,27)"/><text x="565.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="562" y="1764" width="4" height="15" fill="rgb(208,56,13)"/><text x="565.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="562" y="1780" width="4" height="15" fill="rgb(221,184,32)"/><text x="565.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="562" y="1796" width="4" height="15" fill="rgb(235,212,49)"/><text x="565.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="562" y="1812" width="4" height="15" fill="rgb(246,146,2)"/><text x="565.00" y="1822.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:40) (1 samples, 0.35%)</title><rect x="562" y="1828" width="4" height="15" fill="rgb(221,43,26)"/><text x="565.00" y="1838.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="562" y="1844" width="4" height="15" fill="rgb(249,45,32)"/><text x="565.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="562" y="1860" width="4" height="15" fill="rgb(231,62,44)"/><text x="565.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="562" y="1876" width="4" height="15" fill="rgb(214,136,11)"/><text x="565.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="562" y="1892" width="4" height="15" fill="rgb(221,58,18)"/><text x="565.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="562" y="1908" width="4" height="15" fill="rgb(210,88,27)"/><text x="565.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.35%)</title><rect x="562" y="1924" width="4" height="15" fill="rgb(246,40,45)"/><text x="565.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.35%)</title><rect x="562" y="1940" width="4" height="15" fill="rgb(218,51,12)"/><text x="565.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.35%)</title><rect x="562" y="1956" width="4" height="15" fill="rgb(209,206,45)"/><text x="565.00" y="1966.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (8 samples, 2.80%)</title><rect x="538" y="148" width="33" height="15" fill="rgb(211,111,11)"/><text x="541.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.80%)</title><rect x="538" y="164" width="33" height="15" fill="rgb(221,38,48)"/><text x="541.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.80%)</title><rect x="538" y="180" width="33" height="15" fill="rgb(249,96,45)"/><text x="541.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.80%)</title><rect x="538" y="196" width="33" height="15" fill="rgb(225,147,33)"/><text x="541.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.80%)</title><rect x="538" y="212" width="33" height="15" fill="rgb(228,219,17)"/><text x="541.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.80%)</title><rect x="538" y="228" width="33" height="15" fill="rgb(222,136,0)"/><text x="541.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.80%)</title><rect x="538" y="244" width="33" height="15" fill="rgb(217,25,50)"/><text x="541.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.80%)</title><rect x="538" y="260" width="33" height="15" fill="rgb(238,42,53)"/><text x="541.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.80%)</title><rect x="538" y="276" width="33" height="15" fill="rgb(223,75,32)"/><text x="541.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.75%)</title><rect x="550" y="292" width="21" height="15" fill="rgb(229,174,3)"/><text x="553.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="550" y="308" width="21" height="15" fill="rgb(253,71,10)"/><text x="553.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.75%)</title><rect x="550" y="324" width="21" height="15" fill="rgb(211,196,41)"/><text x="553.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="550" y="340" width="21" height="15" fill="rgb(205,82,23)"/><text x="553.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="550" y="356" width="21" height="15" fill="rgb(225,203,24)"/><text x="553.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="550" y="372" width="21" height="15" fill="rgb(219,110,19)"/><text x="553.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="550" y="388" width="21" height="15" fill="rgb(216,56,51)"/><text x="553.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="550" y="404" width="21" height="15" fill="rgb(254,188,3)"/><text x="553.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="550" y="420" width="21" height="15" fill="rgb(244,17,2)"/><text x="553.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.75%)</title><rect x="550" y="436" width="21" height="15" fill="rgb(240,184,40)"/><text x="553.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="550" y="452" width="21" height="15" fill="rgb(223,226,53)"/><text x="553.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="550" y="468" width="21" height="15" fill="rgb(236,66,34)"/><text x="553.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="550" y="484" width="21" height="15" fill="rgb(237,16,13)"/><text x="553.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="550" y="500" width="21" height="15" fill="rgb(219,165,28)"/><text x="553.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="550" y="516" width="21" height="15" fill="rgb(232,62,36)"/><text x="553.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.05%)</title><rect x="558" y="532" width="13" height="15" fill="rgb(215,68,14)"/><text x="561.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="548" width="13" height="15" fill="rgb(217,22,22)"/><text x="561.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="558" y="564" width="13" height="15" fill="rgb(221,2,5)"/><text x="561.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="558" y="580" width="13" height="15" fill="rgb(218,29,30)"/><text x="561.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="558" y="596" width="13" height="15" fill="rgb(236,25,10)"/><text x="561.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="612" width="13" height="15" fill="rgb(222,144,50)"/><text x="561.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.05%)</title><rect x="558" y="628" width="13" height="15" fill="rgb(250,159,52)"/><text x="561.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="644" width="13" height="15" fill="rgb(244,61,6)"/><text x="561.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="558" y="660" width="13" height="15" fill="rgb(230,3,23)"/><text x="561.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="558" y="676" width="13" height="15" fill="rgb(247,98,45)"/><text x="561.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="558" y="692" width="13" height="15" fill="rgb(246,165,4)"/><text x="561.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="708" width="13" height="15" fill="rgb(218,3,15)"/><text x="561.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.05%)</title><rect x="558" y="724" width="13" height="15" fill="rgb(215,68,0)"/><text x="561.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="740" width="13" height="15" fill="rgb(221,131,13)"/><text x="561.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.05%)</title><rect x="558" y="756" width="13" height="15" fill="rgb(217,65,11)"/><text x="561.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="772" width="13" height="15" fill="rgb(235,167,54)"/><text x="561.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="788" width="13" height="15" fill="rgb(225,33,1)"/><text x="561.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="558" y="804" width="13" height="15" fill="rgb(227,104,0)"/><text x="561.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="558" y="820" width="13" height="15" fill="rgb(253,120,24)"/><text x="561.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="558" y="836" width="13" height="15" fill="rgb(247,75,54)"/><text x="561.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="852" width="13" height="15" fill="rgb(214,140,13)"/><text x="561.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.05%)</title><rect x="558" y="868" width="13" height="15" fill="rgb(226,197,16)"/><text x="561.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="884" width="13" height="15" fill="rgb(249,183,32)"/><text x="561.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="558" y="900" width="13" height="15" fill="rgb(238,190,16)"/><text x="561.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="558" y="916" width="13" height="15" fill="rgb(224,199,50)"/><text x="561.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="558" y="932" width="13" height="15" fill="rgb(247,69,6)"/><text x="561.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="948" width="13" height="15" fill="rgb(218,68,19)"/><text x="561.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.05%)</title><rect x="558" y="964" width="13" height="15" fill="rgb(229,47,51)"/><text x="561.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.05%)</title><rect x="558" y="980" width="13" height="15" fill="rgb(223,90,41)"/><text x="561.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="996" width="13" height="15" fill="rgb(212,148,32)"/><text x="561.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.05%)</title><rect x="558" y="1012" width="13" height="15" fill="rgb(251,59,13)"/><text x="561.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.05%)</title><rect x="558" y="1028" width="13" height="15" fill="rgb(234,102,33)"/><text x="561.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.05%)</title><rect x="558" y="1044" width="13" height="15" fill="rgb(212,63,54)"/><text x="561.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.05%)</title><rect x="558" y="1060" width="13" height="15" fill="rgb(230,81,29)"/><text x="561.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.05%)</title><rect x="558" y="1076" width="13" height="15" fill="rgb(231,101,51)"/><text x="561.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:44) (1 samples, 0.35%)</title><rect x="566" y="1092" width="5" height="15" fill="rgb(241,129,49)"/><text x="569.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="566" y="1108" width="5" height="15" fill="rgb(241,188,28)"/><text x="569.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="566" y="1124" width="5" height="15" fill="rgb(250,114,22)"/><text x="569.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="566" y="1140" width="5" height="15" fill="rgb(239,223,19)"/><text x="569.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="566" y="1156" width="5" height="15" fill="rgb(250,226,25)"/><text x="569.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.35%)</title><rect x="566" y="1172" width="5" height="15" fill="rgb(244,128,25)"/><text x="569.00" y="1182.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:311) (1 samples, 0.35%)</title><rect x="566" y="1188" width="5" height="15" fill="rgb(206,112,29)"/><text x="569.00" y="1198.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:4) (14 samples, 4.90%)</title><rect x="517" y="52" width="58" height="15" fill="rgb(238,64,50)"/><text x="520.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.90%)</title><rect x="517" y="68" width="58" height="15" fill="rgb(248,56,51)"/><text x="520.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.90%)</title><rect x="517" y="84" width="58" height="15" fill="rgb(244,4,28)"/><text x="520.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.90%)</title><rect x="517" y="100" width="58" height="15" fill="rgb(205,114,30)"/><text x="520.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.90%)</title><rect x="517" y="116" width="58" height="15" fill="rgb(241,103,38)"/><text x="520.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.90%)</title><rect x="517" y="132" width="58" height="15" fill="rgb(252,22,3)"/><text x="520.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:8) (1 samples, 0.35%)</title><rect x="571" y="148" width="4" height="15" fill="rgb(241,68,24)"/><text x="574.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="164" width="4" height="15" fill="rgb(220,179,46)"/><text x="574.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="180" width="4" height="15" fill="rgb(238,122,26)"/><text x="574.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="196" width="4" height="15" fill="rgb(221,55,42)"/><text x="574.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="212" width="4" height="15" fill="rgb(226,178,46)"/><text x="574.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="228" width="4" height="15" fill="rgb(224,122,33)"/><text x="574.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.35%)</title><rect x="571" y="244" width="4" height="15" fill="rgb(248,97,8)"/><text x="574.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="260" width="4" height="15" fill="rgb(222,103,5)"/><text x="574.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="276" width="4" height="15" fill="rgb(219,80,21)"/><text x="574.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="292" width="4" height="15" fill="rgb(211,152,13)"/><text x="574.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="308" width="4" height="15" fill="rgb(221,135,30)"/><text x="574.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="324" width="4" height="15" fill="rgb(254,134,6)"/><text x="574.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.35%)</title><rect x="571" y="340" width="4" height="15" fill="rgb(208,178,11)"/><text x="574.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="356" width="4" height="15" fill="rgb(246,151,45)"/><text x="574.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="571" y="372" width="4" height="15" fill="rgb(218,39,29)"/><text x="574.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="388" width="4" height="15" fill="rgb(209,94,7)"/><text x="574.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="404" width="4" height="15" fill="rgb(212,218,54)"/><text x="574.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="420" width="4" height="15" fill="rgb(244,151,43)"/><text x="574.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="436" width="4" height="15" fill="rgb(224,45,22)"/><text x="574.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="452" width="4" height="15" fill="rgb(237,81,12)"/><text x="574.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="468" width="4" height="15" fill="rgb(253,87,42)"/><text x="574.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.35%)</title><rect x="571" y="484" width="4" height="15" fill="rgb(208,58,46)"/><text x="574.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="500" width="4" height="15" fill="rgb(222,59,19)"/><text x="574.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="516" width="4" height="15" fill="rgb(253,228,35)"/><text x="574.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="532" width="4" height="15" fill="rgb(212,55,48)"/><text x="574.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="548" width="4" height="15" fill="rgb(218,188,38)"/><text x="574.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="564" width="4" height="15" fill="rgb(225,22,27)"/><text x="574.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.35%)</title><rect x="571" y="580" width="4" height="15" fill="rgb(222,74,0)"/><text x="574.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="596" width="4" height="15" fill="rgb(244,198,48)"/><text x="574.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="612" width="4" height="15" fill="rgb(216,87,19)"/><text x="574.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="628" width="4" height="15" fill="rgb(218,172,50)"/><text x="574.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="644" width="4" height="15" fill="rgb(241,206,24)"/><text x="574.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="660" width="4" height="15" fill="rgb(224,60,33)"/><text x="574.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.35%)</title><rect x="571" y="676" width="4" height="15" fill="rgb(213,195,54)"/><text x="574.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="571" y="692" width="4" height="15" fill="rgb(205,166,13)"/><text x="574.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="571" y="708" width="4" height="15" fill="rgb(249,205,52)"/><text x="574.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="571" y="724" width="4" height="15" fill="rgb(226,212,50)"/><text x="574.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="571" y="740" width="4" height="15" fill="rgb(213,51,17)"/><text x="574.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="571" y="756" width="4" height="15" fill="rgb(250,86,9)"/><text x="574.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.35%)</title><rect x="571" y="772" width="4" height="15" fill="rgb(214,222,54)"/><text x="574.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.35%)</title><rect x="571" y="788" width="4" height="15" fill="rgb(206,201,10)"/><text x="574.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.35%)</title><rect x="571" y="804" width="4" height="15" fill="rgb(206,169,12)"/><text x="574.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.35%)</title><rect x="571" y="820" width="4" height="15" fill="rgb(213,199,27)"/><text x="574.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.35%)</title><rect x="571" y="836" width="4" height="15" fill="rgb(246,63,6)"/><text x="574.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.35%)</title><rect x="571" y="852" width="4" height="15" fill="rgb(232,152,27)"/><text x="574.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.35%)</title><rect x="571" y="868" width="4" height="15" fill="rgb(245,182,0)"/><text x="574.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.35%)</title><rect x="571" y="884" width="4" height="15" fill="rgb(233,197,38)"/><text x="574.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.35%)</title><rect x="571" y="900" width="4" height="15" fill="rgb(249,87,5)"/><text x="574.00" y="910.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:28) (1 samples, 0.35%)</title><rect x="575" y="84" width="4" height="15" fill="rgb(245,61,37)"/><text x="578.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.35%)</title><rect x="575" y="100" width="4" height="15" fill="rgb(208,227,45)"/><text x="578.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.35%)</title><rect x="575" y="116" width="4" height="15" fill="rgb(229,88,7)"/><text x="578.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.35%)</title><rect x="575" y="132" width="4" height="15" fill="rgb(248,164,13)"/><text x="578.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.35%)</title><rect x="575" y="148" width="4" height="15" fill="rgb(239,31,22)"/><text x="578.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.35%)</title><rect x="575" y="164" width="4" height="15" fill="rgb(213,189,6)"/><text x="578.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.35%)</title><rect x="575" y="180" width="4" height="15" fill="rgb(241,45,26)"/><text x="578.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.35%)</title><rect x="575" y="196" width="4" height="15" fill="rgb(250,137,41)"/><text x="578.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="575" y="212" width="4" height="15" fill="rgb(233,106,20)"/><text x="578.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="575" y="228" width="4" height="15" fill="rgb(228,13,14)"/><text x="578.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="575" y="244" width="4" height="15" fill="rgb(253,217,17)"/><text x="578.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="575" y="260" width="4" height="15" fill="rgb(218,98,10)"/><text x="578.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="575" y="276" width="4" height="15" fill="rgb(247,94,46)"/><text x="578.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.35%)</title><rect x="575" y="292" width="4" height="15" fill="rgb(250,226,27)"/><text x="578.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="575" y="308" width="4" height="15" fill="rgb(247,31,40)"/><text x="578.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="575" y="324" width="4" height="15" fill="rgb(234,176,18)"/><text x="578.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="575" y="340" width="4" height="15" fill="rgb(235,78,50)"/><text x="578.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="575" y="356" width="4" height="15" fill="rgb(237,7,4)"/><text x="578.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="575" y="372" width="4" height="15" fill="rgb(233,151,37)"/><text x="578.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:12) (1 samples, 0.35%)</title><rect x="575" y="388" width="4" height="15" fill="rgb(223,30,36)"/><text x="578.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="575" y="404" width="4" height="15" fill="rgb(212,77,18)"/><text x="578.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="575" y="420" width="4" height="15" fill="rgb(208,150,47)"/><text x="578.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="575" y="436" width="4" height="15" fill="rgb(236,176,48)"/><text x="578.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.35%)</title><rect x="575" y="452" width="4" height="15" fill="rgb(217,201,48)"/><text x="578.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.35%)</title><rect x="575" y="468" width="4" height="15" fill="rgb(207,139,6)"/><text x="578.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.35%)</title><rect x="575" y="484" width="4" height="15" fill="rgb(217,32,7)"/><text x="578.00" y="494.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:18) (1 samples, 0.35%)</title><rect x="579" y="100" width="4" height="15" fill="rgb(223,23,41)"/><text x="582.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.35%)</title><rect x="579" y="116" width="4" height="15" fill="rgb(243,178,31)"/><text x="582.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.35%)</title><rect x="579" y="132" width="4" height="15" fill="rgb(226,69,17)"/><text x="582.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.35%)</title><rect x="579" y="148" width="4" height="15" fill="rgb(219,201,1)"/><text x="582.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.35%)</title><rect x="579" y="164" width="4" height="15" fill="rgb(212,125,21)"/><text x="582.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.35%)</title><rect x="579" y="180" width="4" height="15" fill="rgb(245,228,34)"/><text x="582.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 1.05%)</title><rect x="600" y="148" width="12" height="15" fill="rgb(242,79,12)"/><text x="603.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.35%)</title><rect x="616" y="164" width="4" height="15" fill="rgb(208,215,48)"/><text x="619.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.35%)</title><rect x="641" y="180" width="4" height="15" fill="rgb(207,65,23)"/><text x="644.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 2.45%)</title><rect x="645" y="180" width="29" height="15" fill="rgb(210,214,47)"/><text x="648.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 1.05%)</title><rect x="661" y="196" width="13" height="15" fill="rgb(227,198,0)"/><text x="664.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 1.05%)</title><rect x="690" y="212" width="13" height="15" fill="rgb(217,19,43)"/><text x="693.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.70%)</title><rect x="694" y="228" width="9" height="15" fill="rgb(229,183,46)"/><text x="697.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.35%)</title><rect x="699" y="244" width="4" height="15" fill="rgb(217,91,30)"/><text x="702.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.35%)</title><rect x="699" y="260" width="4" height="15" fill="rgb(230,129,26)"/><text x="702.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.35%)</title><rect x="699" y="276" width="4" height="15" fill="rgb(250,134,42)"/><text x="702.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="699" y="292" width="4" height="15" fill="rgb(215,111,22)"/><text x="702.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.35%)</title><rect x="707" y="228" width="4" height="15" fill="rgb(246,7,4)"/><text x="710.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (7 samples, 2.45%)</title><rect x="690" y="196" width="29" height="15" fill="rgb(236,187,47)"/><text x="693.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (4 samples, 1.40%)</title><rect x="703" y="212" width="16" height="15" fill="rgb(223,80,42)"/><text x="706.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (2 samples, 0.70%)</title><rect x="711" y="228" width="8" height="15" fill="rgb(244,146,12)"/><text x="714.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="736" y="260" width="4" height="15" fill="rgb(222,189,34)"/><text x="739.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="736" y="276" width="4" height="15" fill="rgb(219,59,40)"/><text x="739.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.35%)</title><rect x="736" y="292" width="4" height="15" fill="rgb(216,74,16)"/><text x="739.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.35%)</title><rect x="740" y="260" width="4" height="15" fill="rgb(216,225,27)"/><text x="743.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.35%)</title><rect x="740" y="276" width="4" height="15" fill="rgb(245,132,54)"/><text x="743.00" y="286.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.35%)</title><rect x="744" y="260" width="4" height="15" fill="rgb(231,17,51)"/><text x="747.00" y="270.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.35%)</title><rect x="748" y="372" width="4" height="15" fill="rgb(206,9,8)"/><text x="751.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.70%)</title><rect x="748" y="356" width="8" height="15" fill="rgb(226,91,2)"/><text x="751.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.35%)</title><rect x="752" y="372" width="4" height="15" fill="rgb(253,13,31)"/><text x="755.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.35%)</title><rect x="752" y="388" width="4" height="15" fill="rgb(219,167,21)"/><text x="755.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.35%)</title><rect x="752" y="404" width="4" height="15" fill="rgb(234,95,50)"/><text x="755.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:745) (1 samples, 0.35%)</title><rect x="752" y="420" width="4" height="15" fill="rgb(233,112,46)"/><text x="755.00" y="430.50"></text></g><g><title>array_sum (methods.c:2215) (3 samples, 1.05%)</title><rect x="748" y="260" width="12" height="15" fill="rgb(236,102,35)"/><text x="751.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 1.05%)</title><rect x="748" y="276" width="12" height="15" fill="rgb(247,125,27)"/><text x="751.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 1.05%)</title><rect x="748" y="292" width="12" height="15" fill="rgb(222,43,2)"/><text x="751.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.05%)</title><rect x="748" y="308" width="12" height="15" fill="rgb(241,220,44)"/><text x="751.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.05%)</title><rect x="748" y="324" width="12" height="15" fill="rgb(210,172,1)"/><text x="751.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.05%)</title><rect x="748" y="340" width="12" height="15" fill="rgb(213,15,53)"/><text x="751.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.35%)</title><rect x="756" y="356" width="4" height="15" fill="rgb(229,198,29)"/><text x="759.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.35%)</title><rect x="756" y="372" width="4" height="15" fill="rgb(230,40,19)"/><text x="759.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.35%)</title><rect x="756" y="388" width="4" height="15" fill="rgb(237,4,45)"/><text x="759.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (9 samples, 3.15%)</title><rect x="727" y="244" width="38" height="15" fill="rgb(246,70,25)"/><text x="730.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.35%)</title><rect x="760" y="260" width="5" height="15" fill="rgb(212,47,1)"/><text x="763.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.35%)</title><rect x="760" y="276" width="5" height="15" fill="rgb(254,115,52)"/><text x="763.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:321) (1 samples, 0.35%)</title><rect x="760" y="292" width="5" height="15" fill="rgb(207,122,26)"/><text x="763.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="769" y="260" width="4" height="15" fill="rgb(221,12,53)"/><text x="772.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="769" y="276" width="4" height="15" fill="rgb(232,228,4)"/><text x="772.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.35%)</title><rect x="769" y="292" width="4" height="15" fill="rgb(223,125,25)"/><text x="772.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.35%)</title><rect x="769" y="308" width="4" height="15" fill="rgb(247,190,47)"/><text x="772.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="769" y="324" width="4" height="15" fill="rgb(230,189,27)"/><text x="772.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.70%)</title><rect x="773" y="276" width="8" height="15" fill="rgb(244,159,21)"/><text x="776.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (2 samples, 0.70%)</title><rect x="773" y="292" width="8" height="15" fill="rgb(241,74,13)"/><text x="776.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="781" y="276" width="4" height="15" fill="rgb(238,158,25)"/><text x="784.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.35%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(244,114,26)"/><text x="784.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.40%)</title><rect x="773" y="260" width="16" height="15" fill="rgb(245,16,48)"/><text x="776.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.35%)</title><rect x="785" y="276" width="4" height="15" fill="rgb(254,223,35)"/><text x="788.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.35%)</title><rect x="785" y="292" width="4" height="15" fill="rgb(212,221,5)"/><text x="788.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.35%)</title><rect x="785" y="308" width="4" height="15" fill="rgb(246,131,12)"/><text x="788.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="785" y="324" width="4" height="15" fill="rgb(254,76,30)"/><text x="788.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (18 samples, 6.29%)</title><rect x="719" y="196" width="74" height="15" fill="rgb(217,191,41)"/><text x="722.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 6.29%)</title><rect x="719" y="212" width="74" height="15" fill="rgb(231,153,27)"/><text x="722.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (17 samples, 5.94%)</title><rect x="723" y="228" width="70" height="15" fill="rgb(224,19,47)"/><text x="726.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.45%)</title><rect x="765" y="244" width="28" height="15" fill="rgb(212,29,12)"/><text x="768.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.35%)</title><rect x="789" y="260" width="4" height="15" fill="rgb(218,15,6)"/><text x="792.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.35%)</title><rect x="789" y="276" width="4" height="15" fill="rgb(244,185,35)"/><text x="792.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.35%)</title><rect x="793" y="196" width="5" height="15" fill="rgb(219,216,8)"/><text x="796.00" y="206.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.35%)</title><rect x="814" y="260" width="4" height="15" fill="rgb(233,99,33)"/><text x="817.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.35%)</title><rect x="818" y="292" width="4" height="15" fill="rgb(217,124,25)"/><text x="821.00" y="302.50"></text></g><g><title>0x7f40d111f734 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="818" y="308" width="4" height="15" fill="rgb(251,157,28)"/><text x="821.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:931) (1 samples, 0.35%)</title><rect x="822" y="308" width="4" height="15" fill="rgb(221,4,12)"/><text x="825.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.35%)</title><rect x="822" y="324" width="4" height="15" fill="rgb(231,178,4)"/><text x="825.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.35%)</title><rect x="822" y="340" width="4" height="15" fill="rgb(224,150,6)"/><text x="825.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.35%)</title><rect x="822" y="356" width="4" height="15" fill="rgb(225,201,1)"/><text x="825.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.35%)</title><rect x="822" y="372" width="4" height="15" fill="rgb(233,107,53)"/><text x="825.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.35%)</title><rect x="826" y="324" width="5" height="15" fill="rgb(219,228,27)"/><text x="829.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.35%)</title><rect x="826" y="340" width="5" height="15" fill="rgb(240,102,6)"/><text x="829.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.35%)</title><rect x="826" y="356" width="5" height="15" fill="rgb(228,196,40)"/><text x="829.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1043) (1 samples, 0.35%)</title><rect x="826" y="372" width="5" height="15" fill="rgb(227,97,11)"/><text x="829.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (2 samples, 0.70%)</title><rect x="831" y="324" width="8" height="15" fill="rgb(208,84,39)"/><text x="834.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="835" y="340" width="4" height="15" fill="rgb(253,47,27)"/><text x="838.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="839" y="340" width="4" height="15" fill="rgb(217,128,37)"/><text x="842.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 4.20%)</title><rect x="798" y="228" width="49" height="15" fill="rgb(247,45,17)"/><text x="801.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 3.50%)</title><rect x="806" y="244" width="41" height="15" fill="rgb(253,60,54)"/><text x="809.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 2.45%)</title><rect x="818" y="260" width="29" height="15" fill="rgb(241,47,22)"/><text x="821.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 2.45%)</title><rect x="818" y="276" width="29" height="15" fill="rgb(207,191,38)"/><text x="821.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 2.10%)</title><rect x="822" y="292" width="25" height="15" fill="rgb(233,108,25)"/><text x="825.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.75%)</title><rect x="826" y="308" width="21" height="15" fill="rgb(239,116,22)"/><text x="829.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.70%)</title><rect x="839" y="324" width="8" height="15" fill="rgb(218,121,36)"/><text x="842.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.35%)</title><rect x="843" y="340" width="4" height="15" fill="rgb(211,207,0)"/><text x="846.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="843" y="356" width="4" height="15" fill="rgb(228,196,27)"/><text x="846.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="843" y="372" width="4" height="15" fill="rgb(217,187,45)"/><text x="846.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.35%)</title><rect x="851" y="260" width="4" height="15" fill="rgb(212,95,27)"/><text x="854.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.35%)</title><rect x="851" y="276" width="4" height="15" fill="rgb(225,128,15)"/><text x="854.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="855" y="260" width="4" height="15" fill="rgb(213,117,48)"/><text x="858.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.35%)</title><rect x="855" y="276" width="4" height="15" fill="rgb(207,205,30)"/><text x="858.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.35%)</title><rect x="859" y="260" width="5" height="15" fill="rgb(251,158,27)"/><text x="862.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.35%)</title><rect x="864" y="292" width="4" height="15" fill="rgb(211,160,35)"/><text x="867.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.35%)</title><rect x="868" y="308" width="4" height="15" fill="rgb(220,90,44)"/><text x="871.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.35%)</title><rect x="868" y="324" width="4" height="15" fill="rgb(230,51,26)"/><text x="871.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.35%)</title><rect x="868" y="340" width="4" height="15" fill="rgb(245,8,31)"/><text x="871.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.45%)</title><rect x="847" y="228" width="29" height="15" fill="rgb(209,215,24)"/><text x="850.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.10%)</title><rect x="851" y="244" width="25" height="15" fill="rgb(213,204,0)"/><text x="854.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.05%)</title><rect x="864" y="260" width="12" height="15" fill="rgb(225,76,53)"/><text x="867.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.05%)</title><rect x="864" y="276" width="12" height="15" fill="rgb(224,191,7)"/><text x="867.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.70%)</title><rect x="868" y="292" width="8" height="15" fill="rgb(223,221,8)"/><text x="871.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.35%)</title><rect x="872" y="308" width="4" height="15" fill="rgb(228,103,48)"/><text x="875.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2204) (1 samples, 0.35%)</title><rect x="872" y="324" width="4" height="15" fill="rgb(236,27,23)"/><text x="875.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.35%)</title><rect x="876" y="228" width="4" height="15" fill="rgb(218,117,10)"/><text x="879.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="880" y="260" width="4" height="15" fill="rgb(244,109,13)"/><text x="883.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.35%)</title><rect x="880" y="276" width="4" height="15" fill="rgb(205,39,37)"/><text x="883.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.35%)</title><rect x="884" y="324" width="4" height="15" fill="rgb(216,56,36)"/><text x="887.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="884" y="340" width="4" height="15" fill="rgb(219,182,24)"/><text x="887.00" y="350.50"></text></g><g><title>0x7f40d10c178e (libc-2.29.so) (1 samples, 0.35%)</title><rect x="884" y="356" width="4" height="15" fill="rgb(229,60,54)"/><text x="887.00" y="366.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.70%)</title><rect x="884" y="308" width="8" height="15" fill="rgb(239,197,48)"/><text x="887.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:618) (1 samples, 0.35%)</title><rect x="888" y="324" width="4" height="15" fill="rgb(225,135,5)"/><text x="891.00" y="334.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.35%)</title><rect x="892" y="324" width="5" height="15" fill="rgb(214,139,20)"/><text x="895.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="892" y="340" width="5" height="15" fill="rgb(232,196,9)"/><text x="895.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (5 samples, 1.75%)</title><rect x="880" y="228" width="21" height="15" fill="rgb(230,213,17)"/><text x="883.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.75%)</title><rect x="880" y="244" width="21" height="15" fill="rgb(215,75,39)"/><text x="883.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.40%)</title><rect x="884" y="260" width="17" height="15" fill="rgb(252,124,41)"/><text x="887.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (4 samples, 1.40%)</title><rect x="884" y="276" width="17" height="15" fill="rgb(219,71,35)"/><text x="887.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 1.40%)</title><rect x="884" y="292" width="17" height="15" fill="rgb(233,53,16)"/><text x="887.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.70%)</title><rect x="892" y="308" width="9" height="15" fill="rgb(212,76,16)"/><text x="895.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.35%)</title><rect x="897" y="324" width="4" height="15" fill="rgb(234,0,8)"/><text x="900.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.35%)</title><rect x="897" y="340" width="4" height="15" fill="rgb(241,180,22)"/><text x="900.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:109) (1 samples, 0.35%)</title><rect x="897" y="356" width="4" height="15" fill="rgb(244,117,21)"/><text x="900.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.35%)</title><rect x="901" y="228" width="4" height="15" fill="rgb(234,180,29)"/><text x="904.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.35%)</title><rect x="909" y="244" width="4" height="15" fill="rgb(245,189,41)"/><text x="912.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.70%)</title><rect x="921" y="292" width="9" height="15" fill="rgb(227,153,24)"/><text x="924.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.35%)</title><rect x="930" y="308" width="4" height="15" fill="rgb(234,94,40)"/><text x="933.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.35%)</title><rect x="934" y="324" width="4" height="15" fill="rgb(209,82,22)"/><text x="937.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (65 samples, 22.73%)</title><rect x="674" y="180" width="268" height="15" fill="rgb(237,210,42)"/><text x="677.00" y="190.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (35 samples, 12.24%)</title><rect x="798" y="196" width="144" height="15" fill="rgb(252,142,53)"/><text x="801.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 12.24%)</title><rect x="798" y="212" width="144" height="15" fill="rgb(223,151,11)"/><text x="801.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (9 samples, 3.15%)</title><rect x="905" y="228" width="37" height="15" fill="rgb(231,192,39)"/><text x="908.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 2.45%)</title><rect x="913" y="244" width="29" height="15" fill="rgb(250,112,29)"/><text x="916.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.10%)</title><rect x="917" y="260" width="25" height="15" fill="rgb(217,198,44)"/><text x="920.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.10%)</title><rect x="917" y="276" width="25" height="15" fill="rgb(226,167,43)"/><text x="920.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.05%)</title><rect x="930" y="292" width="12" height="15" fill="rgb(250,124,31)"/><text x="933.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.70%)</title><rect x="934" y="308" width="8" height="15" fill="rgb(232,58,34)"/><text x="937.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.35%)</title><rect x="938" y="324" width="4" height="15" fill="rgb(252,172,41)"/><text x="941.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="938" y="340" width="4" height="15" fill="rgb(250,141,19)"/><text x="941.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.35%)</title><rect x="942" y="180" width="4" height="15" fill="rgb(223,185,21)"/><text x="945.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.35%)</title><rect x="946" y="180" width="4" height="15" fill="rgb(210,186,20)"/><text x="949.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 2.45%)</title><rect x="950" y="180" width="29" height="15" fill="rgb(242,204,23)"/><text x="953.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (88 samples, 30.77%)</title><rect x="620" y="164" width="363" height="15" fill="rgb(206,37,24)"/><text x="623.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.35%)</title><rect x="979" y="180" width="4" height="15" fill="rgb(221,223,46)"/><text x="982.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.70%)</title><rect x="983" y="164" width="8" height="15" fill="rgb(251,48,30)"/><text x="986.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (97 samples, 33.92%)</title><rect x="595" y="132" width="401" height="15" fill="rgb(222,14,34)"/><text x="598.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (93 samples, 32.52%)</title><rect x="612" y="148" width="384" height="15" fill="rgb(246,172,32)"/><text x="615.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.35%)</title><rect x="991" y="164" width="5" height="15" fill="rgb(244,4,47)"/><text x="994.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.35%)</title><rect x="991" y="180" width="5" height="15" fill="rgb(228,225,10)"/><text x="994.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:45) (103 samples, 36.01%)</title><rect x="575" y="52" width="425" height="15" fill="rgb(253,11,9)"/><text x="578.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:44) (103 samples, 36.01%)</title><rect x="575" y="68" width="425" height="15" fill="rgb(244,42,51)"/><text x="578.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:29) (102 samples, 35.66%)</title><rect x="579" y="84" width="421" height="15" fill="rgb(208,202,24)"/><text x="582.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:23) (101 samples, 35.31%)</title><rect x="583" y="100" width="417" height="15" fill="rgb(238,158,4)"/><text x="586.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 34.97%)</title><rect x="587" y="116" width="413" height="15" fill="rgb(206,41,2)"/><text x="590.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.35%)</title><rect x="996" y="132" width="4" height="15" fill="rgb(248,59,3)"/><text x="999.00" y="142.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:18) (1 samples, 0.35%)</title><rect x="1000" y="100" width="4" height="15" fill="rgb(232,58,37)"/><text x="1003.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.35%)</title><rect x="1000" y="116" width="4" height="15" fill="rgb(252,175,17)"/><text x="1003.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.35%)</title><rect x="1000" y="132" width="4" height="15" fill="rgb(243,26,28)"/><text x="1003.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.35%)</title><rect x="1000" y="148" width="4" height="15" fill="rgb(220,62,51)"/><text x="1003.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.35%)</title><rect x="1000" y="164" width="4" height="15" fill="rgb(250,196,24)"/><text x="1003.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.35%)</title><rect x="1000" y="180" width="4" height="15" fill="rgb(235,209,34)"/><text x="1003.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.35%)</title><rect x="1000" y="196" width="4" height="15" fill="rgb(207,7,6)"/><text x="1003.00" y="206.50"></text></g><g><title>0x7f4091972ff9 (?) (1 samples, 0.35%)</title><rect x="1000" y="212" width="4" height="15" fill="rgb(210,93,35)"/><text x="1003.00" y="222.50"></text></g><g><title>0x7f409196def6 (?) (1 samples, 0.35%)</title><rect x="1000" y="228" width="4" height="15" fill="rgb(213,93,52)"/><text x="1003.00" y="238.50"></text></g><g><title>0x7f4091962962 (?) (1 samples, 0.35%)</title><rect x="1000" y="244" width="4" height="15" fill="rgb(226,7,37)"/><text x="1003.00" y="254.50"></text></g><g><title>0x7f40919967a7 (?) (1 samples, 0.35%)</title><rect x="1000" y="260" width="4" height="15" fill="rgb(227,77,27)"/><text x="1003.00" y="270.50"></text></g><g><title>0x7f4091996379 (?) (1 samples, 0.35%)</title><rect x="1000" y="276" width="4" height="15" fill="rgb(218,118,52)"/><text x="1003.00" y="286.50"></text></g><g><title>0x7f4091df48b8 (?) (1 samples, 0.35%)</title><rect x="1000" y="292" width="4" height="15" fill="rgb(241,128,35)"/><text x="1003.00" y="302.50"></text></g><g><title>0x7f4091df2c7f (?) (1 samples, 0.35%)</title><rect x="1000" y="308" width="4" height="15" fill="rgb(221,63,45)"/><text x="1003.00" y="318.50"></text></g><g><title>0x7f4091e0599c (?) (1 samples, 0.35%)</title><rect x="1000" y="324" width="4" height="15" fill="rgb(221,34,6)"/><text x="1003.00" y="334.50"></text></g><g><title>0x7f4091b302f0 (?) (1 samples, 0.35%)</title><rect x="1000" y="340" width="4" height="15" fill="rgb(249,214,49)"/><text x="1003.00" y="350.50"></text></g><g><title>0x7f4091dc1aca (?) (1 samples, 0.35%)</title><rect x="1000" y="356" width="4" height="15" fill="rgb(239,152,36)"/><text x="1003.00" y="366.50"></text></g><g><title>0x7f4091dabc8d (?) (1 samples, 0.35%)</title><rect x="1000" y="372" width="4" height="15" fill="rgb(205,49,9)"/><text x="1003.00" y="382.50"></text></g><g><title>0x7f4091dab397 (?) (1 samples, 0.35%)</title><rect x="1000" y="388" width="4" height="15" fill="rgb(244,43,46)"/><text x="1003.00" y="398.50"></text></g><g><title>0x7f4091d95770 (?) (1 samples, 0.35%)</title><rect x="1000" y="404" width="4" height="15" fill="rgb(211,176,43)"/><text x="1003.00" y="414.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.35%)</title><rect x="1029" y="196" width="4" height="15" fill="rgb(224,40,37)"/><text x="1032.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:133) (1 samples, 0.35%)</title><rect x="1033" y="196" width="4" height="15" fill="rgb(208,95,49)"/><text x="1036.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1045" y="260" width="4" height="15" fill="rgb(234,16,35)"/><text x="1048.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1045" y="276" width="4" height="15" fill="rgb(226,152,3)"/><text x="1048.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1045" y="292" width="4" height="15" fill="rgb(219,216,4)"/><text x="1048.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1049" y="260" width="8" height="15" fill="rgb(227,207,54)"/><text x="1052.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 2.10%)</title><rect x="1037" y="196" width="25" height="15" fill="rgb(227,200,8)"/><text x="1040.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 1.75%)</title><rect x="1041" y="212" width="21" height="15" fill="rgb(247,92,40)"/><text x="1044.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.40%)</title><rect x="1045" y="228" width="17" height="15" fill="rgb(226,159,24)"/><text x="1048.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.40%)</title><rect x="1045" y="244" width="17" height="15" fill="rgb(244,12,42)"/><text x="1048.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1057" y="260" width="5" height="15" fill="rgb(243,178,38)"/><text x="1060.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1057" y="276" width="5" height="15" fill="rgb(237,31,16)"/><text x="1060.00" y="286.50"></text></g><g><title>OrtValue::Get&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1082" y="260" width="4" height="15" fill="rgb(224,181,16)"/><text x="1085.00" y="270.50"></text></g><g><title>onnxruntime::SequenceType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1082" y="276" width="4" height="15" fill="rgb(216,226,38)"/><text x="1085.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="1086" y="260" width="4" height="15" fill="rgb(212,173,40)"/><text x="1089.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1090" y="292" width="9" height="15" fill="rgb(243,209,18)"/><text x="1093.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.70%)</title><rect x="1090" y="308" width="9" height="15" fill="rgb(228,92,32)"/><text x="1093.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.70%)</title><rect x="1090" y="324" width="9" height="15" fill="rgb(253,144,51)"/><text x="1093.00" y="334.50"></text></g><g><title>0x7f40d110ac48 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1095" y="340" width="4" height="15" fill="rgb(206,221,31)"/><text x="1098.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1103" y="356" width="4" height="15" fill="rgb(230,57,52)"/><text x="1106.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1103" y="372" width="4" height="15" fill="rgb(216,120,49)"/><text x="1106.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1103" y="340" width="8" height="15" fill="rgb(246,189,19)"/><text x="1106.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="356" width="4" height="15" fill="rgb(231,9,37)"/><text x="1110.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="372" width="4" height="15" fill="rgb(214,217,28)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="388" width="4" height="15" fill="rgb(209,122,30)"/><text x="1110.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="404" width="4" height="15" fill="rgb(242,95,51)"/><text x="1110.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="420" width="4" height="15" fill="rgb(226,81,35)"/><text x="1110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="436" width="4" height="15" fill="rgb(229,154,33)"/><text x="1110.00" y="446.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1107" y="452" width="4" height="15" fill="rgb(245,219,49)"/><text x="1110.00" y="462.50"></text></g><g><title>0x7f40d1109965 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1111" y="356" width="4" height="15" fill="rgb(241,178,19)"/><text x="1114.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1111" y="340" width="8" height="15" fill="rgb(240,197,6)"/><text x="1114.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1115" y="356" width="4" height="15" fill="rgb(220,28,17)"/><text x="1118.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(232,168,27)"/><text x="1118.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1119" y="356" width="4" height="15" fill="rgb(243,114,34)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1119" y="372" width="4" height="15" fill="rgb(231,88,12)"/><text x="1122.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1119" y="388" width="4" height="15" fill="rgb(205,73,0)"/><text x="1122.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="452" width="5" height="15" fill="rgb(224,135,0)"/><text x="1126.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="468" width="5" height="15" fill="rgb(246,32,19)"/><text x="1126.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="484" width="5" height="15" fill="rgb(205,211,46)"/><text x="1126.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="500" width="5" height="15" fill="rgb(233,155,5)"/><text x="1126.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1123" y="516" width="5" height="15" fill="rgb(212,195,28)"/><text x="1126.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1123" y="532" width="5" height="15" fill="rgb(220,23,22)"/><text x="1126.00" y="542.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.05%)</title><rect x="1119" y="340" width="13" height="15" fill="rgb(240,161,44)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="356" width="9" height="15" fill="rgb(235,65,3)"/><text x="1126.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="372" width="9" height="15" fill="rgb(235,171,32)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="388" width="9" height="15" fill="rgb(219,129,19)"/><text x="1126.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="404" width="9" height="15" fill="rgb(209,122,18)"/><text x="1126.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="420" width="9" height="15" fill="rgb(223,30,37)"/><text x="1126.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="436" width="9" height="15" fill="rgb(242,192,5)"/><text x="1126.00" y="446.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1128" y="452" width="4" height="15" fill="rgb(220,212,32)"/><text x="1131.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.20%)</title><rect x="1090" y="260" width="50" height="15" fill="rgb(220,32,21)"/><text x="1093.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.20%)</title><rect x="1090" y="276" width="50" height="15" fill="rgb(235,86,36)"/><text x="1093.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.50%)</title><rect x="1099" y="292" width="41" height="15" fill="rgb(211,158,36)"/><text x="1102.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.50%)</title><rect x="1099" y="308" width="41" height="15" fill="rgb(213,156,2)"/><text x="1102.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.15%)</title><rect x="1103" y="324" width="37" height="15" fill="rgb(241,170,47)"/><text x="1106.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1132" y="340" width="8" height="15" fill="rgb(212,23,41)"/><text x="1135.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="356" width="4" height="15" fill="rgb(239,219,12)"/><text x="1139.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="372" width="4" height="15" fill="rgb(246,87,44)"/><text x="1139.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="388" width="4" height="15" fill="rgb(219,82,48)"/><text x="1139.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="404" width="4" height="15" fill="rgb(205,91,45)"/><text x="1139.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="420" width="4" height="15" fill="rgb(237,215,15)"/><text x="1139.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1140" y="260" width="8" height="15" fill="rgb(207,143,12)"/><text x="1143.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1144" y="276" width="4" height="15" fill="rgb(250,206,34)"/><text x="1147.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1148" y="260" width="8" height="15" fill="rgb(229,8,31)"/><text x="1151.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (2 samples, 0.70%)</title><rect x="1156" y="260" width="9" height="15" fill="rgb(248,38,51)"/><text x="1159.00" y="270.50"></text></g><g><title>0x7f40c0bd6130 (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1161" y="276" width="4" height="15" fill="rgb(231,25,52)"/><text x="1164.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 8.39%)</title><rect x="1070" y="244" width="99" height="15" fill="rgb(229,181,22)"/><text x="1073.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="260" width="4" height="15" fill="rgb(239,168,46)"/><text x="1168.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="276" width="4" height="15" fill="rgb(227,92,27)"/><text x="1168.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="292" width="4" height="15" fill="rgb(218,162,51)"/><text x="1168.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="308" width="4" height="15" fill="rgb(228,179,27)"/><text x="1168.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="324" width="4" height="15" fill="rgb(251,150,31)"/><text x="1168.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="340" width="4" height="15" fill="rgb(232,54,17)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="356" width="4" height="15" fill="rgb(234,189,22)"/><text x="1168.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="372" width="4" height="15" fill="rgb(234,146,13)"/><text x="1168.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="388" width="4" height="15" fill="rgb(237,120,18)"/><text x="1168.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1165" y="404" width="4" height="15" fill="rgb(218,57,25)"/><text x="1168.00" y="414.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (37 samples, 12.94%)</title><rect x="1020" y="164" width="153" height="15" fill="rgb(209,141,6)"/><text x="1023.00" y="174.50">_run_whole_runtime ..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (36 samples, 12.59%)</title><rect x="1024" y="180" width="149" height="15" fill="rgb(207,147,12)"/><text x="1027.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (onnxruntime/capi/session.py:136) (27 samples, 9.44%)</title><rect x="1062" y="196" width="111" height="15" fill="rgb(226,218,32)"/><text x="1065.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 9.09%)</title><rect x="1066" y="212" width="107" height="15" fill="rgb(225,137,40)"/><text x="1069.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 8.74%)</title><rect x="1070" y="228" width="103" height="15" fill="rgb(217,36,52)"/><text x="1073.00" y="238.50">void pybind1..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1169" y="244" width="4" height="15" fill="rgb(227,66,37)"/><text x="1172.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1169" y="260" width="4" height="15" fill="rgb(242,218,4)"/><text x="1172.00" y="270.50"></text></g><g><title>all (286 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(238,216,39)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:52) (46 samples, 16.08%)</title><rect x="1000" y="52" width="190" height="15" fill="rgb(217,117,48)"/><text x="1003.00" y="62.50">&lt;module&gt; (bench_Logistic..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:51) (46 samples, 16.08%)</title><rect x="1000" y="68" width="190" height="15" fill="rgb(213,138,48)"/><text x="1003.00" y="78.50">profile_ort (bench_Logis..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:29) (46 samples, 16.08%)</title><rect x="1000" y="84" width="190" height="15" fill="rgb(207,157,35)"/><text x="1003.00" y="94.50">setup_profile (bench_Log..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_4_12_float_.py:23) (45 samples, 15.73%)</title><rect x="1004" y="100" width="186" height="15" fill="rgb(222,76,31)"/><text x="1007.00" y="110.50">profile (bench_LogisticR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (44 samples, 15.38%)</title><rect x="1008" y="116" width="182" height="15" fill="rgb(220,120,5)"/><text x="1011.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (42 samples, 14.69%)</title><rect x="1016" y="132" width="174" height="15" fill="rgb(235,133,33)"/><text x="1019.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (41 samples, 14.34%)</title><rect x="1020" y="148" width="170" height="15" fill="rgb(210,99,24)"/><text x="1023.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.40%)</title><rect x="1173" y="164" width="17" height="15" fill="rgb(218,85,10)"/><text x="1176.00" y="174.50"></text></g><g><title>0x7f40d112a124 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(205,114,37)"/><text x="1188.00" y="190.50"></text></g></g></svg>