<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:31) (1 samples, 0.36%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(212,212,9)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:11) (1 samples, 0.36%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(218,81,45)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:39) (1 samples, 0.36%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(240,152,45)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.36%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(209,214,50)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:85) (1 samples, 0.36%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(230,186,13)"/><text x="13.00" y="126.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.36%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(222,228,11)"/><text x="13.00" y="142.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.36%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(205,62,45)"/><text x="13.00" y="158.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.36%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(235,132,17)"/><text x="13.00" y="174.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.36%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(234,36,36)"/><text x="13.00" y="190.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.36%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(243,28,35)"/><text x="13.00" y="206.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.36%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(217,15,15)"/><text x="13.00" y="222.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.36%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(219,219,44)"/><text x="13.00" y="238.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.36%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(231,153,32)"/><text x="13.00" y="254.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:18) (2 samples, 0.72%)</title><rect x="14" y="100" width="8" height="15" fill="rgb(227,110,53)"/><text x="17.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.72%)</title><rect x="14" y="116" width="8" height="15" fill="rgb(249,86,40)"/><text x="17.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (2 samples, 0.72%)</title><rect x="14" y="132" width="8" height="15" fill="rgb(239,60,17)"/><text x="17.00" y="142.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (2 samples, 0.72%)</title><rect x="14" y="148" width="8" height="15" fill="rgb(213,164,54)"/><text x="17.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.36%)</title><rect x="18" y="164" width="4" height="15" fill="rgb(247,55,23)"/><text x="21.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.36%)</title><rect x="18" y="180" width="4" height="15" fill="rgb(247,113,44)"/><text x="21.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.36%)</title><rect x="18" y="196" width="4" height="15" fill="rgb(223,158,23)"/><text x="21.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="31" y="116" width="4" height="15" fill="rgb(227,120,33)"/><text x="34.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="31" y="132" width="4" height="15" fill="rgb(252,118,46)"/><text x="34.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.36%)</title><rect x="31" y="148" width="4" height="15" fill="rgb(229,53,23)"/><text x="34.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.72%)</title><rect x="56" y="164" width="8" height="15" fill="rgb(213,23,11)"/><text x="59.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.72%)</title><rect x="56" y="180" width="8" height="15" fill="rgb(231,91,22)"/><text x="59.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.72%)</title><rect x="64" y="164" width="9" height="15" fill="rgb(224,93,47)"/><text x="67.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.36%)</title><rect x="77" y="180" width="4" height="15" fill="rgb(244,39,39)"/><text x="80.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.43%)</title><rect x="103" y="196" width="16" height="15" fill="rgb(217,148,52)"/><text x="106.00" y="206.50"></text></g><g><title>0x7f97c5a36130 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="115" y="212" width="4" height="15" fill="rgb(225,214,7)"/><text x="118.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (21 samples, 7.53%)</title><rect x="43" y="148" width="89" height="15" fill="rgb(253,139,8)"/><text x="46.00" y="158.50">decision_f..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 5.02%)</title><rect x="73" y="164" width="59" height="15" fill="rgb(238,179,4)"/><text x="76.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 4.30%)</title><rect x="81" y="180" width="51" height="15" fill="rgb(239,6,30)"/><text x="84.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.08%)</title><rect x="119" y="196" width="13" height="15" fill="rgb(235,86,24)"/><text x="122.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.36%)</title><rect x="145" y="164" width="4" height="15" fill="rgb(247,98,40)"/><text x="148.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.72%)</title><rect x="149" y="164" width="9" height="15" fill="rgb(243,18,44)"/><text x="152.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.36%)</title><rect x="158" y="164" width="4" height="15" fill="rgb(234,186,24)"/><text x="161.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (3 samples, 1.08%)</title><rect x="162" y="164" width="12" height="15" fill="rgb(227,157,32)"/><text x="165.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.36%)</title><rect x="174" y="164" width="5" height="15" fill="rgb(236,96,54)"/><text x="177.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.36%)</title><rect x="191" y="180" width="5" height="15" fill="rgb(235,35,5)"/><text x="194.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.72%)</title><rect x="196" y="180" width="8" height="15" fill="rgb(220,49,3)"/><text x="199.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.36%)</title><rect x="204" y="180" width="4" height="15" fill="rgb(228,18,8)"/><text x="207.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 2.87%)</title><rect x="179" y="164" width="34" height="15" fill="rgb(210,58,47)"/><text x="182.00" y="174.50">ch..</text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.36%)</title><rect x="208" y="180" width="5" height="15" fill="rgb(241,177,9)"/><text x="211.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (7 samples, 2.51%)</title><rect x="217" y="196" width="29" height="15" fill="rgb(217,149,30)"/><text x="220.00" y="206.50">_a..</text></g><g><title>check_array (sklearn/utils/validation.py:504) (11 samples, 3.94%)</title><rect x="213" y="164" width="46" height="15" fill="rgb(219,173,2)"/><text x="216.00" y="174.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (10 samples, 3.58%)</title><rect x="217" y="180" width="42" height="15" fill="rgb(210,227,49)"/><text x="220.00" y="190.50">sim..</text></g><g><title>_add_filter (warnings.py:189) (3 samples, 1.08%)</title><rect x="246" y="196" width="13" height="15" fill="rgb(233,46,19)"/><text x="249.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.08%)</title><rect x="259" y="164" width="13" height="15" fill="rgb(236,60,26)"/><text x="262.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.72%)</title><rect x="263" y="180" width="9" height="15" fill="rgb(222,91,45)"/><text x="266.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.36%)</title><rect x="280" y="180" width="4" height="15" fill="rgb(253,169,21)"/><text x="283.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.43%)</title><rect x="272" y="164" width="17" height="15" fill="rgb(242,128,52)"/><text x="275.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.36%)</title><rect x="284" y="180" width="5" height="15" fill="rgb(230,100,22)"/><text x="287.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.72%)</title><rect x="289" y="164" width="8" height="15" fill="rgb(219,199,28)"/><text x="292.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.72%)</title><rect x="289" y="180" width="8" height="15" fill="rgb(254,98,38)"/><text x="292.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.36%)</title><rect x="297" y="164" width="4" height="15" fill="rgb(224,1,39)"/><text x="300.00" y="174.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.36%)</title><rect x="314" y="196" width="4" height="15" fill="rgb(216,14,46)"/><text x="317.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:329) (1 samples, 0.36%)</title><rect x="318" y="196" width="4" height="15" fill="rgb(245,154,4)"/><text x="321.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 1.08%)</title><rect x="314" y="180" width="13" height="15" fill="rgb(231,195,23)"/><text x="317.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.36%)</title><rect x="322" y="196" width="5" height="15" fill="rgb(238,71,44)"/><text x="325.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.36%)</title><rect x="327" y="180" width="4" height="15" fill="rgb(234,26,10)"/><text x="330.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.36%)</title><rect x="327" y="196" width="4" height="15" fill="rgb(239,131,51)"/><text x="330.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (8 samples, 2.87%)</title><rect x="301" y="164" width="34" height="15" fill="rgb(209,127,11)"/><text x="304.00" y="174.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.36%)</title><rect x="331" y="180" width="4" height="15" fill="rgb(217,37,44)"/><text x="334.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.36%)</title><rect x="335" y="164" width="4" height="15" fill="rgb(208,141,34)"/><text x="338.00" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.72%)</title><rect x="369" y="196" width="8" height="15" fill="rgb(225,79,12)"/><text x="372.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.36%)</title><rect x="377" y="196" width="5" height="15" fill="rgb(224,114,10)"/><text x="380.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.72%)</title><rect x="382" y="196" width="8" height="15" fill="rgb(250,167,21)"/><text x="385.00" y="206.50"></text></g><g><title>0x7f97c59696d0 (libc-2.29.so) (2 samples, 0.72%)</title><rect x="382" y="212" width="8" height="15" fill="rgb(236,136,11)"/><text x="385.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 4.30%)</title><rect x="344" y="180" width="50" height="15" fill="rgb(218,181,14)"/><text x="347.00" y="190.50">_asse..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.36%)</title><rect x="390" y="196" width="4" height="15" fill="rgb(217,47,13)"/><text x="393.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (15 samples, 5.38%)</title><rect x="339" y="164" width="64" height="15" fill="rgb(208,61,14)"/><text x="342.00" y="174.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.72%)</title><rect x="394" y="180" width="9" height="15" fill="rgb(250,57,36)"/><text x="397.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (7 samples, 2.51%)</title><rect x="403" y="180" width="29" height="15" fill="rgb(215,73,33)"/><text x="406.00" y="190.50">_n..</text></g><g><title>0x7f97c5a36151 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="428" y="196" width="4" height="15" fill="rgb(237,52,19)"/><text x="431.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.36%)</title><rect x="432" y="180" width="5" height="15" fill="rgb(250,225,24)"/><text x="435.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.36%)</title><rect x="437" y="180" width="4" height="15" fill="rgb(252,200,47)"/><text x="440.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.36%)</title><rect x="441" y="180" width="4" height="15" fill="rgb(206,17,18)"/><text x="444.00" y="190.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.36%)</title><rect x="441" y="196" width="4" height="15" fill="rgb(254,82,19)"/><text x="444.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (80 samples, 28.67%)</title><rect x="132" y="148" width="339" height="15" fill="rgb(226,166,18)"/><text x="135.00" y="158.50">decision_function (sklearn/linear_model/_base..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (16 samples, 5.73%)</title><rect x="403" y="164" width="68" height="15" fill="rgb(237,106,37)"/><text x="406.00" y="174.50">check_a..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.15%)</title><rect x="445" y="180" width="26" height="15" fill="rgb(233,144,45)"/><text x="448.00" y="190.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.79%)</title><rect x="449" y="196" width="22" height="15" fill="rgb(212,184,0)"/><text x="452.00" y="206.50">_..</text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.72%)</title><rect x="462" y="212" width="9" height="15" fill="rgb(206,178,41)"/><text x="465.00" y="222.50"></text></g><g><title>array_add (number.c:325) (1 samples, 0.36%)</title><rect x="475" y="164" width="4" height="15" fill="rgb(250,200,36)"/><text x="478.00" y="174.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.36%)</title><rect x="479" y="212" width="4" height="15" fill="rgb(206,151,32)"/><text x="482.00" y="222.50"></text></g><g><title>0x7f97c5979120 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="479" y="228" width="4" height="15" fill="rgb(237,29,30)"/><text x="482.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.72%)</title><rect x="479" y="196" width="8" height="15" fill="rgb(213,149,39)"/><text x="482.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.36%)</title><rect x="483" y="212" width="4" height="15" fill="rgb(244,142,0)"/><text x="486.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.36%)</title><rect x="487" y="228" width="5" height="15" fill="rgb(217,45,39)"/><text x="490.00" y="238.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.36%)</title><rect x="487" y="244" width="5" height="15" fill="rgb(207,180,35)"/><text x="490.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.36%)</title><rect x="492" y="228" width="4" height="15" fill="rgb(205,167,27)"/><text x="495.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.36%)</title><rect x="492" y="244" width="4" height="15" fill="rgb(205,7,43)"/><text x="495.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.36%)</title><rect x="492" y="260" width="4" height="15" fill="rgb(242,31,46)"/><text x="495.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.08%)</title><rect x="487" y="196" width="13" height="15" fill="rgb(250,138,7)"/><text x="490.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.08%)</title><rect x="487" y="212" width="13" height="15" fill="rgb(215,31,44)"/><text x="490.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1587) (1 samples, 0.36%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(211,216,21)"/><text x="499.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.15%)</title><rect x="479" y="180" width="25" height="15" fill="rgb(220,5,10)"/><text x="482.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.36%)</title><rect x="500" y="196" width="4" height="15" fill="rgb(224,201,51)"/><text x="503.00" y="206.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.36%)</title><rect x="500" y="212" width="4" height="15" fill="rgb(222,104,24)"/><text x="503.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.36%)</title><rect x="500" y="228" width="4" height="15" fill="rgb(208,122,19)"/><text x="503.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.36%)</title><rect x="504" y="180" width="5" height="15" fill="rgb(220,97,20)"/><text x="507.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.36%)</title><rect x="504" y="196" width="5" height="15" fill="rgb(218,133,30)"/><text x="507.00" y="206.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.36%)</title><rect x="504" y="212" width="5" height="15" fill="rgb(246,224,16)"/><text x="507.00" y="222.50"></text></g><g><title>array_add (number.c:330) (8 samples, 2.87%)</title><rect x="479" y="164" width="34" height="15" fill="rgb(211,29,43)"/><text x="482.00" y="174.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.36%)</title><rect x="509" y="180" width="4" height="15" fill="rgb(217,134,24)"/><text x="512.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="513" y="164" width="4" height="15" fill="rgb(239,108,31)"/><text x="516.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="513" y="180" width="4" height="15" fill="rgb(252,92,11)"/><text x="516.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.36%)</title><rect x="513" y="196" width="4" height="15" fill="rgb(227,50,13)"/><text x="516.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.36%)</title><rect x="517" y="180" width="4" height="15" fill="rgb(207,220,13)"/><text x="520.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.36%)</title><rect x="517" y="196" width="4" height="15" fill="rgb(222,31,45)"/><text x="520.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.36%)</title><rect x="517" y="212" width="4" height="15" fill="rgb(206,222,6)"/><text x="520.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.36%)</title><rect x="517" y="228" width="4" height="15" fill="rgb(222,143,12)"/><text x="520.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.36%)</title><rect x="521" y="212" width="4" height="15" fill="rgb(226,224,51)"/><text x="524.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.36%)</title><rect x="521" y="228" width="4" height="15" fill="rgb(218,13,51)"/><text x="524.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.36%)</title><rect x="525" y="244" width="5" height="15" fill="rgb(214,82,17)"/><text x="528.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.36%)</title><rect x="525" y="260" width="5" height="15" fill="rgb(252,205,26)"/><text x="528.00" y="270.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.36%)</title><rect x="525" y="276" width="5" height="15" fill="rgb(208,115,46)"/><text x="528.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.72%)</title><rect x="525" y="212" width="9" height="15" fill="rgb(235,148,54)"/><text x="528.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.72%)</title><rect x="525" y="228" width="9" height="15" fill="rgb(240,44,25)"/><text x="528.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.36%)</title><rect x="530" y="244" width="4" height="15" fill="rgb(249,20,23)"/><text x="533.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.36%)</title><rect x="534" y="212" width="4" height="15" fill="rgb(229,83,39)"/><text x="537.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.36%)</title><rect x="534" y="228" width="4" height="15" fill="rgb(218,13,45)"/><text x="537.00" y="238.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.36%)</title><rect x="538" y="276" width="4" height="15" fill="rgb(224,199,25)"/><text x="541.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="538" y="292" width="4" height="15" fill="rgb(229,37,10)"/><text x="541.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.36%)</title><rect x="542" y="276" width="5" height="15" fill="rgb(224,214,42)"/><text x="545.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.36%)</title><rect x="542" y="292" width="5" height="15" fill="rgb(233,167,23)"/><text x="545.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.72%)</title><rect x="547" y="276" width="8" height="15" fill="rgb(225,73,48)"/><text x="550.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="551" y="292" width="4" height="15" fill="rgb(224,46,25)"/><text x="554.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 1.79%)</title><rect x="538" y="212" width="21" height="15" fill="rgb(244,160,52)"/><text x="541.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 1.79%)</title><rect x="538" y="228" width="21" height="15" fill="rgb(238,55,7)"/><text x="541.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (5 samples, 1.79%)</title><rect x="538" y="244" width="21" height="15" fill="rgb(253,172,50)"/><text x="541.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 1.79%)</title><rect x="538" y="260" width="21" height="15" fill="rgb(208,189,46)"/><text x="541.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.36%)</title><rect x="555" y="276" width="4" height="15" fill="rgb(205,214,54)"/><text x="558.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4039) (1 samples, 0.36%)</title><rect x="555" y="292" width="4" height="15" fill="rgb(219,93,2)"/><text x="558.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.36%)</title><rect x="559" y="212" width="5" height="15" fill="rgb(254,93,52)"/><text x="562.00" y="222.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.36%)</title><rect x="559" y="228" width="5" height="15" fill="rgb(249,66,40)"/><text x="562.00" y="238.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1632) (1 samples, 0.36%)</title><rect x="559" y="244" width="5" height="15" fill="rgb(227,143,18)"/><text x="562.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 1.08%)</title><rect x="564" y="212" width="12" height="15" fill="rgb(247,220,10)"/><text x="567.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (3 samples, 1.08%)</title><rect x="564" y="228" width="12" height="15" fill="rgb(233,220,28)"/><text x="567.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (3 samples, 1.08%)</title><rect x="564" y="244" width="12" height="15" fill="rgb(239,119,7)"/><text x="567.00" y="254.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.08%)</title><rect x="564" y="260" width="12" height="15" fill="rgb(232,73,22)"/><text x="567.00" y="270.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.72%)</title><rect x="568" y="276" width="8" height="15" fill="rgb(223,103,32)"/><text x="571.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.36%)</title><rect x="576" y="212" width="4" height="15" fill="rgb(221,77,11)"/><text x="579.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.36%)</title><rect x="580" y="276" width="5" height="15" fill="rgb(238,119,33)"/><text x="583.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.36%)</title><rect x="585" y="276" width="4" height="15" fill="rgb(248,176,0)"/><text x="588.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (18 samples, 6.45%)</title><rect x="517" y="164" width="76" height="15" fill="rgb(216,77,11)"/><text x="520.00" y="174.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 6.09%)</title><rect x="521" y="180" width="72" height="15" fill="rgb(236,36,30)"/><text x="524.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 6.09%)</title><rect x="521" y="196" width="72" height="15" fill="rgb(250,209,54)"/><text x="524.00" y="206.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (3 samples, 1.08%)</title><rect x="580" y="212" width="13" height="15" fill="rgb(224,90,46)"/><text x="583.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (3 samples, 1.08%)</title><rect x="580" y="228" width="13" height="15" fill="rgb(230,152,19)"/><text x="583.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.08%)</title><rect x="580" y="244" width="13" height="15" fill="rgb(251,93,5)"/><text x="583.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.08%)</title><rect x="580" y="260" width="13" height="15" fill="rgb(244,146,54)"/><text x="583.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.36%)</title><rect x="589" y="276" width="4" height="15" fill="rgb(231,207,38)"/><text x="592.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (34 samples, 12.19%)</title><rect x="471" y="148" width="143" height="15" fill="rgb(234,72,36)"/><text x="474.00" y="158.50">decision_function ..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (5 samples, 1.79%)</title><rect x="593" y="164" width="21" height="15" fill="rgb(246,8,54)"/><text x="596.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.72%)</title><rect x="606" y="180" width="8" height="15" fill="rgb(225,191,54)"/><text x="609.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:38) (143 samples, 51.25%)</title><rect x="14" y="52" width="605" height="15" fill="rgb(217,31,36)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_f..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:37) (143 samples, 51.25%)</title><rect x="14" y="68" width="605" height="15" fill="rgb(239,87,10)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (143 samples, 51.25%)</title><rect x="14" y="84" width="605" height="15" fill="rgb(239,118,0)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (141 samples, 50.54%)</title><rect x="22" y="100" width="597" height="15" fill="rgb(209,90,27)"/><text x="25.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 49.46%)</title><rect x="35" y="116" width="584" height="15" fill="rgb(244,167,14)"/><text x="38.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (136 samples, 48.75%)</title><rect x="43" y="132" width="576" height="15" fill="rgb(207,47,31)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.36%)</title><rect x="614" y="148" width="5" height="15" fill="rgb(208,3,35)"/><text x="617.00" y="158.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:1) (1 samples, 0.36%)</title><rect x="619" y="148" width="4" height="15" fill="rgb(220,57,22)"/><text x="622.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="619" y="164" width="4" height="15" fill="rgb(221,187,49)"/><text x="622.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="619" y="180" width="4" height="15" fill="rgb(217,202,6)"/><text x="622.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="619" y="196" width="4" height="15" fill="rgb(239,163,50)"/><text x="622.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="619" y="212" width="4" height="15" fill="rgb(254,19,36)"/><text x="622.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="619" y="228" width="4" height="15" fill="rgb(225,18,43)"/><text x="622.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.36%)</title><rect x="619" y="244" width="4" height="15" fill="rgb(216,206,42)"/><text x="622.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="619" y="260" width="4" height="15" fill="rgb(242,181,42)"/><text x="622.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="619" y="276" width="4" height="15" fill="rgb(239,221,39)"/><text x="622.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.36%)</title><rect x="619" y="292" width="4" height="15" fill="rgb(215,46,48)"/><text x="622.00" y="302.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.36%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(243,23,46)"/><text x="622.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:2057) (1 samples, 0.36%)</title><rect x="623" y="948" width="4" height="15" fill="rgb(251,28,9)"/><text x="626.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2074) (1 samples, 0.36%)</title><rect x="623" y="964" width="4" height="15" fill="rgb(227,120,14)"/><text x="626.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.36%)</title><rect x="627" y="980" width="4" height="15" fill="rgb(253,204,51)"/><text x="630.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.36%)</title><rect x="627" y="996" width="4" height="15" fill="rgb(224,167,26)"/><text x="630.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.36%)</title><rect x="627" y="1012" width="4" height="15" fill="rgb(246,215,13)"/><text x="630.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.36%)</title><rect x="627" y="1028" width="4" height="15" fill="rgb(217,100,40)"/><text x="630.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.36%)</title><rect x="627" y="1044" width="4" height="15" fill="rgb(210,189,34)"/><text x="630.00" y="1054.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="627" y="1060" width="4" height="15" fill="rgb(218,29,6)"/><text x="630.00" y="1070.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 1.08%)</title><rect x="623" y="916" width="12" height="15" fill="rgb(240,25,27)"/><text x="626.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 1.08%)</title><rect x="623" y="932" width="12" height="15" fill="rgb(232,43,50)"/><text x="626.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.72%)</title><rect x="627" y="948" width="8" height="15" fill="rgb(239,79,21)"/><text x="630.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.72%)</title><rect x="627" y="964" width="8" height="15" fill="rgb(250,15,41)"/><text x="630.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.36%)</title><rect x="631" y="980" width="4" height="15" fill="rgb(228,20,7)"/><text x="634.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.36%)</title><rect x="631" y="996" width="4" height="15" fill="rgb(231,33,11)"/><text x="634.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:155) (1 samples, 0.36%)</title><rect x="631" y="1012" width="4" height="15" fill="rgb(213,53,35)"/><text x="634.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 1.43%)</title><rect x="623" y="852" width="17" height="15" fill="rgb(225,66,30)"/><text x="626.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 1.43%)</title><rect x="623" y="868" width="17" height="15" fill="rgb(223,227,31)"/><text x="626.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 1.43%)</title><rect x="623" y="884" width="17" height="15" fill="rgb(213,193,51)"/><text x="626.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.43%)</title><rect x="623" y="900" width="17" height="15" fill="rgb(240,147,21)"/><text x="626.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.36%)</title><rect x="635" y="916" width="5" height="15" fill="rgb(240,206,54)"/><text x="638.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.36%)</title><rect x="635" y="932" width="5" height="15" fill="rgb(244,73,5)"/><text x="638.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.36%)</title><rect x="635" y="948" width="5" height="15" fill="rgb(230,146,48)"/><text x="638.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.36%)</title><rect x="635" y="964" width="5" height="15" fill="rgb(227,15,7)"/><text x="638.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.36%)</title><rect x="640" y="948" width="4" height="15" fill="rgb(229,71,53)"/><text x="643.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.36%)</title><rect x="640" y="964" width="4" height="15" fill="rgb(218,122,13)"/><text x="643.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.36%)</title><rect x="640" y="980" width="4" height="15" fill="rgb(250,103,7)"/><text x="643.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.72%)</title><rect x="640" y="884" width="8" height="15" fill="rgb(211,121,11)"/><text x="643.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.72%)</title><rect x="640" y="900" width="8" height="15" fill="rgb(218,229,6)"/><text x="643.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.72%)</title><rect x="640" y="916" width="8" height="15" fill="rgb(225,190,42)"/><text x="643.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.72%)</title><rect x="640" y="932" width="8" height="15" fill="rgb(217,95,29)"/><text x="643.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:32) (1 samples, 0.36%)</title><rect x="644" y="948" width="4" height="15" fill="rgb(249,108,3)"/><text x="647.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 2.51%)</title><rect x="623" y="820" width="29" height="15" fill="rgb(239,184,47)"/><text x="626.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 2.51%)</title><rect x="623" y="836" width="29" height="15" fill="rgb(253,3,9)"/><text x="626.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.08%)</title><rect x="640" y="852" width="12" height="15" fill="rgb(229,90,5)"/><text x="643.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.08%)</title><rect x="640" y="868" width="12" height="15" fill="rgb(215,24,32)"/><text x="643.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.36%)</title><rect x="648" y="884" width="4" height="15" fill="rgb(209,229,22)"/><text x="651.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.36%)</title><rect x="648" y="900" width="4" height="15" fill="rgb(247,229,21)"/><text x="651.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.36%)</title><rect x="648" y="916" width="4" height="15" fill="rgb(254,140,26)"/><text x="651.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.36%)</title><rect x="648" y="932" width="4" height="15" fill="rgb(254,114,22)"/><text x="651.00" y="942.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2768) (1 samples, 0.36%)</title><rect x="648" y="948" width="4" height="15" fill="rgb(243,201,28)"/><text x="651.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.36%)</title><rect x="652" y="916" width="5" height="15" fill="rgb(237,11,12)"/><text x="655.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.36%)</title><rect x="652" y="932" width="5" height="15" fill="rgb(219,60,33)"/><text x="655.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.36%)</title><rect x="652" y="948" width="5" height="15" fill="rgb(207,75,2)"/><text x="655.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="652" y="964" width="5" height="15" fill="rgb(241,105,25)"/><text x="655.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.36%)</title><rect x="652" y="980" width="5" height="15" fill="rgb(245,202,0)"/><text x="655.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.36%)</title><rect x="652" y="996" width="5" height="15" fill="rgb(225,222,1)"/><text x="655.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="652" y="1012" width="5" height="15" fill="rgb(238,169,43)"/><text x="655.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="652" y="1028" width="5" height="15" fill="rgb(223,187,17)"/><text x="655.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="652" y="1044" width="5" height="15" fill="rgb(218,226,50)"/><text x="655.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="652" y="1060" width="5" height="15" fill="rgb(224,96,8)"/><text x="655.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="652" y="1076" width="5" height="15" fill="rgb(208,177,2)"/><text x="655.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.36%)</title><rect x="652" y="1092" width="5" height="15" fill="rgb(233,73,31)"/><text x="655.00" y="1102.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.36%)</title><rect x="652" y="1108" width="5" height="15" fill="rgb(224,15,45)"/><text x="655.00" y="1118.50"></text></g><g><title>__next (sre_parse.py:234) (1 samples, 0.36%)</title><rect x="652" y="1124" width="5" height="15" fill="rgb(241,227,32)"/><text x="655.00" y="1134.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:2) (9 samples, 3.23%)</title><rect x="623" y="148" width="38" height="15" fill="rgb(252,40,34)"/><text x="626.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="164" width="38" height="15" fill="rgb(216,44,50)"/><text x="626.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 3.23%)</title><rect x="623" y="180" width="38" height="15" fill="rgb(238,159,16)"/><text x="626.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="196" width="38" height="15" fill="rgb(229,181,6)"/><text x="626.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="212" width="38" height="15" fill="rgb(207,94,14)"/><text x="626.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="228" width="38" height="15" fill="rgb(216,155,42)"/><text x="626.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="244" width="38" height="15" fill="rgb(243,19,22)"/><text x="626.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="260" width="38" height="15" fill="rgb(213,99,26)"/><text x="626.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="276" width="38" height="15" fill="rgb(247,159,13)"/><text x="626.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 3.23%)</title><rect x="623" y="292" width="38" height="15" fill="rgb(222,223,27)"/><text x="626.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="308" width="38" height="15" fill="rgb(227,120,53)"/><text x="626.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="324" width="38" height="15" fill="rgb(239,107,23)"/><text x="626.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="340" width="38" height="15" fill="rgb(245,53,30)"/><text x="626.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="356" width="38" height="15" fill="rgb(222,110,19)"/><text x="626.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="372" width="38" height="15" fill="rgb(237,15,39)"/><text x="626.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 3.23%)</title><rect x="623" y="388" width="38" height="15" fill="rgb(209,198,16)"/><text x="626.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="404" width="38" height="15" fill="rgb(233,167,48)"/><text x="626.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="420" width="38" height="15" fill="rgb(223,8,8)"/><text x="626.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="436" width="38" height="15" fill="rgb(219,136,41)"/><text x="626.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="452" width="38" height="15" fill="rgb(253,169,50)"/><text x="626.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="468" width="38" height="15" fill="rgb(249,155,52)"/><text x="626.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 3.23%)</title><rect x="623" y="484" width="38" height="15" fill="rgb(222,48,13)"/><text x="626.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="500" width="38" height="15" fill="rgb(249,210,18)"/><text x="626.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="516" width="38" height="15" fill="rgb(228,120,16)"/><text x="626.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="532" width="38" height="15" fill="rgb(211,144,52)"/><text x="626.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="548" width="38" height="15" fill="rgb(241,210,20)"/><text x="626.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="564" width="38" height="15" fill="rgb(242,127,4)"/><text x="626.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 3.23%)</title><rect x="623" y="580" width="38" height="15" fill="rgb(216,91,25)"/><text x="626.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="596" width="38" height="15" fill="rgb(213,69,12)"/><text x="626.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 3.23%)</title><rect x="623" y="612" width="38" height="15" fill="rgb(220,223,46)"/><text x="626.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="628" width="38" height="15" fill="rgb(216,153,26)"/><text x="626.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="644" width="38" height="15" fill="rgb(231,64,44)"/><text x="626.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="660" width="38" height="15" fill="rgb(211,201,52)"/><text x="626.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="676" width="38" height="15" fill="rgb(208,118,27)"/><text x="626.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="692" width="38" height="15" fill="rgb(246,84,4)"/><text x="626.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="708" width="38" height="15" fill="rgb(237,49,31)"/><text x="626.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 3.23%)</title><rect x="623" y="724" width="38" height="15" fill="rgb(236,20,22)"/><text x="626.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.23%)</title><rect x="623" y="740" width="38" height="15" fill="rgb(233,167,11)"/><text x="626.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.23%)</title><rect x="623" y="756" width="38" height="15" fill="rgb(221,183,3)"/><text x="626.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.23%)</title><rect x="623" y="772" width="38" height="15" fill="rgb(235,99,0)"/><text x="626.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.23%)</title><rect x="623" y="788" width="38" height="15" fill="rgb(213,142,40)"/><text x="626.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.23%)</title><rect x="623" y="804" width="38" height="15" fill="rgb(228,200,12)"/><text x="626.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (2 samples, 0.72%)</title><rect x="652" y="820" width="9" height="15" fill="rgb(228,142,7)"/><text x="655.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.72%)</title><rect x="652" y="836" width="9" height="15" fill="rgb(228,86,6)"/><text x="655.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.72%)</title><rect x="652" y="852" width="9" height="15" fill="rgb(241,148,49)"/><text x="655.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.72%)</title><rect x="652" y="868" width="9" height="15" fill="rgb(240,11,24)"/><text x="655.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.72%)</title><rect x="652" y="884" width="9" height="15" fill="rgb(235,173,51)"/><text x="655.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.72%)</title><rect x="652" y="900" width="9" height="15" fill="rgb(232,113,52)"/><text x="655.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.36%)</title><rect x="657" y="916" width="4" height="15" fill="rgb(229,59,35)"/><text x="660.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="932" width="4" height="15" fill="rgb(224,25,33)"/><text x="660.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="657" y="948" width="4" height="15" fill="rgb(232,98,3)"/><text x="660.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.36%)</title><rect x="657" y="964" width="4" height="15" fill="rgb(239,172,9)"/><text x="660.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.36%)</title><rect x="657" y="980" width="4" height="15" fill="rgb(213,181,17)"/><text x="660.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.36%)</title><rect x="657" y="996" width="4" height="15" fill="rgb(232,79,16)"/><text x="660.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="1012" width="4" height="15" fill="rgb(237,96,35)"/><text x="660.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="657" y="1028" width="4" height="15" fill="rgb(216,161,48)"/><text x="660.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="657" y="1044" width="4" height="15" fill="rgb(247,118,42)"/><text x="660.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="657" y="1060" width="4" height="15" fill="rgb(243,153,10)"/><text x="660.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="657" y="1076" width="4" height="15" fill="rgb(206,101,29)"/><text x="660.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:1103) (1 samples, 0.36%)</title><rect x="657" y="1092" width="4" height="15" fill="rgb(243,113,1)"/><text x="660.00" y="1102.50"></text></g><g><title>ParserElement (pkg_resources/_vendor/pyparsing.py:1478) (1 samples, 0.36%)</title><rect x="657" y="1108" width="4" height="15" fill="rgb(241,212,8)"/><text x="660.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.36%)</title><rect x="661" y="772" width="4" height="15" fill="rgb(224,197,3)"/><text x="664.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="661" y="788" width="4" height="15" fill="rgb(240,124,30)"/><text x="664.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="661" y="804" width="4" height="15" fill="rgb(229,218,1)"/><text x="664.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="661" y="820" width="4" height="15" fill="rgb(250,56,17)"/><text x="664.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="661" y="836" width="4" height="15" fill="rgb(225,50,49)"/><text x="664.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="661" y="852" width="4" height="15" fill="rgb(234,186,14)"/><text x="664.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:649) (1 samples, 0.36%)</title><rect x="661" y="868" width="4" height="15" fill="rgb(218,176,12)"/><text x="664.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="661" y="884" width="4" height="15" fill="rgb(226,81,54)"/><text x="664.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="661" y="900" width="4" height="15" fill="rgb(236,112,35)"/><text x="664.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="661" y="916" width="4" height="15" fill="rgb(229,214,33)"/><text x="664.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="661" y="932" width="4" height="15" fill="rgb(227,107,11)"/><text x="664.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="661" y="948" width="4" height="15" fill="rgb(220,67,40)"/><text x="664.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/_ellip_harm.py:6) (1 samples, 0.36%)</title><rect x="661" y="964" width="4" height="15" fill="rgb(224,65,31)"/><text x="664.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="661" y="980" width="4" height="15" fill="rgb(207,129,47)"/><text x="664.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="661" y="996" width="4" height="15" fill="rgb(212,192,51)"/><text x="664.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.36%)</title><rect x="661" y="1012" width="4" height="15" fill="rgb(244,144,8)"/><text x="664.00" y="1022.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.36%)</title><rect x="661" y="1028" width="4" height="15" fill="rgb(227,191,54)"/><text x="664.00" y="1038.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.36%)</title><rect x="661" y="1044" width="4" height="15" fill="rgb(232,228,49)"/><text x="664.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="661" y="1060" width="4" height="15" fill="rgb(207,220,24)"/><text x="664.00" y="1070.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1076" width="4" height="15" fill="rgb(251,133,1)"/><text x="664.00" y="1086.50"></text></g><g><title>0x7f97c5be0995 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1092" width="4" height="15" fill="rgb(233,28,42)"/><text x="664.00" y="1102.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1108" width="4" height="15" fill="rgb(230,118,33)"/><text x="664.00" y="1118.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1124" width="4" height="15" fill="rgb(229,194,21)"/><text x="664.00" y="1134.50"></text></g><g><title>0x7f97c5be0258 (libdl-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1140" width="4" height="15" fill="rgb(205,85,18)"/><text x="664.00" y="1150.50"></text></g><g><title>0x7f97c5c2dd7a (ld-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1156" width="4" height="15" fill="rgb(227,188,39)"/><text x="664.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1172" width="4" height="15" fill="rgb(215,131,52)"/><text x="664.00" y="1182.50"></text></g><g><title>0x7f97c5c2e18b (ld-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1188" width="4" height="15" fill="rgb(248,59,47)"/><text x="664.00" y="1198.50"></text></g><g><title>0x7f97c5c23c1a (ld-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1204" width="4" height="15" fill="rgb(213,41,8)"/><text x="664.00" y="1214.50"></text></g><g><title>0x7f97c5c2127b (ld-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1220" width="4" height="15" fill="rgb(234,211,24)"/><text x="664.00" y="1230.50"></text></g><g><title>0x7f97c5c35bd2 (ld-2.29.so) (1 samples, 0.36%)</title><rect x="661" y="1236" width="4" height="15" fill="rgb(211,18,47)"/><text x="664.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.36%)</title><rect x="665" y="900" width="4" height="15" fill="rgb(247,141,9)"/><text x="668.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="665" y="916" width="4" height="15" fill="rgb(221,86,41)"/><text x="668.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="665" y="932" width="4" height="15" fill="rgb(235,130,36)"/><text x="668.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="665" y="948" width="4" height="15" fill="rgb(253,195,43)"/><text x="668.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="665" y="964" width="4" height="15" fill="rgb(216,225,1)"/><text x="668.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="980" width="4" height="15" fill="rgb(239,4,13)"/><text x="668.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.36%)</title><rect x="665" y="996" width="4" height="15" fill="rgb(223,111,32)"/><text x="668.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="665" y="1012" width="4" height="15" fill="rgb(241,0,41)"/><text x="668.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="1028" width="4" height="15" fill="rgb(214,43,40)"/><text x="668.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="665" y="1044" width="4" height="15" fill="rgb(251,56,52)"/><text x="668.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="665" y="1060" width="4" height="15" fill="rgb(211,199,54)"/><text x="668.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="665" y="1076" width="4" height="15" fill="rgb(243,2,11)"/><text x="668.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="665" y="1092" width="4" height="15" fill="rgb(234,101,2)"/><text x="668.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="1108" width="4" height="15" fill="rgb(244,99,26)"/><text x="668.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.36%)</title><rect x="665" y="1124" width="4" height="15" fill="rgb(244,89,34)"/><text x="668.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="665" y="1140" width="4" height="15" fill="rgb(216,104,30)"/><text x="668.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="665" y="1156" width="4" height="15" fill="rgb(245,126,13)"/><text x="668.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="665" y="1172" width="4" height="15" fill="rgb(214,160,16)"/><text x="668.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="665" y="1188" width="4" height="15" fill="rgb(240,50,25)"/><text x="668.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="1204" width="4" height="15" fill="rgb(205,204,39)"/><text x="668.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.36%)</title><rect x="665" y="1220" width="4" height="15" fill="rgb(226,173,20)"/><text x="668.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="665" y="1236" width="4" height="15" fill="rgb(234,98,38)"/><text x="668.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="665" y="1252" width="4" height="15" fill="rgb(216,42,36)"/><text x="668.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="665" y="1268" width="4" height="15" fill="rgb(250,163,21)"/><text x="668.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="665" y="1284" width="4" height="15" fill="rgb(220,1,52)"/><text x="668.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="1300" width="4" height="15" fill="rgb(238,109,26)"/><text x="668.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:5) (1 samples, 0.36%)</title><rect x="665" y="1316" width="4" height="15" fill="rgb(214,142,44)"/><text x="668.00" y="1326.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="665" y="1332" width="4" height="15" fill="rgb(245,207,44)"/><text x="668.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="665" y="1348" width="4" height="15" fill="rgb(237,147,29)"/><text x="668.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="665" y="1364" width="4" height="15" fill="rgb(207,145,53)"/><text x="668.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.36%)</title><rect x="665" y="1380" width="4" height="15" fill="rgb(251,94,14)"/><text x="668.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.36%)</title><rect x="665" y="1396" width="4" height="15" fill="rgb(233,192,1)"/><text x="668.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.36%)</title><rect x="665" y="1412" width="4" height="15" fill="rgb(209,6,28)"/><text x="668.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.36%)</title><rect x="665" y="1428" width="4" height="15" fill="rgb(222,86,19)"/><text x="668.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.36%)</title><rect x="665" y="1444" width="4" height="15" fill="rgb(206,140,33)"/><text x="668.00" y="1454.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.36%)</title><rect x="665" y="1460" width="4" height="15" fill="rgb(233,132,37)"/><text x="668.00" y="1470.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:598) (1 samples, 0.36%)</title><rect x="665" y="1476" width="4" height="15" fill="rgb(237,120,15)"/><text x="668.00" y="1486.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:4) (3 samples, 1.08%)</title><rect x="661" y="148" width="13" height="15" fill="rgb(228,176,42)"/><text x="664.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="164" width="13" height="15" fill="rgb(247,129,31)"/><text x="664.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.08%)</title><rect x="661" y="180" width="13" height="15" fill="rgb(225,104,53)"/><text x="664.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="196" width="13" height="15" fill="rgb(222,127,0)"/><text x="664.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="212" width="13" height="15" fill="rgb(239,208,23)"/><text x="664.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="228" width="13" height="15" fill="rgb(210,14,11)"/><text x="664.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="244" width="13" height="15" fill="rgb(234,86,8)"/><text x="664.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="260" width="13" height="15" fill="rgb(236,191,34)"/><text x="664.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="276" width="13" height="15" fill="rgb(214,180,44)"/><text x="664.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.08%)</title><rect x="661" y="292" width="13" height="15" fill="rgb(211,219,28)"/><text x="664.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="308" width="13" height="15" fill="rgb(220,75,47)"/><text x="664.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="324" width="13" height="15" fill="rgb(215,92,38)"/><text x="664.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="340" width="13" height="15" fill="rgb(229,5,53)"/><text x="664.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="356" width="13" height="15" fill="rgb(253,218,50)"/><text x="664.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="372" width="13" height="15" fill="rgb(223,105,33)"/><text x="664.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.08%)</title><rect x="661" y="388" width="13" height="15" fill="rgb(250,59,13)"/><text x="664.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="404" width="13" height="15" fill="rgb(241,162,15)"/><text x="664.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="420" width="13" height="15" fill="rgb(247,2,13)"/><text x="664.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="436" width="13" height="15" fill="rgb(215,117,38)"/><text x="664.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="452" width="13" height="15" fill="rgb(228,97,16)"/><text x="664.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="468" width="13" height="15" fill="rgb(252,141,32)"/><text x="664.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 1.08%)</title><rect x="661" y="484" width="13" height="15" fill="rgb(248,159,33)"/><text x="664.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="500" width="13" height="15" fill="rgb(206,218,9)"/><text x="664.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="516" width="13" height="15" fill="rgb(240,219,19)"/><text x="664.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="532" width="13" height="15" fill="rgb(237,25,35)"/><text x="664.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="548" width="13" height="15" fill="rgb(224,220,14)"/><text x="664.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="564" width="13" height="15" fill="rgb(206,207,25)"/><text x="664.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 1.08%)</title><rect x="661" y="580" width="13" height="15" fill="rgb(253,12,5)"/><text x="664.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="596" width="13" height="15" fill="rgb(222,12,53)"/><text x="664.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="612" width="13" height="15" fill="rgb(227,165,33)"/><text x="664.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="628" width="13" height="15" fill="rgb(250,94,25)"/><text x="664.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="644" width="13" height="15" fill="rgb(254,172,6)"/><text x="664.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="660" width="13" height="15" fill="rgb(234,10,35)"/><text x="664.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 1.08%)</title><rect x="661" y="676" width="13" height="15" fill="rgb(206,159,32)"/><text x="664.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="661" y="692" width="13" height="15" fill="rgb(215,70,16)"/><text x="664.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="661" y="708" width="13" height="15" fill="rgb(225,200,47)"/><text x="664.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="661" y="724" width="13" height="15" fill="rgb(215,193,41)"/><text x="664.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="661" y="740" width="13" height="15" fill="rgb(208,209,32)"/><text x="664.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="661" y="756" width="13" height="15" fill="rgb(254,102,35)"/><text x="664.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.72%)</title><rect x="665" y="772" width="9" height="15" fill="rgb(221,74,27)"/><text x="668.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.72%)</title><rect x="665" y="788" width="9" height="15" fill="rgb(223,199,37)"/><text x="668.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.72%)</title><rect x="665" y="804" width="9" height="15" fill="rgb(242,111,2)"/><text x="668.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.72%)</title><rect x="665" y="820" width="9" height="15" fill="rgb(245,107,49)"/><text x="668.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.72%)</title><rect x="665" y="836" width="9" height="15" fill="rgb(248,185,46)"/><text x="668.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.72%)</title><rect x="665" y="852" width="9" height="15" fill="rgb(243,103,33)"/><text x="668.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.72%)</title><rect x="665" y="868" width="9" height="15" fill="rgb(242,204,3)"/><text x="668.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.72%)</title><rect x="665" y="884" width="9" height="15" fill="rgb(215,67,26)"/><text x="668.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.36%)</title><rect x="669" y="900" width="5" height="15" fill="rgb(231,21,30)"/><text x="672.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="669" y="916" width="5" height="15" fill="rgb(226,134,13)"/><text x="672.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="669" y="932" width="5" height="15" fill="rgb(226,183,10)"/><text x="672.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="669" y="948" width="5" height="15" fill="rgb(222,105,14)"/><text x="672.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="669" y="964" width="5" height="15" fill="rgb(210,228,27)"/><text x="672.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="669" y="980" width="5" height="15" fill="rgb(216,4,26)"/><text x="672.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="669" y="996" width="5" height="15" fill="rgb(212,16,7)"/><text x="672.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="669" y="1012" width="5" height="15" fill="rgb(246,225,26)"/><text x="672.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:22) (1 samples, 0.36%)</title><rect x="669" y="1028" width="5" height="15" fill="rgb(246,145,50)"/><text x="672.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="669" y="1044" width="5" height="15" fill="rgb(224,218,52)"/><text x="672.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="669" y="1060" width="5" height="15" fill="rgb(233,65,49)"/><text x="672.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="669" y="1076" width="5" height="15" fill="rgb(210,35,47)"/><text x="672.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="669" y="1092" width="5" height="15" fill="rgb(227,4,34)"/><text x="672.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="669" y="1108" width="5" height="15" fill="rgb(230,133,25)"/><text x="672.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="669" y="1124" width="5" height="15" fill="rgb(212,221,39)"/><text x="672.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="669" y="1140" width="5" height="15" fill="rgb(221,175,46)"/><text x="672.00" y="1150.50"></text></g><g><title>0x7f97a0f64318 (?) (1 samples, 0.36%)</title><rect x="669" y="1156" width="5" height="15" fill="rgb(212,148,36)"/><text x="672.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.36%)</title><rect x="674" y="1492" width="4" height="15" fill="rgb(205,60,29)"/><text x="677.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="674" y="1508" width="4" height="15" fill="rgb(236,98,32)"/><text x="677.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="674" y="1524" width="4" height="15" fill="rgb(224,111,34)"/><text x="677.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="674" y="1540" width="4" height="15" fill="rgb(247,3,21)"/><text x="677.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="674" y="1556" width="4" height="15" fill="rgb(215,53,36)"/><text x="677.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="674" y="1572" width="4" height="15" fill="rgb(243,95,36)"/><text x="677.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="674" y="1588" width="4" height="15" fill="rgb(247,129,25)"/><text x="677.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="674" y="1604" width="4" height="15" fill="rgb(217,99,37)"/><text x="677.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.36%)</title><rect x="674" y="1620" width="4" height="15" fill="rgb(242,155,30)"/><text x="677.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="674" y="1636" width="4" height="15" fill="rgb(254,106,51)"/><text x="677.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="674" y="1652" width="4" height="15" fill="rgb(230,43,25)"/><text x="677.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="674" y="1668" width="4" height="15" fill="rgb(212,115,0)"/><text x="677.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="674" y="1684" width="4" height="15" fill="rgb(239,218,11)"/><text x="677.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="674" y="1700" width="4" height="15" fill="rgb(252,18,17)"/><text x="677.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py:579) (1 samples, 0.36%)</title><rect x="674" y="1716" width="4" height="15" fill="rgb(234,5,35)"/><text x="677.00" y="1726.50"></text></g><g><title>DateFormatter (matplotlib/dates.py:584) (1 samples, 0.36%)</title><rect x="674" y="1732" width="4" height="15" fill="rgb(229,105,37)"/><text x="677.00" y="1742.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.36%)</title><rect x="674" y="1748" width="4" height="15" fill="rgb(208,55,40)"/><text x="677.00" y="1758.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="674" y="1764" width="4" height="15" fill="rgb(246,1,29)"/><text x="677.00" y="1774.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.36%)</title><rect x="674" y="1780" width="4" height="15" fill="rgb(247,193,39)"/><text x="677.00" y="1790.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.36%)</title><rect x="674" y="1796" width="4" height="15" fill="rgb(214,76,11)"/><text x="677.00" y="1806.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="674" y="1812" width="4" height="15" fill="rgb(233,156,49)"/><text x="677.00" y="1822.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="674" y="1828" width="4" height="15" fill="rgb(226,5,52)"/><text x="677.00" y="1838.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="674" y="1844" width="4" height="15" fill="rgb(217,68,2)"/><text x="677.00" y="1854.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="674" y="1860" width="4" height="15" fill="rgb(241,99,44)"/><text x="677.00" y="1870.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="674" y="1876" width="4" height="15" fill="rgb(253,52,45)"/><text x="677.00" y="1886.50"></text></g><g><title>_parse (sre_parse.py:514) (1 samples, 0.36%)</title><rect x="674" y="1892" width="4" height="15" fill="rgb(242,39,35)"/><text x="677.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="678" y="1524" width="4" height="15" fill="rgb(230,117,4)"/><text x="681.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="678" y="1540" width="4" height="15" fill="rgb(209,212,42)"/><text x="681.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="678" y="1556" width="4" height="15" fill="rgb(230,100,44)"/><text x="681.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="678" y="1572" width="4" height="15" fill="rgb(242,21,25)"/><text x="681.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="678" y="1588" width="4" height="15" fill="rgb(213,183,47)"/><text x="681.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="678" y="1604" width="4" height="15" fill="rgb(214,176,44)"/><text x="681.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="678" y="1620" width="4" height="15" fill="rgb(222,124,53)"/><text x="681.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.36%)</title><rect x="678" y="1636" width="4" height="15" fill="rgb(230,227,22)"/><text x="681.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="678" y="1652" width="4" height="15" fill="rgb(234,76,51)"/><text x="681.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="678" y="1668" width="4" height="15" fill="rgb(217,158,40)"/><text x="681.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="678" y="1684" width="4" height="15" fill="rgb(242,36,33)"/><text x="681.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="678" y="1700" width="4" height="15" fill="rgb(225,100,29)"/><text x="681.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="678" y="1716" width="4" height="15" fill="rgb(251,226,8)"/><text x="681.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="678" y="1732" width="4" height="15" fill="rgb(223,172,41)"/><text x="681.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="678" y="1748" width="4" height="15" fill="rgb(229,179,13)"/><text x="681.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.36%)</title><rect x="678" y="1764" width="4" height="15" fill="rgb(237,116,28)"/><text x="681.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="678" y="1780" width="4" height="15" fill="rgb(219,78,53)"/><text x="681.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="678" y="1796" width="4" height="15" fill="rgb(247,11,18)"/><text x="681.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="678" y="1812" width="4" height="15" fill="rgb(215,4,9)"/><text x="681.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="678" y="1828" width="4" height="15" fill="rgb(217,104,28)"/><text x="681.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="678" y="1844" width="4" height="15" fill="rgb(254,24,43)"/><text x="681.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py:442) (1 samples, 0.36%)</title><rect x="678" y="1860" width="4" height="15" fill="rgb(246,74,50)"/><text x="681.00" y="1870.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.08%)</title><rect x="674" y="724" width="12" height="15" fill="rgb(223,111,2)"/><text x="677.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="740" width="12" height="15" fill="rgb(242,229,52)"/><text x="677.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="756" width="12" height="15" fill="rgb(252,61,18)"/><text x="677.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="772" width="12" height="15" fill="rgb(206,101,15)"/><text x="677.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="788" width="12" height="15" fill="rgb(250,68,27)"/><text x="677.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="804" width="12" height="15" fill="rgb(219,70,7)"/><text x="677.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.08%)</title><rect x="674" y="820" width="12" height="15" fill="rgb(209,73,24)"/><text x="677.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="836" width="12" height="15" fill="rgb(213,123,6)"/><text x="677.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="852" width="12" height="15" fill="rgb(228,153,22)"/><text x="677.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="868" width="12" height="15" fill="rgb(241,193,3)"/><text x="677.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="884" width="12" height="15" fill="rgb(232,100,25)"/><text x="677.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="900" width="12" height="15" fill="rgb(209,224,8)"/><text x="677.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.08%)</title><rect x="674" y="916" width="12" height="15" fill="rgb(252,60,22)"/><text x="677.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="932" width="12" height="15" fill="rgb(221,69,53)"/><text x="677.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="948" width="12" height="15" fill="rgb(223,0,54)"/><text x="677.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="964" width="12" height="15" fill="rgb(228,51,11)"/><text x="677.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="980" width="12" height="15" fill="rgb(225,74,51)"/><text x="677.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="996" width="12" height="15" fill="rgb(210,124,11)"/><text x="677.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 1.08%)</title><rect x="674" y="1012" width="12" height="15" fill="rgb(219,36,0)"/><text x="677.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="1028" width="12" height="15" fill="rgb(253,134,26)"/><text x="677.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="1044" width="12" height="15" fill="rgb(206,58,20)"/><text x="677.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="1060" width="12" height="15" fill="rgb(240,28,14)"/><text x="677.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="1076" width="12" height="15" fill="rgb(252,55,53)"/><text x="677.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="1092" width="12" height="15" fill="rgb(254,29,31)"/><text x="677.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 1.08%)</title><rect x="674" y="1108" width="12" height="15" fill="rgb(209,25,31)"/><text x="677.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="1124" width="12" height="15" fill="rgb(233,59,17)"/><text x="677.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="1140" width="12" height="15" fill="rgb(220,200,38)"/><text x="677.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="1156" width="12" height="15" fill="rgb(252,158,54)"/><text x="677.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="1172" width="12" height="15" fill="rgb(212,217,49)"/><text x="677.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="1188" width="12" height="15" fill="rgb(246,147,36)"/><text x="677.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 1.08%)</title><rect x="674" y="1204" width="12" height="15" fill="rgb(247,84,47)"/><text x="677.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="1220" width="12" height="15" fill="rgb(219,56,45)"/><text x="677.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="1236" width="12" height="15" fill="rgb(221,101,54)"/><text x="677.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="1252" width="12" height="15" fill="rgb(252,152,19)"/><text x="677.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="1268" width="12" height="15" fill="rgb(228,155,25)"/><text x="677.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="1284" width="12" height="15" fill="rgb(213,190,40)"/><text x="677.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 1.08%)</title><rect x="674" y="1300" width="12" height="15" fill="rgb(241,157,3)"/><text x="677.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="1316" width="12" height="15" fill="rgb(214,196,52)"/><text x="677.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="1332" width="12" height="15" fill="rgb(217,175,7)"/><text x="677.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="1348" width="12" height="15" fill="rgb(243,1,20)"/><text x="677.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="1364" width="12" height="15" fill="rgb(212,67,18)"/><text x="677.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="1380" width="12" height="15" fill="rgb(238,145,46)"/><text x="677.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 1.08%)</title><rect x="674" y="1396" width="12" height="15" fill="rgb(242,28,31)"/><text x="677.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.08%)</title><rect x="674" y="1412" width="12" height="15" fill="rgb(228,138,36)"/><text x="677.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.08%)</title><rect x="674" y="1428" width="12" height="15" fill="rgb(237,34,7)"/><text x="677.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.08%)</title><rect x="674" y="1444" width="12" height="15" fill="rgb(233,55,46)"/><text x="677.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.08%)</title><rect x="674" y="1460" width="12" height="15" fill="rgb(228,53,53)"/><text x="677.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.08%)</title><rect x="674" y="1476" width="12" height="15" fill="rgb(210,135,46)"/><text x="677.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.72%)</title><rect x="678" y="1492" width="8" height="15" fill="rgb(212,7,42)"/><text x="681.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.72%)</title><rect x="678" y="1508" width="8" height="15" fill="rgb(242,75,48)"/><text x="681.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="682" y="1524" width="4" height="15" fill="rgb(238,100,5)"/><text x="685.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="682" y="1540" width="4" height="15" fill="rgb(213,170,24)"/><text x="685.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="682" y="1556" width="4" height="15" fill="rgb(243,221,17)"/><text x="685.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="682" y="1572" width="4" height="15" fill="rgb(213,44,6)"/><text x="685.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.36%)</title><rect x="682" y="1588" width="4" height="15" fill="rgb(243,82,28)"/><text x="685.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.36%)</title><rect x="682" y="1604" width="4" height="15" fill="rgb(237,62,38)"/><text x="685.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.36%)</title><rect x="682" y="1620" width="4" height="15" fill="rgb(236,190,23)"/><text x="685.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.36%)</title><rect x="682" y="1636" width="4" height="15" fill="rgb(230,9,1)"/><text x="685.00" y="1646.50"></text></g><g><title>search (re.py:183) (1 samples, 0.36%)</title><rect x="682" y="1652" width="4" height="15" fill="rgb(229,207,27)"/><text x="685.00" y="1662.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="682" y="1668" width="4" height="15" fill="rgb(239,148,27)"/><text x="685.00" y="1678.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.36%)</title><rect x="682" y="1684" width="4" height="15" fill="rgb(226,24,20)"/><text x="685.00" y="1694.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.36%)</title><rect x="682" y="1700" width="4" height="15" fill="rgb(219,13,47)"/><text x="685.00" y="1710.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="682" y="1716" width="4" height="15" fill="rgb(230,58,30)"/><text x="685.00" y="1726.50"></text></g><g><title>_parse (sre_parse.py:507) (1 samples, 0.36%)</title><rect x="682" y="1732" width="4" height="15" fill="rgb(251,198,51)"/><text x="685.00" y="1742.50"></text></g><g><title>_escape (sre_parse.py:401) (1 samples, 0.36%)</title><rect x="682" y="1748" width="4" height="15" fill="rgb(236,193,29)"/><text x="685.00" y="1758.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.43%)</title><rect x="674" y="436" width="16" height="15" fill="rgb(211,121,47)"/><text x="677.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="674" y="452" width="16" height="15" fill="rgb(207,100,46)"/><text x="677.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="674" y="468" width="16" height="15" fill="rgb(213,169,13)"/><text x="677.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="674" y="484" width="16" height="15" fill="rgb(230,215,13)"/><text x="677.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="674" y="500" width="16" height="15" fill="rgb(207,220,48)"/><text x="677.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="674" y="516" width="16" height="15" fill="rgb(211,61,31)"/><text x="677.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.43%)</title><rect x="674" y="532" width="16" height="15" fill="rgb(226,30,48)"/><text x="677.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="674" y="548" width="16" height="15" fill="rgb(226,123,36)"/><text x="677.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="674" y="564" width="16" height="15" fill="rgb(245,180,47)"/><text x="677.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="674" y="580" width="16" height="15" fill="rgb(214,36,31)"/><text x="677.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="674" y="596" width="16" height="15" fill="rgb(248,174,53)"/><text x="677.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="674" y="612" width="16" height="15" fill="rgb(217,54,22)"/><text x="677.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.43%)</title><rect x="674" y="628" width="16" height="15" fill="rgb(223,71,31)"/><text x="677.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="674" y="644" width="16" height="15" fill="rgb(227,124,49)"/><text x="677.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="674" y="660" width="16" height="15" fill="rgb(217,98,30)"/><text x="677.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="674" y="676" width="16" height="15" fill="rgb(239,162,54)"/><text x="677.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="674" y="692" width="16" height="15" fill="rgb(231,145,36)"/><text x="677.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="674" y="708" width="16" height="15" fill="rgb(207,86,50)"/><text x="677.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.36%)</title><rect x="686" y="724" width="4" height="15" fill="rgb(240,121,35)"/><text x="689.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="686" y="740" width="4" height="15" fill="rgb(222,62,6)"/><text x="689.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="686" y="756" width="4" height="15" fill="rgb(209,91,38)"/><text x="689.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="686" y="772" width="4" height="15" fill="rgb(236,86,51)"/><text x="689.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="686" y="788" width="4" height="15" fill="rgb(244,211,0)"/><text x="689.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="686" y="804" width="4" height="15" fill="rgb(210,91,53)"/><text x="689.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="686" y="820" width="4" height="15" fill="rgb(228,25,52)"/><text x="689.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="686" y="836" width="4" height="15" fill="rgb(234,119,37)"/><text x="689.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="686" y="852" width="4" height="15" fill="rgb(215,119,33)"/><text x="689.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.36%)</title><rect x="686" y="868" width="4" height="15" fill="rgb(243,223,49)"/><text x="689.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="686" y="884" width="4" height="15" fill="rgb(241,219,4)"/><text x="689.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="686" y="900" width="4" height="15" fill="rgb(234,110,11)"/><text x="689.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="686" y="916" width="4" height="15" fill="rgb(218,163,24)"/><text x="689.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="686" y="932" width="4" height="15" fill="rgb(232,190,6)"/><text x="689.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="686" y="948" width="4" height="15" fill="rgb(232,66,29)"/><text x="689.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:141) (1 samples, 0.36%)</title><rect x="686" y="964" width="4" height="15" fill="rgb(221,94,3)"/><text x="689.00" y="974.50"></text></g><g><title>IntervalArray (pandas/core/arrays/interval.py:958) (1 samples, 0.36%)</title><rect x="686" y="980" width="4" height="15" fill="rgb(241,78,35)"/><text x="689.00" y="990.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.36%)</title><rect x="686" y="996" width="4" height="15" fill="rgb(228,156,11)"/><text x="689.00" y="1006.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.36%)</title><rect x="686" y="1012" width="4" height="15" fill="rgb(240,148,53)"/><text x="689.00" y="1022.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.36%)</title><rect x="686" y="1028" width="4" height="15" fill="rgb(225,141,1)"/><text x="689.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.36%)</title><rect x="686" y="1044" width="4" height="15" fill="rgb(230,102,54)"/><text x="689.00" y="1054.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="686" y="1060" width="4" height="15" fill="rgb(248,172,12)"/><text x="689.00" y="1070.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:4) (18 samples, 6.45%)</title><rect x="619" y="52" width="76" height="15" fill="rgb(223,92,6)"/><text x="622.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 6.45%)</title><rect x="619" y="68" width="76" height="15" fill="rgb(215,156,31)"/><text x="622.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 6.45%)</title><rect x="619" y="84" width="76" height="15" fill="rgb(224,46,9)"/><text x="622.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 6.45%)</title><rect x="619" y="100" width="76" height="15" fill="rgb(205,120,8)"/><text x="622.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 6.45%)</title><rect x="619" y="116" width="76" height="15" fill="rgb(242,126,51)"/><text x="622.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 6.45%)</title><rect x="619" y="132" width="76" height="15" fill="rgb(253,79,3)"/><text x="622.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:7) (5 samples, 1.79%)</title><rect x="674" y="148" width="21" height="15" fill="rgb(231,59,16)"/><text x="677.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="674" y="164" width="21" height="15" fill="rgb(229,81,19)"/><text x="677.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="674" y="180" width="21" height="15" fill="rgb(254,164,34)"/><text x="677.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="674" y="196" width="21" height="15" fill="rgb(229,212,29)"/><text x="677.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="674" y="212" width="21" height="15" fill="rgb(207,211,48)"/><text x="677.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="674" y="228" width="21" height="15" fill="rgb(239,221,12)"/><text x="677.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.79%)</title><rect x="674" y="244" width="21" height="15" fill="rgb(241,69,27)"/><text x="677.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="674" y="260" width="21" height="15" fill="rgb(239,83,13)"/><text x="677.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="674" y="276" width="21" height="15" fill="rgb(213,222,42)"/><text x="677.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="674" y="292" width="21" height="15" fill="rgb(232,216,53)"/><text x="677.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="674" y="308" width="21" height="15" fill="rgb(215,104,54)"/><text x="677.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="674" y="324" width="21" height="15" fill="rgb(254,152,39)"/><text x="677.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.79%)</title><rect x="674" y="340" width="21" height="15" fill="rgb(205,79,3)"/><text x="677.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="674" y="356" width="21" height="15" fill="rgb(238,15,40)"/><text x="677.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="674" y="372" width="21" height="15" fill="rgb(236,196,7)"/><text x="677.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="674" y="388" width="21" height="15" fill="rgb(224,167,14)"/><text x="677.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="674" y="404" width="21" height="15" fill="rgb(237,49,53)"/><text x="677.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="674" y="420" width="21" height="15" fill="rgb(206,23,19)"/><text x="677.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.36%)</title><rect x="690" y="436" width="5" height="15" fill="rgb(250,220,26)"/><text x="693.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="452" width="5" height="15" fill="rgb(245,3,14)"/><text x="693.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="690" y="468" width="5" height="15" fill="rgb(227,0,45)"/><text x="693.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="484" width="5" height="15" fill="rgb(248,178,4)"/><text x="693.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="500" width="5" height="15" fill="rgb(214,85,29)"/><text x="693.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="516" width="5" height="15" fill="rgb(243,205,30)"/><text x="693.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="532" width="5" height="15" fill="rgb(238,187,7)"/><text x="693.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="548" width="5" height="15" fill="rgb(225,49,53)"/><text x="693.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="564" width="5" height="15" fill="rgb(206,46,22)"/><text x="693.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.36%)</title><rect x="690" y="580" width="5" height="15" fill="rgb(212,191,1)"/><text x="693.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="596" width="5" height="15" fill="rgb(208,123,44)"/><text x="693.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="612" width="5" height="15" fill="rgb(233,66,1)"/><text x="693.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="628" width="5" height="15" fill="rgb(230,33,17)"/><text x="693.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="644" width="5" height="15" fill="rgb(243,124,53)"/><text x="693.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="660" width="5" height="15" fill="rgb(248,153,27)"/><text x="693.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.36%)</title><rect x="690" y="676" width="5" height="15" fill="rgb(229,103,11)"/><text x="693.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="692" width="5" height="15" fill="rgb(249,172,36)"/><text x="693.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="708" width="5" height="15" fill="rgb(222,172,20)"/><text x="693.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="724" width="5" height="15" fill="rgb(207,155,40)"/><text x="693.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="740" width="5" height="15" fill="rgb(227,22,20)"/><text x="693.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="756" width="5" height="15" fill="rgb(213,86,41)"/><text x="693.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.36%)</title><rect x="690" y="772" width="5" height="15" fill="rgb(214,110,2)"/><text x="693.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="788" width="5" height="15" fill="rgb(248,99,9)"/><text x="693.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="804" width="5" height="15" fill="rgb(217,89,35)"/><text x="693.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="820" width="5" height="15" fill="rgb(220,112,15)"/><text x="693.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="836" width="5" height="15" fill="rgb(206,64,19)"/><text x="693.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="852" width="5" height="15" fill="rgb(230,103,22)"/><text x="693.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.36%)</title><rect x="690" y="868" width="5" height="15" fill="rgb(221,4,36)"/><text x="693.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="884" width="5" height="15" fill="rgb(227,72,10)"/><text x="693.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="690" y="900" width="5" height="15" fill="rgb(244,35,47)"/><text x="693.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="916" width="5" height="15" fill="rgb(249,165,24)"/><text x="693.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="932" width="5" height="15" fill="rgb(223,69,54)"/><text x="693.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="948" width="5" height="15" fill="rgb(244,40,40)"/><text x="693.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="964" width="5" height="15" fill="rgb(242,12,5)"/><text x="693.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="980" width="5" height="15" fill="rgb(238,105,28)"/><text x="693.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="996" width="5" height="15" fill="rgb(224,114,22)"/><text x="693.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.36%)</title><rect x="690" y="1012" width="5" height="15" fill="rgb(242,105,42)"/><text x="693.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1028" width="5" height="15" fill="rgb(219,165,2)"/><text x="693.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1044" width="5" height="15" fill="rgb(214,40,43)"/><text x="693.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1060" width="5" height="15" fill="rgb(208,66,41)"/><text x="693.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1076" width="5" height="15" fill="rgb(233,66,4)"/><text x="693.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1092" width="5" height="15" fill="rgb(224,36,10)"/><text x="693.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.36%)</title><rect x="690" y="1108" width="5" height="15" fill="rgb(226,167,38)"/><text x="693.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="690" y="1124" width="5" height="15" fill="rgb(248,37,10)"/><text x="693.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1140" width="5" height="15" fill="rgb(232,28,52)"/><text x="693.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1156" width="5" height="15" fill="rgb(246,134,17)"/><text x="693.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1172" width="5" height="15" fill="rgb(251,8,22)"/><text x="693.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1188" width="5" height="15" fill="rgb(237,83,18)"/><text x="693.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1204" width="5" height="15" fill="rgb(216,43,44)"/><text x="693.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1220" width="5" height="15" fill="rgb(243,194,23)"/><text x="693.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.36%)</title><rect x="690" y="1236" width="5" height="15" fill="rgb(212,104,44)"/><text x="693.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="690" y="1252" width="5" height="15" fill="rgb(217,71,33)"/><text x="693.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1268" width="5" height="15" fill="rgb(240,137,19)"/><text x="693.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1284" width="5" height="15" fill="rgb(223,65,50)"/><text x="693.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1300" width="5" height="15" fill="rgb(207,109,15)"/><text x="693.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1316" width="5" height="15" fill="rgb(230,143,38)"/><text x="693.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1332" width="5" height="15" fill="rgb(239,178,43)"/><text x="693.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1348" width="5" height="15" fill="rgb(212,120,27)"/><text x="693.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.36%)</title><rect x="690" y="1364" width="5" height="15" fill="rgb(214,171,4)"/><text x="693.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1380" width="5" height="15" fill="rgb(237,193,6)"/><text x="693.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1396" width="5" height="15" fill="rgb(253,34,42)"/><text x="693.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1412" width="5" height="15" fill="rgb(242,109,13)"/><text x="693.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1428" width="5" height="15" fill="rgb(224,13,19)"/><text x="693.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1444" width="5" height="15" fill="rgb(222,38,27)"/><text x="693.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.36%)</title><rect x="690" y="1460" width="5" height="15" fill="rgb(226,130,8)"/><text x="693.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1476" width="5" height="15" fill="rgb(247,184,52)"/><text x="693.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1492" width="5" height="15" fill="rgb(237,145,50)"/><text x="693.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1508" width="5" height="15" fill="rgb(216,15,24)"/><text x="693.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1524" width="5" height="15" fill="rgb(205,142,34)"/><text x="693.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1540" width="5" height="15" fill="rgb(233,99,36)"/><text x="693.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.36%)</title><rect x="690" y="1556" width="5" height="15" fill="rgb(232,62,21)"/><text x="693.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.36%)</title><rect x="690" y="1572" width="5" height="15" fill="rgb(214,32,53)"/><text x="693.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1588" width="5" height="15" fill="rgb(212,108,17)"/><text x="693.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1604" width="5" height="15" fill="rgb(243,6,22)"/><text x="693.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1620" width="5" height="15" fill="rgb(206,181,11)"/><text x="693.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1636" width="5" height="15" fill="rgb(245,77,34)"/><text x="693.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1652" width="5" height="15" fill="rgb(237,95,29)"/><text x="693.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.36%)</title><rect x="690" y="1668" width="5" height="15" fill="rgb(221,152,8)"/><text x="693.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1684" width="5" height="15" fill="rgb(225,82,23)"/><text x="693.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1700" width="5" height="15" fill="rgb(218,220,6)"/><text x="693.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1716" width="5" height="15" fill="rgb(210,214,51)"/><text x="693.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1732" width="5" height="15" fill="rgb(254,120,16)"/><text x="693.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1748" width="5" height="15" fill="rgb(247,106,31)"/><text x="693.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.36%)</title><rect x="690" y="1764" width="5" height="15" fill="rgb(219,23,14)"/><text x="693.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="690" y="1780" width="5" height="15" fill="rgb(247,63,45)"/><text x="693.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1796" width="5" height="15" fill="rgb(243,40,42)"/><text x="693.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="690" y="1812" width="5" height="15" fill="rgb(246,51,35)"/><text x="693.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="690" y="1828" width="5" height="15" fill="rgb(216,217,19)"/><text x="693.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="690" y="1844" width="5" height="15" fill="rgb(250,160,48)"/><text x="693.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="690" y="1860" width="5" height="15" fill="rgb(212,192,41)"/><text x="693.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="690" y="1876" width="5" height="15" fill="rgb(218,123,24)"/><text x="693.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:335) (1 samples, 0.36%)</title><rect x="690" y="1892" width="5" height="15" fill="rgb(229,81,10)"/><text x="693.00" y="1902.50"></text></g><g><title>__new__ (jinja2/nodes.py:65) (1 samples, 0.36%)</title><rect x="690" y="1908" width="5" height="15" fill="rgb(216,76,41)"/><text x="693.00" y="1918.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:22) (1 samples, 0.36%)</title><rect x="695" y="100" width="4" height="15" fill="rgb(238,131,6)"/><text x="698.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (2 samples, 0.72%)</title><rect x="707" y="116" width="9" height="15" fill="rgb(253,40,35)"/><text x="710.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="716" y="116" width="4" height="15" fill="rgb(241,18,4)"/><text x="719.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="716" y="132" width="4" height="15" fill="rgb(252,95,27)"/><text x="719.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.36%)</title><rect x="716" y="148" width="4" height="15" fill="rgb(235,46,23)"/><text x="719.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.36%)</title><rect x="724" y="148" width="4" height="15" fill="rgb(240,126,19)"/><text x="727.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.36%)</title><rect x="733" y="164" width="4" height="15" fill="rgb(217,60,22)"/><text x="736.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (3 samples, 1.08%)</title><rect x="737" y="164" width="13" height="15" fill="rgb(246,172,26)"/><text x="740.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (3 samples, 1.08%)</title><rect x="750" y="164" width="12" height="15" fill="rgb(208,97,10)"/><text x="753.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.36%)</title><rect x="762" y="164" width="5" height="15" fill="rgb(212,135,39)"/><text x="765.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.36%)</title><rect x="767" y="180" width="4" height="15" fill="rgb(226,3,8)"/><text x="770.00" y="190.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.36%)</title><rect x="771" y="244" width="4" height="15" fill="rgb(225,8,54)"/><text x="774.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.36%)</title><rect x="775" y="244" width="4" height="15" fill="rgb(224,81,48)"/><text x="778.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.36%)</title><rect x="779" y="276" width="4" height="15" fill="rgb(238,202,45)"/><text x="782.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.36%)</title><rect x="783" y="308" width="5" height="15" fill="rgb(219,94,42)"/><text x="786.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.36%)</title><rect x="783" y="324" width="5" height="15" fill="rgb(209,111,4)"/><text x="786.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.36%)</title><rect x="783" y="340" width="5" height="15" fill="rgb(210,201,17)"/><text x="786.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:140) (1 samples, 0.36%)</title><rect x="783" y="356" width="5" height="15" fill="rgb(249,43,22)"/><text x="786.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="788" y="372" width="4" height="15" fill="rgb(227,54,28)"/><text x="791.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.36%)</title><rect x="788" y="388" width="4" height="15" fill="rgb(219,198,16)"/><text x="791.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.72%)</title><rect x="788" y="324" width="8" height="15" fill="rgb(228,162,6)"/><text x="791.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (2 samples, 0.72%)</title><rect x="788" y="340" width="8" height="15" fill="rgb(251,71,24)"/><text x="791.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.72%)</title><rect x="788" y="356" width="8" height="15" fill="rgb(207,118,24)"/><text x="791.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.36%)</title><rect x="792" y="372" width="4" height="15" fill="rgb(220,20,18)"/><text x="795.00" y="382.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.36%)</title><rect x="792" y="388" width="4" height="15" fill="rgb(223,28,21)"/><text x="795.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:365) (1 samples, 0.36%)</title><rect x="796" y="324" width="4" height="15" fill="rgb(211,122,30)"/><text x="799.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.36%)</title><rect x="796" y="340" width="4" height="15" fill="rgb(246,156,53)"/><text x="799.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (3 samples, 1.08%)</title><rect x="800" y="324" width="13" height="15" fill="rgb(253,34,6)"/><text x="803.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (3 samples, 1.08%)</title><rect x="800" y="340" width="13" height="15" fill="rgb(241,34,45)"/><text x="803.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.08%)</title><rect x="800" y="356" width="13" height="15" fill="rgb(241,19,45)"/><text x="803.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.08%)</title><rect x="800" y="372" width="13" height="15" fill="rgb(251,45,26)"/><text x="803.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.72%)</title><rect x="805" y="388" width="8" height="15" fill="rgb(240,213,7)"/><text x="808.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (11 samples, 3.94%)</title><rect x="771" y="228" width="46" height="15" fill="rgb(236,61,20)"/><text x="774.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (9 samples, 3.23%)</title><rect x="779" y="244" width="38" height="15" fill="rgb(247,31,10)"/><text x="782.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (9 samples, 3.23%)</title><rect x="779" y="260" width="38" height="15" fill="rgb(217,51,49)"/><text x="782.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.87%)</title><rect x="783" y="276" width="34" height="15" fill="rgb(215,84,18)"/><text x="786.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (8 samples, 2.87%)</title><rect x="783" y="292" width="34" height="15" fill="rgb(236,36,12)"/><text x="786.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (7 samples, 2.51%)</title><rect x="788" y="308" width="29" height="15" fill="rgb(216,210,14)"/><text x="791.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (1 samples, 0.36%)</title><rect x="813" y="324" width="4" height="15" fill="rgb(223,2,12)"/><text x="816.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:413) (1 samples, 0.36%)</title><rect x="813" y="340" width="4" height="15" fill="rgb(211,163,21)"/><text x="816.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.36%)</title><rect x="817" y="228" width="5" height="15" fill="rgb(229,179,3)"/><text x="820.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.36%)</title><rect x="826" y="260" width="4" height="15" fill="rgb(231,73,32)"/><text x="829.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.36%)</title><rect x="826" y="276" width="4" height="15" fill="rgb(210,4,29)"/><text x="829.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.36%)</title><rect x="830" y="260" width="4" height="15" fill="rgb(227,59,47)"/><text x="833.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.36%)</title><rect x="830" y="276" width="4" height="15" fill="rgb(210,79,3)"/><text x="833.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.36%)</title><rect x="830" y="292" width="4" height="15" fill="rgb(216,112,11)"/><text x="833.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.36%)</title><rect x="834" y="324" width="4" height="15" fill="rgb(210,92,52)"/><text x="837.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.72%)</title><rect x="834" y="308" width="9" height="15" fill="rgb(213,61,45)"/><text x="837.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.36%)</title><rect x="838" y="324" width="5" height="15" fill="rgb(210,189,38)"/><text x="841.00" y="334.50"></text></g><g><title>0x7f97c4b7b1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="838" y="340" width="5" height="15" fill="rgb(253,91,32)"/><text x="841.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.08%)</title><rect x="834" y="260" width="13" height="15" fill="rgb(247,69,48)"/><text x="837.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.08%)</title><rect x="834" y="276" width="13" height="15" fill="rgb(215,229,20)"/><text x="837.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.08%)</title><rect x="834" y="292" width="13" height="15" fill="rgb(242,53,45)"/><text x="837.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.36%)</title><rect x="843" y="308" width="4" height="15" fill="rgb(211,111,40)"/><text x="846.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3102) (1 samples, 0.36%)</title><rect x="843" y="324" width="4" height="15" fill="rgb(221,189,18)"/><text x="846.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.51%)</title><rect x="822" y="228" width="29" height="15" fill="rgb(226,36,27)"/><text x="825.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.15%)</title><rect x="826" y="244" width="25" height="15" fill="rgb(232,158,5)"/><text x="829.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3279) (1 samples, 0.36%)</title><rect x="847" y="260" width="4" height="15" fill="rgb(245,110,17)"/><text x="850.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (3 samples, 1.08%)</title><rect x="851" y="228" width="13" height="15" fill="rgb(248,102,0)"/><text x="854.00" y="238.50"></text></g><g><title>0x7f97c5a36151 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="860" y="244" width="4" height="15" fill="rgb(229,38,40)"/><text x="863.00" y="254.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.36%)</title><rect x="872" y="244" width="5" height="15" fill="rgb(224,56,44)"/><text x="875.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.36%)</title><rect x="881" y="292" width="4" height="15" fill="rgb(219,131,41)"/><text x="884.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (28 samples, 10.04%)</title><rect x="771" y="196" width="118" height="15" fill="rgb(241,209,10)"/><text x="774.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 10.04%)</title><rect x="771" y="212" width="118" height="15" fill="rgb(228,148,44)"/><text x="774.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 2.15%)</title><rect x="864" y="228" width="25" height="15" fill="rgb(206,144,10)"/><text x="867.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 1.08%)</title><rect x="877" y="244" width="12" height="15" fill="rgb(216,52,49)"/><text x="880.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.08%)</title><rect x="877" y="260" width="12" height="15" fill="rgb(243,124,37)"/><text x="880.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 1.08%)</title><rect x="877" y="276" width="12" height="15" fill="rgb(211,122,16)"/><text x="880.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="885" y="292" width="4" height="15" fill="rgb(248,175,1)"/><text x="888.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.36%)</title><rect x="885" y="308" width="4" height="15" fill="rgb(232,192,25)"/><text x="888.00" y="318.50"></text></g><g><title>0x7f97c5a36151 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="906" y="212" width="4" height="15" fill="rgb(245,12,1)"/><text x="909.00" y="222.50"></text></g><g><title>0x7f97c5a36154 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="910" y="212" width="5" height="15" fill="rgb(242,40,43)"/><text x="913.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (35 samples, 12.54%)</title><rect x="771" y="180" width="148" height="15" fill="rgb(245,186,33)"/><text x="774.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (7 samples, 2.51%)</title><rect x="889" y="196" width="30" height="15" fill="rgb(206,115,48)"/><text x="892.00" y="206.50">ru..</text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.36%)</title><rect x="915" y="212" width="4" height="15" fill="rgb(250,151,21)"/><text x="918.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.36%)</title><rect x="915" y="228" width="4" height="15" fill="rgb(235,37,15)"/><text x="918.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.36%)</title><rect x="919" y="180" width="4" height="15" fill="rgb(251,39,32)"/><text x="922.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.36%)</title><rect x="923" y="180" width="4" height="15" fill="rgb(239,129,1)"/><text x="926.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 2.15%)</title><rect x="927" y="180" width="26" height="15" fill="rgb(251,53,27)"/><text x="930.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (45 samples, 16.13%)</title><rect x="767" y="164" width="190" height="15" fill="rgb(233,158,31)"/><text x="770.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.36%)</title><rect x="953" y="180" width="4" height="15" fill="rgb(218,154,51)"/><text x="956.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (61 samples, 21.86%)</title><rect x="724" y="132" width="258" height="15" fill="rgb(240,14,46)"/><text x="727.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (60 samples, 21.51%)</title><rect x="728" y="148" width="254" height="15" fill="rgb(229,134,29)"/><text x="731.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (6 samples, 2.15%)</title><rect x="957" y="164" width="25" height="15" fill="rgb(210,186,47)"/><text x="960.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.43%)</title><rect x="965" y="180" width="17" height="15" fill="rgb(254,157,5)"/><text x="968.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.36%)</title><rect x="978" y="196" width="4" height="15" fill="rgb(214,100,10)"/><text x="981.00" y="206.50"></text></g><g><title>0x7f97c5a36df0 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="978" y="212" width="4" height="15" fill="rgb(254,162,48)"/><text x="981.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:45) (69 samples, 24.73%)</title><rect x="695" y="52" width="291" height="15" fill="rgb(249,124,22)"/><text x="698.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libl..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:44) (69 samples, 24.73%)</title><rect x="695" y="68" width="291" height="15" fill="rgb(245,120,14)"/><text x="698.00" y="78.50">profile_pyrt (bench_LogisticRegression_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (69 samples, 24.73%)</title><rect x="695" y="84" width="291" height="15" fill="rgb(215,55,12)"/><text x="698.00" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (68 samples, 24.37%)</title><rect x="699" y="100" width="287" height="15" fill="rgb(213,217,47)"/><text x="702.00" y="110.50">profile (bench_LogisticRegression_libl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (63 samples, 22.58%)</title><rect x="720" y="116" width="266" height="15" fill="rgb(220,189,16)"/><text x="723.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.36%)</title><rect x="982" y="132" width="4" height="15" fill="rgb(220,13,3)"/><text x="985.00" y="142.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:22) (1 samples, 0.36%)</title><rect x="986" y="100" width="5" height="15" fill="rgb(238,44,20)"/><text x="989.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.36%)</title><rect x="999" y="116" width="4" height="15" fill="rgb(233,57,24)"/><text x="1002.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.36%)</title><rect x="999" y="132" width="4" height="15" fill="rgb(244,190,38)"/><text x="1002.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.36%)</title><rect x="1020" y="196" width="5" height="15" fill="rgb(212,172,4)"/><text x="1023.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.72%)</title><rect x="1025" y="196" width="8" height="15" fill="rgb(215,106,47)"/><text x="1028.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.36%)</title><rect x="1029" y="212" width="4" height="15" fill="rgb(207,21,37)"/><text x="1032.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1029" y="228" width="4" height="15" fill="rgb(207,116,38)"/><text x="1032.00" y="238.50"></text></g><g><title>0x7f97c5958991 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1029" y="244" width="4" height="15" fill="rgb(248,41,9)"/><text x="1032.00" y="254.50"></text></g><g><title>0x7f97859c8ff9 (?) (1 samples, 0.36%)</title><rect x="1054" y="212" width="4" height="15" fill="rgb(249,74,5)"/><text x="1057.00" y="222.50"></text></g><g><title>0x7f97859c3dc6 (?) (1 samples, 0.36%)</title><rect x="1054" y="228" width="4" height="15" fill="rgb(246,100,0)"/><text x="1057.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1058" y="228" width="5" height="15" fill="rgb(223,224,53)"/><text x="1061.00" y="238.50"></text></g><g><title>0x7f97c5958991 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1075" y="292" width="5" height="15" fill="rgb(241,141,30)"/><text x="1078.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1080" y="292" width="4" height="15" fill="rgb(207,2,24)"/><text x="1083.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1080" y="308" width="4" height="15" fill="rgb(249,49,9)"/><text x="1083.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1080" y="324" width="4" height="15" fill="rgb(248,181,14)"/><text x="1083.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(245,137,47)"/><text x="1087.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1088" y="292" width="4" height="15" fill="rgb(249,63,21)"/><text x="1091.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1101" y="340" width="4" height="15" fill="rgb(229,221,6)"/><text x="1104.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1101" y="356" width="4" height="15" fill="rgb(224,216,38)"/><text x="1104.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1105" y="340" width="4" height="15" fill="rgb(232,91,48)"/><text x="1108.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1105" y="356" width="4" height="15" fill="rgb(230,209,0)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1109" y="340" width="4" height="15" fill="rgb(233,161,2)"/><text x="1112.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.08%)</title><rect x="1113" y="404" width="13" height="15" fill="rgb(227,142,53)"/><text x="1116.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.08%)</title><rect x="1113" y="420" width="13" height="15" fill="rgb(240,84,38)"/><text x="1116.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.08%)</title><rect x="1113" y="436" width="13" height="15" fill="rgb(243,131,10)"/><text x="1116.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.08%)</title><rect x="1113" y="452" width="13" height="15" fill="rgb(225,214,19)"/><text x="1116.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.72%)</title><rect x="1118" y="468" width="8" height="15" fill="rgb(242,77,1)"/><text x="1121.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="484" width="4" height="15" fill="rgb(225,156,19)"/><text x="1125.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="500" width="4" height="15" fill="rgb(252,85,8)"/><text x="1125.00" y="510.50"></text></g><g><title>0x7f97c5958998 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1122" y="516" width="4" height="15" fill="rgb(254,224,6)"/><text x="1125.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.02%)</title><rect x="1071" y="260" width="59" height="15" fill="rgb(247,88,0)"/><text x="1074.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.02%)</title><rect x="1071" y="276" width="59" height="15" fill="rgb(239,75,54)"/><text x="1074.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.23%)</title><rect x="1092" y="292" width="38" height="15" fill="rgb(235,67,18)"/><text x="1095.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.23%)</title><rect x="1092" y="308" width="38" height="15" fill="rgb(236,24,26)"/><text x="1095.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.23%)</title><rect x="1092" y="324" width="38" height="15" fill="rgb(216,204,15)"/><text x="1095.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1113" y="340" width="17" height="15" fill="rgb(247,33,52)"/><text x="1116.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1113" y="356" width="17" height="15" fill="rgb(253,225,37)"/><text x="1116.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1113" y="372" width="17" height="15" fill="rgb(211,54,11)"/><text x="1116.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1113" y="388" width="17" height="15" fill="rgb(215,89,24)"/><text x="1116.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1126" y="404" width="4" height="15" fill="rgb(216,130,15)"/><text x="1129.00" y="414.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1130" y="260" width="5" height="15" fill="rgb(228,137,1)"/><text x="1133.00" y="270.50"></text></g><g><title>array_finalize_get (getset.c:975) (1 samples, 0.36%)</title><rect x="1130" y="276" width="5" height="15" fill="rgb(228,220,53)"/><text x="1133.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (2 samples, 0.72%)</title><rect x="1135" y="292" width="8" height="15" fill="rgb(239,125,27)"/><text x="1138.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (2 samples, 0.72%)</title><rect x="1135" y="308" width="8" height="15" fill="rgb(212,140,46)"/><text x="1138.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1116) (1 samples, 0.36%)</title><rect x="1143" y="292" width="4" height="15" fill="rgb(233,184,21)"/><text x="1146.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.79%)</title><rect x="1135" y="260" width="21" height="15" fill="rgb(247,66,22)"/><text x="1138.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (5 samples, 1.79%)</title><rect x="1135" y="276" width="21" height="15" fill="rgb(217,17,28)"/><text x="1138.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.72%)</title><rect x="1147" y="292" width="9" height="15" fill="rgb(249,112,17)"/><text x="1150.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (2 samples, 0.72%)</title><rect x="1147" y="308" width="9" height="15" fill="rgb(227,204,1)"/><text x="1150.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.36%)</title><rect x="1151" y="324" width="5" height="15" fill="rgb(207,105,39)"/><text x="1154.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.36%)</title><rect x="1151" y="340" width="5" height="15" fill="rgb(236,71,15)"/><text x="1154.00" y="350.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.89%)</title><rect x="1067" y="244" width="93" height="15" fill="rgb(246,94,54)"/><text x="1070.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(230,4,18)"/><text x="1159.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="276" width="4" height="15" fill="rgb(211,22,3)"/><text x="1159.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="292" width="4" height="15" fill="rgb(244,33,36)"/><text x="1159.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="308" width="4" height="15" fill="rgb(244,2,4)"/><text x="1159.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(246,44,46)"/><text x="1159.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="340" width="4" height="15" fill="rgb(221,192,30)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(243,176,10)"/><text x="1159.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="372" width="4" height="15" fill="rgb(254,46,52)"/><text x="1159.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="388" width="4" height="15" fill="rgb(227,186,53)"/><text x="1159.00" y="398.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1160" y="244" width="4" height="15" fill="rgb(214,146,31)"/><text x="1163.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1160" y="260" width="4" height="15" fill="rgb(211,105,40)"/><text x="1163.00" y="270.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1164" y="244" width="4" height="15" fill="rgb(211,18,23)"/><text x="1167.00" y="254.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (33 samples, 11.83%)</title><rect x="1033" y="196" width="140" height="15" fill="rgb(219,76,53)"/><text x="1036.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 9.68%)</title><rect x="1058" y="212" width="115" height="15" fill="rgb(245,60,14)"/><text x="1061.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 9.32%)</title><rect x="1063" y="228" width="110" height="15" fill="rgb(228,145,13)"/><text x="1066.00" y="238.50">void pybind11..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1168" y="244" width="5" height="15" fill="rgb(209,215,27)"/><text x="1171.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (38 samples, 13.62%)</title><rect x="1016" y="164" width="161" height="15" fill="rgb(216,195,53)"/><text x="1019.00" y="174.50">_run_whole_runtime (..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (38 samples, 13.62%)</title><rect x="1016" y="180" width="161" height="15" fill="rgb(250,51,4)"/><text x="1019.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.36%)</title><rect x="1173" y="196" width="4" height="15" fill="rgb(229,47,33)"/><text x="1176.00" y="206.50"></text></g><g><title>all (279 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,24,39)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:52) (48 samples, 17.20%)</title><rect x="986" y="52" width="204" height="15" fill="rgb(250,0,7)"/><text x="989.00" y="62.50">&lt;module&gt; (bench_LogisticRe..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:51) (48 samples, 17.20%)</title><rect x="986" y="68" width="204" height="15" fill="rgb(250,10,23)"/><text x="989.00" y="78.50">profile_ort (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:29) (48 samples, 17.20%)</title><rect x="986" y="84" width="204" height="15" fill="rgb(229,57,42)"/><text x="989.00" y="94.50">setup_profile (bench_Logis..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py:23) (47 samples, 16.85%)</title><rect x="991" y="100" width="199" height="15" fill="rgb(236,133,47)"/><text x="994.00" y="110.50">profile (bench_LogisticReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (44 samples, 15.77%)</title><rect x="1003" y="116" width="187" height="15" fill="rgb(254,11,41)"/><text x="1006.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (42 samples, 15.05%)</title><rect x="1012" y="132" width="178" height="15" fill="rgb(229,33,46)"/><text x="1015.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (41 samples, 14.70%)</title><rect x="1016" y="148" width="174" height="15" fill="rgb(209,170,52)"/><text x="1019.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.08%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(230,221,49)"/><text x="1180.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.36%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(208,222,29)"/><text x="1188.00" y="190.50"></text></g></g></svg>