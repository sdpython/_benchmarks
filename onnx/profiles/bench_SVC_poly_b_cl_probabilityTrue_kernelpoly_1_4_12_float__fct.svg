<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(217,80,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(239,76,44)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(248,224,2)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(236,44,19)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(211,98,33)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(249,125,34)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(244,96,23)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(235,151,35)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(227,95,23)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(252,24,27)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(213,170,21)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(206,171,6)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(214,163,16)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(223,145,1)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(220,28,33)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.11%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(223,53,54)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(216,97,26)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(246,89,13)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(241,81,40)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(236,56,23)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(252,82,30)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.11%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(227,82,50)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(230,65,52)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(244,214,26)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(211,110,49)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(248,38,48)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(239,121,8)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.11%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(213,158,5)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(226,150,35)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(219,26,22)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(223,141,22)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(252,157,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(218,163,27)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(214,163,40)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(237,152,43)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(211,165,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(222,89,43)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(205,23,50)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(249,137,7)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(213,189,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(207,189,21)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(216,87,18)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(234,80,14)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(248,28,52)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(233,149,26)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="868" width="7" height="15" fill="rgb(234,12,41)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="884" width="7" height="15" fill="rgb(230,117,54)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="900" width="7" height="15" fill="rgb(219,126,24)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="916" width="7" height="15" fill="rgb(236,118,48)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="932" width="7" height="15" fill="rgb(253,107,3)"/><text x="19.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="948" width="7" height="15" fill="rgb(223,207,53)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="16" y="964" width="7" height="15" fill="rgb(239,177,6)"/><text x="19.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(245,144,44)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.28%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(231,129,40)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.56%)</title><rect x="23" y="1028" width="6" height="15" fill="rgb(232,190,9)"/><text x="26.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.56%)</title><rect x="23" y="1044" width="6" height="15" fill="rgb(214,5,23)"/><text x="26.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.56%)</title><rect x="23" y="1060" width="6" height="15" fill="rgb(227,168,36)"/><text x="26.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (2 samples, 0.56%)</title><rect x="23" y="1076" width="6" height="15" fill="rgb(222,64,6)"/><text x="26.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.28%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(251,183,3)"/><text x="29.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="10" y="196" width="22" height="15" fill="rgb(250,62,4)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="10" y="212" width="22" height="15" fill="rgb(254,36,46)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="10" y="228" width="22" height="15" fill="rgb(251,204,49)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="10" y="244" width="22" height="15" fill="rgb(235,86,21)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.94%)</title><rect x="10" y="260" width="22" height="15" fill="rgb(238,32,29)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="10" y="276" width="22" height="15" fill="rgb(251,48,43)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.83%)</title><rect x="23" y="292" width="9" height="15" fill="rgb(220,74,24)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="308" width="9" height="15" fill="rgb(237,70,11)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="324" width="9" height="15" fill="rgb(222,78,35)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="340" width="9" height="15" fill="rgb(233,205,9)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="356" width="9" height="15" fill="rgb(227,145,3)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="372" width="9" height="15" fill="rgb(231,169,14)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.83%)</title><rect x="23" y="388" width="9" height="15" fill="rgb(219,223,13)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="404" width="9" height="15" fill="rgb(223,166,46)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="420" width="9" height="15" fill="rgb(245,26,2)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="436" width="9" height="15" fill="rgb(222,86,10)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="452" width="9" height="15" fill="rgb(246,48,41)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="468" width="9" height="15" fill="rgb(207,29,50)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.83%)</title><rect x="23" y="484" width="9" height="15" fill="rgb(250,136,51)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="500" width="9" height="15" fill="rgb(216,86,36)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="516" width="9" height="15" fill="rgb(233,81,20)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="532" width="9" height="15" fill="rgb(237,159,34)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="548" width="9" height="15" fill="rgb(251,128,16)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="564" width="9" height="15" fill="rgb(253,182,50)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.83%)</title><rect x="23" y="580" width="9" height="15" fill="rgb(219,157,21)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="596" width="9" height="15" fill="rgb(223,108,18)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="612" width="9" height="15" fill="rgb(222,109,48)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="628" width="9" height="15" fill="rgb(225,76,39)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="644" width="9" height="15" fill="rgb(216,217,27)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="660" width="9" height="15" fill="rgb(217,188,48)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.83%)</title><rect x="23" y="676" width="9" height="15" fill="rgb(235,29,26)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="692" width="9" height="15" fill="rgb(232,215,39)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="708" width="9" height="15" fill="rgb(212,117,0)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="724" width="9" height="15" fill="rgb(217,221,32)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="740" width="9" height="15" fill="rgb(236,55,8)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="756" width="9" height="15" fill="rgb(250,198,8)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.83%)</title><rect x="23" y="772" width="9" height="15" fill="rgb(213,169,22)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="788" width="9" height="15" fill="rgb(214,28,25)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="804" width="9" height="15" fill="rgb(254,207,54)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="820" width="9" height="15" fill="rgb(238,97,3)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="836" width="9" height="15" fill="rgb(230,207,2)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="852" width="9" height="15" fill="rgb(214,183,18)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="868" width="9" height="15" fill="rgb(245,97,54)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="884" width="9" height="15" fill="rgb(248,135,38)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.83%)</title><rect x="23" y="900" width="9" height="15" fill="rgb(229,14,45)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="916" width="9" height="15" fill="rgb(233,155,50)"/><text x="26.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="932" width="9" height="15" fill="rgb(252,119,45)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="948" width="9" height="15" fill="rgb(236,147,4)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="964" width="9" height="15" fill="rgb(233,87,45)"/><text x="26.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="980" width="9" height="15" fill="rgb(251,87,23)"/><text x="26.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="23" y="996" width="9" height="15" fill="rgb(244,20,2)"/><text x="26.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="1012" width="9" height="15" fill="rgb(211,7,34)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.28%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(214,75,14)"/><text x="32.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.28%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(206,227,18)"/><text x="32.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py) (1 samples, 0.28%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(229,151,23)"/><text x="32.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.28%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(225,204,3)"/><text x="32.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1124" width="4" height="15" fill="rgb(253,92,54)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1140" width="4" height="15" fill="rgb(208,155,16)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1156" width="4" height="15" fill="rgb(213,197,45)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="1172" width="4" height="15" fill="rgb(237,121,32)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1188" width="4" height="15" fill="rgb(253,22,29)"/><text x="35.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.28%)</title><rect x="32" y="1204" width="4" height="15" fill="rgb(219,155,34)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1220" width="4" height="15" fill="rgb(235,199,35)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1236" width="4" height="15" fill="rgb(216,6,25)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(223,37,28)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="1268" width="4" height="15" fill="rgb(216,28,9)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="1284" width="4" height="15" fill="rgb(229,159,50)"/><text x="35.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="32" y="1300" width="4" height="15" fill="rgb(253,131,21)"/><text x="35.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="32" y="1316" width="4" height="15" fill="rgb(215,20,20)"/><text x="35.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.28%)</title><rect x="32" y="1332" width="4" height="15" fill="rgb(230,162,30)"/><text x="35.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.28%)</title><rect x="32" y="1348" width="4" height="15" fill="rgb(209,67,38)"/><text x="35.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.28%)</title><rect x="32" y="1364" width="4" height="15" fill="rgb(250,90,46)"/><text x="35.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.28%)</title><rect x="32" y="1380" width="4" height="15" fill="rgb(238,115,31)"/><text x="35.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.28%)</title><rect x="32" y="1396" width="4" height="15" fill="rgb(248,198,2)"/><text x="35.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(226,169,0)"/><text x="39.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(209,173,3)"/><text x="39.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1508" width="3" height="15" fill="rgb(241,195,53)"/><text x="39.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="1524" width="3" height="15" fill="rgb(245,90,39)"/><text x="39.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1540" width="3" height="15" fill="rgb(241,126,48)"/><text x="39.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.28%)</title><rect x="36" y="1556" width="3" height="15" fill="rgb(244,101,54)"/><text x="39.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.28%)</title><rect x="36" y="1572" width="3" height="15" fill="rgb(210,119,8)"/><text x="39.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="36" y="1588" width="3" height="15" fill="rgb(228,90,3)"/><text x="39.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="36" y="1604" width="3" height="15" fill="rgb(223,218,6)"/><text x="39.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="36" y="1620" width="3" height="15" fill="rgb(207,81,13)"/><text x="39.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="36" y="1636" width="3" height="15" fill="rgb(210,128,31)"/><text x="39.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1652" width="3" height="15" fill="rgb(235,43,49)"/><text x="39.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="36" y="1668" width="3" height="15" fill="rgb(225,66,47)"/><text x="39.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1684" width="3" height="15" fill="rgb(253,203,31)"/><text x="39.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1700" width="3" height="15" fill="rgb(220,55,42)"/><text x="39.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="36" y="1716" width="3" height="15" fill="rgb(238,25,11)"/><text x="39.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1732" width="3" height="15" fill="rgb(250,61,2)"/><text x="39.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1748" width="3" height="15" fill="rgb(228,151,0)"/><text x="39.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="36" y="1764" width="3" height="15" fill="rgb(231,198,38)"/><text x="39.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1780" width="3" height="15" fill="rgb(241,62,27)"/><text x="39.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1796" width="3" height="15" fill="rgb(248,153,0)"/><text x="39.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="36" y="1812" width="3" height="15" fill="rgb(206,114,12)"/><text x="39.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="36" y="1828" width="3" height="15" fill="rgb(214,134,38)"/><text x="39.00" y="1838.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="36" y="1844" width="3" height="15" fill="rgb(240,4,14)"/><text x="39.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="484" width="10" height="15" fill="rgb(226,194,42)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="500" width="10" height="15" fill="rgb(228,101,18)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="516" width="10" height="15" fill="rgb(232,113,14)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="532" width="10" height="15" fill="rgb(207,167,28)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="548" width="10" height="15" fill="rgb(235,114,21)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="564" width="10" height="15" fill="rgb(241,92,19)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.83%)</title><rect x="32" y="580" width="10" height="15" fill="rgb(234,58,38)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="596" width="10" height="15" fill="rgb(222,228,36)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="612" width="10" height="15" fill="rgb(226,65,17)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="628" width="10" height="15" fill="rgb(208,39,36)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="644" width="10" height="15" fill="rgb(206,182,53)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="660" width="10" height="15" fill="rgb(234,135,53)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.83%)</title><rect x="32" y="676" width="10" height="15" fill="rgb(205,140,18)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="692" width="10" height="15" fill="rgb(252,2,14)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="708" width="10" height="15" fill="rgb(219,111,2)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="724" width="10" height="15" fill="rgb(232,77,32)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="740" width="10" height="15" fill="rgb(239,210,53)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="756" width="10" height="15" fill="rgb(242,21,18)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.83%)</title><rect x="32" y="772" width="10" height="15" fill="rgb(209,216,50)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="788" width="10" height="15" fill="rgb(223,50,53)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="804" width="10" height="15" fill="rgb(212,205,15)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="820" width="10" height="15" fill="rgb(242,63,53)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="836" width="10" height="15" fill="rgb(208,21,43)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="852" width="10" height="15" fill="rgb(238,172,22)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.83%)</title><rect x="32" y="868" width="10" height="15" fill="rgb(227,7,53)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="884" width="10" height="15" fill="rgb(253,150,46)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="900" width="10" height="15" fill="rgb(210,26,31)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="916" width="10" height="15" fill="rgb(245,83,27)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="932" width="10" height="15" fill="rgb(208,5,5)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="948" width="10" height="15" fill="rgb(220,132,30)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="964" width="10" height="15" fill="rgb(252,72,17)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="980" width="10" height="15" fill="rgb(222,114,31)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="996" width="10" height="15" fill="rgb(213,105,11)"/><text x="35.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.83%)</title><rect x="32" y="1012" width="10" height="15" fill="rgb(236,1,16)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="1028" width="10" height="15" fill="rgb(213,228,47)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="1044" width="10" height="15" fill="rgb(243,61,10)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="1060" width="10" height="15" fill="rgb(211,150,17)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="32" y="1076" width="10" height="15" fill="rgb(221,63,42)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="32" y="1092" width="10" height="15" fill="rgb(251,161,36)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.83%)</title><rect x="32" y="1108" width="10" height="15" fill="rgb(241,92,19)"/><text x="35.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1124" width="6" height="15" fill="rgb(238,113,50)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1140" width="6" height="15" fill="rgb(252,2,22)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1156" width="6" height="15" fill="rgb(242,146,17)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1172" width="6" height="15" fill="rgb(223,128,50)"/><text x="39.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1188" width="6" height="15" fill="rgb(250,53,16)"/><text x="39.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="36" y="1204" width="6" height="15" fill="rgb(224,176,25)"/><text x="39.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1220" width="6" height="15" fill="rgb(252,72,32)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.56%)</title><rect x="36" y="1236" width="6" height="15" fill="rgb(210,127,52)"/><text x="39.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1252" width="6" height="15" fill="rgb(246,178,27)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1268" width="6" height="15" fill="rgb(228,116,31)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1284" width="6" height="15" fill="rgb(240,147,28)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1300" width="6" height="15" fill="rgb(232,26,16)"/><text x="39.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1316" width="6" height="15" fill="rgb(217,41,42)"/><text x="39.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="36" y="1332" width="6" height="15" fill="rgb(217,111,19)"/><text x="39.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1348" width="6" height="15" fill="rgb(209,227,52)"/><text x="39.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.56%)</title><rect x="36" y="1364" width="6" height="15" fill="rgb(216,13,11)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1380" width="6" height="15" fill="rgb(247,77,13)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1396" width="6" height="15" fill="rgb(214,215,47)"/><text x="39.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1412" width="6" height="15" fill="rgb(220,219,11)"/><text x="39.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="36" y="1428" width="6" height="15" fill="rgb(254,35,30)"/><text x="39.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="36" y="1444" width="6" height="15" fill="rgb(212,50,29)"/><text x="39.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.56%)</title><rect x="36" y="1460" width="6" height="15" fill="rgb(248,204,39)"/><text x="39.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="39" y="1476" width="3" height="15" fill="rgb(225,84,15)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="39" y="1492" width="3" height="15" fill="rgb(227,181,24)"/><text x="42.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="39" y="1508" width="3" height="15" fill="rgb(237,16,45)"/><text x="42.00" y="1518.50"></text></g><g><title>ArrowStyle (matplotlib/patches.py) (1 samples, 0.28%)</title><rect x="42" y="1892" width="4" height="15" fill="rgb(206,86,33)"/><text x="45.00" y="1902.50"></text></g><g><title>_pprint_styles (matplotlib/patches.py) (1 samples, 0.28%)</title><rect x="42" y="1908" width="4" height="15" fill="rgb(219,22,47)"/><text x="45.00" y="1918.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.28%)</title><rect x="42" y="1924" width="4" height="15" fill="rgb(216,184,44)"/><text x="45.00" y="1934.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.28%)</title><rect x="42" y="1940" width="4" height="15" fill="rgb(254,50,1)"/><text x="45.00" y="1950.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.28%)</title><rect x="42" y="1956" width="4" height="15" fill="rgb(225,216,4)"/><text x="45.00" y="1966.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.28%)</title><rect x="42" y="1972" width="4" height="15" fill="rgb(248,127,34)"/><text x="45.00" y="1982.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.56%)</title><rect x="42" y="1012" width="7" height="15" fill="rgb(244,54,39)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1028" width="7" height="15" fill="rgb(211,168,53)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1044" width="7" height="15" fill="rgb(209,83,16)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1060" width="7" height="15" fill="rgb(223,94,1)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1076" width="7" height="15" fill="rgb(218,208,40)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1092" width="7" height="15" fill="rgb(235,21,28)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.56%)</title><rect x="42" y="1108" width="7" height="15" fill="rgb(249,192,14)"/><text x="45.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1124" width="7" height="15" fill="rgb(223,53,17)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1140" width="7" height="15" fill="rgb(209,100,9)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1156" width="7" height="15" fill="rgb(208,57,18)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1172" width="7" height="15" fill="rgb(222,172,5)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1188" width="7" height="15" fill="rgb(226,59,3)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.56%)</title><rect x="42" y="1204" width="7" height="15" fill="rgb(243,80,27)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1220" width="7" height="15" fill="rgb(252,54,40)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1236" width="7" height="15" fill="rgb(223,199,23)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1252" width="7" height="15" fill="rgb(219,104,8)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1268" width="7" height="15" fill="rgb(214,199,29)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1284" width="7" height="15" fill="rgb(221,150,6)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.56%)</title><rect x="42" y="1300" width="7" height="15" fill="rgb(228,115,50)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1316" width="7" height="15" fill="rgb(246,146,16)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1332" width="7" height="15" fill="rgb(245,136,18)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1348" width="7" height="15" fill="rgb(254,25,43)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1364" width="7" height="15" fill="rgb(242,163,1)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1380" width="7" height="15" fill="rgb(221,131,54)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.56%)</title><rect x="42" y="1396" width="7" height="15" fill="rgb(242,180,4)"/><text x="45.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1412" width="7" height="15" fill="rgb(226,96,44)"/><text x="45.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1428" width="7" height="15" fill="rgb(228,183,16)"/><text x="45.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1444" width="7" height="15" fill="rgb(249,122,37)"/><text x="45.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1460" width="7" height="15" fill="rgb(248,40,10)"/><text x="45.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1476" width="7" height="15" fill="rgb(222,163,13)"/><text x="45.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.56%)</title><rect x="42" y="1492" width="7" height="15" fill="rgb(232,124,21)"/><text x="45.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1508" width="7" height="15" fill="rgb(215,153,38)"/><text x="45.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1524" width="7" height="15" fill="rgb(205,149,1)"/><text x="45.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1540" width="7" height="15" fill="rgb(253,18,52)"/><text x="45.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1556" width="7" height="15" fill="rgb(236,153,20)"/><text x="45.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1572" width="7" height="15" fill="rgb(248,138,34)"/><text x="45.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.56%)</title><rect x="42" y="1588" width="7" height="15" fill="rgb(212,37,25)"/><text x="45.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1604" width="7" height="15" fill="rgb(225,191,9)"/><text x="45.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1620" width="7" height="15" fill="rgb(252,55,22)"/><text x="45.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1636" width="7" height="15" fill="rgb(238,220,23)"/><text x="45.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1652" width="7" height="15" fill="rgb(225,77,12)"/><text x="45.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1668" width="7" height="15" fill="rgb(216,36,32)"/><text x="45.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.56%)</title><rect x="42" y="1684" width="7" height="15" fill="rgb(222,166,47)"/><text x="45.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1700" width="7" height="15" fill="rgb(221,28,0)"/><text x="45.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1716" width="7" height="15" fill="rgb(207,95,24)"/><text x="45.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1732" width="7" height="15" fill="rgb(206,115,33)"/><text x="45.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1748" width="7" height="15" fill="rgb(210,69,6)"/><text x="45.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1764" width="7" height="15" fill="rgb(237,134,14)"/><text x="45.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.56%)</title><rect x="42" y="1780" width="7" height="15" fill="rgb(237,229,29)"/><text x="45.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1796" width="7" height="15" fill="rgb(246,41,11)"/><text x="45.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1812" width="7" height="15" fill="rgb(254,153,32)"/><text x="45.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1828" width="7" height="15" fill="rgb(207,194,30)"/><text x="45.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1844" width="7" height="15" fill="rgb(236,61,2)"/><text x="45.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1860" width="7" height="15" fill="rgb(225,129,32)"/><text x="45.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (2 samples, 0.56%)</title><rect x="42" y="1876" width="7" height="15" fill="rgb(245,164,21)"/><text x="45.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1892" width="3" height="15" fill="rgb(208,186,20)"/><text x="49.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1908" width="3" height="15" fill="rgb(225,189,13)"/><text x="49.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1924" width="3" height="15" fill="rgb(243,124,50)"/><text x="49.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1940" width="3" height="15" fill="rgb(240,136,24)"/><text x="49.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1956" width="3" height="15" fill="rgb(236,67,41)"/><text x="49.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="46" y="1972" width="3" height="15" fill="rgb(225,49,46)"/><text x="49.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="46" y="1988" width="3" height="15" fill="rgb(231,82,50)"/><text x="49.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.28%)</title><rect x="46" y="2004" width="3" height="15" fill="rgb(247,142,22)"/><text x="49.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.28%)</title><rect x="46" y="2020" width="3" height="15" fill="rgb(238,18,17)"/><text x="49.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.28%)</title><rect x="46" y="2036" width="3" height="15" fill="rgb(242,158,17)"/><text x="49.00" y="2046.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.28%)</title><rect x="46" y="2052" width="3" height="15" fill="rgb(253,195,15)"/><text x="49.00" y="2062.50"></text></g><g><title>search (re.py) (1 samples, 0.28%)</title><rect x="46" y="2068" width="3" height="15" fill="rgb(205,65,0)"/><text x="49.00" y="2078.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="46" y="2084" width="3" height="15" fill="rgb(218,20,50)"/><text x="49.00" y="2094.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.28%)</title><rect x="46" y="2100" width="3" height="15" fill="rgb(219,158,51)"/><text x="49.00" y="2110.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="2116" width="3" height="15" fill="rgb(234,208,24)"/><text x="49.00" y="2126.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="2132" width="3" height="15" fill="rgb(224,113,8)"/><text x="49.00" y="2142.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="2148" width="3" height="15" fill="rgb(220,195,49)"/><text x="49.00" y="2158.50"></text></g><g><title>append (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="2164" width="3" height="15" fill="rgb(247,205,49)"/><text x="49.00" y="2174.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.67%)</title><rect x="32" y="340" width="20" height="15" fill="rgb(241,123,43)"/><text x="35.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="356" width="20" height="15" fill="rgb(218,96,41)"/><text x="35.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="372" width="20" height="15" fill="rgb(247,212,32)"/><text x="35.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="388" width="20" height="15" fill="rgb(214,131,34)"/><text x="35.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.67%)</title><rect x="32" y="404" width="20" height="15" fill="rgb(241,186,31)"/><text x="35.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="420" width="20" height="15" fill="rgb(233,74,9)"/><text x="35.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.67%)</title><rect x="32" y="436" width="20" height="15" fill="rgb(214,77,8)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="452" width="20" height="15" fill="rgb(249,101,29)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.67%)</title><rect x="32" y="468" width="20" height="15" fill="rgb(232,164,19)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="484" width="10" height="15" fill="rgb(232,220,24)"/><text x="45.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="500" width="10" height="15" fill="rgb(250,181,24)"/><text x="45.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="516" width="10" height="15" fill="rgb(220,53,37)"/><text x="45.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.83%)</title><rect x="42" y="532" width="10" height="15" fill="rgb(208,75,27)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="548" width="10" height="15" fill="rgb(244,50,15)"/><text x="45.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="564" width="10" height="15" fill="rgb(243,88,20)"/><text x="45.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="580" width="10" height="15" fill="rgb(240,101,51)"/><text x="45.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="596" width="10" height="15" fill="rgb(212,6,31)"/><text x="45.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="612" width="10" height="15" fill="rgb(224,70,30)"/><text x="45.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.83%)</title><rect x="42" y="628" width="10" height="15" fill="rgb(247,92,36)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="644" width="10" height="15" fill="rgb(247,71,32)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="660" width="10" height="15" fill="rgb(249,50,29)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="676" width="10" height="15" fill="rgb(215,219,43)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="692" width="10" height="15" fill="rgb(225,42,49)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="708" width="10" height="15" fill="rgb(210,49,45)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.83%)</title><rect x="42" y="724" width="10" height="15" fill="rgb(235,73,35)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="740" width="10" height="15" fill="rgb(225,127,46)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="756" width="10" height="15" fill="rgb(211,134,34)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="772" width="10" height="15" fill="rgb(243,219,5)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="788" width="10" height="15" fill="rgb(223,94,14)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="804" width="10" height="15" fill="rgb(217,228,43)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.83%)</title><rect x="42" y="820" width="10" height="15" fill="rgb(248,176,37)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="836" width="10" height="15" fill="rgb(220,189,2)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="852" width="10" height="15" fill="rgb(224,130,5)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="868" width="10" height="15" fill="rgb(244,109,5)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="884" width="10" height="15" fill="rgb(218,173,35)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="900" width="10" height="15" fill="rgb(251,28,51)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.83%)</title><rect x="42" y="916" width="10" height="15" fill="rgb(228,130,0)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="932" width="10" height="15" fill="rgb(235,171,34)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="948" width="10" height="15" fill="rgb(209,106,13)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="964" width="10" height="15" fill="rgb(228,225,13)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="42" y="980" width="10" height="15" fill="rgb(253,91,4)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="42" y="996" width="10" height="15" fill="rgb(247,0,45)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.28%)</title><rect x="49" y="1012" width="3" height="15" fill="rgb(217,91,28)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1028" width="3" height="15" fill="rgb(231,80,54)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(237,174,49)"/><text x="52.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(206,188,31)"/><text x="52.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(240,100,21)"/><text x="52.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(238,31,44)"/><text x="52.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(209,221,30)"/><text x="52.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(251,171,38)"/><text x="52.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(236,76,24)"/><text x="52.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/api/__init__.py) (1 samples, 0.28%)</title><rect x="49" y="1156" width="3" height="15" fill="rgb(241,150,24)"/><text x="52.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1172" width="3" height="15" fill="rgb(215,125,2)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="1188" width="3" height="15" fill="rgb(214,131,47)"/><text x="52.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="68" width="45" height="15" fill="rgb(214,131,18)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="84" width="45" height="15" fill="rgb(244,46,47)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="100" width="45" height="15" fill="rgb(239,57,38)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 3.89%)</title><rect x="10" y="116" width="45" height="15" fill="rgb(211,12,34)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="132" width="45" height="15" fill="rgb(208,59,48)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py) (14 samples, 3.89%)</title><rect x="10" y="148" width="45" height="15" fill="rgb(236,152,37)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="164" width="45" height="15" fill="rgb(212,168,34)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.89%)</title><rect x="10" y="180" width="45" height="15" fill="rgb(220,184,16)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="196" width="23" height="15" fill="rgb(228,218,32)"/><text x="35.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.94%)</title><rect x="32" y="212" width="23" height="15" fill="rgb(246,142,39)"/><text x="35.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="228" width="23" height="15" fill="rgb(249,210,18)"/><text x="35.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.94%)</title><rect x="32" y="244" width="23" height="15" fill="rgb(212,206,0)"/><text x="35.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="260" width="23" height="15" fill="rgb(228,215,37)"/><text x="35.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="276" width="23" height="15" fill="rgb(229,34,22)"/><text x="35.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="292" width="23" height="15" fill="rgb(248,114,7)"/><text x="35.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.94%)</title><rect x="32" y="308" width="23" height="15" fill="rgb(226,83,26)"/><text x="35.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="32" y="324" width="23" height="15" fill="rgb(227,90,53)"/><text x="35.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.28%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(218,221,22)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(250,30,34)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(241,140,47)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(235,82,43)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(218,103,43)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(224,97,46)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(226,184,0)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(250,183,43)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(254,12,51)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(212,147,44)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(232,121,13)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(243,169,19)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(234,6,7)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(224,175,4)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(233,176,19)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.28%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(244,66,46)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(244,174,21)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(247,141,39)"/><text x="55.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(209,18,48)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="644" width="3" height="15" fill="rgb(215,207,33)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="660" width="3" height="15" fill="rgb(240,141,51)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="676" width="3" height="15" fill="rgb(210,215,30)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="692" width="3" height="15" fill="rgb(216,211,43)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="708" width="3" height="15" fill="rgb(253,71,11)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(216,60,43)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(215,95,54)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(234,84,28)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(229,28,36)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(235,66,38)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(216,140,24)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.28%)</title><rect x="52" y="820" width="3" height="15" fill="rgb(224,178,12)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="836" width="3" height="15" fill="rgb(240,9,36)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="852" width="3" height="15" fill="rgb(235,12,21)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(211,5,18)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(253,0,49)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(245,161,39)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.28%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(226,127,33)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(254,57,0)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(244,29,28)"/><text x="55.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(238,77,52)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(207,35,31)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(210,185,20)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1012" width="3" height="15" fill="rgb(239,9,41)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(245,16,40)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(236,76,2)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(213,209,1)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(236,208,44)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1092" width="3" height="15" fill="rgb(214,214,23)"/><text x="55.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1108" width="3" height="15" fill="rgb(224,16,32)"/><text x="55.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(224,47,40)"/><text x="55.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(253,202,18)"/><text x="55.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(230,38,14)"/><text x="55.00" y="1166.50"></text></g><g><title>0x7f0b800caff9 (?) (1 samples, 0.28%)</title><rect x="141" y="212" width="3" height="15" fill="rgb(238,183,15)"/><text x="144.00" y="222.50"></text></g><g><title>0x7f0b800c5ef6 (?) (1 samples, 0.28%)</title><rect x="141" y="228" width="3" height="15" fill="rgb(228,196,8)"/><text x="144.00" y="238.50"></text></g><g><title>0x7f0b800ba962 (?) (1 samples, 0.28%)</title><rect x="141" y="244" width="3" height="15" fill="rgb(210,203,27)"/><text x="144.00" y="254.50"></text></g><g><title>0x7f0b800ee613 (?) (1 samples, 0.28%)</title><rect x="141" y="260" width="3" height="15" fill="rgb(217,62,35)"/><text x="144.00" y="270.50"></text></g><g><title>0x7f0b800e87f2 (?) (1 samples, 0.28%)</title><rect x="141" y="276" width="3" height="15" fill="rgb(216,193,50)"/><text x="144.00" y="286.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="154" y="244" width="3" height="15" fill="rgb(224,223,45)"/><text x="157.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.39%)</title><rect x="144" y="212" width="16" height="15" fill="rgb(241,163,9)"/><text x="147.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.39%)</title><rect x="144" y="228" width="16" height="15" fill="rgb(245,200,34)"/><text x="147.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="157" y="244" width="3" height="15" fill="rgb(230,80,17)"/><text x="160.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="157" y="260" width="3" height="15" fill="rgb(226,143,42)"/><text x="160.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="157" y="276" width="3" height="15" fill="rgb(214,72,31)"/><text x="160.00" y="286.50"></text></g><g><title>0x7f0bc005ad07 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="160" y="260" width="4" height="15" fill="rgb(245,73,25)"/><text x="163.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="260" width="3" height="15" fill="rgb(224,87,21)"/><text x="167.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="164" y="276" width="3" height="15" fill="rgb(223,142,48)"/><text x="167.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="173" y="292" width="4" height="15" fill="rgb(207,148,4)"/><text x="176.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="173" y="308" width="4" height="15" fill="rgb(218,112,38)"/><text x="176.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="173" y="324" width="4" height="15" fill="rgb(240,110,46)"/><text x="176.00" y="334.50"></text></g><g><title>0x7f0bc005bc48 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="173" y="340" width="4" height="15" fill="rgb(224,11,22)"/><text x="176.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="292" width="3" height="15" fill="rgb(250,12,22)"/><text x="180.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="183" y="452" width="4" height="15" fill="rgb(205,172,49)"/><text x="186.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="340" width="7" height="15" fill="rgb(210,16,38)"/><text x="186.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="356" width="7" height="15" fill="rgb(215,100,19)"/><text x="186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="372" width="7" height="15" fill="rgb(216,83,6)"/><text x="186.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="388" width="7" height="15" fill="rgb(217,106,13)"/><text x="186.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="404" width="7" height="15" fill="rgb(248,212,18)"/><text x="186.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="420" width="7" height="15" fill="rgb(233,1,47)"/><text x="186.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="436" width="7" height="15" fill="rgb(222,211,38)"/><text x="186.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="452" width="3" height="15" fill="rgb(221,218,20)"/><text x="190.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="468" width="3" height="15" fill="rgb(241,27,23)"/><text x="190.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="484" width="3" height="15" fill="rgb(209,164,42)"/><text x="190.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="500" width="3" height="15" fill="rgb(218,68,30)"/><text x="190.00" y="510.50"></text></g><g><title>0x7f0bc005aa47 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="190" y="404" width="3" height="15" fill="rgb(218,29,22)"/><text x="193.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="190" y="372" width="6" height="15" fill="rgb(217,119,20)"/><text x="193.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="190" y="388" width="6" height="15" fill="rgb(246,24,39)"/><text x="193.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="193" y="404" width="3" height="15" fill="rgb(226,52,41)"/><text x="196.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="190" y="356" width="10" height="15" fill="rgb(205,31,1)"/><text x="193.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="196" y="372" width="4" height="15" fill="rgb(233,217,26)"/><text x="199.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="356" width="3" height="15" fill="rgb(224,40,29)"/><text x="203.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="372" width="3" height="15" fill="rgb(231,40,17)"/><text x="203.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="388" width="3" height="15" fill="rgb(241,11,13)"/><text x="203.00" y="398.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="203" y="356" width="3" height="15" fill="rgb(212,78,28)"/><text x="206.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.67%)</title><rect x="190" y="340" width="19" height="15" fill="rgb(234,173,40)"/><text x="193.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="206" y="356" width="3" height="15" fill="rgb(209,190,3)"/><text x="209.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="209" y="340" width="4" height="15" fill="rgb(250,199,49)"/><text x="212.00" y="350.50"></text></g><g><title>0x7f0b80091c40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="209" y="356" width="4" height="15" fill="rgb(206,39,45)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="213" y="340" width="3" height="15" fill="rgb(250,5,29)"/><text x="216.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="216" y="340" width="3" height="15" fill="rgb(224,158,32)"/><text x="219.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="219" y="340" width="7" height="15" fill="rgb(242,174,51)"/><text x="222.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="219" y="356" width="7" height="15" fill="rgb(248,170,6)"/><text x="222.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="219" y="372" width="7" height="15" fill="rgb(210,19,21)"/><text x="222.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="226" y="340" width="3" height="15" fill="rgb(216,184,19)"/><text x="229.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="226" y="356" width="3" height="15" fill="rgb(210,180,7)"/><text x="229.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="356" width="7" height="15" fill="rgb(231,156,2)"/><text x="232.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="372" width="7" height="15" fill="rgb(205,0,43)"/><text x="232.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="388" width="7" height="15" fill="rgb(212,177,11)"/><text x="232.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="404" width="7" height="15" fill="rgb(237,11,14)"/><text x="232.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="420" width="7" height="15" fill="rgb(229,193,38)"/><text x="232.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="229" y="436" width="7" height="15" fill="rgb(242,205,1)"/><text x="232.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="232" y="452" width="4" height="15" fill="rgb(217,93,48)"/><text x="235.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="232" y="468" width="4" height="15" fill="rgb(232,220,18)"/><text x="235.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="232" y="484" width="4" height="15" fill="rgb(212,58,33)"/><text x="235.00" y="494.50"></text></g><g><title>0x7f0bc005bc48 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="232" y="500" width="4" height="15" fill="rgb(221,220,52)"/><text x="235.00" y="510.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="236" y="356" width="3" height="15" fill="rgb(212,118,33)"/><text x="239.00" y="366.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="239" y="356" width="7" height="15" fill="rgb(247,8,14)"/><text x="242.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="242" y="372" width="4" height="15" fill="rgb(249,30,33)"/><text x="245.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="242" y="388" width="4" height="15" fill="rgb(220,83,26)"/><text x="245.00" y="398.50"></text></g><g><title>0x7f0bc01c4cb5 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="249" y="372" width="3" height="15" fill="rgb(236,69,31)"/><text x="252.00" y="382.50"></text></g><g><title>0x7f0bc01c4d19 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="252" y="372" width="3" height="15" fill="rgb(229,201,9)"/><text x="255.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (4 samples, 1.11%)</title><rect x="246" y="356" width="13" height="15" fill="rgb(205,92,46)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f0bc01c4d47 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="255" y="372" width="4" height="15" fill="rgb(212,116,41)"/><text x="258.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.78%)</title><rect x="229" y="340" width="33" height="15" fill="rgb(205,65,42)"/><text x="232.00" y="350.50">on..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="259" y="356" width="3" height="15" fill="rgb(228,222,32)"/><text x="262.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 7.22%)</title><rect x="180" y="308" width="85" height="15" fill="rgb(227,213,39)"/><text x="183.00" y="318.50">onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 7.22%)</title><rect x="180" y="324" width="85" height="15" fill="rgb(228,181,42)"/><text x="183.00" y="334.50">onnxruntim..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="262" y="340" width="3" height="15" fill="rgb(251,204,44)"/><text x="265.00" y="350.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 7.50%)</title><rect x="180" y="292" width="88" height="15" fill="rgb(247,200,0)"/><text x="183.00" y="302.50">onnxruntim..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="265" y="308" width="3" height="15" fill="rgb(218,88,9)"/><text x="268.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.89%)</title><rect x="167" y="260" width="105" height="15" fill="rgb(232,191,34)"/><text x="170.00" y="270.50">onnxruntime:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.89%)</title><rect x="167" y="276" width="105" height="15" fill="rgb(228,145,48)"/><text x="170.00" y="286.50">onnxruntime:..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="268" y="292" width="4" height="15" fill="rgb(252,29,22)"/><text x="271.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.28%)</title><rect x="268" y="308" width="4" height="15" fill="rgb(221,19,47)"/><text x="271.00" y="318.50"></text></g><g><title>onnxruntime::SequenceType&lt;onnxruntime::TensorSeq&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="272" y="260" width="3" height="15" fill="rgb(213,158,38)"/><text x="275.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="275" y="260" width="7" height="15" fill="rgb(211,200,45)"/><text x="278.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="278" y="276" width="4" height="15" fill="rgb(235,95,34)"/><text x="281.00" y="286.50"></text></g><g><title>0x7f0bc005abcd (libc-2.29.so) (1 samples, 0.28%)</title><rect x="278" y="292" width="4" height="15" fill="rgb(228,2,25)"/><text x="281.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="282" y="308" width="3" height="15" fill="rgb(228,94,50)"/><text x="285.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.28%)</title><rect x="282" y="324" width="3" height="15" fill="rgb(252,112,15)"/><text x="285.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="282" y="340" width="3" height="15" fill="rgb(230,123,43)"/><text x="285.00" y="350.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="282" y="260" width="6" height="15" fill="rgb(234,41,34)"/><text x="285.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.56%)</title><rect x="282" y="276" width="6" height="15" fill="rgb(213,124,16)"/><text x="285.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.56%)</title><rect x="282" y="292" width="6" height="15" fill="rgb(237,76,30)"/><text x="285.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="285" y="308" width="3" height="15" fill="rgb(215,196,53)"/><text x="288.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="288" y="260" width="3" height="15" fill="rgb(215,123,14)"/><text x="291.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="288" y="276" width="3" height="15" fill="rgb(253,93,49)"/><text x="291.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="291" y="260" width="7" height="15" fill="rgb(224,229,29)"/><text x="294.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 11.94%)</title><rect x="160" y="244" width="141" height="15" fill="rgb(212,34,39)"/><text x="163.00" y="254.50">onnxruntime::pyth..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="298" y="260" width="3" height="15" fill="rgb(213,218,51)"/><text x="301.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.83%)</title><rect x="301" y="244" width="10" height="15" fill="rgb(252,109,4)"/><text x="304.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="305" y="260" width="6" height="15" fill="rgb(242,77,48)"/><text x="308.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="311" y="244" width="3" height="15" fill="rgb(230,3,50)"/><text x="314.00" y="254.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="314" y="276" width="4" height="15" fill="rgb(248,200,36)"/><text x="317.00" y="286.50"></text></g><g><title>run (onnxruntime/capi/session.py) (62 samples, 17.22%)</title><rect x="118" y="196" width="203" height="15" fill="rgb(220,118,31)"/><text x="121.00" y="206.50">run (onnxruntime/capi/sess..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 13.61%)</title><rect x="160" y="212" width="161" height="15" fill="rgb(208,80,2)"/><text x="163.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 13.61%)</title><rect x="160" y="228" width="161" height="15" fill="rgb(236,23,4)"/><text x="163.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="314" y="244" width="7" height="15" fill="rgb(232,82,15)"/><text x="317.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="314" y="260" width="7" height="15" fill="rgb(254,157,52)"/><text x="317.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="318" y="276" width="3" height="15" fill="rgb(221,99,26)"/><text x="321.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (77 samples, 21.39%)</title><rect x="72" y="132" width="252" height="15" fill="rgb(225,120,5)"/><text x="75.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (74 samples, 20.56%)</title><rect x="82" y="148" width="242" height="15" fill="rgb(234,190,32)"/><text x="85.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (70 samples, 19.44%)</title><rect x="95" y="164" width="229" height="15" fill="rgb(243,143,31)"/><text x="98.00" y="174.50">_run_whole_runtime (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (65 samples, 18.06%)</title><rect x="111" y="180" width="213" height="15" fill="rgb(222,152,42)"/><text x="114.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="321" y="196" width="3" height="15" fill="rgb(208,2,40)"/><text x="324.00" y="206.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (83 samples, 23.06%)</title><rect x="55" y="100" width="272" height="15" fill="rgb(237,188,12)"/><text x="58.00" y="110.50">profile (bench_SVC_poly_b_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 22.78%)</title><rect x="59" y="116" width="268" height="15" fill="rgb(250,6,6)"/><text x="62.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="324" y="132" width="3" height="15" fill="rgb(233,198,12)"/><text x="327.00" y="142.50"></text></g><g><title>profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (84 samples, 23.33%)</title><rect x="55" y="68" width="276" height="15" fill="rgb(218,142,4)"/><text x="58.00" y="78.50">profile_ort (bench_SVC_poly_b_cl_pro..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (84 samples, 23.33%)</title><rect x="55" y="84" width="276" height="15" fill="rgb(218,106,17)"/><text x="58.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_p..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="327" y="100" width="4" height="15" fill="rgb(245,102,29)"/><text x="330.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="327" y="116" width="4" height="15" fill="rgb(217,204,48)"/><text x="330.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="327" y="132" width="4" height="15" fill="rgb(216,172,34)"/><text x="330.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="327" y="148" width="4" height="15" fill="rgb(227,149,45)"/><text x="330.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="327" y="164" width="4" height="15" fill="rgb(217,118,40)"/><text x="330.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="180" width="4" height="15" fill="rgb(218,103,15)"/><text x="330.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="196" width="4" height="15" fill="rgb(219,163,11)"/><text x="330.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="212" width="4" height="15" fill="rgb(218,74,11)"/><text x="330.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="327" y="228" width="4" height="15" fill="rgb(240,5,5)"/><text x="330.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="244" width="4" height="15" fill="rgb(206,10,26)"/><text x="330.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.28%)</title><rect x="327" y="260" width="4" height="15" fill="rgb(253,206,47)"/><text x="330.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="276" width="4" height="15" fill="rgb(247,71,37)"/><text x="330.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="292" width="4" height="15" fill="rgb(232,112,53)"/><text x="330.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="308" width="4" height="15" fill="rgb(222,125,25)"/><text x="330.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="327" y="324" width="4" height="15" fill="rgb(207,5,6)"/><text x="330.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="327" y="340" width="4" height="15" fill="rgb(241,135,2)"/><text x="330.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.28%)</title><rect x="327" y="356" width="4" height="15" fill="rgb(245,186,4)"/><text x="330.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.28%)</title><rect x="327" y="372" width="4" height="15" fill="rgb(227,193,8)"/><text x="330.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.28%)</title><rect x="327" y="388" width="4" height="15" fill="rgb(206,176,26)"/><text x="330.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.28%)</title><rect x="327" y="404" width="4" height="15" fill="rgb(246,156,33)"/><text x="330.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.28%)</title><rect x="327" y="420" width="4" height="15" fill="rgb(239,5,30)"/><text x="330.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.28%)</title><rect x="327" y="436" width="4" height="15" fill="rgb(213,189,37)"/><text x="330.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.28%)</title><rect x="327" y="452" width="4" height="15" fill="rgb(236,9,50)"/><text x="330.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.28%)</title><rect x="327" y="468" width="4" height="15" fill="rgb(246,30,16)"/><text x="330.00" y="478.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="406" y="180" width="3" height="15" fill="rgb(247,185,25)"/><text x="409.00" y="190.50"></text></g><g><title>0x7f0bc007b120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="504" y="196" width="4" height="15" fill="rgb(226,53,29)"/><text x="507.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.28%)</title><rect x="508" y="196" width="3" height="15" fill="rgb(228,165,2)"/><text x="511.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="534" y="292" width="3" height="15" fill="rgb(247,156,15)"/><text x="537.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.56%)</title><rect x="534" y="260" width="7" height="15" fill="rgb(238,56,13)"/><text x="537.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.56%)</title><rect x="534" y="276" width="7" height="15" fill="rgb(236,12,43)"/><text x="537.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.28%)</title><rect x="537" y="292" width="4" height="15" fill="rgb(250,110,3)"/><text x="540.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.28%)</title><rect x="541" y="260" width="3" height="15" fill="rgb(239,49,49)"/><text x="544.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.39%)</title><rect x="531" y="212" width="16" height="15" fill="rgb(231,182,33)"/><text x="534.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.11%)</title><rect x="534" y="228" width="13" height="15" fill="rgb(241,42,17)"/><text x="537.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 1.11%)</title><rect x="534" y="244" width="13" height="15" fill="rgb(244,22,27)"/><text x="537.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.28%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(226,130,20)"/><text x="547.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="544" y="276" width="3" height="15" fill="rgb(244,174,19)"/><text x="547.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="544" y="292" width="3" height="15" fill="rgb(249,133,32)"/><text x="547.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="544" y="308" width="3" height="15" fill="rgb(236,1,53)"/><text x="547.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.28%)</title><rect x="544" y="324" width="3" height="15" fill="rgb(253,159,15)"/><text x="547.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(248,139,10)"/><text x="547.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.28%)</title><rect x="547" y="212" width="3" height="15" fill="rgb(234,59,0)"/><text x="550.00" y="222.50"></text></g><g><title>0x7f0b811c9c29 (?) (1 samples, 0.28%)</title><rect x="573" y="244" width="4" height="15" fill="rgb(224,75,53)"/><text x="576.00" y="254.50"></text></g><g><title>0x7f0b811d0d9e (?) (1 samples, 0.28%)</title><rect x="573" y="260" width="4" height="15" fill="rgb(248,66,23)"/><text x="576.00" y="270.50"></text></g><g><title>0x7f0b811d0c56 (?) (1 samples, 0.28%)</title><rect x="573" y="276" width="4" height="15" fill="rgb(220,128,10)"/><text x="576.00" y="286.50"></text></g><g><title>0x7f0b811d6ac7 (?) (1 samples, 0.28%)</title><rect x="573" y="292" width="4" height="15" fill="rgb(249,103,8)"/><text x="576.00" y="302.50"></text></g><g><title>0x7f0b811d6328 (?) (1 samples, 0.28%)</title><rect x="573" y="308" width="4" height="15" fill="rgb(237,117,34)"/><text x="576.00" y="318.50"></text></g><g><title>0x7f0b811ce225 (?) (1 samples, 0.28%)</title><rect x="573" y="324" width="4" height="15" fill="rgb(250,58,48)"/><text x="576.00" y="334.50"></text></g><g><title>0x7f0b811cdfc6 (?) (1 samples, 0.28%)</title><rect x="573" y="340" width="4" height="15" fill="rgb(233,188,45)"/><text x="576.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="573" y="356" width="4" height="15" fill="rgb(243,115,38)"/><text x="576.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="573" y="372" width="4" height="15" fill="rgb(241,115,1)"/><text x="576.00" y="382.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="577" y="244" width="3" height="15" fill="rgb(231,88,43)"/><text x="580.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.28%)</title><rect x="580" y="244" width="3" height="15" fill="rgb(234,223,24)"/><text x="583.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.28%)</title><rect x="580" y="260" width="3" height="15" fill="rgb(233,192,27)"/><text x="583.00" y="270.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.28%)</title><rect x="583" y="436" width="3" height="15" fill="rgb(221,183,15)"/><text x="586.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.28%)</title><rect x="583" y="452" width="3" height="15" fill="rgb(232,142,7)"/><text x="586.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.28%)</title><rect x="583" y="468" width="3" height="15" fill="rgb(218,105,51)"/><text x="586.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.28%)</title><rect x="583" y="484" width="3" height="15" fill="rgb(222,112,47)"/><text x="586.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="583" y="500" width="3" height="15" fill="rgb(254,158,40)"/><text x="586.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (1 samples, 0.28%)</title><rect x="590" y="468" width="3" height="15" fill="rgb(254,93,40)"/><text x="593.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (1 samples, 0.28%)</title><rect x="590" y="484" width="3" height="15" fill="rgb(251,131,32)"/><text x="593.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (2 samples, 0.56%)</title><rect x="593" y="468" width="7" height="15" fill="rgb(240,212,33)"/><text x="596.00" y="478.50"></text></g><g><title>0x7f0bc005a91c (libc-2.29.so) (1 samples, 0.28%)</title><rect x="596" y="484" width="4" height="15" fill="rgb(221,161,31)"/><text x="599.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.56%)</title><rect x="600" y="468" width="6" height="15" fill="rgb(221,219,22)"/><text x="603.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.56%)</title><rect x="600" y="484" width="6" height="15" fill="rgb(249,139,48)"/><text x="603.00" y="494.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (8 samples, 2.22%)</title><rect x="583" y="292" width="26" height="15" fill="rgb(235,146,26)"/><text x="586.00" y="302.50">p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (8 samples, 2.22%)</title><rect x="583" y="308" width="26" height="15" fill="rgb(229,168,1)"/><text x="586.00" y="318.50">p..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (8 samples, 2.22%)</title><rect x="583" y="324" width="26" height="15" fill="rgb(224,58,23)"/><text x="586.00" y="334.50">p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (8 samples, 2.22%)</title><rect x="583" y="340" width="26" height="15" fill="rgb(213,121,2)"/><text x="586.00" y="350.50">p..</text></g><g><title>pybind11::array::~array (numpy.h) (8 samples, 2.22%)</title><rect x="583" y="356" width="26" height="15" fill="rgb(219,76,43)"/><text x="586.00" y="366.50">p..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (8 samples, 2.22%)</title><rect x="583" y="372" width="26" height="15" fill="rgb(229,141,26)"/><text x="586.00" y="382.50">p..</text></g><g><title>pybind11::object::~object (pytypes.h) (8 samples, 2.22%)</title><rect x="583" y="388" width="26" height="15" fill="rgb(238,50,25)"/><text x="586.00" y="398.50">p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (8 samples, 2.22%)</title><rect x="583" y="404" width="26" height="15" fill="rgb(242,204,48)"/><text x="586.00" y="414.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (8 samples, 2.22%)</title><rect x="583" y="420" width="26" height="15" fill="rgb(249,47,5)"/><text x="586.00" y="430.50">R..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (7 samples, 1.94%)</title><rect x="586" y="436" width="23" height="15" fill="rgb(231,7,26)"/><text x="589.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (7 samples, 1.94%)</title><rect x="586" y="452" width="23" height="15" fill="rgb(214,129,17)"/><text x="589.00" y="462.50">R..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (1 samples, 0.28%)</title><rect x="606" y="468" width="3" height="15" fill="rgb(230,21,5)"/><text x="609.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.28%)</title><rect x="606" y="484" width="3" height="15" fill="rgb(213,70,43)"/><text x="609.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.28%)</title><rect x="606" y="500" width="3" height="15" fill="rgb(237,122,1)"/><text x="609.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="606" y="516" width="3" height="15" fill="rgb(222,139,38)"/><text x="609.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="606" y="532" width="3" height="15" fill="rgb(227,104,5)"/><text x="609.00" y="542.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.28%)</title><rect x="609" y="340" width="4" height="15" fill="rgb(243,104,19)"/><text x="612.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.28%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(206,226,15)"/><text x="612.00" y="366.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.28%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(238,48,1)"/><text x="612.00" y="382.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (74 samples, 20.56%)</title><rect x="373" y="164" width="243" height="15" fill="rgb(218,93,53)"/><text x="376.00" y="174.50">_run_sequence_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (63 samples, 17.50%)</title><rect x="409" y="180" width="207" height="15" fill="rgb(221,229,15)"/><text x="412.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (32 samples, 8.89%)</title><rect x="511" y="196" width="105" height="15" fill="rgb(252,222,15)"/><text x="514.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 5.56%)</title><rect x="550" y="212" width="66" height="15" fill="rgb(237,7,21)"/><text x="553.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (20 samples, 5.56%)</title><rect x="550" y="228" width="66" height="15" fill="rgb(216,104,5)"/><text x="553.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (10 samples, 2.78%)</title><rect x="583" y="244" width="33" height="15" fill="rgb(206,11,14)"/><text x="586.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (10 samples, 2.78%)</title><rect x="583" y="260" width="33" height="15" fill="rgb(253,152,7)"/><text x="586.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (10 samples, 2.78%)</title><rect x="583" y="276" width="33" height="15" fill="rgb(223,56,5)"/><text x="586.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (2 samples, 0.56%)</title><rect x="609" y="292" width="7" height="15" fill="rgb(247,96,3)"/><text x="612.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (2 samples, 0.56%)</title><rect x="609" y="308" width="7" height="15" fill="rgb(253,79,38)"/><text x="612.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (2 samples, 0.56%)</title><rect x="609" y="324" width="7" height="15" fill="rgb(232,97,46)"/><text x="612.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (1 samples, 0.28%)</title><rect x="613" y="340" width="3" height="15" fill="rgb(226,114,52)"/><text x="616.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (1 samples, 0.28%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(249,137,11)"/><text x="616.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (1 samples, 0.28%)</title><rect x="613" y="372" width="3" height="15" fill="rgb(252,91,21)"/><text x="616.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (1 samples, 0.28%)</title><rect x="613" y="388" width="3" height="15" fill="rgb(220,168,46)"/><text x="616.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.28%)</title><rect x="613" y="404" width="3" height="15" fill="rgb(243,228,8)"/><text x="616.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="613" y="420" width="3" height="15" fill="rgb(212,4,24)"/><text x="616.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="613" y="436" width="3" height="15" fill="rgb(231,87,9)"/><text x="616.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="613" y="452" width="3" height="15" fill="rgb(224,7,31)"/><text x="616.00" y="462.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (88 samples, 24.44%)</title><rect x="331" y="100" width="288" height="15" fill="rgb(210,45,31)"/><text x="334.00" y="110.50">profile (bench_SVC_poly_b_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 24.44%)</title><rect x="331" y="116" width="288" height="15" fill="rgb(242,113,48)"/><text x="334.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (84 samples, 23.33%)</title><rect x="344" y="132" width="275" height="15" fill="rgb(234,40,10)"/><text x="347.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (80 samples, 22.22%)</title><rect x="357" y="148" width="262" height="15" fill="rgb(247,1,0)"/><text x="360.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="616" y="164" width="3" height="15" fill="rgb(247,139,47)"/><text x="619.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="616" y="180" width="3" height="15" fill="rgb(205,140,23)"/><text x="619.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="616" y="196" width="3" height="15" fill="rgb(205,85,7)"/><text x="619.00" y="206.50"></text></g><g><title>profile_pyrt (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (90 samples, 25.00%)</title><rect x="331" y="68" width="295" height="15" fill="rgb(252,13,12)"/><text x="334.00" y="78.50">profile_pyrt (bench_SVC_poly_b_cl_proba..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (90 samples, 25.00%)</title><rect x="331" y="84" width="295" height="15" fill="rgb(219,10,26)"/><text x="334.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_prob..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.56%)</title><rect x="619" y="100" width="7" height="15" fill="rgb(212,141,41)"/><text x="622.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.56%)</title><rect x="619" y="116" width="7" height="15" fill="rgb(245,125,52)"/><text x="622.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.56%)</title><rect x="619" y="132" width="7" height="15" fill="rgb(252,0,53)"/><text x="622.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.56%)</title><rect x="619" y="148" width="7" height="15" fill="rgb(209,170,6)"/><text x="622.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.56%)</title><rect x="619" y="164" width="7" height="15" fill="rgb(230,10,52)"/><text x="622.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.28%)</title><rect x="622" y="180" width="4" height="15" fill="rgb(219,72,4)"/><text x="625.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.28%)</title><rect x="622" y="196" width="4" height="15" fill="rgb(205,36,8)"/><text x="625.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="212" width="4" height="15" fill="rgb(217,73,52)"/><text x="625.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="228" width="4" height="15" fill="rgb(219,21,39)"/><text x="625.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="244" width="4" height="15" fill="rgb(212,223,28)"/><text x="625.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(218,28,17)"/><text x="625.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="276" width="4" height="15" fill="rgb(234,109,30)"/><text x="625.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.28%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(205,8,19)"/><text x="625.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(224,22,1)"/><text x="625.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(208,174,25)"/><text x="625.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="340" width="4" height="15" fill="rgb(209,45,0)"/><text x="625.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="622" y="356" width="4" height="15" fill="rgb(244,101,0)"/><text x="625.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="622" y="372" width="4" height="15" fill="rgb(205,10,2)"/><text x="625.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.28%)</title><rect x="622" y="388" width="4" height="15" fill="rgb(254,190,51)"/><text x="625.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.28%)</title><rect x="622" y="404" width="4" height="15" fill="rgb(222,135,11)"/><text x="625.00" y="414.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.28%)</title><rect x="622" y="420" width="4" height="15" fill="rgb(229,148,13)"/><text x="625.00" y="430.50"></text></g><g><title>0x7f0b9ab4b3fd (?) (1 samples, 0.28%)</title><rect x="662" y="180" width="3" height="15" fill="rgb(213,54,46)"/><text x="665.00" y="190.50"></text></g><g><title>0x7f0b9ab497b4 (?) (1 samples, 0.28%)</title><rect x="662" y="196" width="3" height="15" fill="rgb(239,169,8)"/><text x="665.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="662" y="212" width="3" height="15" fill="rgb(246,82,3)"/><text x="665.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="662" y="228" width="3" height="15" fill="rgb(216,69,54)"/><text x="665.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="662" y="244" width="3" height="15" fill="rgb(210,178,13)"/><text x="665.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.28%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(253,41,51)"/><text x="665.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(221,165,51)"/><text x="665.00" y="286.50"></text></g><g><title>0x7f0b9ab32e12 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="665" y="212" width="3" height="15" fill="rgb(211,186,35)"/><text x="668.00" y="222.50"></text></g><g><title>0x7f0b9ab48d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.39%)</title><rect x="665" y="196" width="16" height="15" fill="rgb(208,90,1)"/><text x="668.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="668" y="212" width="13" height="15" fill="rgb(235,23,44)"/><text x="671.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.11%)</title><rect x="668" y="228" width="13" height="15" fill="rgb(208,155,15)"/><text x="671.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.11%)</title><rect x="668" y="244" width="13" height="15" fill="rgb(226,6,54)"/><text x="671.00" y="254.50"></text></g><g><title>0x7f0bbf27be30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="678" y="260" width="3" height="15" fill="rgb(227,166,29)"/><text x="681.00" y="270.50"></text></g><g><title>0x7f0b9ab48d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="681" y="196" width="7" height="15" fill="rgb(231,57,21)"/><text x="684.00" y="206.50"></text></g><g><title>0x7f0b9ab325ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="681" y="212" width="7" height="15" fill="rgb(212,99,18)"/><text x="684.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="685" y="228" width="3" height="15" fill="rgb(253,9,43)"/><text x="688.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="685" y="244" width="3" height="15" fill="rgb(232,228,15)"/><text x="688.00" y="254.50"></text></g><g><title>0x7f0b9ab48d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="688" y="196" width="3" height="15" fill="rgb(216,147,10)"/><text x="691.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="688" y="212" width="3" height="15" fill="rgb(254,145,40)"/><text x="691.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="688" y="228" width="3" height="15" fill="rgb(250,111,17)"/><text x="691.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="688" y="244" width="3" height="15" fill="rgb(238,186,25)"/><text x="691.00" y="254.50"></text></g><g><title>0x7f0b9ab48de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="691" y="196" width="4" height="15" fill="rgb(226,1,47)"/><text x="694.00" y="206.50"></text></g><g><title>0x7f0b9ab325ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="691" y="212" width="4" height="15" fill="rgb(213,192,28)"/><text x="694.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="691" y="228" width="4" height="15" fill="rgb(210,112,53)"/><text x="694.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="691" y="244" width="4" height="15" fill="rgb(221,157,47)"/><text x="694.00" y="254.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="695" y="212" width="3" height="15" fill="rgb(228,83,44)"/><text x="698.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="695" y="228" width="3" height="15" fill="rgb(240,62,35)"/><text x="698.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="695" y="244" width="3" height="15" fill="rgb(222,138,36)"/><text x="698.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.28%)</title><rect x="695" y="260" width="3" height="15" fill="rgb(237,121,27)"/><text x="698.00" y="270.50"></text></g><g><title>0x7f0b9ab31fa4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="698" y="228" width="3" height="15" fill="rgb(236,122,0)"/><text x="701.00" y="238.50"></text></g><g><title>0x7f0b9ab48e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.83%)</title><rect x="695" y="196" width="9" height="15" fill="rgb(209,155,3)"/><text x="698.00" y="206.50"></text></g><g><title>0x7f0b9ab32f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="698" y="212" width="6" height="15" fill="rgb(233,37,9)"/><text x="701.00" y="222.50"></text></g><g><title>0x7f0b9ab3233c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="701" y="228" width="3" height="15" fill="rgb(235,13,14)"/><text x="704.00" y="238.50"></text></g><g><title>0x7f0b9ab31e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="701" y="244" width="3" height="15" fill="rgb(254,207,44)"/><text x="704.00" y="254.50"></text></g><g><title>0x7f0b9ab48e66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="704" y="196" width="4" height="15" fill="rgb(214,145,9)"/><text x="707.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="704" y="212" width="4" height="15" fill="rgb(225,225,39)"/><text x="707.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="704" y="228" width="4" height="15" fill="rgb(232,175,22)"/><text x="707.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="704" y="244" width="4" height="15" fill="rgb(242,144,32)"/><text x="707.00" y="254.50"></text></g><g><title>0x7f0b9ab48f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="708" y="196" width="6" height="15" fill="rgb(214,194,21)"/><text x="711.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="708" y="212" width="6" height="15" fill="rgb(206,80,31)"/><text x="711.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.56%)</title><rect x="708" y="228" width="6" height="15" fill="rgb(237,147,50)"/><text x="711.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="711" y="244" width="3" height="15" fill="rgb(212,76,50)"/><text x="714.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.28%)</title><rect x="711" y="260" width="3" height="15" fill="rgb(209,48,44)"/><text x="714.00" y="270.50"></text></g><g><title>0x7f0b9ab48f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="714" y="196" width="7" height="15" fill="rgb(241,185,33)"/><text x="717.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="714" y="212" width="7" height="15" fill="rgb(227,179,14)"/><text x="717.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.56%)</title><rect x="714" y="228" width="7" height="15" fill="rgb(226,39,21)"/><text x="717.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.56%)</title><rect x="714" y="244" width="7" height="15" fill="rgb(244,135,29)"/><text x="717.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.56%)</title><rect x="714" y="260" width="7" height="15" fill="rgb(246,204,52)"/><text x="717.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="718" y="276" width="3" height="15" fill="rgb(211,149,14)"/><text x="721.00" y="286.50"></text></g><g><title>0x7f0b9ab48f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="721" y="196" width="6" height="15" fill="rgb(218,99,48)"/><text x="724.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="721" y="212" width="6" height="15" fill="rgb(210,37,34)"/><text x="724.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.56%)</title><rect x="721" y="228" width="6" height="15" fill="rgb(232,69,23)"/><text x="724.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.56%)</title><rect x="721" y="244" width="6" height="15" fill="rgb(213,229,15)"/><text x="724.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.28%)</title><rect x="724" y="260" width="3" height="15" fill="rgb(215,212,28)"/><text x="727.00" y="270.50"></text></g><g><title>0x7f0bc005abd4 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="724" y="276" width="3" height="15" fill="rgb(245,50,35)"/><text x="727.00" y="286.50"></text></g><g><title>0x7f0b9ab490a2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="727" y="196" width="4" height="15" fill="rgb(225,30,41)"/><text x="730.00" y="206.50"></text></g><g><title>0x7f0b9ab490d4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="731" y="196" width="3" height="15" fill="rgb(233,192,0)"/><text x="734.00" y="206.50"></text></g><g><title>0x7f0b9ab49105 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="734" y="196" width="3" height="15" fill="rgb(206,191,46)"/><text x="737.00" y="206.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.56%)</title><rect x="737" y="228" width="7" height="15" fill="rgb(242,42,37)"/><text x="740.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (2 samples, 0.56%)</title><rect x="737" y="244" width="7" height="15" fill="rgb(208,129,49)"/><text x="740.00" y="254.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="744" y="228" width="3" height="15" fill="rgb(251,172,18)"/><text x="747.00" y="238.50"></text></g><g><title>0x7f0b9ab4912f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="737" y="196" width="13" height="15" fill="rgb(208,106,26)"/><text x="740.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (4 samples, 1.11%)</title><rect x="737" y="212" width="13" height="15" fill="rgb(221,166,10)"/><text x="740.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="747" y="228" width="3" height="15" fill="rgb(246,159,3)"/><text x="750.00" y="238.50"></text></g><g><title>0x7f0b9ab49237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="750" y="196" width="7" height="15" fill="rgb(245,209,10)"/><text x="753.00" y="206.50"></text></g><g><title>0x7f0b9ab33ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="750" y="212" width="7" height="15" fill="rgb(246,24,40)"/><text x="753.00" y="222.50"></text></g><g><title>0x7f0b9ab492b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="757" y="196" width="6" height="15" fill="rgb(232,141,12)"/><text x="760.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="757" y="212" width="6" height="15" fill="rgb(251,56,54)"/><text x="760.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.56%)</title><rect x="757" y="228" width="6" height="15" fill="rgb(220,48,2)"/><text x="760.00" y="238.50"></text></g><g><title>0x7f0bc005bc38 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="760" y="244" width="3" height="15" fill="rgb(216,88,28)"/><text x="763.00" y="254.50"></text></g><g><title>0x7f0b9ab49398 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="763" y="196" width="4" height="15" fill="rgb(218,72,7)"/><text x="766.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.56%)</title><rect x="770" y="228" width="7" height="15" fill="rgb(218,26,4)"/><text x="773.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.56%)</title><rect x="770" y="244" width="7" height="15" fill="rgb(233,124,46)"/><text x="773.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="773" y="260" width="4" height="15" fill="rgb(211,176,22)"/><text x="776.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.28%)</title><rect x="773" y="276" width="4" height="15" fill="rgb(251,150,31)"/><text x="776.00" y="286.50"></text></g><g><title>0x7f0bbf27c600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="773" y="292" width="4" height="15" fill="rgb(217,25,33)"/><text x="776.00" y="302.50"></text></g><g><title>0x7f0b9ab4946c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.39%)</title><rect x="767" y="196" width="16" height="15" fill="rgb(222,167,10)"/><text x="770.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (5 samples, 1.39%)</title><rect x="767" y="212" width="16" height="15" fill="rgb(248,138,12)"/><text x="770.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.56%)</title><rect x="777" y="228" width="6" height="15" fill="rgb(211,65,18)"/><text x="780.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.56%)</title><rect x="777" y="244" width="6" height="15" fill="rgb(210,168,47)"/><text x="780.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.56%)</title><rect x="777" y="260" width="6" height="15" fill="rgb(212,54,3)"/><text x="780.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.56%)</title><rect x="777" y="276" width="6" height="15" fill="rgb(209,35,26)"/><text x="780.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (2 samples, 0.56%)</title><rect x="777" y="292" width="6" height="15" fill="rgb(237,115,31)"/><text x="780.00" y="302.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="783" y="244" width="3" height="15" fill="rgb(245,109,27)"/><text x="786.00" y="254.50"></text></g><g><title>_append_char (buffer.c) (2 samples, 0.56%)</title><rect x="790" y="292" width="6" height="15" fill="rgb(249,166,18)"/><text x="793.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="793" y="308" width="3" height="15" fill="rgb(211,135,42)"/><text x="796.00" y="318.50"></text></g><g><title>0x7f0b9ab49528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.39%)</title><rect x="783" y="196" width="16" height="15" fill="rgb(233,168,20)"/><text x="786.00" y="206.50"></text></g><g><title>0x7f0b9ab32e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.39%)</title><rect x="783" y="212" width="16" height="15" fill="rgb(247,148,19)"/><text x="786.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 1.39%)</title><rect x="783" y="228" width="16" height="15" fill="rgb(247,211,50)"/><text x="786.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.11%)</title><rect x="786" y="244" width="13" height="15" fill="rgb(241,78,5)"/><text x="789.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (3 samples, 0.83%)</title><rect x="790" y="260" width="9" height="15" fill="rgb(211,114,41)"/><text x="793.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (3 samples, 0.83%)</title><rect x="790" y="276" width="9" height="15" fill="rgb(232,96,31)"/><text x="793.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.28%)</title><rect x="796" y="292" width="3" height="15" fill="rgb(242,0,13)"/><text x="799.00" y="302.50"></text></g><g><title>0x7f0b9ab4954a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="799" y="196" width="4" height="15" fill="rgb(231,100,18)"/><text x="802.00" y="206.50"></text></g><g><title>0x7f0bc005a91e (libc-2.29.so) (1 samples, 0.28%)</title><rect x="809" y="244" width="4" height="15" fill="rgb(221,81,17)"/><text x="812.00" y="254.50"></text></g><g><title>0x7f0b9ab49553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="803" y="196" width="13" height="15" fill="rgb(221,175,31)"/><text x="806.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="803" y="212" width="13" height="15" fill="rgb(249,203,15)"/><text x="806.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="803" y="228" width="13" height="15" fill="rgb(226,195,52)"/><text x="806.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.28%)</title><rect x="813" y="244" width="3" height="15" fill="rgb(218,14,22)"/><text x="816.00" y="254.50"></text></g><g><title>0x7f0bc022cba0 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="813" y="260" width="3" height="15" fill="rgb(228,224,15)"/><text x="816.00" y="270.50"></text></g><g><title>0x7f0b9ab4955e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="816" y="196" width="3" height="15" fill="rgb(238,157,44)"/><text x="819.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="816" y="212" width="3" height="15" fill="rgb(252,157,42)"/><text x="819.00" y="222.50"></text></g><g><title>0x7f0b9ab49791 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="819" y="196" width="3" height="15" fill="rgb(205,43,14)"/><text x="822.00" y="206.50"></text></g><g><title>0x7f0b9ab497b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.11%)</title><rect x="822" y="196" width="14" height="15" fill="rgb(222,21,20)"/><text x="825.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 1.11%)</title><rect x="822" y="212" width="14" height="15" fill="rgb(241,58,25)"/><text x="825.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (4 samples, 1.11%)</title><rect x="822" y="228" width="14" height="15" fill="rgb(228,219,5)"/><text x="825.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (4 samples, 1.11%)</title><rect x="822" y="244" width="14" height="15" fill="rgb(231,173,2)"/><text x="825.00" y="254.50"></text></g><g><title>0x7f0b9ab49c35 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="836" y="196" width="3" height="15" fill="rgb(254,52,14)"/><text x="839.00" y="206.50"></text></g><g><title>0x7f0b9ab4b3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (54 samples, 15.00%)</title><rect x="665" y="180" width="177" height="15" fill="rgb(236,125,53)"/><text x="668.00" y="190.50">0x7f0b9ab4b3fd (sklearn..</text></g><g><title>0x7f0b9ab4ad06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="839" y="196" width="3" height="15" fill="rgb(224,14,2)"/><text x="842.00" y="206.50"></text></g><g><title>0x7f0b9ab325ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="839" y="212" width="3" height="15" fill="rgb(252,49,6)"/><text x="842.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="839" y="228" width="3" height="15" fill="rgb(213,212,46)"/><text x="842.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="839" y="244" width="3" height="15" fill="rgb(229,96,31)"/><text x="842.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.28%)</title><rect x="839" y="260" width="3" height="15" fill="rgb(254,181,23)"/><text x="842.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.28%)</title><rect x="839" y="276" width="3" height="15" fill="rgb(209,162,32)"/><text x="842.00" y="286.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (61 samples, 16.94%)</title><rect x="645" y="164" width="200" height="15" fill="rgb(228,24,34)"/><text x="648.00" y="174.50">_dense_predict_proba (skle..</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.28%)</title><rect x="842" y="180" width="3" height="15" fill="rgb(244,123,19)"/><text x="845.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.28%)</title><rect x="931" y="196" width="3" height="15" fill="rgb(236,20,12)"/><text x="934.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.83%)</title><rect x="934" y="196" width="10" height="15" fill="rgb(241,59,18)"/><text x="937.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="960" y="212" width="7" height="15" fill="rgb(218,71,20)"/><text x="963.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.28%)</title><rect x="967" y="212" width="3" height="15" fill="rgb(236,99,9)"/><text x="970.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.50%)</title><rect x="944" y="196" width="29" height="15" fill="rgb(215,21,7)"/><text x="947.00" y="206.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="970" y="212" width="3" height="15" fill="rgb(209,204,14)"/><text x="973.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (4 samples, 1.11%)</title><rect x="973" y="196" width="13" height="15" fill="rgb(251,99,39)"/><text x="976.00" y="206.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.28%)</title><rect x="983" y="212" width="3" height="15" fill="rgb(218,226,30)"/><text x="986.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.39%)</title><rect x="986" y="196" width="17" height="15" fill="rgb(233,225,31)"/><text x="989.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.56%)</title><rect x="996" y="212" width="7" height="15" fill="rgb(210,47,22)"/><text x="999.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.28%)</title><rect x="999" y="228" width="4" height="15" fill="rgb(249,126,38)"/><text x="1002.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="1003" y="244" width="3" height="15" fill="rgb(214,91,54)"/><text x="1006.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.56%)</title><rect x="1003" y="196" width="6" height="15" fill="rgb(242,134,28)"/><text x="1006.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.56%)</title><rect x="1003" y="212" width="6" height="15" fill="rgb(228,66,37)"/><text x="1006.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.56%)</title><rect x="1003" y="228" width="6" height="15" fill="rgb(213,27,12)"/><text x="1006.00" y="238.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.28%)</title><rect x="1006" y="244" width="3" height="15" fill="rgb(222,164,39)"/><text x="1009.00" y="254.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.28%)</title><rect x="1006" y="260" width="3" height="15" fill="rgb(233,216,52)"/><text x="1009.00" y="270.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (2 samples, 0.56%)</title><rect x="1016" y="228" width="6" height="15" fill="rgb(231,81,15)"/><text x="1019.00" y="238.50"></text></g><g><title>0x7f0bbf27c2b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="1019" y="244" width="3" height="15" fill="rgb(222,222,20)"/><text x="1022.00" y="254.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="1026" y="308" width="3" height="15" fill="rgb(229,179,8)"/><text x="1029.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1026" y="324" width="3" height="15" fill="rgb(226,70,26)"/><text x="1029.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1029" y="308" width="3" height="15" fill="rgb(227,51,36)"/><text x="1032.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="1032" y="308" width="3" height="15" fill="rgb(213,56,3)"/><text x="1035.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.39%)</title><rect x="1026" y="276" width="16" height="15" fill="rgb(229,128,7)"/><text x="1029.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.39%)</title><rect x="1026" y="292" width="16" height="15" fill="rgb(227,28,35)"/><text x="1029.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (2 samples, 0.56%)</title><rect x="1035" y="308" width="7" height="15" fill="rgb(234,177,32)"/><text x="1038.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (2 samples, 0.56%)</title><rect x="1035" y="324" width="7" height="15" fill="rgb(214,221,10)"/><text x="1038.00" y="334.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (7 samples, 1.94%)</title><rect x="1022" y="228" width="23" height="15" fill="rgb(227,6,24)"/><text x="1025.00" y="238.50">P..</text></g><g><title>PyArray_FromAny (ctors.c) (7 samples, 1.94%)</title><rect x="1022" y="244" width="23" height="15" fill="rgb(254,94,35)"/><text x="1025.00" y="254.50">P..</text></g><g><title>PyArray_FromArray (ctors.c) (6 samples, 1.67%)</title><rect x="1026" y="260" width="19" height="15" fill="rgb(248,226,6)"/><text x="1029.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.28%)</title><rect x="1042" y="276" width="3" height="15" fill="rgb(224,159,38)"/><text x="1045.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="1042" y="292" width="3" height="15" fill="rgb(252,225,50)"/><text x="1045.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="1042" y="308" width="3" height="15" fill="rgb(233,22,6)"/><text x="1045.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="1042" y="324" width="3" height="15" fill="rgb(237,27,31)"/><text x="1045.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1042" y="340" width="3" height="15" fill="rgb(232,214,40)"/><text x="1045.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1042" y="356" width="3" height="15" fill="rgb(252,155,20)"/><text x="1045.00" y="366.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (12 samples, 3.33%)</title><rect x="1009" y="196" width="40" height="15" fill="rgb(246,189,10)"/><text x="1012.00" y="206.50">asa..</text></g><g><title>_array_fromobject (multiarraymodule.c) (12 samples, 3.33%)</title><rect x="1009" y="212" width="40" height="15" fill="rgb(235,16,6)"/><text x="1012.00" y="222.50">_ar..</text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="1045" y="228" width="4" height="15" fill="rgb(230,59,12)"/><text x="1048.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (69 samples, 19.17%)</title><rect x="862" y="180" width="226" height="15" fill="rgb(234,96,13)"/><text x="865.00" y="190.50">check_array (sklearn/utils/va..</text></g><g><title>simplefilter (warnings.py) (12 samples, 3.33%)</title><rect x="1049" y="196" width="39" height="15" fill="rgb(224,44,7)"/><text x="1052.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py) (10 samples, 2.78%)</title><rect x="1055" y="212" width="33" height="15" fill="rgb(211,192,52)"/><text x="1058.00" y="222.50">_a..</text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.39%)</title><rect x="1131" y="212" width="16" height="15" fill="rgb(210,145,52)"/><text x="1134.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (161 samples, 44.72%)</title><rect x="645" y="148" width="528" height="15" fill="rgb(240,193,32)"/><text x="648.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (100 samples, 27.78%)</title><rect x="845" y="164" width="328" height="15" fill="rgb(227,118,52)"/><text x="848.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (26 samples, 7.22%)</title><rect x="1088" y="180" width="85" height="15" fill="rgb(219,141,43)"/><text x="1091.00" y="190.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (21 samples, 5.83%)</title><rect x="1104" y="196" width="69" height="15" fill="rgb(229,102,4)"/><text x="1107.00" y="206.50">&lt;listco..</text></g><g><title>unicode_startswith (python3.7) (8 samples, 2.22%)</title><rect x="1147" y="212" width="26" height="15" fill="rgb(215,67,18)"/><text x="1150.00" y="222.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="1173" y="148" width="3" height="15" fill="rgb(218,128,6)"/><text x="1176.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="1173" y="164" width="3" height="15" fill="rgb(242,216,31)"/><text x="1176.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="1173" y="180" width="3" height="15" fill="rgb(228,35,18)"/><text x="1176.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (165 samples, 45.83%)</title><rect x="645" y="132" width="541" height="15" fill="rgb(216,199,50)"/><text x="648.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (3 samples, 0.83%)</title><rect x="1176" y="148" width="10" height="15" fill="rgb(232,212,6)"/><text x="1179.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (2 samples, 0.56%)</title><rect x="1180" y="164" width="6" height="15" fill="rgb(243,174,36)"/><text x="1183.00" y="174.50"></text></g><g><title>all (360 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(236,99,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (360 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(205,72,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (172 samples, 47.78%)</title><rect x="626" y="68" width="564" height="15" fill="rgb(232,190,16)"/><text x="629.00" y="78.50">profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (172 samples, 47.78%)</title><rect x="626" y="84" width="564" height="15" fill="rgb(205,219,52)"/><text x="629.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.p..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py) (172 samples, 47.78%)</title><rect x="626" y="100" width="564" height="15" fill="rgb(246,23,1)"/><text x="629.00" y="110.50">profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (171 samples, 47.50%)</title><rect x="629" y="116" width="561" height="15" fill="rgb(245,162,17)"/><text x="632.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(224,90,52)"/><text x="1189.00" y="142.50"></text></g></g></svg>