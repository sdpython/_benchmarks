<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2278" onload="init(evt)" viewBox="0 0 1200 2278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2278" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2261.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2261.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:31) (1 samples, 0.23%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(237,199,40)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:11) (1 samples, 0.23%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(238,89,2)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:41) (1 samples, 0.23%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(213,179,24)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.23%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(223,78,3)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.23%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(238,74,49)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.23%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(219,179,31)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:233) (1 samples, 0.23%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(210,38,53)"/><text x="13.00" y="158.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(232,208,18)"/><text x="13.00" y="174.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:28) (1 samples, 0.23%)</title><rect x="12" y="84" width="3" height="15" fill="rgb(228,137,32)"/><text x="15.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.23%)</title><rect x="12" y="100" width="3" height="15" fill="rgb(226,216,21)"/><text x="15.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.23%)</title><rect x="12" y="116" width="3" height="15" fill="rgb(246,176,44)"/><text x="15.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.23%)</title><rect x="12" y="132" width="3" height="15" fill="rgb(214,124,24)"/><text x="15.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="12" y="148" width="3" height="15" fill="rgb(219,190,42)"/><text x="15.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="12" y="164" width="3" height="15" fill="rgb(216,177,7)"/><text x="15.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(246,158,19)"/><text x="15.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(231,6,39)"/><text x="15.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(253,108,26)"/><text x="15.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:11) (1 samples, 0.23%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(249,103,27)"/><text x="15.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(249,220,15)"/><text x="15.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(222,88,41)"/><text x="15.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(236,226,39)"/><text x="15.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(233,228,18)"/><text x="15.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="12" y="308" width="3" height="15" fill="rgb(207,213,31)"/><text x="15.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.47%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(238,195,44)"/><text x="18.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.47%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(247,142,51)"/><text x="18.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.23%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(252,126,5)"/><text x="21.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="18" y="212" width="2" height="15" fill="rgb(215,114,15)"/><text x="21.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.23%)</title><rect x="18" y="228" width="2" height="15" fill="rgb(253,163,0)"/><text x="21.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.23%)</title><rect x="18" y="244" width="2" height="15" fill="rgb(211,58,4)"/><text x="21.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.23%)</title><rect x="18" y="260" width="2" height="15" fill="rgb(234,107,38)"/><text x="21.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="18" y="276" width="2" height="15" fill="rgb(236,192,26)"/><text x="21.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="18" y="292" width="2" height="15" fill="rgb(254,172,2)"/><text x="21.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="18" y="308" width="2" height="15" fill="rgb(238,83,41)"/><text x="21.00" y="318.50"></text></g><g><title>0x7f482d2ad265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="20" y="260" width="3" height="15" fill="rgb(227,206,54)"/><text x="23.00" y="270.50"></text></g><g><title>0x7f482d3b69f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="20" y="276" width="3" height="15" fill="rgb(221,108,27)"/><text x="23.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (2 samples, 0.47%)</title><rect x="20" y="164" width="6" height="15" fill="rgb(246,34,29)"/><text x="23.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="20" y="180" width="6" height="15" fill="rgb(252,168,47)"/><text x="23.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.47%)</title><rect x="20" y="196" width="6" height="15" fill="rgb(215,72,40)"/><text x="23.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.47%)</title><rect x="20" y="212" width="6" height="15" fill="rgb(238,183,32)"/><text x="23.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.47%)</title><rect x="20" y="228" width="6" height="15" fill="rgb(207,12,49)"/><text x="23.00" y="238.50"></text></g><g><title>0x7f482d28c9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="20" y="244" width="6" height="15" fill="rgb(254,181,47)"/><text x="23.00" y="254.50"></text></g><g><title>0x7f482d2ad279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="23" y="260" width="3" height="15" fill="rgb(216,47,43)"/><text x="26.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (5 samples, 1.16%)</title><rect x="15" y="100" width="14" height="15" fill="rgb(223,196,22)"/><text x="18.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 1.16%)</title><rect x="15" y="116" width="14" height="15" fill="rgb(227,85,13)"/><text x="18.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (5 samples, 1.16%)</title><rect x="15" y="132" width="14" height="15" fill="rgb(230,69,49)"/><text x="18.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (5 samples, 1.16%)</title><rect x="15" y="148" width="14" height="15" fill="rgb(205,221,49)"/><text x="18.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.23%)</title><rect x="26" y="164" width="3" height="15" fill="rgb(210,103,41)"/><text x="29.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="26" y="180" width="3" height="15" fill="rgb(251,142,39)"/><text x="29.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="26" y="196" width="3" height="15" fill="rgb(214,193,45)"/><text x="29.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="26" y="212" width="3" height="15" fill="rgb(251,33,4)"/><text x="29.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="26" y="228" width="3" height="15" fill="rgb(208,19,28)"/><text x="29.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="26" y="244" width="3" height="15" fill="rgb(222,96,25)"/><text x="29.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.23%)</title><rect x="26" y="260" width="3" height="15" fill="rgb(241,71,11)"/><text x="29.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.23%)</title><rect x="26" y="276" width="3" height="15" fill="rgb(233,124,50)"/><text x="29.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.23%)</title><rect x="26" y="292" width="3" height="15" fill="rgb(254,144,45)"/><text x="29.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.23%)</title><rect x="37" y="164" width="3" height="15" fill="rgb(221,194,21)"/><text x="40.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.23%)</title><rect x="37" y="180" width="3" height="15" fill="rgb(244,124,14)"/><text x="40.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.23%)</title><rect x="40" y="196" width="2" height="15" fill="rgb(242,64,31)"/><text x="43.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (4 samples, 0.93%)</title><rect x="37" y="148" width="11" height="15" fill="rgb(249,145,41)"/><text x="40.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.70%)</title><rect x="40" y="164" width="8" height="15" fill="rgb(206,27,5)"/><text x="43.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.70%)</title><rect x="40" y="180" width="8" height="15" fill="rgb(230,202,38)"/><text x="43.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.47%)</title><rect x="42" y="196" width="6" height="15" fill="rgb(224,143,45)"/><text x="45.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.23%)</title><rect x="48" y="148" width="3" height="15" fill="rgb(242,124,32)"/><text x="51.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (2 samples, 0.47%)</title><rect x="51" y="180" width="5" height="15" fill="rgb(240,172,32)"/><text x="54.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.47%)</title><rect x="51" y="196" width="5" height="15" fill="rgb(224,103,46)"/><text x="54.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.47%)</title><rect x="51" y="212" width="5" height="15" fill="rgb(235,208,26)"/><text x="54.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.23%)</title><rect x="53" y="228" width="3" height="15" fill="rgb(228,48,18)"/><text x="56.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.23%)</title><rect x="56" y="196" width="3" height="15" fill="rgb(241,190,4)"/><text x="59.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.23%)</title><rect x="59" y="196" width="3" height="15" fill="rgb(240,79,11)"/><text x="62.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.23%)</title><rect x="62" y="196" width="2" height="15" fill="rgb(218,222,9)"/><text x="65.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="62" y="212" width="2" height="15" fill="rgb(237,182,2)"/><text x="65.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.23%)</title><rect x="64" y="212" width="3" height="15" fill="rgb(206,138,32)"/><text x="67.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.47%)</title><rect x="67" y="212" width="6" height="15" fill="rgb(205,69,33)"/><text x="70.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.93%)</title><rect x="64" y="196" width="11" height="15" fill="rgb(214,35,27)"/><text x="67.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.23%)</title><rect x="73" y="212" width="2" height="15" fill="rgb(224,136,32)"/><text x="76.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.47%)</title><rect x="75" y="196" width="6" height="15" fill="rgb(209,183,16)"/><text x="78.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.47%)</title><rect x="75" y="212" width="6" height="15" fill="rgb(214,64,9)"/><text x="78.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.47%)</title><rect x="75" y="228" width="6" height="15" fill="rgb(211,145,1)"/><text x="78.00" y="238.50"></text></g><g><title>0x7f484ae9ce6d (libc-2.29.so) (1 samples, 0.23%)</title><rect x="78" y="244" width="3" height="15" fill="rgb(235,81,42)"/><text x="81.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.23%)</title><rect x="84" y="212" width="2" height="15" fill="rgb(246,38,14)"/><text x="87.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.23%)</title><rect x="86" y="212" width="3" height="15" fill="rgb(238,49,38)"/><text x="89.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.93%)</title><rect x="81" y="196" width="11" height="15" fill="rgb(234,98,46)"/><text x="84.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.23%)</title><rect x="89" y="212" width="3" height="15" fill="rgb(254,225,0)"/><text x="92.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.23%)</title><rect x="92" y="212" width="3" height="15" fill="rgb(228,15,26)"/><text x="95.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.23%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(227,2,17)"/><text x="95.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (3 samples, 0.70%)</title><rect x="95" y="212" width="8" height="15" fill="rgb(211,20,19)"/><text x="98.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (3 samples, 0.70%)</title><rect x="95" y="228" width="8" height="15" fill="rgb(218,105,13)"/><text x="98.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.16%)</title><rect x="92" y="196" width="14" height="15" fill="rgb(214,187,2)"/><text x="95.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.23%)</title><rect x="103" y="212" width="3" height="15" fill="rgb(225,217,2)"/><text x="106.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.23%)</title><rect x="108" y="212" width="3" height="15" fill="rgb(216,116,37)"/><text x="111.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="108" y="228" width="3" height="15" fill="rgb(232,94,10)"/><text x="111.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.70%)</title><rect x="106" y="196" width="8" height="15" fill="rgb(241,14,22)"/><text x="109.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.23%)</title><rect x="111" y="212" width="3" height="15" fill="rgb(248,134,1)"/><text x="114.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.23%)</title><rect x="111" y="228" width="3" height="15" fill="rgb(227,174,38)"/><text x="114.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.23%)</title><rect x="114" y="212" width="3" height="15" fill="rgb(254,153,40)"/><text x="117.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.47%)</title><rect x="117" y="212" width="5" height="15" fill="rgb(235,16,23)"/><text x="120.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.23%)</title><rect x="122" y="212" width="3" height="15" fill="rgb(217,157,42)"/><text x="125.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (27 samples, 6.28%)</title><rect x="56" y="180" width="74" height="15" fill="rgb(229,63,27)"/><text x="59.00" y="190.50">decision..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.40%)</title><rect x="114" y="196" width="16" height="15" fill="rgb(243,156,3)"/><text x="117.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.47%)</title><rect x="125" y="212" width="5" height="15" fill="rgb(245,58,10)"/><text x="128.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.23%)</title><rect x="130" y="180" width="3" height="15" fill="rgb(252,4,11)"/><text x="133.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.23%)</title><rect x="130" y="196" width="3" height="15" fill="rgb(218,184,34)"/><text x="133.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.23%)</title><rect x="130" y="212" width="3" height="15" fill="rgb(218,167,15)"/><text x="133.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.23%)</title><rect x="130" y="228" width="3" height="15" fill="rgb(243,144,28)"/><text x="133.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.23%)</title><rect x="130" y="244" width="3" height="15" fill="rgb(223,156,2)"/><text x="133.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.47%)</title><rect x="133" y="308" width="5" height="15" fill="rgb(249,141,17)"/><text x="136.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.23%)</title><rect x="138" y="308" width="3" height="15" fill="rgb(224,49,12)"/><text x="141.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.93%)</title><rect x="133" y="260" width="11" height="15" fill="rgb(221,115,53)"/><text x="136.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.93%)</title><rect x="133" y="276" width="11" height="15" fill="rgb(220,60,41)"/><text x="136.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.93%)</title><rect x="133" y="292" width="11" height="15" fill="rgb(229,158,21)"/><text x="136.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.23%)</title><rect x="141" y="308" width="3" height="15" fill="rgb(231,117,27)"/><text x="144.00" y="318.50"></text></g><g><title>0x7f484aea6d6f (libc-2.29.so) (1 samples, 0.23%)</title><rect x="141" y="324" width="3" height="15" fill="rgb(218,159,27)"/><text x="144.00" y="334.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.16%)</title><rect x="133" y="196" width="14" height="15" fill="rgb(223,149,30)"/><text x="136.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.16%)</title><rect x="133" y="212" width="14" height="15" fill="rgb(228,229,4)"/><text x="136.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.16%)</title><rect x="133" y="228" width="14" height="15" fill="rgb(238,12,32)"/><text x="136.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.16%)</title><rect x="133" y="244" width="14" height="15" fill="rgb(247,0,38)"/><text x="136.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.23%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(230,106,25)"/><text x="147.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.23%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(211,31,38)"/><text x="147.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.47%)</title><rect x="149" y="212" width="6" height="15" fill="rgb(238,164,42)"/><text x="152.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.42%)</title><rect x="155" y="212" width="52" height="15" fill="rgb(210,43,37)"/><text x="158.00" y="222.50">dgemm..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.23%)</title><rect x="207" y="260" width="3" height="15" fill="rgb(226,163,4)"/><text x="210.00" y="270.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:839) (1 samples, 0.23%)</title><rect x="207" y="276" width="3" height="15" fill="rgb(205,186,54)"/><text x="210.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.23%)</title><rect x="210" y="292" width="3" height="15" fill="rgb(240,6,25)"/><text x="213.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c:34) (1 samples, 0.23%)</title><rect x="210" y="308" width="3" height="15" fill="rgb(221,94,10)"/><text x="213.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (12 samples, 2.79%)</title><rect x="213" y="308" width="33" height="15" fill="rgb(248,131,40)"/><text x="216.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (12 samples, 2.79%)</title><rect x="213" y="324" width="33" height="15" fill="rgb(238,7,26)"/><text x="216.00" y="334.50">_a..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (14 samples, 3.26%)</title><rect x="210" y="276" width="38" height="15" fill="rgb(229,119,1)"/><text x="213.00" y="286.50">npy..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (13 samples, 3.02%)</title><rect x="213" y="292" width="35" height="15" fill="rgb(216,63,34)"/><text x="216.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.23%)</title><rect x="246" y="308" width="2" height="15" fill="rgb(213,119,25)"/><text x="249.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.23%)</title><rect x="246" y="324" width="2" height="15" fill="rgb(248,167,16)"/><text x="249.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="246" y="340" width="2" height="15" fill="rgb(216,180,12)"/><text x="249.00" y="350.50"></text></g><g><title>0x7f484ae3ea00 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="246" y="356" width="2" height="15" fill="rgb(235,94,31)"/><text x="249.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (16 samples, 3.72%)</title><rect x="207" y="244" width="44" height="15" fill="rgb(237,177,7)"/><text x="210.00" y="254.50">PyUF..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (15 samples, 3.49%)</title><rect x="210" y="260" width="41" height="15" fill="rgb(229,202,33)"/><text x="213.00" y="270.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.23%)</title><rect x="248" y="276" width="3" height="15" fill="rgb(233,122,6)"/><text x="251.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.23%)</title><rect x="248" y="292" width="3" height="15" fill="rgb(226,2,35)"/><text x="251.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.23%)</title><rect x="248" y="308" width="3" height="15" fill="rgb(220,129,44)"/><text x="251.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.23%)</title><rect x="251" y="244" width="3" height="15" fill="rgb(243,109,30)"/><text x="254.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:93) (1 samples, 0.23%)</title><rect x="251" y="260" width="3" height="15" fill="rgb(218,61,7)"/><text x="254.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (29 samples, 6.74%)</title><rect x="207" y="212" width="80" height="15" fill="rgb(209,23,48)"/><text x="210.00" y="222.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (29 samples, 6.74%)</title><rect x="207" y="228" width="80" height="15" fill="rgb(218,202,9)"/><text x="210.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 2.79%)</title><rect x="254" y="244" width="33" height="15" fill="rgb(246,124,49)"/><text x="257.00" y="254.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 2.79%)</title><rect x="254" y="260" width="33" height="15" fill="rgb(239,108,50)"/><text x="257.00" y="270.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.79%)</title><rect x="254" y="276" width="33" height="15" fill="rgb(245,202,29)"/><text x="257.00" y="286.50">cb..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.79%)</title><rect x="254" y="292" width="33" height="15" fill="rgb(254,7,11)"/><text x="257.00" y="302.50">dg..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.79%)</title><rect x="254" y="308" width="33" height="15" fill="rgb(232,218,51)"/><text x="257.00" y="318.50">dg..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (87 samples, 20.23%)</title><rect x="51" y="164" width="238" height="15" fill="rgb(208,218,40)"/><text x="54.00" y="174.50">_predict_proba_lr (sklearn/line..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (57 samples, 13.26%)</title><rect x="133" y="180" width="156" height="15" fill="rgb(214,22,45)"/><text x="136.00" y="190.50">decision_function (s..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (52 samples, 12.09%)</title><rect x="147" y="196" width="142" height="15" fill="rgb(239,31,4)"/><text x="150.00" y="206.50">safe_sparse_dot (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.23%)</title><rect x="287" y="212" width="2" height="15" fill="rgb(207,90,31)"/><text x="290.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="292" y="180" width="3" height="15" fill="rgb(206,5,35)"/><text x="295.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="292" y="196" width="3" height="15" fill="rgb(220,101,5)"/><text x="295.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.23%)</title><rect x="292" y="212" width="3" height="15" fill="rgb(244,20,18)"/><text x="295.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.23%)</title><rect x="292" y="228" width="3" height="15" fill="rgb(215,5,40)"/><text x="295.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.23%)</title><rect x="295" y="212" width="3" height="15" fill="rgb(254,93,30)"/><text x="298.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.23%)</title><rect x="295" y="228" width="3" height="15" fill="rgb(246,123,16)"/><text x="298.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.23%)</title><rect x="295" y="244" width="3" height="15" fill="rgb(212,59,39)"/><text x="298.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.23%)</title><rect x="295" y="260" width="3" height="15" fill="rgb(229,207,11)"/><text x="298.00" y="270.50"></text></g><g><title>0x7f484ae86902 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="295" y="276" width="3" height="15" fill="rgb(249,16,48)"/><text x="298.00" y="286.50"></text></g><g><title>0x7f482d28c9a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="298" y="244" width="2" height="15" fill="rgb(254,214,48)"/><text x="301.00" y="254.50"></text></g><g><title>0x7f482d28c9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="300" y="244" width="3" height="15" fill="rgb(240,45,10)"/><text x="303.00" y="254.50"></text></g><g><title>0x7f482d26afe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="303" y="276" width="3" height="15" fill="rgb(224,97,40)"/><text x="306.00" y="286.50"></text></g><g><title>0x7f484afd21b0 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="317" y="292" width="3" height="15" fill="rgb(254,7,41)"/><text x="320.00" y="302.50"></text></g><g><title>0x7f484b058ba5 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="320" y="292" width="2" height="15" fill="rgb(230,37,5)"/><text x="323.00" y="302.50"></text></g><g><title>0x7f484b058be7 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="322" y="292" width="3" height="15" fill="rgb(228,68,1)"/><text x="325.00" y="302.50"></text></g><g><title>0x7f484b058bf9 (libm-2.29.so) (2 samples, 0.47%)</title><rect x="325" y="292" width="6" height="15" fill="rgb(248,222,45)"/><text x="328.00" y="302.50"></text></g><g><title>0x7f484b058c18 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(220,138,33)"/><text x="334.00" y="302.50"></text></g><g><title>0x7f482d2ad265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.02%)</title><rect x="303" y="260" width="36" height="15" fill="rgb(244,210,14)"/><text x="306.00" y="270.50">0x7..</text></g><g><title>exp (libm-2.29.so) (12 samples, 2.79%)</title><rect x="306" y="276" width="33" height="15" fill="rgb(229,18,44)"/><text x="309.00" y="286.50">ex..</text></g><g><title>0x7f484b058c56 (libm-2.29.so) (2 samples, 0.47%)</title><rect x="333" y="292" width="6" height="15" fill="rgb(207,183,9)"/><text x="336.00" y="302.50"></text></g><g><title>0x7f482d28c9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 4.65%)</title><rect x="303" y="244" width="55" height="15" fill="rgb(220,133,41)"/><text x="306.00" y="254.50">0x7f4..</text></g><g><title>0x7f482d2ad279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.63%)</title><rect x="339" y="260" width="19" height="15" fill="rgb(244,174,10)"/><text x="342.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (26 samples, 6.05%)</title><rect x="289" y="164" width="72" height="15" fill="rgb(240,107,13)"/><text x="292.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (24 samples, 5.58%)</title><rect x="295" y="180" width="66" height="15" fill="rgb(224,86,26)"/><text x="298.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (24 samples, 5.58%)</title><rect x="295" y="196" width="66" height="15" fill="rgb(247,219,50)"/><text x="298.00" y="206.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (23 samples, 5.35%)</title><rect x="298" y="212" width="63" height="15" fill="rgb(234,93,29)"/><text x="301.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (23 samples, 5.35%)</title><rect x="298" y="228" width="63" height="15" fill="rgb(216,135,45)"/><text x="301.00" y="238.50">trivia..</text></g><g><title>0x7f482d28c9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="358" y="244" width="3" height="15" fill="rgb(231,180,14)"/><text x="361.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.23%)</title><rect x="361" y="228" width="3" height="15" fill="rgb(207,105,53)"/><text x="364.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="361" y="244" width="3" height="15" fill="rgb(217,60,37)"/><text x="364.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="361" y="260" width="3" height="15" fill="rgb(226,170,37)"/><text x="364.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.23%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(254,222,22)"/><text x="364.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.23%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(205,180,39)"/><text x="364.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.23%)</title><rect x="361" y="308" width="3" height="15" fill="rgb(254,132,8)"/><text x="364.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="361" y="324" width="3" height="15" fill="rgb(224,68,3)"/><text x="364.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.23%)</title><rect x="364" y="260" width="2" height="15" fill="rgb(239,6,24)"/><text x="367.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.23%)</title><rect x="364" y="276" width="2" height="15" fill="rgb(249,114,42)"/><text x="367.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.23%)</title><rect x="364" y="292" width="2" height="15" fill="rgb(239,79,37)"/><text x="367.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.23%)</title><rect x="364" y="308" width="2" height="15" fill="rgb(242,28,19)"/><text x="367.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.23%)</title><rect x="366" y="276" width="3" height="15" fill="rgb(241,164,20)"/><text x="369.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.23%)</title><rect x="366" y="292" width="3" height="15" fill="rgb(248,184,47)"/><text x="369.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.23%)</title><rect x="366" y="308" width="3" height="15" fill="rgb(213,168,29)"/><text x="369.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.23%)</title><rect x="369" y="292" width="3" height="15" fill="rgb(216,154,37)"/><text x="372.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.23%)</title><rect x="372" y="292" width="2" height="15" fill="rgb(254,217,5)"/><text x="375.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (3 samples, 0.70%)</title><rect x="374" y="308" width="9" height="15" fill="rgb(228,164,39)"/><text x="377.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.23%)</title><rect x="383" y="308" width="2" height="15" fill="rgb(233,181,11)"/><text x="386.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.23%)</title><rect x="385" y="324" width="3" height="15" fill="rgb(230,62,30)"/><text x="388.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.23%)</title><rect x="388" y="324" width="3" height="15" fill="rgb(250,23,0)"/><text x="391.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.70%)</title><rect x="385" y="308" width="9" height="15" fill="rgb(218,7,34)"/><text x="388.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.23%)</title><rect x="391" y="324" width="3" height="15" fill="rgb(213,222,31)"/><text x="394.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.23%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(245,145,19)"/><text x="397.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.47%)</title><rect x="396" y="308" width="6" height="15" fill="rgb(228,49,36)"/><text x="399.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (11 samples, 2.56%)</title><rect x="374" y="292" width="31" height="15" fill="rgb(248,116,9)"/><text x="377.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.23%)</title><rect x="402" y="308" width="3" height="15" fill="rgb(210,174,53)"/><text x="405.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 3.95%)</title><rect x="361" y="180" width="46" height="15" fill="rgb(242,205,45)"/><text x="364.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 3.95%)</title><rect x="361" y="196" width="46" height="15" fill="rgb(232,94,3)"/><text x="364.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 3.95%)</title><rect x="361" y="212" width="46" height="15" fill="rgb(239,24,41)"/><text x="364.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (16 samples, 3.72%)</title><rect x="364" y="228" width="43" height="15" fill="rgb(245,41,37)"/><text x="367.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 3.72%)</title><rect x="364" y="244" width="43" height="15" fill="rgb(251,123,33)"/><text x="367.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 3.49%)</title><rect x="366" y="260" width="41" height="15" fill="rgb(237,160,20)"/><text x="369.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 3.26%)</title><rect x="369" y="276" width="38" height="15" fill="rgb(245,71,6)"/><text x="372.00" y="286.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.23%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(231,210,37)"/><text x="408.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.23%)</title><rect x="407" y="244" width="3" height="15" fill="rgb(221,102,44)"/><text x="410.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.23%)</title><rect x="407" y="260" width="3" height="15" fill="rgb(253,209,11)"/><text x="410.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.47%)</title><rect x="407" y="228" width="6" height="15" fill="rgb(251,56,40)"/><text x="410.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.23%)</title><rect x="410" y="244" width="3" height="15" fill="rgb(232,37,19)"/><text x="413.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.23%)</title><rect x="410" y="260" width="3" height="15" fill="rgb(243,23,14)"/><text x="413.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.23%)</title><rect x="410" y="276" width="3" height="15" fill="rgb(232,81,25)"/><text x="413.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.23%)</title><rect x="410" y="292" width="3" height="15" fill="rgb(211,195,32)"/><text x="413.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:675) (1 samples, 0.23%)</title><rect x="410" y="308" width="3" height="15" fill="rgb(207,93,52)"/><text x="413.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.23%)</title><rect x="413" y="228" width="3" height="15" fill="rgb(215,203,51)"/><text x="416.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.23%)</title><rect x="413" y="244" width="3" height="15" fill="rgb(241,155,47)"/><text x="416.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.23%)</title><rect x="413" y="260" width="3" height="15" fill="rgb(247,28,44)"/><text x="416.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.23%)</title><rect x="413" y="276" width="3" height="15" fill="rgb(224,83,4)"/><text x="416.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.23%)</title><rect x="413" y="292" width="3" height="15" fill="rgb(231,70,28)"/><text x="416.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:38) (152 samples, 35.35%)</title><rect x="12" y="52" width="417" height="15" fill="rgb(248,224,34)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solver..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:37) (152 samples, 35.35%)</title><rect x="12" y="68" width="417" height="15" fill="rgb(241,26,49)"/><text x="15.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (151 samples, 35.12%)</title><rect x="15" y="84" width="414" height="15" fill="rgb(213,29,44)"/><text x="18.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (146 samples, 33.95%)</title><rect x="29" y="100" width="400" height="15" fill="rgb(245,73,4)"/><text x="32.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (146 samples, 33.95%)</title><rect x="29" y="116" width="400" height="15" fill="rgb(247,219,23)"/><text x="32.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (144 samples, 33.49%)</title><rect x="34" y="132" width="395" height="15" fill="rgb(252,13,2)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (138 samples, 32.09%)</title><rect x="51" y="148" width="378" height="15" fill="rgb(247,132,51)"/><text x="54.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:16..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (25 samples, 5.81%)</title><rect x="361" y="164" width="68" height="15" fill="rgb(214,40,21)"/><text x="364.00" y="174.50">_predic..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.86%)</title><rect x="407" y="180" width="22" height="15" fill="rgb(238,113,35)"/><text x="410.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.86%)</title><rect x="407" y="196" width="22" height="15" fill="rgb(249,222,6)"/><text x="410.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.86%)</title><rect x="407" y="212" width="22" height="15" fill="rgb(251,12,11)"/><text x="410.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 1.16%)</title><rect x="416" y="228" width="13" height="15" fill="rgb(216,142,24)"/><text x="419.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 1.16%)</title><rect x="416" y="244" width="13" height="15" fill="rgb(219,106,42)"/><text x="419.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 1.16%)</title><rect x="416" y="260" width="13" height="15" fill="rgb(245,204,39)"/><text x="419.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 1.16%)</title><rect x="416" y="276" width="13" height="15" fill="rgb(224,212,9)"/><text x="419.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.16%)</title><rect x="416" y="292" width="13" height="15" fill="rgb(237,146,23)"/><text x="419.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.23%)</title><rect x="429" y="244" width="3" height="15" fill="rgb(235,92,20)"/><text x="432.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(213,142,48)"/><text x="432.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(221,92,17)"/><text x="432.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(238,131,27)"/><text x="432.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(248,159,51)"/><text x="432.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(243,187,12)"/><text x="432.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="429" y="340" width="3" height="15" fill="rgb(244,103,19)"/><text x="432.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="429" y="356" width="3" height="15" fill="rgb(236,55,37)"/><text x="432.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:80) (1 samples, 0.23%)</title><rect x="429" y="372" width="3" height="15" fill="rgb(228,153,42)"/><text x="432.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="429" y="388" width="3" height="15" fill="rgb(211,187,20)"/><text x="432.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="429" y="404" width="3" height="15" fill="rgb(239,113,54)"/><text x="432.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="429" y="420" width="3" height="15" fill="rgb(211,118,34)"/><text x="432.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="429" y="436" width="3" height="15" fill="rgb(253,176,21)"/><text x="432.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="429" y="452" width="3" height="15" fill="rgb(229,146,21)"/><text x="432.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="429" y="468" width="3" height="15" fill="rgb(218,56,18)"/><text x="432.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="429" y="484" width="3" height="15" fill="rgb(213,33,30)"/><text x="432.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/function_base.py:189) (1 samples, 0.23%)</title><rect x="429" y="500" width="3" height="15" fill="rgb(218,229,34)"/><text x="432.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:184) (1 samples, 0.23%)</title><rect x="429" y="516" width="3" height="15" fill="rgb(229,43,52)"/><text x="432.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (2 samples, 0.47%)</title><rect x="429" y="148" width="6" height="15" fill="rgb(219,56,27)"/><text x="432.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="429" y="164" width="6" height="15" fill="rgb(241,16,23)"/><text x="432.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="429" y="180" width="6" height="15" fill="rgb(214,207,14)"/><text x="432.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="429" y="196" width="6" height="15" fill="rgb(228,97,11)"/><text x="432.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="429" y="212" width="6" height="15" fill="rgb(242,108,10)"/><text x="432.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="429" y="228" width="6" height="15" fill="rgb(218,52,48)"/><text x="432.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.23%)</title><rect x="432" y="244" width="3" height="15" fill="rgb(207,5,11)"/><text x="435.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="432" y="260" width="3" height="15" fill="rgb(215,38,19)"/><text x="435.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(240,97,31)"/><text x="435.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="432" y="292" width="3" height="15" fill="rgb(229,55,14)"/><text x="435.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="432" y="308" width="3" height="15" fill="rgb(248,194,23)"/><text x="435.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="432" y="324" width="3" height="15" fill="rgb(240,119,25)"/><text x="435.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="432" y="340" width="3" height="15" fill="rgb(243,134,29)"/><text x="435.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="432" y="356" width="3" height="15" fill="rgb(225,167,6)"/><text x="435.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:12) (1 samples, 0.23%)</title><rect x="432" y="372" width="3" height="15" fill="rgb(210,38,43)"/><text x="435.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="432" y="388" width="3" height="15" fill="rgb(239,138,22)"/><text x="435.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="432" y="404" width="3" height="15" fill="rgb(248,160,0)"/><text x="435.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="432" y="420" width="3" height="15" fill="rgb(237,26,22)"/><text x="435.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="432" y="436" width="3" height="15" fill="rgb(252,63,29)"/><text x="435.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="432" y="452" width="3" height="15" fill="rgb(237,129,30)"/><text x="435.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/nanfunctions.py:460) (1 samples, 0.23%)</title><rect x="432" y="468" width="3" height="15" fill="rgb(243,181,46)"/><text x="435.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.23%)</title><rect x="432" y="484" width="3" height="15" fill="rgb(234,101,39)"/><text x="435.00" y="494.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (1 samples, 0.23%)</title><rect x="435" y="148" width="3" height="15" fill="rgb(227,74,35)"/><text x="438.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="164" width="3" height="15" fill="rgb(240,124,50)"/><text x="438.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="435" y="180" width="3" height="15" fill="rgb(254,56,24)"/><text x="438.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="196" width="3" height="15" fill="rgb(225,87,47)"/><text x="438.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="212" width="3" height="15" fill="rgb(237,136,50)"/><text x="438.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(252,43,10)"/><text x="438.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(251,97,2)"/><text x="438.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="260" width="3" height="15" fill="rgb(251,111,9)"/><text x="438.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(231,26,2)"/><text x="438.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.23%)</title><rect x="435" y="292" width="3" height="15" fill="rgb(243,219,24)"/><text x="438.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="308" width="3" height="15" fill="rgb(243,96,15)"/><text x="438.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="324" width="3" height="15" fill="rgb(217,154,44)"/><text x="438.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="340" width="3" height="15" fill="rgb(221,152,38)"/><text x="438.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="356" width="3" height="15" fill="rgb(246,224,14)"/><text x="438.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="372" width="3" height="15" fill="rgb(237,134,16)"/><text x="438.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.23%)</title><rect x="435" y="388" width="3" height="15" fill="rgb(251,73,50)"/><text x="438.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="404" width="3" height="15" fill="rgb(205,192,30)"/><text x="438.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="420" width="3" height="15" fill="rgb(252,139,28)"/><text x="438.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="436" width="3" height="15" fill="rgb(219,73,21)"/><text x="438.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="452" width="3" height="15" fill="rgb(213,114,43)"/><text x="438.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="468" width="3" height="15" fill="rgb(228,220,20)"/><text x="438.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.23%)</title><rect x="435" y="484" width="3" height="15" fill="rgb(253,48,9)"/><text x="438.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="500" width="3" height="15" fill="rgb(236,175,4)"/><text x="438.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="516" width="3" height="15" fill="rgb(228,27,47)"/><text x="438.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="532" width="3" height="15" fill="rgb(210,139,51)"/><text x="438.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="548" width="3" height="15" fill="rgb(224,2,3)"/><text x="438.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="564" width="3" height="15" fill="rgb(209,132,33)"/><text x="438.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.23%)</title><rect x="435" y="580" width="3" height="15" fill="rgb(237,93,46)"/><text x="438.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="596" width="3" height="15" fill="rgb(253,195,14)"/><text x="438.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="435" y="612" width="3" height="15" fill="rgb(253,103,8)"/><text x="438.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="628" width="3" height="15" fill="rgb(209,39,24)"/><text x="438.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="644" width="3" height="15" fill="rgb(222,121,7)"/><text x="438.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="660" width="3" height="15" fill="rgb(238,60,4)"/><text x="438.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="676" width="3" height="15" fill="rgb(242,201,37)"/><text x="438.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="692" width="3" height="15" fill="rgb(231,33,25)"/><text x="438.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="708" width="3" height="15" fill="rgb(251,210,23)"/><text x="438.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.23%)</title><rect x="435" y="724" width="3" height="15" fill="rgb(244,18,27)"/><text x="438.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="435" y="740" width="3" height="15" fill="rgb(251,102,7)"/><text x="438.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="435" y="756" width="3" height="15" fill="rgb(205,197,30)"/><text x="438.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="435" y="772" width="3" height="15" fill="rgb(216,142,42)"/><text x="438.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="435" y="788" width="3" height="15" fill="rgb(241,155,12)"/><text x="438.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="435" y="804" width="3" height="15" fill="rgb(240,214,19)"/><text x="438.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.23%)</title><rect x="435" y="820" width="3" height="15" fill="rgb(222,0,36)"/><text x="438.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.23%)</title><rect x="435" y="836" width="3" height="15" fill="rgb(210,210,11)"/><text x="438.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.23%)</title><rect x="435" y="852" width="3" height="15" fill="rgb(229,87,35)"/><text x="438.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.23%)</title><rect x="435" y="868" width="3" height="15" fill="rgb(242,17,22)"/><text x="438.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.23%)</title><rect x="435" y="884" width="3" height="15" fill="rgb(223,80,48)"/><text x="438.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="435" y="900" width="3" height="15" fill="rgb(251,76,23)"/><text x="438.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.23%)</title><rect x="435" y="916" width="3" height="15" fill="rgb(206,196,4)"/><text x="438.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.23%)</title><rect x="435" y="932" width="3" height="15" fill="rgb(235,92,39)"/><text x="438.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.23%)</title><rect x="435" y="948" width="3" height="15" fill="rgb(216,91,54)"/><text x="438.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="435" y="964" width="3" height="15" fill="rgb(233,85,26)"/><text x="438.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="435" y="980" width="3" height="15" fill="rgb(212,78,6)"/><text x="438.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:129) (1 samples, 0.23%)</title><rect x="438" y="484" width="2" height="15" fill="rgb(252,64,25)"/><text x="441.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="438" y="500" width="2" height="15" fill="rgb(222,73,8)"/><text x="441.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="438" y="516" width="2" height="15" fill="rgb(231,56,31)"/><text x="441.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="438" y="532" width="2" height="15" fill="rgb(212,27,17)"/><text x="441.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="438" y="548" width="2" height="15" fill="rgb(251,102,16)"/><text x="441.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.23%)</title><rect x="438" y="564" width="2" height="15" fill="rgb(251,27,33)"/><text x="441.00" y="574.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.23%)</title><rect x="438" y="580" width="2" height="15" fill="rgb(252,214,38)"/><text x="441.00" y="590.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="438" y="596" width="2" height="15" fill="rgb(207,137,16)"/><text x="441.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="440" y="500" width="3" height="15" fill="rgb(235,90,30)"/><text x="443.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="440" y="516" width="3" height="15" fill="rgb(249,227,6)"/><text x="443.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="440" y="532" width="3" height="15" fill="rgb(216,46,38)"/><text x="443.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="440" y="548" width="3" height="15" fill="rgb(218,114,1)"/><text x="443.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="440" y="564" width="3" height="15" fill="rgb(217,196,28)"/><text x="443.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.23%)</title><rect x="440" y="580" width="3" height="15" fill="rgb(251,52,45)"/><text x="443.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="440" y="596" width="3" height="15" fill="rgb(214,14,44)"/><text x="443.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="440" y="612" width="3" height="15" fill="rgb(236,155,4)"/><text x="443.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="440" y="628" width="3" height="15" fill="rgb(253,124,30)"/><text x="443.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="440" y="644" width="3" height="15" fill="rgb(253,95,17)"/><text x="443.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="440" y="660" width="3" height="15" fill="rgb(228,163,52)"/><text x="443.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.23%)</title><rect x="440" y="676" width="3" height="15" fill="rgb(240,5,30)"/><text x="443.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="440" y="692" width="3" height="15" fill="rgb(235,47,38)"/><text x="443.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="440" y="708" width="3" height="15" fill="rgb(236,4,32)"/><text x="443.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="440" y="724" width="3" height="15" fill="rgb(234,52,47)"/><text x="443.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.23%)</title><rect x="440" y="740" width="3" height="15" fill="rgb(236,100,18)"/><text x="443.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="440" y="756" width="3" height="15" fill="rgb(240,176,36)"/><text x="443.00" y="766.50"></text></g><g><title>0x7f48376cc40e (?) (1 samples, 0.23%)</title><rect x="440" y="772" width="3" height="15" fill="rgb(211,6,5)"/><text x="443.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="440" y="788" width="3" height="15" fill="rgb(251,173,31)"/><text x="443.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="440" y="804" width="3" height="15" fill="rgb(254,112,11)"/><text x="443.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="440" y="820" width="3" height="15" fill="rgb(253,95,3)"/><text x="443.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.23%)</title><rect x="440" y="836" width="3" height="15" fill="rgb(245,84,52)"/><text x="443.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="440" y="852" width="3" height="15" fill="rgb(217,162,13)"/><text x="443.00" y="862.50"></text></g><g><title>0x7f4837485104 (?) (1 samples, 0.23%)</title><rect x="440" y="868" width="3" height="15" fill="rgb(214,169,47)"/><text x="443.00" y="878.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.47%)</title><rect x="440" y="484" width="6" height="15" fill="rgb(249,194,15)"/><text x="443.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="443" y="500" width="3" height="15" fill="rgb(251,180,47)"/><text x="446.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="443" y="516" width="3" height="15" fill="rgb(231,93,52)"/><text x="446.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="443" y="532" width="3" height="15" fill="rgb(233,38,17)"/><text x="446.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="443" y="548" width="3" height="15" fill="rgb(228,106,46)"/><text x="446.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="443" y="564" width="3" height="15" fill="rgb(244,178,19)"/><text x="446.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.23%)</title><rect x="443" y="580" width="3" height="15" fill="rgb(228,196,30)"/><text x="446.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="443" y="596" width="3" height="15" fill="rgb(208,127,19)"/><text x="446.00" y="606.50"></text></g><g><title>0x7f4835106890 (pandas/_libs/hashtable.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="443" y="612" width="3" height="15" fill="rgb(244,4,26)"/><text x="446.00" y="622.50"></text></g><g><title>0x7f483510491a (pandas/_libs/hashtable.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="443" y="628" width="3" height="15" fill="rgb(205,135,12)"/><text x="446.00" y="638.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 0.93%)</title><rect x="438" y="292" width="11" height="15" fill="rgb(248,95,11)"/><text x="441.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="438" y="308" width="11" height="15" fill="rgb(247,27,52)"/><text x="441.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="438" y="324" width="11" height="15" fill="rgb(209,163,16)"/><text x="441.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="438" y="340" width="11" height="15" fill="rgb(222,228,50)"/><text x="441.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="438" y="356" width="11" height="15" fill="rgb(206,222,48)"/><text x="441.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="438" y="372" width="11" height="15" fill="rgb(254,99,53)"/><text x="441.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.93%)</title><rect x="438" y="388" width="11" height="15" fill="rgb(231,192,14)"/><text x="441.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.93%)</title><rect x="438" y="404" width="11" height="15" fill="rgb(252,5,53)"/><text x="441.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.93%)</title><rect x="438" y="420" width="11" height="15" fill="rgb(253,49,41)"/><text x="441.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.93%)</title><rect x="438" y="436" width="11" height="15" fill="rgb(220,151,15)"/><text x="441.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.93%)</title><rect x="438" y="452" width="11" height="15" fill="rgb(244,180,18)"/><text x="441.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.93%)</title><rect x="438" y="468" width="11" height="15" fill="rgb(212,202,19)"/><text x="441.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.23%)</title><rect x="446" y="484" width="3" height="15" fill="rgb(227,190,26)"/><text x="449.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="500" width="3" height="15" fill="rgb(221,113,31)"/><text x="449.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="516" width="3" height="15" fill="rgb(251,37,43)"/><text x="449.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="532" width="3" height="15" fill="rgb(213,87,17)"/><text x="449.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="548" width="3" height="15" fill="rgb(217,197,21)"/><text x="449.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="564" width="3" height="15" fill="rgb(244,83,30)"/><text x="449.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.23%)</title><rect x="446" y="580" width="3" height="15" fill="rgb(229,178,45)"/><text x="449.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="596" width="3" height="15" fill="rgb(250,202,3)"/><text x="449.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="612" width="3" height="15" fill="rgb(231,104,10)"/><text x="449.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="628" width="3" height="15" fill="rgb(247,199,8)"/><text x="449.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="644" width="3" height="15" fill="rgb(240,185,3)"/><text x="449.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="660" width="3" height="15" fill="rgb(254,141,19)"/><text x="449.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.23%)</title><rect x="446" y="676" width="3" height="15" fill="rgb(219,144,24)"/><text x="449.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="692" width="3" height="15" fill="rgb(250,224,54)"/><text x="449.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="708" width="3" height="15" fill="rgb(242,61,21)"/><text x="449.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="724" width="3" height="15" fill="rgb(252,229,52)"/><text x="449.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="740" width="3" height="15" fill="rgb(254,42,19)"/><text x="449.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="756" width="3" height="15" fill="rgb(212,43,27)"/><text x="449.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.23%)</title><rect x="446" y="772" width="3" height="15" fill="rgb(224,131,12)"/><text x="449.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="788" width="3" height="15" fill="rgb(213,56,19)"/><text x="449.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="804" width="3" height="15" fill="rgb(212,223,40)"/><text x="449.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="820" width="3" height="15" fill="rgb(239,224,14)"/><text x="449.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="836" width="3" height="15" fill="rgb(248,141,15)"/><text x="449.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="852" width="3" height="15" fill="rgb(236,146,21)"/><text x="449.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.23%)</title><rect x="446" y="868" width="3" height="15" fill="rgb(220,226,40)"/><text x="449.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="884" width="3" height="15" fill="rgb(212,187,13)"/><text x="449.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="900" width="3" height="15" fill="rgb(215,131,26)"/><text x="449.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="916" width="3" height="15" fill="rgb(243,67,30)"/><text x="449.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="932" width="3" height="15" fill="rgb(217,55,48)"/><text x="449.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="948" width="3" height="15" fill="rgb(250,190,6)"/><text x="449.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.23%)</title><rect x="446" y="964" width="3" height="15" fill="rgb(249,166,30)"/><text x="449.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="980" width="3" height="15" fill="rgb(236,72,47)"/><text x="449.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="996" width="3" height="15" fill="rgb(251,141,14)"/><text x="449.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1012" width="3" height="15" fill="rgb(218,146,14)"/><text x="449.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1028" width="3" height="15" fill="rgb(249,146,51)"/><text x="449.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1044" width="3" height="15" fill="rgb(225,121,44)"/><text x="449.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.23%)</title><rect x="446" y="1060" width="3" height="15" fill="rgb(241,146,2)"/><text x="449.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1076" width="3" height="15" fill="rgb(225,39,11)"/><text x="449.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1092" width="3" height="15" fill="rgb(230,217,46)"/><text x="449.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1108" width="3" height="15" fill="rgb(242,120,27)"/><text x="449.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1124" width="3" height="15" fill="rgb(228,225,51)"/><text x="449.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1140" width="3" height="15" fill="rgb(207,1,0)"/><text x="449.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.23%)</title><rect x="446" y="1156" width="3" height="15" fill="rgb(235,138,42)"/><text x="449.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1172" width="3" height="15" fill="rgb(254,149,53)"/><text x="449.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1188" width="3" height="15" fill="rgb(249,82,30)"/><text x="449.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1204" width="3" height="15" fill="rgb(224,61,13)"/><text x="449.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1220" width="3" height="15" fill="rgb(220,203,42)"/><text x="449.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1236" width="3" height="15" fill="rgb(242,4,7)"/><text x="449.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.23%)</title><rect x="446" y="1252" width="3" height="15" fill="rgb(236,137,11)"/><text x="449.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1268" width="3" height="15" fill="rgb(206,217,3)"/><text x="449.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1284" width="3" height="15" fill="rgb(227,21,15)"/><text x="449.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1300" width="3" height="15" fill="rgb(231,185,40)"/><text x="449.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1316" width="3" height="15" fill="rgb(242,21,51)"/><text x="449.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1332" width="3" height="15" fill="rgb(215,146,6)"/><text x="449.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.23%)</title><rect x="446" y="1348" width="3" height="15" fill="rgb(244,193,38)"/><text x="449.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1364" width="3" height="15" fill="rgb(224,201,32)"/><text x="449.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1380" width="3" height="15" fill="rgb(237,166,30)"/><text x="449.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1396" width="3" height="15" fill="rgb(235,12,39)"/><text x="449.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1412" width="3" height="15" fill="rgb(206,86,36)"/><text x="449.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1428" width="3" height="15" fill="rgb(231,31,53)"/><text x="449.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.23%)</title><rect x="446" y="1444" width="3" height="15" fill="rgb(221,177,28)"/><text x="449.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1460" width="3" height="15" fill="rgb(218,176,54)"/><text x="449.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1476" width="3" height="15" fill="rgb(218,95,48)"/><text x="449.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1492" width="3" height="15" fill="rgb(208,114,24)"/><text x="449.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1508" width="3" height="15" fill="rgb(254,77,16)"/><text x="449.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1524" width="3" height="15" fill="rgb(215,11,22)"/><text x="449.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.23%)</title><rect x="446" y="1540" width="3" height="15" fill="rgb(213,210,33)"/><text x="449.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1556" width="3" height="15" fill="rgb(246,222,26)"/><text x="449.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1572" width="3" height="15" fill="rgb(246,220,23)"/><text x="449.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1588" width="3" height="15" fill="rgb(242,130,39)"/><text x="449.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1604" width="3" height="15" fill="rgb(254,206,19)"/><text x="449.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1620" width="3" height="15" fill="rgb(222,63,53)"/><text x="449.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.23%)</title><rect x="446" y="1636" width="3" height="15" fill="rgb(215,172,29)"/><text x="449.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="446" y="1652" width="3" height="15" fill="rgb(218,175,35)"/><text x="449.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="446" y="1668" width="3" height="15" fill="rgb(215,129,53)"/><text x="449.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="446" y="1684" width="3" height="15" fill="rgb(218,114,46)"/><text x="449.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="446" y="1700" width="3" height="15" fill="rgb(224,162,43)"/><text x="449.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="446" y="1716" width="3" height="15" fill="rgb(243,80,0)"/><text x="449.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1654) (1 samples, 0.23%)</title><rect x="446" y="1732" width="3" height="15" fill="rgb(252,103,37)"/><text x="449.00" y="1742.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.23%)</title><rect x="446" y="1748" width="3" height="15" fill="rgb(207,166,12)"/><text x="449.00" y="1758.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.23%)</title><rect x="446" y="1764" width="3" height="15" fill="rgb(212,171,18)"/><text x="449.00" y="1774.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.23%)</title><rect x="446" y="1780" width="3" height="15" fill="rgb(208,229,32)"/><text x="449.00" y="1790.50"></text></g><g><title>getfullargspec (inspect.py:1177) (1 samples, 0.23%)</title><rect x="446" y="1796" width="3" height="15" fill="rgb(252,77,49)"/><text x="449.00" y="1806.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.23%)</title><rect x="446" y="1812" width="3" height="15" fill="rgb(211,178,41)"/><text x="449.00" y="1822.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:23) (1 samples, 0.23%)</title><rect x="449" y="820" width="2" height="15" fill="rgb(253,99,17)"/><text x="452.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="449" y="836" width="2" height="15" fill="rgb(244,194,52)"/><text x="452.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="449" y="852" width="2" height="15" fill="rgb(237,140,34)"/><text x="452.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="449" y="868" width="2" height="15" fill="rgb(251,44,43)"/><text x="452.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="449" y="884" width="2" height="15" fill="rgb(207,127,48)"/><text x="452.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="449" y="900" width="2" height="15" fill="rgb(221,131,27)"/><text x="452.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/exceptions.py:93) (1 samples, 0.23%)</title><rect x="449" y="916" width="2" height="15" fill="rgb(247,66,37)"/><text x="452.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.47%)</title><rect x="449" y="532" width="5" height="15" fill="rgb(218,114,14)"/><text x="452.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="449" y="548" width="5" height="15" fill="rgb(241,36,51)"/><text x="452.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="449" y="564" width="5" height="15" fill="rgb(208,102,29)"/><text x="452.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="449" y="580" width="5" height="15" fill="rgb(235,96,46)"/><text x="452.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="449" y="596" width="5" height="15" fill="rgb(223,204,3)"/><text x="452.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="449" y="612" width="5" height="15" fill="rgb(226,161,36)"/><text x="452.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.47%)</title><rect x="449" y="628" width="5" height="15" fill="rgb(232,130,30)"/><text x="452.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="449" y="644" width="5" height="15" fill="rgb(234,68,22)"/><text x="452.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="449" y="660" width="5" height="15" fill="rgb(211,121,36)"/><text x="452.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="449" y="676" width="5" height="15" fill="rgb(206,134,41)"/><text x="452.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="449" y="692" width="5" height="15" fill="rgb(221,61,49)"/><text x="452.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="449" y="708" width="5" height="15" fill="rgb(247,9,33)"/><text x="452.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.47%)</title><rect x="449" y="724" width="5" height="15" fill="rgb(243,20,0)"/><text x="452.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="449" y="740" width="5" height="15" fill="rgb(222,137,15)"/><text x="452.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="449" y="756" width="5" height="15" fill="rgb(233,83,49)"/><text x="452.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="449" y="772" width="5" height="15" fill="rgb(246,226,29)"/><text x="452.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="449" y="788" width="5" height="15" fill="rgb(215,158,32)"/><text x="452.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="449" y="804" width="5" height="15" fill="rgb(205,124,48)"/><text x="452.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.23%)</title><rect x="451" y="820" width="3" height="15" fill="rgb(231,141,40)"/><text x="454.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="451" y="836" width="3" height="15" fill="rgb(219,47,39)"/><text x="454.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="451" y="852" width="3" height="15" fill="rgb(211,109,53)"/><text x="454.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="451" y="868" width="3" height="15" fill="rgb(220,74,15)"/><text x="454.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="451" y="884" width="3" height="15" fill="rgb(211,184,50)"/><text x="454.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="900" width="3" height="15" fill="rgb(223,38,18)"/><text x="454.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.23%)</title><rect x="451" y="916" width="3" height="15" fill="rgb(219,205,54)"/><text x="454.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="451" y="932" width="3" height="15" fill="rgb(236,221,14)"/><text x="454.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="451" y="948" width="3" height="15" fill="rgb(248,90,36)"/><text x="454.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="451" y="964" width="3" height="15" fill="rgb(226,63,46)"/><text x="454.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="451" y="980" width="3" height="15" fill="rgb(244,127,1)"/><text x="454.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="996" width="3" height="15" fill="rgb(231,98,50)"/><text x="454.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.23%)</title><rect x="451" y="1012" width="3" height="15" fill="rgb(224,224,3)"/><text x="454.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="451" y="1028" width="3" height="15" fill="rgb(222,165,14)"/><text x="454.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="451" y="1044" width="3" height="15" fill="rgb(240,36,36)"/><text x="454.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="451" y="1060" width="3" height="15" fill="rgb(243,189,39)"/><text x="454.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="451" y="1076" width="3" height="15" fill="rgb(210,113,36)"/><text x="454.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="1092" width="3" height="15" fill="rgb(249,138,9)"/><text x="454.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.23%)</title><rect x="451" y="1108" width="3" height="15" fill="rgb(237,222,23)"/><text x="454.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="451" y="1124" width="3" height="15" fill="rgb(217,76,42)"/><text x="454.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="1140" width="3" height="15" fill="rgb(252,48,2)"/><text x="454.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="451" y="1156" width="3" height="15" fill="rgb(235,118,20)"/><text x="454.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="451" y="1172" width="3" height="15" fill="rgb(229,7,38)"/><text x="454.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="451" y="1188" width="3" height="15" fill="rgb(253,36,10)"/><text x="454.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="451" y="1204" width="3" height="15" fill="rgb(225,222,6)"/><text x="454.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="1220" width="3" height="15" fill="rgb(220,120,43)"/><text x="454.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.23%)</title><rect x="451" y="1236" width="3" height="15" fill="rgb(225,40,51)"/><text x="454.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="451" y="1252" width="3" height="15" fill="rgb(254,44,38)"/><text x="454.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="1268" width="3" height="15" fill="rgb(243,108,35)"/><text x="454.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="451" y="1284" width="3" height="15" fill="rgb(211,176,51)"/><text x="454.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="451" y="1300" width="3" height="15" fill="rgb(250,40,25)"/><text x="454.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="451" y="1316" width="3" height="15" fill="rgb(209,186,2)"/><text x="454.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="451" y="1332" width="3" height="15" fill="rgb(225,218,0)"/><text x="454.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="451" y="1348" width="3" height="15" fill="rgb(221,24,14)"/><text x="454.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:435) (1 samples, 0.23%)</title><rect x="451" y="1364" width="3" height="15" fill="rgb(224,90,0)"/><text x="454.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2781) (1 samples, 0.23%)</title><rect x="451" y="1380" width="3" height="15" fill="rgb(224,145,52)"/><text x="454.00" y="1390.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:592) (1 samples, 0.23%)</title><rect x="451" y="1396" width="3" height="15" fill="rgb(251,59,1)"/><text x="454.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.23%)</title><rect x="454" y="964" width="3" height="15" fill="rgb(211,56,31)"/><text x="457.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="454" y="980" width="3" height="15" fill="rgb(239,61,17)"/><text x="457.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="454" y="996" width="3" height="15" fill="rgb(212,99,52)"/><text x="457.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="454" y="1012" width="3" height="15" fill="rgb(216,133,47)"/><text x="457.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="454" y="1028" width="3" height="15" fill="rgb(243,149,7)"/><text x="457.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="454" y="1044" width="3" height="15" fill="rgb(232,114,38)"/><text x="457.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.23%)</title><rect x="454" y="1060" width="3" height="15" fill="rgb(216,193,14)"/><text x="457.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="454" y="1076" width="3" height="15" fill="rgb(225,24,30)"/><text x="457.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="454" y="1092" width="3" height="15" fill="rgb(214,220,50)"/><text x="457.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="454" y="1108" width="3" height="15" fill="rgb(248,125,50)"/><text x="457.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="454" y="1124" width="3" height="15" fill="rgb(205,43,19)"/><text x="457.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="454" y="1140" width="3" height="15" fill="rgb(228,114,36)"/><text x="457.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="454" y="1156" width="3" height="15" fill="rgb(240,167,36)"/><text x="457.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="454" y="1172" width="3" height="15" fill="rgb(246,47,11)"/><text x="457.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="454" y="1188" width="3" height="15" fill="rgb(217,219,43)"/><text x="457.00" y="1198.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:19) (1 samples, 0.23%)</title><rect x="454" y="1204" width="3" height="15" fill="rgb(240,109,31)"/><text x="457.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="454" y="1220" width="3" height="15" fill="rgb(240,196,24)"/><text x="457.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="454" y="1236" width="3" height="15" fill="rgb(243,178,18)"/><text x="457.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="454" y="1252" width="3" height="15" fill="rgb(230,115,6)"/><text x="457.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="454" y="1268" width="3" height="15" fill="rgb(214,94,8)"/><text x="457.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="454" y="1284" width="3" height="15" fill="rgb(247,19,5)"/><text x="457.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="454" y="1300" width="3" height="15" fill="rgb(242,57,28)"/><text x="457.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.23%)</title><rect x="457" y="1060" width="3" height="15" fill="rgb(216,46,31)"/><text x="460.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1076" width="3" height="15" fill="rgb(237,132,25)"/><text x="460.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1092" width="3" height="15" fill="rgb(225,3,34)"/><text x="460.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1108" width="3" height="15" fill="rgb(235,166,47)"/><text x="460.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1124" width="3" height="15" fill="rgb(244,131,29)"/><text x="460.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1140" width="3" height="15" fill="rgb(210,18,6)"/><text x="460.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.23%)</title><rect x="457" y="1156" width="3" height="15" fill="rgb(234,42,46)"/><text x="460.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1172" width="3" height="15" fill="rgb(211,217,9)"/><text x="460.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1188" width="3" height="15" fill="rgb(222,117,17)"/><text x="460.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1204" width="3" height="15" fill="rgb(250,214,9)"/><text x="460.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1220" width="3" height="15" fill="rgb(218,134,4)"/><text x="460.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1236" width="3" height="15" fill="rgb(216,87,44)"/><text x="460.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.23%)</title><rect x="457" y="1252" width="3" height="15" fill="rgb(218,111,27)"/><text x="460.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1268" width="3" height="15" fill="rgb(246,213,53)"/><text x="460.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1284" width="3" height="15" fill="rgb(241,72,6)"/><text x="460.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1300" width="3" height="15" fill="rgb(245,160,9)"/><text x="460.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1316" width="3" height="15" fill="rgb(246,58,16)"/><text x="460.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1332" width="3" height="15" fill="rgb(206,67,30)"/><text x="460.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.23%)</title><rect x="457" y="1348" width="3" height="15" fill="rgb(224,68,34)"/><text x="460.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="457" y="1364" width="3" height="15" fill="rgb(245,66,20)"/><text x="460.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1380" width="3" height="15" fill="rgb(227,8,15)"/><text x="460.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1396" width="3" height="15" fill="rgb(214,62,28)"/><text x="460.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1412" width="3" height="15" fill="rgb(224,23,3)"/><text x="460.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1428" width="3" height="15" fill="rgb(249,104,33)"/><text x="460.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1444" width="3" height="15" fill="rgb(250,5,44)"/><text x="460.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1460" width="3" height="15" fill="rgb(239,47,24)"/><text x="460.00" y="1470.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.23%)</title><rect x="457" y="1476" width="3" height="15" fill="rgb(224,37,15)"/><text x="460.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1492" width="3" height="15" fill="rgb(254,166,53)"/><text x="460.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1508" width="3" height="15" fill="rgb(211,161,17)"/><text x="460.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1524" width="3" height="15" fill="rgb(205,97,17)"/><text x="460.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1540" width="3" height="15" fill="rgb(246,197,10)"/><text x="460.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1556" width="3" height="15" fill="rgb(252,86,37)"/><text x="460.00" y="1566.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.23%)</title><rect x="457" y="1572" width="3" height="15" fill="rgb(241,1,34)"/><text x="460.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1588" width="3" height="15" fill="rgb(251,112,35)"/><text x="460.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1604" width="3" height="15" fill="rgb(245,52,1)"/><text x="460.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1620" width="3" height="15" fill="rgb(241,192,15)"/><text x="460.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1636" width="3" height="15" fill="rgb(222,112,22)"/><text x="460.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1652" width="3" height="15" fill="rgb(251,15,34)"/><text x="460.00" y="1662.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.23%)</title><rect x="457" y="1668" width="3" height="15" fill="rgb(211,30,35)"/><text x="460.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1684" width="3" height="15" fill="rgb(228,170,4)"/><text x="460.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1700" width="3" height="15" fill="rgb(242,51,14)"/><text x="460.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1716" width="3" height="15" fill="rgb(226,112,1)"/><text x="460.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="1732" width="3" height="15" fill="rgb(230,103,14)"/><text x="460.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1748" width="3" height="15" fill="rgb(226,48,2)"/><text x="460.00" y="1758.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.23%)</title><rect x="457" y="1764" width="3" height="15" fill="rgb(246,229,40)"/><text x="460.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="457" y="1780" width="3" height="15" fill="rgb(246,88,3)"/><text x="460.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1796" width="3" height="15" fill="rgb(216,202,22)"/><text x="460.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1812" width="3" height="15" fill="rgb(206,25,41)"/><text x="460.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1828" width="3" height="15" fill="rgb(234,38,2)"/><text x="460.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1844" width="3" height="15" fill="rgb(236,103,25)"/><text x="460.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.23%)</title><rect x="457" y="1860" width="3" height="15" fill="rgb(229,122,20)"/><text x="460.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1876" width="3" height="15" fill="rgb(239,174,5)"/><text x="460.00" y="1886.50"></text></g><g><title>0x7f481a707d1a (?) (1 samples, 0.23%)</title><rect x="457" y="1892" width="3" height="15" fill="rgb(214,224,0)"/><text x="460.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="1908" width="3" height="15" fill="rgb(247,202,47)"/><text x="460.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="1924" width="3" height="15" fill="rgb(223,197,39)"/><text x="460.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="1940" width="3" height="15" fill="rgb(222,97,52)"/><text x="460.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.23%)</title><rect x="457" y="1956" width="3" height="15" fill="rgb(234,26,7)"/><text x="460.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="1972" width="3" height="15" fill="rgb(250,37,49)"/><text x="460.00" y="1982.50"></text></g><g><title>0x7f481a4ca195 (?) (1 samples, 0.23%)</title><rect x="457" y="1988" width="3" height="15" fill="rgb(228,106,20)"/><text x="460.00" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="2004" width="3" height="15" fill="rgb(208,47,32)"/><text x="460.00" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="457" y="2020" width="3" height="15" fill="rgb(222,36,53)"/><text x="460.00" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="2036" width="3" height="15" fill="rgb(209,86,39)"/><text x="460.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="2052" width="3" height="15" fill="rgb(245,174,3)"/><text x="460.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="2068" width="3" height="15" fill="rgb(229,219,6)"/><text x="460.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="2084" width="3" height="15" fill="rgb(212,180,15)"/><text x="460.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="2100" width="3" height="15" fill="rgb(243,13,12)"/><text x="460.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="2116" width="3" height="15" fill="rgb(215,150,6)"/><text x="460.00" y="2126.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.23%)</title><rect x="457" y="2132" width="3" height="15" fill="rgb(216,46,6)"/><text x="460.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="457" y="2148" width="3" height="15" fill="rgb(220,21,46)"/><text x="460.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="457" y="2164" width="3" height="15" fill="rgb(210,39,7)"/><text x="460.00" y="2174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="457" y="2180" width="3" height="15" fill="rgb(210,90,1)"/><text x="460.00" y="2190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="457" y="2196" width="3" height="15" fill="rgb(207,169,38)"/><text x="460.00" y="2206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="457" y="2212" width="3" height="15" fill="rgb(247,218,41)"/><text x="460.00" y="2222.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:41) (1 samples, 0.23%)</title><rect x="457" y="2228" width="3" height="15" fill="rgb(231,199,35)"/><text x="460.00" y="2238.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.47%)</title><rect x="457" y="964" width="5" height="15" fill="rgb(246,218,53)"/><text x="460.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="457" y="980" width="5" height="15" fill="rgb(214,105,22)"/><text x="460.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="457" y="996" width="5" height="15" fill="rgb(237,92,5)"/><text x="460.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="457" y="1012" width="5" height="15" fill="rgb(226,181,34)"/><text x="460.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="457" y="1028" width="5" height="15" fill="rgb(241,167,17)"/><text x="460.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="457" y="1044" width="5" height="15" fill="rgb(238,212,26)"/><text x="460.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:28) (1 samples, 0.23%)</title><rect x="460" y="1060" width="2" height="15" fill="rgb(227,92,8)"/><text x="463.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="460" y="1076" width="2" height="15" fill="rgb(235,136,11)"/><text x="463.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="460" y="1092" width="2" height="15" fill="rgb(231,125,12)"/><text x="463.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="460" y="1108" width="2" height="15" fill="rgb(251,63,0)"/><text x="463.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="460" y="1124" width="2" height="15" fill="rgb(232,219,1)"/><text x="463.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="460" y="1140" width="2" height="15" fill="rgb(217,177,28)"/><text x="463.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/compose/__init__.py:8) (1 samples, 0.23%)</title><rect x="460" y="1156" width="2" height="15" fill="rgb(218,87,48)"/><text x="463.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="460" y="1172" width="2" height="15" fill="rgb(252,139,14)"/><text x="463.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="460" y="1188" width="2" height="15" fill="rgb(210,177,30)"/><text x="463.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="460" y="1204" width="2" height="15" fill="rgb(205,145,18)"/><text x="463.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="460" y="1220" width="2" height="15" fill="rgb(212,202,33)"/><text x="463.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:800) (1 samples, 0.23%)</title><rect x="460" y="1236" width="2" height="15" fill="rgb(223,135,25)"/><text x="463.00" y="1246.50"></text></g><g><title>_check_name_wrapper (&lt;frozen importlib._bootstrap_external&gt;:404) (1 samples, 0.23%)</title><rect x="460" y="1252" width="2" height="15" fill="rgb(218,16,36)"/><text x="463.00" y="1262.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.23%)</title><rect x="462" y="1348" width="3" height="15" fill="rgb(223,13,24)"/><text x="465.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.23%)</title><rect x="462" y="1364" width="3" height="15" fill="rgb(205,179,31)"/><text x="465.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.23%)</title><rect x="462" y="1380" width="3" height="15" fill="rgb(230,139,10)"/><text x="465.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.23%)</title><rect x="462" y="1396" width="3" height="15" fill="rgb(252,55,44)"/><text x="465.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.23%)</title><rect x="462" y="1412" width="3" height="15" fill="rgb(212,82,26)"/><text x="465.00" y="1422.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (11 samples, 2.56%)</title><rect x="438" y="148" width="30" height="15" fill="rgb(226,189,53)"/><text x="441.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.56%)</title><rect x="438" y="164" width="30" height="15" fill="rgb(222,55,46)"/><text x="441.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 2.56%)</title><rect x="438" y="180" width="30" height="15" fill="rgb(245,209,52)"/><text x="441.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.56%)</title><rect x="438" y="196" width="30" height="15" fill="rgb(215,169,46)"/><text x="441.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.56%)</title><rect x="438" y="212" width="30" height="15" fill="rgb(254,141,53)"/><text x="441.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.56%)</title><rect x="438" y="228" width="30" height="15" fill="rgb(252,228,24)"/><text x="441.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.56%)</title><rect x="438" y="244" width="30" height="15" fill="rgb(213,143,42)"/><text x="441.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.56%)</title><rect x="438" y="260" width="30" height="15" fill="rgb(232,2,21)"/><text x="441.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.56%)</title><rect x="438" y="276" width="30" height="15" fill="rgb(206,159,22)"/><text x="441.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 1.63%)</title><rect x="449" y="292" width="19" height="15" fill="rgb(220,204,16)"/><text x="452.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.63%)</title><rect x="449" y="308" width="19" height="15" fill="rgb(245,138,49)"/><text x="452.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.63%)</title><rect x="449" y="324" width="19" height="15" fill="rgb(207,106,29)"/><text x="452.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.63%)</title><rect x="449" y="340" width="19" height="15" fill="rgb(224,102,54)"/><text x="452.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.63%)</title><rect x="449" y="356" width="19" height="15" fill="rgb(205,133,45)"/><text x="452.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.63%)</title><rect x="449" y="372" width="19" height="15" fill="rgb(205,115,46)"/><text x="452.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.63%)</title><rect x="449" y="388" width="19" height="15" fill="rgb(217,14,5)"/><text x="452.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.63%)</title><rect x="449" y="404" width="19" height="15" fill="rgb(230,198,47)"/><text x="452.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.63%)</title><rect x="449" y="420" width="19" height="15" fill="rgb(207,75,38)"/><text x="452.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 1.63%)</title><rect x="449" y="436" width="19" height="15" fill="rgb(250,208,26)"/><text x="452.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.63%)</title><rect x="449" y="452" width="19" height="15" fill="rgb(227,206,8)"/><text x="452.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.63%)</title><rect x="449" y="468" width="19" height="15" fill="rgb(252,21,32)"/><text x="452.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.63%)</title><rect x="449" y="484" width="19" height="15" fill="rgb(207,161,3)"/><text x="452.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.63%)</title><rect x="449" y="500" width="19" height="15" fill="rgb(248,205,33)"/><text x="452.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.63%)</title><rect x="449" y="516" width="19" height="15" fill="rgb(229,72,46)"/><text x="452.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.16%)</title><rect x="454" y="532" width="14" height="15" fill="rgb(220,100,52)"/><text x="457.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="454" y="548" width="14" height="15" fill="rgb(234,180,25)"/><text x="457.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.16%)</title><rect x="454" y="564" width="14" height="15" fill="rgb(230,141,44)"/><text x="457.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.16%)</title><rect x="454" y="580" width="14" height="15" fill="rgb(236,149,34)"/><text x="457.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.16%)</title><rect x="454" y="596" width="14" height="15" fill="rgb(244,144,14)"/><text x="457.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="454" y="612" width="14" height="15" fill="rgb(249,3,34)"/><text x="457.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.16%)</title><rect x="454" y="628" width="14" height="15" fill="rgb(244,39,37)"/><text x="457.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="454" y="644" width="14" height="15" fill="rgb(243,62,48)"/><text x="457.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.16%)</title><rect x="454" y="660" width="14" height="15" fill="rgb(206,33,33)"/><text x="457.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.16%)</title><rect x="454" y="676" width="14" height="15" fill="rgb(210,67,4)"/><text x="457.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.16%)</title><rect x="454" y="692" width="14" height="15" fill="rgb(239,203,30)"/><text x="457.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="454" y="708" width="14" height="15" fill="rgb(249,209,0)"/><text x="457.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.16%)</title><rect x="454" y="724" width="14" height="15" fill="rgb(238,137,48)"/><text x="457.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="454" y="740" width="14" height="15" fill="rgb(239,182,24)"/><text x="457.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.16%)</title><rect x="454" y="756" width="14" height="15" fill="rgb(241,204,4)"/><text x="457.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="454" y="772" width="14" height="15" fill="rgb(207,102,42)"/><text x="457.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="454" y="788" width="14" height="15" fill="rgb(221,184,14)"/><text x="457.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.16%)</title><rect x="454" y="804" width="14" height="15" fill="rgb(208,150,29)"/><text x="457.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.16%)</title><rect x="454" y="820" width="14" height="15" fill="rgb(241,165,27)"/><text x="457.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.16%)</title><rect x="454" y="836" width="14" height="15" fill="rgb(215,96,52)"/><text x="457.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="454" y="852" width="14" height="15" fill="rgb(230,197,22)"/><text x="457.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.16%)</title><rect x="454" y="868" width="14" height="15" fill="rgb(236,121,52)"/><text x="457.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.16%)</title><rect x="454" y="884" width="14" height="15" fill="rgb(211,96,48)"/><text x="457.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.16%)</title><rect x="454" y="900" width="14" height="15" fill="rgb(254,16,26)"/><text x="457.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.16%)</title><rect x="454" y="916" width="14" height="15" fill="rgb(233,197,33)"/><text x="457.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.16%)</title><rect x="454" y="932" width="14" height="15" fill="rgb(244,227,22)"/><text x="457.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.16%)</title><rect x="454" y="948" width="14" height="15" fill="rgb(233,6,40)"/><text x="457.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.47%)</title><rect x="462" y="964" width="6" height="15" fill="rgb(221,67,26)"/><text x="465.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="462" y="980" width="6" height="15" fill="rgb(214,200,24)"/><text x="465.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="462" y="996" width="6" height="15" fill="rgb(237,76,12)"/><text x="465.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="462" y="1012" width="6" height="15" fill="rgb(223,74,19)"/><text x="465.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="462" y="1028" width="6" height="15" fill="rgb(211,67,41)"/><text x="465.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="462" y="1044" width="6" height="15" fill="rgb(244,188,28)"/><text x="465.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="462" y="1060" width="6" height="15" fill="rgb(245,213,10)"/><text x="465.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="462" y="1076" width="6" height="15" fill="rgb(252,56,9)"/><text x="465.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.47%)</title><rect x="462" y="1092" width="6" height="15" fill="rgb(246,113,43)"/><text x="465.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="462" y="1108" width="6" height="15" fill="rgb(208,171,41)"/><text x="465.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="462" y="1124" width="6" height="15" fill="rgb(238,49,44)"/><text x="465.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="462" y="1140" width="6" height="15" fill="rgb(233,127,24)"/><text x="465.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="462" y="1156" width="6" height="15" fill="rgb(209,185,34)"/><text x="465.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="462" y="1172" width="6" height="15" fill="rgb(239,66,51)"/><text x="465.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="462" y="1188" width="6" height="15" fill="rgb(237,219,7)"/><text x="465.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="462" y="1204" width="6" height="15" fill="rgb(217,138,48)"/><text x="465.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.47%)</title><rect x="462" y="1220" width="6" height="15" fill="rgb(223,186,26)"/><text x="465.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="462" y="1236" width="6" height="15" fill="rgb(229,99,26)"/><text x="465.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="462" y="1252" width="6" height="15" fill="rgb(207,218,25)"/><text x="465.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="462" y="1268" width="6" height="15" fill="rgb(232,135,53)"/><text x="465.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="462" y="1284" width="6" height="15" fill="rgb(237,189,29)"/><text x="465.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="462" y="1300" width="6" height="15" fill="rgb(227,44,44)"/><text x="465.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.47%)</title><rect x="462" y="1316" width="6" height="15" fill="rgb(253,147,39)"/><text x="465.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.47%)</title><rect x="462" y="1332" width="6" height="15" fill="rgb(230,115,6)"/><text x="465.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.23%)</title><rect x="465" y="1348" width="3" height="15" fill="rgb(225,22,2)"/><text x="468.00" y="1358.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1364" width="3" height="15" fill="rgb(253,106,40)"/><text x="468.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1380" width="3" height="15" fill="rgb(247,89,21)"/><text x="468.00" y="1390.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1396" width="3" height="15" fill="rgb(211,181,16)"/><text x="468.00" y="1406.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1412" width="3" height="15" fill="rgb(214,57,45)"/><text x="468.00" y="1422.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1428" width="3" height="15" fill="rgb(207,217,54)"/><text x="468.00" y="1438.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="465" y="1444" width="3" height="15" fill="rgb(216,131,29)"/><text x="468.00" y="1454.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="465" y="1460" width="3" height="15" fill="rgb(246,87,5)"/><text x="468.00" y="1470.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="465" y="1476" width="3" height="15" fill="rgb(244,18,14)"/><text x="468.00" y="1486.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:4) (15 samples, 3.49%)</title><rect x="429" y="52" width="42" height="15" fill="rgb(222,189,45)"/><text x="432.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 3.49%)</title><rect x="429" y="68" width="42" height="15" fill="rgb(250,3,54)"/><text x="432.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 3.49%)</title><rect x="429" y="84" width="42" height="15" fill="rgb(217,124,43)"/><text x="432.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 3.49%)</title><rect x="429" y="100" width="42" height="15" fill="rgb(238,226,7)"/><text x="432.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 3.49%)</title><rect x="429" y="116" width="42" height="15" fill="rgb(210,221,16)"/><text x="432.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 3.49%)</title><rect x="429" y="132" width="42" height="15" fill="rgb(245,225,44)"/><text x="432.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (1 samples, 0.23%)</title><rect x="468" y="148" width="3" height="15" fill="rgb(231,214,44)"/><text x="471.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="164" width="3" height="15" fill="rgb(239,101,29)"/><text x="471.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="180" width="3" height="15" fill="rgb(254,163,0)"/><text x="471.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="196" width="3" height="15" fill="rgb(217,91,28)"/><text x="471.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="212" width="3" height="15" fill="rgb(243,70,41)"/><text x="471.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(228,197,54)"/><text x="471.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.23%)</title><rect x="468" y="244" width="3" height="15" fill="rgb(234,143,53)"/><text x="471.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="260" width="3" height="15" fill="rgb(222,18,34)"/><text x="471.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="276" width="3" height="15" fill="rgb(205,77,19)"/><text x="471.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="292" width="3" height="15" fill="rgb(241,145,51)"/><text x="471.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="308" width="3" height="15" fill="rgb(240,115,45)"/><text x="471.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="324" width="3" height="15" fill="rgb(215,91,17)"/><text x="471.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.23%)</title><rect x="468" y="340" width="3" height="15" fill="rgb(239,189,22)"/><text x="471.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="356" width="3" height="15" fill="rgb(227,1,19)"/><text x="471.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="468" y="372" width="3" height="15" fill="rgb(231,108,35)"/><text x="471.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="388" width="3" height="15" fill="rgb(229,62,53)"/><text x="471.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="404" width="3" height="15" fill="rgb(234,88,6)"/><text x="471.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="420" width="3" height="15" fill="rgb(245,105,51)"/><text x="471.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="436" width="3" height="15" fill="rgb(231,128,48)"/><text x="471.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="452" width="3" height="15" fill="rgb(218,123,40)"/><text x="471.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="468" width="3" height="15" fill="rgb(233,51,44)"/><text x="471.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.23%)</title><rect x="468" y="484" width="3" height="15" fill="rgb(231,176,34)"/><text x="471.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="500" width="3" height="15" fill="rgb(250,186,21)"/><text x="471.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="516" width="3" height="15" fill="rgb(237,39,3)"/><text x="471.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="532" width="3" height="15" fill="rgb(229,17,33)"/><text x="471.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="548" width="3" height="15" fill="rgb(242,82,33)"/><text x="471.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="564" width="3" height="15" fill="rgb(245,53,41)"/><text x="471.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.23%)</title><rect x="468" y="580" width="3" height="15" fill="rgb(249,124,51)"/><text x="471.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="596" width="3" height="15" fill="rgb(208,219,12)"/><text x="471.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="612" width="3" height="15" fill="rgb(245,145,36)"/><text x="471.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="628" width="3" height="15" fill="rgb(225,22,30)"/><text x="471.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="644" width="3" height="15" fill="rgb(216,23,17)"/><text x="471.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="660" width="3" height="15" fill="rgb(254,180,47)"/><text x="471.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.23%)</title><rect x="468" y="676" width="3" height="15" fill="rgb(225,202,14)"/><text x="471.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="692" width="3" height="15" fill="rgb(226,63,35)"/><text x="471.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="708" width="3" height="15" fill="rgb(211,198,10)"/><text x="471.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="724" width="3" height="15" fill="rgb(242,170,41)"/><text x="471.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="740" width="3" height="15" fill="rgb(241,100,43)"/><text x="471.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="756" width="3" height="15" fill="rgb(220,229,23)"/><text x="471.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.23%)</title><rect x="468" y="772" width="3" height="15" fill="rgb(254,65,15)"/><text x="471.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="468" y="788" width="3" height="15" fill="rgb(229,95,24)"/><text x="471.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="804" width="3" height="15" fill="rgb(222,176,13)"/><text x="471.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="820" width="3" height="15" fill="rgb(241,133,11)"/><text x="471.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="836" width="3" height="15" fill="rgb(230,198,44)"/><text x="471.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="852" width="3" height="15" fill="rgb(246,180,26)"/><text x="471.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="868" width="3" height="15" fill="rgb(237,119,49)"/><text x="471.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="884" width="3" height="15" fill="rgb(226,80,4)"/><text x="471.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.23%)</title><rect x="468" y="900" width="3" height="15" fill="rgb(206,20,19)"/><text x="471.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="916" width="3" height="15" fill="rgb(205,146,30)"/><text x="471.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="932" width="3" height="15" fill="rgb(231,115,52)"/><text x="471.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="948" width="3" height="15" fill="rgb(212,114,28)"/><text x="471.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="964" width="3" height="15" fill="rgb(226,153,30)"/><text x="471.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="980" width="3" height="15" fill="rgb(229,224,23)"/><text x="471.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.23%)</title><rect x="468" y="996" width="3" height="15" fill="rgb(244,123,23)"/><text x="471.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="1012" width="3" height="15" fill="rgb(223,106,0)"/><text x="471.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="1028" width="3" height="15" fill="rgb(243,92,53)"/><text x="471.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="1044" width="3" height="15" fill="rgb(241,73,11)"/><text x="471.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="1060" width="3" height="15" fill="rgb(223,104,16)"/><text x="471.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="1076" width="3" height="15" fill="rgb(237,146,48)"/><text x="471.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:27) (1 samples, 0.23%)</title><rect x="468" y="1092" width="3" height="15" fill="rgb(250,69,21)"/><text x="471.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="1108" width="3" height="15" fill="rgb(229,92,51)"/><text x="471.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="1124" width="3" height="15" fill="rgb(239,127,32)"/><text x="471.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="1140" width="3" height="15" fill="rgb(223,162,36)"/><text x="471.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="1156" width="3" height="15" fill="rgb(207,205,52)"/><text x="471.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="1172" width="3" height="15" fill="rgb(246,54,51)"/><text x="471.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py:9) (1 samples, 0.23%)</title><rect x="468" y="1188" width="3" height="15" fill="rgb(249,151,28)"/><text x="471.00" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="468" y="1204" width="3" height="15" fill="rgb(232,7,43)"/><text x="471.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="1220" width="3" height="15" fill="rgb(239,58,11)"/><text x="471.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="1236" width="3" height="15" fill="rgb(244,123,8)"/><text x="471.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="468" y="1252" width="3" height="15" fill="rgb(220,81,42)"/><text x="471.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="468" y="1268" width="3" height="15" fill="rgb(232,19,29)"/><text x="471.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="468" y="1284" width="3" height="15" fill="rgb(244,212,34)"/><text x="471.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="468" y="1300" width="3" height="15" fill="rgb(210,93,39)"/><text x="471.00" y="1310.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/__init__.py:7) (1 samples, 0.23%)</title><rect x="468" y="1316" width="3" height="15" fill="rgb(248,204,40)"/><text x="471.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="468" y="1332" width="3" height="15" fill="rgb(252,69,29)"/><text x="471.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.23%)</title><rect x="468" y="1348" width="3" height="15" fill="rgb(211,108,26)"/><text x="471.00" y="1358.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.23%)</title><rect x="468" y="1364" width="3" height="15" fill="rgb(251,220,37)"/><text x="471.00" y="1374.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.23%)</title><rect x="468" y="1380" width="3" height="15" fill="rgb(254,119,6)"/><text x="471.00" y="1390.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.23%)</title><rect x="468" y="1396" width="3" height="15" fill="rgb(252,24,14)"/><text x="471.00" y="1406.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.23%)</title><rect x="468" y="1412" width="3" height="15" fill="rgb(213,149,2)"/><text x="471.00" y="1422.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.23%)</title><rect x="468" y="1428" width="3" height="15" fill="rgb(240,75,39)"/><text x="471.00" y="1438.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;:1447) (1 samples, 0.23%)</title><rect x="468" y="1444" width="3" height="15" fill="rgb(220,161,8)"/><text x="471.00" y="1454.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.23%)</title><rect x="468" y="1460" width="3" height="15" fill="rgb(208,48,51)"/><text x="471.00" y="1470.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.23%)</title><rect x="471" y="180" width="2" height="15" fill="rgb(228,147,53)"/><text x="474.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (2 samples, 0.47%)</title><rect x="471" y="100" width="5" height="15" fill="rgb(213,58,4)"/><text x="474.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.47%)</title><rect x="471" y="116" width="5" height="15" fill="rgb(241,72,4)"/><text x="474.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.47%)</title><rect x="471" y="132" width="5" height="15" fill="rgb(233,26,0)"/><text x="474.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.47%)</title><rect x="471" y="148" width="5" height="15" fill="rgb(246,51,44)"/><text x="474.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.47%)</title><rect x="471" y="164" width="5" height="15" fill="rgb(228,188,17)"/><text x="474.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.23%)</title><rect x="473" y="180" width="3" height="15" fill="rgb(209,3,2)"/><text x="476.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.23%)</title><rect x="473" y="196" width="3" height="15" fill="rgb(246,170,46)"/><text x="476.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.23%)</title><rect x="473" y="212" width="3" height="15" fill="rgb(217,164,50)"/><text x="476.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.23%)</title><rect x="473" y="228" width="3" height="15" fill="rgb(248,208,41)"/><text x="476.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="473" y="244" width="3" height="15" fill="rgb(250,96,53)"/><text x="476.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="473" y="260" width="3" height="15" fill="rgb(220,34,14)"/><text x="476.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.23%)</title><rect x="473" y="276" width="3" height="15" fill="rgb(220,218,18)"/><text x="476.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.23%)</title><rect x="473" y="292" width="3" height="15" fill="rgb(222,57,38)"/><text x="476.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.23%)</title><rect x="473" y="308" width="3" height="15" fill="rgb(244,20,46)"/><text x="476.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.23%)</title><rect x="473" y="324" width="3" height="15" fill="rgb(225,28,27)"/><text x="476.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.23%)</title><rect x="473" y="340" width="3" height="15" fill="rgb(237,201,11)"/><text x="476.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.23%)</title><rect x="490" y="164" width="2" height="15" fill="rgb(220,51,51)"/><text x="493.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.70%)</title><rect x="492" y="180" width="9" height="15" fill="rgb(234,44,45)"/><text x="495.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.23%)</title><rect x="509" y="260" width="3" height="15" fill="rgb(235,158,9)"/><text x="512.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.23%)</title><rect x="512" y="292" width="2" height="15" fill="rgb(223,52,7)"/><text x="515.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.47%)</title><rect x="512" y="260" width="5" height="15" fill="rgb(217,74,47)"/><text x="515.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.47%)</title><rect x="512" y="276" width="5" height="15" fill="rgb(236,163,0)"/><text x="515.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.23%)</title><rect x="514" y="292" width="3" height="15" fill="rgb(236,115,37)"/><text x="517.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.23%)</title><rect x="517" y="260" width="3" height="15" fill="rgb(250,13,47)"/><text x="520.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.23%)</title><rect x="517" y="276" width="3" height="15" fill="rgb(205,86,36)"/><text x="520.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.23%)</title><rect x="517" y="292" width="3" height="15" fill="rgb(215,87,18)"/><text x="520.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.23%)</title><rect x="517" y="308" width="3" height="15" fill="rgb(229,131,25)"/><text x="520.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.23%)</title><rect x="520" y="340" width="3" height="15" fill="rgb(221,122,36)"/><text x="523.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.23%)</title><rect x="520" y="356" width="3" height="15" fill="rgb(253,88,34)"/><text x="523.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.23%)</title><rect x="523" y="388" width="2" height="15" fill="rgb(254,148,31)"/><text x="526.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1485) (1 samples, 0.23%)</title><rect x="523" y="404" width="2" height="15" fill="rgb(251,95,2)"/><text x="526.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.23%)</title><rect x="525" y="404" width="3" height="15" fill="rgb(231,114,36)"/><text x="528.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.23%)</title><rect x="525" y="420" width="3" height="15" fill="rgb(233,213,31)"/><text x="528.00" y="430.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.23%)</title><rect x="525" y="436" width="3" height="15" fill="rgb(242,189,40)"/><text x="528.00" y="446.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.23%)</title><rect x="525" y="452" width="3" height="15" fill="rgb(234,229,7)"/><text x="528.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.70%)</title><rect x="523" y="356" width="8" height="15" fill="rgb(246,69,20)"/><text x="526.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.70%)</title><rect x="523" y="372" width="8" height="15" fill="rgb(234,159,50)"/><text x="526.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.47%)</title><rect x="525" y="388" width="6" height="15" fill="rgb(231,97,23)"/><text x="528.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.23%)</title><rect x="528" y="404" width="3" height="15" fill="rgb(240,8,3)"/><text x="531.00" y="414.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="528" y="420" width="3" height="15" fill="rgb(254,31,51)"/><text x="531.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.23%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(252,46,17)"/><text x="534.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.23%)</title><rect x="531" y="372" width="3" height="15" fill="rgb(224,198,23)"/><text x="534.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.23%)</title><rect x="531" y="388" width="3" height="15" fill="rgb(212,199,12)"/><text x="534.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.23%)</title><rect x="531" y="404" width="3" height="15" fill="rgb(209,24,18)"/><text x="534.00" y="414.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.23%)</title><rect x="531" y="420" width="3" height="15" fill="rgb(236,14,35)"/><text x="534.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.70%)</title><rect x="534" y="388" width="8" height="15" fill="rgb(212,90,40)"/><text x="537.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (3 samples, 0.70%)</title><rect x="534" y="404" width="8" height="15" fill="rgb(210,92,37)"/><text x="537.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.23%)</title><rect x="542" y="388" width="3" height="15" fill="rgb(251,142,1)"/><text x="545.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 1.16%)</title><rect x="534" y="356" width="13" height="15" fill="rgb(208,105,27)"/><text x="537.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 1.16%)</title><rect x="534" y="372" width="13" height="15" fill="rgb(246,162,19)"/><text x="537.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.23%)</title><rect x="545" y="388" width="2" height="15" fill="rgb(228,130,20)"/><text x="548.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.56%)</title><rect x="520" y="260" width="30" height="15" fill="rgb(220,165,3)"/><text x="523.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.56%)</title><rect x="520" y="276" width="30" height="15" fill="rgb(214,9,46)"/><text x="523.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 2.56%)</title><rect x="520" y="292" width="30" height="15" fill="rgb(238,192,2)"/><text x="523.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.56%)</title><rect x="520" y="308" width="30" height="15" fill="rgb(206,150,5)"/><text x="523.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 2.56%)</title><rect x="520" y="324" width="30" height="15" fill="rgb(250,141,29)"/><text x="523.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 2.33%)</title><rect x="523" y="340" width="27" height="15" fill="rgb(207,140,22)"/><text x="526.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.23%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(227,202,53)"/><text x="550.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:675) (1 samples, 0.23%)</title><rect x="547" y="372" width="3" height="15" fill="rgb(207,66,37)"/><text x="550.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.23%)</title><rect x="550" y="276" width="3" height="15" fill="rgb(205,178,4)"/><text x="553.00" y="286.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (19 samples, 4.42%)</title><rect x="503" y="244" width="53" height="15" fill="rgb(219,100,1)"/><text x="506.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="550" y="260" width="6" height="15" fill="rgb(234,98,27)"/><text x="553.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="553" y="276" width="3" height="15" fill="rgb(208,60,29)"/><text x="556.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.23%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(249,31,39)"/><text x="556.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.23%)</title><rect x="553" y="308" width="3" height="15" fill="rgb(221,182,23)"/><text x="556.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.23%)</title><rect x="553" y="324" width="3" height="15" fill="rgb(221,40,6)"/><text x="556.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.23%)</title><rect x="553" y="340" width="3" height="15" fill="rgb(251,104,5)"/><text x="556.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.23%)</title><rect x="553" y="356" width="3" height="15" fill="rgb(226,133,21)"/><text x="556.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.23%)</title><rect x="553" y="372" width="3" height="15" fill="rgb(243,25,40)"/><text x="556.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="558" y="260" width="3" height="15" fill="rgb(211,184,38)"/><text x="561.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="558" y="276" width="3" height="15" fill="rgb(211,210,29)"/><text x="561.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.23%)</title><rect x="558" y="292" width="3" height="15" fill="rgb(252,11,26)"/><text x="561.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.23%)</title><rect x="558" y="308" width="3" height="15" fill="rgb(232,210,53)"/><text x="561.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.23%)</title><rect x="558" y="324" width="3" height="15" fill="rgb(239,194,47)"/><text x="561.00" y="334.50"></text></g><g><title>0x7f484af64130 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="558" y="340" width="3" height="15" fill="rgb(217,63,9)"/><text x="561.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="561" y="276" width="3" height="15" fill="rgb(212,229,30)"/><text x="564.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.23%)</title><rect x="561" y="292" width="3" height="15" fill="rgb(240,123,31)"/><text x="564.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.23%)</title><rect x="564" y="372" width="3" height="15" fill="rgb(225,137,22)"/><text x="567.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.47%)</title><rect x="564" y="308" width="5" height="15" fill="rgb(251,184,9)"/><text x="567.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.47%)</title><rect x="564" y="324" width="5" height="15" fill="rgb(227,77,36)"/><text x="567.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.47%)</title><rect x="564" y="340" width="5" height="15" fill="rgb(231,84,20)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.47%)</title><rect x="564" y="356" width="5" height="15" fill="rgb(214,42,22)"/><text x="567.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.23%)</title><rect x="567" y="372" width="2" height="15" fill="rgb(221,5,37)"/><text x="570.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.70%)</title><rect x="564" y="276" width="8" height="15" fill="rgb(250,35,22)"/><text x="567.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.70%)</title><rect x="564" y="292" width="8" height="15" fill="rgb(252,91,5)"/><text x="567.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="569" y="308" width="3" height="15" fill="rgb(241,182,52)"/><text x="572.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="569" y="324" width="3" height="15" fill="rgb(210,21,18)"/><text x="572.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:229) (1 samples, 0.23%)</title><rect x="569" y="340" width="3" height="15" fill="rgb(220,116,31)"/><text x="572.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.16%)</title><rect x="561" y="260" width="14" height="15" fill="rgb(214,8,10)"/><text x="564.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.23%)</title><rect x="572" y="276" width="3" height="15" fill="rgb(240,11,13)"/><text x="575.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (28 samples, 6.51%)</title><rect x="501" y="196" width="77" height="15" fill="rgb(251,56,40)"/><text x="504.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 6.51%)</title><rect x="501" y="212" width="77" height="15" fill="rgb(205,8,50)"/><text x="504.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (28 samples, 6.51%)</title><rect x="501" y="228" width="77" height="15" fill="rgb(218,23,14)"/><text x="504.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 1.86%)</title><rect x="556" y="244" width="22" height="15" fill="rgb(234,225,30)"/><text x="559.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.23%)</title><rect x="575" y="260" width="3" height="15" fill="rgb(241,0,16)"/><text x="578.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.23%)</title><rect x="575" y="276" width="3" height="15" fill="rgb(217,80,15)"/><text x="578.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.23%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(248,205,6)"/><text x="578.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:242) (1 samples, 0.23%)</title><rect x="586" y="324" width="3" height="15" fill="rgb(217,39,35)"/><text x="589.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:193) (1 samples, 0.23%)</title><rect x="586" y="340" width="3" height="15" fill="rgb(212,166,10)"/><text x="589.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.86%)</title><rect x="586" y="276" width="22" height="15" fill="rgb(243,177,42)"/><text x="589.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (8 samples, 1.86%)</title><rect x="586" y="292" width="22" height="15" fill="rgb(251,140,12)"/><text x="589.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (8 samples, 1.86%)</title><rect x="586" y="308" width="22" height="15" fill="rgb(231,137,33)"/><text x="589.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (7 samples, 1.63%)</title><rect x="589" y="324" width="19" height="15" fill="rgb(211,157,16)"/><text x="592.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (7 samples, 1.63%)</title><rect x="589" y="340" width="19" height="15" fill="rgb(232,31,50)"/><text x="592.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.63%)</title><rect x="589" y="356" width="19" height="15" fill="rgb(249,208,38)"/><text x="592.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.40%)</title><rect x="591" y="372" width="17" height="15" fill="rgb(249,20,1)"/><text x="594.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.40%)</title><rect x="591" y="388" width="17" height="15" fill="rgb(237,197,9)"/><text x="594.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="608" y="276" width="2" height="15" fill="rgb(208,136,24)"/><text x="611.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (47 samples, 10.93%)</title><rect x="578" y="228" width="129" height="15" fill="rgb(224,151,34)"/><text x="581.00" y="238.50">_run (mlprodict/..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (46 samples, 10.70%)</title><rect x="580" y="244" width="127" height="15" fill="rgb(226,118,28)"/><text x="583.00" y="254.50">numpy_dot_inpla..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (46 samples, 10.70%)</title><rect x="580" y="260" width="127" height="15" fill="rgb(220,227,11)"/><text x="583.00" y="270.50">dot (&lt;__array_f..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (35 samples, 8.14%)</title><rect x="610" y="276" width="97" height="15" fill="rgb(244,73,37)"/><text x="613.00" y="286.50">sgemm_kerne..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.23%)</title><rect x="707" y="228" width="2" height="15" fill="rgb(227,141,11)"/><text x="710.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.23%)</title><rect x="709" y="244" width="3" height="15" fill="rgb(249,210,36)"/><text x="712.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.23%)</title><rect x="709" y="260" width="3" height="15" fill="rgb(213,200,54)"/><text x="712.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.23%)</title><rect x="709" y="276" width="3" height="15" fill="rgb(206,129,7)"/><text x="712.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.23%)</title><rect x="709" y="292" width="3" height="15" fill="rgb(217,159,9)"/><text x="712.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.23%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(242,229,43)"/><text x="715.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.23%)</title><rect x="712" y="276" width="3" height="15" fill="rgb(244,126,51)"/><text x="715.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.23%)</title><rect x="712" y="292" width="3" height="15" fill="rgb(221,130,45)"/><text x="715.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.23%)</title><rect x="715" y="340" width="3" height="15" fill="rgb(220,213,50)"/><text x="718.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.23%)</title><rect x="715" y="356" width="3" height="15" fill="rgb(222,85,37)"/><text x="718.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.47%)</title><rect x="715" y="292" width="5" height="15" fill="rgb(220,79,49)"/><text x="718.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.47%)</title><rect x="715" y="308" width="5" height="15" fill="rgb(216,29,50)"/><text x="718.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.47%)</title><rect x="715" y="324" width="5" height="15" fill="rgb(230,68,7)"/><text x="718.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.23%)</title><rect x="718" y="340" width="2" height="15" fill="rgb(248,221,6)"/><text x="721.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 1.16%)</title><rect x="709" y="228" width="14" height="15" fill="rgb(233,145,25)"/><text x="712.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.93%)</title><rect x="712" y="244" width="11" height="15" fill="rgb(237,45,37)"/><text x="715.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.70%)</title><rect x="715" y="260" width="8" height="15" fill="rgb(231,167,0)"/><text x="718.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.70%)</title><rect x="715" y="276" width="8" height="15" fill="rgb(236,186,27)"/><text x="718.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.23%)</title><rect x="720" y="292" width="3" height="15" fill="rgb(212,166,21)"/><text x="723.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="720" y="308" width="3" height="15" fill="rgb(231,64,28)"/><text x="723.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:249) (1 samples, 0.23%)</title><rect x="720" y="324" width="3" height="15" fill="rgb(242,22,10)"/><text x="723.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.23%)</title><rect x="720" y="340" width="3" height="15" fill="rgb(227,164,14)"/><text x="723.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.23%)</title><rect x="723" y="260" width="3" height="15" fill="rgb(235,33,7)"/><text x="726.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.23%)</title><rect x="723" y="276" width="3" height="15" fill="rgb(248,12,10)"/><text x="726.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.23%)</title><rect x="726" y="276" width="2" height="15" fill="rgb(225,137,24)"/><text x="729.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.23%)</title><rect x="726" y="292" width="2" height="15" fill="rgb(236,1,32)"/><text x="729.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.23%)</title><rect x="726" y="308" width="2" height="15" fill="rgb(244,14,24)"/><text x="729.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.23%)</title><rect x="726" y="324" width="2" height="15" fill="rgb(233,176,46)"/><text x="729.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.23%)</title><rect x="726" y="340" width="2" height="15" fill="rgb(250,18,5)"/><text x="729.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.23%)</title><rect x="726" y="356" width="2" height="15" fill="rgb(235,190,45)"/><text x="729.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.23%)</title><rect x="726" y="372" width="2" height="15" fill="rgb(210,37,44)"/><text x="729.00" y="382.50"></text></g><g><title>0x7f482d3b6c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="728" y="340" width="3" height="15" fill="rgb(223,224,48)"/><text x="731.00" y="350.50"></text></g><g><title>0x7f484b005e00 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="745" y="356" width="3" height="15" fill="rgb(226,139,46)"/><text x="748.00" y="366.50"></text></g><g><title>0x7f484b005e37 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="748" y="356" width="2" height="15" fill="rgb(228,28,31)"/><text x="751.00" y="366.50"></text></g><g><title>0x7f484b005e62 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="750" y="356" width="3" height="15" fill="rgb(223,198,32)"/><text x="753.00" y="366.50"></text></g><g><title>0x7f484b005e7e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(225,102,41)"/><text x="756.00" y="366.50"></text></g><g><title>0x7f482d2ad214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.56%)</title><rect x="728" y="324" width="31" height="15" fill="rgb(211,72,7)"/><text x="731.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (10 samples, 2.33%)</title><rect x="731" y="340" width="28" height="15" fill="rgb(226,34,53)"/><text x="734.00" y="350.50">e..</text></g><g><title>0x7f484b005ea6 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="756" y="356" width="3" height="15" fill="rgb(227,3,35)"/><text x="759.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (19 samples, 4.42%)</title><rect x="723" y="228" width="52" height="15" fill="rgb(229,98,28)"/><text x="726.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 4.42%)</title><rect x="723" y="244" width="52" height="15" fill="rgb(253,164,9)"/><text x="726.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 4.19%)</title><rect x="726" y="260" width="49" height="15" fill="rgb(241,86,54)"/><text x="729.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 3.95%)</title><rect x="728" y="276" width="47" height="15" fill="rgb(224,27,42)"/><text x="731.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (17 samples, 3.95%)</title><rect x="728" y="292" width="47" height="15" fill="rgb(252,39,37)"/><text x="731.00" y="302.50">triv..</text></g><g><title>0x7f482d28b33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.95%)</title><rect x="728" y="308" width="47" height="15" fill="rgb(228,76,26)"/><text x="731.00" y="318.50">0x7f..</text></g><g><title>0x7f482d2ad228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.40%)</title><rect x="759" y="324" width="16" height="15" fill="rgb(227,120,33)"/><text x="762.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (74 samples, 17.21%)</title><rect x="578" y="196" width="203" height="15" fill="rgb(250,97,15)"/><text x="581.00" y="206.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (74 samples, 17.21%)</title><rect x="578" y="212" width="203" height="15" fill="rgb(248,185,20)"/><text x="581.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (2 samples, 0.47%)</title><rect x="775" y="228" width="6" height="15" fill="rgb(242,0,2)"/><text x="778.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="778" y="244" width="3" height="15" fill="rgb(228,67,35)"/><text x="781.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="778" y="260" width="3" height="15" fill="rgb(249,217,1)"/><text x="781.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.23%)</title><rect x="778" y="276" width="3" height="15" fill="rgb(234,62,8)"/><text x="781.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.23%)</title><rect x="778" y="292" width="3" height="15" fill="rgb(211,202,18)"/><text x="781.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.23%)</title><rect x="778" y="308" width="3" height="15" fill="rgb(233,221,19)"/><text x="781.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.23%)</title><rect x="778" y="324" width="3" height="15" fill="rgb(211,60,35)"/><text x="781.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (104 samples, 24.19%)</title><rect x="501" y="180" width="285" height="15" fill="rgb(241,194,14)"/><text x="504.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.47%)</title><rect x="781" y="196" width="5" height="15" fill="rgb(247,199,22)"/><text x="784.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.23%)</title><rect x="783" y="212" width="3" height="15" fill="rgb(207,171,21)"/><text x="786.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.23%)</title><rect x="786" y="180" width="3" height="15" fill="rgb(225,91,2)"/><text x="789.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (111 samples, 25.81%)</title><rect x="492" y="164" width="305" height="15" fill="rgb(247,176,41)"/><text x="495.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.70%)</title><rect x="789" y="180" width="8" height="15" fill="rgb(247,220,20)"/><text x="792.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:45) (120 samples, 27.91%)</title><rect x="471" y="52" width="329" height="15" fill="rgb(219,131,12)"/><text x="474.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:44) (120 samples, 27.91%)</title><rect x="471" y="68" width="329" height="15" fill="rgb(232,115,44)"/><text x="474.00" y="78.50">profile_pyrt (bench_LogisticRegression_libli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (120 samples, 27.91%)</title><rect x="471" y="84" width="329" height="15" fill="rgb(243,179,28)"/><text x="474.00" y="94.50">setup_profile (bench_LogisticRegression_libl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (118 samples, 27.44%)</title><rect x="476" y="100" width="324" height="15" fill="rgb(233,87,36)"/><text x="479.00" y="110.50">profile (bench_LogisticRegression_liblinear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (117 samples, 27.21%)</title><rect x="479" y="116" width="321" height="15" fill="rgb(207,162,47)"/><text x="482.00" y="126.50">time_predict (mlprodict/asv_benchmark/commo..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (117 samples, 27.21%)</title><rect x="479" y="132" width="321" height="15" fill="rgb(222,80,50)"/><text x="482.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (116 samples, 26.98%)</title><rect x="482" y="148" width="318" height="15" fill="rgb(245,196,24)"/><text x="485.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:40..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.23%)</title><rect x="797" y="164" width="3" height="15" fill="rgb(241,73,17)"/><text x="800.00" y="174.50"></text></g><g><title>0x7f480b6efff9 (?) (1 samples, 0.23%)</title><rect x="803" y="212" width="2" height="15" fill="rgb(242,222,27)"/><text x="806.00" y="222.50"></text></g><g><title>0x7f480b6eaef6 (?) (1 samples, 0.23%)</title><rect x="803" y="228" width="2" height="15" fill="rgb(252,157,15)"/><text x="806.00" y="238.50"></text></g><g><title>0x7f480b6df962 (?) (1 samples, 0.23%)</title><rect x="803" y="244" width="2" height="15" fill="rgb(233,74,42)"/><text x="806.00" y="254.50"></text></g><g><title>0x7f480b7137a7 (?) (1 samples, 0.23%)</title><rect x="803" y="260" width="2" height="15" fill="rgb(246,12,13)"/><text x="806.00" y="270.50"></text></g><g><title>0x7f480b713379 (?) (1 samples, 0.23%)</title><rect x="803" y="276" width="2" height="15" fill="rgb(249,108,31)"/><text x="806.00" y="286.50"></text></g><g><title>0x7f480bb718b8 (?) (1 samples, 0.23%)</title><rect x="803" y="292" width="2" height="15" fill="rgb(248,198,25)"/><text x="806.00" y="302.50"></text></g><g><title>0x7f480bb6fc7f (?) (1 samples, 0.23%)</title><rect x="803" y="308" width="2" height="15" fill="rgb(206,89,33)"/><text x="806.00" y="318.50"></text></g><g><title>0x7f480bb822e5 (?) (1 samples, 0.23%)</title><rect x="803" y="324" width="2" height="15" fill="rgb(235,206,21)"/><text x="806.00" y="334.50"></text></g><g><title>0x7f480bb2a54b (?) (1 samples, 0.23%)</title><rect x="803" y="340" width="2" height="15" fill="rgb(224,197,44)"/><text x="806.00" y="350.50"></text></g><g><title>0x7f484ae8690e (libc-2.29.so) (1 samples, 0.23%)</title><rect x="803" y="356" width="2" height="15" fill="rgb(206,197,9)"/><text x="806.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (5 samples, 1.16%)</title><rect x="800" y="100" width="14" height="15" fill="rgb(208,79,47)"/><text x="803.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 1.16%)</title><rect x="800" y="116" width="14" height="15" fill="rgb(207,98,53)"/><text x="803.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (5 samples, 1.16%)</title><rect x="800" y="132" width="14" height="15" fill="rgb(229,148,43)"/><text x="803.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (5 samples, 1.16%)</title><rect x="800" y="148" width="14" height="15" fill="rgb(234,97,5)"/><text x="803.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (5 samples, 1.16%)</title><rect x="800" y="164" width="14" height="15" fill="rgb(213,144,42)"/><text x="803.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (5 samples, 1.16%)</title><rect x="800" y="180" width="14" height="15" fill="rgb(228,109,22)"/><text x="803.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (5 samples, 1.16%)</title><rect x="800" y="196" width="14" height="15" fill="rgb(237,93,42)"/><text x="803.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="212" width="9" height="15" fill="rgb(231,120,47)"/><text x="808.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="228" width="9" height="15" fill="rgb(252,53,54)"/><text x="808.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="244" width="9" height="15" fill="rgb(250,147,46)"/><text x="808.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="260" width="9" height="15" fill="rgb(246,100,13)"/><text x="808.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="276" width="9" height="15" fill="rgb(210,136,47)"/><text x="808.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="292" width="9" height="15" fill="rgb(242,29,33)"/><text x="808.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="308" width="9" height="15" fill="rgb(225,90,43)"/><text x="808.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="324" width="9" height="15" fill="rgb(252,203,2)"/><text x="808.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.70%)</title><rect x="805" y="340" width="9" height="15" fill="rgb(251,145,17)"/><text x="808.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="808" y="356" width="6" height="15" fill="rgb(235,101,26)"/><text x="811.00" y="366.50"></text></g><g><title>0x7f484b005ea2 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="811" y="372" width="3" height="15" fill="rgb(250,133,49)"/><text x="814.00" y="382.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.23%)</title><rect x="819" y="196" width="3" height="15" fill="rgb(240,77,18)"/><text x="822.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:133) (1 samples, 0.23%)</title><rect x="822" y="196" width="3" height="15" fill="rgb(234,225,27)"/><text x="825.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="827" y="260" width="3" height="15" fill="rgb(224,52,43)"/><text x="830.00" y="270.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="830" y="340" width="3" height="15" fill="rgb(238,24,21)"/><text x="833.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="830" y="356" width="3" height="15" fill="rgb(241,69,49)"/><text x="833.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="833" y="340" width="3" height="15" fill="rgb(225,150,15)"/><text x="836.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::GetKernelDef (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="836" y="340" width="2" height="15" fill="rgb(207,19,15)"/><text x="839.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="356" width="3" height="15" fill="rgb(239,8,15)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="372" width="3" height="15" fill="rgb(230,178,27)"/><text x="1113.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="388" width="3" height="15" fill="rgb(206,143,37)"/><text x="1113.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="404" width="3" height="15" fill="rgb(231,69,39)"/><text x="1113.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="420" width="3" height="15" fill="rgb(228,9,33)"/><text x="1113.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="436" width="3" height="15" fill="rgb(245,26,25)"/><text x="1113.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="452" width="3" height="15" fill="rgb(210,167,30)"/><text x="1113.00" y="462.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1110" y="468" width="3" height="15" fill="rgb(230,31,37)"/><text x="1113.00" y="478.50"></text></g><g><title>0x7f484aea6db3 (libc-2.29.so) (4 samples, 0.93%)</title><rect x="1129" y="372" width="11" height="15" fill="rgb(239,141,54)"/><text x="1132.00" y="382.50"></text></g><g><title>0x7f484b005e6d (libm-2.29.so) (2 samples, 0.47%)</title><rect x="1140" y="372" width="6" height="15" fill="rgb(206,159,29)"/><text x="1143.00" y="382.50"></text></g><g><title>0x7f484b005e92 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1146" y="372" width="2" height="15" fill="rgb(244,8,25)"/><text x="1149.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 26.51%)</title><rect x="838" y="340" width="313" height="15" fill="rgb(228,193,26)"/><text x="841.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.26%)</title><rect x="1113" y="356" width="38" height="15" fill="rgb(246,115,25)"/><text x="1116.00" y="366.50">onn..</text></g><g><title>0x7f484b005ea6 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1148" y="372" width="3" height="15" fill="rgb(227,58,34)"/><text x="1151.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 29.53%)</title><rect x="830" y="260" width="349" height="15" fill="rgb(227,210,7)"/><text x="833.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 29.53%)</title><rect x="830" y="276" width="349" height="15" fill="rgb(217,229,29)"/><text x="833.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 29.53%)</title><rect x="830" y="292" width="349" height="15" fill="rgb(252,98,50)"/><text x="833.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 29.53%)</title><rect x="830" y="308" width="349" height="15" fill="rgb(243,180,23)"/><text x="833.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 29.53%)</title><rect x="830" y="324" width="349" height="15" fill="rgb(205,168,8)"/><text x="833.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.33%)</title><rect x="1151" y="340" width="28" height="15" fill="rgb(223,86,12)"/><text x="1154.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.33%)</title><rect x="1151" y="356" width="28" height="15" fill="rgb(227,167,52)"/><text x="1154.00" y="366.50">o..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(212,89,20)"/><text x="1182.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(207,157,23)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7f484ae86917 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(223,43,53)"/><text x="1182.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (133 samples, 30.93%)</title><rect x="819" y="164" width="365" height="15" fill="rgb(233,64,37)"/><text x="822.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (133 samples, 30.93%)</title><rect x="819" y="180" width="365" height="15" fill="rgb(225,34,7)"/><text x="822.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (131 samples, 30.47%)</title><rect x="825" y="196" width="359" height="15" fill="rgb(207,137,8)"/><text x="828.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 30.47%)</title><rect x="825" y="212" width="359" height="15" fill="rgb(207,46,8)"/><text x="828.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 30.47%)</title><rect x="825" y="228" width="359" height="15" fill="rgb(240,22,45)"/><text x="828.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 30.47%)</title><rect x="825" y="244" width="359" height="15" fill="rgb(214,65,0)"/><text x="828.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1181" y="260" width="3" height="15" fill="rgb(217,85,33)"/><text x="1184.00" y="270.50"></text></g><g><title>0x7f484aea6d94 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1181" y="276" width="3" height="15" fill="rgb(229,204,15)"/><text x="1184.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:52) (141 samples, 32.79%)</title><rect x="800" y="52" width="387" height="15" fill="rgb(235,144,35)"/><text x="803.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:51) (141 samples, 32.79%)</title><rect x="800" y="68" width="387" height="15" fill="rgb(238,182,23)"/><text x="803.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (141 samples, 32.79%)</title><rect x="800" y="84" width="387" height="15" fill="rgb(225,206,44)"/><text x="803.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (136 samples, 31.63%)</title><rect x="814" y="100" width="373" height="15" fill="rgb(246,17,49)"/><text x="817.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (136 samples, 31.63%)</title><rect x="814" y="116" width="373" height="15" fill="rgb(211,111,25)"/><text x="817.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (135 samples, 31.40%)</title><rect x="816" y="132" width="371" height="15" fill="rgb(243,194,29)"/><text x="819.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (134 samples, 31.16%)</title><rect x="819" y="148" width="368" height="15" fill="rgb(220,229,6)"/><text x="822.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.23%)</title><rect x="1184" y="164" width="3" height="15" fill="rgb(209,163,0)"/><text x="1187.00" y="174.50"></text></g><g><title>all (430 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,25,35)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.23%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(223,136,19)"/><text x="1190.00" y="62.50"></text></g></g></svg>