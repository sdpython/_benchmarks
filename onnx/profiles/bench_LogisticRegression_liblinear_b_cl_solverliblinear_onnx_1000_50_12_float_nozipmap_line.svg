<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:28) (1 samples, 0.32%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(222,82,11)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.32%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(244,67,27)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.32%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(211,1,23)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.32%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(206,30,32)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(232,66,52)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(213,75,32)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(245,57,12)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(247,27,37)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(246,219,15)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:15) (1 samples, 0.32%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(251,59,43)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(210,118,25)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(251,188,2)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(224,85,36)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(218,39,40)"/><text x="13.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(216,168,4)"/><text x="13.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(221,22,12)"/><text x="13.00" y="334.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.63%)</title><rect x="13" y="164" width="8" height="15" fill="rgb(250,147,35)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.63%)</title><rect x="13" y="180" width="8" height="15" fill="rgb(224,201,32)"/><text x="16.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.63%)</title><rect x="13" y="196" width="8" height="15" fill="rgb(213,151,38)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="13" y="212" width="8" height="15" fill="rgb(244,56,43)"/><text x="16.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.63%)</title><rect x="13" y="228" width="8" height="15" fill="rgb(253,89,33)"/><text x="16.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.63%)</title><rect x="13" y="244" width="8" height="15" fill="rgb(205,46,45)"/><text x="16.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.63%)</title><rect x="13" y="260" width="8" height="15" fill="rgb(229,144,24)"/><text x="16.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.63%)</title><rect x="13" y="276" width="8" height="15" fill="rgb(252,137,50)"/><text x="16.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.63%)</title><rect x="13" y="292" width="8" height="15" fill="rgb(253,210,9)"/><text x="16.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.63%)</title><rect x="13" y="308" width="8" height="15" fill="rgb(249,75,13)"/><text x="16.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (3 samples, 0.95%)</title><rect x="13" y="100" width="11" height="15" fill="rgb(231,85,32)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.95%)</title><rect x="13" y="116" width="11" height="15" fill="rgb(215,22,15)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.95%)</title><rect x="13" y="132" width="11" height="15" fill="rgb(206,102,33)"/><text x="16.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.95%)</title><rect x="13" y="148" width="11" height="15" fill="rgb(230,83,30)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.32%)</title><rect x="21" y="164" width="3" height="15" fill="rgb(239,189,50)"/><text x="24.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.32%)</title><rect x="21" y="180" width="3" height="15" fill="rgb(214,62,40)"/><text x="24.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="21" y="196" width="3" height="15" fill="rgb(209,221,42)"/><text x="24.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.32%)</title><rect x="21" y="212" width="3" height="15" fill="rgb(211,47,3)"/><text x="24.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.32%)</title><rect x="21" y="228" width="3" height="15" fill="rgb(242,70,2)"/><text x="24.00" y="238.50"></text></g><g><title>0x7fb2fab0c9dd (?) (1 samples, 0.32%)</title><rect x="21" y="244" width="3" height="15" fill="rgb(249,43,46)"/><text x="24.00" y="254.50"></text></g><g><title>0x7fb2fab2d279 (?) (1 samples, 0.32%)</title><rect x="21" y="260" width="3" height="15" fill="rgb(217,155,27)"/><text x="24.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.32%)</title><rect x="24" y="164" width="4" height="15" fill="rgb(216,201,27)"/><text x="27.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.32%)</title><rect x="24" y="180" width="4" height="15" fill="rgb(207,98,32)"/><text x="27.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.32%)</title><rect x="28" y="164" width="4" height="15" fill="rgb(220,9,28)"/><text x="31.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.32%)</title><rect x="36" y="180" width="3" height="15" fill="rgb(234,44,41)"/><text x="39.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.26%)</title><rect x="32" y="164" width="15" height="15" fill="rgb(206,117,54)"/><text x="35.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.63%)</title><rect x="39" y="180" width="8" height="15" fill="rgb(238,122,2)"/><text x="42.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (7 samples, 2.21%)</title><rect x="24" y="148" width="26" height="15" fill="rgb(250,189,27)"/><text x="27.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.32%)</title><rect x="47" y="164" width="3" height="15" fill="rgb(221,188,11)"/><text x="50.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.32%)</title><rect x="50" y="148" width="4" height="15" fill="rgb(249,1,32)"/><text x="53.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.32%)</title><rect x="54" y="148" width="4" height="15" fill="rgb(239,44,33)"/><text x="57.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.32%)</title><rect x="62" y="196" width="3" height="15" fill="rgb(234,14,26)"/><text x="65.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.63%)</title><rect x="65" y="196" width="8" height="15" fill="rgb(212,196,6)"/><text x="68.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.63%)</title><rect x="65" y="212" width="8" height="15" fill="rgb(234,202,43)"/><text x="68.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.32%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(216,218,24)"/><text x="76.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.32%)</title><rect x="73" y="212" width="4" height="15" fill="rgb(208,228,26)"/><text x="76.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.32%)</title><rect x="77" y="196" width="3" height="15" fill="rgb(246,43,31)"/><text x="80.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.32%)</title><rect x="77" y="212" width="3" height="15" fill="rgb(231,194,47)"/><text x="80.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.32%)</title><rect x="80" y="196" width="4" height="15" fill="rgb(245,88,30)"/><text x="83.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.32%)</title><rect x="80" y="212" width="4" height="15" fill="rgb(235,188,12)"/><text x="83.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.32%)</title><rect x="80" y="228" width="4" height="15" fill="rgb(215,210,37)"/><text x="83.00" y="238.50"></text></g><g><title>0x7fb317929dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="80" y="244" width="4" height="15" fill="rgb(245,91,12)"/><text x="83.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.32%)</title><rect x="84" y="196" width="4" height="15" fill="rgb(206,110,12)"/><text x="87.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="84" y="212" width="4" height="15" fill="rgb(230,117,43)"/><text x="87.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.32%)</title><rect x="84" y="228" width="4" height="15" fill="rgb(251,181,30)"/><text x="87.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (9 samples, 2.84%)</title><rect x="58" y="180" width="33" height="15" fill="rgb(212,100,1)"/><text x="61.00" y="190.50">de..</text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.32%)</title><rect x="88" y="196" width="3" height="15" fill="rgb(221,17,53)"/><text x="91.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="91" y="228" width="4" height="15" fill="rgb(250,70,33)"/><text x="94.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.32%)</title><rect x="91" y="244" width="4" height="15" fill="rgb(224,196,0)"/><text x="94.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.32%)</title><rect x="91" y="260" width="4" height="15" fill="rgb(251,176,10)"/><text x="94.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.32%)</title><rect x="95" y="260" width="4" height="15" fill="rgb(215,149,9)"/><text x="98.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.32%)</title><rect x="95" y="276" width="4" height="15" fill="rgb(225,130,34)"/><text x="98.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.32%)</title><rect x="95" y="292" width="4" height="15" fill="rgb(231,165,4)"/><text x="98.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.32%)</title><rect x="99" y="308" width="4" height="15" fill="rgb(233,21,44)"/><text x="102.00" y="318.50"></text></g><g><title>0x7fb318726d67 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="103" y="324" width="3" height="15" fill="rgb(242,139,47)"/><text x="106.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.63%)</title><rect x="103" y="308" width="7" height="15" fill="rgb(219,149,10)"/><text x="106.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.32%)</title><rect x="106" y="324" width="4" height="15" fill="rgb(221,19,1)"/><text x="109.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.26%)</title><rect x="99" y="260" width="15" height="15" fill="rgb(207,94,37)"/><text x="102.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.26%)</title><rect x="99" y="276" width="15" height="15" fill="rgb(243,36,38)"/><text x="102.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.26%)</title><rect x="99" y="292" width="15" height="15" fill="rgb(247,112,4)"/><text x="102.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:983) (1 samples, 0.32%)</title><rect x="110" y="308" width="4" height="15" fill="rgb(218,73,15)"/><text x="113.00" y="318.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.21%)</title><rect x="91" y="196" width="26" height="15" fill="rgb(241,208,14)"/><text x="94.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.21%)</title><rect x="91" y="212" width="26" height="15" fill="rgb(208,123,39)"/><text x="94.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.89%)</title><rect x="95" y="228" width="22" height="15" fill="rgb(217,135,44)"/><text x="98.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.89%)</title><rect x="95" y="244" width="22" height="15" fill="rgb(229,109,10)"/><text x="98.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.32%)</title><rect x="114" y="260" width="3" height="15" fill="rgb(246,188,18)"/><text x="117.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.32%)</title><rect x="114" y="276" width="3" height="15" fill="rgb(212,127,31)"/><text x="117.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.32%)</title><rect x="114" y="292" width="3" height="15" fill="rgb(222,32,48)"/><text x="117.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.32%)</title><rect x="114" y="308" width="3" height="15" fill="rgb(225,202,45)"/><text x="117.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.32%)</title><rect x="114" y="324" width="3" height="15" fill="rgb(244,73,1)"/><text x="117.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.89%)</title><rect x="121" y="212" width="23" height="15" fill="rgb(207,124,6)"/><text x="124.00" y="222.50">d..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(232,97,14)"/><text x="147.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.32%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(245,131,20)"/><text x="147.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:925) (1 samples, 0.32%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(246,183,6)"/><text x="147.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.32%)</title><rect x="147" y="292" width="4" height="15" fill="rgb(250,215,21)"/><text x="150.00" y="302.50"></text></g><g><title>broadcast_strides (array_assign.c:49) (1 samples, 0.32%)</title><rect x="147" y="308" width="4" height="15" fill="rgb(240,119,0)"/><text x="150.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.32%)</title><rect x="151" y="308" width="4" height="15" fill="rgb(205,35,40)"/><text x="154.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.32%)</title><rect x="151" y="324" width="4" height="15" fill="rgb(210,3,41)"/><text x="154.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:948) (1 samples, 0.32%)</title><rect x="151" y="340" width="4" height="15" fill="rgb(207,79,50)"/><text x="154.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (11 samples, 3.47%)</title><rect x="155" y="308" width="41" height="15" fill="rgb(218,7,35)"/><text x="158.00" y="318.50">raw..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (11 samples, 3.47%)</title><rect x="155" y="324" width="41" height="15" fill="rgb(217,47,32)"/><text x="158.00" y="334.50">_al..</text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.32%)</title><rect x="196" y="308" width="3" height="15" fill="rgb(212,119,38)"/><text x="199.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.32%)</title><rect x="199" y="308" width="4" height="15" fill="rgb(241,72,49)"/><text x="202.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:39) (1 samples, 0.32%)</title><rect x="199" y="324" width="4" height="15" fill="rgb(212,25,1)"/><text x="202.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (17 samples, 5.36%)</title><rect x="144" y="244" width="63" height="15" fill="rgb(208,68,43)"/><text x="147.00" y="254.50">PyUFun..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (16 samples, 5.05%)</title><rect x="147" y="260" width="60" height="15" fill="rgb(209,14,14)"/><text x="150.00" y="270.50">NpyIte..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (16 samples, 5.05%)</title><rect x="147" y="276" width="60" height="15" fill="rgb(221,26,21)"/><text x="150.00" y="286.50">npyite..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (15 samples, 4.73%)</title><rect x="151" y="292" width="56" height="15" fill="rgb(246,131,13)"/><text x="154.00" y="302.50">PyArr..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="203" y="308" width="4" height="15" fill="rgb(249,100,50)"/><text x="206.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.32%)</title><rect x="203" y="324" width="4" height="15" fill="rgb(214,19,31)"/><text x="206.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (11 samples, 3.47%)</title><rect x="207" y="244" width="41" height="15" fill="rgb(219,181,32)"/><text x="210.00" y="254.50">PyU..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (11 samples, 3.47%)</title><rect x="207" y="260" width="41" height="15" fill="rgb(209,114,20)"/><text x="210.00" y="270.50">DOU..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.47%)</title><rect x="207" y="276" width="41" height="15" fill="rgb(208,168,16)"/><text x="210.00" y="286.50">cbl..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 3.47%)</title><rect x="207" y="292" width="41" height="15" fill="rgb(240,65,33)"/><text x="210.00" y="302.50">dge..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 3.15%)</title><rect x="211" y="308" width="37" height="15" fill="rgb(245,106,31)"/><text x="214.00" y="318.50">dge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.32%)</title><rect x="248" y="244" width="3" height="15" fill="rgb(244,156,15)"/><text x="251.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (37 samples, 11.67%)</title><rect x="117" y="196" width="138" height="15" fill="rgb(234,187,14)"/><text x="120.00" y="206.50">safe_sparse_dot (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 9.46%)</title><rect x="144" y="212" width="111" height="15" fill="rgb(221,33,47)"/><text x="147.00" y="222.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (30 samples, 9.46%)</title><rect x="144" y="228" width="111" height="15" fill="rgb(231,118,5)"/><text x="147.00" y="238.50">PyUFunc_Gener..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.32%)</title><rect x="251" y="244" width="4" height="15" fill="rgb(245,16,34)"/><text x="254.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.32%)</title><rect x="251" y="260" width="4" height="15" fill="rgb(250,11,19)"/><text x="254.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="251" y="276" width="4" height="15" fill="rgb(244,104,23)"/><text x="254.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="251" y="292" width="4" height="15" fill="rgb(218,142,24)"/><text x="254.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.32%)</title><rect x="251" y="308" width="4" height="15" fill="rgb(254,97,15)"/><text x="254.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (55 samples, 17.35%)</title><rect x="58" y="164" width="205" height="15" fill="rgb(253,48,19)"/><text x="61.00" y="174.50">_predict_proba_lr (sklearn..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (46 samples, 14.51%)</title><rect x="91" y="180" width="172" height="15" fill="rgb(218,192,13)"/><text x="94.00" y="190.50">decision_function (skl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.63%)</title><rect x="255" y="196" width="8" height="15" fill="rgb(253,222,27)"/><text x="258.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.32%)</title><rect x="266" y="196" width="4" height="15" fill="rgb(212,74,19)"/><text x="269.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.63%)</title><rect x="266" y="180" width="8" height="15" fill="rgb(253,16,2)"/><text x="269.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.32%)</title><rect x="270" y="196" width="4" height="15" fill="rgb(241,20,49)"/><text x="273.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.32%)</title><rect x="270" y="212" width="4" height="15" fill="rgb(219,165,50)"/><text x="273.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.32%)</title><rect x="270" y="228" width="4" height="15" fill="rgb(234,194,48)"/><text x="273.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.32%)</title><rect x="270" y="244" width="4" height="15" fill="rgb(242,90,44)"/><text x="273.00" y="254.50"></text></g><g><title>0x7fb3187e5000 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="270" y="260" width="4" height="15" fill="rgb(250,210,6)"/><text x="273.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="274" y="196" width="4" height="15" fill="rgb(249,212,38)"/><text x="277.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.32%)</title><rect x="274" y="212" width="4" height="15" fill="rgb(250,111,31)"/><text x="277.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.32%)</title><rect x="274" y="228" width="4" height="15" fill="rgb(209,122,8)"/><text x="277.00" y="238.50"></text></g><g><title>0x7fb3188d8bb4 (libm-2.29.so) (1 samples, 0.32%)</title><rect x="296" y="292" width="4" height="15" fill="rgb(218,76,20)"/><text x="299.00" y="302.50"></text></g><g><title>0x7fb3188d8be7 (libm-2.29.so) (1 samples, 0.32%)</title><rect x="300" y="292" width="4" height="15" fill="rgb(229,204,35)"/><text x="303.00" y="302.50"></text></g><g><title>0x7fb3188d8c18 (libm-2.29.so) (1 samples, 0.32%)</title><rect x="304" y="292" width="3" height="15" fill="rgb(245,169,22)"/><text x="307.00" y="302.50"></text></g><g><title>0x7fb3188d8c2e (libm-2.29.so) (1 samples, 0.32%)</title><rect x="307" y="292" width="4" height="15" fill="rgb(228,104,3)"/><text x="310.00" y="302.50"></text></g><g><title>0x7fb2fab2d265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.15%)</title><rect x="278" y="260" width="37" height="15" fill="rgb(237,228,47)"/><text x="281.00" y="270.50">0x7..</text></g><g><title>exp (libm-2.29.so) (9 samples, 2.84%)</title><rect x="281" y="276" width="34" height="15" fill="rgb(225,144,30)"/><text x="284.00" y="286.50">ex..</text></g><g><title>0x7fb3188d8c6a (libm-2.29.so) (1 samples, 0.32%)</title><rect x="311" y="292" width="4" height="15" fill="rgb(249,144,36)"/><text x="314.00" y="302.50"></text></g><g><title>0x7fb2fab0c9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.42%)</title><rect x="278" y="244" width="52" height="15" fill="rgb(217,142,41)"/><text x="281.00" y="254.50">0x7fb..</text></g><g><title>0x7fb2fab2d279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.26%)</title><rect x="315" y="260" width="15" height="15" fill="rgb(214,102,38)"/><text x="318.00" y="270.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 4.73%)</title><rect x="278" y="228" width="55" height="15" fill="rgb(252,21,40)"/><text x="281.00" y="238.50">trivi..</text></g><g><title>0x7fb2fab0c9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="330" y="244" width="3" height="15" fill="rgb(224,223,35)"/><text x="333.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (20 samples, 6.31%)</title><rect x="263" y="164" width="74" height="15" fill="rgb(250,125,35)"/><text x="266.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 5.36%)</title><rect x="274" y="180" width="63" height="15" fill="rgb(205,180,7)"/><text x="277.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 5.05%)</title><rect x="278" y="196" width="59" height="15" fill="rgb(221,200,53)"/><text x="281.00" y="206.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 5.05%)</title><rect x="278" y="212" width="59" height="15" fill="rgb(251,209,45)"/><text x="281.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.32%)</title><rect x="333" y="228" width="4" height="15" fill="rgb(207,207,50)"/><text x="336.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="333" y="244" width="4" height="15" fill="rgb(233,42,16)"/><text x="336.00" y="254.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.32%)</title><rect x="341" y="180" width="4" height="15" fill="rgb(206,190,4)"/><text x="344.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.32%)</title><rect x="341" y="196" width="4" height="15" fill="rgb(249,152,23)"/><text x="344.00" y="206.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.32%)</title><rect x="345" y="244" width="3" height="15" fill="rgb(214,67,13)"/><text x="348.00" y="254.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.32%)</title><rect x="345" y="260" width="3" height="15" fill="rgb(231,90,48)"/><text x="348.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.32%)</title><rect x="348" y="276" width="4" height="15" fill="rgb(206,195,24)"/><text x="351.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.32%)</title><rect x="348" y="292" width="4" height="15" fill="rgb(238,3,45)"/><text x="351.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.32%)</title><rect x="348" y="308" width="4" height="15" fill="rgb(243,133,10)"/><text x="351.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:46) (1 samples, 0.32%)</title><rect x="348" y="324" width="4" height="15" fill="rgb(209,224,1)"/><text x="351.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(243,156,23)"/><text x="355.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.63%)</title><rect x="352" y="276" width="7" height="15" fill="rgb(232,143,37)"/><text x="355.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.32%)</title><rect x="356" y="292" width="3" height="15" fill="rgb(248,40,8)"/><text x="359.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.32%)</title><rect x="356" y="308" width="3" height="15" fill="rgb(251,48,38)"/><text x="359.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="356" y="324" width="3" height="15" fill="rgb(251,102,19)"/><text x="359.00" y="334.50"></text></g><g><title>0x7fb318707b12 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="356" y="340" width="3" height="15" fill="rgb(220,162,5)"/><text x="359.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.32%)</title><rect x="367" y="324" width="4" height="15" fill="rgb(252,227,10)"/><text x="370.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 1.58%)</title><rect x="359" y="308" width="19" height="15" fill="rgb(219,68,36)"/><text x="362.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.63%)</title><rect x="371" y="324" width="7" height="15" fill="rgb(231,10,11)"/><text x="374.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.32%)</title><rect x="378" y="308" width="4" height="15" fill="rgb(250,108,12)"/><text x="381.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.32%)</title><rect x="382" y="308" width="3" height="15" fill="rgb(231,37,13)"/><text x="385.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.79%)</title><rect x="345" y="180" width="44" height="15" fill="rgb(218,219,47)"/><text x="348.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.79%)</title><rect x="345" y="196" width="44" height="15" fill="rgb(251,141,54)"/><text x="348.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 3.79%)</title><rect x="345" y="212" width="44" height="15" fill="rgb(252,70,27)"/><text x="348.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 3.79%)</title><rect x="345" y="228" width="44" height="15" fill="rgb(232,144,43)"/><text x="348.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 3.47%)</title><rect x="348" y="244" width="41" height="15" fill="rgb(229,195,49)"/><text x="351.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 3.47%)</title><rect x="348" y="260" width="41" height="15" fill="rgb(227,92,21)"/><text x="351.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 2.52%)</title><rect x="359" y="276" width="30" height="15" fill="rgb(211,138,52)"/><text x="362.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (8 samples, 2.52%)</title><rect x="359" y="292" width="30" height="15" fill="rgb(209,22,46)"/><text x="362.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.32%)</title><rect x="385" y="308" width="4" height="15" fill="rgb(240,226,27)"/><text x="388.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1845) (1 samples, 0.32%)</title><rect x="385" y="324" width="4" height="15" fill="rgb(215,201,23)"/><text x="388.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.32%)</title><rect x="389" y="228" width="4" height="15" fill="rgb(209,64,17)"/><text x="392.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.32%)</title><rect x="389" y="244" width="4" height="15" fill="rgb(207,218,13)"/><text x="392.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1671) (1 samples, 0.32%)</title><rect x="389" y="260" width="4" height="15" fill="rgb(226,208,51)"/><text x="392.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.32%)</title><rect x="393" y="228" width="4" height="15" fill="rgb(219,45,40)"/><text x="396.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.32%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(241,224,17)"/><text x="396.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.32%)</title><rect x="393" y="260" width="4" height="15" fill="rgb(206,216,11)"/><text x="396.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.32%)</title><rect x="393" y="276" width="4" height="15" fill="rgb(249,183,34)"/><text x="396.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.32%)</title><rect x="397" y="244" width="3" height="15" fill="rgb(210,154,1)"/><text x="400.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:38) (110 samples, 34.70%)</title><rect x="10" y="52" width="409" height="15" fill="rgb(209,153,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:37) (110 samples, 34.70%)</title><rect x="10" y="68" width="409" height="15" fill="rgb(207,224,3)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (109 samples, 34.38%)</title><rect x="13" y="84" width="406" height="15" fill="rgb(217,113,22)"/><text x="16.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (106 samples, 33.44%)</title><rect x="24" y="100" width="395" height="15" fill="rgb(227,3,20)"/><text x="27.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 33.44%)</title><rect x="24" y="116" width="395" height="15" fill="rgb(251,71,50)"/><text x="27.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (106 samples, 33.44%)</title><rect x="24" y="132" width="395" height="15" fill="rgb(216,126,10)"/><text x="27.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (97 samples, 30.60%)</title><rect x="58" y="148" width="361" height="15" fill="rgb(217,37,16)"/><text x="61.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (22 samples, 6.94%)</title><rect x="337" y="164" width="82" height="15" fill="rgb(218,112,37)"/><text x="340.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.52%)</title><rect x="389" y="180" width="30" height="15" fill="rgb(212,120,6)"/><text x="392.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.52%)</title><rect x="389" y="196" width="30" height="15" fill="rgb(242,209,34)"/><text x="392.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.52%)</title><rect x="389" y="212" width="30" height="15" fill="rgb(218,85,20)"/><text x="392.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 1.89%)</title><rect x="397" y="228" width="22" height="15" fill="rgb(209,20,7)"/><text x="400.00" y="238.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 1.58%)</title><rect x="400" y="244" width="19" height="15" fill="rgb(232,221,44)"/><text x="403.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 1.58%)</title><rect x="400" y="260" width="19" height="15" fill="rgb(210,83,16)"/><text x="403.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 1.58%)</title><rect x="400" y="276" width="19" height="15" fill="rgb(218,100,43)"/><text x="403.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.58%)</title><rect x="400" y="292" width="19" height="15" fill="rgb(242,142,22)"/><text x="403.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:1) (1 samples, 0.32%)</title><rect x="419" y="148" width="4" height="15" fill="rgb(249,120,54)"/><text x="422.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="164" width="4" height="15" fill="rgb(236,73,49)"/><text x="422.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="180" width="4" height="15" fill="rgb(252,5,43)"/><text x="422.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="196" width="4" height="15" fill="rgb(229,67,23)"/><text x="422.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="212" width="4" height="15" fill="rgb(216,151,24)"/><text x="422.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="228" width="4" height="15" fill="rgb(228,122,48)"/><text x="422.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.32%)</title><rect x="419" y="244" width="4" height="15" fill="rgb(253,111,0)"/><text x="422.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(212,220,29)"/><text x="422.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="276" width="4" height="15" fill="rgb(240,24,42)"/><text x="422.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="292" width="4" height="15" fill="rgb(213,67,42)"/><text x="422.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="308" width="4" height="15" fill="rgb(211,78,12)"/><text x="422.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="324" width="4" height="15" fill="rgb(212,114,7)"/><text x="422.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="340" width="4" height="15" fill="rgb(231,175,1)"/><text x="422.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="356" width="4" height="15" fill="rgb(229,8,19)"/><text x="422.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.32%)</title><rect x="419" y="372" width="4" height="15" fill="rgb(233,9,22)"/><text x="422.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="419" y="388" width="4" height="15" fill="rgb(207,127,51)"/><text x="422.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="404" width="4" height="15" fill="rgb(225,215,20)"/><text x="422.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="420" width="4" height="15" fill="rgb(205,172,24)"/><text x="422.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="436" width="4" height="15" fill="rgb(253,219,17)"/><text x="422.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="452" width="4" height="15" fill="rgb(234,133,12)"/><text x="422.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="468" width="4" height="15" fill="rgb(244,143,29)"/><text x="422.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="484" width="4" height="15" fill="rgb(247,110,19)"/><text x="422.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.32%)</title><rect x="419" y="500" width="4" height="15" fill="rgb(229,208,47)"/><text x="422.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="419" y="516" width="4" height="15" fill="rgb(232,184,19)"/><text x="422.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="532" width="4" height="15" fill="rgb(242,39,8)"/><text x="422.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="548" width="4" height="15" fill="rgb(254,73,0)"/><text x="422.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="564" width="4" height="15" fill="rgb(251,50,13)"/><text x="422.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="580" width="4" height="15" fill="rgb(254,31,49)"/><text x="422.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="596" width="4" height="15" fill="rgb(240,65,18)"/><text x="422.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="612" width="4" height="15" fill="rgb(208,222,31)"/><text x="422.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.32%)</title><rect x="419" y="628" width="4" height="15" fill="rgb(250,111,6)"/><text x="422.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="644" width="4" height="15" fill="rgb(215,67,6)"/><text x="422.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="419" y="660" width="4" height="15" fill="rgb(215,77,5)"/><text x="422.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="676" width="4" height="15" fill="rgb(253,42,10)"/><text x="422.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="692" width="4" height="15" fill="rgb(248,125,49)"/><text x="422.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="708" width="4" height="15" fill="rgb(228,184,16)"/><text x="422.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="724" width="4" height="15" fill="rgb(233,111,44)"/><text x="422.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="740" width="4" height="15" fill="rgb(242,17,37)"/><text x="422.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="756" width="4" height="15" fill="rgb(251,132,34)"/><text x="422.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.32%)</title><rect x="419" y="772" width="4" height="15" fill="rgb(235,110,51)"/><text x="422.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="419" y="788" width="4" height="15" fill="rgb(233,188,18)"/><text x="422.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="804" width="4" height="15" fill="rgb(233,17,48)"/><text x="422.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="820" width="4" height="15" fill="rgb(243,37,29)"/><text x="422.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="836" width="4" height="15" fill="rgb(253,47,11)"/><text x="422.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="852" width="4" height="15" fill="rgb(232,21,9)"/><text x="422.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="868" width="4" height="15" fill="rgb(228,134,6)"/><text x="422.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="884" width="4" height="15" fill="rgb(236,113,16)"/><text x="422.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:26) (1 samples, 0.32%)</title><rect x="419" y="900" width="4" height="15" fill="rgb(243,32,31)"/><text x="422.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="419" y="916" width="4" height="15" fill="rgb(238,21,36)"/><text x="422.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="419" y="932" width="4" height="15" fill="rgb(247,34,1)"/><text x="422.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="419" y="948" width="4" height="15" fill="rgb(241,134,49)"/><text x="422.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="419" y="964" width="4" height="15" fill="rgb(239,43,24)"/><text x="422.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="419" y="980" width="4" height="15" fill="rgb(209,12,11)"/><text x="422.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py:181) (1 samples, 0.32%)</title><rect x="419" y="996" width="4" height="15" fill="rgb(229,4,46)"/><text x="422.00" y="1006.50"></text></g><g><title>&lt;listcomp&gt; (pickle.py:181) (1 samples, 0.32%)</title><rect x="419" y="1012" width="4" height="15" fill="rgb(227,47,21)"/><text x="422.00" y="1022.50"></text></g><g><title>match (re.py:173) (1 samples, 0.32%)</title><rect x="419" y="1028" width="4" height="15" fill="rgb(229,118,54)"/><text x="422.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.32%)</title><rect x="419" y="1044" width="4" height="15" fill="rgb(240,45,3)"/><text x="422.00" y="1054.50"></text></g><g><title>0x7fb318706b63 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="419" y="1060" width="4" height="15" fill="rgb(219,143,48)"/><text x="422.00" y="1070.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.32%)</title><rect x="423" y="996" width="3" height="15" fill="rgb(242,222,51)"/><text x="426.00" y="1006.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.63%)</title><rect x="423" y="980" width="7" height="15" fill="rgb(254,204,42)"/><text x="426.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.32%)</title><rect x="426" y="996" width="4" height="15" fill="rgb(245,223,10)"/><text x="429.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:362) (1 samples, 0.32%)</title><rect x="426" y="1012" width="4" height="15" fill="rgb(233,107,40)"/><text x="429.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.95%)</title><rect x="423" y="916" width="11" height="15" fill="rgb(209,64,34)"/><text x="426.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.95%)</title><rect x="423" y="932" width="11" height="15" fill="rgb(237,97,11)"/><text x="426.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 0.95%)</title><rect x="423" y="948" width="11" height="15" fill="rgb(205,21,19)"/><text x="426.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 0.95%)</title><rect x="423" y="964" width="11" height="15" fill="rgb(214,80,26)"/><text x="426.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.32%)</title><rect x="430" y="980" width="4" height="15" fill="rgb(213,96,47)"/><text x="433.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.32%)</title><rect x="430" y="996" width="4" height="15" fill="rgb(229,137,24)"/><text x="433.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.32%)</title><rect x="430" y="1012" width="4" height="15" fill="rgb(210,31,32)"/><text x="433.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.32%)</title><rect x="430" y="1028" width="4" height="15" fill="rgb(244,6,24)"/><text x="433.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 1.26%)</title><rect x="423" y="852" width="15" height="15" fill="rgb(233,226,47)"/><text x="426.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 1.26%)</title><rect x="423" y="868" width="15" height="15" fill="rgb(241,86,22)"/><text x="426.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 1.26%)</title><rect x="423" y="884" width="15" height="15" fill="rgb(206,138,0)"/><text x="426.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.26%)</title><rect x="423" y="900" width="15" height="15" fill="rgb(246,62,15)"/><text x="426.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.32%)</title><rect x="434" y="916" width="4" height="15" fill="rgb(230,61,50)"/><text x="437.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.32%)</title><rect x="434" y="932" width="4" height="15" fill="rgb(224,49,43)"/><text x="437.00" y="942.50"></text></g><g><title>dirname (posixpath.py:159) (1 samples, 0.32%)</title><rect x="434" y="948" width="4" height="15" fill="rgb(219,195,39)"/><text x="437.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.32%)</title><rect x="438" y="852" width="3" height="15" fill="rgb(229,36,27)"/><text x="441.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.32%)</title><rect x="438" y="868" width="3" height="15" fill="rgb(242,218,2)"/><text x="441.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.32%)</title><rect x="438" y="884" width="3" height="15" fill="rgb(221,66,53)"/><text x="441.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.32%)</title><rect x="438" y="900" width="3" height="15" fill="rgb(237,186,48)"/><text x="441.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.32%)</title><rect x="438" y="916" width="3" height="15" fill="rgb(216,212,11)"/><text x="441.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.32%)</title><rect x="438" y="932" width="3" height="15" fill="rgb(205,15,10)"/><text x="441.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1489) (1 samples, 0.32%)</title><rect x="438" y="948" width="3" height="15" fill="rgb(230,65,46)"/><text x="441.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.89%)</title><rect x="423" y="820" width="22" height="15" fill="rgb(238,189,48)"/><text x="426.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.89%)</title><rect x="423" y="836" width="22" height="15" fill="rgb(242,73,15)"/><text x="426.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.32%)</title><rect x="441" y="852" width="4" height="15" fill="rgb(225,18,40)"/><text x="444.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.32%)</title><rect x="441" y="868" width="4" height="15" fill="rgb(235,111,17)"/><text x="444.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.32%)</title><rect x="441" y="884" width="4" height="15" fill="rgb(234,89,28)"/><text x="444.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.32%)</title><rect x="441" y="900" width="4" height="15" fill="rgb(234,222,50)"/><text x="444.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.32%)</title><rect x="441" y="916" width="4" height="15" fill="rgb(248,168,31)"/><text x="444.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="441" y="932" width="4" height="15" fill="rgb(248,120,39)"/><text x="444.00" y="942.50"></text></g><g><title>0x7fb318746237 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="441" y="948" width="4" height="15" fill="rgb(213,20,0)"/><text x="444.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:58) (1 samples, 0.32%)</title><rect x="445" y="820" width="4" height="15" fill="rgb(220,137,26)"/><text x="448.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="445" y="836" width="4" height="15" fill="rgb(239,199,51)"/><text x="448.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="445" y="852" width="4" height="15" fill="rgb(215,68,2)"/><text x="448.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.32%)</title><rect x="445" y="868" width="4" height="15" fill="rgb(217,196,38)"/><text x="448.00" y="878.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.32%)</title><rect x="445" y="884" width="4" height="15" fill="rgb(251,226,51)"/><text x="448.00" y="894.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.32%)</title><rect x="445" y="900" width="4" height="15" fill="rgb(225,54,48)"/><text x="448.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="445" y="916" width="4" height="15" fill="rgb(241,174,54)"/><text x="448.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="445" y="932" width="4" height="15" fill="rgb(218,214,2)"/><text x="448.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="445" y="948" width="4" height="15" fill="rgb(248,129,51)"/><text x="448.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="445" y="964" width="4" height="15" fill="rgb(219,91,6)"/><text x="448.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="445" y="980" width="4" height="15" fill="rgb(241,212,54)"/><text x="448.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="445" y="996" width="4" height="15" fill="rgb(226,12,34)"/><text x="448.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="445" y="1012" width="4" height="15" fill="rgb(229,15,37)"/><text x="448.00" y="1022.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.32%)</title><rect x="445" y="1028" width="4" height="15" fill="rgb(209,21,52)"/><text x="448.00" y="1038.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.32%)</title><rect x="445" y="1044" width="4" height="15" fill="rgb(226,34,50)"/><text x="448.00" y="1054.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="445" y="1060" width="4" height="15" fill="rgb(213,151,39)"/><text x="448.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.32%)</title><rect x="449" y="916" width="3" height="15" fill="rgb(230,179,9)"/><text x="452.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.32%)</title><rect x="449" y="932" width="3" height="15" fill="rgb(225,224,18)"/><text x="452.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="449" y="948" width="3" height="15" fill="rgb(234,143,1)"/><text x="452.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="449" y="964" width="3" height="15" fill="rgb(233,44,11)"/><text x="452.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.32%)</title><rect x="449" y="980" width="3" height="15" fill="rgb(208,95,30)"/><text x="452.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.32%)</title><rect x="449" y="996" width="3" height="15" fill="rgb(248,132,16)"/><text x="452.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="449" y="1012" width="3" height="15" fill="rgb(252,42,44)"/><text x="452.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="449" y="1028" width="3" height="15" fill="rgb(247,35,1)"/><text x="452.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="449" y="1044" width="3" height="15" fill="rgb(229,127,45)"/><text x="452.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="449" y="1060" width="3" height="15" fill="rgb(205,172,38)"/><text x="452.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="449" y="1076" width="3" height="15" fill="rgb(211,197,24)"/><text x="452.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="449" y="1092" width="3" height="15" fill="rgb(216,202,43)"/><text x="452.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="449" y="1108" width="3" height="15" fill="rgb(234,33,48)"/><text x="452.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:589) (1 samples, 0.32%)</title><rect x="449" y="1124" width="3" height="15" fill="rgb(247,146,10)"/><text x="452.00" y="1134.50"></text></g><g><title>0x7fb3187e4fde (libc-2.29.so) (1 samples, 0.32%)</title><rect x="449" y="1140" width="3" height="15" fill="rgb(236,159,52)"/><text x="452.00" y="1150.50"></text></g><g><title>0x7fb318717448 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="452" y="1252" width="4" height="15" fill="rgb(225,6,17)"/><text x="455.00" y="1262.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (10 samples, 3.15%)</title><rect x="423" y="148" width="37" height="15" fill="rgb(231,214,34)"/><text x="426.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="164" width="37" height="15" fill="rgb(253,44,16)"/><text x="426.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.15%)</title><rect x="423" y="180" width="37" height="15" fill="rgb(249,127,33)"/><text x="426.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="196" width="37" height="15" fill="rgb(224,74,13)"/><text x="426.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="212" width="37" height="15" fill="rgb(247,10,37)"/><text x="426.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="228" width="37" height="15" fill="rgb(241,37,44)"/><text x="426.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="244" width="37" height="15" fill="rgb(231,172,1)"/><text x="426.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="260" width="37" height="15" fill="rgb(247,5,12)"/><text x="426.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="276" width="37" height="15" fill="rgb(241,4,43)"/><text x="426.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (10 samples, 3.15%)</title><rect x="423" y="292" width="37" height="15" fill="rgb(231,211,1)"/><text x="426.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="308" width="37" height="15" fill="rgb(249,161,10)"/><text x="426.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="324" width="37" height="15" fill="rgb(239,114,43)"/><text x="426.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="340" width="37" height="15" fill="rgb(213,60,7)"/><text x="426.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="356" width="37" height="15" fill="rgb(221,162,37)"/><text x="426.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="372" width="37" height="15" fill="rgb(232,81,11)"/><text x="426.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (10 samples, 3.15%)</title><rect x="423" y="388" width="37" height="15" fill="rgb(214,23,32)"/><text x="426.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="404" width="37" height="15" fill="rgb(250,98,27)"/><text x="426.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="420" width="37" height="15" fill="rgb(253,112,19)"/><text x="426.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="436" width="37" height="15" fill="rgb(242,48,47)"/><text x="426.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="452" width="37" height="15" fill="rgb(217,168,48)"/><text x="426.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="468" width="37" height="15" fill="rgb(254,109,12)"/><text x="426.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (10 samples, 3.15%)</title><rect x="423" y="484" width="37" height="15" fill="rgb(217,70,30)"/><text x="426.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="500" width="37" height="15" fill="rgb(209,173,49)"/><text x="426.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="516" width="37" height="15" fill="rgb(208,79,50)"/><text x="426.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="532" width="37" height="15" fill="rgb(229,46,32)"/><text x="426.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="548" width="37" height="15" fill="rgb(253,131,36)"/><text x="426.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="564" width="37" height="15" fill="rgb(251,26,5)"/><text x="426.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (10 samples, 3.15%)</title><rect x="423" y="580" width="37" height="15" fill="rgb(240,127,44)"/><text x="426.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="596" width="37" height="15" fill="rgb(216,221,17)"/><text x="426.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.15%)</title><rect x="423" y="612" width="37" height="15" fill="rgb(243,212,53)"/><text x="426.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="628" width="37" height="15" fill="rgb(208,105,7)"/><text x="426.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="644" width="37" height="15" fill="rgb(244,130,45)"/><text x="426.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="660" width="37" height="15" fill="rgb(225,24,51)"/><text x="426.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="676" width="37" height="15" fill="rgb(236,141,32)"/><text x="426.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="692" width="37" height="15" fill="rgb(214,18,26)"/><text x="426.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="708" width="37" height="15" fill="rgb(224,125,54)"/><text x="426.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (10 samples, 3.15%)</title><rect x="423" y="724" width="37" height="15" fill="rgb(244,30,29)"/><text x="426.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="423" y="740" width="37" height="15" fill="rgb(251,15,1)"/><text x="426.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="423" y="756" width="37" height="15" fill="rgb(240,101,4)"/><text x="426.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="423" y="772" width="37" height="15" fill="rgb(208,201,24)"/><text x="426.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="423" y="788" width="37" height="15" fill="rgb(238,56,46)"/><text x="426.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="423" y="804" width="37" height="15" fill="rgb(220,212,22)"/><text x="426.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (3 samples, 0.95%)</title><rect x="449" y="820" width="11" height="15" fill="rgb(242,8,13)"/><text x="452.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="449" y="836" width="11" height="15" fill="rgb(235,184,33)"/><text x="452.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="449" y="852" width="11" height="15" fill="rgb(206,197,49)"/><text x="452.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="449" y="868" width="11" height="15" fill="rgb(238,101,34)"/><text x="452.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="449" y="884" width="11" height="15" fill="rgb(207,67,41)"/><text x="452.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="449" y="900" width="11" height="15" fill="rgb(220,76,0)"/><text x="452.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (2 samples, 0.63%)</title><rect x="452" y="916" width="8" height="15" fill="rgb(216,106,23)"/><text x="455.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="452" y="932" width="8" height="15" fill="rgb(234,145,29)"/><text x="455.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="452" y="948" width="8" height="15" fill="rgb(230,76,22)"/><text x="455.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (2 samples, 0.63%)</title><rect x="452" y="964" width="8" height="15" fill="rgb(246,77,24)"/><text x="455.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (2 samples, 0.63%)</title><rect x="452" y="980" width="8" height="15" fill="rgb(237,137,2)"/><text x="455.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (2 samples, 0.63%)</title><rect x="452" y="996" width="8" height="15" fill="rgb(211,223,33)"/><text x="455.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="452" y="1012" width="8" height="15" fill="rgb(252,131,7)"/><text x="455.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="452" y="1028" width="8" height="15" fill="rgb(218,123,29)"/><text x="455.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="452" y="1044" width="8" height="15" fill="rgb(243,183,8)"/><text x="455.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="452" y="1060" width="8" height="15" fill="rgb(232,32,8)"/><text x="455.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="452" y="1076" width="8" height="15" fill="rgb(207,112,6)"/><text x="455.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:4756) (2 samples, 0.63%)</title><rect x="452" y="1092" width="8" height="15" fill="rgb(252,133,38)"/><text x="455.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py:1284) (2 samples, 0.63%)</title><rect x="452" y="1108" width="8" height="15" fill="rgb(244,84,2)"/><text x="455.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py:1066) (2 samples, 0.63%)</title><rect x="452" y="1124" width="8" height="15" fill="rgb(240,168,24)"/><text x="455.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py:1050) (2 samples, 0.63%)</title><rect x="452" y="1140" width="8" height="15" fill="rgb(243,0,16)"/><text x="455.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py:211) (2 samples, 0.63%)</title><rect x="452" y="1156" width="8" height="15" fill="rgb(234,119,18)"/><text x="455.00" y="1166.50"></text></g><g><title>extract (traceback.py:363) (2 samples, 0.63%)</title><rect x="452" y="1172" width="8" height="15" fill="rgb(225,4,40)"/><text x="455.00" y="1182.50"></text></g><g><title>line (traceback.py:285) (2 samples, 0.63%)</title><rect x="452" y="1188" width="8" height="15" fill="rgb(253,183,50)"/><text x="455.00" y="1198.50"></text></g><g><title>getline (linecache.py:16) (2 samples, 0.63%)</title><rect x="452" y="1204" width="8" height="15" fill="rgb(209,135,9)"/><text x="455.00" y="1214.50"></text></g><g><title>getlines (linecache.py:47) (2 samples, 0.63%)</title><rect x="452" y="1220" width="8" height="15" fill="rgb(215,15,31)"/><text x="455.00" y="1230.50"></text></g><g><title>updatecache (linecache.py:137) (2 samples, 0.63%)</title><rect x="452" y="1236" width="8" height="15" fill="rgb(207,76,42)"/><text x="455.00" y="1246.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="456" y="1252" width="4" height="15" fill="rgb(238,61,2)"/><text x="459.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.32%)</title><rect x="460" y="484" width="4" height="15" fill="rgb(241,167,18)"/><text x="463.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="460" y="500" width="4" height="15" fill="rgb(208,205,44)"/><text x="463.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="460" y="516" width="4" height="15" fill="rgb(222,3,5)"/><text x="463.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="460" y="532" width="4" height="15" fill="rgb(221,98,30)"/><text x="463.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="460" y="548" width="4" height="15" fill="rgb(222,44,21)"/><text x="463.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="460" y="564" width="4" height="15" fill="rgb(239,164,54)"/><text x="463.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.32%)</title><rect x="460" y="580" width="4" height="15" fill="rgb(216,73,47)"/><text x="463.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="460" y="596" width="4" height="15" fill="rgb(210,193,22)"/><text x="463.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="460" y="612" width="4" height="15" fill="rgb(247,150,6)"/><text x="463.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="460" y="628" width="4" height="15" fill="rgb(210,143,54)"/><text x="463.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="460" y="644" width="4" height="15" fill="rgb(249,215,4)"/><text x="463.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="460" y="660" width="4" height="15" fill="rgb(226,96,8)"/><text x="463.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.32%)</title><rect x="460" y="676" width="4" height="15" fill="rgb(214,55,43)"/><text x="463.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="460" y="692" width="4" height="15" fill="rgb(208,44,43)"/><text x="463.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="460" y="708" width="4" height="15" fill="rgb(215,138,54)"/><text x="463.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="460" y="724" width="4" height="15" fill="rgb(223,123,24)"/><text x="463.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="460" y="740" width="4" height="15" fill="rgb(237,36,24)"/><text x="463.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="460" y="756" width="4" height="15" fill="rgb(206,189,36)"/><text x="463.00" y="766.50"></text></g><g><title>0x7fb304f4c40e (?) (1 samples, 0.32%)</title><rect x="460" y="772" width="4" height="15" fill="rgb(225,197,48)"/><text x="463.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="460" y="788" width="4" height="15" fill="rgb(227,15,23)"/><text x="463.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="460" y="804" width="4" height="15" fill="rgb(244,197,34)"/><text x="463.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="460" y="820" width="4" height="15" fill="rgb(246,170,18)"/><text x="463.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="460" y="836" width="4" height="15" fill="rgb(222,172,3)"/><text x="463.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="460" y="852" width="4" height="15" fill="rgb(205,143,7)"/><text x="463.00" y="862.50"></text></g><g><title>0x7fb304d05104 (?) (1 samples, 0.32%)</title><rect x="460" y="868" width="4" height="15" fill="rgb(239,56,18)"/><text x="463.00" y="878.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.32%)</title><rect x="464" y="580" width="3" height="15" fill="rgb(219,80,33)"/><text x="467.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="596" width="3" height="15" fill="rgb(226,3,9)"/><text x="467.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="612" width="3" height="15" fill="rgb(230,97,26)"/><text x="467.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="628" width="3" height="15" fill="rgb(250,163,14)"/><text x="467.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="644" width="3" height="15" fill="rgb(212,37,50)"/><text x="467.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="660" width="3" height="15" fill="rgb(230,75,31)"/><text x="467.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.32%)</title><rect x="464" y="676" width="3" height="15" fill="rgb(205,208,23)"/><text x="467.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="692" width="3" height="15" fill="rgb(216,195,24)"/><text x="467.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="708" width="3" height="15" fill="rgb(234,139,23)"/><text x="467.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="724" width="3" height="15" fill="rgb(235,171,12)"/><text x="467.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="740" width="3" height="15" fill="rgb(218,146,32)"/><text x="467.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="756" width="3" height="15" fill="rgb(243,8,11)"/><text x="467.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.32%)</title><rect x="464" y="772" width="3" height="15" fill="rgb(207,21,42)"/><text x="467.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="788" width="3" height="15" fill="rgb(207,55,48)"/><text x="467.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="804" width="3" height="15" fill="rgb(232,29,24)"/><text x="467.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="820" width="3" height="15" fill="rgb(212,133,29)"/><text x="467.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="836" width="3" height="15" fill="rgb(243,189,25)"/><text x="467.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="852" width="3" height="15" fill="rgb(227,84,24)"/><text x="467.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.32%)</title><rect x="464" y="868" width="3" height="15" fill="rgb(221,75,8)"/><text x="467.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="884" width="3" height="15" fill="rgb(234,209,25)"/><text x="467.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="900" width="3" height="15" fill="rgb(233,191,21)"/><text x="467.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="916" width="3" height="15" fill="rgb(249,222,28)"/><text x="467.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="932" width="3" height="15" fill="rgb(247,214,48)"/><text x="467.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="948" width="3" height="15" fill="rgb(222,37,29)"/><text x="467.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:5) (1 samples, 0.32%)</title><rect x="464" y="964" width="3" height="15" fill="rgb(230,192,7)"/><text x="467.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="980" width="3" height="15" fill="rgb(252,2,51)"/><text x="467.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="996" width="3" height="15" fill="rgb(237,85,23)"/><text x="467.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="1012" width="3" height="15" fill="rgb(223,83,6)"/><text x="467.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="1028" width="3" height="15" fill="rgb(214,35,26)"/><text x="467.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="1044" width="3" height="15" fill="rgb(249,124,52)"/><text x="467.00" y="1054.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:106) (1 samples, 0.32%)</title><rect x="464" y="1060" width="3" height="15" fill="rgb(215,147,48)"/><text x="467.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="1076" width="3" height="15" fill="rgb(229,2,33)"/><text x="467.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="464" y="1092" width="3" height="15" fill="rgb(238,103,37)"/><text x="467.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="464" y="1108" width="3" height="15" fill="rgb(218,121,14)"/><text x="467.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="464" y="1124" width="3" height="15" fill="rgb(215,155,10)"/><text x="467.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="1140" width="3" height="15" fill="rgb(238,210,33)"/><text x="467.00" y="1150.50"></text></g><g><title>&lt;module&gt; (json/decoder.py:5) (1 samples, 0.32%)</title><rect x="464" y="1156" width="3" height="15" fill="rgb(227,210,42)"/><text x="467.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="464" y="1172" width="3" height="15" fill="rgb(231,186,48)"/><text x="467.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="464" y="1188" width="3" height="15" fill="rgb(227,49,24)"/><text x="467.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="464" y="1204" width="3" height="15" fill="rgb(242,76,10)"/><text x="467.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.32%)</title><rect x="464" y="1220" width="3" height="15" fill="rgb(253,122,33)"/><text x="467.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.32%)</title><rect x="464" y="1236" width="3" height="15" fill="rgb(230,213,25)"/><text x="467.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.32%)</title><rect x="464" y="1252" width="3" height="15" fill="rgb(209,39,25)"/><text x="467.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.32%)</title><rect x="464" y="1268" width="3" height="15" fill="rgb(220,173,51)"/><text x="467.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.32%)</title><rect x="464" y="1284" width="3" height="15" fill="rgb(246,214,46)"/><text x="467.00" y="1294.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.32%)</title><rect x="464" y="1300" width="3" height="15" fill="rgb(224,76,9)"/><text x="467.00" y="1310.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="464" y="1316" width="3" height="15" fill="rgb(248,95,14)"/><text x="467.00" y="1326.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.32%)</title><rect x="464" y="1332" width="3" height="15" fill="rgb(231,219,28)"/><text x="467.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.95%)</title><rect x="460" y="292" width="11" height="15" fill="rgb(207,4,25)"/><text x="463.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="460" y="308" width="11" height="15" fill="rgb(207,113,8)"/><text x="463.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="460" y="324" width="11" height="15" fill="rgb(229,148,7)"/><text x="463.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="460" y="340" width="11" height="15" fill="rgb(241,74,44)"/><text x="463.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="460" y="356" width="11" height="15" fill="rgb(240,174,13)"/><text x="463.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="460" y="372" width="11" height="15" fill="rgb(225,146,32)"/><text x="463.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.95%)</title><rect x="460" y="388" width="11" height="15" fill="rgb(232,0,34)"/><text x="463.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="460" y="404" width="11" height="15" fill="rgb(242,134,43)"/><text x="463.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="460" y="420" width="11" height="15" fill="rgb(245,150,49)"/><text x="463.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="460" y="436" width="11" height="15" fill="rgb(241,24,28)"/><text x="463.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="460" y="452" width="11" height="15" fill="rgb(212,135,54)"/><text x="463.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="460" y="468" width="11" height="15" fill="rgb(229,167,9)"/><text x="463.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.63%)</title><rect x="464" y="484" width="7" height="15" fill="rgb(247,218,18)"/><text x="467.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="464" y="500" width="7" height="15" fill="rgb(211,58,12)"/><text x="467.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="464" y="516" width="7" height="15" fill="rgb(241,29,43)"/><text x="467.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="464" y="532" width="7" height="15" fill="rgb(206,63,7)"/><text x="467.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="464" y="548" width="7" height="15" fill="rgb(253,191,38)"/><text x="467.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="464" y="564" width="7" height="15" fill="rgb(209,89,28)"/><text x="467.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.32%)</title><rect x="467" y="580" width="4" height="15" fill="rgb(249,50,23)"/><text x="470.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="596" width="4" height="15" fill="rgb(252,21,10)"/><text x="470.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="467" y="612" width="4" height="15" fill="rgb(210,144,2)"/><text x="470.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="628" width="4" height="15" fill="rgb(215,53,33)"/><text x="470.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="644" width="4" height="15" fill="rgb(236,107,30)"/><text x="470.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="467" y="660" width="4" height="15" fill="rgb(250,127,20)"/><text x="470.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="467" y="676" width="4" height="15" fill="rgb(240,40,45)"/><text x="470.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="467" y="692" width="4" height="15" fill="rgb(229,191,15)"/><text x="470.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="708" width="4" height="15" fill="rgb(248,11,16)"/><text x="470.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:8) (1 samples, 0.32%)</title><rect x="467" y="724" width="4" height="15" fill="rgb(231,178,10)"/><text x="470.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="740" width="4" height="15" fill="rgb(211,48,1)"/><text x="470.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="467" y="756" width="4" height="15" fill="rgb(252,121,49)"/><text x="470.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="467" y="772" width="4" height="15" fill="rgb(243,7,39)"/><text x="470.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="467" y="788" width="4" height="15" fill="rgb(220,52,10)"/><text x="470.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="804" width="4" height="15" fill="rgb(217,26,7)"/><text x="470.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py:53) (1 samples, 0.32%)</title><rect x="467" y="820" width="4" height="15" fill="rgb(253,174,12)"/><text x="470.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="467" y="836" width="4" height="15" fill="rgb(241,64,17)"/><text x="470.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="852" width="4" height="15" fill="rgb(226,56,36)"/><text x="470.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="868" width="4" height="15" fill="rgb(237,1,50)"/><text x="470.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="467" y="884" width="4" height="15" fill="rgb(234,148,34)"/><text x="470.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="467" y="900" width="4" height="15" fill="rgb(223,75,28)"/><text x="470.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="467" y="916" width="4" height="15" fill="rgb(253,132,25)"/><text x="470.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="932" width="4" height="15" fill="rgb(245,105,16)"/><text x="470.00" y="942.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py:46) (1 samples, 0.32%)</title><rect x="467" y="948" width="4" height="15" fill="rgb(205,89,20)"/><text x="470.00" y="958.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="467" y="964" width="4" height="15" fill="rgb(206,34,40)"/><text x="470.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="980" width="4" height="15" fill="rgb(246,112,43)"/><text x="470.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="996" width="4" height="15" fill="rgb(214,67,14)"/><text x="470.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="467" y="1012" width="4" height="15" fill="rgb(241,16,24)"/><text x="470.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="467" y="1028" width="4" height="15" fill="rgb(227,93,53)"/><text x="470.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="467" y="1044" width="4" height="15" fill="rgb(245,21,8)"/><text x="470.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="1060" width="4" height="15" fill="rgb(249,71,2)"/><text x="470.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py:29) (1 samples, 0.32%)</title><rect x="467" y="1076" width="4" height="15" fill="rgb(209,211,49)"/><text x="470.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="467" y="1092" width="4" height="15" fill="rgb(231,11,31)"/><text x="470.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="467" y="1108" width="4" height="15" fill="rgb(252,162,51)"/><text x="470.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="467" y="1124" width="4" height="15" fill="rgb(240,80,0)"/><text x="470.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="467" y="1140" width="4" height="15" fill="rgb(247,167,32)"/><text x="470.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="467" y="1156" width="4" height="15" fill="rgb(253,156,12)"/><text x="470.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py:979) (1 samples, 0.32%)</title><rect x="467" y="1172" width="4" height="15" fill="rgb(221,109,21)"/><text x="470.00" y="1182.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.32%)</title><rect x="471" y="1012" width="4" height="15" fill="rgb(243,208,6)"/><text x="474.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="471" y="1028" width="4" height="15" fill="rgb(220,214,19)"/><text x="474.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="471" y="1044" width="4" height="15" fill="rgb(242,143,12)"/><text x="474.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="471" y="1060" width="4" height="15" fill="rgb(239,41,11)"/><text x="474.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="471" y="1076" width="4" height="15" fill="rgb(216,114,33)"/><text x="474.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="471" y="1092" width="4" height="15" fill="rgb(243,112,10)"/><text x="474.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.32%)</title><rect x="471" y="1108" width="4" height="15" fill="rgb(254,116,45)"/><text x="474.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="471" y="1124" width="4" height="15" fill="rgb(223,58,53)"/><text x="474.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="471" y="1140" width="4" height="15" fill="rgb(245,144,52)"/><text x="474.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="471" y="1156" width="4" height="15" fill="rgb(236,136,14)"/><text x="474.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="471" y="1172" width="4" height="15" fill="rgb(252,105,17)"/><text x="474.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="471" y="1188" width="4" height="15" fill="rgb(233,154,10)"/><text x="474.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="471" y="1204" width="4" height="15" fill="rgb(215,70,49)"/><text x="474.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="471" y="1220" width="4" height="15" fill="rgb(207,145,20)"/><text x="474.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.32%)</title><rect x="471" y="1236" width="4" height="15" fill="rgb(242,153,34)"/><text x="474.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="471" y="1252" width="4" height="15" fill="rgb(238,3,15)"/><text x="474.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="471" y="1268" width="4" height="15" fill="rgb(254,180,45)"/><text x="474.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="471" y="1284" width="4" height="15" fill="rgb(227,143,31)"/><text x="474.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="471" y="1300" width="4" height="15" fill="rgb(213,65,40)"/><text x="474.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="471" y="1316" width="4" height="15" fill="rgb(211,195,51)"/><text x="474.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="471" y="1332" width="4" height="15" fill="rgb(230,3,3)"/><text x="474.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="471" y="1348" width="4" height="15" fill="rgb(237,156,36)"/><text x="474.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3292) (1 samples, 0.32%)</title><rect x="471" y="1364" width="4" height="15" fill="rgb(220,206,29)"/><text x="474.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.32%)</title><rect x="471" y="1380" width="4" height="15" fill="rgb(235,36,0)"/><text x="474.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.32%)</title><rect x="471" y="1396" width="4" height="15" fill="rgb(243,5,51)"/><text x="474.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.63%)</title><rect x="471" y="532" width="8" height="15" fill="rgb(234,215,12)"/><text x="474.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="471" y="548" width="8" height="15" fill="rgb(214,47,52)"/><text x="474.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="471" y="564" width="8" height="15" fill="rgb(234,82,43)"/><text x="474.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="471" y="580" width="8" height="15" fill="rgb(229,57,33)"/><text x="474.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="471" y="596" width="8" height="15" fill="rgb(213,165,49)"/><text x="474.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="471" y="612" width="8" height="15" fill="rgb(218,33,47)"/><text x="474.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.63%)</title><rect x="471" y="628" width="8" height="15" fill="rgb(235,214,1)"/><text x="474.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="471" y="644" width="8" height="15" fill="rgb(249,25,1)"/><text x="474.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="471" y="660" width="8" height="15" fill="rgb(205,171,30)"/><text x="474.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="471" y="676" width="8" height="15" fill="rgb(235,206,11)"/><text x="474.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="471" y="692" width="8" height="15" fill="rgb(206,139,25)"/><text x="474.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="471" y="708" width="8" height="15" fill="rgb(228,29,54)"/><text x="474.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.63%)</title><rect x="471" y="724" width="8" height="15" fill="rgb(239,73,4)"/><text x="474.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="471" y="740" width="8" height="15" fill="rgb(252,205,43)"/><text x="474.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="471" y="756" width="8" height="15" fill="rgb(205,84,2)"/><text x="474.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="471" y="772" width="8" height="15" fill="rgb(224,166,35)"/><text x="474.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="471" y="788" width="8" height="15" fill="rgb(206,223,33)"/><text x="474.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="471" y="804" width="8" height="15" fill="rgb(216,183,8)"/><text x="474.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.63%)</title><rect x="471" y="820" width="8" height="15" fill="rgb(229,61,51)"/><text x="474.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="471" y="836" width="8" height="15" fill="rgb(231,108,27)"/><text x="474.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="471" y="852" width="8" height="15" fill="rgb(245,163,20)"/><text x="474.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="471" y="868" width="8" height="15" fill="rgb(247,216,19)"/><text x="474.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="471" y="884" width="8" height="15" fill="rgb(230,115,36)"/><text x="474.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="471" y="900" width="8" height="15" fill="rgb(214,116,48)"/><text x="474.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.63%)</title><rect x="471" y="916" width="8" height="15" fill="rgb(251,47,26)"/><text x="474.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="471" y="932" width="8" height="15" fill="rgb(245,127,17)"/><text x="474.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="471" y="948" width="8" height="15" fill="rgb(214,110,35)"/><text x="474.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="471" y="964" width="8" height="15" fill="rgb(250,91,5)"/><text x="474.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="471" y="980" width="8" height="15" fill="rgb(241,177,42)"/><text x="474.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="471" y="996" width="8" height="15" fill="rgb(251,61,39)"/><text x="474.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:384) (1 samples, 0.32%)</title><rect x="475" y="1012" width="4" height="15" fill="rgb(212,122,40)"/><text x="478.00" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1032) (1 samples, 0.32%)</title><rect x="475" y="1028" width="4" height="15" fill="rgb(233,22,1)"/><text x="478.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.32%)</title><rect x="479" y="964" width="3" height="15" fill="rgb(232,117,8)"/><text x="482.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="980" width="3" height="15" fill="rgb(234,228,11)"/><text x="482.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="996" width="3" height="15" fill="rgb(241,166,25)"/><text x="482.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1012" width="3" height="15" fill="rgb(237,176,19)"/><text x="482.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1028" width="3" height="15" fill="rgb(217,191,33)"/><text x="482.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1044" width="3" height="15" fill="rgb(206,88,46)"/><text x="482.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.32%)</title><rect x="479" y="1060" width="3" height="15" fill="rgb(234,195,34)"/><text x="482.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1076" width="3" height="15" fill="rgb(241,130,47)"/><text x="482.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1092" width="3" height="15" fill="rgb(251,185,35)"/><text x="482.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1108" width="3" height="15" fill="rgb(221,190,22)"/><text x="482.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1124" width="3" height="15" fill="rgb(239,73,17)"/><text x="482.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1140" width="3" height="15" fill="rgb(220,50,41)"/><text x="482.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.32%)</title><rect x="479" y="1156" width="3" height="15" fill="rgb(247,23,27)"/><text x="482.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1172" width="3" height="15" fill="rgb(229,195,30)"/><text x="482.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1188" width="3" height="15" fill="rgb(211,114,3)"/><text x="482.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1204" width="3" height="15" fill="rgb(229,67,27)"/><text x="482.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1220" width="3" height="15" fill="rgb(240,147,51)"/><text x="482.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1236" width="3" height="15" fill="rgb(228,182,50)"/><text x="482.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.32%)</title><rect x="479" y="1252" width="3" height="15" fill="rgb(228,221,42)"/><text x="482.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1268" width="3" height="15" fill="rgb(247,164,2)"/><text x="482.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1284" width="3" height="15" fill="rgb(247,111,16)"/><text x="482.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1300" width="3" height="15" fill="rgb(223,127,35)"/><text x="482.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1316" width="3" height="15" fill="rgb(222,29,19)"/><text x="482.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1332" width="3" height="15" fill="rgb(237,97,19)"/><text x="482.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.32%)</title><rect x="479" y="1348" width="3" height="15" fill="rgb(228,6,11)"/><text x="482.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="479" y="1364" width="3" height="15" fill="rgb(226,79,50)"/><text x="482.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1380" width="3" height="15" fill="rgb(219,48,53)"/><text x="482.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1396" width="3" height="15" fill="rgb(233,163,29)"/><text x="482.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1412" width="3" height="15" fill="rgb(247,127,33)"/><text x="482.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1428" width="3" height="15" fill="rgb(220,145,2)"/><text x="482.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1444" width="3" height="15" fill="rgb(227,202,8)"/><text x="482.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1460" width="3" height="15" fill="rgb(244,192,48)"/><text x="482.00" y="1470.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.32%)</title><rect x="479" y="1476" width="3" height="15" fill="rgb(231,161,18)"/><text x="482.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1492" width="3" height="15" fill="rgb(205,228,33)"/><text x="482.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1508" width="3" height="15" fill="rgb(223,80,21)"/><text x="482.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1524" width="3" height="15" fill="rgb(233,69,11)"/><text x="482.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1540" width="3" height="15" fill="rgb(211,118,19)"/><text x="482.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1556" width="3" height="15" fill="rgb(243,216,37)"/><text x="482.00" y="1566.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.32%)</title><rect x="479" y="1572" width="3" height="15" fill="rgb(218,191,6)"/><text x="482.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1588" width="3" height="15" fill="rgb(242,211,40)"/><text x="482.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1604" width="3" height="15" fill="rgb(247,75,39)"/><text x="482.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="479" y="1620" width="3" height="15" fill="rgb(211,188,40)"/><text x="482.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="479" y="1636" width="3" height="15" fill="rgb(252,191,37)"/><text x="482.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="479" y="1652" width="3" height="15" fill="rgb(222,82,0)"/><text x="482.00" y="1662.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:5) (1 samples, 0.32%)</title><rect x="479" y="1668" width="3" height="15" fill="rgb(233,32,54)"/><text x="482.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="479" y="1684" width="3" height="15" fill="rgb(248,142,2)"/><text x="482.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="479" y="1700" width="3" height="15" fill="rgb(237,117,5)"/><text x="482.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="479" y="1716" width="3" height="15" fill="rgb(230,31,1)"/><text x="482.00" y="1726.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.32%)</title><rect x="479" y="1732" width="3" height="15" fill="rgb(253,106,52)"/><text x="482.00" y="1742.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.32%)</title><rect x="479" y="1748" width="3" height="15" fill="rgb(246,176,3)"/><text x="482.00" y="1758.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.32%)</title><rect x="479" y="1764" width="3" height="15" fill="rgb(223,23,48)"/><text x="482.00" y="1774.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:370) (1 samples, 0.32%)</title><rect x="479" y="1780" width="3" height="15" fill="rgb(224,88,30)"/><text x="482.00" y="1790.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.32%)</title><rect x="479" y="1796" width="3" height="15" fill="rgb(243,167,37)"/><text x="482.00" y="1806.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.32%)</title><rect x="482" y="964" width="4" height="15" fill="rgb(251,176,31)"/><text x="485.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="482" y="980" width="4" height="15" fill="rgb(227,226,40)"/><text x="485.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="482" y="996" width="4" height="15" fill="rgb(218,161,46)"/><text x="485.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="482" y="1012" width="4" height="15" fill="rgb(239,123,7)"/><text x="485.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="482" y="1028" width="4" height="15" fill="rgb(210,137,10)"/><text x="485.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="482" y="1044" width="4" height="15" fill="rgb(232,87,34)"/><text x="485.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="482" y="1060" width="4" height="15" fill="rgb(228,84,28)"/><text x="485.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="482" y="1076" width="4" height="15" fill="rgb(226,101,43)"/><text x="485.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:33) (1 samples, 0.32%)</title><rect x="482" y="1092" width="4" height="15" fill="rgb(252,22,0)"/><text x="485.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="482" y="1108" width="4" height="15" fill="rgb(251,102,4)"/><text x="485.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="482" y="1124" width="4" height="15" fill="rgb(224,92,33)"/><text x="485.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="482" y="1140" width="4" height="15" fill="rgb(233,128,21)"/><text x="485.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="482" y="1156" width="4" height="15" fill="rgb(240,138,11)"/><text x="485.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="482" y="1172" width="4" height="15" fill="rgb(217,132,35)"/><text x="485.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.32%)</title><rect x="482" y="1188" width="4" height="15" fill="rgb(251,13,47)"/><text x="485.00" y="1198.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.32%)</title><rect x="482" y="1204" width="4" height="15" fill="rgb(239,191,2)"/><text x="485.00" y="1214.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.32%)</title><rect x="482" y="1220" width="4" height="15" fill="rgb(211,147,26)"/><text x="485.00" y="1230.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.32%)</title><rect x="482" y="1236" width="4" height="15" fill="rgb(205,18,22)"/><text x="485.00" y="1246.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.32%)</title><rect x="482" y="1252" width="4" height="15" fill="rgb(235,127,41)"/><text x="485.00" y="1262.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (8 samples, 2.52%)</title><rect x="460" y="148" width="30" height="15" fill="rgb(232,214,1)"/><text x="463.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.52%)</title><rect x="460" y="164" width="30" height="15" fill="rgb(245,89,39)"/><text x="463.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.52%)</title><rect x="460" y="180" width="30" height="15" fill="rgb(250,65,3)"/><text x="463.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.52%)</title><rect x="460" y="196" width="30" height="15" fill="rgb(237,61,31)"/><text x="463.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.52%)</title><rect x="460" y="212" width="30" height="15" fill="rgb(229,70,7)"/><text x="463.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.52%)</title><rect x="460" y="228" width="30" height="15" fill="rgb(218,151,8)"/><text x="463.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.52%)</title><rect x="460" y="244" width="30" height="15" fill="rgb(230,78,16)"/><text x="463.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.52%)</title><rect x="460" y="260" width="30" height="15" fill="rgb(248,177,29)"/><text x="463.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.52%)</title><rect x="460" y="276" width="30" height="15" fill="rgb(250,173,27)"/><text x="463.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.58%)</title><rect x="471" y="292" width="19" height="15" fill="rgb(244,125,36)"/><text x="474.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="471" y="308" width="19" height="15" fill="rgb(215,191,8)"/><text x="474.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.58%)</title><rect x="471" y="324" width="19" height="15" fill="rgb(223,173,41)"/><text x="474.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="471" y="340" width="19" height="15" fill="rgb(245,147,39)"/><text x="474.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="471" y="356" width="19" height="15" fill="rgb(232,214,45)"/><text x="474.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.58%)</title><rect x="471" y="372" width="19" height="15" fill="rgb(223,8,46)"/><text x="474.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.58%)</title><rect x="471" y="388" width="19" height="15" fill="rgb(206,191,3)"/><text x="474.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.58%)</title><rect x="471" y="404" width="19" height="15" fill="rgb(252,167,10)"/><text x="474.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="471" y="420" width="19" height="15" fill="rgb(213,80,18)"/><text x="474.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.58%)</title><rect x="471" y="436" width="19" height="15" fill="rgb(225,53,43)"/><text x="474.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="471" y="452" width="19" height="15" fill="rgb(252,57,23)"/><text x="474.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.58%)</title><rect x="471" y="468" width="19" height="15" fill="rgb(226,130,8)"/><text x="474.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.58%)</title><rect x="471" y="484" width="19" height="15" fill="rgb(246,204,14)"/><text x="474.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.58%)</title><rect x="471" y="500" width="19" height="15" fill="rgb(223,112,37)"/><text x="474.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="471" y="516" width="19" height="15" fill="rgb(234,112,42)"/><text x="474.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.95%)</title><rect x="479" y="532" width="11" height="15" fill="rgb(213,70,45)"/><text x="482.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="479" y="548" width="11" height="15" fill="rgb(207,211,4)"/><text x="482.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="479" y="564" width="11" height="15" fill="rgb(220,85,39)"/><text x="482.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="479" y="580" width="11" height="15" fill="rgb(212,15,48)"/><text x="482.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="479" y="596" width="11" height="15" fill="rgb(231,43,24)"/><text x="482.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="479" y="612" width="11" height="15" fill="rgb(222,28,29)"/><text x="482.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.95%)</title><rect x="479" y="628" width="11" height="15" fill="rgb(227,221,7)"/><text x="482.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="479" y="644" width="11" height="15" fill="rgb(209,133,43)"/><text x="482.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="479" y="660" width="11" height="15" fill="rgb(237,170,35)"/><text x="482.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="479" y="676" width="11" height="15" fill="rgb(238,71,35)"/><text x="482.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="479" y="692" width="11" height="15" fill="rgb(252,179,36)"/><text x="482.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="479" y="708" width="11" height="15" fill="rgb(253,141,34)"/><text x="482.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.95%)</title><rect x="479" y="724" width="11" height="15" fill="rgb(246,122,46)"/><text x="482.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="479" y="740" width="11" height="15" fill="rgb(253,222,37)"/><text x="482.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.95%)</title><rect x="479" y="756" width="11" height="15" fill="rgb(246,42,9)"/><text x="482.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="479" y="772" width="11" height="15" fill="rgb(207,119,42)"/><text x="482.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="479" y="788" width="11" height="15" fill="rgb(214,226,30)"/><text x="482.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="479" y="804" width="11" height="15" fill="rgb(232,216,36)"/><text x="482.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="479" y="820" width="11" height="15" fill="rgb(249,98,51)"/><text x="482.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="479" y="836" width="11" height="15" fill="rgb(215,22,39)"/><text x="482.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="479" y="852" width="11" height="15" fill="rgb(248,26,44)"/><text x="482.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.95%)</title><rect x="479" y="868" width="11" height="15" fill="rgb(239,163,10)"/><text x="482.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.95%)</title><rect x="479" y="884" width="11" height="15" fill="rgb(254,11,21)"/><text x="482.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.95%)</title><rect x="479" y="900" width="11" height="15" fill="rgb(242,209,6)"/><text x="482.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.95%)</title><rect x="479" y="916" width="11" height="15" fill="rgb(218,114,49)"/><text x="482.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.95%)</title><rect x="479" y="932" width="11" height="15" fill="rgb(231,219,30)"/><text x="482.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.95%)</title><rect x="479" y="948" width="11" height="15" fill="rgb(222,118,3)"/><text x="482.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.32%)</title><rect x="486" y="964" width="4" height="15" fill="rgb(221,87,38)"/><text x="489.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="486" y="980" width="4" height="15" fill="rgb(232,195,31)"/><text x="489.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="486" y="996" width="4" height="15" fill="rgb(222,133,14)"/><text x="489.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="486" y="1012" width="4" height="15" fill="rgb(235,50,40)"/><text x="489.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="486" y="1028" width="4" height="15" fill="rgb(224,35,37)"/><text x="489.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="486" y="1044" width="4" height="15" fill="rgb(235,203,38)"/><text x="489.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="486" y="1060" width="4" height="15" fill="rgb(241,193,40)"/><text x="489.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="486" y="1076" width="4" height="15" fill="rgb(219,71,9)"/><text x="489.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.32%)</title><rect x="486" y="1092" width="4" height="15" fill="rgb(222,136,42)"/><text x="489.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="486" y="1108" width="4" height="15" fill="rgb(240,113,4)"/><text x="489.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="486" y="1124" width="4" height="15" fill="rgb(229,43,25)"/><text x="489.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="486" y="1140" width="4" height="15" fill="rgb(222,88,40)"/><text x="489.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="486" y="1156" width="4" height="15" fill="rgb(241,155,7)"/><text x="489.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="486" y="1172" width="4" height="15" fill="rgb(220,19,10)"/><text x="489.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="486" y="1188" width="4" height="15" fill="rgb(251,67,39)"/><text x="489.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="486" y="1204" width="4" height="15" fill="rgb(210,20,31)"/><text x="489.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.32%)</title><rect x="486" y="1220" width="4" height="15" fill="rgb(238,13,49)"/><text x="489.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="486" y="1236" width="4" height="15" fill="rgb(241,194,37)"/><text x="489.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="486" y="1252" width="4" height="15" fill="rgb(242,124,33)"/><text x="489.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="486" y="1268" width="4" height="15" fill="rgb(230,188,37)"/><text x="489.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="486" y="1284" width="4" height="15" fill="rgb(234,170,37)"/><text x="489.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="486" y="1300" width="4" height="15" fill="rgb(228,223,37)"/><text x="489.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.32%)</title><rect x="486" y="1316" width="4" height="15" fill="rgb(206,158,33)"/><text x="489.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.32%)</title><rect x="486" y="1332" width="4" height="15" fill="rgb(247,222,50)"/><text x="489.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.32%)</title><rect x="486" y="1348" width="4" height="15" fill="rgb(241,144,6)"/><text x="489.00" y="1358.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1364" width="4" height="15" fill="rgb(251,217,30)"/><text x="489.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1380" width="4" height="15" fill="rgb(240,109,3)"/><text x="489.00" y="1390.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1396" width="4" height="15" fill="rgb(215,161,42)"/><text x="489.00" y="1406.50"></text></g><g><title>onnx::OpSet_Onnx_ver12::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1412" width="4" height="15" fill="rgb(242,154,46)"/><text x="489.00" y="1422.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::ArgMax_Onnx_ver12&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1428" width="4" height="15" fill="rgb(210,204,46)"/><text x="489.00" y="1438.50"></text></g><g><title>onnx::OpSchema::FillUsing (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1444" width="4" height="15" fill="rgb(243,117,47)"/><text x="489.00" y="1454.50"></text></g><g><title>std::_Function_handler&lt;void (onnx::OpSchema&amp;), onnx::ArgReduceDocGenerator(char const*)::{lambda(onnx::OpSchema&amp;)#1}&gt;::_M_invoke (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1460" width="4" height="15" fill="rgb(227,172,40)"/><text x="489.00" y="1470.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1476" width="4" height="15" fill="rgb(243,82,33)"/><text x="489.00" y="1486.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1492" width="4" height="15" fill="rgb(222,184,34)"/><text x="489.00" y="1502.50"></text></g><g><title>onnx::Utils::DataTypeUtils::FromString (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1508" width="4" height="15" fill="rgb(229,181,52)"/><text x="489.00" y="1518.50"></text></g><g><title>onnx::Utils::StringRange::ParensWhitespaceStrip (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1524" width="4" height="15" fill="rgb(247,0,53)"/><text x="489.00" y="1534.50"></text></g><g><title>onnx::Utils::StringRange::LAndRStrip (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1540" width="4" height="15" fill="rgb(215,218,14)"/><text x="489.00" y="1550.50"></text></g><g><title>onnx::Utils::StringRange::LStrip (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="486" y="1556" width="4" height="15" fill="rgb(241,121,39)"/><text x="489.00" y="1566.50"></text></g><g><title>isspace (libc-2.29.so) (1 samples, 0.32%)</title><rect x="486" y="1572" width="4" height="15" fill="rgb(250,131,0)"/><text x="489.00" y="1582.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.32%)</title><rect x="490" y="772" width="3" height="15" fill="rgb(245,186,22)"/><text x="493.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="490" y="788" width="3" height="15" fill="rgb(215,165,16)"/><text x="493.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="490" y="804" width="3" height="15" fill="rgb(231,69,43)"/><text x="493.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="490" y="820" width="3" height="15" fill="rgb(226,175,13)"/><text x="493.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="490" y="836" width="3" height="15" fill="rgb(239,5,31)"/><text x="493.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="490" y="852" width="3" height="15" fill="rgb(221,26,14)"/><text x="493.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="490" y="868" width="3" height="15" fill="rgb(236,175,4)"/><text x="493.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="490" y="884" width="3" height="15" fill="rgb(252,115,49)"/><text x="493.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.32%)</title><rect x="490" y="900" width="3" height="15" fill="rgb(239,178,38)"/><text x="493.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="490" y="916" width="3" height="15" fill="rgb(249,60,50)"/><text x="493.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="490" y="932" width="3" height="15" fill="rgb(230,79,21)"/><text x="493.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="490" y="948" width="3" height="15" fill="rgb(207,18,30)"/><text x="493.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="490" y="964" width="3" height="15" fill="rgb(218,66,51)"/><text x="493.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="490" y="980" width="3" height="15" fill="rgb(239,71,54)"/><text x="493.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.32%)</title><rect x="490" y="996" width="3" height="15" fill="rgb(244,24,52)"/><text x="493.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="490" y="1012" width="3" height="15" fill="rgb(236,31,35)"/><text x="493.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="490" y="1028" width="3" height="15" fill="rgb(228,165,16)"/><text x="493.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="490" y="1044" width="3" height="15" fill="rgb(221,54,15)"/><text x="493.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="490" y="1060" width="3" height="15" fill="rgb(214,32,20)"/><text x="493.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="490" y="1076" width="3" height="15" fill="rgb(247,70,12)"/><text x="493.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:60) (1 samples, 0.32%)</title><rect x="490" y="1092" width="3" height="15" fill="rgb(230,220,52)"/><text x="493.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="490" y="1108" width="3" height="15" fill="rgb(254,157,49)"/><text x="493.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="490" y="1124" width="3" height="15" fill="rgb(235,167,13)"/><text x="493.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="490" y="1140" width="3" height="15" fill="rgb(208,210,14)"/><text x="493.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="490" y="1156" width="3" height="15" fill="rgb(253,143,5)"/><text x="493.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="490" y="1172" width="3" height="15" fill="rgb(218,225,43)"/><text x="493.00" y="1182.50"></text></g><g><title>&lt;module&gt; (http/cookies.py:451) (1 samples, 0.32%)</title><rect x="490" y="1188" width="3" height="15" fill="rgb(243,117,49)"/><text x="493.00" y="1198.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="490" y="1204" width="3" height="15" fill="rgb(211,128,47)"/><text x="493.00" y="1214.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="490" y="1220" width="3" height="15" fill="rgb(210,59,25)"/><text x="493.00" y="1230.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.32%)</title><rect x="490" y="1236" width="3" height="15" fill="rgb(249,208,4)"/><text x="493.00" y="1246.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.32%)</title><rect x="490" y="1252" width="3" height="15" fill="rgb(249,128,46)"/><text x="493.00" y="1262.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="490" y="1268" width="3" height="15" fill="rgb(218,153,21)"/><text x="493.00" y="1278.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="490" y="1284" width="3" height="15" fill="rgb(254,167,17)"/><text x="493.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="490" y="1300" width="3" height="15" fill="rgb(210,124,16)"/><text x="493.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.32%)</title><rect x="490" y="1316" width="3" height="15" fill="rgb(219,52,17)"/><text x="493.00" y="1326.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:4) (21 samples, 6.62%)</title><rect x="419" y="52" width="78" height="15" fill="rgb(230,182,37)"/><text x="422.00" y="62.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 6.62%)</title><rect x="419" y="68" width="78" height="15" fill="rgb(205,92,27)"/><text x="422.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 6.62%)</title><rect x="419" y="84" width="78" height="15" fill="rgb(251,229,43)"/><text x="422.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 6.62%)</title><rect x="419" y="100" width="78" height="15" fill="rgb(210,5,41)"/><text x="422.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 6.62%)</title><rect x="419" y="116" width="78" height="15" fill="rgb(213,45,40)"/><text x="422.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 6.62%)</title><rect x="419" y="132" width="78" height="15" fill="rgb(224,29,7)"/><text x="422.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:8) (2 samples, 0.63%)</title><rect x="490" y="148" width="7" height="15" fill="rgb(250,201,45)"/><text x="493.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="164" width="7" height="15" fill="rgb(250,142,50)"/><text x="493.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="180" width="7" height="15" fill="rgb(225,4,30)"/><text x="493.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="196" width="7" height="15" fill="rgb(207,150,3)"/><text x="493.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="212" width="7" height="15" fill="rgb(214,121,11)"/><text x="493.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="228" width="7" height="15" fill="rgb(230,179,25)"/><text x="493.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.63%)</title><rect x="490" y="244" width="7" height="15" fill="rgb(241,223,34)"/><text x="493.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="260" width="7" height="15" fill="rgb(207,143,32)"/><text x="493.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="276" width="7" height="15" fill="rgb(247,185,49)"/><text x="493.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="292" width="7" height="15" fill="rgb(211,71,14)"/><text x="493.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="308" width="7" height="15" fill="rgb(205,176,7)"/><text x="493.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="324" width="7" height="15" fill="rgb(246,204,32)"/><text x="493.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.63%)</title><rect x="490" y="340" width="7" height="15" fill="rgb(224,26,6)"/><text x="493.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="356" width="7" height="15" fill="rgb(254,107,23)"/><text x="493.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.63%)</title><rect x="490" y="372" width="7" height="15" fill="rgb(226,42,32)"/><text x="493.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="388" width="7" height="15" fill="rgb(206,23,38)"/><text x="493.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="404" width="7" height="15" fill="rgb(240,27,33)"/><text x="493.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="420" width="7" height="15" fill="rgb(245,67,42)"/><text x="493.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="436" width="7" height="15" fill="rgb(234,51,21)"/><text x="493.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="452" width="7" height="15" fill="rgb(214,216,27)"/><text x="493.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="468" width="7" height="15" fill="rgb(226,188,3)"/><text x="493.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.63%)</title><rect x="490" y="484" width="7" height="15" fill="rgb(242,146,22)"/><text x="493.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="500" width="7" height="15" fill="rgb(241,107,13)"/><text x="493.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="516" width="7" height="15" fill="rgb(254,220,13)"/><text x="493.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="532" width="7" height="15" fill="rgb(214,214,17)"/><text x="493.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="548" width="7" height="15" fill="rgb(252,191,18)"/><text x="493.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="564" width="7" height="15" fill="rgb(224,195,45)"/><text x="493.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.63%)</title><rect x="490" y="580" width="7" height="15" fill="rgb(217,112,0)"/><text x="493.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="596" width="7" height="15" fill="rgb(222,125,2)"/><text x="493.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="612" width="7" height="15" fill="rgb(245,164,21)"/><text x="493.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="628" width="7" height="15" fill="rgb(233,59,20)"/><text x="493.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="644" width="7" height="15" fill="rgb(237,184,41)"/><text x="493.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="660" width="7" height="15" fill="rgb(234,196,43)"/><text x="493.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.63%)</title><rect x="490" y="676" width="7" height="15" fill="rgb(243,23,43)"/><text x="493.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="490" y="692" width="7" height="15" fill="rgb(239,132,3)"/><text x="493.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="490" y="708" width="7" height="15" fill="rgb(218,211,31)"/><text x="493.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="490" y="724" width="7" height="15" fill="rgb(245,194,39)"/><text x="493.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="490" y="740" width="7" height="15" fill="rgb(245,116,4)"/><text x="493.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="490" y="756" width="7" height="15" fill="rgb(221,165,31)"/><text x="493.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.32%)</title><rect x="493" y="772" width="4" height="15" fill="rgb(235,136,0)"/><text x="496.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="493" y="788" width="4" height="15" fill="rgb(253,56,25)"/><text x="496.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="493" y="804" width="4" height="15" fill="rgb(246,105,1)"/><text x="496.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="493" y="820" width="4" height="15" fill="rgb(244,127,35)"/><text x="496.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="493" y="836" width="4" height="15" fill="rgb(244,43,48)"/><text x="496.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="493" y="852" width="4" height="15" fill="rgb(245,9,47)"/><text x="496.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="493" y="868" width="4" height="15" fill="rgb(213,154,47)"/><text x="496.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="493" y="884" width="4" height="15" fill="rgb(225,152,11)"/><text x="496.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:7) (1 samples, 0.32%)</title><rect x="493" y="900" width="4" height="15" fill="rgb(226,166,2)"/><text x="496.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="493" y="916" width="4" height="15" fill="rgb(241,36,53)"/><text x="496.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="493" y="932" width="4" height="15" fill="rgb(208,103,19)"/><text x="496.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="493" y="948" width="4" height="15" fill="rgb(220,163,19)"/><text x="496.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="493" y="964" width="4" height="15" fill="rgb(207,70,31)"/><text x="496.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="493" y="980" width="4" height="15" fill="rgb(205,191,22)"/><text x="496.00" y="990.50"></text></g><g><title>&lt;module&gt; (idna/__init__.py:2) (1 samples, 0.32%)</title><rect x="493" y="996" width="4" height="15" fill="rgb(240,95,18)"/><text x="496.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="493" y="1012" width="4" height="15" fill="rgb(233,117,17)"/><text x="496.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="493" y="1028" width="4" height="15" fill="rgb(206,20,20)"/><text x="496.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="493" y="1044" width="4" height="15" fill="rgb(231,120,41)"/><text x="496.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="493" y="1060" width="4" height="15" fill="rgb(250,167,21)"/><text x="496.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="493" y="1076" width="4" height="15" fill="rgb(225,37,38)"/><text x="496.00" y="1086.50"></text></g><g><title>&lt;module&gt; (idna/core.py:10) (1 samples, 0.32%)</title><rect x="493" y="1092" width="4" height="15" fill="rgb(222,0,37)"/><text x="496.00" y="1102.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="493" y="1108" width="4" height="15" fill="rgb(229,4,39)"/><text x="496.00" y="1118.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="493" y="1124" width="4" height="15" fill="rgb(246,61,36)"/><text x="496.00" y="1134.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.32%)</title><rect x="493" y="1140" width="4" height="15" fill="rgb(252,184,24)"/><text x="496.00" y="1150.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.32%)</title><rect x="493" y="1156" width="4" height="15" fill="rgb(220,176,35)"/><text x="496.00" y="1166.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.32%)</title><rect x="493" y="1172" width="4" height="15" fill="rgb(213,210,3)"/><text x="496.00" y="1182.50"></text></g><g><title>_optimize_charset (sre_compile.py:394) (1 samples, 0.32%)</title><rect x="493" y="1188" width="4" height="15" fill="rgb(227,186,22)"/><text x="496.00" y="1198.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (1 samples, 0.32%)</title><rect x="497" y="100" width="4" height="15" fill="rgb(219,0,14)"/><text x="500.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.32%)</title><rect x="497" y="116" width="4" height="15" fill="rgb(253,25,27)"/><text x="500.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.32%)</title><rect x="497" y="132" width="4" height="15" fill="rgb(236,180,37)"/><text x="500.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.32%)</title><rect x="497" y="148" width="4" height="15" fill="rgb(205,104,26)"/><text x="500.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.32%)</title><rect x="497" y="164" width="4" height="15" fill="rgb(248,156,44)"/><text x="500.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.32%)</title><rect x="497" y="180" width="4" height="15" fill="rgb(243,35,52)"/><text x="500.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.32%)</title><rect x="497" y="196" width="4" height="15" fill="rgb(219,215,4)"/><text x="500.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.32%)</title><rect x="497" y="212" width="4" height="15" fill="rgb(206,33,51)"/><text x="500.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.32%)</title><rect x="497" y="228" width="4" height="15" fill="rgb(242,14,53)"/><text x="500.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.32%)</title><rect x="497" y="244" width="4" height="15" fill="rgb(208,30,30)"/><text x="500.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="497" y="260" width="4" height="15" fill="rgb(238,90,47)"/><text x="500.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.32%)</title><rect x="497" y="276" width="4" height="15" fill="rgb(248,142,24)"/><text x="500.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.32%)</title><rect x="497" y="292" width="4" height="15" fill="rgb(240,101,38)"/><text x="500.00" y="302.50"></text></g><g><title>0x7fb2fab0b33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="497" y="308" width="4" height="15" fill="rgb(229,195,24)"/><text x="500.00" y="318.50"></text></g><g><title>0x7fb2fab2d214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="497" y="324" width="4" height="15" fill="rgb(212,109,4)"/><text x="500.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.32%)</title><rect x="497" y="340" width="4" height="15" fill="rgb(227,201,45)"/><text x="500.00" y="350.50"></text></g><g><title>0x7fb318885e0e (libm-2.29.so) (1 samples, 0.32%)</title><rect x="497" y="356" width="4" height="15" fill="rgb(238,102,51)"/><text x="500.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.32%)</title><rect x="505" y="148" width="3" height="15" fill="rgb(220,112,43)"/><text x="508.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.32%)</title><rect x="512" y="260" width="4" height="15" fill="rgb(247,150,3)"/><text x="515.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.32%)</title><rect x="512" y="276" width="4" height="15" fill="rgb(252,53,19)"/><text x="515.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.63%)</title><rect x="516" y="308" width="7" height="15" fill="rgb(233,56,24)"/><text x="519.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.63%)</title><rect x="516" y="324" width="7" height="15" fill="rgb(249,69,49)"/><text x="519.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.63%)</title><rect x="516" y="340" width="7" height="15" fill="rgb(229,193,32)"/><text x="519.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.63%)</title><rect x="516" y="356" width="7" height="15" fill="rgb(252,35,13)"/><text x="519.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.63%)</title><rect x="516" y="372" width="7" height="15" fill="rgb(205,135,0)"/><text x="519.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.63%)</title><rect x="516" y="388" width="7" height="15" fill="rgb(253,202,12)"/><text x="519.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.32%)</title><rect x="523" y="356" width="4" height="15" fill="rgb(241,121,17)"/><text x="526.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.32%)</title><rect x="523" y="372" width="4" height="15" fill="rgb(220,91,8)"/><text x="526.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.32%)</title><rect x="523" y="388" width="4" height="15" fill="rgb(215,146,8)"/><text x="526.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="523" y="404" width="4" height="15" fill="rgb(217,189,17)"/><text x="526.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.32%)</title><rect x="523" y="420" width="4" height="15" fill="rgb(235,80,27)"/><text x="526.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.32%)</title><rect x="523" y="436" width="4" height="15" fill="rgb(244,77,29)"/><text x="526.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.32%)</title><rect x="523" y="452" width="4" height="15" fill="rgb(249,220,45)"/><text x="526.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.32%)</title><rect x="523" y="468" width="4" height="15" fill="rgb(219,34,52)"/><text x="526.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="523" y="484" width="4" height="15" fill="rgb(209,148,28)"/><text x="526.00" y="494.50"></text></g><g><title>0x7fb318707b12 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="523" y="500" width="4" height="15" fill="rgb(233,211,32)"/><text x="526.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.32%)</title><rect x="527" y="356" width="4" height="15" fill="rgb(252,113,42)"/><text x="530.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.32%)</title><rect x="527" y="372" width="4" height="15" fill="rgb(226,53,38)"/><text x="530.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.32%)</title><rect x="527" y="388" width="4" height="15" fill="rgb(243,101,17)"/><text x="530.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.32%)</title><rect x="527" y="404" width="4" height="15" fill="rgb(238,58,12)"/><text x="530.00" y="414.50"></text></g><g><title>0x7fb317928b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="527" y="420" width="4" height="15" fill="rgb(229,206,28)"/><text x="530.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.32%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(231,194,9)"/><text x="534.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.32%)</title><rect x="531" y="372" width="3" height="15" fill="rgb(247,180,0)"/><text x="534.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.32%)</title><rect x="534" y="372" width="4" height="15" fill="rgb(214,212,8)"/><text x="537.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.32%)</title><rect x="538" y="388" width="4" height="15" fill="rgb(217,155,38)"/><text x="541.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.63%)</title><rect x="542" y="388" width="7" height="15" fill="rgb(241,152,52)"/><text x="545.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.32%)</title><rect x="546" y="404" width="3" height="15" fill="rgb(232,28,52)"/><text x="549.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.32%)</title><rect x="549" y="388" width="4" height="15" fill="rgb(214,106,50)"/><text x="552.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.32%)</title><rect x="553" y="388" width="4" height="15" fill="rgb(208,101,0)"/><text x="556.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.79%)</title><rect x="516" y="260" width="44" height="15" fill="rgb(234,53,8)"/><text x="519.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.79%)</title><rect x="516" y="276" width="44" height="15" fill="rgb(210,18,27)"/><text x="519.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 3.79%)</title><rect x="516" y="292" width="44" height="15" fill="rgb(249,61,43)"/><text x="519.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.15%)</title><rect x="523" y="308" width="37" height="15" fill="rgb(226,168,6)"/><text x="526.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 3.15%)</title><rect x="523" y="324" width="37" height="15" fill="rgb(224,101,38)"/><text x="526.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 3.15%)</title><rect x="523" y="340" width="37" height="15" fill="rgb(253,75,12)"/><text x="526.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.21%)</title><rect x="534" y="356" width="26" height="15" fill="rgb(221,147,33)"/><text x="537.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.89%)</title><rect x="538" y="372" width="22" height="15" fill="rgb(212,119,14)"/><text x="541.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.32%)</title><rect x="557" y="388" width="3" height="15" fill="rgb(235,73,21)"/><text x="560.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (15 samples, 4.73%)</title><rect x="508" y="244" width="56" height="15" fill="rgb(233,189,38)"/><text x="511.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.32%)</title><rect x="560" y="260" width="4" height="15" fill="rgb(252,137,17)"/><text x="563.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.32%)</title><rect x="560" y="276" width="4" height="15" fill="rgb(212,42,2)"/><text x="563.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.32%)</title><rect x="560" y="292" width="4" height="15" fill="rgb(236,109,47)"/><text x="563.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.32%)</title><rect x="564" y="308" width="4" height="15" fill="rgb(236,104,27)"/><text x="567.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="564" y="324" width="4" height="15" fill="rgb(253,98,6)"/><text x="567.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.32%)</title><rect x="564" y="340" width="4" height="15" fill="rgb(247,104,4)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.32%)</title><rect x="564" y="356" width="4" height="15" fill="rgb(220,121,6)"/><text x="567.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.32%)</title><rect x="568" y="356" width="4" height="15" fill="rgb(230,11,19)"/><text x="571.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (2 samples, 0.63%)</title><rect x="572" y="372" width="7" height="15" fill="rgb(240,151,12)"/><text x="575.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 1.58%)</title><rect x="568" y="308" width="18" height="15" fill="rgb(216,85,24)"/><text x="571.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 1.58%)</title><rect x="568" y="324" width="18" height="15" fill="rgb(241,181,46)"/><text x="571.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.58%)</title><rect x="568" y="340" width="18" height="15" fill="rgb(237,84,21)"/><text x="571.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 1.26%)</title><rect x="572" y="356" width="14" height="15" fill="rgb(213,220,33)"/><text x="575.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.63%)</title><rect x="579" y="372" width="7" height="15" fill="rgb(233,102,51)"/><text x="582.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 6.94%)</title><rect x="508" y="196" width="82" height="15" fill="rgb(240,114,11)"/><text x="511.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 6.94%)</title><rect x="508" y="212" width="82" height="15" fill="rgb(247,215,19)"/><text x="511.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (22 samples, 6.94%)</title><rect x="508" y="228" width="82" height="15" fill="rgb(209,201,19)"/><text x="511.00" y="238.50">_run (mlp..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.21%)</title><rect x="564" y="244" width="26" height="15" fill="rgb(237,71,48)"/><text x="567.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.21%)</title><rect x="564" y="260" width="26" height="15" fill="rgb(206,100,18)"/><text x="567.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.21%)</title><rect x="564" y="276" width="26" height="15" fill="rgb(210,101,38)"/><text x="567.00" y="286.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.21%)</title><rect x="564" y="292" width="26" height="15" fill="rgb(219,187,45)"/><text x="567.00" y="302.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.32%)</title><rect x="586" y="308" width="4" height="15" fill="rgb(231,64,40)"/><text x="589.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.32%)</title><rect x="586" y="324" width="4" height="15" fill="rgb(214,5,42)"/><text x="589.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.32%)</title><rect x="586" y="340" width="4" height="15" fill="rgb(214,144,16)"/><text x="589.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (1 samples, 0.32%)</title><rect x="586" y="356" width="4" height="15" fill="rgb(210,150,53)"/><text x="589.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.32%)</title><rect x="586" y="372" width="4" height="15" fill="rgb(206,110,25)"/><text x="589.00" y="382.50"></text></g><g><title>sgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="601" y="388" width="4" height="15" fill="rgb(209,150,27)"/><text x="604.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.84%)</title><rect x="598" y="276" width="33" height="15" fill="rgb(239,216,12)"/><text x="601.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (9 samples, 2.84%)</title><rect x="598" y="292" width="33" height="15" fill="rgb(222,104,15)"/><text x="601.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (9 samples, 2.84%)</title><rect x="598" y="308" width="33" height="15" fill="rgb(247,191,25)"/><text x="601.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (9 samples, 2.84%)</title><rect x="598" y="324" width="33" height="15" fill="rgb(252,133,48)"/><text x="601.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c:40) (9 samples, 2.84%)</title><rect x="598" y="340" width="33" height="15" fill="rgb(241,66,44)"/><text x="601.00" y="350.50">ge..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.84%)</title><rect x="598" y="356" width="33" height="15" fill="rgb(242,36,38)"/><text x="601.00" y="366.50">cb..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 2.84%)</title><rect x="598" y="372" width="33" height="15" fill="rgb(237,170,37)"/><text x="601.00" y="382.50">sg..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 2.21%)</title><rect x="605" y="388" width="26" height="15" fill="rgb(242,163,44)"/><text x="608.00" y="398.50">s..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="631" y="276" width="4" height="15" fill="rgb(216,48,35)"/><text x="634.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (29 samples, 9.15%)</title><rect x="590" y="228" width="108" height="15" fill="rgb(236,132,18)"/><text x="593.00" y="238.50">_run (mlprodi..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (29 samples, 9.15%)</title><rect x="590" y="244" width="108" height="15" fill="rgb(227,18,30)"/><text x="593.00" y="254.50">numpy_dot_inp..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (29 samples, 9.15%)</title><rect x="590" y="260" width="108" height="15" fill="rgb(209,146,31)"/><text x="593.00" y="270.50">dot (&lt;__array..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 5.36%)</title><rect x="635" y="276" width="63" height="15" fill="rgb(230,61,46)"/><text x="638.00" y="286.50">sgemm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.32%)</title><rect x="698" y="244" width="4" height="15" fill="rgb(216,0,6)"/><text x="701.00" y="254.50"></text></g><g><title>0x7fb317927f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="702" y="276" width="4" height="15" fill="rgb(249,27,26)"/><text x="705.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="706" y="308" width="3" height="15" fill="rgb(213,22,38)"/><text x="709.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="706" y="324" width="3" height="15" fill="rgb(249,110,31)"/><text x="709.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.32%)</title><rect x="706" y="340" width="3" height="15" fill="rgb(215,57,54)"/><text x="709.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.32%)</title><rect x="706" y="356" width="3" height="15" fill="rgb(208,3,26)"/><text x="709.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.32%)</title><rect x="706" y="372" width="3" height="15" fill="rgb(236,118,33)"/><text x="709.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.63%)</title><rect x="706" y="292" width="7" height="15" fill="rgb(243,8,24)"/><text x="709.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.32%)</title><rect x="709" y="308" width="4" height="15" fill="rgb(214,211,7)"/><text x="712.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.32%)</title><rect x="709" y="324" width="4" height="15" fill="rgb(210,123,46)"/><text x="712.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.32%)</title><rect x="713" y="308" width="4" height="15" fill="rgb(241,197,35)"/><text x="716.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.32%)</title><rect x="713" y="324" width="4" height="15" fill="rgb(227,12,7)"/><text x="716.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="713" y="340" width="4" height="15" fill="rgb(218,153,28)"/><text x="716.00" y="350.50"></text></g><g><title>0x7fb318708700 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="713" y="356" width="4" height="15" fill="rgb(215,18,48)"/><text x="716.00" y="366.50"></text></g><g><title>0x7fb318705acd (libc-2.29.so) (1 samples, 0.32%)</title><rect x="713" y="372" width="4" height="15" fill="rgb(241,56,8)"/><text x="716.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.63%)</title><rect x="713" y="292" width="7" height="15" fill="rgb(238,163,17)"/><text x="716.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.32%)</title><rect x="717" y="308" width="3" height="15" fill="rgb(212,166,21)"/><text x="720.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.32%)</title><rect x="717" y="324" width="3" height="15" fill="rgb(218,58,10)"/><text x="720.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.32%)</title><rect x="717" y="340" width="3" height="15" fill="rgb(238,130,21)"/><text x="720.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.21%)</title><rect x="698" y="228" width="26" height="15" fill="rgb(243,78,35)"/><text x="701.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.89%)</title><rect x="702" y="244" width="22" height="15" fill="rgb(226,190,44)"/><text x="705.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.89%)</title><rect x="702" y="260" width="22" height="15" fill="rgb(227,2,22)"/><text x="705.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.58%)</title><rect x="706" y="276" width="18" height="15" fill="rgb(220,156,19)"/><text x="709.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.32%)</title><rect x="720" y="292" width="4" height="15" fill="rgb(211,113,49)"/><text x="723.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.32%)</title><rect x="720" y="308" width="4" height="15" fill="rgb(211,100,30)"/><text x="723.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1883) (1 samples, 0.32%)</title><rect x="720" y="324" width="4" height="15" fill="rgb(247,129,29)"/><text x="723.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.32%)</title><rect x="728" y="260" width="4" height="15" fill="rgb(221,220,12)"/><text x="731.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.32%)</title><rect x="728" y="276" width="4" height="15" fill="rgb(247,225,5)"/><text x="731.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1967) (1 samples, 0.32%)</title><rect x="732" y="276" width="3" height="15" fill="rgb(251,127,31)"/><text x="735.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.63%)</title><rect x="732" y="260" width="7" height="15" fill="rgb(234,16,40)"/><text x="735.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.32%)</title><rect x="735" y="276" width="4" height="15" fill="rgb(243,45,8)"/><text x="738.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.32%)</title><rect x="735" y="292" width="4" height="15" fill="rgb(208,88,30)"/><text x="738.00" y="302.50"></text></g><g><title>0x7fb2fab2d204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="739" y="324" width="4" height="15" fill="rgb(231,109,50)"/><text x="742.00" y="334.50"></text></g><g><title>0x7fb318885e4e (libm-2.29.so) (1 samples, 0.32%)</title><rect x="747" y="356" width="3" height="15" fill="rgb(212,131,4)"/><text x="750.00" y="366.50"></text></g><g><title>0x7fb2fab2d214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.95%)</title><rect x="743" y="324" width="11" height="15" fill="rgb(249,4,6)"/><text x="746.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (3 samples, 0.95%)</title><rect x="743" y="340" width="11" height="15" fill="rgb(250,201,36)"/><text x="746.00" y="350.50"></text></g><g><title>0x7fb318885e96 (libm-2.29.so) (1 samples, 0.32%)</title><rect x="750" y="356" width="4" height="15" fill="rgb(235,111,43)"/><text x="753.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (10 samples, 3.15%)</title><rect x="724" y="228" width="37" height="15" fill="rgb(243,68,9)"/><text x="727.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.84%)</title><rect x="728" y="244" width="33" height="15" fill="rgb(236,136,13)"/><text x="731.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.89%)</title><rect x="739" y="260" width="22" height="15" fill="rgb(235,164,26)"/><text x="742.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (6 samples, 1.89%)</title><rect x="739" y="276" width="22" height="15" fill="rgb(212,101,38)"/><text x="742.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (6 samples, 1.89%)</title><rect x="739" y="292" width="22" height="15" fill="rgb(241,16,40)"/><text x="742.00" y="302.50">t..</text></g><g><title>0x7fb2fab0b33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.89%)</title><rect x="739" y="308" width="22" height="15" fill="rgb(236,137,44)"/><text x="742.00" y="318.50">0..</text></g><g><title>0x7fb2fab2d228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.63%)</title><rect x="754" y="324" width="7" height="15" fill="rgb(248,73,8)"/><text x="757.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.63%)</title><rect x="769" y="308" width="7" height="15" fill="rgb(237,137,36)"/><text x="772.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.32%)</title><rect x="773" y="324" width="3" height="15" fill="rgb(239,79,49)"/><text x="776.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.32%)</title><rect x="776" y="340" width="4" height="15" fill="rgb(246,63,15)"/><text x="779.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (52 samples, 16.40%)</title><rect x="590" y="196" width="194" height="15" fill="rgb(229,49,38)"/><text x="593.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (52 samples, 16.40%)</title><rect x="590" y="212" width="194" height="15" fill="rgb(242,83,49)"/><text x="593.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 1.89%)</title><rect x="761" y="228" width="23" height="15" fill="rgb(238,122,42)"/><text x="764.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.89%)</title><rect x="761" y="244" width="23" height="15" fill="rgb(252,21,23)"/><text x="764.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.89%)</title><rect x="761" y="260" width="23" height="15" fill="rgb(247,82,32)"/><text x="764.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.89%)</title><rect x="761" y="276" width="23" height="15" fill="rgb(245,8,39)"/><text x="764.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.26%)</title><rect x="769" y="292" width="15" height="15" fill="rgb(236,18,31)"/><text x="772.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.63%)</title><rect x="776" y="308" width="8" height="15" fill="rgb(224,137,37)"/><text x="779.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.63%)</title><rect x="776" y="324" width="8" height="15" fill="rgb(236,100,41)"/><text x="779.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (1 samples, 0.32%)</title><rect x="780" y="340" width="4" height="15" fill="rgb(244,144,34)"/><text x="783.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (75 samples, 23.66%)</title><rect x="508" y="180" width="279" height="15" fill="rgb(249,164,49)"/><text x="511.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.32%)</title><rect x="784" y="196" width="3" height="15" fill="rgb(237,168,5)"/><text x="787.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (76 samples, 23.97%)</title><rect x="508" y="164" width="283" height="15" fill="rgb(205,70,19)"/><text x="511.00" y="174.50">_run_sequence_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.32%)</title><rect x="787" y="180" width="4" height="15" fill="rgb(216,174,18)"/><text x="790.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:45) (81 samples, 25.55%)</title><rect x="497" y="52" width="302" height="15" fill="rgb(210,213,6)"/><text x="500.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:44) (81 samples, 25.55%)</title><rect x="497" y="68" width="302" height="15" fill="rgb(241,214,4)"/><text x="500.00" y="78.50">profile_pyrt (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (81 samples, 25.55%)</title><rect x="497" y="84" width="302" height="15" fill="rgb(254,1,21)"/><text x="500.00" y="94.50">setup_profile (bench_LogisticRegression_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (80 samples, 25.24%)</title><rect x="501" y="100" width="298" height="15" fill="rgb(243,118,8)"/><text x="504.00" y="110.50">profile (bench_LogisticRegression_liblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (80 samples, 25.24%)</title><rect x="501" y="116" width="298" height="15" fill="rgb(220,186,7)"/><text x="504.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (79 samples, 24.92%)</title><rect x="505" y="132" width="294" height="15" fill="rgb(222,35,37)"/><text x="508.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (78 samples, 24.61%)</title><rect x="508" y="148" width="291" height="15" fill="rgb(205,32,25)"/><text x="511.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.63%)</title><rect x="791" y="164" width="8" height="15" fill="rgb(245,16,15)"/><text x="794.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.32%)</title><rect x="795" y="180" width="4" height="15" fill="rgb(218,137,1)"/><text x="798.00" y="190.50"></text></g><g><title>0x7fb2d8fafff9 (?) (1 samples, 0.32%)</title><rect x="799" y="212" width="3" height="15" fill="rgb(245,9,34)"/><text x="802.00" y="222.50"></text></g><g><title>0x7fb2d8faaef6 (?) (1 samples, 0.32%)</title><rect x="799" y="228" width="3" height="15" fill="rgb(215,191,52)"/><text x="802.00" y="238.50"></text></g><g><title>0x7fb2d8f9f962 (?) (1 samples, 0.32%)</title><rect x="799" y="244" width="3" height="15" fill="rgb(215,195,51)"/><text x="802.00" y="254.50"></text></g><g><title>0x7fb2d8fd37a7 (?) (1 samples, 0.32%)</title><rect x="799" y="260" width="3" height="15" fill="rgb(251,58,42)"/><text x="802.00" y="270.50"></text></g><g><title>0x7fb2d8fd3379 (?) (1 samples, 0.32%)</title><rect x="799" y="276" width="3" height="15" fill="rgb(242,1,21)"/><text x="802.00" y="286.50"></text></g><g><title>0x7fb2d94318b8 (?) (1 samples, 0.32%)</title><rect x="799" y="292" width="3" height="15" fill="rgb(234,146,18)"/><text x="802.00" y="302.50"></text></g><g><title>0x7fb2d942fc7f (?) (1 samples, 0.32%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(226,161,18)"/><text x="802.00" y="318.50"></text></g><g><title>0x7fb2d944299c (?) (1 samples, 0.32%)</title><rect x="799" y="324" width="3" height="15" fill="rgb(246,219,50)"/><text x="802.00" y="334.50"></text></g><g><title>0x7fb2d9127b58 (?) (1 samples, 0.32%)</title><rect x="799" y="340" width="3" height="15" fill="rgb(215,195,13)"/><text x="802.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (2 samples, 0.63%)</title><rect x="799" y="100" width="7" height="15" fill="rgb(247,68,4)"/><text x="802.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.63%)</title><rect x="799" y="116" width="7" height="15" fill="rgb(208,16,3)"/><text x="802.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.63%)</title><rect x="799" y="132" width="7" height="15" fill="rgb(231,11,41)"/><text x="802.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.63%)</title><rect x="799" y="148" width="7" height="15" fill="rgb(240,26,18)"/><text x="802.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.63%)</title><rect x="799" y="164" width="7" height="15" fill="rgb(235,29,29)"/><text x="802.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.63%)</title><rect x="799" y="180" width="7" height="15" fill="rgb(205,223,41)"/><text x="802.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.63%)</title><rect x="799" y="196" width="7" height="15" fill="rgb(232,35,26)"/><text x="802.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="212" width="4" height="15" fill="rgb(217,73,13)"/><text x="805.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="228" width="4" height="15" fill="rgb(243,84,12)"/><text x="805.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="244" width="4" height="15" fill="rgb(227,137,18)"/><text x="805.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="260" width="4" height="15" fill="rgb(228,209,18)"/><text x="805.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(236,43,46)"/><text x="805.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="292" width="4" height="15" fill="rgb(223,210,2)"/><text x="805.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="308" width="4" height="15" fill="rgb(210,213,5)"/><text x="805.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="324" width="4" height="15" fill="rgb(251,186,17)"/><text x="805.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="802" y="340" width="4" height="15" fill="rgb(206,218,15)"/><text x="805.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.32%)</title><rect x="806" y="116" width="4" height="15" fill="rgb(231,3,16)"/><text x="809.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.32%)</title><rect x="806" y="132" width="4" height="15" fill="rgb(232,69,16)"/><text x="809.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.32%)</title><rect x="806" y="148" width="4" height="15" fill="rgb(220,158,34)"/><text x="809.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.32%)</title><rect x="806" y="164" width="4" height="15" fill="rgb(205,14,16)"/><text x="809.00" y="174.50"></text></g><g><title>0x7fb318706f71 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="806" y="180" width="4" height="15" fill="rgb(228,181,20)"/><text x="809.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.32%)</title><rect x="821" y="196" width="4" height="15" fill="rgb(206,12,1)"/><text x="824.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.32%)</title><rect x="825" y="196" width="3" height="15" fill="rgb(206,136,43)"/><text x="828.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.32%)</title><rect x="825" y="212" width="3" height="15" fill="rgb(235,130,46)"/><text x="828.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="825" y="228" width="3" height="15" fill="rgb(226,198,19)"/><text x="828.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="825" y="244" width="3" height="15" fill="rgb(207,89,4)"/><text x="828.00" y="254.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="828" y="292" width="4" height="15" fill="rgb(227,179,31)"/><text x="831.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="832" y="340" width="4" height="15" fill="rgb(210,14,44)"/><text x="835.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="832" y="356" width="4" height="15" fill="rgb(249,162,54)"/><text x="835.00" y="366.50"></text></g><g><title>0x7fb318726d50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1108" y="372" width="3" height="15" fill="rgb(210,77,33)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7fb318726dae (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1111" y="372" width="4" height="15" fill="rgb(211,121,15)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7fb318726db3 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(246,158,11)"/><text x="1118.00" y="382.50"></text></g><g><title>0x7fb318885e0e (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1119" y="372" width="3" height="15" fill="rgb(215,65,52)"/><text x="1122.00" y="382.50"></text></g><g><title>0x7fb318885e17 (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1122" y="372" width="4" height="15" fill="rgb(240,32,8)"/><text x="1125.00" y="382.50"></text></g><g><title>0x7fb318885e2f (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1126" y="372" width="4" height="15" fill="rgb(211,122,46)"/><text x="1129.00" y="382.50"></text></g><g><title>0x7fb318885e4a (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1130" y="372" width="4" height="15" fill="rgb(230,171,24)"/><text x="1133.00" y="382.50"></text></g><g><title>0x7fb318885e4e (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1134" y="372" width="3" height="15" fill="rgb(247,45,51)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7fb318885e6d (libm-2.29.so) (1 samples, 0.32%)</title><rect x="1137" y="372" width="4" height="15" fill="rgb(245,40,10)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 27.13%)</title><rect x="836" y="340" width="320" height="15" fill="rgb(246,99,45)"/><text x="839.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::C..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.68%)</title><rect x="1089" y="356" width="67" height="15" fill="rgb(232,27,52)"/><text x="1092.00" y="366.50">onnxrun..</text></g><g><title>0x7fb318885ea2 (libm-2.29.so) (4 samples, 1.26%)</title><rect x="1141" y="372" width="15" height="15" fill="rgb(207,50,6)"/><text x="1144.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 29.97%)</title><rect x="828" y="260" width="354" height="15" fill="rgb(251,52,22)"/><text x="831.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 29.97%)</title><rect x="828" y="276" width="354" height="15" fill="rgb(246,38,27)"/><text x="831.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 29.65%)</title><rect x="832" y="292" width="350" height="15" fill="rgb(216,34,1)"/><text x="835.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 29.65%)</title><rect x="832" y="308" width="350" height="15" fill="rgb(216,158,13)"/><text x="835.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 29.65%)</title><rect x="832" y="324" width="350" height="15" fill="rgb(239,96,12)"/><text x="835.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.21%)</title><rect x="1156" y="340" width="26" height="15" fill="rgb(237,44,52)"/><text x="1159.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.21%)</title><rect x="1156" y="356" width="26" height="15" fill="rgb(214,120,36)"/><text x="1159.00" y="366.50">o..</text></g><g><title>onnxruntime::TensorShape::SizeFromDimension (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="372" width="4" height="15" fill="rgb(242,213,21)"/><text x="1181.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (98 samples, 30.91%)</title><rect x="821" y="164" width="365" height="15" fill="rgb(208,30,23)"/><text x="824.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (98 samples, 30.91%)</title><rect x="821" y="180" width="365" height="15" fill="rgb(228,178,34)"/><text x="824.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (96 samples, 30.28%)</title><rect x="828" y="196" width="358" height="15" fill="rgb(215,166,45)"/><text x="831.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 30.28%)</title><rect x="828" y="212" width="358" height="15" fill="rgb(215,214,17)"/><text x="831.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 30.28%)</title><rect x="828" y="228" width="358" height="15" fill="rgb(243,40,29)"/><text x="831.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 30.28%)</title><rect x="828" y="244" width="358" height="15" fill="rgb(245,125,15)"/><text x="831.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(237,105,30)"/><text x="1185.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(228,108,32)"/><text x="1185.00" y="286.50"></text></g><g><title>all (317 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,149,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:52) (105 samples, 33.12%)</title><rect x="799" y="52" width="391" height="15" fill="rgb(214,98,25)"/><text x="802.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:51) (105 samples, 33.12%)</title><rect x="799" y="68" width="391" height="15" fill="rgb(228,228,45)"/><text x="802.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (105 samples, 33.12%)</title><rect x="799" y="84" width="391" height="15" fill="rgb(235,131,30)"/><text x="802.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (103 samples, 32.49%)</title><rect x="806" y="100" width="384" height="15" fill="rgb(246,163,41)"/><text x="809.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (102 samples, 32.18%)</title><rect x="810" y="116" width="380" height="15" fill="rgb(250,170,52)"/><text x="813.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (101 samples, 31.86%)</title><rect x="814" y="132" width="376" height="15" fill="rgb(230,99,27)"/><text x="817.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (100 samples, 31.55%)</title><rect x="817" y="148" width="373" height="15" fill="rgb(218,124,11)"/><text x="820.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.32%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(234,105,22)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.32%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(234,1,1)"/><text x="1189.00" y="190.50"></text></g></g></svg>