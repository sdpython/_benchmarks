<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(231,57,6)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(247,41,38)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(233,74,29)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(217,87,9)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(229,79,40)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(222,94,20)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(246,81,6)"/><text x="13.00" y="974.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(205,110,4)"/><text x="14.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(217,214,53)"/><text x="14.00" y="942.50"></text></g><g><title>__getattr__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(209,56,36)"/><text x="14.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="11" y="868" width="3" height="15" fill="rgb(221,145,51)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="11" y="884" width="3" height="15" fill="rgb(217,150,7)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="11" y="900" width="3" height="15" fill="rgb(230,74,19)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(235,125,4)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(224,227,18)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(252,156,47)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(250,216,22)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(246,226,38)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(213,127,11)"/><text x="15.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(231,180,53)"/><text x="15.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.49%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(226,135,24)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(223,80,11)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(208,95,36)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(252,175,38)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(218,94,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(211,63,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.49%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(219,214,51)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(223,222,49)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(240,23,9)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(224,41,21)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(227,179,40)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(242,202,27)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.49%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(206,194,23)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(242,166,28)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(251,87,52)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(248,101,5)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(228,33,21)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(207,140,24)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.49%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(243,34,33)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(211,224,51)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(221,154,43)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(254,184,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(206,159,26)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(210,25,53)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(242,143,37)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(248,40,54)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(228,3,42)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.49%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(236,84,18)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(241,155,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(248,174,29)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(251,163,25)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(234,44,43)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(205,92,43)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.49%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(208,225,39)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.49%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(254,141,31)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.49%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(222,119,10)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(240,155,35)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(209,141,12)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(247,187,48)"/><text x="17.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(229,215,22)"/><text x="17.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(205,29,10)"/><text x="17.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(234,190,34)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(233,126,7)"/><text x="17.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.12%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(230,8,23)"/><text x="17.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.12%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(215,65,25)"/><text x="17.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(228,115,46)"/><text x="17.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(210,21,20)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(221,138,53)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(241,28,16)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(217,114,19)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.61%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(222,222,6)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.61%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(206,80,2)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.12%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(215,133,2)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(230,11,27)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="324" width="2" height="15" fill="rgb(215,92,15)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="340" width="2" height="15" fill="rgb(227,222,3)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="356" width="2" height="15" fill="rgb(239,58,26)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="372" width="2" height="15" fill="rgb(207,210,41)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.12%)</title><rect x="15" y="388" width="2" height="15" fill="rgb(243,176,8)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="404" width="2" height="15" fill="rgb(247,122,42)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="420" width="2" height="15" fill="rgb(209,77,25)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="436" width="2" height="15" fill="rgb(253,43,23)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="452" width="2" height="15" fill="rgb(214,109,18)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="468" width="2" height="15" fill="rgb(250,128,21)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.12%)</title><rect x="15" y="484" width="2" height="15" fill="rgb(212,77,32)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="500" width="2" height="15" fill="rgb(219,22,39)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="516" width="2" height="15" fill="rgb(233,77,0)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="532" width="2" height="15" fill="rgb(230,17,45)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="548" width="2" height="15" fill="rgb(245,189,20)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="564" width="2" height="15" fill="rgb(242,207,30)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.12%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(205,46,54)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(236,26,10)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(209,223,51)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(240,202,21)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(208,36,42)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(222,94,38)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.12%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(250,165,29)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(228,83,30)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(252,23,27)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(232,36,28)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(226,187,38)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(207,186,43)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.12%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(243,57,4)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(216,41,52)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(217,29,9)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(249,17,35)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(252,209,19)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(208,112,45)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.12%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(211,139,7)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(224,229,42)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(215,14,26)"/><text x="18.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(222,75,28)"/><text x="18.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(216,224,51)"/><text x="18.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(236,200,4)"/><text x="18.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(216,219,34)"/><text x="18.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(233,169,10)"/><text x="18.00" y="990.50"></text></g><g><title>0x7fefc894d995 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(221,23,8)"/><text x="18.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(205,62,28)"/><text x="18.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(208,103,51)"/><text x="18.00" y="1038.50"></text></g><g><title>0x7fefc894d258 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(252,126,44)"/><text x="18.00" y="1054.50"></text></g><g><title>0x7fefc899ad7a (ld-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(229,174,27)"/><text x="18.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(249,20,10)"/><text x="18.00" y="1086.50"></text></g><g><title>0x7fefc899b345 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(213,119,8)"/><text x="18.00" y="1102.50"></text></g><g><title>0x7fefc8993fec (ld-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(246,191,37)"/><text x="18.00" y="1118.50"></text></g><g><title>0x7fefc899248e (ld-2.29.so) (1 samples, 0.12%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(218,115,49)"/><text x="18.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(216,56,11)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(233,119,7)"/><text x="20.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(236,120,39)"/><text x="20.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(226,161,5)"/><text x="20.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(244,187,22)"/><text x="20.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.12%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(225,64,6)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(209,71,53)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(241,219,35)"/><text x="20.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(220,41,22)"/><text x="20.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(250,99,38)"/><text x="20.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(240,194,3)"/><text x="20.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.12%)</title><rect x="17" y="1300" width="1" height="15" fill="rgb(221,79,32)"/><text x="20.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1316" width="1" height="15" fill="rgb(218,87,39)"/><text x="20.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1332" width="1" height="15" fill="rgb(220,204,4)"/><text x="20.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1348" width="1" height="15" fill="rgb(252,60,7)"/><text x="20.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="17" y="1364" width="1" height="15" fill="rgb(235,48,1)"/><text x="20.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="17" y="1380" width="1" height="15" fill="rgb(224,217,20)"/><text x="20.00" y="1390.50"></text></g><g><title>0x7fefb187b672 (?) (1 samples, 0.12%)</title><rect x="17" y="1396" width="1" height="15" fill="rgb(246,96,19)"/><text x="20.00" y="1406.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="17" y="1412" width="1" height="15" fill="rgb(220,33,36)"/><text x="20.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="484" width="4" height="15" fill="rgb(251,126,43)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="500" width="4" height="15" fill="rgb(229,79,45)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="516" width="4" height="15" fill="rgb(219,151,23)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="532" width="4" height="15" fill="rgb(222,49,52)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="548" width="4" height="15" fill="rgb(226,197,15)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="564" width="4" height="15" fill="rgb(223,105,3)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.36%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(220,44,10)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(225,142,42)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(218,6,43)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(254,199,30)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(251,202,11)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(205,26,44)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.36%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(247,9,25)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(227,144,2)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(235,140,54)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(208,154,53)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(224,206,37)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(215,147,9)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.36%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(220,202,6)"/><text x="20.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(254,45,40)"/><text x="20.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(223,98,24)"/><text x="20.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(209,158,49)"/><text x="20.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(252,92,29)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(207,206,31)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.36%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(242,183,4)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(253,223,6)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(213,102,4)"/><text x="20.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(250,136,8)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(248,4,28)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(243,62,10)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(246,49,34)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(237,202,0)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(216,189,17)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.36%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(253,171,9)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(233,160,24)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(209,137,23)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="1060" width="4" height="15" fill="rgb(250,43,18)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="17" y="1076" width="4" height="15" fill="rgb(210,77,36)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="17" y="1092" width="4" height="15" fill="rgb(252,69,2)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.36%)</title><rect x="17" y="1108" width="4" height="15" fill="rgb(216,119,37)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1124" width="3" height="15" fill="rgb(239,37,37)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1140" width="3" height="15" fill="rgb(243,224,25)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1156" width="3" height="15" fill="rgb(243,31,23)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1172" width="3" height="15" fill="rgb(226,58,7)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1188" width="3" height="15" fill="rgb(209,158,28)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="18" y="1204" width="3" height="15" fill="rgb(251,31,47)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1220" width="3" height="15" fill="rgb(217,158,25)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.24%)</title><rect x="18" y="1236" width="3" height="15" fill="rgb(230,170,18)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1252" width="3" height="15" fill="rgb(219,2,54)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1268" width="3" height="15" fill="rgb(229,119,31)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1284" width="3" height="15" fill="rgb(251,57,17)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1300" width="3" height="15" fill="rgb(220,210,11)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1316" width="3" height="15" fill="rgb(205,70,44)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="18" y="1332" width="3" height="15" fill="rgb(243,207,36)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1348" width="3" height="15" fill="rgb(248,149,8)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.24%)</title><rect x="18" y="1364" width="3" height="15" fill="rgb(241,39,21)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1380" width="3" height="15" fill="rgb(247,130,8)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1396" width="3" height="15" fill="rgb(252,215,51)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1412" width="3" height="15" fill="rgb(240,228,21)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="18" y="1428" width="3" height="15" fill="rgb(205,147,19)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="18" y="1444" width="3" height="15" fill="rgb(217,223,22)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.24%)</title><rect x="18" y="1460" width="3" height="15" fill="rgb(253,84,24)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.24%)</title><rect x="18" y="1476" width="3" height="15" fill="rgb(247,9,40)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.24%)</title><rect x="18" y="1492" width="3" height="15" fill="rgb(253,113,51)"/><text x="21.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.24%)</title><rect x="18" y="1508" width="3" height="15" fill="rgb(205,228,8)"/><text x="21.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.12%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(211,85,44)"/><text x="23.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.12%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(244,195,30)"/><text x="23.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(225,29,39)"/><text x="23.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.12%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(222,163,6)"/><text x="23.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(248,128,36)"/><text x="24.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(210,15,36)"/><text x="24.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(248,101,1)"/><text x="24.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(247,159,54)"/><text x="24.00" y="1646.50"></text></g><g><title>search (re.py) (1 samples, 0.12%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(234,167,3)"/><text x="24.00" y="1662.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(238,68,19)"/><text x="24.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.24%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(224,122,26)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(218,125,22)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(236,129,52)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(246,201,12)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(219,148,40)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(235,17,15)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.24%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(232,160,35)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(254,17,49)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(216,205,19)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(225,144,54)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(236,164,50)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(214,135,41)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.24%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(238,73,9)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(220,93,24)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(216,203,38)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(219,33,1)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1172" width="3" height="15" fill="rgb(252,185,9)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1188" width="3" height="15" fill="rgb(248,107,43)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.24%)</title><rect x="21" y="1204" width="3" height="15" fill="rgb(250,193,13)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1220" width="3" height="15" fill="rgb(234,22,49)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1236" width="3" height="15" fill="rgb(231,48,13)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1252" width="3" height="15" fill="rgb(236,62,29)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1268" width="3" height="15" fill="rgb(250,71,13)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1284" width="3" height="15" fill="rgb(209,50,7)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.24%)</title><rect x="21" y="1300" width="3" height="15" fill="rgb(221,90,38)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1316" width="3" height="15" fill="rgb(230,95,48)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1332" width="3" height="15" fill="rgb(224,44,50)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1348" width="3" height="15" fill="rgb(233,13,34)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1364" width="3" height="15" fill="rgb(247,129,47)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1380" width="3" height="15" fill="rgb(231,26,4)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.24%)</title><rect x="21" y="1396" width="3" height="15" fill="rgb(246,34,32)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1412" width="3" height="15" fill="rgb(240,229,49)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1428" width="3" height="15" fill="rgb(233,95,23)"/><text x="24.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1444" width="3" height="15" fill="rgb(206,144,26)"/><text x="24.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1460" width="3" height="15" fill="rgb(251,41,12)"/><text x="24.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1476" width="3" height="15" fill="rgb(235,151,28)"/><text x="24.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.24%)</title><rect x="21" y="1492" width="3" height="15" fill="rgb(235,53,9)"/><text x="24.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1508" width="3" height="15" fill="rgb(236,187,16)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1524" width="3" height="15" fill="rgb(216,53,12)"/><text x="24.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1540" width="3" height="15" fill="rgb(223,11,48)"/><text x="24.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="21" y="1556" width="3" height="15" fill="rgb(229,103,46)"/><text x="24.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="21" y="1572" width="3" height="15" fill="rgb(210,160,33)"/><text x="24.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.12%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(207,139,52)"/><text x="25.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(210,111,28)"/><text x="25.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(232,102,15)"/><text x="25.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(222,164,7)"/><text x="25.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(250,127,15)"/><text x="25.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(224,222,36)"/><text x="25.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.12%)</title><rect x="22" y="1684" width="2" height="15" fill="rgb(251,167,49)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1700" width="2" height="15" fill="rgb(207,21,28)"/><text x="25.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1716" width="2" height="15" fill="rgb(250,194,23)"/><text x="25.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1732" width="2" height="15" fill="rgb(218,166,10)"/><text x="25.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1748" width="2" height="15" fill="rgb(245,172,52)"/><text x="25.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1764" width="2" height="15" fill="rgb(233,76,0)"/><text x="25.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.12%)</title><rect x="22" y="1780" width="2" height="15" fill="rgb(249,60,25)"/><text x="25.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1796" width="2" height="15" fill="rgb(220,162,0)"/><text x="25.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1812" width="2" height="15" fill="rgb(216,61,22)"/><text x="25.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1828" width="2" height="15" fill="rgb(232,161,9)"/><text x="25.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1844" width="2" height="15" fill="rgb(220,5,44)"/><text x="25.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1860" width="2" height="15" fill="rgb(242,47,13)"/><text x="25.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.12%)</title><rect x="22" y="1876" width="2" height="15" fill="rgb(252,205,6)"/><text x="25.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1892" width="2" height="15" fill="rgb(226,159,19)"/><text x="25.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1908" width="2" height="15" fill="rgb(227,75,35)"/><text x="25.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1924" width="2" height="15" fill="rgb(210,28,47)"/><text x="25.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1940" width="2" height="15" fill="rgb(213,44,5)"/><text x="25.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1956" width="2" height="15" fill="rgb(249,199,20)"/><text x="25.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="22" y="1972" width="2" height="15" fill="rgb(226,74,6)"/><text x="25.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="22" y="1988" width="2" height="15" fill="rgb(231,54,8)"/><text x="25.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.12%)</title><rect x="22" y="2004" width="2" height="15" fill="rgb(231,13,4)"/><text x="25.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="22" y="2020" width="2" height="15" fill="rgb(220,105,45)"/><text x="25.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="22" y="2036" width="2" height="15" fill="rgb(223,56,45)"/><text x="25.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.12%)</title><rect x="22" y="2052" width="2" height="15" fill="rgb(219,42,27)"/><text x="25.00" y="2062.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.12%)</title><rect x="22" y="2068" width="2" height="15" fill="rgb(236,176,33)"/><text x="25.00" y="2078.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.12%)</title><rect x="22" y="2084" width="2" height="15" fill="rgb(247,43,28)"/><text x="25.00" y="2094.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.12%)</title><rect x="22" y="2100" width="2" height="15" fill="rgb(243,28,19)"/><text x="25.00" y="2110.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.36%)</title><rect x="21" y="724" width="4" height="15" fill="rgb(211,114,21)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="740" width="4" height="15" fill="rgb(207,72,40)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="756" width="4" height="15" fill="rgb(214,35,12)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="772" width="4" height="15" fill="rgb(210,121,53)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="21" y="788" width="4" height="15" fill="rgb(216,27,13)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="804" width="4" height="15" fill="rgb(233,98,13)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.36%)</title><rect x="21" y="820" width="4" height="15" fill="rgb(214,18,24)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="836" width="4" height="15" fill="rgb(243,4,20)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(229,161,31)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(225,226,45)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(252,53,21)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(208,107,20)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py) (1 samples, 0.12%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(233,45,47)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(236,74,50)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="948" width="1" height="15" fill="rgb(211,108,7)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="964" width="1" height="15" fill="rgb(232,139,45)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="24" y="980" width="1" height="15" fill="rgb(212,177,29)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="996" width="1" height="15" fill="rgb(246,154,26)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/ops.py) (1 samples, 0.12%)</title><rect x="24" y="1012" width="1" height="15" fill="rgb(239,191,27)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="1028" width="1" height="15" fill="rgb(239,67,44)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="1044" width="1" height="15" fill="rgb(226,202,38)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="24" y="1060" width="1" height="15" fill="rgb(205,25,34)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="24" y="1076" width="1" height="15" fill="rgb(234,150,48)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.85%)</title><rect x="17" y="436" width="10" height="15" fill="rgb(218,196,19)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.85%)</title><rect x="17" y="452" width="10" height="15" fill="rgb(233,55,4)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.85%)</title><rect x="17" y="468" width="10" height="15" fill="rgb(214,195,15)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="484" width="6" height="15" fill="rgb(239,53,26)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="21" y="500" width="6" height="15" fill="rgb(224,210,41)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="516" width="6" height="15" fill="rgb(219,69,38)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.49%)</title><rect x="21" y="532" width="6" height="15" fill="rgb(214,62,20)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="548" width="6" height="15" fill="rgb(230,31,42)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="564" width="6" height="15" fill="rgb(215,95,0)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="580" width="6" height="15" fill="rgb(225,46,21)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="21" y="596" width="6" height="15" fill="rgb(233,187,44)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="612" width="6" height="15" fill="rgb(231,119,1)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.49%)</title><rect x="21" y="628" width="6" height="15" fill="rgb(252,55,7)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="644" width="6" height="15" fill="rgb(254,139,10)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="660" width="6" height="15" fill="rgb(246,59,5)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="676" width="6" height="15" fill="rgb(225,63,23)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.49%)</title><rect x="21" y="692" width="6" height="15" fill="rgb(246,20,37)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.49%)</title><rect x="21" y="708" width="6" height="15" fill="rgb(249,48,19)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/testing.py) (1 samples, 0.12%)</title><rect x="25" y="724" width="2" height="15" fill="rgb(205,50,26)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="740" width="2" height="15" fill="rgb(235,93,18)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="756" width="2" height="15" fill="rgb(214,76,14)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(241,136,23)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(251,186,42)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(214,139,13)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/util/testing.py) (1 samples, 0.12%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(238,159,49)"/><text x="28.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.97%)</title><rect x="17" y="244" width="11" height="15" fill="rgb(238,227,21)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="260" width="11" height="15" fill="rgb(246,57,49)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="276" width="11" height="15" fill="rgb(233,206,44)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="292" width="11" height="15" fill="rgb(220,212,22)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.97%)</title><rect x="17" y="308" width="11" height="15" fill="rgb(226,188,39)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="324" width="11" height="15" fill="rgb(206,115,15)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 0.97%)</title><rect x="17" y="340" width="11" height="15" fill="rgb(236,6,53)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="356" width="11" height="15" fill="rgb(253,70,28)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="372" width="11" height="15" fill="rgb(242,129,44)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="388" width="11" height="15" fill="rgb(235,196,7)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.97%)</title><rect x="17" y="404" width="11" height="15" fill="rgb(225,61,38)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.97%)</title><rect x="17" y="420" width="11" height="15" fill="rgb(237,160,50)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.12%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(228,13,42)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(211,158,2)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(235,216,40)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(222,170,11)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(217,8,26)"/><text x="30.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(242,5,34)"/><text x="30.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(219,177,14)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(219,196,1)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(212,214,43)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(226,170,11)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.70%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(221,83,50)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(245,158,19)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf.py) (14 samples, 1.70%)</title><rect x="10" y="148" width="20" height="15" fill="rgb(238,5,6)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="164" width="20" height="15" fill="rgb(250,115,35)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.70%)</title><rect x="10" y="180" width="20" height="15" fill="rgb(219,199,24)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.09%)</title><rect x="17" y="196" width="13" height="15" fill="rgb(211,56,36)"/><text x="20.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.09%)</title><rect x="17" y="212" width="13" height="15" fill="rgb(221,215,32)"/><text x="20.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.09%)</title><rect x="17" y="228" width="13" height="15" fill="rgb(218,118,26)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (1 samples, 0.12%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(210,72,40)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(206,56,8)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="276" width="2" height="15" fill="rgb(231,100,31)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="292" width="2" height="15" fill="rgb(234,106,44)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="28" y="308" width="2" height="15" fill="rgb(254,155,27)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="324" width="2" height="15" fill="rgb(241,144,43)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (1 samples, 0.12%)</title><rect x="28" y="340" width="2" height="15" fill="rgb(235,109,12)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="356" width="2" height="15" fill="rgb(252,180,53)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="372" width="2" height="15" fill="rgb(233,132,48)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="28" y="388" width="2" height="15" fill="rgb(208,184,22)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="28" y="404" width="2" height="15" fill="rgb(237,43,0)"/><text x="31.00" y="414.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="28" y="420" width="2" height="15" fill="rgb(253,183,37)"/><text x="31.00" y="430.50"></text></g><g><title>0x7fefc86c5d2d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="35" y="116" width="2" height="15" fill="rgb(239,126,26)"/><text x="38.00" y="126.50"></text></g><g><title>0x7fefc86c4c2d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="37" y="132" width="1" height="15" fill="rgb(252,202,49)"/><text x="40.00" y="142.50"></text></g><g><title>0x7fefc86c5eb0 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="37" y="116" width="3" height="15" fill="rgb(222,222,1)"/><text x="40.00" y="126.50"></text></g><g><title>0x7fefc86c4c73 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="38" y="132" width="2" height="15" fill="rgb(205,86,27)"/><text x="41.00" y="142.50"></text></g><g><title>0x7fefc86c4aa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="38" y="148" width="2" height="15" fill="rgb(208,140,48)"/><text x="41.00" y="158.50"></text></g><g><title>0x7fef886f5ff9 (?) (1 samples, 0.12%)</title><rect x="41" y="212" width="1" height="15" fill="rgb(241,162,37)"/><text x="44.00" y="222.50"></text></g><g><title>0x7fef886f0ef6 (?) (1 samples, 0.12%)</title><rect x="41" y="228" width="1" height="15" fill="rgb(226,217,17)"/><text x="44.00" y="238.50"></text></g><g><title>0x7fef886e5962 (?) (1 samples, 0.12%)</title><rect x="41" y="244" width="1" height="15" fill="rgb(222,137,13)"/><text x="44.00" y="254.50"></text></g><g><title>0x7fef887197a7 (?) (1 samples, 0.12%)</title><rect x="41" y="260" width="1" height="15" fill="rgb(232,104,45)"/><text x="44.00" y="270.50"></text></g><g><title>0x7fef88719379 (?) (1 samples, 0.12%)</title><rect x="41" y="276" width="1" height="15" fill="rgb(245,40,51)"/><text x="44.00" y="286.50"></text></g><g><title>0x7fef88b778b8 (?) (1 samples, 0.12%)</title><rect x="41" y="292" width="1" height="15" fill="rgb(224,205,32)"/><text x="44.00" y="302.50"></text></g><g><title>0x7fef88b75c7f (?) (1 samples, 0.12%)</title><rect x="41" y="308" width="1" height="15" fill="rgb(220,69,29)"/><text x="44.00" y="318.50"></text></g><g><title>0x7fef88b8899c (?) (1 samples, 0.12%)</title><rect x="41" y="324" width="1" height="15" fill="rgb(210,171,45)"/><text x="44.00" y="334.50"></text></g><g><title>0x7fef8888dc27 (?) (1 samples, 0.12%)</title><rect x="41" y="340" width="1" height="15" fill="rgb(247,2,48)"/><text x="44.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="44" y="292" width="1" height="15" fill="rgb(231,13,21)"/><text x="47.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="45" y="340" width="2" height="15" fill="rgb(229,203,33)"/><text x="48.00" y="350.50"></text></g><g><title>0x7fefb81927a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="137" y="356" width="2" height="15" fill="rgb(227,103,35)"/><text x="140.00" y="366.50"></text></g><g><title>0x7fefc86c5906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="139" y="356" width="1" height="15" fill="rgb(211,143,3)"/><text x="142.00" y="366.50"></text></g><g><title>0x7fefc86c590e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="140" y="356" width="1" height="15" fill="rgb(210,66,38)"/><text x="143.00" y="366.50"></text></g><g><title>0x7fefc86c591e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="356" width="2" height="15" fill="rgb(211,49,18)"/><text x="144.00" y="366.50"></text></g><g><title>0x7fefc86c5945 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="143" y="356" width="1" height="15" fill="rgb(231,204,46)"/><text x="146.00" y="366.50"></text></g><g><title>0x7fefc86c5965 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="144" y="356" width="2" height="15" fill="rgb(241,221,11)"/><text x="147.00" y="366.50"></text></g><g><title>0x7fefc86e5d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="146" y="356" width="1" height="15" fill="rgb(229,222,26)"/><text x="149.00" y="366.50"></text></g><g><title>0x7fefc86e6162 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(254,200,34)"/><text x="150.00" y="366.50"></text></g><g><title>0x7fefc8844e3e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="149" y="356" width="1" height="15" fill="rgb(238,80,4)"/><text x="152.00" y="366.50"></text></g><g><title>0x7fefc8844e57 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="150" y="356" width="1" height="15" fill="rgb(231,167,40)"/><text x="153.00" y="366.50"></text></g><g><title>0x7fefc88111b0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="170" y="372" width="2" height="15" fill="rgb(237,227,7)"/><text x="173.00" y="382.50"></text></g><g><title>0x7fefc8897bb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="172" y="372" width="1" height="15" fill="rgb(226,39,20)"/><text x="175.00" y="382.50"></text></g><g><title>0x7fefc8897bba (libm-2.29.so) (1 samples, 0.12%)</title><rect x="173" y="372" width="1" height="15" fill="rgb(231,174,0)"/><text x="176.00" y="382.50"></text></g><g><title>0x7fefc8897be2 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="174" y="372" width="5" height="15" fill="rgb(221,27,14)"/><text x="177.00" y="382.50"></text></g><g><title>0x7fefc8897beb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="179" y="372" width="1" height="15" fill="rgb(254,85,33)"/><text x="182.00" y="382.50"></text></g><g><title>0x7fefc8897bf9 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="180" y="372" width="4" height="15" fill="rgb(245,146,48)"/><text x="183.00" y="382.50"></text></g><g><title>0x7fefc8897c07 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="184" y="372" width="3" height="15" fill="rgb(247,81,36)"/><text x="187.00" y="382.50"></text></g><g><title>0x7fefc8897c18 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="187" y="372" width="2" height="15" fill="rgb(246,140,31)"/><text x="190.00" y="382.50"></text></g><g><title>0x7fefc8897c28 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="189" y="372" width="1" height="15" fill="rgb(216,70,25)"/><text x="192.00" y="382.50"></text></g><g><title>0x7fefc8897c32 (libm-2.29.so) (9 samples, 1.09%)</title><rect x="190" y="372" width="13" height="15" fill="rgb(236,210,12)"/><text x="193.00" y="382.50"></text></g><g><title>0x7fefc8897c3e (libm-2.29.so) (2 samples, 0.24%)</title><rect x="203" y="372" width="3" height="15" fill="rgb(214,34,4)"/><text x="206.00" y="382.50"></text></g><g><title>0x7fefc8897c46 (libm-2.29.so) (4 samples, 0.49%)</title><rect x="206" y="372" width="6" height="15" fill="rgb(206,121,25)"/><text x="209.00" y="382.50"></text></g><g><title>0x7fefc8897c52 (libm-2.29.so) (12 samples, 1.46%)</title><rect x="212" y="372" width="17" height="15" fill="rgb(208,49,21)"/><text x="215.00" y="382.50"></text></g><g><title>0x7fefc8897c5a (libm-2.29.so) (8 samples, 0.97%)</title><rect x="229" y="372" width="11" height="15" fill="rgb(220,18,26)"/><text x="232.00" y="382.50"></text></g><g><title>0x7fefc8897c6e (libm-2.29.so) (6 samples, 0.73%)</title><rect x="240" y="372" width="9" height="15" fill="rgb(210,164,53)"/><text x="243.00" y="382.50"></text></g><g><title>0x7fefc8897c7b (libm-2.29.so) (10 samples, 1.22%)</title><rect x="249" y="372" width="14" height="15" fill="rgb(236,111,34)"/><text x="252.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (85 samples, 10.33%)</title><rect x="151" y="356" width="122" height="15" fill="rgb(237,76,4)"/><text x="154.00" y="366.50">expf32x (libm-2..</text></g><g><title>0x7fefc8897c7f (libm-2.29.so) (7 samples, 0.85%)</title><rect x="263" y="372" width="10" height="15" fill="rgb(206,63,44)"/><text x="266.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="273" y="356" width="3" height="15" fill="rgb(221,77,26)"/><text x="276.00" y="366.50"></text></g><g><title>0x7fefc86c5982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="309" y="372" width="2" height="15" fill="rgb(227,91,51)"/><text x="312.00" y="382.50"></text></g><g><title>0x7fefc86c5a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(242,197,49)"/><text x="314.00" y="382.50"></text></g><g><title>0x7fefc86c5be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="312" y="372" width="1" height="15" fill="rgb(253,152,52)"/><text x="315.00" y="382.50"></text></g><g><title>0x7fefc86c590e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="316" y="388" width="2" height="15" fill="rgb(247,167,50)"/><text x="319.00" y="398.50"></text></g><g><title>0x7fefc86c5961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="318" y="388" width="1" height="15" fill="rgb(237,43,18)"/><text x="321.00" y="398.50"></text></g><g><title>0x7fefc86c5bc0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(224,167,26)"/><text x="322.00" y="398.50"></text></g><g><title>0x7fefc86c5be8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="321" y="388" width="1" height="15" fill="rgb(222,56,41)"/><text x="324.00" y="398.50"></text></g><g><title>0x7fefc86e5d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="322" y="388" width="1" height="15" fill="rgb(252,165,5)"/><text x="325.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(248,102,37)"/><text x="326.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 4.98%)</title><rect x="276" y="356" width="59" height="15" fill="rgb(235,82,24)"/><text x="279.00" y="366.50">onnxru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.82%)</title><rect x="313" y="372" width="22" height="15" fill="rgb(227,14,5)"/><text x="316.00" y="382.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.85%)</title><rect x="325" y="388" width="10" height="15" fill="rgb(210,94,52)"/><text x="328.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.85%)</title><rect x="325" y="404" width="10" height="15" fill="rgb(212,137,42)"/><text x="328.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="335" y="356" width="1" height="15" fill="rgb(237,206,0)"/><text x="338.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(215,116,51)"/><text x="339.00" y="366.50"></text></g><g><title>0x7fefb8191d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(212,104,18)"/><text x="339.00" y="382.50"></text></g><g><title>0x7fef886bc930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="349" y="372" width="2" height="15" fill="rgb(214,224,50)"/><text x="352.00" y="382.50"></text></g><g><title>0x7fefc86c5906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="351" y="372" width="1" height="15" fill="rgb(240,225,41)"/><text x="354.00" y="382.50"></text></g><g><title>0x7fefc86c5a38 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="352" y="372" width="2" height="15" fill="rgb(210,43,41)"/><text x="355.00" y="382.50"></text></g><g><title>0x7fefc86c5a41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="354" y="372" width="1" height="15" fill="rgb(224,226,42)"/><text x="357.00" y="382.50"></text></g><g><title>0x7fefc86c5a4d (libc-2.29.so) (2 samples, 0.24%)</title><rect x="355" y="372" width="3" height="15" fill="rgb(229,198,50)"/><text x="358.00" y="382.50"></text></g><g><title>0x7fefc86c5be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="358" y="372" width="1" height="15" fill="rgb(244,9,35)"/><text x="361.00" y="382.50"></text></g><g><title>0x7fefc86e5dc9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="359" y="372" width="2" height="15" fill="rgb(245,35,6)"/><text x="362.00" y="382.50"></text></g><g><title>0x7fefc86e5e2c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="361" y="372" width="1" height="15" fill="rgb(248,220,25)"/><text x="364.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.67%)</title><rect x="338" y="356" width="31" height="15" fill="rgb(223,173,24)"/><text x="341.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.61%)</title><rect x="362" y="372" width="7" height="15" fill="rgb(238,89,24)"/><text x="365.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.49%)</title><rect x="364" y="388" width="5" height="15" fill="rgb(231,58,37)"/><text x="367.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 27.46%)</title><rect x="47" y="340" width="324" height="15" fill="rgb(208,94,4)"/><text x="50.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Comp..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(232,181,18)"/><text x="372.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="369" y="372" width="2" height="15" fill="rgb(211,100,41)"/><text x="372.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="369" y="388" width="2" height="15" fill="rgb(244,198,40)"/><text x="372.00" y="398.50"></text></g><g><title>0x7fefc86c6d9f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="389" y="388" width="2" height="15" fill="rgb(252,81,8)"/><text x="392.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.70%)</title><rect x="372" y="356" width="20" height="15" fill="rgb(228,88,45)"/><text x="375.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (13 samples, 1.58%)</title><rect x="374" y="372" width="18" height="15" fill="rgb(232,56,5)"/><text x="377.00" y="382.50"></text></g><g><title>0x7fefc86c6f2a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="391" y="388" width="1" height="15" fill="rgb(239,13,29)"/><text x="394.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="392" y="356" width="2" height="15" fill="rgb(248,40,11)"/><text x="395.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="394" y="356" width="1" height="15" fill="rgb(211,214,19)"/><text x="397.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="395" y="356" width="2" height="15" fill="rgb(234,178,44)"/><text x="398.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 30.01%)</title><rect x="44" y="260" width="354" height="15" fill="rgb(224,179,22)"/><text x="47.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 30.01%)</title><rect x="44" y="276" width="354" height="15" fill="rgb(228,193,2)"/><text x="47.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 29.89%)</title><rect x="45" y="292" width="353" height="15" fill="rgb(248,202,3)"/><text x="48.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 29.89%)</title><rect x="45" y="308" width="353" height="15" fill="rgb(235,171,42)"/><text x="48.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 29.89%)</title><rect x="45" y="324" width="353" height="15" fill="rgb(229,130,8)"/><text x="48.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.31%)</title><rect x="371" y="340" width="27" height="15" fill="rgb(241,208,36)"/><text x="374.00" y="350.50">o..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="397" y="356" width="1" height="15" fill="rgb(230,72,18)"/><text x="400.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.58%)</title><rect x="398" y="260" width="19" height="15" fill="rgb(236,186,42)"/><text x="401.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.49%)</title><rect x="411" y="276" width="6" height="15" fill="rgb(217,99,41)"/><text x="414.00" y="286.50"></text></g><g><title>0x7fefc86c5d07 (libc-2.29.so) (4 samples, 0.49%)</title><rect x="418" y="292" width="6" height="15" fill="rgb(211,88,40)"/><text x="421.00" y="302.50"></text></g><g><title>0x7fefc86c5906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="424" y="308" width="1" height="15" fill="rgb(211,15,33)"/><text x="427.00" y="318.50"></text></g><g><title>0x7fefc86c59ff (libc-2.29.so) (1 samples, 0.12%)</title><rect x="425" y="308" width="2" height="15" fill="rgb(243,85,53)"/><text x="428.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (270 samples, 32.81%)</title><rect x="42" y="244" width="388" height="15" fill="rgb(209,24,18)"/><text x="45.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.09%)</title><rect x="417" y="260" width="13" height="15" fill="rgb(206,2,0)"/><text x="420.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.09%)</title><rect x="417" y="276" width="13" height="15" fill="rgb(206,158,37)"/><text x="420.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.49%)</title><rect x="424" y="292" width="6" height="15" fill="rgb(238,130,53)"/><text x="427.00" y="302.50"></text></g><g><title>0x7fefc86c5d07 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="427" y="308" width="3" height="15" fill="rgb(223,2,18)"/><text x="430.00" y="318.50"></text></g><g><title>profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (280 samples, 34.02%)</title><rect x="30" y="68" width="401" height="15" fill="rgb(226,185,3)"/><text x="33.00" y="78.50">profile_ort (bench_SVC_rbf_m_cl_probabilityTrue_kernel..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (280 samples, 34.02%)</title><rect x="30" y="84" width="401" height="15" fill="rgb(248,112,45)"/><text x="33.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kern..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (280 samples, 34.02%)</title><rect x="30" y="100" width="401" height="15" fill="rgb(219,68,18)"/><text x="33.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 33.17%)</title><rect x="40" y="116" width="391" height="15" fill="rgb(245,109,14)"/><text x="43.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 33.17%)</title><rect x="40" y="132" width="391" height="15" fill="rgb(252,153,8)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (273 samples, 33.17%)</title><rect x="40" y="148" width="391" height="15" fill="rgb(254,41,38)"/><text x="43.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (273 samples, 33.17%)</title><rect x="40" y="164" width="391" height="15" fill="rgb(223,46,0)"/><text x="43.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (273 samples, 33.17%)</title><rect x="40" y="180" width="391" height="15" fill="rgb(211,174,13)"/><text x="43.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (272 samples, 33.05%)</title><rect x="41" y="196" width="390" height="15" fill="rgb(241,143,31)"/><text x="44.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 32.93%)</title><rect x="42" y="212" width="389" height="15" fill="rgb(237,131,19)"/><text x="45.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (271 samples, 32.93%)</title><rect x="42" y="228" width="389" height="15" fill="rgb(254,28,29)"/><text x="45.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="430" y="244" width="1" height="15" fill="rgb(207,8,4)"/><text x="433.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="431" y="180" width="1" height="15" fill="rgb(213,104,11)"/><text x="434.00" y="190.50"></text></g><g><title>0x7fef89834c29 (?) (1 samples, 0.12%)</title><rect x="434" y="244" width="1" height="15" fill="rgb(220,217,7)"/><text x="437.00" y="254.50"></text></g><g><title>0x7fef8983bd9e (?) (1 samples, 0.12%)</title><rect x="434" y="260" width="1" height="15" fill="rgb(238,159,4)"/><text x="437.00" y="270.50"></text></g><g><title>0x7fef8983bc56 (?) (1 samples, 0.12%)</title><rect x="434" y="276" width="1" height="15" fill="rgb(227,15,43)"/><text x="437.00" y="286.50"></text></g><g><title>0x7fef89841ac7 (?) (1 samples, 0.12%)</title><rect x="434" y="292" width="1" height="15" fill="rgb(232,73,19)"/><text x="437.00" y="302.50"></text></g><g><title>0x7fef89841328 (?) (1 samples, 0.12%)</title><rect x="434" y="308" width="1" height="15" fill="rgb(209,196,43)"/><text x="437.00" y="318.50"></text></g><g><title>0x7fef898396a2 (?) (1 samples, 0.12%)</title><rect x="434" y="324" width="1" height="15" fill="rgb(219,81,22)"/><text x="437.00" y="334.50"></text></g><g><title>0x7fef89824440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.36%)</title><rect x="497" y="468" width="4" height="15" fill="rgb(248,33,23)"/><text x="500.00" y="478.50"></text></g><g><title>0x7fefc86c5991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="501" y="468" width="2" height="15" fill="rgb(231,167,35)"/><text x="504.00" y="478.50"></text></g><g><title>0x7fefc86c5a41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="503" y="468" width="1" height="15" fill="rgb(210,139,10)"/><text x="506.00" y="478.50"></text></g><g><title>0x7fefc88111b0 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="582" y="500" width="2" height="15" fill="rgb(242,157,7)"/><text x="585.00" y="510.50"></text></g><g><title>0x7fefc8897ba0 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="584" y="500" width="5" height="15" fill="rgb(251,15,16)"/><text x="587.00" y="510.50"></text></g><g><title>0x7fefc8897bba (libm-2.29.so) (1 samples, 0.12%)</title><rect x="589" y="500" width="1" height="15" fill="rgb(240,6,40)"/><text x="592.00" y="510.50"></text></g><g><title>0x7fefc8897bd3 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="590" y="500" width="3" height="15" fill="rgb(227,14,16)"/><text x="593.00" y="510.50"></text></g><g><title>0x7fefc8897bde (libm-2.29.so) (1 samples, 0.12%)</title><rect x="593" y="500" width="1" height="15" fill="rgb(240,114,0)"/><text x="596.00" y="510.50"></text></g><g><title>0x7fefc8897be2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="594" y="500" width="2" height="15" fill="rgb(206,220,18)"/><text x="597.00" y="510.50"></text></g><g><title>0x7fefc8897be7 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="596" y="500" width="3" height="15" fill="rgb(250,59,2)"/><text x="599.00" y="510.50"></text></g><g><title>0x7fefc8897beb (libm-2.29.so) (1 samples, 0.12%)</title><rect x="599" y="500" width="1" height="15" fill="rgb(237,39,44)"/><text x="602.00" y="510.50"></text></g><g><title>0x7fefc8897bf9 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="600" y="500" width="2" height="15" fill="rgb(253,95,45)"/><text x="603.00" y="510.50"></text></g><g><title>0x7fefc8897bfc (libm-2.29.so) (1 samples, 0.12%)</title><rect x="602" y="500" width="1" height="15" fill="rgb(216,31,29)"/><text x="605.00" y="510.50"></text></g><g><title>0x7fefc8897c04 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="603" y="500" width="4" height="15" fill="rgb(206,205,49)"/><text x="606.00" y="510.50"></text></g><g><title>0x7fefc8897c07 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="607" y="500" width="2" height="15" fill="rgb(252,125,0)"/><text x="610.00" y="510.50"></text></g><g><title>0x7fefc8897c10 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="609" y="500" width="1" height="15" fill="rgb(223,10,20)"/><text x="612.00" y="510.50"></text></g><g><title>0x7fefc8897c18 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="610" y="500" width="3" height="15" fill="rgb(227,120,26)"/><text x="613.00" y="510.50"></text></g><g><title>0x7fefc8897c28 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="613" y="500" width="4" height="15" fill="rgb(206,33,45)"/><text x="616.00" y="510.50"></text></g><g><title>0x7fefc8897c32 (libm-2.29.so) (9 samples, 1.09%)</title><rect x="617" y="500" width="13" height="15" fill="rgb(235,124,7)"/><text x="620.00" y="510.50"></text></g><g><title>0x7fefc8897c3e (libm-2.29.so) (3 samples, 0.36%)</title><rect x="630" y="500" width="5" height="15" fill="rgb(228,169,47)"/><text x="633.00" y="510.50"></text></g><g><title>0x7fefc8897c46 (libm-2.29.so) (6 samples, 0.73%)</title><rect x="635" y="500" width="8" height="15" fill="rgb(207,40,10)"/><text x="638.00" y="510.50"></text></g><g><title>0x7fefc8897c52 (libm-2.29.so) (12 samples, 1.46%)</title><rect x="643" y="500" width="17" height="15" fill="rgb(251,226,13)"/><text x="646.00" y="510.50"></text></g><g><title>0x7fefc8897c5a (libm-2.29.so) (8 samples, 0.97%)</title><rect x="660" y="500" width="12" height="15" fill="rgb(210,125,41)"/><text x="663.00" y="510.50"></text></g><g><title>0x7fefc8897c6e (libm-2.29.so) (9 samples, 1.09%)</title><rect x="672" y="500" width="13" height="15" fill="rgb(252,69,43)"/><text x="675.00" y="510.50"></text></g><g><title>0x7fefc8897c7b (libm-2.29.so) (13 samples, 1.58%)</title><rect x="685" y="500" width="18" height="15" fill="rgb(224,148,14)"/><text x="688.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (151 samples, 18.35%)</title><rect x="504" y="468" width="217" height="15" fill="rgb(211,33,54)"/><text x="507.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;:..</text></g><g><title>expf32x (libm-2.29.so) (117 samples, 14.22%)</title><rect x="553" y="484" width="168" height="15" fill="rgb(243,35,18)"/><text x="556.00" y="494.50">expf32x (libm-2.29.so)</text></g><g><title>0x7fefc8897c7f (libm-2.29.so) (12 samples, 1.46%)</title><rect x="703" y="500" width="18" height="15" fill="rgb(218,101,18)"/><text x="706.00" y="510.50"></text></g><g><title>0x7fefc8844e00 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="725" y="500" width="1" height="15" fill="rgb(205,153,9)"/><text x="728.00" y="510.50"></text></g><g><title>0x7fefc8844ea2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="726" y="500" width="2" height="15" fill="rgb(243,148,50)"/><text x="729.00" y="510.50"></text></g><g><title>std::abs (cmath) (1 samples, 0.12%)</title><rect x="728" y="500" width="1" height="15" fill="rgb(235,65,40)"/><text x="731.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (7 samples, 0.85%)</title><rect x="721" y="468" width="10" height="15" fill="rgb(209,155,30)"/><text x="724.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (6 samples, 0.73%)</title><rect x="722" y="484" width="9" height="15" fill="rgb(208,137,3)"/><text x="725.00" y="494.50"></text></g><g><title>std::exp (cmath) (1 samples, 0.12%)</title><rect x="729" y="500" width="2" height="15" fill="rgb(225,73,19)"/><text x="732.00" y="510.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h) (1 samples, 0.12%)</title><rect x="731" y="468" width="1" height="15" fill="rgb(231,68,7)"/><text x="734.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h) (1 samples, 0.12%)</title><rect x="731" y="484" width="1" height="15" fill="rgb(219,18,39)"/><text x="734.00" y="494.50"></text></g><g><title>0x7fefc86c591e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="732" y="484" width="2" height="15" fill="rgb(231,20,47)"/><text x="735.00" y="494.50"></text></g><g><title>0x7fefc86e5dbb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="734" y="484" width="1" height="15" fill="rgb(242,199,33)"/><text x="737.00" y="494.50"></text></g><g><title>0x7fefc86e5e09 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="735" y="484" width="1" height="15" fill="rgb(217,219,34)"/><text x="738.00" y="494.50"></text></g><g><title>0x7fef898242d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.36%)</title><rect x="738" y="532" width="4" height="15" fill="rgb(228,149,53)"/><text x="741.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (7 samples, 0.85%)</title><rect x="736" y="484" width="10" height="15" fill="rgb(209,143,15)"/><text x="739.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (7 samples, 0.85%)</title><rect x="736" y="500" width="10" height="15" fill="rgb(240,41,26)"/><text x="739.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (7 samples, 0.85%)</title><rect x="736" y="516" width="10" height="15" fill="rgb(215,67,11)"/><text x="739.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.36%)</title><rect x="742" y="532" width="4" height="15" fill="rgb(218,178,25)"/><text x="745.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.36%)</title><rect x="742" y="548" width="4" height="15" fill="rgb(236,150,6)"/><text x="745.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (11 samples, 1.34%)</title><rect x="732" y="468" width="16" height="15" fill="rgb(235,187,40)"/><text x="735.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="746" y="484" width="2" height="15" fill="rgb(212,149,49)"/><text x="749.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="746" y="500" width="2" height="15" fill="rgb(234,4,13)"/><text x="749.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="746" y="516" width="2" height="15" fill="rgb(211,100,54)"/><text x="749.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="746" y="532" width="2" height="15" fill="rgb(217,20,15)"/><text x="749.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="746" y="548" width="2" height="15" fill="rgb(234,191,47)"/><text x="749.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="746" y="564" width="2" height="15" fill="rgb(234,23,12)"/><text x="749.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="746" y="580" width="2" height="15" fill="rgb(245,144,4)"/><text x="749.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="746" y="596" width="2" height="15" fill="rgb(213,97,51)"/><text x="749.00" y="606.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.24%)</title><rect x="748" y="516" width="3" height="15" fill="rgb(242,229,25)"/><text x="751.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.24%)</title><rect x="748" y="532" width="3" height="15" fill="rgb(231,224,25)"/><text x="751.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.24%)</title><rect x="748" y="548" width="3" height="15" fill="rgb(218,156,21)"/><text x="751.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="748" y="564" width="3" height="15" fill="rgb(227,142,32)"/><text x="751.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="748" y="580" width="3" height="15" fill="rgb(241,4,9)"/><text x="751.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (3 samples, 0.36%)</title><rect x="748" y="468" width="4" height="15" fill="rgb(233,139,43)"/><text x="751.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (3 samples, 0.36%)</title><rect x="748" y="484" width="4" height="15" fill="rgb(219,189,22)"/><text x="751.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (3 samples, 0.36%)</title><rect x="748" y="500" width="4" height="15" fill="rgb(232,147,23)"/><text x="751.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="751" y="516" width="1" height="15" fill="rgb(223,201,8)"/><text x="754.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="751" y="532" width="1" height="15" fill="rgb(238,56,45)"/><text x="754.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="751" y="548" width="1" height="15" fill="rgb(220,160,21)"/><text x="754.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="751" y="564" width="1" height="15" fill="rgb(205,228,7)"/><text x="754.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="751" y="580" width="1" height="15" fill="rgb(246,34,22)"/><text x="754.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="751" y="596" width="1" height="15" fill="rgb(205,62,43)"/><text x="754.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="751" y="612" width="1" height="15" fill="rgb(235,116,9)"/><text x="754.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="751" y="628" width="1" height="15" fill="rgb(233,161,6)"/><text x="754.00" y="638.50"></text></g><g><title>0x7fefc86c5998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="791" y="500" width="1" height="15" fill="rgb(225,71,37)"/><text x="794.00" y="510.50"></text></g><g><title>0x7fef898242a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="794" y="516" width="1" height="15" fill="rgb(233,153,24)"/><text x="797.00" y="526.50"></text></g><g><title>0x7fefb81927a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="795" y="516" width="2" height="15" fill="rgb(232,59,38)"/><text x="798.00" y="526.50"></text></g><g><title>0x7fefc86c597c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="797" y="516" width="1" height="15" fill="rgb(211,187,40)"/><text x="800.00" y="526.50"></text></g><g><title>0x7fefc86c5998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="798" y="516" width="2" height="15" fill="rgb(244,228,54)"/><text x="801.00" y="526.50"></text></g><g><title>0x7fefc86c5a41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="800" y="516" width="1" height="15" fill="rgb(226,43,28)"/><text x="803.00" y="526.50"></text></g><g><title>0x7fefc86c5be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="801" y="516" width="1" height="15" fill="rgb(220,194,27)"/><text x="804.00" y="526.50"></text></g><g><title>0x7fefc86e5d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="802" y="516" width="2" height="15" fill="rgb(254,116,4)"/><text x="805.00" y="526.50"></text></g><g><title>0x7fefc86e5dbb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="804" y="516" width="1" height="15" fill="rgb(243,22,19)"/><text x="807.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.61%)</title><rect x="805" y="516" width="7" height="15" fill="rgb(234,39,9)"/><text x="808.00" y="526.50"></text></g><g><title>0x7fefb8191d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="814" y="580" width="1" height="15" fill="rgb(206,110,27)"/><text x="817.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (9 samples, 1.09%)</title><rect x="812" y="516" width="13" height="15" fill="rgb(210,219,34)"/><text x="815.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (8 samples, 0.97%)</title><rect x="814" y="532" width="11" height="15" fill="rgb(247,56,13)"/><text x="817.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (8 samples, 0.97%)</title><rect x="814" y="548" width="11" height="15" fill="rgb(236,205,17)"/><text x="817.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.97%)</title><rect x="814" y="564" width="11" height="15" fill="rgb(225,38,27)"/><text x="817.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.85%)</title><rect x="815" y="580" width="10" height="15" fill="rgb(210,102,30)"/><text x="818.00" y="590.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="825" y="516" width="2" height="15" fill="rgb(210,13,27)"/><text x="828.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="825" y="532" width="2" height="15" fill="rgb(212,87,36)"/><text x="828.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="825" y="548" width="2" height="15" fill="rgb(206,37,43)"/><text x="828.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.12%)</title><rect x="825" y="564" width="2" height="15" fill="rgb(214,155,50)"/><text x="828.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="825" y="580" width="2" height="15" fill="rgb(251,208,23)"/><text x="828.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="825" y="596" width="2" height="15" fill="rgb(243,18,15)"/><text x="828.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="825" y="612" width="2" height="15" fill="rgb(223,38,46)"/><text x="828.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.12%)</title><rect x="825" y="628" width="2" height="15" fill="rgb(246,201,14)"/><text x="828.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (25 samples, 3.04%)</title><rect x="792" y="500" width="36" height="15" fill="rgb(246,135,33)"/><text x="795.00" y="510.50">std..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.12%)</title><rect x="827" y="516" width="1" height="15" fill="rgb(234,105,20)"/><text x="830.00" y="526.50"></text></g><g><title>0x7fefc86c5a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="828" y="516" width="2" height="15" fill="rgb(239,85,35)"/><text x="831.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (55 samples, 6.68%)</title><rect x="752" y="468" width="79" height="15" fill="rgb(232,17,29)"/><text x="755.00" y="478.50">std::vect..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (55 samples, 6.68%)</title><rect x="752" y="484" width="79" height="15" fill="rgb(225,29,36)"/><text x="755.00" y="494.50">multiclas..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (2 samples, 0.24%)</title><rect x="828" y="500" width="3" height="15" fill="rgb(223,3,0)"/><text x="831.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="830" y="516" width="1" height="15" fill="rgb(205,198,20)"/><text x="833.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (2 samples, 0.24%)</title><rect x="831" y="468" width="3" height="15" fill="rgb(211,62,17)"/><text x="834.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (2 samples, 0.24%)</title><rect x="831" y="484" width="3" height="15" fill="rgb(252,92,49)"/><text x="834.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (2 samples, 0.24%)</title><rect x="831" y="500" width="3" height="15" fill="rgb(244,197,46)"/><text x="834.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="831" y="516" width="3" height="15" fill="rgb(244,81,53)"/><text x="834.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="831" y="532" width="3" height="15" fill="rgb(210,123,4)"/><text x="834.00" y="542.50"></text></g><g><title>0x7fefc86c5908 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="834" y="484" width="1" height="15" fill="rgb(211,54,0)"/><text x="837.00" y="494.50"></text></g><g><title>0x7fefc86c5922 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="835" y="484" width="2" height="15" fill="rgb(223,209,35)"/><text x="838.00" y="494.50"></text></g><g><title>0x7fefc86c5991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="837" y="484" width="1" height="15" fill="rgb(231,8,3)"/><text x="840.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (5 samples, 0.61%)</title><rect x="834" y="468" width="7" height="15" fill="rgb(206,160,4)"/><text x="837.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="838" y="484" width="3" height="15" fill="rgb(245,77,17)"/><text x="841.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.12%)</title><rect x="841" y="468" width="2" height="15" fill="rgb(225,176,43)"/><text x="844.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (285 samples, 34.63%)</title><rect x="435" y="452" width="409" height="15" fill="rgb(230,149,28)"/><text x="438.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodic..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.12%)</title><rect x="843" y="468" width="1" height="15" fill="rgb(246,56,49)"/><text x="846.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (1 samples, 0.12%)</title><rect x="843" y="484" width="1" height="15" fill="rgb(229,135,9)"/><text x="846.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (1 samples, 0.12%)</title><rect x="843" y="500" width="1" height="15" fill="rgb(247,167,38)"/><text x="846.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.12%)</title><rect x="843" y="516" width="1" height="15" fill="rgb(248,207,41)"/><text x="846.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.12%)</title><rect x="843" y="532" width="1" height="15" fill="rgb(240,190,35)"/><text x="846.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.12%)</title><rect x="843" y="548" width="1" height="15" fill="rgb(233,217,16)"/><text x="846.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="843" y="564" width="1" height="15" fill="rgb(235,171,26)"/><text x="846.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="843" y="580" width="1" height="15" fill="rgb(225,205,40)"/><text x="846.00" y="590.50"></text></g><g><title>profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (289 samples, 35.12%)</title><rect x="431" y="68" width="414" height="15" fill="rgb(232,128,54)"/><text x="434.00" y="78.50">profile_pyrt (bench_SVC_rbf_m_cl_probabilityTrue_kernelr..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (289 samples, 35.12%)</title><rect x="431" y="84" width="414" height="15" fill="rgb(212,153,16)"/><text x="434.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernel..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (289 samples, 35.12%)</title><rect x="431" y="100" width="414" height="15" fill="rgb(247,72,27)"/><text x="434.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (289 samples, 35.12%)</title><rect x="431" y="116" width="414" height="15" fill="rgb(219,194,0)"/><text x="434.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (289 samples, 35.12%)</title><rect x="431" y="132" width="414" height="15" fill="rgb(253,72,10)"/><text x="434.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (289 samples, 35.12%)</title><rect x="431" y="148" width="414" height="15" fill="rgb(248,105,48)"/><text x="434.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (289 samples, 35.12%)</title><rect x="431" y="164" width="414" height="15" fill="rgb(205,145,14)"/><text x="434.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (288 samples, 34.99%)</title><rect x="432" y="180" width="413" height="15" fill="rgb(253,119,15)"/><text x="435.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (288 samples, 34.99%)</title><rect x="432" y="196" width="413" height="15" fill="rgb(218,167,47)"/><text x="435.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (288 samples, 34.99%)</title><rect x="432" y="212" width="413" height="15" fill="rgb(246,18,46)"/><text x="435.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (288 samples, 34.99%)</title><rect x="432" y="228" width="413" height="15" fill="rgb(233,212,7)"/><text x="435.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (286 samples, 34.75%)</title><rect x="435" y="244" width="410" height="15" fill="rgb(246,154,17)"/><text x="438.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (286 samples, 34.75%)</title><rect x="435" y="260" width="410" height="15" fill="rgb(235,225,42)"/><text x="438.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (286 samples, 34.75%)</title><rect x="435" y="276" width="410" height="15" fill="rgb(216,27,38)"/><text x="438.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (286 samples, 34.75%)</title><rect x="435" y="292" width="410" height="15" fill="rgb(210,27,54)"/><text x="438.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierF..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (286 samples, 34.75%)</title><rect x="435" y="308" width="410" height="15" fill="rgb(235,139,24)"/><text x="438.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierF..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (286 samples, 34.75%)</title><rect x="435" y="324" width="410" height="15" fill="rgb(251,211,31)"/><text x="438.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple, R..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (286 samples, 34.75%)</title><rect x="435" y="340" width="410" height="15" fill="rgb(243,153,44)"/><text x="438.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (286 samples, 34.75%)</title><rect x="435" y="356" width="410" height="15" fill="rgb(243,221,6)"/><text x="438.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (286 samples, 34.75%)</title><rect x="435" y="372" width="410" height="15" fill="rgb(241,190,18)"/><text x="438.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (286 samples, 34.75%)</title><rect x="435" y="388" width="410" height="15" fill="rgb(238,62,35)"/><text x="438.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (286 samples, 34.75%)</title><rect x="435" y="404" width="410" height="15" fill="rgb(208,119,25)"/><text x="438.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (286 samples, 34.75%)</title><rect x="435" y="420" width="410" height="15" fill="rgb(250,191,50)"/><text x="438.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (286 samples, 34.75%)</title><rect x="435" y="436" width="410" height="15" fill="rgb(244,174,27)"/><text x="438.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (pybi..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (vector.tcc) (1 samples, 0.12%)</title><rect x="844" y="452" width="1" height="15" fill="rgb(254,104,52)"/><text x="847.00" y="462.50"></text></g><g><title>0x7fefa31b446c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="847" y="196" width="1" height="15" fill="rgb(225,147,52)"/><text x="850.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.12%)</title><rect x="847" y="212" width="1" height="15" fill="rgb(244,201,38)"/><text x="850.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.12%)</title><rect x="847" y="228" width="1" height="15" fill="rgb(220,13,49)"/><text x="850.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.12%)</title><rect x="847" y="244" width="1" height="15" fill="rgb(229,87,40)"/><text x="850.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="847" y="260" width="1" height="15" fill="rgb(238,227,28)"/><text x="850.00" y="270.50"></text></g><g><title>0x7fefa3196e80 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="926" y="244" width="1" height="15" fill="rgb(207,101,49)"/><text x="929.00" y="254.50"></text></g><g><title>0x7fefc86c5906 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="927" y="244" width="3" height="15" fill="rgb(242,6,27)"/><text x="930.00" y="254.50"></text></g><g><title>0x7fefc86c592f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="930" y="244" width="1" height="15" fill="rgb(244,14,50)"/><text x="933.00" y="254.50"></text></g><g><title>0x7fefc86c5a33 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="931" y="244" width="2" height="15" fill="rgb(225,190,50)"/><text x="934.00" y="254.50"></text></g><g><title>0x7fefc86c5d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="933" y="244" width="1" height="15" fill="rgb(250,25,42)"/><text x="936.00" y="254.50"></text></g><g><title>0x7fefc86c5d13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="934" y="244" width="2" height="15" fill="rgb(233,5,25)"/><text x="937.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.24%)</title><rect x="936" y="244" width="3" height="15" fill="rgb(211,114,15)"/><text x="939.00" y="254.50"></text></g><g><title>0x7fefc8897bd3 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="937" y="260" width="2" height="15" fill="rgb(227,48,1)"/><text x="940.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.36%)</title><rect x="939" y="244" width="4" height="15" fill="rgb(244,225,4)"/><text x="942.00" y="254.50"></text></g><g><title>0x7fefc86c6c38 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="950" y="260" width="1" height="15" fill="rgb(231,144,7)"/><text x="953.00" y="270.50"></text></g><g><title>0x7fefc86c700a (libc-2.29.so) (3 samples, 0.36%)</title><rect x="951" y="260" width="5" height="15" fill="rgb(210,21,39)"/><text x="954.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.22%)</title><rect x="943" y="244" width="14" height="15" fill="rgb(219,173,38)"/><text x="946.00" y="254.50"></text></g><g><title>0x7fefc86c7270 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="956" y="260" width="1" height="15" fill="rgb(244,40,13)"/><text x="959.00" y="270.50"></text></g><g><title>0x7fefc86c5991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="982" y="260" width="1" height="15" fill="rgb(223,76,28)"/><text x="985.00" y="270.50"></text></g><g><title>0x7fefc8897ba0 (libm-2.29.so) (4 samples, 0.49%)</title><rect x="1006" y="276" width="6" height="15" fill="rgb(226,62,21)"/><text x="1009.00" y="286.50"></text></g><g><title>0x7fefc8897bb4 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1012" y="276" width="3" height="15" fill="rgb(217,35,22)"/><text x="1015.00" y="286.50"></text></g><g><title>0x7fefc8897be2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1015" y="276" width="1" height="15" fill="rgb(230,161,41)"/><text x="1018.00" y="286.50"></text></g><g><title>0x7fefc8897be7 (libm-2.29.so) (4 samples, 0.49%)</title><rect x="1016" y="276" width="6" height="15" fill="rgb(234,55,28)"/><text x="1019.00" y="286.50"></text></g><g><title>0x7fefc8897bf9 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1022" y="276" width="3" height="15" fill="rgb(231,190,47)"/><text x="1025.00" y="286.50"></text></g><g><title>0x7fefc8897c04 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1025" y="276" width="1" height="15" fill="rgb(239,107,6)"/><text x="1028.00" y="286.50"></text></g><g><title>0x7fefc8897c07 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1026" y="276" width="4" height="15" fill="rgb(236,113,35)"/><text x="1029.00" y="286.50"></text></g><g><title>0x7fefc8897c0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1030" y="276" width="2" height="15" fill="rgb(213,48,53)"/><text x="1033.00" y="286.50"></text></g><g><title>0x7fefc8897c18 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1032" y="276" width="1" height="15" fill="rgb(224,74,53)"/><text x="1035.00" y="286.50"></text></g><g><title>0x7fefc8897c2e (libm-2.29.so) (5 samples, 0.61%)</title><rect x="1033" y="276" width="7" height="15" fill="rgb(246,162,40)"/><text x="1036.00" y="286.50"></text></g><g><title>0x7fefc8897c32 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1040" y="276" width="2" height="15" fill="rgb(230,120,41)"/><text x="1043.00" y="286.50"></text></g><g><title>0x7fefc8897c3e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1042" y="276" width="1" height="15" fill="rgb(234,196,11)"/><text x="1045.00" y="286.50"></text></g><g><title>0x7fefc8897c46 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1043" y="276" width="2" height="15" fill="rgb(224,35,22)"/><text x="1046.00" y="286.50"></text></g><g><title>0x7fefc8897c52 (libm-2.29.so) (12 samples, 1.46%)</title><rect x="1045" y="276" width="17" height="15" fill="rgb(233,214,28)"/><text x="1048.00" y="286.50"></text></g><g><title>0x7fefc8897c5a (libm-2.29.so) (7 samples, 0.85%)</title><rect x="1062" y="276" width="10" height="15" fill="rgb(238,31,53)"/><text x="1065.00" y="286.50"></text></g><g><title>0x7fefc8897c6a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1072" y="276" width="1" height="15" fill="rgb(216,190,16)"/><text x="1075.00" y="286.50"></text></g><g><title>0x7fefc8897c6e (libm-2.29.so) (9 samples, 1.09%)</title><rect x="1073" y="276" width="13" height="15" fill="rgb(253,179,25)"/><text x="1076.00" y="286.50"></text></g><g><title>0x7fefc8897c7b (libm-2.29.so) (10 samples, 1.22%)</title><rect x="1086" y="276" width="15" height="15" fill="rgb(209,162,33)"/><text x="1089.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (90 samples, 10.94%)</title><rect x="983" y="260" width="129" height="15" fill="rgb(243,126,51)"/><text x="986.00" y="270.50">exp (libm-2.29.s..</text></g><g><title>0x7fefc8897c7f (libm-2.29.so) (8 samples, 0.97%)</title><rect x="1101" y="276" width="11" height="15" fill="rgb(246,119,22)"/><text x="1104.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.49%)</title><rect x="1112" y="260" width="6" height="15" fill="rgb(236,42,34)"/><text x="1115.00" y="270.50"></text></g><g><title>0x7fefa31b4553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (231 samples, 28.07%)</title><rect x="848" y="196" width="331" height="15" fill="rgb(212,134,10)"/><text x="851.00" y="206.50">0x7fefa31b4553 (sklearn/svm/_libsvm.cpython-..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (231 samples, 28.07%)</title><rect x="848" y="212" width="331" height="15" fill="rgb(252,155,22)"/><text x="851.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm.cpyt..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (231 samples, 28.07%)</title><rect x="848" y="228" width="331" height="15" fill="rgb(222,32,48)"/><text x="851.00" y="238.50">svm_predict_probability (sklearn/svm/_libsvm..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (155 samples, 18.83%)</title><rect x="957" y="244" width="222" height="15" fill="rgb(247,85,41)"/><text x="960.00" y="254.50">svm_predict_values (sklearn/s..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (43 samples, 5.22%)</title><rect x="1118" y="260" width="61" height="15" fill="rgb(212,126,30)"/><text x="1121.00" y="270.50">svm::K..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (234 samples, 28.43%)</title><rect x="845" y="164" width="336" height="15" fill="rgb(207,3,21)"/><text x="848.00" y="174.50">_dense_predict_proba (sklearn/svm/_base.py)</text></g><g><title>0x7fefa31b63fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (233 samples, 28.31%)</title><rect x="847" y="180" width="334" height="15" fill="rgb(220,224,52)"/><text x="850.00" y="190.50">0x7fefa31b63fd (sklearn/svm/_libsvm.cpython-3..</text></g><g><title>0x7fefa31b4571 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="1179" y="196" width="2" height="15" fill="rgb(236,85,25)"/><text x="1182.00" y="206.50"></text></g><g><title>free_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="1179" y="212" width="2" height="15" fill="rgb(211,29,31)"/><text x="1182.00" y="222.50"></text></g><g><title>0x7fefc86c5bdc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1179" y="228" width="2" height="15" fill="rgb(212,132,9)"/><text x="1182.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.12%)</title><rect x="1184" y="196" width="1" height="15" fill="rgb(249,52,51)"/><text x="1187.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (5 samples, 0.61%)</title><rect x="1181" y="180" width="7" height="15" fill="rgb(224,61,44)"/><text x="1184.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.24%)</title><rect x="1185" y="196" width="3" height="15" fill="rgb(232,176,40)"/><text x="1188.00" y="206.50"></text></g><g><title>all (823 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(224,113,15)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (823 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(215,58,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (240 samples, 29.16%)</title><rect x="845" y="68" width="345" height="15" fill="rgb(246,153,44)"/><text x="848.00" y="78.50">profile_skl (bench_SVC_rbf_m_cl_probabilityTru..</text></g><g><title>setup_profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (240 samples, 29.16%)</title><rect x="845" y="84" width="345" height="15" fill="rgb(232,170,44)"/><text x="848.00" y="94.50">setup_profile (bench_SVC_rbf_m_cl_probabilityT..</text></g><g><title>profile (bench_SVC_rbf_m_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (240 samples, 29.16%)</title><rect x="845" y="100" width="345" height="15" fill="rgb(214,46,50)"/><text x="848.00" y="110.50">profile (bench_SVC_rbf_m_cl_probabilityTrue_ke..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (240 samples, 29.16%)</title><rect x="845" y="116" width="345" height="15" fill="rgb(214,210,2)"/><text x="848.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (240 samples, 29.16%)</title><rect x="845" y="132" width="345" height="15" fill="rgb(254,213,53)"/><text x="848.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (240 samples, 29.16%)</title><rect x="845" y="148" width="345" height="15" fill="rgb(234,123,15)"/><text x="848.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (6 samples, 0.73%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(231,33,25)"/><text x="1184.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.12%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(252,50,36)"/><text x="1191.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.12%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(245,8,38)"/><text x="1191.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(228,40,5)"/><text x="1191.00" y="222.50"></text></g></g></svg>