<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.22%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(241,40,7)"/><text x="13.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.22%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(234,228,33)"/><text x="13.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(231,212,6)"/><text x="13.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.22%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(249,59,38)"/><text x="13.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.22%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(252,196,3)"/><text x="13.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(243,162,17)"/><text x="13.00" y="270.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:18) (2 samples, 0.45%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(216,181,18)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.45%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(221,51,33)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.45%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(253,138,53)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (2 samples, 0.45%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(233,24,16)"/><text x="13.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (2 samples, 0.45%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(212,225,26)"/><text x="13.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.22%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(220,27,51)"/><text x="15.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.22%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(223,123,26)"/><text x="15.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(226,3,2)"/><text x="15.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(213,48,9)"/><text x="15.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.22%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(227,14,27)"/><text x="15.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.22%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(215,102,4)"/><text x="15.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.22%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(227,144,42)"/><text x="15.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.22%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(241,169,18)"/><text x="15.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.22%)</title><rect x="12" y="308" width="3" height="15" fill="rgb(229,11,12)"/><text x="15.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.22%)</title><rect x="12" y="324" width="3" height="15" fill="rgb(241,6,16)"/><text x="15.00" y="334.50"></text></g><g><title>0x7f1dbd50b151 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="12" y="340" width="3" height="15" fill="rgb(249,207,7)"/><text x="15.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.45%)</title><rect x="25" y="180" width="6" height="15" fill="rgb(222,29,30)"/><text x="28.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.12%)</title><rect x="39" y="196" width="13" height="15" fill="rgb(251,47,53)"/><text x="42.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.02%)</title><rect x="31" y="180" width="24" height="15" fill="rgb(217,103,38)"/><text x="34.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="52" y="196" width="3" height="15" fill="rgb(245,81,5)"/><text x="55.00" y="206.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (17 samples, 3.82%)</title><rect x="20" y="148" width="45" height="15" fill="rgb(241,102,28)"/><text x="23.00" y="158.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 3.37%)</title><rect x="25" y="164" width="40" height="15" fill="rgb(254,190,11)"/><text x="28.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 0.90%)</title><rect x="55" y="180" width="10" height="15" fill="rgb(212,195,42)"/><text x="58.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.45%)</title><rect x="60" y="196" width="5" height="15" fill="rgb(234,93,52)"/><text x="63.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.22%)</title><rect x="65" y="180" width="3" height="15" fill="rgb(207,154,2)"/><text x="68.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.22%)</title><rect x="68" y="180" width="2" height="15" fill="rgb(245,68,9)"/><text x="71.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.45%)</title><rect x="73" y="196" width="5" height="15" fill="rgb(209,44,26)"/><text x="76.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.22%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(223,56,25)"/><text x="81.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.22%)</title><rect x="81" y="196" width="3" height="15" fill="rgb(247,185,54)"/><text x="84.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.22%)</title><rect x="84" y="196" width="2" height="15" fill="rgb(245,217,26)"/><text x="87.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 1.57%)</title><rect x="70" y="180" width="19" height="15" fill="rgb(233,78,45)"/><text x="73.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.22%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(205,96,34)"/><text x="89.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.35%)</title><rect x="89" y="180" width="16" height="15" fill="rgb(237,116,35)"/><text x="92.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.12%)</title><rect x="92" y="196" width="13" height="15" fill="rgb(246,210,51)"/><text x="95.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.67%)</title><rect x="97" y="212" width="8" height="15" fill="rgb(238,129,45)"/><text x="100.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 1.12%)</title><rect x="105" y="180" width="13" height="15" fill="rgb(211,208,26)"/><text x="108.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.22%)</title><rect x="116" y="196" width="2" height="15" fill="rgb(219,146,3)"/><text x="119.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.45%)</title><rect x="118" y="180" width="6" height="15" fill="rgb(214,69,2)"/><text x="121.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.22%)</title><rect x="121" y="196" width="3" height="15" fill="rgb(231,2,54)"/><text x="124.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.45%)</title><rect x="124" y="212" width="5" height="15" fill="rgb(208,24,32)"/><text x="127.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.67%)</title><rect x="124" y="196" width="7" height="15" fill="rgb(210,174,30)"/><text x="127.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.22%)</title><rect x="129" y="212" width="2" height="15" fill="rgb(216,13,22)"/><text x="132.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.90%)</title><rect x="124" y="180" width="10" height="15" fill="rgb(220,166,53)"/><text x="127.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.22%)</title><rect x="131" y="196" width="3" height="15" fill="rgb(236,225,26)"/><text x="134.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.57%)</title><rect x="134" y="180" width="19" height="15" fill="rgb(231,93,8)"/><text x="137.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.12%)</title><rect x="139" y="196" width="14" height="15" fill="rgb(228,120,23)"/><text x="142.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.45%)</title><rect x="147" y="212" width="6" height="15" fill="rgb(241,191,43)"/><text x="150.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.22%)</title><rect x="153" y="196" width="2" height="15" fill="rgb(231,31,3)"/><text x="156.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.22%)</title><rect x="155" y="196" width="3" height="15" fill="rgb(223,144,4)"/><text x="158.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.67%)</title><rect x="153" y="180" width="8" height="15" fill="rgb(217,53,19)"/><text x="156.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.22%)</title><rect x="158" y="196" width="3" height="15" fill="rgb(225,43,12)"/><text x="161.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.22%)</title><rect x="161" y="180" width="2" height="15" fill="rgb(209,52,17)"/><text x="164.00" y="190.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (38 samples, 8.54%)</title><rect x="65" y="164" width="101" height="15" fill="rgb(247,45,8)"/><text x="68.00" y="174.50">_predict (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:598) (1 samples, 0.22%)</title><rect x="163" y="180" width="3" height="15" fill="rgb(240,218,8)"/><text x="166.00" y="190.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:671) (1 samples, 0.22%)</title><rect x="166" y="164" width="3" height="15" fill="rgb(210,159,28)"/><text x="169.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:681) (1 samples, 0.22%)</title><rect x="169" y="164" width="2" height="15" fill="rgb(224,229,23)"/><text x="172.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:682) (2 samples, 0.45%)</title><rect x="171" y="164" width="6" height="15" fill="rgb(235,183,35)"/><text x="174.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (1 samples, 0.22%)</title><rect x="177" y="164" width="2" height="15" fill="rgb(234,41,2)"/><text x="180.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.22%)</title><rect x="177" y="180" width="2" height="15" fill="rgb(212,123,42)"/><text x="180.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.22%)</title><rect x="177" y="196" width="2" height="15" fill="rgb(243,106,2)"/><text x="180.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c:3099) (1 samples, 0.22%)</title><rect x="177" y="212" width="2" height="15" fill="rgb(231,44,34)"/><text x="180.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:102) (2 samples, 0.45%)</title><rect x="179" y="180" width="6" height="15" fill="rgb(237,153,1)"/><text x="182.00" y="190.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="187" y="212" width="5" height="15" fill="rgb(214,16,22)"/><text x="190.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="192" y="212" width="3" height="15" fill="rgb(222,119,35)"/><text x="195.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="192" y="228" width="3" height="15" fill="rgb(236,227,47)"/><text x="195.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:51) (1 samples, 0.22%)</title><rect x="192" y="244" width="3" height="15" fill="rgb(214,111,12)"/><text x="195.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.22%)</title><rect x="195" y="244" width="3" height="15" fill="rgb(230,91,33)"/><text x="198.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:559) (1 samples, 0.22%)</title><rect x="195" y="260" width="3" height="15" fill="rgb(242,111,37)"/><text x="198.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2811) (1 samples, 0.22%)</title><rect x="198" y="244" width="2" height="15" fill="rgb(208,155,3)"/><text x="201.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.22%)</title><rect x="198" y="260" width="2" height="15" fill="rgb(250,55,11)"/><text x="201.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:111) (1 samples, 0.22%)</title><rect x="200" y="308" width="3" height="15" fill="rgb(248,47,41)"/><text x="203.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.45%)</title><rect x="200" y="276" width="6" height="15" fill="rgb(228,1,9)"/><text x="203.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.45%)</title><rect x="200" y="292" width="6" height="15" fill="rgb(208,205,54)"/><text x="203.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="203" y="308" width="3" height="15" fill="rgb(251,63,51)"/><text x="206.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.22%)</title><rect x="203" y="324" width="3" height="15" fill="rgb(235,226,37)"/><text x="206.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="203" y="340" width="3" height="15" fill="rgb(248,197,17)"/><text x="206.00" y="350.50"></text></g><g><title>0x7f1dbd3e59e8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="203" y="356" width="3" height="15" fill="rgb(234,203,42)"/><text x="206.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.67%)</title><rect x="200" y="244" width="8" height="15" fill="rgb(250,122,51)"/><text x="203.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.67%)</title><rect x="200" y="260" width="8" height="15" fill="rgb(209,58,36)"/><text x="203.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.22%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(247,95,16)"/><text x="209.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1937) (1 samples, 0.22%)</title><rect x="206" y="292" width="2" height="15" fill="rgb(237,95,13)"/><text x="209.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.22%)</title><rect x="208" y="244" width="3" height="15" fill="rgb(205,134,19)"/><text x="211.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:156) (1 samples, 0.22%)</title><rect x="208" y="260" width="3" height="15" fill="rgb(241,126,26)"/><text x="211.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1754) (1 samples, 0.22%)</title><rect x="208" y="276" width="3" height="15" fill="rgb(244,91,17)"/><text x="211.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.22%)</title><rect x="211" y="244" width="3" height="15" fill="rgb(220,67,8)"/><text x="214.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.22%)</title><rect x="211" y="260" width="3" height="15" fill="rgb(252,210,44)"/><text x="214.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.22%)</title><rect x="211" y="276" width="3" height="15" fill="rgb(229,8,19)"/><text x="214.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.67%)</title><rect x="214" y="244" width="8" height="15" fill="rgb(229,35,39)"/><text x="217.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (3 samples, 0.67%)</title><rect x="214" y="260" width="8" height="15" fill="rgb(234,153,25)"/><text x="217.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (3 samples, 0.67%)</title><rect x="214" y="276" width="8" height="15" fill="rgb(239,153,11)"/><text x="217.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="214" y="292" width="8" height="15" fill="rgb(248,26,10)"/><text x="217.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="216" y="308" width="6" height="15" fill="rgb(213,219,17)"/><text x="219.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.22%)</title><rect x="222" y="244" width="2" height="15" fill="rgb(237,93,20)"/><text x="225.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.22%)</title><rect x="224" y="244" width="3" height="15" fill="rgb(231,135,41)"/><text x="227.00" y="254.50"></text></g><g><title>0x7f1dbd42d902 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="224" y="260" width="3" height="15" fill="rgb(245,113,22)"/><text x="227.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.92%)</title><rect x="195" y="212" width="35" height="15" fill="rgb(248,104,45)"/><text x="198.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 2.92%)</title><rect x="195" y="228" width="35" height="15" fill="rgb(225,80,37)"/><text x="198.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3083) (1 samples, 0.22%)</title><rect x="227" y="244" width="3" height="15" fill="rgb(205,90,42)"/><text x="230.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.22%)</title><rect x="230" y="212" width="2" height="15" fill="rgb(206,60,14)"/><text x="233.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.22%)</title><rect x="232" y="212" width="3" height="15" fill="rgb(227,72,51)"/><text x="235.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (19 samples, 4.27%)</title><rect x="187" y="196" width="51" height="15" fill="rgb(227,34,14)"/><text x="190.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.22%)</title><rect x="235" y="212" width="3" height="15" fill="rgb(229,103,31)"/><text x="238.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.22%)</title><rect x="235" y="228" width="3" height="15" fill="rgb(235,22,35)"/><text x="238.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (24 samples, 5.39%)</title><rect x="185" y="180" width="63" height="15" fill="rgb(232,150,45)"/><text x="188.00" y="190.50">_forwa..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 0.90%)</title><rect x="238" y="196" width="10" height="15" fill="rgb(247,110,18)"/><text x="241.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 0.67%)</title><rect x="240" y="212" width="8" height="15" fill="rgb(253,52,42)"/><text x="243.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.45%)</title><rect x="253" y="212" width="6" height="15" fill="rgb(247,167,10)"/><text x="256.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (2 samples, 0.45%)</title><rect x="253" y="228" width="6" height="15" fill="rgb(235,47,41)"/><text x="256.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.22%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(209,62,5)"/><text x="262.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1092) (1 samples, 0.22%)</title><rect x="259" y="260" width="2" height="15" fill="rgb(205,35,18)"/><text x="262.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="261" y="244" width="3" height="15" fill="rgb(227,164,37)"/><text x="264.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.22%)</title><rect x="261" y="260" width="3" height="15" fill="rgb(207,0,14)"/><text x="264.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1743) (1 samples, 0.22%)</title><rect x="261" y="276" width="3" height="15" fill="rgb(224,145,41)"/><text x="264.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.22%)</title><rect x="264" y="244" width="3" height="15" fill="rgb(225,205,31)"/><text x="267.00" y="254.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.22%)</title><rect x="264" y="260" width="3" height="15" fill="rgb(219,29,45)"/><text x="267.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.90%)</title><rect x="259" y="228" width="10" height="15" fill="rgb(220,84,30)"/><text x="262.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.22%)</title><rect x="267" y="244" width="2" height="15" fill="rgb(253,32,46)"/><text x="270.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:680) (1 samples, 0.22%)</title><rect x="267" y="260" width="2" height="15" fill="rgb(228,27,41)"/><text x="270.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.57%)</title><rect x="253" y="196" width="19" height="15" fill="rgb(227,200,51)"/><text x="256.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.12%)</title><rect x="259" y="212" width="13" height="15" fill="rgb(228,92,34)"/><text x="262.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="269" y="228" width="3" height="15" fill="rgb(251,193,33)"/><text x="272.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.22%)</title><rect x="269" y="244" width="3" height="15" fill="rgb(231,60,26)"/><text x="272.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.22%)</title><rect x="272" y="196" width="3" height="15" fill="rgb(241,94,32)"/><text x="275.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.22%)</title><rect x="275" y="196" width="2" height="15" fill="rgb(209,57,19)"/><text x="278.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.22%)</title><rect x="275" y="212" width="2" height="15" fill="rgb(236,167,44)"/><text x="278.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (12 samples, 2.70%)</title><rect x="248" y="180" width="32" height="15" fill="rgb(210,24,30)"/><text x="251.00" y="190.50">_f..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.22%)</title><rect x="277" y="196" width="3" height="15" fill="rgb(207,129,5)"/><text x="280.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (2 samples, 0.45%)</title><rect x="291" y="212" width="5" height="15" fill="rgb(241,79,11)"/><text x="294.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.22%)</title><rect x="293" y="228" width="3" height="15" fill="rgb(244,102,24)"/><text x="296.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:231) (1 samples, 0.22%)</title><rect x="296" y="228" width="3" height="15" fill="rgb(226,68,24)"/><text x="299.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.45%)</title><rect x="299" y="228" width="5" height="15" fill="rgb(219,122,6)"/><text x="302.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.45%)</title><rect x="299" y="244" width="5" height="15" fill="rgb(224,181,12)"/><text x="302.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.45%)</title><rect x="299" y="260" width="5" height="15" fill="rgb(254,40,51)"/><text x="302.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.45%)</title><rect x="299" y="276" width="5" height="15" fill="rgb(206,1,29)"/><text x="302.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.45%)</title><rect x="299" y="292" width="5" height="15" fill="rgb(224,105,26)"/><text x="302.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.45%)</title><rect x="299" y="308" width="5" height="15" fill="rgb(237,122,11)"/><text x="302.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (3 samples, 0.67%)</title><rect x="314" y="260" width="8" height="15" fill="rgb(239,138,41)"/><text x="317.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (6 samples, 1.35%)</title><rect x="322" y="324" width="16" height="15" fill="rgb(254,120,2)"/><text x="325.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.67%)</title><rect x="330" y="340" width="8" height="15" fill="rgb(214,139,32)"/><text x="333.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.22%)</title><rect x="338" y="356" width="3" height="15" fill="rgb(244,140,43)"/><text x="341.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.22%)</title><rect x="341" y="372" width="3" height="15" fill="rgb(212,39,40)"/><text x="344.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.45%)</title><rect x="346" y="404" width="6" height="15" fill="rgb(223,142,3)"/><text x="349.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="349" y="420" width="3" height="15" fill="rgb(230,206,51)"/><text x="352.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (6 samples, 1.35%)</title><rect x="338" y="324" width="16" height="15" fill="rgb(213,83,6)"/><text x="341.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.35%)</title><rect x="338" y="340" width="16" height="15" fill="rgb(225,130,50)"/><text x="341.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.12%)</title><rect x="341" y="356" width="13" height="15" fill="rgb(210,194,23)"/><text x="344.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 0.90%)</title><rect x="344" y="372" width="10" height="15" fill="rgb(208,182,30)"/><text x="347.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.67%)</title><rect x="346" y="388" width="8" height="15" fill="rgb(219,102,10)"/><text x="349.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.22%)</title><rect x="352" y="404" width="2" height="15" fill="rgb(231,188,25)"/><text x="355.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.22%)</title><rect x="352" y="420" width="2" height="15" fill="rgb(230,8,13)"/><text x="355.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.22%)</title><rect x="352" y="436" width="2" height="15" fill="rgb(224,199,16)"/><text x="355.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.22%)</title><rect x="352" y="452" width="2" height="15" fill="rgb(229,111,47)"/><text x="355.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.22%)</title><rect x="354" y="356" width="3" height="15" fill="rgb(208,121,34)"/><text x="357.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="357" y="356" width="3" height="15" fill="rgb(209,180,38)"/><text x="360.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.22%)</title><rect x="357" y="372" width="3" height="15" fill="rgb(212,169,8)"/><text x="360.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="360" y="356" width="2" height="15" fill="rgb(211,115,26)"/><text x="363.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.22%)</title><rect x="360" y="372" width="2" height="15" fill="rgb(238,55,34)"/><text x="363.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (16 samples, 3.60%)</title><rect x="322" y="308" width="43" height="15" fill="rgb(223,133,5)"/><text x="325.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.90%)</title><rect x="354" y="324" width="11" height="15" fill="rgb(209,220,44)"/><text x="357.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.90%)</title><rect x="354" y="340" width="11" height="15" fill="rgb(219,76,6)"/><text x="357.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="362" y="356" width="3" height="15" fill="rgb(236,65,19)"/><text x="365.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="362" y="372" width="3" height="15" fill="rgb(224,172,11)"/><text x="365.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.22%)</title><rect x="362" y="388" width="3" height="15" fill="rgb(220,173,24)"/><text x="365.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.90%)</title><rect x="365" y="324" width="10" height="15" fill="rgb(250,143,18)"/><text x="368.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.45%)</title><rect x="370" y="340" width="5" height="15" fill="rgb(214,15,35)"/><text x="373.00" y="350.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(240,9,46)"/><text x="376.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.22%)</title><rect x="375" y="356" width="3" height="15" fill="rgb(225,139,20)"/><text x="378.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.22%)</title><rect x="375" y="372" width="3" height="15" fill="rgb(214,145,20)"/><text x="378.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.45%)</title><rect x="375" y="324" width="6" height="15" fill="rgb(223,134,44)"/><text x="378.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.45%)</title><rect x="375" y="340" width="6" height="15" fill="rgb(227,85,17)"/><text x="378.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="378" y="356" width="3" height="15" fill="rgb(239,130,21)"/><text x="381.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:2986) (1 samples, 0.22%)</title><rect x="378" y="372" width="3" height="15" fill="rgb(233,125,12)"/><text x="381.00" y="382.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:540) (1 samples, 0.22%)</title><rect x="383" y="420" width="3" height="15" fill="rgb(207,214,50)"/><text x="386.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.45%)</title><rect x="383" y="356" width="6" height="15" fill="rgb(209,41,44)"/><text x="386.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.45%)</title><rect x="383" y="372" width="6" height="15" fill="rgb(234,194,13)"/><text x="386.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.45%)</title><rect x="383" y="388" width="6" height="15" fill="rgb(226,32,45)"/><text x="386.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (2 samples, 0.45%)</title><rect x="383" y="404" width="6" height="15" fill="rgb(236,41,5)"/><text x="386.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.22%)</title><rect x="386" y="420" width="3" height="15" fill="rgb(248,139,44)"/><text x="389.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.22%)</title><rect x="389" y="356" width="2" height="15" fill="rgb(251,117,3)"/><text x="392.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1325) (1 samples, 0.22%)</title><rect x="389" y="372" width="2" height="15" fill="rgb(215,186,37)"/><text x="392.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (11 samples, 2.47%)</title><rect x="365" y="308" width="29" height="15" fill="rgb(230,150,26)"/><text x="368.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.12%)</title><rect x="381" y="324" width="13" height="15" fill="rgb(218,213,8)"/><text x="384.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.90%)</title><rect x="383" y="340" width="11" height="15" fill="rgb(253,73,18)"/><text x="386.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="391" y="356" width="3" height="15" fill="rgb(233,86,21)"/><text x="394.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.22%)</title><rect x="391" y="372" width="3" height="15" fill="rgb(231,18,14)"/><text x="394.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.22%)</title><rect x="391" y="388" width="3" height="15" fill="rgb(212,108,32)"/><text x="394.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:155) (1 samples, 0.22%)</title><rect x="391" y="404" width="3" height="15" fill="rgb(232,222,22)"/><text x="394.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="399" y="340" width="3" height="15" fill="rgb(221,219,35)"/><text x="402.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="399" y="356" width="3" height="15" fill="rgb(227,80,27)"/><text x="402.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="399" y="372" width="3" height="15" fill="rgb(253,8,53)"/><text x="402.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.22%)</title><rect x="399" y="388" width="3" height="15" fill="rgb(208,28,13)"/><text x="402.00" y="398.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.22%)</title><rect x="402" y="420" width="3" height="15" fill="rgb(214,20,32)"/><text x="405.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.45%)</title><rect x="402" y="356" width="5" height="15" fill="rgb(243,95,1)"/><text x="405.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.45%)</title><rect x="402" y="372" width="5" height="15" fill="rgb(214,80,31)"/><text x="405.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.45%)</title><rect x="402" y="388" width="5" height="15" fill="rgb(227,62,0)"/><text x="405.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (2 samples, 0.45%)</title><rect x="402" y="404" width="5" height="15" fill="rgb(232,211,45)"/><text x="405.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.22%)</title><rect x="405" y="420" width="2" height="15" fill="rgb(246,64,27)"/><text x="408.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.22%)</title><rect x="405" y="436" width="2" height="15" fill="rgb(220,92,12)"/><text x="408.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.22%)</title><rect x="405" y="452" width="2" height="15" fill="rgb(215,29,0)"/><text x="408.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="407" y="356" width="3" height="15" fill="rgb(232,189,13)"/><text x="410.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="407" y="372" width="3" height="15" fill="rgb(207,20,47)"/><text x="410.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.22%)</title><rect x="407" y="388" width="3" height="15" fill="rgb(206,108,14)"/><text x="410.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1796) (1 samples, 0.22%)</title><rect x="407" y="404" width="3" height="15" fill="rgb(236,164,18)"/><text x="410.00" y="414.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.22%)</title><rect x="407" y="420" width="3" height="15" fill="rgb(250,20,7)"/><text x="410.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="410" y="388" width="3" height="15" fill="rgb(224,52,20)"/><text x="413.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="410" y="404" width="3" height="15" fill="rgb(213,15,54)"/><text x="413.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="410" y="420" width="3" height="15" fill="rgb(209,194,5)"/><text x="413.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.45%)</title><rect x="410" y="372" width="5" height="15" fill="rgb(254,182,36)"/><text x="413.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="413" y="388" width="2" height="15" fill="rgb(211,59,43)"/><text x="416.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="413" y="404" width="2" height="15" fill="rgb(229,215,14)"/><text x="416.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.22%)</title><rect x="413" y="420" width="2" height="15" fill="rgb(238,131,23)"/><text x="416.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.67%)</title><rect x="410" y="356" width="8" height="15" fill="rgb(240,112,50)"/><text x="413.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="415" y="372" width="3" height="15" fill="rgb(254,134,42)"/><text x="418.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.22%)</title><rect x="415" y="388" width="3" height="15" fill="rgb(225,53,15)"/><text x="418.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="415" y="404" width="3" height="15" fill="rgb(246,12,38)"/><text x="418.00" y="414.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (44 samples, 9.89%)</title><rect x="304" y="228" width="117" height="15" fill="rgb(236,1,28)"/><text x="307.00" y="238.50">array_implemen..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (43 samples, 9.66%)</title><rect x="306" y="244" width="115" height="15" fill="rgb(216,219,47)"/><text x="309.00" y="254.50">clip (numpy/co..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (37 samples, 8.31%)</title><rect x="322" y="260" width="99" height="15" fill="rgb(208,220,16)"/><text x="325.00" y="270.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c:2381) (37 samples, 8.31%)</title><rect x="322" y="276" width="99" height="15" fill="rgb(228,229,43)"/><text x="325.00" y="286.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c:108) (37 samples, 8.31%)</title><rect x="322" y="292" width="99" height="15" fill="rgb(242,149,54)"/><text x="325.00" y="302.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 2.25%)</title><rect x="394" y="308" width="27" height="15" fill="rgb(226,154,0)"/><text x="397.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 2.25%)</title><rect x="394" y="324" width="27" height="15" fill="rgb(207,170,9)"/><text x="397.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.57%)</title><rect x="402" y="340" width="19" height="15" fill="rgb(217,66,35)"/><text x="405.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.22%)</title><rect x="418" y="356" width="3" height="15" fill="rgb(225,31,5)"/><text x="421.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (54 samples, 12.13%)</title><rect x="280" y="180" width="143" height="15" fill="rgb(218,55,3)"/><text x="283.00" y="190.50">_forward_pass (skl..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (53 samples, 11.91%)</title><rect x="283" y="196" width="140" height="15" fill="rgb(213,22,23)"/><text x="286.00" y="206.50">relu (sklearn/neu..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (48 samples, 10.79%)</title><rect x="296" y="212" width="127" height="15" fill="rgb(208,103,3)"/><text x="299.00" y="222.50">clip (&lt;__array_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.22%)</title><rect x="421" y="228" width="2" height="15" fill="rgb(246,157,41)"/><text x="424.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:112) (2 samples, 0.45%)</title><rect x="423" y="180" width="5" height="15" fill="rgb(227,151,7)"/><text x="426.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="426" y="196" width="2" height="15" fill="rgb(245,160,15)"/><text x="429.00" y="206.50"></text></g><g><title>0x7f1dbd50bfd3 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="426" y="212" width="2" height="15" fill="rgb(235,126,41)"/><text x="429.00" y="222.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.22%)</title><rect x="434" y="292" width="2" height="15" fill="rgb(212,126,12)"/><text x="437.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.22%)</title><rect x="434" y="308" width="2" height="15" fill="rgb(239,13,45)"/><text x="437.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.22%)</title><rect x="434" y="324" width="2" height="15" fill="rgb(237,22,49)"/><text x="437.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.22%)</title><rect x="434" y="340" width="2" height="15" fill="rgb(246,176,4)"/><text x="437.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1401) (1 samples, 0.22%)</title><rect x="434" y="356" width="2" height="15" fill="rgb(205,87,5)"/><text x="437.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(243,199,30)"/><text x="439.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="436" y="324" width="3" height="15" fill="rgb(209,83,40)"/><text x="439.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.22%)</title><rect x="436" y="340" width="3" height="15" fill="rgb(211,148,8)"/><text x="439.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="436" y="356" width="3" height="15" fill="rgb(207,196,41)"/><text x="439.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.22%)</title><rect x="439" y="340" width="3" height="15" fill="rgb(227,44,15)"/><text x="442.00" y="350.50"></text></g><g><title>broadcast_strides (array_assign.c:49) (1 samples, 0.22%)</title><rect x="439" y="356" width="3" height="15" fill="rgb(205,175,12)"/><text x="442.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.22%)</title><rect x="442" y="356" width="2" height="15" fill="rgb(211,123,20)"/><text x="445.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.22%)</title><rect x="442" y="372" width="2" height="15" fill="rgb(252,202,28)"/><text x="445.00" y="382.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.22%)</title><rect x="442" y="388" width="2" height="15" fill="rgb(206,0,7)"/><text x="445.00" y="398.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.22%)</title><rect x="442" y="404" width="2" height="15" fill="rgb(213,72,12)"/><text x="445.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="444" y="372" width="3" height="15" fill="rgb(219,208,50)"/><text x="447.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (4 samples, 0.90%)</title><rect x="439" y="308" width="11" height="15" fill="rgb(224,26,36)"/><text x="442.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (4 samples, 0.90%)</title><rect x="439" y="324" width="11" height="15" fill="rgb(241,177,31)"/><text x="442.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.67%)</title><rect x="442" y="340" width="8" height="15" fill="rgb(230,103,6)"/><text x="445.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.45%)</title><rect x="444" y="356" width="6" height="15" fill="rgb(248,45,35)"/><text x="447.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="447" y="372" width="3" height="15" fill="rgb(243,96,34)"/><text x="450.00" y="382.50"></text></g><g><title>array_max (methods.c:323) (7 samples, 1.57%)</title><rect x="434" y="212" width="18" height="15" fill="rgb(223,204,5)"/><text x="437.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.57%)</title><rect x="434" y="228" width="18" height="15" fill="rgb(245,177,14)"/><text x="437.00" y="238.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (7 samples, 1.57%)</title><rect x="434" y="244" width="18" height="15" fill="rgb(210,209,36)"/><text x="437.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.57%)</title><rect x="434" y="260" width="18" height="15" fill="rgb(249,95,26)"/><text x="437.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.57%)</title><rect x="434" y="276" width="18" height="15" fill="rgb(254,124,47)"/><text x="437.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.35%)</title><rect x="436" y="292" width="16" height="15" fill="rgb(229,214,16)"/><text x="439.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="450" y="308" width="2" height="15" fill="rgb(236,173,37)"/><text x="453.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="450" y="324" width="2" height="15" fill="rgb(241,77,34)"/><text x="453.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.22%)</title><rect x="450" y="340" width="2" height="15" fill="rgb(218,167,36)"/><text x="453.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="452" y="244" width="3" height="15" fill="rgb(222,78,36)"/><text x="455.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.22%)</title><rect x="452" y="260" width="3" height="15" fill="rgb(206,65,7)"/><text x="455.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.22%)</title><rect x="452" y="276" width="3" height="15" fill="rgb(207,178,26)"/><text x="455.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(227,106,14)"/><text x="461.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1676) (1 samples, 0.22%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(228,62,16)"/><text x="461.00" y="318.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (13 samples, 2.92%)</title><rect x="428" y="196" width="35" height="15" fill="rgb(248,191,4)"/><text x="431.00" y="206.50">so..</text></g><g><title>array_subtract (number.c:342) (4 samples, 0.90%)</title><rect x="452" y="212" width="11" height="15" fill="rgb(212,7,28)"/><text x="455.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.90%)</title><rect x="452" y="228" width="11" height="15" fill="rgb(225,98,53)"/><text x="455.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.67%)</title><rect x="455" y="244" width="8" height="15" fill="rgb(208,210,6)"/><text x="458.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.45%)</title><rect x="458" y="260" width="5" height="15" fill="rgb(221,101,51)"/><text x="461.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.45%)</title><rect x="458" y="276" width="5" height="15" fill="rgb(218,139,27)"/><text x="461.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="460" y="292" width="3" height="15" fill="rgb(238,134,14)"/><text x="463.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.22%)</title><rect x="460" y="308" width="3" height="15" fill="rgb(254,74,1)"/><text x="463.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.22%)</title><rect x="460" y="324" width="3" height="15" fill="rgb(231,168,40)"/><text x="463.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="460" y="340" width="3" height="15" fill="rgb(209,78,9)"/><text x="463.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.22%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(213,17,31)"/><text x="463.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.22%)</title><rect x="460" y="372" width="3" height="15" fill="rgb(233,83,41)"/><text x="463.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.22%)</title><rect x="460" y="388" width="3" height="15" fill="rgb(206,160,41)"/><text x="463.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="460" y="404" width="3" height="15" fill="rgb(243,56,20)"/><text x="463.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="466" y="212" width="2" height="15" fill="rgb(211,33,43)"/><text x="469.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:581) (1 samples, 0.22%)</title><rect x="466" y="228" width="2" height="15" fill="rgb(239,43,29)"/><text x="469.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(240,34,25)"/><text x="471.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.22%)</title><rect x="468" y="244" width="3" height="15" fill="rgb(217,171,19)"/><text x="471.00" y="254.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.22%)</title><rect x="468" y="260" width="3" height="15" fill="rgb(237,130,20)"/><text x="471.00" y="270.50"></text></g><g><title>_borrowed_reference (ufunc_object.c:1022) (1 samples, 0.22%)</title><rect x="468" y="276" width="3" height="15" fill="rgb(254,142,20)"/><text x="471.00" y="286.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (4 samples, 0.90%)</title><rect x="463" y="196" width="11" height="15" fill="rgb(254,115,40)"/><text x="466.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.45%)</title><rect x="468" y="212" width="6" height="15" fill="rgb(252,183,46)"/><text x="471.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="471" y="228" width="3" height="15" fill="rgb(236,35,23)"/><text x="474.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="471" y="244" width="3" height="15" fill="rgb(234,42,27)"/><text x="474.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.22%)</title><rect x="471" y="260" width="3" height="15" fill="rgb(246,60,30)"/><text x="474.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.22%)</title><rect x="471" y="276" width="3" height="15" fill="rgb(209,55,3)"/><text x="474.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.22%)</title><rect x="479" y="260" width="2" height="15" fill="rgb(221,172,43)"/><text x="482.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="479" y="276" width="2" height="15" fill="rgb(225,161,8)"/><text x="482.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="479" y="292" width="2" height="15" fill="rgb(215,106,4)"/><text x="482.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="479" y="308" width="2" height="15" fill="rgb(231,96,23)"/><text x="482.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="479" y="324" width="2" height="15" fill="rgb(214,20,44)"/><text x="482.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="479" y="340" width="2" height="15" fill="rgb(235,59,26)"/><text x="482.00" y="350.50"></text></g><g><title>0x7f1dbd443e76 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="479" y="356" width="2" height="15" fill="rgb(245,4,5)"/><text x="482.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.22%)</title><rect x="481" y="276" width="3" height="15" fill="rgb(222,154,19)"/><text x="484.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.22%)</title><rect x="481" y="292" width="3" height="15" fill="rgb(217,40,45)"/><text x="484.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.22%)</title><rect x="484" y="292" width="3" height="15" fill="rgb(207,9,52)"/><text x="487.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.22%)</title><rect x="484" y="308" width="3" height="15" fill="rgb(205,226,8)"/><text x="487.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.22%)</title><rect x="484" y="324" width="3" height="15" fill="rgb(228,73,27)"/><text x="487.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.22%)</title><rect x="484" y="340" width="3" height="15" fill="rgb(245,114,43)"/><text x="487.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1788) (1 samples, 0.22%)</title><rect x="484" y="356" width="3" height="15" fill="rgb(232,49,30)"/><text x="487.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.22%)</title><rect x="487" y="308" width="2" height="15" fill="rgb(243,161,51)"/><text x="490.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.22%)</title><rect x="487" y="324" width="2" height="15" fill="rgb(248,175,47)"/><text x="490.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.22%)</title><rect x="487" y="340" width="2" height="15" fill="rgb(214,31,40)"/><text x="490.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="487" y="356" width="2" height="15" fill="rgb(213,122,4)"/><text x="490.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="487" y="372" width="2" height="15" fill="rgb(242,19,45)"/><text x="490.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="487" y="388" width="2" height="15" fill="rgb(215,75,7)"/><text x="490.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.22%)</title><rect x="487" y="404" width="2" height="15" fill="rgb(211,114,21)"/><text x="490.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.22%)</title><rect x="489" y="308" width="3" height="15" fill="rgb(227,207,43)"/><text x="492.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.22%)</title><rect x="489" y="324" width="3" height="15" fill="rgb(206,164,21)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.22%)</title><rect x="489" y="340" width="3" height="15" fill="rgb(214,82,5)"/><text x="492.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="492" y="308" width="3" height="15" fill="rgb(215,186,0)"/><text x="495.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="492" y="324" width="3" height="15" fill="rgb(218,148,7)"/><text x="495.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 1.57%)</title><rect x="479" y="212" width="18" height="15" fill="rgb(231,197,4)"/><text x="482.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 1.57%)</title><rect x="479" y="228" width="18" height="15" fill="rgb(220,154,35)"/><text x="482.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 1.57%)</title><rect x="479" y="244" width="18" height="15" fill="rgb(248,226,47)"/><text x="482.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.35%)</title><rect x="481" y="260" width="16" height="15" fill="rgb(229,169,7)"/><text x="484.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.12%)</title><rect x="484" y="276" width="13" height="15" fill="rgb(206,77,4)"/><text x="487.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.90%)</title><rect x="487" y="292" width="10" height="15" fill="rgb(235,54,45)"/><text x="490.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.22%)</title><rect x="495" y="308" width="2" height="15" fill="rgb(213,141,27)"/><text x="498.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3466) (1 samples, 0.22%)</title><rect x="495" y="324" width="2" height="15" fill="rgb(233,179,24)"/><text x="498.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="497" y="276" width="3" height="15" fill="rgb(249,91,22)"/><text x="500.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1678) (1 samples, 0.22%)</title><rect x="497" y="292" width="3" height="15" fill="rgb(244,199,19)"/><text x="500.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.22%)</title><rect x="497" y="308" width="3" height="15" fill="rgb(231,112,31)"/><text x="500.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.45%)</title><rect x="497" y="260" width="6" height="15" fill="rgb(227,85,50)"/><text x="500.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.22%)</title><rect x="500" y="276" width="3" height="15" fill="rgb(211,177,4)"/><text x="503.00" y="286.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2099) (1 samples, 0.22%)</title><rect x="500" y="292" width="3" height="15" fill="rgb(241,44,33)"/><text x="503.00" y="302.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (123 samples, 27.64%)</title><rect x="179" y="164" width="326" height="15" fill="rgb(224,119,6)"/><text x="182.00" y="174.50">_predict (sklearn/neural_network/_multilayer..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (29 samples, 6.52%)</title><rect x="428" y="180" width="77" height="15" fill="rgb(245,89,27)"/><text x="431.00" y="190.50">_forward..</text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (12 samples, 2.70%)</title><rect x="474" y="196" width="31" height="15" fill="rgb(237,156,36)"/><text x="477.00" y="206.50">so..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.67%)</title><rect x="497" y="212" width="8" height="15" fill="rgb(249,120,1)"/><text x="500.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.67%)</title><rect x="497" y="228" width="8" height="15" fill="rgb(208,227,4)"/><text x="500.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.67%)</title><rect x="497" y="244" width="8" height="15" fill="rgb(248,31,16)"/><text x="500.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.22%)</title><rect x="503" y="260" width="2" height="15" fill="rgb(215,94,13)"/><text x="506.00" y="270.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.22%)</title><rect x="503" y="276" width="2" height="15" fill="rgb(206,92,11)"/><text x="506.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:38) (188 samples, 42.25%)</title><rect x="10" y="52" width="498" height="15" fill="rgb(246,214,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:37) (188 samples, 42.25%)</title><rect x="10" y="68" width="498" height="15" fill="rgb(230,141,37)"/><text x="13.00" y="78.50">profile_skl (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:29) (188 samples, 42.25%)</title><rect x="10" y="84" width="498" height="15" fill="rgb(208,227,25)"/><text x="13.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:23) (186 samples, 41.80%)</title><rect x="15" y="100" width="493" height="15" fill="rgb(230,27,3)"/><text x="18.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (186 samples, 41.80%)</title><rect x="15" y="116" width="493" height="15" fill="rgb(230,56,7)"/><text x="18.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (185 samples, 41.57%)</title><rect x="17" y="132" width="491" height="15" fill="rgb(236,139,32)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (167 samples, 37.53%)</title><rect x="65" y="148" width="443" height="15" fill="rgb(205,90,34)"/><text x="68.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_perceptron..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:686) (1 samples, 0.22%)</title><rect x="505" y="164" width="3" height="15" fill="rgb(224,81,21)"/><text x="508.00" y="174.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.22%)</title><rect x="508" y="244" width="3" height="15" fill="rgb(219,60,38)"/><text x="511.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="508" y="260" width="3" height="15" fill="rgb(223,25,44)"/><text x="511.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="276" width="3" height="15" fill="rgb(235,148,42)"/><text x="511.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="508" y="292" width="3" height="15" fill="rgb(253,126,5)"/><text x="511.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="508" y="308" width="3" height="15" fill="rgb(245,83,45)"/><text x="511.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="508" y="324" width="3" height="15" fill="rgb(229,57,24)"/><text x="511.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="508" y="340" width="3" height="15" fill="rgb(210,169,52)"/><text x="511.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="356" width="3" height="15" fill="rgb(251,112,42)"/><text x="511.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.22%)</title><rect x="508" y="372" width="3" height="15" fill="rgb(213,47,21)"/><text x="511.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="508" y="388" width="3" height="15" fill="rgb(240,42,5)"/><text x="511.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="404" width="3" height="15" fill="rgb(230,145,2)"/><text x="511.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="508" y="420" width="3" height="15" fill="rgb(246,2,15)"/><text x="511.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="508" y="436" width="3" height="15" fill="rgb(237,11,9)"/><text x="511.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="508" y="452" width="3" height="15" fill="rgb(252,54,27)"/><text x="511.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="508" y="468" width="3" height="15" fill="rgb(225,215,3)"/><text x="511.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="484" width="3" height="15" fill="rgb(225,48,35)"/><text x="511.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.22%)</title><rect x="508" y="500" width="3" height="15" fill="rgb(244,91,36)"/><text x="511.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="508" y="516" width="3" height="15" fill="rgb(211,50,25)"/><text x="511.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="532" width="3" height="15" fill="rgb(209,34,27)"/><text x="511.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="508" y="548" width="3" height="15" fill="rgb(235,163,41)"/><text x="511.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="508" y="564" width="3" height="15" fill="rgb(206,32,32)"/><text x="511.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="508" y="580" width="3" height="15" fill="rgb(224,31,39)"/><text x="511.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="508" y="596" width="3" height="15" fill="rgb(250,9,7)"/><text x="511.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="612" width="3" height="15" fill="rgb(230,6,17)"/><text x="511.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.22%)</title><rect x="508" y="628" width="3" height="15" fill="rgb(253,205,12)"/><text x="511.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="508" y="644" width="3" height="15" fill="rgb(222,137,53)"/><text x="511.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="508" y="660" width="3" height="15" fill="rgb(206,74,22)"/><text x="511.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="508" y="676" width="3" height="15" fill="rgb(249,170,27)"/><text x="511.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.22%)</title><rect x="508" y="692" width="3" height="15" fill="rgb(220,207,50)"/><text x="511.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.22%)</title><rect x="508" y="708" width="3" height="15" fill="rgb(239,0,43)"/><text x="511.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="508" y="724" width="3" height="15" fill="rgb(248,35,29)"/><text x="511.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c:4749) (1 samples, 0.22%)</title><rect x="508" y="740" width="3" height="15" fill="rgb(252,85,3)"/><text x="511.00" y="750.50"></text></g><g><title>typeinfo_init_structsequences (typeinfo.c:124) (1 samples, 0.22%)</title><rect x="508" y="756" width="3" height="15" fill="rgb(215,151,44)"/><text x="511.00" y="766.50"></text></g><g><title>0x7f1dbd443e50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="508" y="772" width="3" height="15" fill="rgb(224,225,0)"/><text x="511.00" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.22%)</title><rect x="511" y="244" width="2" height="15" fill="rgb(212,141,23)"/><text x="514.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="511" y="260" width="2" height="15" fill="rgb(246,114,32)"/><text x="514.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="276" width="2" height="15" fill="rgb(227,32,34)"/><text x="514.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="292" width="2" height="15" fill="rgb(240,103,38)"/><text x="514.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="308" width="2" height="15" fill="rgb(223,162,23)"/><text x="514.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="324" width="2" height="15" fill="rgb(215,15,8)"/><text x="514.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(239,217,30)"/><text x="514.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="356" width="2" height="15" fill="rgb(228,177,26)"/><text x="514.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.22%)</title><rect x="511" y="372" width="2" height="15" fill="rgb(219,90,13)"/><text x="514.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="511" y="388" width="2" height="15" fill="rgb(211,136,50)"/><text x="514.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="404" width="2" height="15" fill="rgb(232,143,10)"/><text x="514.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="420" width="2" height="15" fill="rgb(243,218,13)"/><text x="514.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="436" width="2" height="15" fill="rgb(253,193,31)"/><text x="514.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="452" width="2" height="15" fill="rgb(251,138,2)"/><text x="514.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="511" y="468" width="2" height="15" fill="rgb(229,211,54)"/><text x="514.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="484" width="2" height="15" fill="rgb(247,55,41)"/><text x="514.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.22%)</title><rect x="511" y="500" width="2" height="15" fill="rgb(253,28,47)"/><text x="514.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="516" width="2" height="15" fill="rgb(213,5,10)"/><text x="514.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="532" width="2" height="15" fill="rgb(218,103,28)"/><text x="514.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="548" width="2" height="15" fill="rgb(213,135,13)"/><text x="514.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="511" y="564" width="2" height="15" fill="rgb(242,221,15)"/><text x="514.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="580" width="2" height="15" fill="rgb(221,94,1)"/><text x="514.00" y="590.50"></text></g><g><title>0x7f1dafcf4585 (?) (1 samples, 0.22%)</title><rect x="511" y="596" width="2" height="15" fill="rgb(230,107,35)"/><text x="514.00" y="606.50"></text></g><g><title>0x7f1dafcfa075 (?) (1 samples, 0.22%)</title><rect x="511" y="612" width="2" height="15" fill="rgb(212,106,32)"/><text x="514.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="628" width="2" height="15" fill="rgb(206,45,28)"/><text x="514.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="644" width="2" height="15" fill="rgb(235,99,15)"/><text x="514.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="660" width="2" height="15" fill="rgb(213,64,8)"/><text x="514.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="511" y="676" width="2" height="15" fill="rgb(237,45,13)"/><text x="514.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="692" width="2" height="15" fill="rgb(233,30,13)"/><text x="514.00" y="702.50"></text></g><g><title>0x7f1daf631543 (?) (1 samples, 0.22%)</title><rect x="511" y="708" width="2" height="15" fill="rgb(213,215,10)"/><text x="514.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="724" width="2" height="15" fill="rgb(229,51,39)"/><text x="514.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="740" width="2" height="15" fill="rgb(210,228,25)"/><text x="514.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="756" width="2" height="15" fill="rgb(250,173,51)"/><text x="514.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.22%)</title><rect x="511" y="772" width="2" height="15" fill="rgb(210,70,44)"/><text x="514.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="788" width="2" height="15" fill="rgb(223,82,16)"/><text x="514.00" y="798.50"></text></g><g><title>0x7f1daf406b9c (?) (1 samples, 0.22%)</title><rect x="511" y="804" width="2" height="15" fill="rgb(240,175,45)"/><text x="514.00" y="814.50"></text></g><g><title>0x7f1daf40a885 (?) (1 samples, 0.22%)</title><rect x="511" y="820" width="2" height="15" fill="rgb(250,194,34)"/><text x="514.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="836" width="2" height="15" fill="rgb(224,222,4)"/><text x="514.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="852" width="2" height="15" fill="rgb(215,44,50)"/><text x="514.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="868" width="2" height="15" fill="rgb(247,146,19)"/><text x="514.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="511" y="884" width="2" height="15" fill="rgb(253,197,17)"/><text x="514.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="900" width="2" height="15" fill="rgb(214,115,21)"/><text x="514.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.22%)</title><rect x="511" y="916" width="2" height="15" fill="rgb(230,39,34)"/><text x="514.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="932" width="2" height="15" fill="rgb(210,155,4)"/><text x="514.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="948" width="2" height="15" fill="rgb(246,107,39)"/><text x="514.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="964" width="2" height="15" fill="rgb(254,146,47)"/><text x="514.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="511" y="980" width="2" height="15" fill="rgb(237,3,7)"/><text x="514.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="996" width="2" height="15" fill="rgb(244,199,37)"/><text x="514.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py:15) (1 samples, 0.22%)</title><rect x="511" y="1012" width="2" height="15" fill="rgb(235,164,36)"/><text x="514.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="1028" width="2" height="15" fill="rgb(212,48,7)"/><text x="514.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="1044" width="2" height="15" fill="rgb(254,119,37)"/><text x="514.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="511" y="1060" width="2" height="15" fill="rgb(230,40,24)"/><text x="514.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="511" y="1076" width="2" height="15" fill="rgb(232,110,27)"/><text x="514.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="1092" width="2" height="15" fill="rgb(232,113,32)"/><text x="514.00" y="1102.50"></text></g><g><title>&lt;module&gt; (hashlib.py:244) (1 samples, 0.22%)</title><rect x="511" y="1108" width="2" height="15" fill="rgb(205,154,16)"/><text x="514.00" y="1118.50"></text></g><g><title>__get_openssl_constructor (hashlib.py:128) (1 samples, 0.22%)</title><rect x="511" y="1124" width="2" height="15" fill="rgb(223,153,50)"/><text x="514.00" y="1134.50"></text></g><g><title>__get_builtin_constructor (hashlib.py:99) (1 samples, 0.22%)</title><rect x="511" y="1140" width="2" height="15" fill="rgb(226,14,27)"/><text x="514.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="511" y="1156" width="2" height="15" fill="rgb(206,159,25)"/><text x="514.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="511" y="1172" width="2" height="15" fill="rgb(211,4,33)"/><text x="514.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="511" y="1188" width="2" height="15" fill="rgb(243,95,27)"/><text x="514.00" y="1198.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.22%)</title><rect x="511" y="1204" width="2" height="15" fill="rgb(223,33,39)"/><text x="514.00" y="1214.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.22%)</title><rect x="511" y="1220" width="2" height="15" fill="rgb(234,209,7)"/><text x="514.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="511" y="1236" width="2" height="15" fill="rgb(212,7,8)"/><text x="514.00" y="1246.50"></text></g><g><title>0x7f1dae81cb9d (?) (1 samples, 0.22%)</title><rect x="511" y="1252" width="2" height="15" fill="rgb(225,62,27)"/><text x="514.00" y="1262.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:1) (3 samples, 0.67%)</title><rect x="508" y="148" width="8" height="15" fill="rgb(248,193,43)"/><text x="511.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="508" y="164" width="8" height="15" fill="rgb(212,210,32)"/><text x="511.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="508" y="180" width="8" height="15" fill="rgb(231,136,52)"/><text x="511.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="508" y="196" width="8" height="15" fill="rgb(237,95,28)"/><text x="511.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="508" y="212" width="8" height="15" fill="rgb(223,228,33)"/><text x="511.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="508" y="228" width="8" height="15" fill="rgb(241,73,36)"/><text x="511.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (1 samples, 0.22%)</title><rect x="513" y="244" width="3" height="15" fill="rgb(233,104,44)"/><text x="516.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="513" y="260" width="3" height="15" fill="rgb(212,11,22)"/><text x="516.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="513" y="276" width="3" height="15" fill="rgb(228,229,36)"/><text x="516.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="513" y="292" width="3" height="15" fill="rgb(243,7,53)"/><text x="516.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="513" y="308" width="3" height="15" fill="rgb(223,20,49)"/><text x="516.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="513" y="324" width="3" height="15" fill="rgb(234,215,14)"/><text x="516.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(240,3,24)"/><text x="516.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(212,3,32)"/><text x="516.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py:44) (1 samples, 0.22%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(223,151,26)"/><text x="516.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="513" y="388" width="3" height="15" fill="rgb(242,9,11)"/><text x="516.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="513" y="404" width="3" height="15" fill="rgb(207,92,35)"/><text x="516.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="513" y="420" width="3" height="15" fill="rgb(229,185,11)"/><text x="516.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="513" y="436" width="3" height="15" fill="rgb(215,129,21)"/><text x="516.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="513" y="452" width="3" height="15" fill="rgb(253,18,19)"/><text x="516.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="513" y="468" width="3" height="15" fill="rgb(252,89,17)"/><text x="516.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="513" y="484" width="3" height="15" fill="rgb(253,63,36)"/><text x="516.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py:6306) (1 samples, 0.22%)</title><rect x="513" y="500" width="3" height="15" fill="rgb(252,138,20)"/><text x="516.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.22%)</title><rect x="516" y="852" width="3" height="15" fill="rgb(220,174,7)"/><text x="519.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.22%)</title><rect x="516" y="868" width="3" height="15" fill="rgb(242,229,40)"/><text x="519.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.22%)</title><rect x="516" y="884" width="3" height="15" fill="rgb(210,117,22)"/><text x="519.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.22%)</title><rect x="516" y="900" width="3" height="15" fill="rgb(210,209,37)"/><text x="519.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.22%)</title><rect x="516" y="916" width="3" height="15" fill="rgb(233,90,20)"/><text x="519.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.22%)</title><rect x="516" y="932" width="3" height="15" fill="rgb(234,144,7)"/><text x="519.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.22%)</title><rect x="516" y="948" width="3" height="15" fill="rgb(228,33,46)"/><text x="519.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.22%)</title><rect x="516" y="964" width="3" height="15" fill="rgb(208,196,13)"/><text x="519.00" y="974.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.22%)</title><rect x="519" y="916" width="2" height="15" fill="rgb(241,107,41)"/><text x="522.00" y="926.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.22%)</title><rect x="519" y="932" width="2" height="15" fill="rgb(236,167,36)"/><text x="522.00" y="942.50"></text></g><g><title>_splitext (genericpath.py:129) (1 samples, 0.22%)</title><rect x="519" y="948" width="2" height="15" fill="rgb(244,5,25)"/><text x="522.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.22%)</title><rect x="519" y="964" width="2" height="15" fill="rgb(253,156,50)"/><text x="522.00" y="974.50"></text></g><g><title>0x7f1dbd43e6de (libc-2.29.so) (1 samples, 0.22%)</title><rect x="519" y="980" width="2" height="15" fill="rgb(206,136,13)"/><text x="522.00" y="990.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.22%)</title><rect x="521" y="980" width="3" height="15" fill="rgb(230,0,1)"/><text x="524.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:2) (4 samples, 0.90%)</title><rect x="516" y="148" width="11" height="15" fill="rgb(231,79,42)"/><text x="519.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="164" width="11" height="15" fill="rgb(244,116,17)"/><text x="519.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.90%)</title><rect x="516" y="180" width="11" height="15" fill="rgb(250,147,32)"/><text x="519.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="196" width="11" height="15" fill="rgb(227,193,39)"/><text x="519.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="212" width="11" height="15" fill="rgb(225,218,8)"/><text x="519.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="228" width="11" height="15" fill="rgb(237,147,12)"/><text x="519.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="244" width="11" height="15" fill="rgb(207,85,36)"/><text x="519.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="260" width="11" height="15" fill="rgb(211,197,33)"/><text x="519.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="276" width="11" height="15" fill="rgb(217,210,14)"/><text x="519.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.90%)</title><rect x="516" y="292" width="11" height="15" fill="rgb(207,93,51)"/><text x="519.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="308" width="11" height="15" fill="rgb(223,30,41)"/><text x="519.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="324" width="11" height="15" fill="rgb(232,104,32)"/><text x="519.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="340" width="11" height="15" fill="rgb(214,134,22)"/><text x="519.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="356" width="11" height="15" fill="rgb(214,30,48)"/><text x="519.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="372" width="11" height="15" fill="rgb(219,35,21)"/><text x="519.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.90%)</title><rect x="516" y="388" width="11" height="15" fill="rgb(225,223,37)"/><text x="519.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="404" width="11" height="15" fill="rgb(209,174,3)"/><text x="519.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="420" width="11" height="15" fill="rgb(219,49,32)"/><text x="519.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="436" width="11" height="15" fill="rgb(234,110,31)"/><text x="519.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="452" width="11" height="15" fill="rgb(242,199,38)"/><text x="519.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="468" width="11" height="15" fill="rgb(252,114,19)"/><text x="519.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.90%)</title><rect x="516" y="484" width="11" height="15" fill="rgb(218,26,18)"/><text x="519.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="500" width="11" height="15" fill="rgb(253,57,6)"/><text x="519.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="516" width="11" height="15" fill="rgb(219,145,20)"/><text x="519.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="532" width="11" height="15" fill="rgb(227,63,29)"/><text x="519.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="548" width="11" height="15" fill="rgb(245,160,8)"/><text x="519.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="564" width="11" height="15" fill="rgb(205,202,5)"/><text x="519.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.90%)</title><rect x="516" y="580" width="11" height="15" fill="rgb(212,144,40)"/><text x="519.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="596" width="11" height="15" fill="rgb(229,210,5)"/><text x="519.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.90%)</title><rect x="516" y="612" width="11" height="15" fill="rgb(230,206,41)"/><text x="519.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="628" width="11" height="15" fill="rgb(215,108,36)"/><text x="519.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="644" width="11" height="15" fill="rgb(213,117,5)"/><text x="519.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="660" width="11" height="15" fill="rgb(215,209,33)"/><text x="519.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="676" width="11" height="15" fill="rgb(241,44,46)"/><text x="519.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="692" width="11" height="15" fill="rgb(214,39,8)"/><text x="519.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="708" width="11" height="15" fill="rgb(212,213,27)"/><text x="519.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.90%)</title><rect x="516" y="724" width="11" height="15" fill="rgb(208,195,25)"/><text x="519.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.90%)</title><rect x="516" y="740" width="11" height="15" fill="rgb(240,76,32)"/><text x="519.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.90%)</title><rect x="516" y="756" width="11" height="15" fill="rgb(251,202,42)"/><text x="519.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.90%)</title><rect x="516" y="772" width="11" height="15" fill="rgb(210,84,28)"/><text x="519.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.90%)</title><rect x="516" y="788" width="11" height="15" fill="rgb(248,91,37)"/><text x="519.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.90%)</title><rect x="516" y="804" width="11" height="15" fill="rgb(221,65,5)"/><text x="519.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.90%)</title><rect x="516" y="820" width="11" height="15" fill="rgb(211,129,38)"/><text x="519.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.90%)</title><rect x="516" y="836" width="11" height="15" fill="rgb(210,218,51)"/><text x="519.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.67%)</title><rect x="519" y="852" width="8" height="15" fill="rgb(242,72,13)"/><text x="522.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.67%)</title><rect x="519" y="868" width="8" height="15" fill="rgb(232,116,50)"/><text x="522.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.67%)</title><rect x="519" y="884" width="8" height="15" fill="rgb(205,216,43)"/><text x="522.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.67%)</title><rect x="519" y="900" width="8" height="15" fill="rgb(211,72,23)"/><text x="522.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.45%)</title><rect x="521" y="916" width="6" height="15" fill="rgb(251,28,39)"/><text x="524.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.45%)</title><rect x="521" y="932" width="6" height="15" fill="rgb(248,154,52)"/><text x="524.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.45%)</title><rect x="521" y="948" width="6" height="15" fill="rgb(229,178,23)"/><text x="524.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (2 samples, 0.45%)</title><rect x="521" y="964" width="6" height="15" fill="rgb(242,110,46)"/><text x="524.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:379) (1 samples, 0.22%)</title><rect x="524" y="980" width="3" height="15" fill="rgb(210,158,5)"/><text x="527.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:4) (1 samples, 0.22%)</title><rect x="527" y="148" width="2" height="15" fill="rgb(234,136,11)"/><text x="530.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="164" width="2" height="15" fill="rgb(234,64,24)"/><text x="530.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="527" y="180" width="2" height="15" fill="rgb(218,63,51)"/><text x="530.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="196" width="2" height="15" fill="rgb(225,175,19)"/><text x="530.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="212" width="2" height="15" fill="rgb(244,152,27)"/><text x="530.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="228" width="2" height="15" fill="rgb(213,127,46)"/><text x="530.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="244" width="2" height="15" fill="rgb(223,39,6)"/><text x="530.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="260" width="2" height="15" fill="rgb(233,178,28)"/><text x="530.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="276" width="2" height="15" fill="rgb(252,223,15)"/><text x="530.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.22%)</title><rect x="527" y="292" width="2" height="15" fill="rgb(214,102,13)"/><text x="530.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="308" width="2" height="15" fill="rgb(247,182,18)"/><text x="530.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="324" width="2" height="15" fill="rgb(249,81,47)"/><text x="530.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="340" width="2" height="15" fill="rgb(251,140,36)"/><text x="530.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="356" width="2" height="15" fill="rgb(218,163,6)"/><text x="530.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="372" width="2" height="15" fill="rgb(205,93,52)"/><text x="530.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.22%)</title><rect x="527" y="388" width="2" height="15" fill="rgb(221,1,51)"/><text x="530.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="404" width="2" height="15" fill="rgb(234,16,36)"/><text x="530.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="420" width="2" height="15" fill="rgb(222,158,14)"/><text x="530.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="436" width="2" height="15" fill="rgb(207,87,1)"/><text x="530.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="452" width="2" height="15" fill="rgb(212,86,13)"/><text x="530.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="468" width="2" height="15" fill="rgb(210,13,13)"/><text x="530.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.22%)</title><rect x="527" y="484" width="2" height="15" fill="rgb(229,144,1)"/><text x="530.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="500" width="2" height="15" fill="rgb(250,60,50)"/><text x="530.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="516" width="2" height="15" fill="rgb(242,107,13)"/><text x="530.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="532" width="2" height="15" fill="rgb(225,115,46)"/><text x="530.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="548" width="2" height="15" fill="rgb(239,129,27)"/><text x="530.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="564" width="2" height="15" fill="rgb(233,77,27)"/><text x="530.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.22%)</title><rect x="527" y="580" width="2" height="15" fill="rgb(254,14,25)"/><text x="530.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="596" width="2" height="15" fill="rgb(232,120,47)"/><text x="530.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="612" width="2" height="15" fill="rgb(216,227,9)"/><text x="530.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="628" width="2" height="15" fill="rgb(253,7,4)"/><text x="530.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="644" width="2" height="15" fill="rgb(221,174,23)"/><text x="530.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="660" width="2" height="15" fill="rgb(206,13,34)"/><text x="530.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.22%)</title><rect x="527" y="676" width="2" height="15" fill="rgb(220,20,21)"/><text x="530.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="692" width="2" height="15" fill="rgb(238,102,20)"/><text x="530.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="708" width="2" height="15" fill="rgb(235,172,12)"/><text x="530.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="724" width="2" height="15" fill="rgb(212,196,12)"/><text x="530.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="740" width="2" height="15" fill="rgb(226,197,54)"/><text x="530.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="756" width="2" height="15" fill="rgb(239,161,39)"/><text x="530.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.22%)</title><rect x="527" y="772" width="2" height="15" fill="rgb(249,165,13)"/><text x="530.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="527" y="788" width="2" height="15" fill="rgb(229,54,14)"/><text x="530.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="804" width="2" height="15" fill="rgb(205,31,10)"/><text x="530.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="820" width="2" height="15" fill="rgb(215,58,20)"/><text x="530.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="836" width="2" height="15" fill="rgb(233,209,37)"/><text x="530.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="852" width="2" height="15" fill="rgb(241,24,52)"/><text x="530.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="868" width="2" height="15" fill="rgb(221,38,9)"/><text x="530.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="884" width="2" height="15" fill="rgb(236,119,15)"/><text x="530.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.22%)</title><rect x="527" y="900" width="2" height="15" fill="rgb(249,163,7)"/><text x="530.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="527" y="916" width="2" height="15" fill="rgb(248,181,8)"/><text x="530.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="932" width="2" height="15" fill="rgb(213,229,23)"/><text x="530.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="527" y="948" width="2" height="15" fill="rgb(246,52,48)"/><text x="530.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="527" y="964" width="2" height="15" fill="rgb(213,210,49)"/><text x="530.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="527" y="980" width="2" height="15" fill="rgb(217,143,9)"/><text x="530.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="527" y="996" width="2" height="15" fill="rgb(246,105,7)"/><text x="530.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="527" y="1012" width="2" height="15" fill="rgb(250,83,26)"/><text x="530.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4537) (1 samples, 0.22%)</title><rect x="527" y="1028" width="2" height="15" fill="rgb(213,224,12)"/><text x="530.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.22%)</title><rect x="527" y="1044" width="2" height="15" fill="rgb(224,127,32)"/><text x="530.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.22%)</title><rect x="527" y="1060" width="2" height="15" fill="rgb(241,185,8)"/><text x="530.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.22%)</title><rect x="527" y="1076" width="2" height="15" fill="rgb(217,177,37)"/><text x="530.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.22%)</title><rect x="527" y="1092" width="2" height="15" fill="rgb(213,224,28)"/><text x="530.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.22%)</title><rect x="529" y="244" width="3" height="15" fill="rgb(215,224,29)"/><text x="532.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="260" width="3" height="15" fill="rgb(225,90,10)"/><text x="532.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="276" width="3" height="15" fill="rgb(243,85,5)"/><text x="532.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="292" width="3" height="15" fill="rgb(208,104,1)"/><text x="532.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="308" width="3" height="15" fill="rgb(214,114,54)"/><text x="532.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="324" width="3" height="15" fill="rgb(205,63,51)"/><text x="532.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.22%)</title><rect x="529" y="340" width="3" height="15" fill="rgb(221,46,38)"/><text x="532.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="356" width="3" height="15" fill="rgb(217,225,31)"/><text x="532.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="529" y="372" width="3" height="15" fill="rgb(215,196,16)"/><text x="532.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="388" width="3" height="15" fill="rgb(213,134,39)"/><text x="532.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="404" width="3" height="15" fill="rgb(229,213,15)"/><text x="532.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="420" width="3" height="15" fill="rgb(218,53,19)"/><text x="532.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="436" width="3" height="15" fill="rgb(212,213,12)"/><text x="532.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="452" width="3" height="15" fill="rgb(225,13,9)"/><text x="532.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="468" width="3" height="15" fill="rgb(224,145,24)"/><text x="532.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.22%)</title><rect x="529" y="484" width="3" height="15" fill="rgb(231,60,9)"/><text x="532.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="500" width="3" height="15" fill="rgb(207,158,16)"/><text x="532.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="516" width="3" height="15" fill="rgb(228,93,2)"/><text x="532.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="532" width="3" height="15" fill="rgb(222,187,21)"/><text x="532.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="548" width="3" height="15" fill="rgb(224,121,19)"/><text x="532.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="564" width="3" height="15" fill="rgb(233,213,37)"/><text x="532.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.22%)</title><rect x="529" y="580" width="3" height="15" fill="rgb(218,192,9)"/><text x="532.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="596" width="3" height="15" fill="rgb(238,180,38)"/><text x="532.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="529" y="612" width="3" height="15" fill="rgb(240,225,7)"/><text x="532.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="628" width="3" height="15" fill="rgb(235,101,26)"/><text x="532.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="644" width="3" height="15" fill="rgb(225,124,43)"/><text x="532.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="660" width="3" height="15" fill="rgb(225,197,9)"/><text x="532.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="676" width="3" height="15" fill="rgb(235,119,24)"/><text x="532.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="692" width="3" height="15" fill="rgb(238,28,47)"/><text x="532.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="708" width="3" height="15" fill="rgb(248,73,6)"/><text x="532.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.22%)</title><rect x="529" y="724" width="3" height="15" fill="rgb(216,73,24)"/><text x="532.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="740" width="3" height="15" fill="rgb(229,115,27)"/><text x="532.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="756" width="3" height="15" fill="rgb(246,24,29)"/><text x="532.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="772" width="3" height="15" fill="rgb(229,36,53)"/><text x="532.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="788" width="3" height="15" fill="rgb(247,53,43)"/><text x="532.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="804" width="3" height="15" fill="rgb(229,156,19)"/><text x="532.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.22%)</title><rect x="529" y="820" width="3" height="15" fill="rgb(218,93,45)"/><text x="532.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="836" width="3" height="15" fill="rgb(253,64,43)"/><text x="532.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="852" width="3" height="15" fill="rgb(205,163,6)"/><text x="532.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="868" width="3" height="15" fill="rgb(206,166,6)"/><text x="532.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="884" width="3" height="15" fill="rgb(251,170,6)"/><text x="532.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="900" width="3" height="15" fill="rgb(227,180,5)"/><text x="532.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.22%)</title><rect x="529" y="916" width="3" height="15" fill="rgb(245,101,3)"/><text x="532.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="932" width="3" height="15" fill="rgb(250,99,14)"/><text x="532.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="529" y="948" width="3" height="15" fill="rgb(237,47,33)"/><text x="532.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="964" width="3" height="15" fill="rgb(211,180,11)"/><text x="532.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="980" width="3" height="15" fill="rgb(254,199,48)"/><text x="532.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="996" width="3" height="15" fill="rgb(216,219,34)"/><text x="532.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="1012" width="3" height="15" fill="rgb(228,55,7)"/><text x="532.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="529" y="1028" width="3" height="15" fill="rgb(251,195,3)"/><text x="532.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="529" y="1044" width="3" height="15" fill="rgb(252,119,28)"/><text x="532.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.22%)</title><rect x="529" y="1060" width="3" height="15" fill="rgb(248,71,34)"/><text x="532.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="529" y="1076" width="3" height="15" fill="rgb(231,109,52)"/><text x="532.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="529" y="1092" width="3" height="15" fill="rgb(246,65,16)"/><text x="532.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="529" y="1108" width="3" height="15" fill="rgb(219,210,40)"/><text x="532.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="529" y="1124" width="3" height="15" fill="rgb(251,186,1)"/><text x="532.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.22%)</title><rect x="529" y="1140" width="3" height="15" fill="rgb(215,96,0)"/><text x="532.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.22%)</title><rect x="529" y="1156" width="3" height="15" fill="rgb(214,53,37)"/><text x="532.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.22%)</title><rect x="532" y="628" width="3" height="15" fill="rgb(214,216,20)"/><text x="535.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="532" y="644" width="3" height="15" fill="rgb(250,147,8)"/><text x="535.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="532" y="660" width="3" height="15" fill="rgb(218,74,5)"/><text x="535.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="532" y="676" width="3" height="15" fill="rgb(238,157,52)"/><text x="535.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="532" y="692" width="3" height="15" fill="rgb(210,73,15)"/><text x="535.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="532" y="708" width="3" height="15" fill="rgb(245,62,20)"/><text x="535.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.22%)</title><rect x="532" y="724" width="3" height="15" fill="rgb(218,34,17)"/><text x="535.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="532" y="740" width="3" height="15" fill="rgb(226,203,26)"/><text x="535.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="532" y="756" width="3" height="15" fill="rgb(225,29,32)"/><text x="535.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="532" y="772" width="3" height="15" fill="rgb(211,171,15)"/><text x="535.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="532" y="788" width="3" height="15" fill="rgb(245,151,53)"/><text x="535.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="532" y="804" width="3" height="15" fill="rgb(211,6,11)"/><text x="535.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.22%)</title><rect x="532" y="820" width="3" height="15" fill="rgb(224,175,52)"/><text x="535.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="532" y="836" width="3" height="15" fill="rgb(246,118,38)"/><text x="535.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="532" y="852" width="3" height="15" fill="rgb(207,219,15)"/><text x="535.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.22%)</title><rect x="532" y="868" width="3" height="15" fill="rgb(219,185,9)"/><text x="535.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.22%)</title><rect x="532" y="884" width="3" height="15" fill="rgb(214,195,48)"/><text x="535.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.22%)</title><rect x="532" y="900" width="3" height="15" fill="rgb(209,131,9)"/><text x="535.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="532" y="916" width="3" height="15" fill="rgb(251,94,27)"/><text x="535.00" y="926.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="932" width="3" height="15" fill="rgb(219,86,33)"/><text x="535.00" y="942.50"></text></g><g><title>0x7f1dbd6b5995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="948" width="3" height="15" fill="rgb(210,64,18)"/><text x="535.00" y="958.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="964" width="3" height="15" fill="rgb(246,30,1)"/><text x="535.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="980" width="3" height="15" fill="rgb(210,171,27)"/><text x="535.00" y="990.50"></text></g><g><title>0x7f1dbd6b5258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="996" width="3" height="15" fill="rgb(228,161,49)"/><text x="535.00" y="1006.50"></text></g><g><title>0x7f1dbd702d7a (ld-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1012" width="3" height="15" fill="rgb(225,164,21)"/><text x="535.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1028" width="3" height="15" fill="rgb(237,173,22)"/><text x="535.00" y="1038.50"></text></g><g><title>0x7f1dbd70318b (ld-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1044" width="3" height="15" fill="rgb(231,175,19)"/><text x="535.00" y="1054.50"></text></g><g><title>0x7f1dbd6f8bcb (ld-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1060" width="3" height="15" fill="rgb(243,95,13)"/><text x="535.00" y="1070.50"></text></g><g><title>0x7f1dbd6f71fb (ld-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1076" width="3" height="15" fill="rgb(213,41,48)"/><text x="535.00" y="1086.50"></text></g><g><title>0x7f1dbd70aac4 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="532" y="1092" width="3" height="15" fill="rgb(221,156,31)"/><text x="535.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.45%)</title><rect x="532" y="436" width="5" height="15" fill="rgb(223,94,7)"/><text x="535.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="532" y="452" width="5" height="15" fill="rgb(211,86,29)"/><text x="535.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="532" y="468" width="5" height="15" fill="rgb(235,208,18)"/><text x="535.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="532" y="484" width="5" height="15" fill="rgb(245,213,54)"/><text x="535.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="532" y="500" width="5" height="15" fill="rgb(211,130,0)"/><text x="535.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="532" y="516" width="5" height="15" fill="rgb(254,87,22)"/><text x="535.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.45%)</title><rect x="532" y="532" width="5" height="15" fill="rgb(211,39,0)"/><text x="535.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="532" y="548" width="5" height="15" fill="rgb(226,80,45)"/><text x="535.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="532" y="564" width="5" height="15" fill="rgb(215,45,54)"/><text x="535.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="532" y="580" width="5" height="15" fill="rgb(240,0,12)"/><text x="535.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="532" y="596" width="5" height="15" fill="rgb(213,23,30)"/><text x="535.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="532" y="612" width="5" height="15" fill="rgb(215,204,15)"/><text x="535.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.22%)</title><rect x="535" y="628" width="2" height="15" fill="rgb(241,166,47)"/><text x="538.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="535" y="644" width="2" height="15" fill="rgb(252,30,26)"/><text x="538.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="535" y="660" width="2" height="15" fill="rgb(241,86,43)"/><text x="538.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="535" y="676" width="2" height="15" fill="rgb(233,178,22)"/><text x="538.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="535" y="692" width="2" height="15" fill="rgb(207,39,32)"/><text x="538.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="535" y="708" width="2" height="15" fill="rgb(224,114,45)"/><text x="538.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.22%)</title><rect x="535" y="724" width="2" height="15" fill="rgb(213,150,47)"/><text x="538.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="535" y="740" width="2" height="15" fill="rgb(226,115,51)"/><text x="538.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="535" y="756" width="2" height="15" fill="rgb(233,128,11)"/><text x="538.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="535" y="772" width="2" height="15" fill="rgb(241,152,11)"/><text x="538.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="535" y="788" width="2" height="15" fill="rgb(225,107,20)"/><text x="538.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="535" y="804" width="2" height="15" fill="rgb(220,39,2)"/><text x="538.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.22%)</title><rect x="535" y="820" width="2" height="15" fill="rgb(225,212,3)"/><text x="538.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="535" y="836" width="2" height="15" fill="rgb(234,73,40)"/><text x="538.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="535" y="852" width="2" height="15" fill="rgb(237,139,43)"/><text x="538.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="535" y="868" width="2" height="15" fill="rgb(245,41,33)"/><text x="538.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="535" y="884" width="2" height="15" fill="rgb(236,180,41)"/><text x="538.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="535" y="900" width="2" height="15" fill="rgb(252,222,23)"/><text x="538.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.22%)</title><rect x="535" y="916" width="2" height="15" fill="rgb(243,95,26)"/><text x="538.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="535" y="932" width="2" height="15" fill="rgb(235,184,39)"/><text x="538.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="535" y="948" width="2" height="15" fill="rgb(253,128,36)"/><text x="538.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="535" y="964" width="2" height="15" fill="rgb(241,2,23)"/><text x="538.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="535" y="980" width="2" height="15" fill="rgb(234,34,9)"/><text x="538.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="535" y="996" width="2" height="15" fill="rgb(250,58,11)"/><text x="538.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:8493) (1 samples, 0.22%)</title><rect x="535" y="1012" width="2" height="15" fill="rgb(231,194,36)"/><text x="538.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.22%)</title><rect x="535" y="1028" width="2" height="15" fill="rgb(205,182,27)"/><text x="538.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:739) (1 samples, 0.22%)</title><rect x="535" y="1044" width="2" height="15" fill="rgb(227,152,50)"/><text x="538.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.22%)</title><rect x="535" y="1060" width="2" height="15" fill="rgb(222,9,49)"/><text x="538.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.22%)</title><rect x="535" y="1076" width="2" height="15" fill="rgb(226,85,43)"/><text x="538.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.22%)</title><rect x="535" y="1092" width="2" height="15" fill="rgb(211,191,30)"/><text x="538.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.22%)</title><rect x="535" y="1108" width="2" height="15" fill="rgb(224,182,10)"/><text x="538.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="535" y="1124" width="2" height="15" fill="rgb(221,72,9)"/><text x="538.00" y="1134.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.22%)</title><rect x="537" y="1108" width="3" height="15" fill="rgb(239,43,54)"/><text x="540.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="537" y="1124" width="3" height="15" fill="rgb(234,127,12)"/><text x="540.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="537" y="1140" width="3" height="15" fill="rgb(222,36,19)"/><text x="540.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="537" y="1156" width="3" height="15" fill="rgb(231,57,17)"/><text x="540.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="537" y="1172" width="3" height="15" fill="rgb(214,107,49)"/><text x="540.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="537" y="1188" width="3" height="15" fill="rgb(235,182,16)"/><text x="540.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.22%)</title><rect x="537" y="1204" width="3" height="15" fill="rgb(220,120,31)"/><text x="540.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="537" y="1220" width="3" height="15" fill="rgb(245,85,19)"/><text x="540.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="537" y="1236" width="3" height="15" fill="rgb(223,74,24)"/><text x="540.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="537" y="1252" width="3" height="15" fill="rgb(209,135,32)"/><text x="540.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="537" y="1268" width="3" height="15" fill="rgb(211,188,32)"/><text x="540.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="537" y="1284" width="3" height="15" fill="rgb(210,48,23)"/><text x="540.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.22%)</title><rect x="537" y="1300" width="3" height="15" fill="rgb(239,201,38)"/><text x="540.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.22%)</title><rect x="537" y="1316" width="3" height="15" fill="rgb(229,2,30)"/><text x="540.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.22%)</title><rect x="537" y="1332" width="3" height="15" fill="rgb(241,7,10)"/><text x="540.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.22%)</title><rect x="537" y="1348" width="3" height="15" fill="rgb(251,138,8)"/><text x="540.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.22%)</title><rect x="537" y="1364" width="3" height="15" fill="rgb(205,66,16)"/><text x="540.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.22%)</title><rect x="540" y="1460" width="2" height="15" fill="rgb(243,202,8)"/><text x="543.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.22%)</title><rect x="540" y="1476" width="2" height="15" fill="rgb(215,110,34)"/><text x="543.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.22%)</title><rect x="540" y="1492" width="2" height="15" fill="rgb(226,27,7)"/><text x="543.00" y="1502.50"></text></g><g><title>0x7f1dad4e90e9 (?) (1 samples, 0.22%)</title><rect x="540" y="1508" width="2" height="15" fill="rgb(226,57,9)"/><text x="543.00" y="1518.50"></text></g><g><title>0x7f1dad4cfbc1 (?) (1 samples, 0.22%)</title><rect x="540" y="1524" width="2" height="15" fill="rgb(231,146,8)"/><text x="543.00" y="1534.50"></text></g><g><title>0x7f1dad5add23 (?) (1 samples, 0.22%)</title><rect x="540" y="1540" width="2" height="15" fill="rgb(233,81,24)"/><text x="543.00" y="1550.50"></text></g><g><title>0x7f1dad5b2d8f (?) (1 samples, 0.22%)</title><rect x="540" y="1556" width="2" height="15" fill="rgb(228,161,36)"/><text x="543.00" y="1566.50"></text></g><g><title>0x7f1dad5cb45f (?) (1 samples, 0.22%)</title><rect x="540" y="1572" width="2" height="15" fill="rgb(230,9,23)"/><text x="543.00" y="1582.50"></text></g><g><title>0x7f1dad5a9a38 (?) (1 samples, 0.22%)</title><rect x="540" y="1588" width="2" height="15" fill="rgb(214,138,19)"/><text x="543.00" y="1598.50"></text></g><g><title>0x7f1dad530d1f (?) (1 samples, 0.22%)</title><rect x="540" y="1604" width="2" height="15" fill="rgb(244,56,49)"/><text x="543.00" y="1614.50"></text></g><g><title>0x7f1dad53039f (?) (1 samples, 0.22%)</title><rect x="540" y="1620" width="2" height="15" fill="rgb(224,165,42)"/><text x="543.00" y="1630.50"></text></g><g><title>0x7f1dad52db28 (?) (1 samples, 0.22%)</title><rect x="540" y="1636" width="2" height="15" fill="rgb(224,38,11)"/><text x="543.00" y="1646.50"></text></g><g><title>0x7f1dad52daae (?) (1 samples, 0.22%)</title><rect x="540" y="1652" width="2" height="15" fill="rgb(232,163,40)"/><text x="543.00" y="1662.50"></text></g><g><title>isspace (libc-2.29.so) (1 samples, 0.22%)</title><rect x="540" y="1668" width="2" height="15" fill="rgb(208,37,40)"/><text x="543.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:4) (14 samples, 3.15%)</title><rect x="508" y="52" width="37" height="15" fill="rgb(220,173,17)"/><text x="511.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 3.15%)</title><rect x="508" y="68" width="37" height="15" fill="rgb(239,146,10)"/><text x="511.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 3.15%)</title><rect x="508" y="84" width="37" height="15" fill="rgb(206,215,13)"/><text x="511.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 3.15%)</title><rect x="508" y="100" width="37" height="15" fill="rgb(205,115,35)"/><text x="511.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 3.15%)</title><rect x="508" y="116" width="37" height="15" fill="rgb(210,72,29)"/><text x="511.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 3.15%)</title><rect x="508" y="132" width="37" height="15" fill="rgb(231,30,44)"/><text x="511.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_m_cl.py:7) (6 samples, 1.35%)</title><rect x="529" y="148" width="16" height="15" fill="rgb(215,15,42)"/><text x="532.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.35%)</title><rect x="529" y="164" width="16" height="15" fill="rgb(225,102,32)"/><text x="532.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.35%)</title><rect x="529" y="180" width="16" height="15" fill="rgb(253,21,36)"/><text x="532.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.35%)</title><rect x="529" y="196" width="16" height="15" fill="rgb(221,196,52)"/><text x="532.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.35%)</title><rect x="529" y="212" width="16" height="15" fill="rgb(253,137,16)"/><text x="532.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.35%)</title><rect x="529" y="228" width="16" height="15" fill="rgb(233,32,6)"/><text x="532.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.12%)</title><rect x="532" y="244" width="13" height="15" fill="rgb(219,187,20)"/><text x="535.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.12%)</title><rect x="532" y="260" width="13" height="15" fill="rgb(220,36,27)"/><text x="535.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.12%)</title><rect x="532" y="276" width="13" height="15" fill="rgb(237,7,37)"/><text x="535.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.12%)</title><rect x="532" y="292" width="13" height="15" fill="rgb(246,36,42)"/><text x="535.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.12%)</title><rect x="532" y="308" width="13" height="15" fill="rgb(230,222,23)"/><text x="535.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="532" y="324" width="13" height="15" fill="rgb(231,102,28)"/><text x="535.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.12%)</title><rect x="532" y="340" width="13" height="15" fill="rgb(253,16,50)"/><text x="535.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.12%)</title><rect x="532" y="356" width="13" height="15" fill="rgb(234,185,29)"/><text x="535.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.12%)</title><rect x="532" y="372" width="13" height="15" fill="rgb(225,137,42)"/><text x="535.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.12%)</title><rect x="532" y="388" width="13" height="15" fill="rgb(226,28,3)"/><text x="535.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.12%)</title><rect x="532" y="404" width="13" height="15" fill="rgb(208,80,51)"/><text x="535.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.12%)</title><rect x="532" y="420" width="13" height="15" fill="rgb(236,16,4)"/><text x="535.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.67%)</title><rect x="537" y="436" width="8" height="15" fill="rgb(209,134,38)"/><text x="540.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="452" width="8" height="15" fill="rgb(248,184,48)"/><text x="540.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.67%)</title><rect x="537" y="468" width="8" height="15" fill="rgb(242,82,32)"/><text x="540.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="484" width="8" height="15" fill="rgb(252,119,16)"/><text x="540.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="500" width="8" height="15" fill="rgb(217,88,52)"/><text x="540.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="516" width="8" height="15" fill="rgb(234,41,28)"/><text x="540.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="532" width="8" height="15" fill="rgb(207,82,6)"/><text x="540.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="548" width="8" height="15" fill="rgb(224,86,2)"/><text x="540.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="564" width="8" height="15" fill="rgb(249,194,19)"/><text x="540.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.67%)</title><rect x="537" y="580" width="8" height="15" fill="rgb(233,55,6)"/><text x="540.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="596" width="8" height="15" fill="rgb(239,168,18)"/><text x="540.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="612" width="8" height="15" fill="rgb(254,186,38)"/><text x="540.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="628" width="8" height="15" fill="rgb(222,173,29)"/><text x="540.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="644" width="8" height="15" fill="rgb(251,157,16)"/><text x="540.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="660" width="8" height="15" fill="rgb(215,202,29)"/><text x="540.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.67%)</title><rect x="537" y="676" width="8" height="15" fill="rgb(242,79,35)"/><text x="540.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="692" width="8" height="15" fill="rgb(230,18,9)"/><text x="540.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="708" width="8" height="15" fill="rgb(240,56,22)"/><text x="540.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="724" width="8" height="15" fill="rgb(251,2,38)"/><text x="540.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="740" width="8" height="15" fill="rgb(227,56,21)"/><text x="540.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="756" width="8" height="15" fill="rgb(249,112,14)"/><text x="540.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.67%)</title><rect x="537" y="772" width="8" height="15" fill="rgb(219,52,53)"/><text x="540.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="788" width="8" height="15" fill="rgb(213,123,20)"/><text x="540.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="804" width="8" height="15" fill="rgb(218,116,23)"/><text x="540.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="820" width="8" height="15" fill="rgb(252,203,21)"/><text x="540.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="836" width="8" height="15" fill="rgb(235,171,11)"/><text x="540.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="852" width="8" height="15" fill="rgb(236,25,0)"/><text x="540.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.67%)</title><rect x="537" y="868" width="8" height="15" fill="rgb(233,200,12)"/><text x="540.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="884" width="8" height="15" fill="rgb(240,63,17)"/><text x="540.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.67%)</title><rect x="537" y="900" width="8" height="15" fill="rgb(247,174,54)"/><text x="540.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="916" width="8" height="15" fill="rgb(213,88,37)"/><text x="540.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="932" width="8" height="15" fill="rgb(216,62,15)"/><text x="540.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="948" width="8" height="15" fill="rgb(208,77,36)"/><text x="540.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="964" width="8" height="15" fill="rgb(214,146,1)"/><text x="540.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="980" width="8" height="15" fill="rgb(229,96,26)"/><text x="540.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="996" width="8" height="15" fill="rgb(233,178,18)"/><text x="540.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.67%)</title><rect x="537" y="1012" width="8" height="15" fill="rgb(242,172,30)"/><text x="540.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.67%)</title><rect x="537" y="1028" width="8" height="15" fill="rgb(205,39,50)"/><text x="540.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.67%)</title><rect x="537" y="1044" width="8" height="15" fill="rgb(228,177,19)"/><text x="540.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.67%)</title><rect x="537" y="1060" width="8" height="15" fill="rgb(239,208,44)"/><text x="540.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.67%)</title><rect x="537" y="1076" width="8" height="15" fill="rgb(205,223,27)"/><text x="540.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.67%)</title><rect x="537" y="1092" width="8" height="15" fill="rgb(245,3,21)"/><text x="540.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.45%)</title><rect x="540" y="1108" width="5" height="15" fill="rgb(234,126,16)"/><text x="543.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.45%)</title><rect x="540" y="1124" width="5" height="15" fill="rgb(205,36,46)"/><text x="543.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="540" y="1140" width="5" height="15" fill="rgb(236,178,49)"/><text x="543.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="540" y="1156" width="5" height="15" fill="rgb(249,211,11)"/><text x="543.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="540" y="1172" width="5" height="15" fill="rgb(251,196,47)"/><text x="543.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="540" y="1188" width="5" height="15" fill="rgb(228,217,46)"/><text x="543.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="540" y="1204" width="5" height="15" fill="rgb(249,206,9)"/><text x="543.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="540" y="1220" width="5" height="15" fill="rgb(228,217,23)"/><text x="543.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.45%)</title><rect x="540" y="1236" width="5" height="15" fill="rgb(239,90,18)"/><text x="543.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.45%)</title><rect x="540" y="1252" width="5" height="15" fill="rgb(238,83,16)"/><text x="543.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="540" y="1268" width="5" height="15" fill="rgb(215,145,22)"/><text x="543.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="540" y="1284" width="5" height="15" fill="rgb(227,8,28)"/><text x="543.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="540" y="1300" width="5" height="15" fill="rgb(218,193,12)"/><text x="543.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="540" y="1316" width="5" height="15" fill="rgb(235,143,23)"/><text x="543.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="540" y="1332" width="5" height="15" fill="rgb(248,65,33)"/><text x="543.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="540" y="1348" width="5" height="15" fill="rgb(237,72,28)"/><text x="543.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.45%)</title><rect x="540" y="1364" width="5" height="15" fill="rgb(249,105,23)"/><text x="543.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.45%)</title><rect x="540" y="1380" width="5" height="15" fill="rgb(251,108,43)"/><text x="543.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.45%)</title><rect x="540" y="1396" width="5" height="15" fill="rgb(205,121,31)"/><text x="543.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.45%)</title><rect x="540" y="1412" width="5" height="15" fill="rgb(209,100,14)"/><text x="543.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.45%)</title><rect x="540" y="1428" width="5" height="15" fill="rgb(230,165,3)"/><text x="543.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.45%)</title><rect x="540" y="1444" width="5" height="15" fill="rgb(218,198,46)"/><text x="543.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.22%)</title><rect x="542" y="1460" width="3" height="15" fill="rgb(240,105,5)"/><text x="545.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="542" y="1476" width="3" height="15" fill="rgb(254,159,41)"/><text x="545.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="542" y="1492" width="3" height="15" fill="rgb(240,182,50)"/><text x="545.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="542" y="1508" width="3" height="15" fill="rgb(229,184,17)"/><text x="545.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="542" y="1524" width="3" height="15" fill="rgb(231,22,47)"/><text x="545.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="542" y="1540" width="3" height="15" fill="rgb(208,152,14)"/><text x="545.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.22%)</title><rect x="542" y="1556" width="3" height="15" fill="rgb(221,151,26)"/><text x="545.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.22%)</title><rect x="542" y="1572" width="3" height="15" fill="rgb(225,33,30)"/><text x="545.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.22%)</title><rect x="542" y="1588" width="3" height="15" fill="rgb(205,66,11)"/><text x="545.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.22%)</title><rect x="542" y="1604" width="3" height="15" fill="rgb(244,83,46)"/><text x="545.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.22%)</title><rect x="542" y="1620" width="3" height="15" fill="rgb(234,200,8)"/><text x="545.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.22%)</title><rect x="542" y="1636" width="3" height="15" fill="rgb(230,205,7)"/><text x="545.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py:40) (1 samples, 0.22%)</title><rect x="542" y="1652" width="3" height="15" fill="rgb(210,44,48)"/><text x="545.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py:529) (1 samples, 0.22%)</title><rect x="542" y="1668" width="3" height="15" fill="rgb(231,50,6)"/><text x="545.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py:407) (1 samples, 0.22%)</title><rect x="542" y="1684" width="3" height="15" fill="rgb(238,125,42)"/><text x="545.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py:497) (1 samples, 0.22%)</title><rect x="542" y="1700" width="3" height="15" fill="rgb(231,11,43)"/><text x="545.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py:422) (1 samples, 0.22%)</title><rect x="542" y="1716" width="3" height="15" fill="rgb(236,167,28)"/><text x="545.00" y="1726.50"></text></g><g><title>__or__ (enum.py:830) (1 samples, 0.22%)</title><rect x="542" y="1732" width="3" height="15" fill="rgb(222,105,3)"/><text x="545.00" y="1742.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.22%)</title><rect x="542" y="1748" width="3" height="15" fill="rgb(250,189,42)"/><text x="545.00" y="1758.50"></text></g><g><title>__new__ (enum.py:535) (1 samples, 0.22%)</title><rect x="542" y="1764" width="3" height="15" fill="rgb(205,31,28)"/><text x="545.00" y="1774.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.22%)</title><rect x="548" y="196" width="2" height="15" fill="rgb(245,130,19)"/><text x="551.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.22%)</title><rect x="548" y="212" width="2" height="15" fill="rgb(249,46,8)"/><text x="551.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.22%)</title><rect x="548" y="228" width="2" height="15" fill="rgb(218,208,40)"/><text x="551.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:492) (1 samples, 0.22%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(215,193,45)"/><text x="551.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (3 samples, 0.67%)</title><rect x="545" y="180" width="8" height="15" fill="rgb(253,147,11)"/><text x="548.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.22%)</title><rect x="550" y="196" width="3" height="15" fill="rgb(230,110,42)"/><text x="553.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.22%)</title><rect x="550" y="212" width="3" height="15" fill="rgb(230,195,16)"/><text x="553.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.22%)</title><rect x="550" y="228" width="3" height="15" fill="rgb(206,201,30)"/><text x="553.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.22%)</title><rect x="550" y="244" width="3" height="15" fill="rgb(213,20,30)"/><text x="553.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.22%)</title><rect x="550" y="260" width="3" height="15" fill="rgb(222,43,46)"/><text x="553.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="550" y="276" width="3" height="15" fill="rgb(236,224,41)"/><text x="553.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.22%)</title><rect x="550" y="292" width="3" height="15" fill="rgb(231,188,44)"/><text x="553.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.22%)</title><rect x="550" y="308" width="3" height="15" fill="rgb(243,23,29)"/><text x="553.00" y="318.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:18) (4 samples, 0.90%)</title><rect x="545" y="100" width="11" height="15" fill="rgb(235,184,5)"/><text x="548.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.90%)</title><rect x="545" y="116" width="11" height="15" fill="rgb(226,25,16)"/><text x="548.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.90%)</title><rect x="545" y="132" width="11" height="15" fill="rgb(253,10,43)"/><text x="548.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.90%)</title><rect x="545" y="148" width="11" height="15" fill="rgb(254,24,5)"/><text x="548.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (4 samples, 0.90%)</title><rect x="545" y="164" width="11" height="15" fill="rgb(252,65,50)"/><text x="548.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.22%)</title><rect x="553" y="180" width="3" height="15" fill="rgb(231,38,36)"/><text x="556.00" y="190.50"></text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:22) (1 samples, 0.22%)</title><rect x="556" y="100" width="2" height="15" fill="rgb(208,24,18)"/><text x="559.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.22%)</title><rect x="569" y="148" width="3" height="15" fill="rgb(253,190,49)"/><text x="572.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.22%)</title><rect x="574" y="164" width="3" height="15" fill="rgb(239,60,42)"/><text x="577.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.45%)</title><rect x="577" y="164" width="5" height="15" fill="rgb(244,63,8)"/><text x="580.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (2 samples, 0.45%)</title><rect x="603" y="180" width="6" height="15" fill="rgb(239,186,13)"/><text x="606.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (20 samples, 4.49%)</title><rect x="609" y="180" width="53" height="15" fill="rgb(254,96,27)"/><text x="612.00" y="190.50">run (..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.90%)</title><rect x="651" y="196" width="11" height="15" fill="rgb(243,18,34)"/><text x="654.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.22%)</title><rect x="691" y="212" width="3" height="15" fill="rgb(242,165,0)"/><text x="694.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="694" y="228" width="2" height="15" fill="rgb(219,49,21)"/><text x="697.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="694" y="244" width="2" height="15" fill="rgb(206,175,54)"/><text x="697.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.22%)</title><rect x="694" y="260" width="2" height="15" fill="rgb(212,148,7)"/><text x="697.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (2 samples, 0.45%)</title><rect x="694" y="212" width="5" height="15" fill="rgb(230,19,41)"/><text x="697.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2443) (1 samples, 0.22%)</title><rect x="696" y="228" width="3" height="15" fill="rgb(252,179,3)"/><text x="699.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c:906) (1 samples, 0.22%)</title><rect x="696" y="244" width="3" height="15" fill="rgb(227,193,19)"/><text x="699.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.22%)</title><rect x="696" y="260" width="3" height="15" fill="rgb(210,187,25)"/><text x="699.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.22%)</title><rect x="696" y="276" width="3" height="15" fill="rgb(219,184,27)"/><text x="699.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.22%)</title><rect x="696" y="292" width="3" height="15" fill="rgb(246,118,33)"/><text x="699.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:31) (1 samples, 0.22%)</title><rect x="699" y="212" width="3" height="15" fill="rgb(249,60,28)"/><text x="702.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.22%)</title><rect x="704" y="260" width="3" height="15" fill="rgb(232,18,43)"/><text x="707.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.22%)</title><rect x="704" y="276" width="3" height="15" fill="rgb(208,48,11)"/><text x="707.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.45%)</title><rect x="704" y="228" width="6" height="15" fill="rgb(240,143,52)"/><text x="707.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.45%)</title><rect x="704" y="244" width="6" height="15" fill="rgb(251,181,34)"/><text x="707.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1971) (1 samples, 0.22%)</title><rect x="707" y="260" width="3" height="15" fill="rgb(242,54,1)"/><text x="710.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.22%)</title><rect x="710" y="244" width="2" height="15" fill="rgb(242,16,10)"/><text x="713.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.22%)</title><rect x="712" y="244" width="3" height="15" fill="rgb(234,83,4)"/><text x="715.00" y="254.50"></text></g><g><title>mapiter_fill_info (mapping.c:2372) (1 samples, 0.22%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(229,188,40)"/><text x="715.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2853) (1 samples, 0.22%)</title><rect x="715" y="244" width="3" height="15" fill="rgb(220,64,31)"/><text x="718.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="715" y="260" width="3" height="15" fill="rgb(209,163,8)"/><text x="718.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(205,45,6)"/><text x="721.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="718" y="276" width="2" height="15" fill="rgb(232,9,4)"/><text x="721.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.22%)</title><rect x="718" y="292" width="2" height="15" fill="rgb(241,163,29)"/><text x="721.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 1.12%)</title><rect x="710" y="228" width="13" height="15" fill="rgb(242,64,54)"/><text x="713.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (2 samples, 0.45%)</title><rect x="718" y="244" width="5" height="15" fill="rgb(214,56,35)"/><text x="721.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.22%)</title><rect x="720" y="260" width="3" height="15" fill="rgb(238,27,48)"/><text x="723.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1466) (1 samples, 0.22%)</title><rect x="720" y="276" width="3" height="15" fill="rgb(221,4,38)"/><text x="723.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.22%)</title><rect x="723" y="228" width="2" height="15" fill="rgb(235,156,46)"/><text x="726.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (1 samples, 0.22%)</title><rect x="723" y="244" width="2" height="15" fill="rgb(224,167,28)"/><text x="726.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="723" y="260" width="2" height="15" fill="rgb(205,22,48)"/><text x="726.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (10 samples, 2.25%)</title><rect x="702" y="212" width="26" height="15" fill="rgb(224,29,18)"/><text x="705.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.22%)</title><rect x="725" y="228" width="3" height="15" fill="rgb(241,155,38)"/><text x="728.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.22%)</title><rect x="725" y="244" width="3" height="15" fill="rgb(253,124,24)"/><text x="728.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.22%)</title><rect x="725" y="260" width="3" height="15" fill="rgb(240,85,19)"/><text x="728.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.22%)</title><rect x="731" y="244" width="2" height="15" fill="rgb(248,86,23)"/><text x="734.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.22%)</title><rect x="731" y="260" width="2" height="15" fill="rgb(245,94,54)"/><text x="734.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.22%)</title><rect x="731" y="276" width="2" height="15" fill="rgb(236,98,47)"/><text x="734.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.22%)</title><rect x="731" y="292" width="2" height="15" fill="rgb(246,92,17)"/><text x="734.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.22%)</title><rect x="731" y="308" width="2" height="15" fill="rgb(245,225,15)"/><text x="734.00" y="318.50"></text></g><g><title>0x7f1dbd44ddb3 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="731" y="324" width="2" height="15" fill="rgb(205,224,47)"/><text x="734.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.22%)</title><rect x="733" y="292" width="3" height="15" fill="rgb(244,166,33)"/><text x="736.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.22%)</title><rect x="733" y="308" width="3" height="15" fill="rgb(251,139,31)"/><text x="736.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (2 samples, 0.45%)</title><rect x="733" y="276" width="6" height="15" fill="rgb(233,48,24)"/><text x="736.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:744) (1 samples, 0.22%)</title><rect x="736" y="292" width="3" height="15" fill="rgb(246,219,3)"/><text x="739.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (5 samples, 1.12%)</title><rect x="728" y="212" width="13" height="15" fill="rgb(222,136,25)"/><text x="731.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 0.90%)</title><rect x="731" y="228" width="10" height="15" fill="rgb(209,193,17)"/><text x="734.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.67%)</title><rect x="733" y="244" width="8" height="15" fill="rgb(220,64,49)"/><text x="736.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.67%)</title><rect x="733" y="260" width="8" height="15" fill="rgb(212,227,5)"/><text x="736.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.22%)</title><rect x="739" y="276" width="2" height="15" fill="rgb(221,214,6)"/><text x="742.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.22%)</title><rect x="739" y="292" width="2" height="15" fill="rgb(225,146,46)"/><text x="742.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="739" y="308" width="2" height="15" fill="rgb(234,183,13)"/><text x="742.00" y="318.50"></text></g><g><title>0x7f1dbd3e59e8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="739" y="324" width="2" height="15" fill="rgb(215,120,28)"/><text x="742.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (22 samples, 4.94%)</title><rect x="686" y="196" width="58" height="15" fill="rgb(209,93,24)"/><text x="689.00" y="206.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.22%)</title><rect x="741" y="212" width="3" height="15" fill="rgb(250,159,6)"/><text x="744.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.22%)</title><rect x="741" y="228" width="3" height="15" fill="rgb(243,194,21)"/><text x="744.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.22%)</title><rect x="741" y="244" width="3" height="15" fill="rgb(251,91,20)"/><text x="744.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.22%)</title><rect x="741" y="260" width="3" height="15" fill="rgb(222,112,44)"/><text x="744.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.22%)</title><rect x="741" y="276" width="3" height="15" fill="rgb(222,112,0)"/><text x="744.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="741" y="292" width="3" height="15" fill="rgb(221,193,21)"/><text x="744.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.22%)</title><rect x="741" y="308" width="3" height="15" fill="rgb(254,186,3)"/><text x="744.00" y="318.50"></text></g><g><title>0x7f1dbd44e12b (libc-2.29.so) (1 samples, 0.22%)</title><rect x="749" y="260" width="3" height="15" fill="rgb(233,38,12)"/><text x="752.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.22%)</title><rect x="757" y="292" width="3" height="15" fill="rgb(249,174,1)"/><text x="760.00" y="302.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.22%)</title><rect x="757" y="308" width="3" height="15" fill="rgb(246,102,21)"/><text x="760.00" y="318.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.22%)</title><rect x="757" y="324" width="3" height="15" fill="rgb(216,210,54)"/><text x="760.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.22%)</title><rect x="757" y="340" width="3" height="15" fill="rgb(245,154,38)"/><text x="760.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:24) (1 samples, 0.22%)</title><rect x="757" y="356" width="3" height="15" fill="rgb(221,54,39)"/><text x="760.00" y="366.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.22%)</title><rect x="760" y="340" width="3" height="15" fill="rgb(209,67,25)"/><text x="763.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.22%)</title><rect x="763" y="356" width="2" height="15" fill="rgb(242,59,45)"/><text x="766.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="763" y="372" width="2" height="15" fill="rgb(216,87,8)"/><text x="766.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.22%)</title><rect x="763" y="388" width="2" height="15" fill="rgb(242,119,50)"/><text x="766.00" y="398.50"></text></g><g><title>0x7f1dbd44ddbb (libc-2.29.so) (1 samples, 0.22%)</title><rect x="763" y="404" width="2" height="15" fill="rgb(240,107,3)"/><text x="766.00" y="414.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (6 samples, 1.35%)</title><rect x="752" y="260" width="16" height="15" fill="rgb(238,82,37)"/><text x="755.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 0.90%)</title><rect x="757" y="276" width="11" height="15" fill="rgb(211,208,2)"/><text x="760.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.67%)</title><rect x="760" y="292" width="8" height="15" fill="rgb(234,226,35)"/><text x="763.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.67%)</title><rect x="760" y="308" width="8" height="15" fill="rgb(252,115,36)"/><text x="763.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.67%)</title><rect x="760" y="324" width="8" height="15" fill="rgb(225,157,23)"/><text x="763.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.45%)</title><rect x="763" y="340" width="5" height="15" fill="rgb(206,229,8)"/><text x="766.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.22%)</title><rect x="765" y="356" width="3" height="15" fill="rgb(252,186,46)"/><text x="768.00" y="366.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.22%)</title><rect x="768" y="260" width="3" height="15" fill="rgb(207,128,8)"/><text x="771.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:4) (2 samples, 0.45%)</title><rect x="771" y="276" width="5" height="15" fill="rgb(236,55,16)"/><text x="774.00" y="286.50"></text></g><g><title>_expand_dims_dispatcher (numpy/lib/shape_base.py:509) (1 samples, 0.22%)</title><rect x="773" y="292" width="3" height="15" fill="rgb(231,224,40)"/><text x="776.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.22%)</title><rect x="778" y="308" width="3" height="15" fill="rgb(235,8,15)"/><text x="781.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.22%)</title><rect x="778" y="324" width="3" height="15" fill="rgb(209,203,53)"/><text x="781.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1630) (1 samples, 0.22%)</title><rect x="778" y="340" width="3" height="15" fill="rgb(252,111,17)"/><text x="781.00" y="350.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:583) (1 samples, 0.22%)</title><rect x="781" y="308" width="3" height="15" fill="rgb(205,227,13)"/><text x="784.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (17 samples, 3.82%)</title><rect x="744" y="196" width="45" height="15" fill="rgb(222,193,28)"/><text x="747.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 3.82%)</title><rect x="744" y="212" width="45" height="15" fill="rgb(208,74,52)"/><text x="747.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (17 samples, 3.82%)</title><rect x="744" y="228" width="45" height="15" fill="rgb(211,132,21)"/><text x="747.00" y="238.50">_run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (16 samples, 3.60%)</title><rect x="747" y="244" width="42" height="15" fill="rgb(236,36,52)"/><text x="750.00" y="254.50">_ru..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (7 samples, 1.57%)</title><rect x="771" y="260" width="18" height="15" fill="rgb(249,221,17)"/><text x="774.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (5 samples, 1.12%)</title><rect x="776" y="276" width="13" height="15" fill="rgb(208,168,3)"/><text x="779.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.12%)</title><rect x="776" y="292" width="13" height="15" fill="rgb(246,207,24)"/><text x="779.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (2 samples, 0.45%)</title><rect x="784" y="308" width="5" height="15" fill="rgb(249,11,41)"/><text x="787.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.22%)</title><rect x="786" y="324" width="3" height="15" fill="rgb(209,174,2)"/><text x="789.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.22%)</title><rect x="786" y="340" width="3" height="15" fill="rgb(252,56,24)"/><text x="789.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.22%)</title><rect x="786" y="356" width="3" height="15" fill="rgb(208,149,21)"/><text x="789.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.22%)</title><rect x="786" y="372" width="3" height="15" fill="rgb(208,47,13)"/><text x="789.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.22%)</title><rect x="786" y="388" width="3" height="15" fill="rgb(244,125,17)"/><text x="789.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:268) (1 samples, 0.22%)</title><rect x="792" y="212" width="2" height="15" fill="rgb(219,161,50)"/><text x="795.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.22%)</title><rect x="805" y="244" width="3" height="15" fill="rgb(248,22,7)"/><text x="808.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="805" y="260" width="3" height="15" fill="rgb(252,17,47)"/><text x="808.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:89) (1 samples, 0.22%)</title><rect x="805" y="276" width="3" height="15" fill="rgb(250,31,51)"/><text x="808.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.22%)</title><rect x="808" y="260" width="2" height="15" fill="rgb(205,101,35)"/><text x="811.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.22%)</title><rect x="808" y="276" width="2" height="15" fill="rgb(213,152,23)"/><text x="811.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.22%)</title><rect x="810" y="324" width="3" height="15" fill="rgb(245,10,47)"/><text x="813.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="810" y="340" width="3" height="15" fill="rgb(253,199,0)"/><text x="813.00" y="350.50"></text></g><g><title>0x7f1dbd3e57a5 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="810" y="356" width="3" height="15" fill="rgb(213,152,14)"/><text x="813.00" y="366.50"></text></g><g><title>0x7f1dbd44dd53 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="810" y="372" width="3" height="15" fill="rgb(240,136,44)"/><text x="813.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.45%)</title><rect x="810" y="260" width="6" height="15" fill="rgb(207,177,29)"/><text x="813.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.45%)</title><rect x="810" y="276" width="6" height="15" fill="rgb(250,223,53)"/><text x="813.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.45%)</title><rect x="810" y="292" width="6" height="15" fill="rgb(232,152,21)"/><text x="813.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.45%)</title><rect x="810" y="308" width="6" height="15" fill="rgb(236,212,0)"/><text x="813.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.22%)</title><rect x="813" y="324" width="3" height="15" fill="rgb(221,7,19)"/><text x="816.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.90%)</title><rect x="808" y="244" width="10" height="15" fill="rgb(242,126,36)"/><text x="811.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.22%)</title><rect x="816" y="260" width="2" height="15" fill="rgb(236,54,17)"/><text x="819.00" y="270.50"></text></g><g><title>0x7f1dbc64f7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="816" y="276" width="2" height="15" fill="rgb(223,228,37)"/><text x="819.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (7 samples, 1.57%)</title><rect x="802" y="228" width="19" height="15" fill="rgb(222,38,38)"/><text x="805.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.22%)</title><rect x="818" y="244" width="3" height="15" fill="rgb(234,165,20)"/><text x="821.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.22%)</title><rect x="818" y="260" width="3" height="15" fill="rgb(246,73,27)"/><text x="821.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="826" y="244" width="3" height="15" fill="rgb(237,225,12)"/><text x="829.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.22%)</title><rect x="826" y="260" width="3" height="15" fill="rgb(215,12,16)"/><text x="829.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.45%)</title><rect x="832" y="292" width="5" height="15" fill="rgb(214,89,41)"/><text x="835.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.45%)</title><rect x="832" y="308" width="5" height="15" fill="rgb(244,221,49)"/><text x="835.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.45%)</title><rect x="832" y="324" width="5" height="15" fill="rgb(210,177,5)"/><text x="835.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.45%)</title><rect x="832" y="340" width="5" height="15" fill="rgb(224,208,48)"/><text x="835.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.45%)</title><rect x="832" y="356" width="5" height="15" fill="rgb(230,137,10)"/><text x="835.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.45%)</title><rect x="832" y="372" width="5" height="15" fill="rgb(206,179,8)"/><text x="835.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.22%)</title><rect x="837" y="340" width="2" height="15" fill="rgb(254,63,33)"/><text x="840.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.22%)</title><rect x="837" y="356" width="2" height="15" fill="rgb(226,150,6)"/><text x="840.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.45%)</title><rect x="837" y="308" width="5" height="15" fill="rgb(205,151,53)"/><text x="840.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.45%)</title><rect x="837" y="324" width="5" height="15" fill="rgb(209,66,11)"/><text x="840.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.22%)</title><rect x="839" y="340" width="3" height="15" fill="rgb(222,155,27)"/><text x="842.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="839" y="356" width="3" height="15" fill="rgb(250,84,11)"/><text x="842.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="839" y="372" width="3" height="15" fill="rgb(230,189,51)"/><text x="842.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.22%)</title><rect x="839" y="388" width="3" height="15" fill="rgb(250,43,36)"/><text x="842.00" y="398.50"></text></g><g><title>array_max (methods.c:323) (6 samples, 1.35%)</title><rect x="829" y="244" width="16" height="15" fill="rgb(240,22,2)"/><text x="832.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.35%)</title><rect x="829" y="260" width="16" height="15" fill="rgb(230,162,41)"/><text x="832.00" y="270.50"></text></g><g><title>_amax (numpy/core/_methods.py:30) (6 samples, 1.35%)</title><rect x="829" y="276" width="16" height="15" fill="rgb(231,120,27)"/><text x="832.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.67%)</title><rect x="837" y="292" width="8" height="15" fill="rgb(244,188,52)"/><text x="840.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4688) (1 samples, 0.22%)</title><rect x="842" y="308" width="3" height="15" fill="rgb(207,9,13)"/><text x="845.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.22%)</title><rect x="845" y="244" width="2" height="15" fill="rgb(248,141,53)"/><text x="848.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:418) (1 samples, 0.22%)</title><rect x="845" y="260" width="2" height="15" fill="rgb(234,94,39)"/><text x="848.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.22%)</title><rect x="847" y="244" width="3" height="15" fill="rgb(238,93,11)"/><text x="850.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (12 samples, 2.70%)</title><rect x="821" y="228" width="32" height="15" fill="rgb(240,58,23)"/><text x="824.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.22%)</title><rect x="850" y="244" width="3" height="15" fill="rgb(234,34,1)"/><text x="853.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="850" y="260" width="3" height="15" fill="rgb(216,110,18)"/><text x="853.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.22%)</title><rect x="850" y="276" width="3" height="15" fill="rgb(221,99,31)"/><text x="853.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="850" y="292" width="3" height="15" fill="rgb(215,98,21)"/><text x="853.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="850" y="308" width="3" height="15" fill="rgb(231,185,5)"/><text x="853.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.22%)</title><rect x="850" y="324" width="3" height="15" fill="rgb(205,47,14)"/><text x="853.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.22%)</title><rect x="850" y="340" width="3" height="15" fill="rgb(235,19,35)"/><text x="853.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.22%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(244,217,17)"/><text x="853.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="858" y="260" width="3" height="15" fill="rgb(241,92,13)"/><text x="861.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.22%)</title><rect x="858" y="276" width="3" height="15" fill="rgb(223,186,29)"/><text x="861.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.22%)</title><rect x="858" y="292" width="3" height="15" fill="rgb(247,223,15)"/><text x="861.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (4 samples, 0.90%)</title><rect x="853" y="228" width="10" height="15" fill="rgb(243,124,9)"/><text x="856.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.45%)</title><rect x="858" y="244" width="5" height="15" fill="rgb(211,160,17)"/><text x="861.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="861" y="260" width="2" height="15" fill="rgb(242,227,3)"/><text x="864.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.22%)</title><rect x="861" y="276" width="2" height="15" fill="rgb(234,108,32)"/><text x="864.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.22%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(224,77,20)"/><text x="864.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.22%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(236,135,12)"/><text x="864.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.22%)</title><rect x="863" y="244" width="3" height="15" fill="rgb(231,83,14)"/><text x="866.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.22%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(205,185,37)"/><text x="866.00" y="270.50"></text></g><g><title>multi_DECREF (mapping.c:149) (1 samples, 0.22%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(226,67,53)"/><text x="866.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.22%)</title><rect x="866" y="244" width="3" height="15" fill="rgb(226,91,25)"/><text x="869.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:973) (1 samples, 0.22%)</title><rect x="866" y="260" width="3" height="15" fill="rgb(249,15,41)"/><text x="869.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.22%)</title><rect x="871" y="292" width="3" height="15" fill="rgb(250,151,5)"/><text x="874.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.22%)</title><rect x="871" y="308" width="3" height="15" fill="rgb(252,193,51)"/><text x="874.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.22%)</title><rect x="871" y="324" width="3" height="15" fill="rgb(225,120,6)"/><text x="874.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.22%)</title><rect x="871" y="340" width="3" height="15" fill="rgb(205,39,42)"/><text x="874.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.22%)</title><rect x="871" y="356" width="3" height="15" fill="rgb(233,69,41)"/><text x="874.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="871" y="372" width="3" height="15" fill="rgb(209,215,17)"/><text x="874.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.22%)</title><rect x="874" y="372" width="3" height="15" fill="rgb(246,179,15)"/><text x="877.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.22%)</title><rect x="874" y="388" width="3" height="15" fill="rgb(251,161,44)"/><text x="877.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.45%)</title><rect x="874" y="340" width="5" height="15" fill="rgb(236,75,29)"/><text x="877.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.45%)</title><rect x="874" y="356" width="5" height="15" fill="rgb(241,203,26)"/><text x="877.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.22%)</title><rect x="877" y="372" width="2" height="15" fill="rgb(236,100,50)"/><text x="880.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.22%)</title><rect x="877" y="388" width="2" height="15" fill="rgb(225,171,20)"/><text x="880.00" y="398.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.22%)</title><rect x="877" y="404" width="2" height="15" fill="rgb(252,85,53)"/><text x="880.00" y="414.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.22%)</title><rect x="877" y="420" width="2" height="15" fill="rgb(233,187,20)"/><text x="880.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="879" y="356" width="3" height="15" fill="rgb(236,137,27)"/><text x="882.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2818) (1 samples, 0.22%)</title><rect x="879" y="372" width="3" height="15" fill="rgb(226,153,16)"/><text x="882.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (6 samples, 1.35%)</title><rect x="869" y="244" width="16" height="15" fill="rgb(228,33,23)"/><text x="872.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 1.35%)</title><rect x="869" y="260" width="16" height="15" fill="rgb(222,168,53)"/><text x="872.00" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (6 samples, 1.35%)</title><rect x="869" y="276" width="16" height="15" fill="rgb(213,176,24)"/><text x="872.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.90%)</title><rect x="874" y="292" width="11" height="15" fill="rgb(245,96,23)"/><text x="877.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.90%)</title><rect x="874" y="308" width="11" height="15" fill="rgb(210,129,32)"/><text x="877.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.90%)</title><rect x="874" y="324" width="11" height="15" fill="rgb(217,16,8)"/><text x="877.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.45%)</title><rect x="879" y="340" width="6" height="15" fill="rgb(236,159,24)"/><text x="882.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.22%)</title><rect x="882" y="356" width="3" height="15" fill="rgb(209,165,46)"/><text x="885.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2144) (1 samples, 0.22%)</title><rect x="882" y="372" width="3" height="15" fill="rgb(220,177,30)"/><text x="885.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.22%)</title><rect x="885" y="276" width="2" height="15" fill="rgb(238,192,14)"/><text x="888.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.22%)</title><rect x="885" y="292" width="2" height="15" fill="rgb(233,63,22)"/><text x="888.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.45%)</title><rect x="885" y="244" width="5" height="15" fill="rgb(207,125,30)"/><text x="888.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.45%)</title><rect x="885" y="260" width="5" height="15" fill="rgb(253,19,16)"/><text x="888.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.22%)</title><rect x="887" y="276" width="3" height="15" fill="rgb(237,14,18)"/><text x="890.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.22%)</title><rect x="887" y="292" width="3" height="15" fill="rgb(244,103,24)"/><text x="890.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="887" y="308" width="3" height="15" fill="rgb(219,87,20)"/><text x="890.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.22%)</title><rect x="887" y="324" width="3" height="15" fill="rgb(239,189,10)"/><text x="890.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.22%)</title><rect x="887" y="340" width="3" height="15" fill="rgb(209,53,14)"/><text x="890.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.22%)</title><rect x="887" y="356" width="3" height="15" fill="rgb(251,86,54)"/><text x="890.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (39 samples, 8.76%)</title><rect x="789" y="196" width="104" height="15" fill="rgb(212,29,22)"/><text x="792.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 8.31%)</title><rect x="794" y="212" width="99" height="15" fill="rgb(240,33,29)"/><text x="797.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (11 samples, 2.47%)</title><rect x="863" y="228" width="30" height="15" fill="rgb(211,116,23)"/><text x="866.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.22%)</title><rect x="890" y="244" width="3" height="15" fill="rgb(253,47,1)"/><text x="893.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.22%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(222,103,11)"/><text x="893.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (2 samples, 0.45%)</title><rect x="893" y="212" width="5" height="15" fill="rgb(225,142,44)"/><text x="896.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:431) (1 samples, 0.22%)</title><rect x="898" y="212" width="2" height="15" fill="rgb(252,91,20)"/><text x="901.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.45%)</title><rect x="900" y="228" width="6" height="15" fill="rgb(231,35,33)"/><text x="903.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="914" y="308" width="2" height="15" fill="rgb(233,219,33)"/><text x="917.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.67%)</title><rect x="911" y="244" width="8" height="15" fill="rgb(223,135,0)"/><text x="914.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.67%)</title><rect x="911" y="260" width="8" height="15" fill="rgb(216,162,6)"/><text x="914.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (3 samples, 0.67%)</title><rect x="911" y="276" width="8" height="15" fill="rgb(215,37,33)"/><text x="914.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (3 samples, 0.67%)</title><rect x="911" y="292" width="8" height="15" fill="rgb(243,186,42)"/><text x="914.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="916" y="308" width="3" height="15" fill="rgb(239,68,45)"/><text x="919.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.22%)</title><rect x="919" y="260" width="3" height="15" fill="rgb(229,114,6)"/><text x="922.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1120) (1 samples, 0.22%)</title><rect x="919" y="276" width="3" height="15" fill="rgb(231,167,40)"/><text x="922.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.22%)</title><rect x="922" y="260" width="2" height="15" fill="rgb(248,20,47)"/><text x="925.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.22%)</title><rect x="922" y="276" width="2" height="15" fill="rgb(211,196,13)"/><text x="925.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.22%)</title><rect x="922" y="292" width="2" height="15" fill="rgb(251,127,50)"/><text x="925.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.22%)</title><rect x="922" y="308" width="2" height="15" fill="rgb(208,171,6)"/><text x="925.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.22%)</title><rect x="922" y="324" width="2" height="15" fill="rgb(227,18,44)"/><text x="925.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.22%)</title><rect x="924" y="260" width="3" height="15" fill="rgb(249,144,40)"/><text x="927.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.22%)</title><rect x="924" y="276" width="3" height="15" fill="rgb(212,228,39)"/><text x="927.00" y="286.50"></text></g><g><title>0x7f1dbd44e1d6 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="924" y="292" width="3" height="15" fill="rgb(254,76,34)"/><text x="927.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.90%)</title><rect x="919" y="244" width="11" height="15" fill="rgb(205,184,39)"/><text x="922.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.22%)</title><rect x="927" y="260" width="3" height="15" fill="rgb(213,9,20)"/><text x="930.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.22%)</title><rect x="927" y="276" width="3" height="15" fill="rgb(226,168,22)"/><text x="930.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.22%)</title><rect x="927" y="292" width="3" height="15" fill="rgb(230,150,46)"/><text x="930.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.22%)</title><rect x="927" y="308" width="3" height="15" fill="rgb(217,22,4)"/><text x="930.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.22%)</title><rect x="927" y="324" width="3" height="15" fill="rgb(205,161,13)"/><text x="930.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="927" y="340" width="3" height="15" fill="rgb(216,15,1)"/><text x="930.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (10 samples, 2.25%)</title><rect x="906" y="228" width="26" height="15" fill="rgb(237,188,3)"/><text x="909.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.22%)</title><rect x="930" y="244" width="2" height="15" fill="rgb(213,74,37)"/><text x="933.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.22%)</title><rect x="930" y="260" width="2" height="15" fill="rgb(250,189,28)"/><text x="933.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.22%)</title><rect x="932" y="244" width="3" height="15" fill="rgb(231,218,33)"/><text x="935.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (1 samples, 0.22%)</title><rect x="935" y="244" width="3" height="15" fill="rgb(252,149,4)"/><text x="938.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.22%)</title><rect x="946" y="324" width="2" height="15" fill="rgb(229,41,2)"/><text x="949.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:880) (1 samples, 0.22%)</title><rect x="946" y="340" width="2" height="15" fill="rgb(235,123,9)"/><text x="949.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.22%)</title><rect x="946" y="356" width="2" height="15" fill="rgb(207,163,17)"/><text x="949.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.22%)</title><rect x="946" y="372" width="2" height="15" fill="rgb(253,168,19)"/><text x="949.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.22%)</title><rect x="946" y="388" width="2" height="15" fill="rgb(206,92,23)"/><text x="949.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.22%)</title><rect x="946" y="404" width="2" height="15" fill="rgb(249,70,41)"/><text x="949.00" y="414.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.22%)</title><rect x="946" y="420" width="2" height="15" fill="rgb(254,11,14)"/><text x="949.00" y="430.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:365) (1 samples, 0.22%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(225,172,49)"/><text x="951.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (7 samples, 1.57%)</title><rect x="938" y="244" width="18" height="15" fill="rgb(211,145,18)"/><text x="941.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.12%)</title><rect x="943" y="260" width="13" height="15" fill="rgb(246,21,2)"/><text x="946.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.12%)</title><rect x="943" y="276" width="13" height="15" fill="rgb(229,114,2)"/><text x="946.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 0.90%)</title><rect x="946" y="292" width="10" height="15" fill="rgb(239,78,0)"/><text x="949.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.90%)</title><rect x="946" y="308" width="10" height="15" fill="rgb(206,1,18)"/><text x="949.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.45%)</title><rect x="951" y="324" width="5" height="15" fill="rgb(229,24,44)"/><text x="954.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.45%)</title><rect x="951" y="340" width="5" height="15" fill="rgb(235,139,48)"/><text x="954.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="951" y="356" width="5" height="15" fill="rgb(241,204,47)"/><text x="954.00" y="366.50"></text></g><g><title>0x7f1dbd44e120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="956" y="260" width="3" height="15" fill="rgb(254,36,18)"/><text x="959.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (2 samples, 0.45%)</title><rect x="956" y="244" width="5" height="15" fill="rgb(236,69,28)"/><text x="959.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.22%)</title><rect x="959" y="260" width="2" height="15" fill="rgb(225,104,19)"/><text x="962.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.22%)</title><rect x="959" y="276" width="2" height="15" fill="rgb(226,32,12)"/><text x="962.00" y="286.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.22%)</title><rect x="967" y="260" width="2" height="15" fill="rgb(212,184,7)"/><text x="970.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (30 samples, 6.74%)</title><rect x="893" y="196" width="79" height="15" fill="rgb(208,173,1)"/><text x="896.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (27 samples, 6.07%)</title><rect x="900" y="212" width="72" height="15" fill="rgb(207,184,53)"/><text x="903.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (15 samples, 3.37%)</title><rect x="932" y="228" width="40" height="15" fill="rgb(234,211,15)"/><text x="935.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 0.90%)</title><rect x="961" y="244" width="11" height="15" fill="rgb(234,85,16)"/><text x="964.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.22%)</title><rect x="969" y="260" width="3" height="15" fill="rgb(221,25,2)"/><text x="972.00" y="270.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="969" y="276" width="3" height="15" fill="rgb(232,130,1)"/><text x="972.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.22%)</title><rect x="969" y="292" width="3" height="15" fill="rgb(212,146,23)"/><text x="972.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="969" y="308" width="3" height="15" fill="rgb(235,29,28)"/><text x="972.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (119 samples, 26.74%)</title><rect x="662" y="180" width="315" height="15" fill="rgb(239,93,43)"/><text x="665.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.45%)</title><rect x="972" y="196" width="5" height="15" fill="rgb(251,152,46)"/><text x="975.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (6 samples, 1.35%)</title><rect x="977" y="180" width="16" height="15" fill="rgb(238,57,46)"/><text x="980.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.45%)</title><rect x="993" y="180" width="6" height="15" fill="rgb(206,168,25)"/><text x="996.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (12 samples, 2.70%)</title><rect x="999" y="180" width="31" height="15" fill="rgb(245,113,20)"/><text x="1002.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (172 samples, 38.65%)</title><rect x="582" y="164" width="456" height="15" fill="rgb(219,28,18)"/><text x="585.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 0.67%)</title><rect x="1030" y="180" width="8" height="15" fill="rgb(239,100,41)"/><text x="1033.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.22%)</title><rect x="1038" y="164" width="3" height="15" fill="rgb(207,185,18)"/><text x="1041.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.22%)</title><rect x="1038" y="180" width="3" height="15" fill="rgb(235,125,4)"/><text x="1041.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:45) (188 samples, 42.25%)</title><rect x="545" y="52" width="499" height="15" fill="rgb(231,164,44)"/><text x="548.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:44) (188 samples, 42.25%)</title><rect x="545" y="68" width="499" height="15" fill="rgb(230,123,36)"/><text x="548.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:29) (188 samples, 42.25%)</title><rect x="545" y="84" width="499" height="15" fill="rgb(243,71,48)"/><text x="548.00" y="94.50">setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:23) (183 samples, 41.12%)</title><rect x="558" y="100" width="486" height="15" fill="rgb(211,180,12)"/><text x="561.00" y="110.50">profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 40.67%)</title><rect x="564" y="116" width="480" height="15" fill="rgb(227,98,21)"/><text x="567.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (180 samples, 40.45%)</title><rect x="566" y="132" width="478" height="15" fill="rgb(221,67,27)"/><text x="569.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (178 samples, 40.00%)</title><rect x="572" y="148" width="472" height="15" fill="rgb(227,94,49)"/><text x="575.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="1041" y="164" width="3" height="15" fill="rgb(213,165,24)"/><text x="1044.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="1041" y="180" width="3" height="15" fill="rgb(225,49,5)"/><text x="1044.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="1041" y="196" width="3" height="15" fill="rgb(216,112,19)"/><text x="1044.00" y="206.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:28) (1 samples, 0.22%)</title><rect x="1044" y="84" width="2" height="15" fill="rgb(232,172,34)"/><text x="1047.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.22%)</title><rect x="1044" y="100" width="2" height="15" fill="rgb(219,13,10)"/><text x="1047.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.22%)</title><rect x="1044" y="116" width="2" height="15" fill="rgb(220,51,23)"/><text x="1047.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.22%)</title><rect x="1044" y="132" width="2" height="15" fill="rgb(230,151,6)"/><text x="1047.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.22%)</title><rect x="1044" y="148" width="2" height="15" fill="rgb(247,41,29)"/><text x="1047.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.22%)</title><rect x="1044" y="164" width="2" height="15" fill="rgb(244,150,5)"/><text x="1047.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.22%)</title><rect x="1044" y="180" width="2" height="15" fill="rgb(211,31,20)"/><text x="1047.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.22%)</title><rect x="1044" y="196" width="2" height="15" fill="rgb(236,179,27)"/><text x="1047.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.22%)</title><rect x="1044" y="212" width="2" height="15" fill="rgb(254,140,1)"/><text x="1047.00" y="222.50"></text></g><g><title>0x7f1d7b470ff9 (?) (1 samples, 0.22%)</title><rect x="1044" y="228" width="2" height="15" fill="rgb(254,68,39)"/><text x="1047.00" y="238.50"></text></g><g><title>0x7f1d7b46b57e (?) (1 samples, 0.22%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(211,86,35)"/><text x="1047.00" y="254.50"></text></g><g><title>0x7f1d7b498426 (?) (1 samples, 0.22%)</title><rect x="1044" y="260" width="2" height="15" fill="rgb(230,63,3)"/><text x="1047.00" y="270.50"></text></g><g><title>0x7f1d7b8bc0b2 (?) (1 samples, 0.22%)</title><rect x="1044" y="276" width="2" height="15" fill="rgb(229,58,5)"/><text x="1047.00" y="286.50"></text></g><g><title>0x7f1d7b5119fc (?) (1 samples, 0.22%)</title><rect x="1044" y="292" width="2" height="15" fill="rgb(241,139,24)"/><text x="1047.00" y="302.50"></text></g><g><title>0x7f1d7b5116a4 (?) (1 samples, 0.22%)</title><rect x="1044" y="308" width="2" height="15" fill="rgb(253,111,19)"/><text x="1047.00" y="318.50"></text></g><g><title>0x7f1d7b5111af (?) (1 samples, 0.22%)</title><rect x="1044" y="324" width="2" height="15" fill="rgb(206,175,49)"/><text x="1047.00" y="334.50"></text></g><g><title>0x7f1d7b547fe1 (?) (1 samples, 0.22%)</title><rect x="1044" y="340" width="2" height="15" fill="rgb(220,98,48)"/><text x="1047.00" y="350.50"></text></g><g><title>0x7f1d7b8b44a4 (?) (1 samples, 0.22%)</title><rect x="1044" y="356" width="2" height="15" fill="rgb(245,148,53)"/><text x="1047.00" y="366.50"></text></g><g><title>0x7f1d7b8b43f1 (?) (1 samples, 0.22%)</title><rect x="1044" y="372" width="2" height="15" fill="rgb(250,168,45)"/><text x="1047.00" y="382.50"></text></g><g><title>0x7f1d7b8b3ff3 (?) (1 samples, 0.22%)</title><rect x="1044" y="388" width="2" height="15" fill="rgb(240,165,38)"/><text x="1047.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1044" y="404" width="2" height="15" fill="rgb(217,34,31)"/><text x="1047.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="420" width="2" height="15" fill="rgb(246,22,51)"/><text x="1047.00" y="430.50"></text></g><g><title>0x7f1dbd42f8cb (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="436" width="2" height="15" fill="rgb(244,128,6)"/><text x="1047.00" y="446.50"></text></g><g><title>0x7f1dbd42e743 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="452" width="2" height="15" fill="rgb(244,158,39)"/><text x="1047.00" y="462.50"></text></g><g><title>__default_morecore (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="468" width="2" height="15" fill="rgb(253,35,33)"/><text x="1047.00" y="478.50"></text></g><g><title>__sbrk (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="484" width="2" height="15" fill="rgb(217,97,48)"/><text x="1047.00" y="494.50"></text></g><g><title>brk (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1044" y="500" width="2" height="15" fill="rgb(240,28,32)"/><text x="1047.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="1049" y="116" width="3" height="15" fill="rgb(224,34,13)"/><text x="1052.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="1049" y="132" width="3" height="15" fill="rgb(237,125,22)"/><text x="1052.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.22%)</title><rect x="1049" y="148" width="3" height="15" fill="rgb(232,111,50)"/><text x="1052.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 0.67%)</title><rect x="1062" y="148" width="8" height="15" fill="rgb(249,49,8)"/><text x="1065.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.67%)</title><rect x="1075" y="196" width="8" height="15" fill="rgb(237,55,45)"/><text x="1078.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.45%)</title><rect x="1078" y="212" width="5" height="15" fill="rgb(231,56,24)"/><text x="1081.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1081" y="228" width="2" height="15" fill="rgb(252,110,49)"/><text x="1084.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1081" y="244" width="2" height="15" fill="rgb(212,28,44)"/><text x="1084.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1081" y="260" width="2" height="15" fill="rgb(241,165,28)"/><text x="1084.00" y="270.50"></text></g><g><title>0x7f1dbd42ec04 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1097" y="340" width="2" height="15" fill="rgb(213,111,16)"/><text x="1100.00" y="350.50"></text></g><g><title>0x7f1dbd42ec13 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1099" y="340" width="3" height="15" fill="rgb(233,208,1)"/><text x="1102.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.90%)</title><rect x="1094" y="292" width="11" height="15" fill="rgb(241,146,21)"/><text x="1097.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.90%)</title><rect x="1094" y="308" width="11" height="15" fill="rgb(206,148,43)"/><text x="1097.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.90%)</title><rect x="1094" y="324" width="11" height="15" fill="rgb(217,36,39)"/><text x="1097.00" y="334.50"></text></g><g><title>0x7f1dbd42ec48 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1102" y="340" width="3" height="15" fill="rgb(249,20,4)"/><text x="1105.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1105" y="292" width="2" height="15" fill="rgb(210,106,47)"/><text x="1108.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1105" y="308" width="2" height="15" fill="rgb(205,78,40)"/><text x="1108.00" y="318.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1107" y="340" width="3" height="15" fill="rgb(205,141,38)"/><text x="1110.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1107" y="356" width="3" height="15" fill="rgb(240,16,4)"/><text x="1110.00" y="366.50"></text></g><g><title>0x7f1dbd42da53 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1107" y="372" width="3" height="15" fill="rgb(254,41,26)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1110" y="484" width="3" height="15" fill="rgb(227,72,28)"/><text x="1113.00" y="494.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="340" width="5" height="15" fill="rgb(213,197,23)"/><text x="1113.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="356" width="5" height="15" fill="rgb(221,222,36)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="372" width="5" height="15" fill="rgb(223,59,50)"/><text x="1113.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="388" width="5" height="15" fill="rgb(217,8,35)"/><text x="1113.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="404" width="5" height="15" fill="rgb(238,141,19)"/><text x="1113.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="420" width="5" height="15" fill="rgb(242,184,42)"/><text x="1113.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="436" width="5" height="15" fill="rgb(217,68,28)"/><text x="1113.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="452" width="5" height="15" fill="rgb(228,198,53)"/><text x="1113.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1110" y="468" width="5" height="15" fill="rgb(220,144,2)"/><text x="1113.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1113" y="484" width="2" height="15" fill="rgb(205,93,40)"/><text x="1116.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1113" y="500" width="2" height="15" fill="rgb(247,135,10)"/><text x="1116.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1115" y="356" width="3" height="15" fill="rgb(241,68,48)"/><text x="1118.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1115" y="372" width="3" height="15" fill="rgb(246,95,52)"/><text x="1118.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1115" y="388" width="3" height="15" fill="rgb(224,63,45)"/><text x="1118.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1115" y="404" width="3" height="15" fill="rgb(222,192,15)"/><text x="1118.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1115" y="340" width="6" height="15" fill="rgb(249,149,8)"/><text x="1118.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1118" y="356" width="3" height="15" fill="rgb(249,123,16)"/><text x="1121.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1118" y="372" width="3" height="15" fill="rgb(252,135,11)"/><text x="1121.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="356" width="3" height="15" fill="rgb(251,0,6)"/><text x="1126.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="372" width="3" height="15" fill="rgb(239,194,33)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="388" width="3" height="15" fill="rgb(232,160,29)"/><text x="1126.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="404" width="3" height="15" fill="rgb(253,104,47)"/><text x="1126.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="420" width="3" height="15" fill="rgb(227,78,6)"/><text x="1126.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1123" y="436" width="3" height="15" fill="rgb(225,71,44)"/><text x="1126.00" y="446.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1126" y="356" width="3" height="15" fill="rgb(251,92,17)"/><text x="1129.00" y="366.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.90%)</title><rect x="1121" y="340" width="10" height="15" fill="rgb(212,130,42)"/><text x="1124.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1129" y="356" width="2" height="15" fill="rgb(245,13,34)"/><text x="1132.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1129" y="372" width="2" height="15" fill="rgb(250,43,34)"/><text x="1132.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1129" y="388" width="2" height="15" fill="rgb(242,145,13)"/><text x="1132.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1129" y="404" width="2" height="15" fill="rgb(223,106,2)"/><text x="1132.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="1129" y="420" width="2" height="15" fill="rgb(244,100,44)"/><text x="1132.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceFree (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1131" y="372" width="3" height="15" fill="rgb(223,76,12)"/><text x="1134.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1134" y="388" width="2" height="15" fill="rgb(221,225,36)"/><text x="1137.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1134" y="404" width="2" height="15" fill="rgb(206,36,34)"/><text x="1137.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1134" y="420" width="2" height="15" fill="rgb(241,177,49)"/><text x="1137.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1131" y="340" width="8" height="15" fill="rgb(209,189,46)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1131" y="356" width="8" height="15" fill="rgb(243,71,23)"/><text x="1134.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1134" y="372" width="5" height="15" fill="rgb(248,48,54)"/><text x="1137.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1136" y="388" width="3" height="15" fill="rgb(205,14,19)"/><text x="1139.00" y="398.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1139" y="340" width="3" height="15" fill="rgb(229,49,19)"/><text x="1142.00" y="350.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="340" width="2" height="15" fill="rgb(246,195,48)"/><text x="1145.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="356" width="2" height="15" fill="rgb(228,222,13)"/><text x="1145.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_19TensorCwiseBinaryOpINS0_17scalar_product_opIffEEKS7_KNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSD_IiJSF_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS0_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS0_10SumReducerIfEEKNSD_ISF_JEEESB_S6_EEEEEEEEEEEEEENS_16ThreadPoolDeviceELb1ELb1EE3runERS17_RKS18_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="372" width="2" height="15" fill="rgb(213,123,17)"/><text x="1145.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="388" width="2" height="15" fill="rgb(238,216,37)"/><text x="1145.00" y="398.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="404" width="2" height="15" fill="rgb(217,147,39)"/><text x="1145.00" y="414.50"></text></g><g><title>_ZNSt17_Function_handlerIFvllEZN5Eigen8internal14TensorExecutorIKNS1_14TensorAssignOpINS1_9TensorMapINS1_6TensorIfLi2ELi1ElEELi16ENS1_11MakePointerEEEKNS1_19TensorCwiseBinaryOpINS2_17scalar_product_opIffEEKS9_KNS1_20TensorBroadcastingOpIKNS1_9IndexListINS1_10type2indexILl1EEEJiEEEKNS1_17TensorReshapingOpIKNSF_IiJSH_EEEKNS1_18TensorForcedEvalOpIKNS1_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS1_17TensorReductionOpINS2_10SumReducerIfEEKNSF_ISH_JEEESD_S8_EEEEEEEEEEEEEENS1_16ThreadPoolDeviceELb1ELb1EE3runERS19_RKS1A_EUlllE_E9_M_invokeERKSt9_Any_dataOlS1K_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="420" width="2" height="15" fill="rgb(232,33,19)"/><text x="1145.00" y="430.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_19TensorCwiseBinaryOpINS_8internal17scalar_product_opIffEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSC_IiJSE_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS2_17scalar_inverse_opIfEEKNS_17TensorReductionOpINS2_10SumReducerIfEEKNSC_ISE_JEEESA_S8_EEEEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNS2_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="436" width="2" height="15" fill="rgb(247,187,52)"/><text x="1145.00" y="446.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE5blockEPNSC_11TensorBlockIflLi2ELi1EEE (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1142" y="452" width="2" height="15" fill="rgb(215,36,48)"/><text x="1145.00" y="462.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="340" width="3" height="15" fill="rgb(206,29,0)"/><text x="1147.00" y="350.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1144" y="356" width="3" height="15" fill="rgb(232,27,0)"/><text x="1147.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 4.72%)</title><rect x="1094" y="260" width="56" height="15" fill="rgb(211,32,30)"/><text x="1097.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 4.72%)</title><rect x="1094" y="276" width="56" height="15" fill="rgb(248,53,28)"/><text x="1097.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.60%)</title><rect x="1107" y="292" width="43" height="15" fill="rgb(215,131,13)"/><text x="1110.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.60%)</title><rect x="1107" y="308" width="43" height="15" fill="rgb(218,19,21)"/><text x="1110.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.60%)</title><rect x="1107" y="324" width="43" height="15" fill="rgb(246,220,39)"/><text x="1110.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1147" y="340" width="3" height="15" fill="rgb(249,97,36)"/><text x="1150.00" y="350.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, double, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, double&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1150" y="260" width="2" height="15" fill="rgb(212,171,13)"/><text x="1153.00" y="270.50"></text></g><g><title>0x7f1dbd42d902 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(205,32,1)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1152" y="260" width="6" height="15" fill="rgb(232,17,46)"/><text x="1155.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1152" y="276" width="6" height="15" fill="rgb(254,0,17)"/><text x="1155.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1155" y="292" width="3" height="15" fill="rgb(230,164,13)"/><text x="1158.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1155" y="308" width="3" height="15" fill="rgb(232,25,13)"/><text x="1158.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1158" y="260" width="2" height="15" fill="rgb(209,46,9)"/><text x="1161.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.22%)</title><rect x="1158" y="276" width="2" height="15" fill="rgb(221,138,23)"/><text x="1161.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1160" y="260" width="3" height="15" fill="rgb(210,113,40)"/><text x="1163.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1163" y="260" width="3" height="15" fill="rgb(249,59,50)"/><text x="1166.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1168" y="276" width="3" height="15" fill="rgb(238,19,12)"/><text x="1171.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 7.19%)</title><rect x="1089" y="244" width="85" height="15" fill="rgb(231,217,29)"/><text x="1092.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="1166" y="260" width="8" height="15" fill="rgb(206,204,30)"/><text x="1169.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="276" width="3" height="15" fill="rgb(241,186,49)"/><text x="1174.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="292" width="3" height="15" fill="rgb(208,62,44)"/><text x="1174.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="308" width="3" height="15" fill="rgb(241,63,20)"/><text x="1174.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="324" width="3" height="15" fill="rgb(216,42,34)"/><text x="1174.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="340" width="3" height="15" fill="rgb(248,6,9)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="356" width="3" height="15" fill="rgb(223,165,28)"/><text x="1174.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="372" width="3" height="15" fill="rgb(209,43,43)"/><text x="1174.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1171" y="388" width="3" height="15" fill="rgb(207,62,34)"/><text x="1174.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1174" y="244" width="5" height="15" fill="rgb(209,112,29)"/><text x="1177.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(247,212,6)"/><text x="1177.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1176" y="276" width="3" height="15" fill="rgb(210,0,4)"/><text x="1179.00" y="286.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1176" y="292" width="3" height="15" fill="rgb(222,146,10)"/><text x="1179.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (37 samples, 8.31%)</title><rect x="1083" y="196" width="99" height="15" fill="rgb(247,58,34)"/><text x="1086.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 8.09%)</title><rect x="1086" y="212" width="96" height="15" fill="rgb(208,24,29)"/><text x="1089.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 8.09%)</title><rect x="1086" y="228" width="96" height="15" fill="rgb(205,48,25)"/><text x="1089.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(236,7,3)"/><text x="1182.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(208,156,17)"/><text x="1182.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(227,224,38)"/><text x="1182.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (43 samples, 9.66%)</title><rect x="1073" y="164" width="114" height="15" fill="rgb(214,13,51)"/><text x="1076.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (43 samples, 9.66%)</title><rect x="1073" y="180" width="114" height="15" fill="rgb(244,110,10)"/><text x="1076.00" y="190.50">run (mlprodict..</text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.45%)</title><rect x="1182" y="196" width="5" height="15" fill="rgb(225,78,54)"/><text x="1185.00" y="206.50"></text></g><g><title>all (445 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,217,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:52) (55 samples, 12.36%)</title><rect x="1044" y="52" width="146" height="15" fill="rgb(223,13,7)"/><text x="1047.00" y="62.50">&lt;module&gt; (bench_ML..</text></g><g><title>profile_ort (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:51) (55 samples, 12.36%)</title><rect x="1044" y="68" width="146" height="15" fill="rgb(210,104,38)"/><text x="1047.00" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:29) (54 samples, 12.13%)</title><rect x="1046" y="84" width="144" height="15" fill="rgb(216,124,10)"/><text x="1049.00" y="94.50">setup_profile (ben..</text></g><g><title>profile (bench_MLPClassifier_default_m_cl_1_4_12_float_.py:23) (54 samples, 12.13%)</title><rect x="1046" y="100" width="144" height="15" fill="rgb(250,212,14)"/><text x="1049.00" y="110.50">profile (bench_MLP..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 11.69%)</title><rect x="1052" y="116" width="138" height="15" fill="rgb(235,126,37)"/><text x="1055.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (50 samples, 11.24%)</title><rect x="1057" y="132" width="133" height="15" fill="rgb(230,133,9)"/><text x="1060.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (45 samples, 10.11%)</title><rect x="1070" y="148" width="120" height="15" fill="rgb(247,51,24)"/><text x="1073.00" y="158.50">run (mlprodict..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(254,226,1)"/><text x="1190.00" y="174.50"></text></g></g></svg>