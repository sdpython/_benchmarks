<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.48%)</title><rect x="27" y="164" width="5" height="15" fill="rgb(221,18,32)"/><text x="30.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.48%)</title><rect x="27" y="180" width="5" height="15" fill="rgb(215,189,47)"/><text x="30.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.24%)</title><rect x="32" y="164" width="3" height="15" fill="rgb(226,225,28)"/><text x="35.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.48%)</title><rect x="35" y="180" width="6" height="15" fill="rgb(247,23,4)"/><text x="38.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.72%)</title><rect x="61" y="196" width="8" height="15" fill="rgb(240,137,20)"/><text x="64.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 3.13%)</title><rect x="41" y="180" width="37" height="15" fill="rgb(215,89,43)"/><text x="44.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.72%)</title><rect x="69" y="196" width="9" height="15" fill="rgb(238,25,0)"/><text x="72.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (20 samples, 4.82%)</title><rect x="24" y="148" width="57" height="15" fill="rgb(249,37,20)"/><text x="27.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 3.86%)</title><rect x="35" y="164" width="46" height="15" fill="rgb(236,189,34)"/><text x="38.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.24%)</title><rect x="78" y="180" width="3" height="15" fill="rgb(209,199,8)"/><text x="81.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.24%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(234,220,29)"/><text x="81.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.24%)</title><rect x="81" y="148" width="2" height="15" fill="rgb(249,229,7)"/><text x="84.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.24%)</title><rect x="83" y="148" width="3" height="15" fill="rgb(246,180,34)"/><text x="86.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.24%)</title><rect x="100" y="196" width="3" height="15" fill="rgb(222,75,38)"/><text x="103.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.24%)</title><rect x="100" y="212" width="3" height="15" fill="rgb(238,135,26)"/><text x="103.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.24%)</title><rect x="103" y="196" width="3" height="15" fill="rgb(247,38,22)"/><text x="106.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.48%)</title><rect x="106" y="212" width="6" height="15" fill="rgb(235,216,30)"/><text x="109.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.48%)</title><rect x="129" y="228" width="6" height="15" fill="rgb(248,170,22)"/><text x="132.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (13 samples, 3.13%)</title><rect x="100" y="180" width="37" height="15" fill="rgb(217,206,4)"/><text x="103.00" y="190.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 2.65%)</title><rect x="106" y="196" width="31" height="15" fill="rgb(239,222,50)"/><text x="109.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.17%)</title><rect x="112" y="212" width="25" height="15" fill="rgb(227,103,43)"/><text x="115.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.24%)</title><rect x="135" y="228" width="2" height="15" fill="rgb(247,192,7)"/><text x="138.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.48%)</title><rect x="143" y="196" width="6" height="15" fill="rgb(207,10,46)"/><text x="146.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.24%)</title><rect x="149" y="196" width="3" height="15" fill="rgb(225,18,48)"/><text x="152.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.24%)</title><rect x="152" y="196" width="3" height="15" fill="rgb(237,123,33)"/><text x="155.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.24%)</title><rect x="152" y="212" width="3" height="15" fill="rgb(221,45,14)"/><text x="155.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (4 samples, 0.96%)</title><rect x="157" y="212" width="12" height="15" fill="rgb(225,215,35)"/><text x="160.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.24%)</title><rect x="169" y="212" width="3" height="15" fill="rgb(208,180,26)"/><text x="172.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.24%)</title><rect x="172" y="212" width="2" height="15" fill="rgb(242,26,44)"/><text x="175.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 2.17%)</title><rect x="155" y="196" width="25" height="15" fill="rgb(223,57,18)"/><text x="158.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.48%)</title><rect x="174" y="212" width="6" height="15" fill="rgb(205,70,44)"/><text x="177.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 0.96%)</title><rect x="180" y="228" width="11" height="15" fill="rgb(246,190,32)"/><text x="183.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.24%)</title><rect x="191" y="228" width="3" height="15" fill="rgb(245,30,45)"/><text x="194.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.24%)</title><rect x="194" y="228" width="3" height="15" fill="rgb(250,75,41)"/><text x="197.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 1.69%)</title><rect x="180" y="196" width="20" height="15" fill="rgb(213,77,47)"/><text x="183.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (7 samples, 1.69%)</title><rect x="180" y="212" width="20" height="15" fill="rgb(226,171,7)"/><text x="183.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.24%)</title><rect x="197" y="228" width="3" height="15" fill="rgb(233,193,39)"/><text x="200.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.48%)</title><rect x="200" y="196" width="6" height="15" fill="rgb(210,214,39)"/><text x="203.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.24%)</title><rect x="203" y="212" width="3" height="15" fill="rgb(207,190,8)"/><text x="206.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.24%)</title><rect x="203" y="228" width="3" height="15" fill="rgb(228,76,45)"/><text x="206.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.72%)</title><rect x="206" y="196" width="8" height="15" fill="rgb(233,206,1)"/><text x="209.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (3 samples, 0.72%)</title><rect x="206" y="212" width="8" height="15" fill="rgb(236,122,47)"/><text x="209.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:327) (1 samples, 0.24%)</title><rect x="217" y="228" width="3" height="15" fill="rgb(247,38,46)"/><text x="220.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.72%)</title><rect x="214" y="212" width="9" height="15" fill="rgb(210,98,4)"/><text x="217.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.24%)</title><rect x="220" y="228" width="3" height="15" fill="rgb(222,94,50)"/><text x="223.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (6 samples, 1.45%)</title><rect x="214" y="196" width="17" height="15" fill="rgb(228,188,52)"/><text x="217.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (3 samples, 0.72%)</title><rect x="223" y="212" width="8" height="15" fill="rgb(219,54,41)"/><text x="226.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (2 samples, 0.48%)</title><rect x="226" y="228" width="5" height="15" fill="rgb(214,11,13)"/><text x="229.00" y="238.50"></text></g><g><title>0x7febec146730 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="228" y="244" width="3" height="15" fill="rgb(251,166,21)"/><text x="231.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.24%)</title><rect x="231" y="196" width="3" height="15" fill="rgb(246,195,39)"/><text x="234.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.48%)</title><rect x="246" y="228" width="5" height="15" fill="rgb(220,91,48)"/><text x="249.00" y="238.50"></text></g><g><title>0x7febec146e50 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="248" y="244" width="3" height="15" fill="rgb(216,98,43)"/><text x="251.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.45%)</title><rect x="237" y="212" width="17" height="15" fill="rgb(242,21,41)"/><text x="240.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.24%)</title><rect x="251" y="228" width="3" height="15" fill="rgb(227,43,2)"/><text x="254.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 1.93%)</title><rect x="234" y="196" width="23" height="15" fill="rgb(207,104,45)"/><text x="237.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.24%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(205,194,52)"/><text x="257.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 0.96%)</title><rect x="260" y="212" width="11" height="15" fill="rgb(232,222,37)"/><text x="263.00" y="222.50"></text></g><g><title>0x7febec146b89 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="268" y="228" width="3" height="15" fill="rgb(231,229,37)"/><text x="271.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.24%)</title><rect x="271" y="212" width="3" height="15" fill="rgb(221,84,13)"/><text x="274.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.48%)</title><rect x="274" y="212" width="6" height="15" fill="rgb(237,193,14)"/><text x="277.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.24%)</title><rect x="280" y="212" width="2" height="15" fill="rgb(239,225,41)"/><text x="283.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.96%)</title><rect x="282" y="212" width="12" height="15" fill="rgb(230,207,29)"/><text x="285.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.96%)</title><rect x="282" y="228" width="12" height="15" fill="rgb(227,13,28)"/><text x="285.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.48%)</title><rect x="288" y="244" width="6" height="15" fill="rgb(236,228,25)"/><text x="291.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (57 samples, 13.73%)</title><rect x="137" y="180" width="163" height="15" fill="rgb(230,149,34)"/><text x="140.00" y="190.50">decision_function (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 3.61%)</title><rect x="257" y="196" width="43" height="15" fill="rgb(248,3,41)"/><text x="260.00" y="206.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (2 samples, 0.48%)</title><rect x="294" y="212" width="6" height="15" fill="rgb(242,207,18)"/><text x="297.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.24%)</title><rect x="297" y="228" width="3" height="15" fill="rgb(250,81,34)"/><text x="300.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (3 samples, 0.72%)</title><rect x="300" y="180" width="8" height="15" fill="rgb(221,154,10)"/><text x="303.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.24%)</title><rect x="305" y="196" width="3" height="15" fill="rgb(209,102,26)"/><text x="308.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.24%)</title><rect x="305" y="212" width="3" height="15" fill="rgb(237,217,39)"/><text x="308.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.24%)</title><rect x="305" y="228" width="3" height="15" fill="rgb(205,91,27)"/><text x="308.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.24%)</title><rect x="311" y="228" width="3" height="15" fill="rgb(251,97,41)"/><text x="314.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.24%)</title><rect x="311" y="244" width="3" height="15" fill="rgb(209,29,34)"/><text x="314.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.24%)</title><rect x="311" y="260" width="3" height="15" fill="rgb(243,162,10)"/><text x="314.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.24%)</title><rect x="314" y="244" width="3" height="15" fill="rgb(222,1,51)"/><text x="317.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (2 samples, 0.48%)</title><rect x="317" y="244" width="5" height="15" fill="rgb(254,158,4)"/><text x="320.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.24%)</title><rect x="319" y="260" width="3" height="15" fill="rgb(239,172,13)"/><text x="322.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1674) (1 samples, 0.24%)</title><rect x="322" y="244" width="3" height="15" fill="rgb(210,213,24)"/><text x="325.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.24%)</title><rect x="325" y="260" width="3" height="15" fill="rgb(235,183,49)"/><text x="328.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.24%)</title><rect x="328" y="260" width="3" height="15" fill="rgb(228,2,26)"/><text x="331.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="328" y="276" width="3" height="15" fill="rgb(223,112,51)"/><text x="331.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.24%)</title><rect x="328" y="292" width="3" height="15" fill="rgb(214,152,7)"/><text x="331.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.24%)</title><rect x="328" y="308" width="3" height="15" fill="rgb(254,130,36)"/><text x="331.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="328" y="324" width="3" height="15" fill="rgb(206,109,17)"/><text x="331.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.24%)</title><rect x="328" y="340" width="3" height="15" fill="rgb(222,137,15)"/><text x="331.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.24%)</title><rect x="331" y="260" width="3" height="15" fill="rgb(214,192,42)"/><text x="334.00" y="270.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1092) (1 samples, 0.24%)</title><rect x="331" y="276" width="3" height="15" fill="rgb(225,55,4)"/><text x="334.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1532) (1 samples, 0.24%)</title><rect x="334" y="260" width="2" height="15" fill="rgb(215,59,30)"/><text x="337.00" y="270.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1402) (1 samples, 0.24%)</title><rect x="334" y="276" width="2" height="15" fill="rgb(228,115,14)"/><text x="337.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.24%)</title><rect x="336" y="260" width="3" height="15" fill="rgb(213,228,54)"/><text x="339.00" y="270.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.24%)</title><rect x="336" y="276" width="3" height="15" fill="rgb(227,226,12)"/><text x="339.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.65%)</title><rect x="311" y="212" width="31" height="15" fill="rgb(218,83,33)"/><text x="314.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 2.41%)</title><rect x="314" y="228" width="28" height="15" fill="rgb(229,210,49)"/><text x="317.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.45%)</title><rect x="325" y="244" width="17" height="15" fill="rgb(238,46,13)"/><text x="328.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.24%)</title><rect x="339" y="260" width="3" height="15" fill="rgb(245,136,34)"/><text x="342.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.24%)</title><rect x="339" y="276" width="3" height="15" fill="rgb(213,61,51)"/><text x="342.00" y="286.50"></text></g><g><title>array_add (number.c:330) (12 samples, 2.89%)</title><rect x="311" y="196" width="34" height="15" fill="rgb(206,77,17)"/><text x="314.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4772) (1 samples, 0.24%)</title><rect x="342" y="212" width="3" height="15" fill="rgb(233,12,27)"/><text x="345.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="345" y="196" width="3" height="15" fill="rgb(213,143,50)"/><text x="348.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="345" y="212" width="3" height="15" fill="rgb(226,125,47)"/><text x="348.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.24%)</title><rect x="345" y="228" width="3" height="15" fill="rgb(219,164,16)"/><text x="348.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="354" y="212" width="2" height="15" fill="rgb(238,12,43)"/><text x="357.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="354" y="228" width="2" height="15" fill="rgb(207,211,23)"/><text x="357.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:59) (1 samples, 0.24%)</title><rect x="354" y="244" width="2" height="15" fill="rgb(214,88,43)"/><text x="357.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2582) (1 samples, 0.24%)</title><rect x="356" y="244" width="3" height="15" fill="rgb(249,53,42)"/><text x="359.00" y="254.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.24%)</title><rect x="356" y="260" width="3" height="15" fill="rgb(242,75,14)"/><text x="359.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2791) (1 samples, 0.24%)</title><rect x="359" y="244" width="3" height="15" fill="rgb(226,164,9)"/><text x="362.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.24%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(215,37,7)"/><text x="362.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.24%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(216,139,45)"/><text x="362.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.24%)</title><rect x="362" y="244" width="3" height="15" fill="rgb(218,139,10)"/><text x="365.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.24%)</title><rect x="362" y="260" width="3" height="15" fill="rgb(213,182,28)"/><text x="365.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.24%)</title><rect x="362" y="276" width="3" height="15" fill="rgb(238,205,44)"/><text x="365.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.24%)</title><rect x="365" y="260" width="3" height="15" fill="rgb(235,47,38)"/><text x="368.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.24%)</title><rect x="365" y="276" width="3" height="15" fill="rgb(226,173,5)"/><text x="368.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.24%)</title><rect x="365" y="292" width="3" height="15" fill="rgb(242,176,0)"/><text x="368.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.24%)</title><rect x="368" y="260" width="3" height="15" fill="rgb(240,187,51)"/><text x="371.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.24%)</title><rect x="368" y="276" width="3" height="15" fill="rgb(244,215,40)"/><text x="371.00" y="286.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.24%)</title><rect x="368" y="292" width="3" height="15" fill="rgb(239,28,24)"/><text x="371.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.24%)</title><rect x="371" y="276" width="2" height="15" fill="rgb(237,210,53)"/><text x="374.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2642) (1 samples, 0.24%)</title><rect x="371" y="292" width="2" height="15" fill="rgb(231,72,6)"/><text x="374.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.24%)</title><rect x="373" y="292" width="3" height="15" fill="rgb(210,48,0)"/><text x="376.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.24%)</title><rect x="373" y="308" width="3" height="15" fill="rgb(217,169,9)"/><text x="376.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.24%)</title><rect x="373" y="324" width="3" height="15" fill="rgb(238,68,38)"/><text x="376.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="376" y="324" width="3" height="15" fill="rgb(235,38,14)"/><text x="379.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.48%)</title><rect x="376" y="308" width="6" height="15" fill="rgb(213,170,52)"/><text x="379.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="379" y="324" width="3" height="15" fill="rgb(234,114,17)"/><text x="382.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.24%)</title><rect x="382" y="308" width="3" height="15" fill="rgb(238,45,26)"/><text x="385.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.24%)</title><rect x="382" y="324" width="3" height="15" fill="rgb(213,208,22)"/><text x="385.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.48%)</title><rect x="385" y="308" width="6" height="15" fill="rgb(207,80,22)"/><text x="388.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="388" y="324" width="3" height="15" fill="rgb(217,143,26)"/><text x="391.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (10 samples, 2.41%)</title><rect x="365" y="244" width="28" height="15" fill="rgb(249,26,15)"/><text x="368.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (8 samples, 1.93%)</title><rect x="371" y="260" width="22" height="15" fill="rgb(226,55,35)"/><text x="374.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 1.69%)</title><rect x="373" y="276" width="20" height="15" fill="rgb(238,6,50)"/><text x="376.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.45%)</title><rect x="376" y="292" width="17" height="15" fill="rgb(244,17,14)"/><text x="379.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.24%)</title><rect x="391" y="308" width="2" height="15" fill="rgb(219,121,35)"/><text x="394.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.24%)</title><rect x="391" y="324" width="2" height="15" fill="rgb(226,22,3)"/><text x="394.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2879) (1 samples, 0.24%)</title><rect x="393" y="244" width="3" height="15" fill="rgb(227,32,5)"/><text x="396.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.24%)</title><rect x="393" y="260" width="3" height="15" fill="rgb(223,140,43)"/><text x="396.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.24%)</title><rect x="396" y="244" width="3" height="15" fill="rgb(252,210,19)"/><text x="399.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.24%)</title><rect x="396" y="260" width="3" height="15" fill="rgb(231,30,29)"/><text x="399.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.24%)</title><rect x="396" y="276" width="3" height="15" fill="rgb(250,23,41)"/><text x="399.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="396" y="292" width="3" height="15" fill="rgb(239,157,13)"/><text x="399.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.24%)</title><rect x="399" y="260" width="3" height="15" fill="rgb(218,44,37)"/><text x="402.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="399" y="276" width="3" height="15" fill="rgb(254,189,51)"/><text x="402.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.24%)</title><rect x="399" y="292" width="3" height="15" fill="rgb(254,23,53)"/><text x="402.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.48%)</title><rect x="399" y="244" width="6" height="15" fill="rgb(247,218,9)"/><text x="402.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.24%)</title><rect x="402" y="260" width="3" height="15" fill="rgb(215,93,38)"/><text x="405.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 4.34%)</title><rect x="356" y="212" width="52" height="15" fill="rgb(215,113,14)"/><text x="359.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (18 samples, 4.34%)</title><rect x="356" y="228" width="52" height="15" fill="rgb(246,170,50)"/><text x="359.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3090) (1 samples, 0.24%)</title><rect x="405" y="244" width="3" height="15" fill="rgb(219,19,46)"/><text x="408.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="405" y="260" width="3" height="15" fill="rgb(216,71,0)"/><text x="408.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (22 samples, 5.30%)</title><rect x="348" y="196" width="62" height="15" fill="rgb(205,3,6)"/><text x="351.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.24%)</title><rect x="408" y="212" width="2" height="15" fill="rgb(205,37,52)"/><text x="411.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (38 samples, 9.16%)</title><rect x="308" y="180" width="108" height="15" fill="rgb(233,179,9)"/><text x="311.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.48%)</title><rect x="410" y="196" width="6" height="15" fill="rgb(210,129,32)"/><text x="413.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (115 samples, 27.71%)</title><rect x="92" y="164" width="327" height="15" fill="rgb(250,217,31)"/><text x="95.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_bas..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.24%)</title><rect x="416" y="180" width="3" height="15" fill="rgb(247,205,32)"/><text x="419.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="419" y="180" width="3" height="15" fill="rgb(224,37,2)"/><text x="422.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="419" y="196" width="3" height="15" fill="rgb(242,84,26)"/><text x="422.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.24%)</title><rect x="419" y="212" width="3" height="15" fill="rgb(231,64,21)"/><text x="422.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.24%)</title><rect x="419" y="228" width="3" height="15" fill="rgb(238,137,25)"/><text x="422.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.24%)</title><rect x="422" y="196" width="3" height="15" fill="rgb(247,158,44)"/><text x="425.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.24%)</title><rect x="422" y="212" width="3" height="15" fill="rgb(234,171,21)"/><text x="425.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.24%)</title><rect x="422" y="228" width="3" height="15" fill="rgb(246,170,7)"/><text x="425.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.72%)</title><rect x="425" y="196" width="8" height="15" fill="rgb(223,41,4)"/><text x="428.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (3 samples, 0.72%)</title><rect x="425" y="212" width="8" height="15" fill="rgb(252,89,39)"/><text x="428.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (2 samples, 0.48%)</title><rect x="427" y="228" width="6" height="15" fill="rgb(218,114,44)"/><text x="430.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (2 samples, 0.48%)</title><rect x="427" y="244" width="6" height="15" fill="rgb(241,194,50)"/><text x="430.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.24%)</title><rect x="433" y="196" width="3" height="15" fill="rgb(206,229,3)"/><text x="436.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1325) (1 samples, 0.24%)</title><rect x="433" y="212" width="3" height="15" fill="rgb(217,34,21)"/><text x="436.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.24%)</title><rect x="436" y="212" width="3" height="15" fill="rgb(224,98,38)"/><text x="439.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.24%)</title><rect x="436" y="228" width="3" height="15" fill="rgb(251,81,1)"/><text x="439.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.24%)</title><rect x="436" y="244" width="3" height="15" fill="rgb(205,29,5)"/><text x="439.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.24%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(240,123,27)"/><text x="439.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(219,131,49)"/><text x="439.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 1.93%)</title><rect x="419" y="164" width="23" height="15" fill="rgb(215,191,1)"/><text x="422.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.69%)</title><rect x="422" y="180" width="20" height="15" fill="rgb(214,155,23)"/><text x="425.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.48%)</title><rect x="436" y="196" width="6" height="15" fill="rgb(224,149,49)"/><text x="439.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.24%)</title><rect x="439" y="212" width="3" height="15" fill="rgb(246,83,23)"/><text x="442.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.24%)</title><rect x="439" y="228" width="3" height="15" fill="rgb(240,59,33)"/><text x="442.00" y="238.50"></text></g><g><title>0x7febd74199dd (?) (1 samples, 0.24%)</title><rect x="439" y="244" width="3" height="15" fill="rgb(252,87,43)"/><text x="442.00" y="254.50"></text></g><g><title>0x7febd743a265 (?) (1 samples, 0.24%)</title><rect x="439" y="260" width="3" height="15" fill="rgb(245,133,3)"/><text x="442.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.24%)</title><rect x="439" y="276" width="3" height="15" fill="rgb(250,209,12)"/><text x="442.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.24%)</title><rect x="453" y="180" width="3" height="15" fill="rgb(231,0,30)"/><text x="456.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.24%)</title><rect x="453" y="196" width="3" height="15" fill="rgb(249,109,50)"/><text x="456.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.24%)</title><rect x="453" y="212" width="3" height="15" fill="rgb(247,176,9)"/><text x="456.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.24%)</title><rect x="456" y="180" width="3" height="15" fill="rgb(236,60,38)"/><text x="459.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.24%)</title><rect x="456" y="196" width="3" height="15" fill="rgb(251,100,2)"/><text x="459.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:284) (1 samples, 0.24%)</title><rect x="456" y="212" width="3" height="15" fill="rgb(230,219,40)"/><text x="459.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.24%)</title><rect x="473" y="308" width="3" height="15" fill="rgb(208,84,13)"/><text x="476.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 0.96%)</title><rect x="473" y="276" width="11" height="15" fill="rgb(234,162,14)"/><text x="476.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 0.96%)</title><rect x="473" y="292" width="11" height="15" fill="rgb(207,222,28)"/><text x="476.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.72%)</title><rect x="476" y="308" width="8" height="15" fill="rgb(245,228,38)"/><text x="479.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 1.20%)</title><rect x="473" y="228" width="14" height="15" fill="rgb(238,71,51)"/><text x="476.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 1.20%)</title><rect x="473" y="244" width="14" height="15" fill="rgb(212,205,1)"/><text x="476.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 1.20%)</title><rect x="473" y="260" width="14" height="15" fill="rgb(208,13,23)"/><text x="476.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.24%)</title><rect x="484" y="276" width="3" height="15" fill="rgb(222,221,39)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (2 samples, 0.48%)</title><rect x="487" y="292" width="6" height="15" fill="rgb(229,167,24)"/><text x="490.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (3 samples, 0.72%)</title><rect x="487" y="244" width="9" height="15" fill="rgb(220,227,30)"/><text x="490.00" y="254.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (3 samples, 0.72%)</title><rect x="487" y="260" width="9" height="15" fill="rgb(227,153,15)"/><text x="490.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (3 samples, 0.72%)</title><rect x="487" y="276" width="9" height="15" fill="rgb(214,148,19)"/><text x="490.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.24%)</title><rect x="493" y="292" width="3" height="15" fill="rgb(237,76,0)"/><text x="496.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.24%)</title><rect x="499" y="260" width="2" height="15" fill="rgb(210,81,43)"/><text x="502.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.24%)</title><rect x="499" y="276" width="2" height="15" fill="rgb(251,220,22)"/><text x="502.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.24%)</title><rect x="499" y="292" width="2" height="15" fill="rgb(246,113,31)"/><text x="502.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.24%)</title><rect x="499" y="308" width="2" height="15" fill="rgb(249,44,40)"/><text x="502.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1637) (1 samples, 0.24%)</title><rect x="499" y="324" width="2" height="15" fill="rgb(254,84,15)"/><text x="502.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:402) (1 samples, 0.24%)</title><rect x="501" y="292" width="3" height="15" fill="rgb(231,45,5)"/><text x="504.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.24%)</title><rect x="504" y="292" width="3" height="15" fill="rgb(254,15,22)"/><text x="507.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:437) (1 samples, 0.24%)</title><rect x="507" y="292" width="3" height="15" fill="rgb(239,92,10)"/><text x="510.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.24%)</title><rect x="507" y="308" width="3" height="15" fill="rgb(211,109,53)"/><text x="510.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:54) (1 samples, 0.24%)</title><rect x="510" y="324" width="3" height="15" fill="rgb(239,136,27)"/><text x="513.00" y="334.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.24%)</title><rect x="510" y="340" width="3" height="15" fill="rgb(234,120,34)"/><text x="513.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (5 samples, 1.20%)</title><rect x="501" y="276" width="15" height="15" fill="rgb(227,72,41)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.48%)</title><rect x="510" y="292" width="6" height="15" fill="rgb(227,77,18)"/><text x="513.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.48%)</title><rect x="510" y="308" width="6" height="15" fill="rgb(228,106,53)"/><text x="513.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.24%)</title><rect x="513" y="324" width="3" height="15" fill="rgb(222,4,0)"/><text x="516.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.24%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(207,225,42)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.24%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(236,224,20)"/><text x="516.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4478) (1 samples, 0.24%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(205,71,8)"/><text x="516.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="516" y="292" width="2" height="15" fill="rgb(213,47,6)"/><text x="519.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3027) (1 samples, 0.24%)</title><rect x="516" y="308" width="2" height="15" fill="rgb(249,88,7)"/><text x="519.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.48%)</title><rect x="516" y="276" width="5" height="15" fill="rgb(206,111,3)"/><text x="519.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.24%)</title><rect x="518" y="292" width="3" height="15" fill="rgb(220,30,20)"/><text x="521.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1708) (1 samples, 0.24%)</title><rect x="518" y="308" width="3" height="15" fill="rgb(206,60,23)"/><text x="521.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.24%)</title><rect x="521" y="292" width="3" height="15" fill="rgb(215,85,25)"/><text x="524.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.24%)</title><rect x="521" y="308" width="3" height="15" fill="rgb(245,43,47)"/><text x="524.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.24%)</title><rect x="524" y="308" width="3" height="15" fill="rgb(217,48,41)"/><text x="527.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.24%)</title><rect x="527" y="324" width="3" height="15" fill="rgb(210,222,25)"/><text x="530.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (26 samples, 6.27%)</title><rect x="459" y="180" width="74" height="15" fill="rgb(217,192,46)"/><text x="462.00" y="190.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 6.27%)</title><rect x="459" y="196" width="74" height="15" fill="rgb(205,7,27)"/><text x="462.00" y="206.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (23 samples, 5.54%)</title><rect x="467" y="212" width="66" height="15" fill="rgb(209,66,28)"/><text x="470.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (16 samples, 3.86%)</title><rect x="487" y="228" width="46" height="15" fill="rgb(228,92,4)"/><text x="490.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 3.13%)</title><rect x="496" y="244" width="37" height="15" fill="rgb(215,120,34)"/><text x="499.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 2.65%)</title><rect x="501" y="260" width="32" height="15" fill="rgb(250,25,39)"/><text x="504.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.96%)</title><rect x="521" y="276" width="12" height="15" fill="rgb(216,129,35)"/><text x="524.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.72%)</title><rect x="524" y="292" width="9" height="15" fill="rgb(234,96,46)"/><text x="527.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (2 samples, 0.48%)</title><rect x="527" y="308" width="6" height="15" fill="rgb(215,171,19)"/><text x="530.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1875) (1 samples, 0.24%)</title><rect x="530" y="324" width="3" height="15" fill="rgb(214,211,37)"/><text x="533.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.24%)</title><rect x="533" y="196" width="3" height="15" fill="rgb(222,99,0)"/><text x="536.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.24%)</title><rect x="533" y="212" width="3" height="15" fill="rgb(238,197,24)"/><text x="536.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.24%)</title><rect x="533" y="228" width="3" height="15" fill="rgb(254,4,31)"/><text x="536.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.24%)</title><rect x="536" y="196" width="2" height="15" fill="rgb(216,163,1)"/><text x="539.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.24%)</title><rect x="536" y="212" width="2" height="15" fill="rgb(236,163,18)"/><text x="539.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.24%)</title><rect x="538" y="244" width="3" height="15" fill="rgb(238,99,32)"/><text x="541.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.48%)</title><rect x="538" y="228" width="6" height="15" fill="rgb(222,145,49)"/><text x="541.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.24%)</title><rect x="541" y="244" width="3" height="15" fill="rgb(210,133,1)"/><text x="544.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.24%)</title><rect x="541" y="260" width="3" height="15" fill="rgb(234,33,42)"/><text x="544.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.24%)</title><rect x="541" y="276" width="3" height="15" fill="rgb(254,56,53)"/><text x="544.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.72%)</title><rect x="538" y="196" width="9" height="15" fill="rgb(217,125,33)"/><text x="541.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.72%)</title><rect x="538" y="212" width="9" height="15" fill="rgb(223,216,39)"/><text x="541.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.24%)</title><rect x="544" y="228" width="3" height="15" fill="rgb(241,206,39)"/><text x="547.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.24%)</title><rect x="544" y="244" width="3" height="15" fill="rgb(206,121,51)"/><text x="547.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.24%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(247,190,30)"/><text x="547.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:38) (190 samples, 45.78%)</title><rect x="10" y="52" width="540" height="15" fill="rgb(242,128,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:37) (190 samples, 45.78%)</title><rect x="10" y="68" width="540" height="15" fill="rgb(223,109,29)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:29) (190 samples, 45.78%)</title><rect x="10" y="84" width="540" height="15" fill="rgb(222,222,48)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:23) (190 samples, 45.78%)</title><rect x="10" y="100" width="540" height="15" fill="rgb(229,225,54)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 45.54%)</title><rect x="12" y="116" width="538" height="15" fill="rgb(232,139,36)"/><text x="15.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (186 samples, 44.82%)</title><rect x="21" y="132" width="529" height="15" fill="rgb(232,125,35)"/><text x="24.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (163 samples, 39.28%)</title><rect x="86" y="148" width="464" height="15" fill="rgb(232,48,32)"/><text x="89.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (38 samples, 9.16%)</title><rect x="442" y="164" width="108" height="15" fill="rgb(205,110,28)"/><text x="445.00" y="174.50">_predict_prob..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.45%)</title><rect x="533" y="180" width="17" height="15" fill="rgb(225,35,31)"/><text x="536.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.24%)</title><rect x="547" y="196" width="3" height="15" fill="rgb(214,5,12)"/><text x="550.00" y="206.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:8) (1 samples, 0.24%)</title><rect x="550" y="292" width="3" height="15" fill="rgb(242,17,32)"/><text x="553.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="550" y="308" width="3" height="15" fill="rgb(214,77,42)"/><text x="553.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="550" y="324" width="3" height="15" fill="rgb(215,154,31)"/><text x="553.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.24%)</title><rect x="550" y="340" width="3" height="15" fill="rgb(206,34,1)"/><text x="553.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.24%)</title><rect x="550" y="356" width="3" height="15" fill="rgb(229,193,0)"/><text x="553.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.24%)</title><rect x="550" y="372" width="3" height="15" fill="rgb(220,211,50)"/><text x="553.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="550" y="388" width="3" height="15" fill="rgb(239,13,5)"/><text x="553.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="404" width="3" height="15" fill="rgb(218,195,19)"/><text x="553.00" y="414.50"></text></g><g><title>0x7febec3b8995 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="420" width="3" height="15" fill="rgb(208,117,10)"/><text x="553.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="436" width="3" height="15" fill="rgb(238,214,45)"/><text x="553.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="452" width="3" height="15" fill="rgb(236,102,29)"/><text x="553.00" y="462.50"></text></g><g><title>0x7febec3b8258 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="468" width="3" height="15" fill="rgb(224,221,38)"/><text x="553.00" y="478.50"></text></g><g><title>0x7febec405d7a (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="484" width="3" height="15" fill="rgb(245,170,8)"/><text x="553.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="500" width="3" height="15" fill="rgb(235,175,23)"/><text x="553.00" y="510.50"></text></g><g><title>0x7febec406345 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="516" width="3" height="15" fill="rgb(218,170,30)"/><text x="553.00" y="526.50"></text></g><g><title>0x7febec3fefec (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="532" width="3" height="15" fill="rgb(212,35,48)"/><text x="553.00" y="542.50"></text></g><g><title>0x7febec3fd56b (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="548" width="3" height="15" fill="rgb(226,226,46)"/><text x="553.00" y="558.50"></text></g><g><title>0x7febec3fcc6d (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="564" width="3" height="15" fill="rgb(236,13,38)"/><text x="553.00" y="574.50"></text></g><g><title>0x7febec3fc765 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="580" width="3" height="15" fill="rgb(249,49,47)"/><text x="553.00" y="590.50"></text></g><g><title>0x7febec40dff6 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="550" y="596" width="3" height="15" fill="rgb(238,165,37)"/><text x="553.00" y="606.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.24%)</title><rect x="553" y="932" width="2" height="15" fill="rgb(235,117,17)"/><text x="556.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.48%)</title><rect x="553" y="852" width="5" height="15" fill="rgb(225,186,54)"/><text x="556.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.48%)</title><rect x="553" y="868" width="5" height="15" fill="rgb(227,152,54)"/><text x="556.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.48%)</title><rect x="553" y="884" width="5" height="15" fill="rgb(219,98,9)"/><text x="556.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.48%)</title><rect x="553" y="900" width="5" height="15" fill="rgb(213,202,47)"/><text x="556.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.48%)</title><rect x="553" y="916" width="5" height="15" fill="rgb(208,129,18)"/><text x="556.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.24%)</title><rect x="555" y="932" width="3" height="15" fill="rgb(226,149,31)"/><text x="558.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.24%)</title><rect x="555" y="948" width="3" height="15" fill="rgb(250,21,7)"/><text x="558.00" y="958.50"></text></g><g><title>0x7febec16ffb5 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="555" y="964" width="3" height="15" fill="rgb(223,167,35)"/><text x="558.00" y="974.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.24%)</title><rect x="555" y="980" width="3" height="15" fill="rgb(246,95,41)"/><text x="558.00" y="990.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.24%)</title><rect x="558" y="884" width="3" height="15" fill="rgb(230,54,15)"/><text x="561.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.24%)</title><rect x="558" y="900" width="3" height="15" fill="rgb(240,26,19)"/><text x="561.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.24%)</title><rect x="558" y="916" width="3" height="15" fill="rgb(207,5,38)"/><text x="561.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.24%)</title><rect x="558" y="932" width="3" height="15" fill="rgb(217,229,34)"/><text x="561.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.24%)</title><rect x="558" y="948" width="3" height="15" fill="rgb(226,132,16)"/><text x="561.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.24%)</title><rect x="558" y="964" width="3" height="15" fill="rgb(228,158,3)"/><text x="561.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.24%)</title><rect x="558" y="980" width="3" height="15" fill="rgb(252,89,25)"/><text x="561.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.24%)</title><rect x="558" y="996" width="3" height="15" fill="rgb(221,104,2)"/><text x="561.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.48%)</title><rect x="558" y="852" width="6" height="15" fill="rgb(229,6,21)"/><text x="561.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.48%)</title><rect x="558" y="868" width="6" height="15" fill="rgb(214,82,48)"/><text x="561.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.24%)</title><rect x="561" y="884" width="3" height="15" fill="rgb(207,159,29)"/><text x="564.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2767) (1 samples, 0.24%)</title><rect x="561" y="900" width="3" height="15" fill="rgb(231,188,47)"/><text x="564.00" y="910.50"></text></g><g><title>get_metadata_lines (pkg_resources/__init__.py:1432) (1 samples, 0.24%)</title><rect x="561" y="916" width="3" height="15" fill="rgb(209,29,29)"/><text x="564.00" y="926.50"></text></g><g><title>get_metadata (pkg_resources/__init__.py:1420) (1 samples, 0.24%)</title><rect x="561" y="932" width="3" height="15" fill="rgb(247,12,42)"/><text x="564.00" y="942.50"></text></g><g><title>_get (pkg_resources/__init__.py:1616) (1 samples, 0.24%)</title><rect x="561" y="948" width="3" height="15" fill="rgb(217,154,42)"/><text x="564.00" y="958.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="561" y="964" width="3" height="15" fill="rgb(221,14,26)"/><text x="564.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.20%)</title><rect x="553" y="820" width="14" height="15" fill="rgb(217,210,40)"/><text x="556.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.20%)</title><rect x="553" y="836" width="14" height="15" fill="rgb(252,0,1)"/><text x="556.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.24%)</title><rect x="564" y="852" width="3" height="15" fill="rgb(210,126,11)"/><text x="567.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.24%)</title><rect x="564" y="868" width="3" height="15" fill="rgb(238,214,39)"/><text x="567.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.24%)</title><rect x="564" y="884" width="3" height="15" fill="rgb(243,137,13)"/><text x="567.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.24%)</title><rect x="564" y="900" width="3" height="15" fill="rgb(219,128,8)"/><text x="567.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.24%)</title><rect x="564" y="916" width="3" height="15" fill="rgb(237,139,21)"/><text x="567.00" y="926.50"></text></g><g><title>&lt;module&gt; (plistlib.py:214) (1 samples, 0.24%)</title><rect x="567" y="916" width="3" height="15" fill="rgb(215,177,12)"/><text x="570.00" y="926.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.24%)</title><rect x="567" y="932" width="3" height="15" fill="rgb(208,140,27)"/><text x="570.00" y="942.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.24%)</title><rect x="567" y="948" width="3" height="15" fill="rgb(246,26,8)"/><text x="570.00" y="958.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.24%)</title><rect x="567" y="964" width="3" height="15" fill="rgb(214,213,28)"/><text x="570.00" y="974.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.24%)</title><rect x="567" y="980" width="3" height="15" fill="rgb(210,185,32)"/><text x="570.00" y="990.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="567" y="996" width="3" height="15" fill="rgb(207,175,18)"/><text x="570.00" y="1006.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.24%)</title><rect x="567" y="1012" width="3" height="15" fill="rgb(227,129,35)"/><text x="570.00" y="1022.50"></text></g><g><title>_parse_sub (sre_parse.py:430) (1 samples, 0.24%)</title><rect x="567" y="1028" width="3" height="15" fill="rgb(214,76,17)"/><text x="570.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (2 samples, 0.48%)</title><rect x="567" y="820" width="5" height="15" fill="rgb(218,41,17)"/><text x="570.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.48%)</title><rect x="567" y="836" width="5" height="15" fill="rgb(230,218,53)"/><text x="570.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.48%)</title><rect x="567" y="852" width="5" height="15" fill="rgb(221,196,13)"/><text x="570.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.48%)</title><rect x="567" y="868" width="5" height="15" fill="rgb(230,160,34)"/><text x="570.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.48%)</title><rect x="567" y="884" width="5" height="15" fill="rgb(221,73,33)"/><text x="570.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="567" y="900" width="5" height="15" fill="rgb(205,40,37)"/><text x="570.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py:247) (1 samples, 0.24%)</title><rect x="570" y="916" width="2" height="15" fill="rgb(228,156,4)"/><text x="573.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (9 samples, 2.17%)</title><rect x="550" y="148" width="25" height="15" fill="rgb(214,111,21)"/><text x="553.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.17%)</title><rect x="550" y="164" width="25" height="15" fill="rgb(242,0,28)"/><text x="553.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.17%)</title><rect x="550" y="180" width="25" height="15" fill="rgb(208,144,20)"/><text x="553.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.17%)</title><rect x="550" y="196" width="25" height="15" fill="rgb(216,13,36)"/><text x="553.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.17%)</title><rect x="550" y="212" width="25" height="15" fill="rgb(242,84,28)"/><text x="553.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.17%)</title><rect x="550" y="228" width="25" height="15" fill="rgb(222,134,28)"/><text x="553.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.17%)</title><rect x="550" y="244" width="25" height="15" fill="rgb(235,195,49)"/><text x="553.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.17%)</title><rect x="550" y="260" width="25" height="15" fill="rgb(246,11,49)"/><text x="553.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.17%)</title><rect x="550" y="276" width="25" height="15" fill="rgb(242,89,29)"/><text x="553.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 1.93%)</title><rect x="553" y="292" width="22" height="15" fill="rgb(219,121,47)"/><text x="556.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="308" width="22" height="15" fill="rgb(246,116,42)"/><text x="556.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.93%)</title><rect x="553" y="324" width="22" height="15" fill="rgb(236,191,30)"/><text x="556.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.93%)</title><rect x="553" y="340" width="22" height="15" fill="rgb(229,162,48)"/><text x="556.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.93%)</title><rect x="553" y="356" width="22" height="15" fill="rgb(229,216,45)"/><text x="556.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="372" width="22" height="15" fill="rgb(218,66,1)"/><text x="556.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 1.93%)</title><rect x="553" y="388" width="22" height="15" fill="rgb(222,121,10)"/><text x="556.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="404" width="22" height="15" fill="rgb(213,27,34)"/><text x="556.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.93%)</title><rect x="553" y="420" width="22" height="15" fill="rgb(206,19,27)"/><text x="556.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.93%)</title><rect x="553" y="436" width="22" height="15" fill="rgb(214,128,8)"/><text x="556.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.93%)</title><rect x="553" y="452" width="22" height="15" fill="rgb(219,162,44)"/><text x="556.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="468" width="22" height="15" fill="rgb(208,220,27)"/><text x="556.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 1.93%)</title><rect x="553" y="484" width="22" height="15" fill="rgb(218,86,26)"/><text x="556.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="500" width="22" height="15" fill="rgb(217,161,29)"/><text x="556.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.93%)</title><rect x="553" y="516" width="22" height="15" fill="rgb(223,117,18)"/><text x="556.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.93%)</title><rect x="553" y="532" width="22" height="15" fill="rgb(248,145,16)"/><text x="556.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.93%)</title><rect x="553" y="548" width="22" height="15" fill="rgb(239,221,37)"/><text x="556.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="564" width="22" height="15" fill="rgb(238,125,43)"/><text x="556.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 1.93%)</title><rect x="553" y="580" width="22" height="15" fill="rgb(227,168,45)"/><text x="556.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="596" width="22" height="15" fill="rgb(239,219,31)"/><text x="556.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 1.93%)</title><rect x="553" y="612" width="22" height="15" fill="rgb(234,214,15)"/><text x="556.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="628" width="22" height="15" fill="rgb(250,63,29)"/><text x="556.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="644" width="22" height="15" fill="rgb(226,160,25)"/><text x="556.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.93%)</title><rect x="553" y="660" width="22" height="15" fill="rgb(226,28,19)"/><text x="556.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.93%)</title><rect x="553" y="676" width="22" height="15" fill="rgb(219,211,13)"/><text x="556.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.93%)</title><rect x="553" y="692" width="22" height="15" fill="rgb(232,193,8)"/><text x="556.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="708" width="22" height="15" fill="rgb(225,89,33)"/><text x="556.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 1.93%)</title><rect x="553" y="724" width="22" height="15" fill="rgb(218,69,51)"/><text x="556.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.93%)</title><rect x="553" y="740" width="22" height="15" fill="rgb(224,198,27)"/><text x="556.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.93%)</title><rect x="553" y="756" width="22" height="15" fill="rgb(216,192,8)"/><text x="556.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.93%)</title><rect x="553" y="772" width="22" height="15" fill="rgb(224,153,30)"/><text x="556.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.93%)</title><rect x="553" y="788" width="22" height="15" fill="rgb(242,94,41)"/><text x="556.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.93%)</title><rect x="553" y="804" width="22" height="15" fill="rgb(231,122,32)"/><text x="556.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.24%)</title><rect x="572" y="820" width="3" height="15" fill="rgb(227,193,48)"/><text x="575.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="572" y="836" width="3" height="15" fill="rgb(231,94,34)"/><text x="575.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="572" y="852" width="3" height="15" fill="rgb(224,23,23)"/><text x="575.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="572" y="868" width="3" height="15" fill="rgb(227,58,45)"/><text x="575.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="572" y="884" width="3" height="15" fill="rgb(245,9,47)"/><text x="575.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="572" y="900" width="3" height="15" fill="rgb(205,14,33)"/><text x="575.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.24%)</title><rect x="572" y="916" width="3" height="15" fill="rgb(220,161,32)"/><text x="575.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.24%)</title><rect x="572" y="932" width="3" height="15" fill="rgb(235,21,5)"/><text x="575.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.24%)</title><rect x="572" y="948" width="3" height="15" fill="rgb(230,113,8)"/><text x="575.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.24%)</title><rect x="572" y="964" width="3" height="15" fill="rgb(210,202,16)"/><text x="575.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.24%)</title><rect x="572" y="980" width="3" height="15" fill="rgb(216,43,34)"/><text x="575.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.24%)</title><rect x="572" y="996" width="3" height="15" fill="rgb(217,106,22)"/><text x="575.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="572" y="1012" width="3" height="15" fill="rgb(235,136,36)"/><text x="575.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.24%)</title><rect x="572" y="1028" width="3" height="15" fill="rgb(211,90,38)"/><text x="575.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="572" y="1044" width="3" height="15" fill="rgb(249,83,36)"/><text x="575.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.24%)</title><rect x="572" y="1060" width="3" height="15" fill="rgb(240,222,41)"/><text x="575.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="572" y="1076" width="3" height="15" fill="rgb(217,71,53)"/><text x="575.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:499) (1 samples, 0.24%)</title><rect x="572" y="1092" width="3" height="15" fill="rgb(209,121,40)"/><text x="575.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (1 samples, 0.24%)</title><rect x="575" y="148" width="3" height="15" fill="rgb(223,106,20)"/><text x="578.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="575" y="164" width="3" height="15" fill="rgb(238,77,44)"/><text x="578.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.24%)</title><rect x="575" y="180" width="3" height="15" fill="rgb(248,10,3)"/><text x="578.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="575" y="196" width="3" height="15" fill="rgb(234,165,18)"/><text x="578.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="575" y="212" width="3" height="15" fill="rgb(236,141,2)"/><text x="578.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="575" y="228" width="3" height="15" fill="rgb(227,10,54)"/><text x="578.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="575" y="244" width="3" height="15" fill="rgb(244,53,32)"/><text x="578.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="575" y="260" width="3" height="15" fill="rgb(253,21,47)"/><text x="578.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="575" y="276" width="3" height="15" fill="rgb(241,51,45)"/><text x="578.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.24%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(252,118,11)"/><text x="578.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(217,37,3)"/><text x="578.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(229,59,26)"/><text x="578.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="575" y="340" width="3" height="15" fill="rgb(238,4,15)"/><text x="578.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="575" y="356" width="3" height="15" fill="rgb(224,156,23)"/><text x="578.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(235,138,16)"/><text x="578.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.24%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(238,66,21)"/><text x="578.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="575" y="404" width="3" height="15" fill="rgb(246,29,20)"/><text x="578.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="575" y="420" width="3" height="15" fill="rgb(243,70,6)"/><text x="578.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="575" y="436" width="3" height="15" fill="rgb(228,86,34)"/><text x="578.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="575" y="452" width="3" height="15" fill="rgb(229,6,34)"/><text x="578.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="575" y="468" width="3" height="15" fill="rgb(205,114,16)"/><text x="578.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.24%)</title><rect x="575" y="484" width="3" height="15" fill="rgb(245,16,27)"/><text x="578.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="575" y="500" width="3" height="15" fill="rgb(254,30,48)"/><text x="578.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="575" y="516" width="3" height="15" fill="rgb(209,223,29)"/><text x="578.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="575" y="532" width="3" height="15" fill="rgb(220,71,26)"/><text x="578.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="575" y="548" width="3" height="15" fill="rgb(247,185,5)"/><text x="578.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="575" y="564" width="3" height="15" fill="rgb(226,132,16)"/><text x="578.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:232) (1 samples, 0.24%)</title><rect x="575" y="580" width="3" height="15" fill="rgb(213,208,22)"/><text x="578.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.24%)</title><rect x="575" y="596" width="3" height="15" fill="rgb(213,81,53)"/><text x="578.00" y="606.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.24%)</title><rect x="575" y="612" width="3" height="15" fill="rgb(214,15,12)"/><text x="578.00" y="622.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:88) (1 samples, 0.24%)</title><rect x="575" y="628" width="3" height="15" fill="rgb(212,128,46)"/><text x="578.00" y="638.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.24%)</title><rect x="578" y="1108" width="3" height="15" fill="rgb(207,70,46)"/><text x="581.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="578" y="1124" width="3" height="15" fill="rgb(242,217,38)"/><text x="581.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="578" y="1140" width="3" height="15" fill="rgb(246,127,42)"/><text x="581.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="578" y="1156" width="3" height="15" fill="rgb(215,224,39)"/><text x="581.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="578" y="1172" width="3" height="15" fill="rgb(223,136,28)"/><text x="581.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="578" y="1188" width="3" height="15" fill="rgb(251,154,26)"/><text x="581.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.24%)</title><rect x="578" y="1204" width="3" height="15" fill="rgb(242,91,47)"/><text x="581.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="578" y="1220" width="3" height="15" fill="rgb(216,69,30)"/><text x="581.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.24%)</title><rect x="578" y="1236" width="3" height="15" fill="rgb(227,99,0)"/><text x="581.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="578" y="1252" width="3" height="15" fill="rgb(247,133,2)"/><text x="581.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="578" y="1268" width="3" height="15" fill="rgb(222,75,21)"/><text x="581.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="578" y="1284" width="3" height="15" fill="rgb(227,91,40)"/><text x="581.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="578" y="1300" width="3" height="15" fill="rgb(238,185,24)"/><text x="581.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="578" y="1316" width="3" height="15" fill="rgb(205,113,29)"/><text x="581.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="578" y="1332" width="3" height="15" fill="rgb(232,48,42)"/><text x="581.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:19) (1 samples, 0.24%)</title><rect x="578" y="1348" width="3" height="15" fill="rgb(237,69,43)"/><text x="581.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.24%)</title><rect x="578" y="1364" width="3" height="15" fill="rgb(208,31,39)"/><text x="581.00" y="1374.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.24%)</title><rect x="578" y="1380" width="3" height="15" fill="rgb(243,93,15)"/><text x="581.00" y="1390.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:167) (1 samples, 0.24%)</title><rect x="578" y="1396" width="3" height="15" fill="rgb(244,6,45)"/><text x="581.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.24%)</title><rect x="581" y="1108" width="3" height="15" fill="rgb(219,25,34)"/><text x="584.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="581" y="1124" width="3" height="15" fill="rgb(246,69,23)"/><text x="584.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="581" y="1140" width="3" height="15" fill="rgb(252,146,45)"/><text x="584.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="581" y="1156" width="3" height="15" fill="rgb(245,160,1)"/><text x="584.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="581" y="1172" width="3" height="15" fill="rgb(238,143,54)"/><text x="584.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="581" y="1188" width="3" height="15" fill="rgb(245,173,49)"/><text x="584.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.24%)</title><rect x="581" y="1204" width="3" height="15" fill="rgb(221,21,51)"/><text x="584.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="581" y="1220" width="3" height="15" fill="rgb(234,188,20)"/><text x="584.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="581" y="1236" width="3" height="15" fill="rgb(244,120,31)"/><text x="584.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="581" y="1252" width="3" height="15" fill="rgb(219,69,23)"/><text x="584.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="581" y="1268" width="3" height="15" fill="rgb(207,144,11)"/><text x="584.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="581" y="1284" width="3" height="15" fill="rgb(207,146,48)"/><text x="584.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.24%)</title><rect x="581" y="1300" width="3" height="15" fill="rgb(238,158,48)"/><text x="584.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="581" y="1316" width="3" height="15" fill="rgb(236,180,50)"/><text x="584.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="581" y="1332" width="3" height="15" fill="rgb(222,92,2)"/><text x="584.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="581" y="1348" width="3" height="15" fill="rgb(207,34,10)"/><text x="584.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="581" y="1364" width="3" height="15" fill="rgb(220,226,14)"/><text x="584.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="581" y="1380" width="3" height="15" fill="rgb(245,143,40)"/><text x="584.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:17) (1 samples, 0.24%)</title><rect x="581" y="1396" width="3" height="15" fill="rgb(248,123,32)"/><text x="584.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="581" y="1412" width="3" height="15" fill="rgb(237,63,6)"/><text x="584.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="581" y="1428" width="3" height="15" fill="rgb(245,16,15)"/><text x="584.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="581" y="1444" width="3" height="15" fill="rgb(252,172,27)"/><text x="584.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="581" y="1460" width="3" height="15" fill="rgb(229,17,7)"/><text x="584.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="581" y="1476" width="3" height="15" fill="rgb(211,79,52)"/><text x="584.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py:33) (1 samples, 0.24%)</title><rect x="581" y="1492" width="3" height="15" fill="rgb(210,229,52)"/><text x="584.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="581" y="1508" width="3" height="15" fill="rgb(238,125,20)"/><text x="584.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="581" y="1524" width="3" height="15" fill="rgb(238,43,36)"/><text x="584.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.24%)</title><rect x="581" y="1540" width="3" height="15" fill="rgb(209,45,49)"/><text x="584.00" y="1550.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.24%)</title><rect x="581" y="1556" width="3" height="15" fill="rgb(230,164,15)"/><text x="584.00" y="1566.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.24%)</title><rect x="581" y="1572" width="3" height="15" fill="rgb(236,21,7)"/><text x="584.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="581" y="1588" width="3" height="15" fill="rgb(252,114,39)"/><text x="584.00" y="1598.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1604" width="3" height="15" fill="rgb(221,92,22)"/><text x="584.00" y="1614.50"></text></g><g><title>0x7febec3b8995 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1620" width="3" height="15" fill="rgb(245,73,28)"/><text x="584.00" y="1630.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1636" width="3" height="15" fill="rgb(226,164,29)"/><text x="584.00" y="1646.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1652" width="3" height="15" fill="rgb(209,200,32)"/><text x="584.00" y="1662.50"></text></g><g><title>0x7febec3b8258 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1668" width="3" height="15" fill="rgb(213,112,49)"/><text x="584.00" y="1678.50"></text></g><g><title>0x7febec405d7a (ld-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1684" width="3" height="15" fill="rgb(227,164,2)"/><text x="584.00" y="1694.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1700" width="3" height="15" fill="rgb(216,170,29)"/><text x="584.00" y="1710.50"></text></g><g><title>0x7febec406345 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1716" width="3" height="15" fill="rgb(231,43,8)"/><text x="584.00" y="1726.50"></text></g><g><title>0x7febec3fef28 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="581" y="1732" width="3" height="15" fill="rgb(222,99,20)"/><text x="584.00" y="1742.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.24%)</title><rect x="584" y="1460" width="3" height="15" fill="rgb(228,70,6)"/><text x="587.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.24%)</title><rect x="584" y="1476" width="3" height="15" fill="rgb(206,204,44)"/><text x="587.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.24%)</title><rect x="584" y="1492" width="3" height="15" fill="rgb(242,225,0)"/><text x="587.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.24%)</title><rect x="584" y="1508" width="3" height="15" fill="rgb(233,12,36)"/><text x="587.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:4) (14 samples, 3.37%)</title><rect x="550" y="52" width="40" height="15" fill="rgb(213,189,7)"/><text x="553.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 3.37%)</title><rect x="550" y="68" width="40" height="15" fill="rgb(237,33,34)"/><text x="553.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 3.37%)</title><rect x="550" y="84" width="40" height="15" fill="rgb(212,227,25)"/><text x="553.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 3.37%)</title><rect x="550" y="100" width="40" height="15" fill="rgb(253,57,28)"/><text x="553.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 3.37%)</title><rect x="550" y="116" width="40" height="15" fill="rgb(234,2,52)"/><text x="553.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 3.37%)</title><rect x="550" y="132" width="40" height="15" fill="rgb(213,4,11)"/><text x="553.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (4 samples, 0.96%)</title><rect x="578" y="148" width="12" height="15" fill="rgb(247,62,39)"/><text x="581.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="164" width="12" height="15" fill="rgb(230,78,25)"/><text x="581.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="180" width="12" height="15" fill="rgb(233,89,40)"/><text x="581.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="196" width="12" height="15" fill="rgb(250,216,35)"/><text x="581.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="212" width="12" height="15" fill="rgb(222,166,39)"/><text x="581.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="228" width="12" height="15" fill="rgb(215,153,32)"/><text x="581.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.96%)</title><rect x="578" y="244" width="12" height="15" fill="rgb(242,153,22)"/><text x="581.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="260" width="12" height="15" fill="rgb(245,197,26)"/><text x="581.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="276" width="12" height="15" fill="rgb(239,175,23)"/><text x="581.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="292" width="12" height="15" fill="rgb(241,124,29)"/><text x="581.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="308" width="12" height="15" fill="rgb(214,139,54)"/><text x="581.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="324" width="12" height="15" fill="rgb(252,140,44)"/><text x="581.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.96%)</title><rect x="578" y="340" width="12" height="15" fill="rgb(250,228,11)"/><text x="581.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="356" width="12" height="15" fill="rgb(244,217,52)"/><text x="581.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="372" width="12" height="15" fill="rgb(215,225,27)"/><text x="581.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="388" width="12" height="15" fill="rgb(217,13,29)"/><text x="581.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="404" width="12" height="15" fill="rgb(212,130,48)"/><text x="581.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="420" width="12" height="15" fill="rgb(214,1,21)"/><text x="581.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.96%)</title><rect x="578" y="436" width="12" height="15" fill="rgb(231,207,11)"/><text x="581.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="452" width="12" height="15" fill="rgb(233,46,15)"/><text x="581.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.96%)</title><rect x="578" y="468" width="12" height="15" fill="rgb(233,179,43)"/><text x="581.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="484" width="12" height="15" fill="rgb(236,143,23)"/><text x="581.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="500" width="12" height="15" fill="rgb(209,60,28)"/><text x="581.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="516" width="12" height="15" fill="rgb(218,43,20)"/><text x="581.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="532" width="12" height="15" fill="rgb(242,7,12)"/><text x="581.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="548" width="12" height="15" fill="rgb(231,50,51)"/><text x="581.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="564" width="12" height="15" fill="rgb(205,86,25)"/><text x="581.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.96%)</title><rect x="578" y="580" width="12" height="15" fill="rgb(226,22,30)"/><text x="581.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="596" width="12" height="15" fill="rgb(214,62,27)"/><text x="581.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="612" width="12" height="15" fill="rgb(230,48,42)"/><text x="581.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="628" width="12" height="15" fill="rgb(243,220,18)"/><text x="581.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="644" width="12" height="15" fill="rgb(239,205,35)"/><text x="581.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="660" width="12" height="15" fill="rgb(244,70,8)"/><text x="581.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.96%)</title><rect x="578" y="676" width="12" height="15" fill="rgb(251,7,34)"/><text x="581.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="692" width="12" height="15" fill="rgb(238,119,18)"/><text x="581.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="708" width="12" height="15" fill="rgb(248,133,22)"/><text x="581.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="724" width="12" height="15" fill="rgb(250,138,27)"/><text x="581.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="740" width="12" height="15" fill="rgb(248,177,41)"/><text x="581.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="756" width="12" height="15" fill="rgb(222,92,40)"/><text x="581.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.96%)</title><rect x="578" y="772" width="12" height="15" fill="rgb(235,157,28)"/><text x="581.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="788" width="12" height="15" fill="rgb(221,212,3)"/><text x="581.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="804" width="12" height="15" fill="rgb(243,130,51)"/><text x="581.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="820" width="12" height="15" fill="rgb(221,222,14)"/><text x="581.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="836" width="12" height="15" fill="rgb(247,126,53)"/><text x="581.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="852" width="12" height="15" fill="rgb(229,180,8)"/><text x="581.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.96%)</title><rect x="578" y="868" width="12" height="15" fill="rgb(225,220,10)"/><text x="581.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="884" width="12" height="15" fill="rgb(229,6,35)"/><text x="581.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.96%)</title><rect x="578" y="900" width="12" height="15" fill="rgb(238,33,42)"/><text x="581.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="916" width="12" height="15" fill="rgb(249,115,41)"/><text x="581.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="932" width="12" height="15" fill="rgb(233,147,34)"/><text x="581.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="948" width="12" height="15" fill="rgb(253,67,50)"/><text x="581.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="964" width="12" height="15" fill="rgb(241,90,2)"/><text x="581.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="980" width="12" height="15" fill="rgb(244,62,22)"/><text x="581.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="996" width="12" height="15" fill="rgb(214,37,42)"/><text x="581.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.96%)</title><rect x="578" y="1012" width="12" height="15" fill="rgb(253,111,10)"/><text x="581.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.96%)</title><rect x="578" y="1028" width="12" height="15" fill="rgb(230,104,51)"/><text x="581.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.96%)</title><rect x="578" y="1044" width="12" height="15" fill="rgb(244,189,47)"/><text x="581.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.96%)</title><rect x="578" y="1060" width="12" height="15" fill="rgb(211,61,43)"/><text x="581.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.96%)</title><rect x="578" y="1076" width="12" height="15" fill="rgb(208,46,6)"/><text x="581.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.96%)</title><rect x="578" y="1092" width="12" height="15" fill="rgb(247,29,26)"/><text x="581.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.48%)</title><rect x="584" y="1108" width="6" height="15" fill="rgb(241,128,27)"/><text x="587.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.48%)</title><rect x="584" y="1124" width="6" height="15" fill="rgb(213,138,3)"/><text x="587.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="584" y="1140" width="6" height="15" fill="rgb(234,184,7)"/><text x="587.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.48%)</title><rect x="584" y="1156" width="6" height="15" fill="rgb(207,160,52)"/><text x="587.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.48%)</title><rect x="584" y="1172" width="6" height="15" fill="rgb(236,176,29)"/><text x="587.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.48%)</title><rect x="584" y="1188" width="6" height="15" fill="rgb(243,167,9)"/><text x="587.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.48%)</title><rect x="584" y="1204" width="6" height="15" fill="rgb(235,184,29)"/><text x="587.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="584" y="1220" width="6" height="15" fill="rgb(221,222,21)"/><text x="587.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.48%)</title><rect x="584" y="1236" width="6" height="15" fill="rgb(235,61,40)"/><text x="587.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.48%)</title><rect x="584" y="1252" width="6" height="15" fill="rgb(224,152,8)"/><text x="587.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="584" y="1268" width="6" height="15" fill="rgb(235,19,54)"/><text x="587.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.48%)</title><rect x="584" y="1284" width="6" height="15" fill="rgb(237,67,20)"/><text x="587.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.48%)</title><rect x="584" y="1300" width="6" height="15" fill="rgb(236,217,46)"/><text x="587.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.48%)</title><rect x="584" y="1316" width="6" height="15" fill="rgb(217,114,44)"/><text x="587.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.48%)</title><rect x="584" y="1332" width="6" height="15" fill="rgb(253,140,8)"/><text x="587.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="584" y="1348" width="6" height="15" fill="rgb(209,0,32)"/><text x="587.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.48%)</title><rect x="584" y="1364" width="6" height="15" fill="rgb(225,36,4)"/><text x="587.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.48%)</title><rect x="584" y="1380" width="6" height="15" fill="rgb(251,36,37)"/><text x="587.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.48%)</title><rect x="584" y="1396" width="6" height="15" fill="rgb(220,122,12)"/><text x="587.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.48%)</title><rect x="584" y="1412" width="6" height="15" fill="rgb(252,45,7)"/><text x="587.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.48%)</title><rect x="584" y="1428" width="6" height="15" fill="rgb(248,92,49)"/><text x="587.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.48%)</title><rect x="584" y="1444" width="6" height="15" fill="rgb(218,24,22)"/><text x="587.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.24%)</title><rect x="587" y="1460" width="3" height="15" fill="rgb(217,9,18)"/><text x="590.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="587" y="1476" width="3" height="15" fill="rgb(223,84,42)"/><text x="590.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="587" y="1492" width="3" height="15" fill="rgb(208,195,1)"/><text x="590.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="587" y="1508" width="3" height="15" fill="rgb(205,32,54)"/><text x="590.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="587" y="1524" width="3" height="15" fill="rgb(233,213,45)"/><text x="590.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="587" y="1540" width="3" height="15" fill="rgb(251,150,46)"/><text x="590.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.24%)</title><rect x="587" y="1556" width="3" height="15" fill="rgb(248,102,9)"/><text x="590.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.24%)</title><rect x="587" y="1572" width="3" height="15" fill="rgb(247,87,53)"/><text x="590.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="587" y="1588" width="3" height="15" fill="rgb(222,1,43)"/><text x="590.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="587" y="1604" width="3" height="15" fill="rgb(225,201,45)"/><text x="590.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="587" y="1620" width="3" height="15" fill="rgb(215,217,41)"/><text x="590.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="587" y="1636" width="3" height="15" fill="rgb(245,159,0)"/><text x="590.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="587" y="1652" width="3" height="15" fill="rgb(214,147,29)"/><text x="590.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:36) (1 samples, 0.24%)</title><rect x="587" y="1668" width="3" height="15" fill="rgb(209,20,49)"/><text x="590.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="587" y="1684" width="3" height="15" fill="rgb(211,76,33)"/><text x="590.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="587" y="1700" width="3" height="15" fill="rgb(209,171,26)"/><text x="590.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="587" y="1716" width="3" height="15" fill="rgb(242,185,44)"/><text x="590.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.24%)</title><rect x="587" y="1732" width="3" height="15" fill="rgb(235,92,29)"/><text x="590.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.24%)</title><rect x="587" y="1748" width="3" height="15" fill="rgb(236,181,54)"/><text x="590.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.24%)</title><rect x="587" y="1764" width="3" height="15" fill="rgb(216,168,42)"/><text x="590.00" y="1774.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:28) (1 samples, 0.24%)</title><rect x="590" y="84" width="2" height="15" fill="rgb(238,193,41)"/><text x="593.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.24%)</title><rect x="590" y="100" width="2" height="15" fill="rgb(212,195,22)"/><text x="593.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.24%)</title><rect x="590" y="116" width="2" height="15" fill="rgb(226,58,36)"/><text x="593.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.24%)</title><rect x="590" y="132" width="2" height="15" fill="rgb(220,76,6)"/><text x="593.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.24%)</title><rect x="590" y="148" width="2" height="15" fill="rgb(251,80,34)"/><text x="593.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.24%)</title><rect x="590" y="164" width="2" height="15" fill="rgb(253,184,48)"/><text x="593.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.24%)</title><rect x="590" y="180" width="2" height="15" fill="rgb(212,37,32)"/><text x="593.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.24%)</title><rect x="590" y="196" width="2" height="15" fill="rgb(248,163,8)"/><text x="593.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="590" y="212" width="2" height="15" fill="rgb(242,145,36)"/><text x="593.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="590" y="228" width="2" height="15" fill="rgb(240,90,28)"/><text x="593.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="590" y="244" width="2" height="15" fill="rgb(216,7,13)"/><text x="593.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="590" y="260" width="2" height="15" fill="rgb(240,53,3)"/><text x="593.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="590" y="276" width="2" height="15" fill="rgb(213,211,52)"/><text x="593.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.24%)</title><rect x="590" y="292" width="2" height="15" fill="rgb(213,209,11)"/><text x="593.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="590" y="308" width="2" height="15" fill="rgb(243,124,50)"/><text x="593.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="590" y="324" width="2" height="15" fill="rgb(241,176,10)"/><text x="593.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="590" y="340" width="2" height="15" fill="rgb(230,174,16)"/><text x="593.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="590" y="356" width="2" height="15" fill="rgb(212,91,0)"/><text x="593.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="590" y="372" width="2" height="15" fill="rgb(215,90,28)"/><text x="593.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:44) (1 samples, 0.24%)</title><rect x="590" y="388" width="2" height="15" fill="rgb(237,89,44)"/><text x="593.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="590" y="404" width="2" height="15" fill="rgb(238,191,31)"/><text x="593.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="590" y="420" width="2" height="15" fill="rgb(248,155,9)"/><text x="593.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="590" y="436" width="2" height="15" fill="rgb(221,97,27)"/><text x="593.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.24%)</title><rect x="590" y="452" width="2" height="15" fill="rgb(227,212,7)"/><text x="593.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.24%)</title><rect x="590" y="468" width="2" height="15" fill="rgb(222,192,45)"/><text x="593.00" y="478.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:18) (1 samples, 0.24%)</title><rect x="592" y="100" width="3" height="15" fill="rgb(240,82,35)"/><text x="595.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.24%)</title><rect x="592" y="116" width="3" height="15" fill="rgb(216,165,28)"/><text x="595.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.24%)</title><rect x="592" y="132" width="3" height="15" fill="rgb(205,137,43)"/><text x="595.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.24%)</title><rect x="592" y="148" width="3" height="15" fill="rgb(205,116,1)"/><text x="595.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.24%)</title><rect x="592" y="164" width="3" height="15" fill="rgb(242,229,34)"/><text x="595.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.24%)</title><rect x="592" y="180" width="3" height="15" fill="rgb(222,174,27)"/><text x="595.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.24%)</title><rect x="601" y="116" width="3" height="15" fill="rgb(249,27,28)"/><text x="604.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:148) (1 samples, 0.24%)</title><rect x="601" y="132" width="3" height="15" fill="rgb(247,39,15)"/><text x="604.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.24%)</title><rect x="615" y="148" width="3" height="15" fill="rgb(212,28,51)"/><text x="618.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.24%)</title><rect x="618" y="148" width="3" height="15" fill="rgb(236,50,2)"/><text x="621.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (2 samples, 0.48%)</title><rect x="627" y="164" width="5" height="15" fill="rgb(253,151,23)"/><text x="630.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.48%)</title><rect x="632" y="164" width="6" height="15" fill="rgb(232,194,3)"/><text x="635.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.24%)</title><rect x="652" y="180" width="3" height="15" fill="rgb(231,225,48)"/><text x="655.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 2.89%)</title><rect x="655" y="180" width="34" height="15" fill="rgb(237,148,52)"/><text x="658.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.48%)</title><rect x="683" y="196" width="6" height="15" fill="rgb(207,172,2)"/><text x="686.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.24%)</title><rect x="712" y="244" width="3" height="15" fill="rgb(239,157,27)"/><text x="715.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.24%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(218,158,9)"/><text x="715.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.24%)</title><rect x="712" y="276" width="3" height="15" fill="rgb(210,162,1)"/><text x="715.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.24%)</title><rect x="712" y="292" width="3" height="15" fill="rgb(213,196,52)"/><text x="715.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.24%)</title><rect x="712" y="308" width="3" height="15" fill="rgb(218,78,50)"/><text x="715.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 0.96%)</title><rect x="706" y="212" width="12" height="15" fill="rgb(241,173,20)"/><text x="709.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.72%)</title><rect x="709" y="228" width="9" height="15" fill="rgb(234,84,8)"/><text x="712.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.24%)</title><rect x="715" y="244" width="3" height="15" fill="rgb(221,181,39)"/><text x="718.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.24%)</title><rect x="715" y="260" width="3" height="15" fill="rgb(224,143,37)"/><text x="718.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 2.17%)</title><rect x="700" y="196" width="26" height="15" fill="rgb(238,135,6)"/><text x="703.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.72%)</title><rect x="718" y="212" width="8" height="15" fill="rgb(245,52,39)"/><text x="721.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.48%)</title><rect x="720" y="228" width="6" height="15" fill="rgb(208,47,22)"/><text x="723.00" y="238.50"></text></g><g><title>0x7febec151120 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="735" y="276" width="2" height="15" fill="rgb(250,112,39)"/><text x="738.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (2 samples, 0.48%)</title><rect x="735" y="260" width="5" height="15" fill="rgb(228,138,38)"/><text x="738.00" y="270.50"></text></g><g><title>0x7febec151124 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="737" y="276" width="3" height="15" fill="rgb(238,28,32)"/><text x="740.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.24%)</title><rect x="740" y="260" width="3" height="15" fill="rgb(241,47,1)"/><text x="743.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="743" y="260" width="3" height="15" fill="rgb(235,215,16)"/><text x="746.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="743" y="276" width="3" height="15" fill="rgb(231,186,35)"/><text x="746.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="743" y="292" width="3" height="15" fill="rgb(228,128,20)"/><text x="746.00" y="302.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.24%)</title><rect x="746" y="292" width="3" height="15" fill="rgb(210,173,21)"/><text x="749.00" y="302.50"></text></g><g><title>0x7febeb352ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="746" y="308" width="3" height="15" fill="rgb(234,161,22)"/><text x="749.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.48%)</title><rect x="746" y="260" width="6" height="15" fill="rgb(206,149,0)"/><text x="749.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.48%)</title><rect x="746" y="276" width="6" height="15" fill="rgb(221,143,24)"/><text x="749.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.24%)</title><rect x="749" y="292" width="3" height="15" fill="rgb(210,40,20)"/><text x="752.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.24%)</title><rect x="749" y="308" width="3" height="15" fill="rgb(211,223,35)"/><text x="752.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.24%)</title><rect x="749" y="324" width="3" height="15" fill="rgb(254,156,46)"/><text x="752.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.24%)</title><rect x="752" y="260" width="2" height="15" fill="rgb(243,57,17)"/><text x="755.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.24%)</title><rect x="752" y="276" width="2" height="15" fill="rgb(212,34,21)"/><text x="755.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.24%)</title><rect x="752" y="292" width="2" height="15" fill="rgb(237,4,37)"/><text x="755.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.24%)</title><rect x="752" y="308" width="2" height="15" fill="rgb(241,134,10)"/><text x="755.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.48%)</title><rect x="760" y="308" width="6" height="15" fill="rgb(236,44,37)"/><text x="763.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.48%)</title><rect x="760" y="324" width="6" height="15" fill="rgb(240,78,30)"/><text x="763.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.48%)</title><rect x="760" y="340" width="6" height="15" fill="rgb(226,219,18)"/><text x="763.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.48%)</title><rect x="760" y="356" width="6" height="15" fill="rgb(238,161,20)"/><text x="763.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.48%)</title><rect x="760" y="372" width="6" height="15" fill="rgb(238,30,45)"/><text x="763.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.48%)</title><rect x="760" y="388" width="6" height="15" fill="rgb(217,167,50)"/><text x="763.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.48%)</title><rect x="766" y="324" width="6" height="15" fill="rgb(224,59,29)"/><text x="769.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.24%)</title><rect x="772" y="340" width="2" height="15" fill="rgb(234,60,46)"/><text x="775.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.24%)</title><rect x="772" y="356" width="2" height="15" fill="rgb(252,104,36)"/><text x="775.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.24%)</title><rect x="772" y="372" width="2" height="15" fill="rgb(208,211,37)"/><text x="775.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.24%)</title><rect x="772" y="388" width="2" height="15" fill="rgb(218,229,7)"/><text x="775.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.24%)</title><rect x="774" y="356" width="3" height="15" fill="rgb(254,29,28)"/><text x="777.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.24%)</title><rect x="774" y="372" width="3" height="15" fill="rgb(221,56,33)"/><text x="777.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.24%)</title><rect x="774" y="388" width="3" height="15" fill="rgb(252,5,5)"/><text x="777.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="774" y="404" width="3" height="15" fill="rgb(244,95,38)"/><text x="777.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.24%)</title><rect x="774" y="420" width="3" height="15" fill="rgb(216,135,9)"/><text x="777.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.24%)</title><rect x="774" y="436" width="3" height="15" fill="rgb(234,118,18)"/><text x="777.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.24%)</title><rect x="774" y="452" width="3" height="15" fill="rgb(240,108,43)"/><text x="777.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="774" y="468" width="3" height="15" fill="rgb(241,136,28)"/><text x="777.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:482) (1 samples, 0.24%)</title><rect x="777" y="356" width="3" height="15" fill="rgb(225,223,14)"/><text x="780.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.24%)</title><rect x="780" y="356" width="3" height="15" fill="rgb(239,140,42)"/><text x="783.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.24%)</title><rect x="780" y="372" width="3" height="15" fill="rgb(239,25,10)"/><text x="783.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.24%)</title><rect x="780" y="388" width="3" height="15" fill="rgb(236,94,11)"/><text x="783.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:77) (1 samples, 0.24%)</title><rect x="780" y="404" width="3" height="15" fill="rgb(221,7,53)"/><text x="783.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.24%)</title><rect x="783" y="372" width="3" height="15" fill="rgb(229,56,20)"/><text x="786.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:753) (1 samples, 0.24%)</title><rect x="783" y="388" width="3" height="15" fill="rgb(231,43,20)"/><text x="786.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.24%)</title><rect x="786" y="372" width="3" height="15" fill="rgb(243,27,25)"/><text x="789.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.24%)</title><rect x="786" y="388" width="3" height="15" fill="rgb(223,13,21)"/><text x="789.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1059) (1 samples, 0.24%)</title><rect x="786" y="404" width="3" height="15" fill="rgb(253,65,11)"/><text x="789.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.24%)</title><rect x="789" y="372" width="2" height="15" fill="rgb(244,54,43)"/><text x="792.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1699) (1 samples, 0.24%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(236,138,44)"/><text x="792.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:256) (1 samples, 0.24%)</title><rect x="791" y="372" width="3" height="15" fill="rgb(232,86,14)"/><text x="794.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (2 samples, 0.48%)</title><rect x="794" y="388" width="6" height="15" fill="rgb(214,9,11)"/><text x="797.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (2 samples, 0.48%)</title><rect x="794" y="404" width="6" height="15" fill="rgb(238,104,39)"/><text x="797.00" y="414.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 4.10%)</title><rect x="754" y="260" width="49" height="15" fill="rgb(215,111,51)"/><text x="757.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 4.10%)</title><rect x="754" y="276" width="49" height="15" fill="rgb(237,94,48)"/><text x="757.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 3.61%)</title><rect x="760" y="292" width="43" height="15" fill="rgb(230,176,21)"/><text x="763.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 3.13%)</title><rect x="766" y="308" width="37" height="15" fill="rgb(250,153,54)"/><text x="769.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 2.65%)</title><rect x="772" y="324" width="31" height="15" fill="rgb(238,6,53)"/><text x="775.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 2.41%)</title><rect x="774" y="340" width="29" height="15" fill="rgb(239,161,27)"/><text x="777.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (7 samples, 1.69%)</title><rect x="783" y="356" width="20" height="15" fill="rgb(206,149,50)"/><text x="786.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (3 samples, 0.72%)</title><rect x="794" y="372" width="9" height="15" fill="rgb(221,72,40)"/><text x="797.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2161) (1 samples, 0.24%)</title><rect x="800" y="388" width="3" height="15" fill="rgb(235,24,34)"/><text x="803.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (27 samples, 6.51%)</title><rect x="729" y="244" width="77" height="15" fill="rgb(209,198,18)"/><text x="732.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.24%)</title><rect x="803" y="260" width="3" height="15" fill="rgb(238,226,1)"/><text x="806.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.24%)</title><rect x="803" y="276" width="3" height="15" fill="rgb(207,2,5)"/><text x="806.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="806" y="260" width="2" height="15" fill="rgb(251,166,10)"/><text x="809.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="806" y="276" width="2" height="15" fill="rgb(231,86,37)"/><text x="809.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="806" y="292" width="2" height="15" fill="rgb(251,197,53)"/><text x="809.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.24%)</title><rect x="808" y="260" width="3" height="15" fill="rgb(237,72,32)"/><text x="811.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="808" y="276" width="3" height="15" fill="rgb(210,151,5)"/><text x="811.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.24%)</title><rect x="808" y="292" width="3" height="15" fill="rgb(238,220,49)"/><text x="811.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="811" y="260" width="3" height="15" fill="rgb(219,188,46)"/><text x="814.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="811" y="276" width="3" height="15" fill="rgb(232,1,17)"/><text x="814.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.24%)</title><rect x="811" y="292" width="3" height="15" fill="rgb(237,41,51)"/><text x="814.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.24%)</title><rect x="811" y="308" width="3" height="15" fill="rgb(219,219,28)"/><text x="814.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.24%)</title><rect x="811" y="324" width="3" height="15" fill="rgb(231,0,22)"/><text x="814.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.24%)</title><rect x="814" y="276" width="3" height="15" fill="rgb(235,209,28)"/><text x="817.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.24%)</title><rect x="814" y="292" width="3" height="15" fill="rgb(247,99,31)"/><text x="817.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.24%)</title><rect x="817" y="324" width="3" height="15" fill="rgb(254,41,8)"/><text x="820.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.48%)</title><rect x="817" y="308" width="6" height="15" fill="rgb(215,75,12)"/><text x="820.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="820" y="324" width="3" height="15" fill="rgb(231,43,33)"/><text x="823.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.24%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(217,14,46)"/><text x="823.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.24%)</title><rect x="820" y="356" width="3" height="15" fill="rgb(236,182,52)"/><text x="823.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.24%)</title><rect x="820" y="372" width="3" height="15" fill="rgb(235,167,6)"/><text x="823.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.72%)</title><rect x="817" y="292" width="9" height="15" fill="rgb(219,61,1)"/><text x="820.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.24%)</title><rect x="823" y="308" width="3" height="15" fill="rgb(229,52,2)"/><text x="826.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.24%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(253,22,33)"/><text x="826.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:229) (1 samples, 0.24%)</title><rect x="823" y="340" width="3" height="15" fill="rgb(230,37,48)"/><text x="826.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 8.67%)</title><rect x="726" y="196" width="102" height="15" fill="rgb(228,224,4)"/><text x="729.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 8.67%)</title><rect x="726" y="212" width="102" height="15" fill="rgb(224,121,40)"/><text x="729.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (36 samples, 8.67%)</title><rect x="726" y="228" width="102" height="15" fill="rgb(225,56,19)"/><text x="729.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 1.93%)</title><rect x="806" y="244" width="22" height="15" fill="rgb(248,148,11)"/><text x="809.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.20%)</title><rect x="814" y="260" width="14" height="15" fill="rgb(235,22,25)"/><text x="817.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.96%)</title><rect x="817" y="276" width="11" height="15" fill="rgb(235,119,24)"/><text x="820.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.24%)</title><rect x="826" y="292" width="2" height="15" fill="rgb(234,155,3)"/><text x="829.00" y="302.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.48%)</title><rect x="834" y="244" width="6" height="15" fill="rgb(243,86,2)"/><text x="837.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.24%)</title><rect x="840" y="244" width="3" height="15" fill="rgb(225,101,14)"/><text x="843.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.24%)</title><rect x="851" y="260" width="3" height="15" fill="rgb(208,183,11)"/><text x="854.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.24%)</title><rect x="854" y="276" width="3" height="15" fill="rgb(226,182,47)"/><text x="857.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.24%)</title><rect x="857" y="276" width="3" height="15" fill="rgb(240,107,29)"/><text x="860.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.24%)</title><rect x="857" y="292" width="3" height="15" fill="rgb(216,192,6)"/><text x="860.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.24%)</title><rect x="857" y="308" width="3" height="15" fill="rgb(252,80,0)"/><text x="860.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.24%)</title><rect x="860" y="356" width="3" height="15" fill="rgb(247,82,19)"/><text x="863.00" y="366.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:931) (2 samples, 0.48%)</title><rect x="860" y="308" width="5" height="15" fill="rgb(222,200,28)"/><text x="863.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (2 samples, 0.48%)</title><rect x="860" y="324" width="5" height="15" fill="rgb(245,181,51)"/><text x="863.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (2 samples, 0.48%)</title><rect x="860" y="340" width="5" height="15" fill="rgb(229,109,39)"/><text x="863.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.24%)</title><rect x="863" y="356" width="2" height="15" fill="rgb(229,141,5)"/><text x="866.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.24%)</title><rect x="863" y="372" width="2" height="15" fill="rgb(221,87,51)"/><text x="866.00" y="382.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.24%)</title><rect x="863" y="388" width="2" height="15" fill="rgb(254,227,53)"/><text x="866.00" y="398.50"></text></g><g><title>new_array_for_sum (common.c:851) (1 samples, 0.24%)</title><rect x="865" y="340" width="3" height="15" fill="rgb(216,69,12)"/><text x="868.00" y="350.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.24%)</title><rect x="868" y="340" width="3" height="15" fill="rgb(214,15,40)"/><text x="871.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.24%)</title><rect x="868" y="356" width="3" height="15" fill="rgb(213,25,9)"/><text x="871.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.24%)</title><rect x="868" y="372" width="3" height="15" fill="rgb(225,162,33)"/><text x="871.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.24%)</title><rect x="868" y="388" width="3" height="15" fill="rgb(214,115,18)"/><text x="871.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.24%)</title><rect x="868" y="404" width="3" height="15" fill="rgb(210,1,45)"/><text x="871.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.24%)</title><rect x="868" y="420" width="3" height="15" fill="rgb(208,5,16)"/><text x="871.00" y="430.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (3 samples, 0.72%)</title><rect x="865" y="324" width="9" height="15" fill="rgb(219,205,23)"/><text x="868.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:933) (1 samples, 0.24%)</title><rect x="871" y="340" width="3" height="15" fill="rgb(228,82,28)"/><text x="874.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (17 samples, 4.10%)</title><rect x="828" y="228" width="49" height="15" fill="rgb(215,75,25)"/><text x="831.00" y="238.50">_run..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (12 samples, 2.89%)</title><rect x="843" y="244" width="34" height="15" fill="rgb(240,87,34)"/><text x="846.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 1.93%)</title><rect x="854" y="260" width="23" height="15" fill="rgb(245,190,36)"/><text x="857.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.45%)</title><rect x="860" y="276" width="17" height="15" fill="rgb(243,141,48)"/><text x="863.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 1.45%)</title><rect x="860" y="292" width="17" height="15" fill="rgb(206,65,51)"/><text x="863.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.96%)</title><rect x="865" y="308" width="12" height="15" fill="rgb(214,105,46)"/><text x="868.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.24%)</title><rect x="874" y="324" width="3" height="15" fill="rgb(214,63,19)"/><text x="877.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.24%)</title><rect x="874" y="340" width="3" height="15" fill="rgb(238,134,6)"/><text x="877.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="874" y="356" width="3" height="15" fill="rgb(253,228,0)"/><text x="877.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="874" y="372" width="3" height="15" fill="rgb(244,164,47)"/><text x="877.00" y="382.50"></text></g><g><title>sgemv_kernel_4x1 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="874" y="388" width="3" height="15" fill="rgb(237,43,22)"/><text x="877.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.24%)</title><rect x="882" y="260" width="3" height="15" fill="rgb(212,194,22)"/><text x="885.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.24%)</title><rect x="882" y="276" width="3" height="15" fill="rgb(251,212,13)"/><text x="885.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.24%)</title><rect x="882" y="292" width="3" height="15" fill="rgb(211,159,0)"/><text x="885.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.24%)</title><rect x="885" y="276" width="3" height="15" fill="rgb(214,6,1)"/><text x="888.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.24%)</title><rect x="888" y="308" width="3" height="15" fill="rgb(231,121,15)"/><text x="891.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1288) (1 samples, 0.24%)</title><rect x="888" y="324" width="3" height="15" fill="rgb(230,46,35)"/><text x="891.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.48%)</title><rect x="888" y="292" width="6" height="15" fill="rgb(254,189,5)"/><text x="891.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="891" y="308" width="3" height="15" fill="rgb(245,3,50)"/><text x="894.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2758) (1 samples, 0.24%)</title><rect x="891" y="324" width="3" height="15" fill="rgb(208,158,13)"/><text x="894.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.24%)</title><rect x="894" y="292" width="3" height="15" fill="rgb(205,125,18)"/><text x="897.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.24%)</title><rect x="894" y="308" width="3" height="15" fill="rgb(246,182,24)"/><text x="897.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.24%)</title><rect x="894" y="324" width="3" height="15" fill="rgb(246,61,8)"/><text x="897.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:600) (1 samples, 0.24%)</title><rect x="894" y="340" width="3" height="15" fill="rgb(211,186,22)"/><text x="897.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.20%)</title><rect x="885" y="260" width="14" height="15" fill="rgb(226,141,42)"/><text x="888.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.96%)</title><rect x="888" y="276" width="11" height="15" fill="rgb(215,203,12)"/><text x="891.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.24%)</title><rect x="897" y="292" width="2" height="15" fill="rgb(216,217,7)"/><text x="900.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.24%)</title><rect x="897" y="308" width="2" height="15" fill="rgb(215,95,16)"/><text x="900.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="897" y="324" width="2" height="15" fill="rgb(230,88,14)"/><text x="900.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.24%)</title><rect x="899" y="260" width="3" height="15" fill="rgb(209,132,12)"/><text x="902.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (10 samples, 2.41%)</title><rect x="877" y="228" width="28" height="15" fill="rgb(238,217,42)"/><text x="880.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.93%)</title><rect x="882" y="244" width="23" height="15" fill="rgb(205,22,39)"/><text x="885.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.24%)</title><rect x="902" y="260" width="3" height="15" fill="rgb(227,6,29)"/><text x="905.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.24%)</title><rect x="905" y="228" width="3" height="15" fill="rgb(223,78,50)"/><text x="908.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="911" y="244" width="3" height="15" fill="rgb(218,117,10)"/><text x="914.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="911" y="260" width="3" height="15" fill="rgb(217,133,21)"/><text x="914.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.24%)</title><rect x="911" y="276" width="3" height="15" fill="rgb(217,170,11)"/><text x="914.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.24%)</title><rect x="911" y="292" width="3" height="15" fill="rgb(210,43,25)"/><text x="914.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.24%)</title><rect x="914" y="308" width="3" height="15" fill="rgb(207,5,33)"/><text x="917.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.24%)</title><rect x="914" y="324" width="3" height="15" fill="rgb(241,100,54)"/><text x="917.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.24%)</title><rect x="914" y="340" width="3" height="15" fill="rgb(216,158,19)"/><text x="917.00" y="350.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.24%)</title><rect x="917" y="324" width="2" height="15" fill="rgb(214,9,23)"/><text x="920.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="917" y="340" width="2" height="15" fill="rgb(241,88,24)"/><text x="920.00" y="350.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.24%)</title><rect x="919" y="324" width="3" height="15" fill="rgb(233,221,16)"/><text x="922.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="919" y="340" width="3" height="15" fill="rgb(254,81,50)"/><text x="922.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.24%)</title><rect x="922" y="340" width="3" height="15" fill="rgb(229,30,14)"/><text x="925.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.24%)</title><rect x="922" y="356" width="3" height="15" fill="rgb(241,139,52)"/><text x="925.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.24%)</title><rect x="922" y="372" width="3" height="15" fill="rgb(237,164,21)"/><text x="925.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (5 samples, 1.20%)</title><rect x="914" y="276" width="14" height="15" fill="rgb(215,82,5)"/><text x="917.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (5 samples, 1.20%)</title><rect x="914" y="292" width="14" height="15" fill="rgb(243,106,49)"/><text x="917.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (4 samples, 0.96%)</title><rect x="917" y="308" width="11" height="15" fill="rgb(210,34,30)"/><text x="920.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.48%)</title><rect x="922" y="324" width="6" height="15" fill="rgb(236,79,39)"/><text x="925.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.24%)</title><rect x="925" y="340" width="3" height="15" fill="rgb(229,129,13)"/><text x="928.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.24%)</title><rect x="925" y="356" width="3" height="15" fill="rgb(254,212,38)"/><text x="928.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:154) (1 samples, 0.24%)</title><rect x="925" y="372" width="3" height="15" fill="rgb(234,137,16)"/><text x="928.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.45%)</title><rect x="914" y="260" width="17" height="15" fill="rgb(238,161,8)"/><text x="917.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.24%)</title><rect x="928" y="276" width="3" height="15" fill="rgb(223,43,4)"/><text x="931.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.24%)</title><rect x="928" y="292" width="3" height="15" fill="rgb(221,30,42)"/><text x="931.00" y="302.50"></text></g><g><title>0x7febd741833d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="928" y="308" width="3" height="15" fill="rgb(206,190,21)"/><text x="931.00" y="318.50"></text></g><g><title>0x7febd743a214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="928" y="324" width="3" height="15" fill="rgb(236,65,15)"/><text x="931.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.24%)</title><rect x="928" y="340" width="3" height="15" fill="rgb(220,198,6)"/><text x="931.00" y="350.50"></text></g><g><title>0x7febec2afe06 (libm-2.29.so) (1 samples, 0.24%)</title><rect x="928" y="356" width="3" height="15" fill="rgb(235,212,31)"/><text x="931.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.69%)</title><rect x="914" y="244" width="20" height="15" fill="rgb(232,79,26)"/><text x="917.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.24%)</title><rect x="931" y="260" width="3" height="15" fill="rgb(217,206,53)"/><text x="934.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.24%)</title><rect x="931" y="276" width="3" height="15" fill="rgb(225,164,5)"/><text x="934.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.24%)</title><rect x="931" y="292" width="3" height="15" fill="rgb(206,26,24)"/><text x="934.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.24%)</title><rect x="931" y="308" width="3" height="15" fill="rgb(209,213,29)"/><text x="934.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (10 samples, 2.41%)</title><rect x="908" y="228" width="28" height="15" fill="rgb(207,216,16)"/><text x="911.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.24%)</title><rect x="934" y="244" width="2" height="15" fill="rgb(219,225,49)"/><text x="937.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.24%)</title><rect x="934" y="260" width="2" height="15" fill="rgb(249,161,27)"/><text x="937.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.24%)</title><rect x="936" y="228" width="3" height="15" fill="rgb(233,173,3)"/><text x="939.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.24%)</title><rect x="942" y="244" width="3" height="15" fill="rgb(216,88,34)"/><text x="945.00" y="254.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.24%)</title><rect x="956" y="308" width="3" height="15" fill="rgb(217,108,27)"/><text x="959.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.24%)</title><rect x="956" y="324" width="3" height="15" fill="rgb(229,120,44)"/><text x="959.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.24%)</title><rect x="959" y="324" width="3" height="15" fill="rgb(228,87,40)"/><text x="962.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (48 samples, 11.57%)</title><rect x="828" y="212" width="137" height="15" fill="rgb(243,203,21)"/><text x="831.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (9 samples, 2.17%)</title><rect x="939" y="228" width="26" height="15" fill="rgb(242,47,25)"/><text x="942.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 1.69%)</title><rect x="945" y="244" width="20" height="15" fill="rgb(220,125,45)"/><text x="948.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.69%)</title><rect x="945" y="260" width="20" height="15" fill="rgb(254,143,37)"/><text x="948.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.45%)</title><rect x="948" y="276" width="17" height="15" fill="rgb(228,115,17)"/><text x="951.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.96%)</title><rect x="954" y="292" width="11" height="15" fill="rgb(237,192,46)"/><text x="957.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.48%)</title><rect x="959" y="308" width="6" height="15" fill="rgb(239,229,45)"/><text x="962.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.24%)</title><rect x="962" y="324" width="3" height="15" fill="rgb(227,41,40)"/><text x="965.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="962" y="340" width="3" height="15" fill="rgb(215,169,34)"/><text x="965.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (49 samples, 11.81%)</title><rect x="828" y="196" width="140" height="15" fill="rgb(241,127,1)"/><text x="831.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.24%)</title><rect x="965" y="212" width="3" height="15" fill="rgb(209,56,42)"/><text x="968.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (102 samples, 24.58%)</title><rect x="689" y="180" width="290" height="15" fill="rgb(228,102,31)"/><text x="692.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 0.96%)</title><rect x="968" y="196" width="11" height="15" fill="rgb(221,37,41)"/><text x="971.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.24%)</title><rect x="976" y="212" width="3" height="15" fill="rgb(233,46,23)"/><text x="979.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.24%)</title><rect x="979" y="180" width="3" height="15" fill="rgb(250,137,7)"/><text x="982.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.72%)</title><rect x="982" y="180" width="8" height="15" fill="rgb(243,180,11)"/><text x="985.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.24%)</title><rect x="990" y="180" width="3" height="15" fill="rgb(249,103,27)"/><text x="993.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 1.93%)</title><rect x="993" y="180" width="23" height="15" fill="rgb(205,35,17)"/><text x="996.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (134 samples, 32.29%)</title><rect x="638" y="164" width="381" height="15" fill="rgb(251,131,20)"/><text x="641.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.24%)</title><rect x="1016" y="180" width="3" height="15" fill="rgb(221,53,2)"/><text x="1019.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (5 samples, 1.20%)</title><rect x="1019" y="164" width="14" height="15" fill="rgb(233,41,36)"/><text x="1022.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 0.72%)</title><rect x="1025" y="180" width="8" height="15" fill="rgb(224,26,36)"/><text x="1028.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:45) (157 samples, 37.83%)</title><rect x="590" y="52" width="446" height="15" fill="rgb(222,22,7)"/><text x="593.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:44) (157 samples, 37.83%)</title><rect x="590" y="68" width="446" height="15" fill="rgb(226,23,11)"/><text x="593.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:29) (156 samples, 37.59%)</title><rect x="592" y="84" width="444" height="15" fill="rgb(232,117,14)"/><text x="595.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:23) (155 samples, 37.35%)</title><rect x="595" y="100" width="441" height="15" fill="rgb(238,0,6)"/><text x="598.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (152 samples, 36.63%)</title><rect x="604" y="116" width="432" height="15" fill="rgb(206,86,17)"/><text x="607.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (149 samples, 35.90%)</title><rect x="612" y="132" width="424" height="15" fill="rgb(230,70,4)"/><text x="615.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (146 samples, 35.18%)</title><rect x="621" y="148" width="415" height="15" fill="rgb(232,91,16)"/><text x="624.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="1033" y="164" width="3" height="15" fill="rgb(222,81,0)"/><text x="1036.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="1033" y="180" width="3" height="15" fill="rgb(227,226,54)"/><text x="1036.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="1033" y="196" width="3" height="15" fill="rgb(237,77,52)"/><text x="1036.00" y="206.50"></text></g><g><title>0x7febeb352f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="1033" y="212" width="3" height="15" fill="rgb(217,222,7)"/><text x="1036.00" y="222.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:28) (1 samples, 0.24%)</title><rect x="1036" y="84" width="3" height="15" fill="rgb(250,86,22)"/><text x="1039.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.24%)</title><rect x="1036" y="100" width="3" height="15" fill="rgb(234,169,33)"/><text x="1039.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.24%)</title><rect x="1036" y="116" width="3" height="15" fill="rgb(238,119,21)"/><text x="1039.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.24%)</title><rect x="1036" y="132" width="3" height="15" fill="rgb(233,83,3)"/><text x="1039.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.24%)</title><rect x="1036" y="148" width="3" height="15" fill="rgb(217,48,12)"/><text x="1039.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.24%)</title><rect x="1036" y="164" width="3" height="15" fill="rgb(210,229,13)"/><text x="1039.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="1036" y="180" width="3" height="15" fill="rgb(237,20,0)"/><text x="1039.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="1036" y="196" width="3" height="15" fill="rgb(223,113,22)"/><text x="1039.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="1036" y="212" width="3" height="15" fill="rgb(218,87,0)"/><text x="1039.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="1036" y="228" width="3" height="15" fill="rgb(224,182,37)"/><text x="1039.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="1036" y="244" width="3" height="15" fill="rgb(224,96,3)"/><text x="1039.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.24%)</title><rect x="1036" y="260" width="3" height="15" fill="rgb(209,145,26)"/><text x="1039.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="1036" y="276" width="3" height="15" fill="rgb(208,59,6)"/><text x="1039.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="1036" y="292" width="3" height="15" fill="rgb(208,44,42)"/><text x="1039.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="1036" y="308" width="3" height="15" fill="rgb(236,1,31)"/><text x="1039.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="1036" y="324" width="3" height="15" fill="rgb(254,206,40)"/><text x="1039.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="1036" y="340" width="3" height="15" fill="rgb(227,82,31)"/><text x="1039.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.24%)</title><rect x="1036" y="356" width="3" height="15" fill="rgb(221,45,48)"/><text x="1039.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="1036" y="372" width="3" height="15" fill="rgb(236,110,13)"/><text x="1039.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="1036" y="388" width="3" height="15" fill="rgb(206,178,51)"/><text x="1039.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="1036" y="404" width="3" height="15" fill="rgb(236,66,9)"/><text x="1039.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="1036" y="420" width="3" height="15" fill="rgb(219,4,29)"/><text x="1039.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="1036" y="436" width="3" height="15" fill="rgb(251,12,9)"/><text x="1039.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.24%)</title><rect x="1036" y="452" width="3" height="15" fill="rgb(250,173,27)"/><text x="1039.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="1036" y="468" width="3" height="15" fill="rgb(230,1,15)"/><text x="1039.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="1036" y="484" width="3" height="15" fill="rgb(224,2,19)"/><text x="1039.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.24%)</title><rect x="1036" y="500" width="3" height="15" fill="rgb(209,172,23)"/><text x="1039.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.24%)</title><rect x="1036" y="516" width="3" height="15" fill="rgb(235,127,3)"/><text x="1039.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.24%)</title><rect x="1036" y="532" width="3" height="15" fill="rgb(249,95,14)"/><text x="1039.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="1036" y="548" width="3" height="15" fill="rgb(217,209,25)"/><text x="1039.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="564" width="3" height="15" fill="rgb(231,181,47)"/><text x="1039.00" y="574.50"></text></g><g><title>0x7febec3b8995 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="580" width="3" height="15" fill="rgb(229,6,54)"/><text x="1039.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="596" width="3" height="15" fill="rgb(235,39,48)"/><text x="1039.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="612" width="3" height="15" fill="rgb(237,3,28)"/><text x="1039.00" y="622.50"></text></g><g><title>0x7febec3b8258 (libdl-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="628" width="3" height="15" fill="rgb(245,41,53)"/><text x="1039.00" y="638.50"></text></g><g><title>0x7febec405d7a (ld-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="644" width="3" height="15" fill="rgb(246,54,38)"/><text x="1039.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="660" width="3" height="15" fill="rgb(227,61,48)"/><text x="1039.00" y="670.50"></text></g><g><title>0x7febec406345 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="676" width="3" height="15" fill="rgb(206,142,53)"/><text x="1039.00" y="686.50"></text></g><g><title>0x7febec3fefec (ld-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="692" width="3" height="15" fill="rgb(232,69,46)"/><text x="1039.00" y="702.50"></text></g><g><title>0x7febec3fd56b (ld-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="708" width="3" height="15" fill="rgb(224,127,7)"/><text x="1039.00" y="718.50"></text></g><g><title>0x7febec3fd0f4 (ld-2.29.so) (1 samples, 0.24%)</title><rect x="1036" y="724" width="3" height="15" fill="rgb(229,181,36)"/><text x="1039.00" y="734.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.24%)</title><rect x="1047" y="148" width="3" height="15" fill="rgb(251,184,15)"/><text x="1050.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:570) (1 samples, 0.24%)</title><rect x="1053" y="164" width="3" height="15" fill="rgb(247,96,34)"/><text x="1056.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.24%)</title><rect x="1062" y="196" width="2" height="15" fill="rgb(249,75,52)"/><text x="1065.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.24%)</title><rect x="1064" y="196" width="3" height="15" fill="rgb(239,27,14)"/><text x="1067.00" y="206.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1079" y="244" width="2" height="15" fill="rgb(215,15,26)"/><text x="1082.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1081" y="260" width="3" height="15" fill="rgb(251,42,47)"/><text x="1084.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1081" y="276" width="3" height="15" fill="rgb(248,115,22)"/><text x="1084.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_value [clone .isra.101] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1081" y="292" width="3" height="15" fill="rgb(243,162,18)"/><text x="1084.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (8 samples, 1.93%)</title><rect x="1067" y="196" width="23" height="15" fill="rgb(232,83,44)"/><text x="1070.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (7 samples, 1.69%)</title><rect x="1070" y="212" width="20" height="15" fill="rgb(245,42,35)"/><text x="1073.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.96%)</title><rect x="1079" y="228" width="11" height="15" fill="rgb(207,67,9)"/><text x="1082.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1081" y="244" width="9" height="15" fill="rgb(206,184,12)"/><text x="1084.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1084" y="260" width="6" height="15" fill="rgb(252,177,32)"/><text x="1087.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1087" y="276" width="3" height="15" fill="rgb(217,124,18)"/><text x="1090.00" y="286.50"></text></g><g><title>0x7febec146eae (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1087" y="292" width="3" height="15" fill="rgb(229,52,15)"/><text x="1090.00" y="302.50"></text></g><g><title>0x7febac1a0ff9 (?) (1 samples, 0.24%)</title><rect x="1093" y="212" width="3" height="15" fill="rgb(236,127,7)"/><text x="1096.00" y="222.50"></text></g><g><title>0x7febac19bef6 (?) (1 samples, 0.24%)</title><rect x="1093" y="228" width="3" height="15" fill="rgb(219,106,27)"/><text x="1096.00" y="238.50"></text></g><g><title>0x7febac1912cc (?) (1 samples, 0.24%)</title><rect x="1093" y="244" width="3" height="15" fill="rgb(211,26,37)"/><text x="1096.00" y="254.50"></text></g><g><title>0x7febac1ae274 (?) (1 samples, 0.24%)</title><rect x="1093" y="260" width="3" height="15" fill="rgb(229,113,20)"/><text x="1096.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.24%)</title><rect x="1093" y="276" width="3" height="15" fill="rgb(251,181,22)"/><text x="1096.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.24%)</title><rect x="1093" y="292" width="3" height="15" fill="rgb(212,156,11)"/><text x="1096.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.24%)</title><rect x="1093" y="308" width="3" height="15" fill="rgb(233,135,21)"/><text x="1096.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1101" y="308" width="3" height="15" fill="rgb(232,163,26)"/><text x="1104.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1101" y="324" width="3" height="15" fill="rgb(218,167,2)"/><text x="1104.00" y="334.50"></text></g><g><title>0x7febec131c38 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1101" y="340" width="3" height="15" fill="rgb(223,3,27)"/><text x="1104.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1101" y="292" width="6" height="15" fill="rgb(212,167,29)"/><text x="1104.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1104" y="308" width="3" height="15" fill="rgb(206,187,29)"/><text x="1107.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1104" y="324" width="3" height="15" fill="rgb(253,108,54)"/><text x="1107.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1104" y="340" width="3" height="15" fill="rgb(248,9,10)"/><text x="1107.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1107" y="292" width="3" height="15" fill="rgb(249,69,46)"/><text x="1110.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1113" y="340" width="3" height="15" fill="rgb(210,75,45)"/><text x="1116.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1116" y="356" width="2" height="15" fill="rgb(252,223,28)"/><text x="1119.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1116" y="372" width="2" height="15" fill="rgb(253,72,11)"/><text x="1119.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1116" y="388" width="2" height="15" fill="rgb(252,194,8)"/><text x="1119.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1116" y="404" width="2" height="15" fill="rgb(220,191,12)"/><text x="1119.00" y="414.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1118" y="356" width="3" height="15" fill="rgb(223,47,5)"/><text x="1121.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1116" y="340" width="8" height="15" fill="rgb(232,64,29)"/><text x="1119.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1121" y="356" width="3" height="15" fill="rgb(250,172,8)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1127" y="420" width="6" height="15" fill="rgb(238,125,5)"/><text x="1130.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1127" y="436" width="6" height="15" fill="rgb(240,94,24)"/><text x="1130.00" y="446.50"></text></g><g><title>0x7febec13f6c2 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1130" y="452" width="3" height="15" fill="rgb(218,77,30)"/><text x="1133.00" y="462.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.96%)</title><rect x="1124" y="340" width="11" height="15" fill="rgb(239,189,39)"/><text x="1127.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1127" y="356" width="8" height="15" fill="rgb(207,146,35)"/><text x="1130.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1127" y="372" width="8" height="15" fill="rgb(250,217,46)"/><text x="1130.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1127" y="388" width="8" height="15" fill="rgb(209,53,40)"/><text x="1130.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="1127" y="404" width="8" height="15" fill="rgb(247,220,26)"/><text x="1130.00" y="414.50"></text></g><g><title>onnxruntime::TensorType&lt;long&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1133" y="420" width="2" height="15" fill="rgb(249,218,33)"/><text x="1136.00" y="430.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1135" y="340" width="6" height="15" fill="rgb(253,144,44)"/><text x="1138.00" y="350.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.13%)</title><rect x="1110" y="292" width="37" height="15" fill="rgb(245,143,46)"/><text x="1113.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.13%)</title><rect x="1110" y="308" width="37" height="15" fill="rgb(215,21,43)"/><text x="1113.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.13%)</title><rect x="1110" y="324" width="37" height="15" fill="rgb(219,83,22)"/><text x="1113.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1141" y="340" width="6" height="15" fill="rgb(222,74,32)"/><text x="1144.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1144" y="356" width="3" height="15" fill="rgb(211,83,3)"/><text x="1147.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1144" y="372" width="3" height="15" fill="rgb(232,91,24)"/><text x="1147.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1144" y="388" width="3" height="15" fill="rgb(206,90,11)"/><text x="1147.00" y="398.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::GetCreateFunc() const::{lambda()#1}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1144" y="404" width="3" height="15" fill="rgb(218,52,8)"/><text x="1147.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.34%)</title><rect x="1101" y="260" width="52" height="15" fill="rgb(225,157,20)"/><text x="1104.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.34%)</title><rect x="1101" y="276" width="52" height="15" fill="rgb(215,126,35)"/><text x="1104.00" y="286.50">onnxr..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (2 samples, 0.48%)</title><rect x="1147" y="292" width="6" height="15" fill="rgb(245,62,47)"/><text x="1150.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (2 samples, 0.48%)</title><rect x="1147" y="308" width="6" height="15" fill="rgb(221,212,6)"/><text x="1150.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1153" y="260" width="2" height="15" fill="rgb(215,212,33)"/><text x="1156.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.24%)</title><rect x="1155" y="292" width="3" height="15" fill="rgb(208,15,23)"/><text x="1158.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.24%)</title><rect x="1155" y="308" width="3" height="15" fill="rgb(250,100,40)"/><text x="1158.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1155" y="260" width="6" height="15" fill="rgb(208,208,26)"/><text x="1158.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.48%)</title><rect x="1155" y="276" width="6" height="15" fill="rgb(236,13,2)"/><text x="1158.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.24%)</title><rect x="1158" y="292" width="3" height="15" fill="rgb(218,43,46)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7febec150dbb (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1158" y="308" width="3" height="15" fill="rgb(252,120,15)"/><text x="1161.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1161" y="260" width="3" height="15" fill="rgb(217,25,25)"/><text x="1164.00" y="270.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1164" y="260" width="3" height="15" fill="rgb(211,224,15)"/><text x="1167.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1167" y="260" width="3" height="15" fill="rgb(232,200,43)"/><text x="1170.00" y="270.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1167" y="276" width="3" height="15" fill="rgb(251,79,3)"/><text x="1170.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(221,155,39)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 6.27%)</title><rect x="1101" y="244" width="74" height="15" fill="rgb(232,162,42)"/><text x="1104.00" y="254.50">onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(205,75,43)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="276" width="3" height="15" fill="rgb(254,133,18)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="292" width="3" height="15" fill="rgb(231,196,30)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="308" width="3" height="15" fill="rgb(230,31,48)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="324" width="3" height="15" fill="rgb(225,83,15)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="340" width="3" height="15" fill="rgb(248,76,52)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="356" width="3" height="15" fill="rgb(250,64,20)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1172" y="372" width="3" height="15" fill="rgb(210,176,25)"/><text x="1175.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (44 samples, 10.60%)</title><rect x="1056" y="164" width="125" height="15" fill="rgb(220,85,20)"/><text x="1059.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (42 samples, 10.12%)</title><rect x="1062" y="180" width="119" height="15" fill="rgb(230,103,51)"/><text x="1065.00" y="190.50">run (mlprodict..</text></g><g><title>run (onnxruntime/capi/session.py:136) (32 samples, 7.71%)</title><rect x="1090" y="196" width="91" height="15" fill="rgb(247,135,47)"/><text x="1093.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 7.23%)</title><rect x="1096" y="212" width="85" height="15" fill="rgb(208,111,7)"/><text x="1099.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 7.23%)</title><rect x="1096" y="228" width="85" height="15" fill="rgb(241,148,15)"/><text x="1099.00" y="238.50">void pybin..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1175" y="244" width="6" height="15" fill="rgb(231,111,12)"/><text x="1178.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="1175" y="260" width="6" height="15" fill="rgb(236,208,9)"/><text x="1178.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (50 samples, 12.05%)</title><rect x="1044" y="132" width="143" height="15" fill="rgb(250,217,16)"/><text x="1047.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (48 samples, 11.57%)</title><rect x="1050" y="148" width="137" height="15" fill="rgb(209,132,8)"/><text x="1053.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.48%)</title><rect x="1181" y="164" width="6" height="15" fill="rgb(232,168,13)"/><text x="1184.00" y="174.50"></text></g><g><title>all (415 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(232,48,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:52) (54 samples, 13.01%)</title><rect x="1036" y="52" width="154" height="15" fill="rgb(215,18,25)"/><text x="1039.00" y="62.50">&lt;module&gt; (bench_Log..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:51) (54 samples, 13.01%)</title><rect x="1036" y="68" width="154" height="15" fill="rgb(250,178,10)"/><text x="1039.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:29) (53 samples, 12.77%)</title><rect x="1039" y="84" width="151" height="15" fill="rgb(250,168,51)"/><text x="1042.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_.py:23) (53 samples, 12.77%)</title><rect x="1039" y="100" width="151" height="15" fill="rgb(243,127,45)"/><text x="1042.00" y="110.50">profile (bench_Logi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (53 samples, 12.77%)</title><rect x="1039" y="116" width="151" height="15" fill="rgb(208,98,42)"/><text x="1042.00" y="126.50">time_predict (mlpro..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.24%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(237,27,54)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7febec20e151 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(223,89,10)"/><text x="1190.00" y="158.50"></text></g></g></svg>