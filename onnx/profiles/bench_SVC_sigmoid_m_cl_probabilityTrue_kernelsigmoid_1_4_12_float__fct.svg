<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>__new__ (protobuf/descriptor.py) (1 samples, 0.24%)</title><rect x="10" y="596" width="2" height="15" fill="rgb(231,68,46)"/><text x="13.00" y="606.50"></text></g><g><title>0x7f5b41fc6b12 (?) (1 samples, 0.24%)</title><rect x="10" y="612" width="2" height="15" fill="rgb(237,127,19)"/><text x="13.00" y="622.50"></text></g><g><title>0x7f5b42006409 (?) (1 samples, 0.24%)</title><rect x="10" y="628" width="2" height="15" fill="rgb(216,51,11)"/><text x="13.00" y="638.50"></text></g><g><title>0x7f5b42005f85 (?) (1 samples, 0.24%)</title><rect x="10" y="644" width="2" height="15" fill="rgb(249,189,43)"/><text x="13.00" y="654.50"></text></g><g><title>0x7f5b42004789 (?) (1 samples, 0.24%)</title><rect x="10" y="660" width="2" height="15" fill="rgb(252,21,29)"/><text x="13.00" y="670.50"></text></g><g><title>0x7f5b42001235 (?) (1 samples, 0.24%)</title><rect x="10" y="676" width="2" height="15" fill="rgb(212,39,51)"/><text x="13.00" y="686.50"></text></g><g><title>0x7f5b41ffe4f4 (?) (1 samples, 0.24%)</title><rect x="10" y="692" width="2" height="15" fill="rgb(205,18,54)"/><text x="13.00" y="702.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(231,48,34)"/><text x="15.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(218,167,41)"/><text x="15.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(238,43,19)"/><text x="15.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(209,198,33)"/><text x="15.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(205,123,22)"/><text x="15.00" y="990.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(209,115,46)"/><text x="15.00" y="1006.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(205,169,33)"/><text x="15.00" y="1022.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.24%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(231,77,54)"/><text x="15.00" y="1038.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.24%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(208,33,9)"/><text x="15.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.73%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(216,171,8)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(232,52,4)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(246,220,40)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(243,117,53)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(242,106,28)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(247,140,37)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.73%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(246,214,46)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(228,196,49)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(254,56,20)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(231,210,32)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(213,192,17)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(236,209,28)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.73%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(246,185,23)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(217,172,50)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(231,187,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(234,34,1)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(249,69,23)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(246,31,30)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.73%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(246,7,31)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="596" width="6" height="15" fill="rgb(210,211,6)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="612" width="6" height="15" fill="rgb(231,69,26)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="628" width="6" height="15" fill="rgb(211,77,30)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="644" width="6" height="15" fill="rgb(241,130,38)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="660" width="6" height="15" fill="rgb(242,10,50)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="676" width="6" height="15" fill="rgb(234,133,24)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="12" y="692" width="6" height="15" fill="rgb(213,147,48)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="708" width="6" height="15" fill="rgb(229,57,39)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="724" width="6" height="15" fill="rgb(217,21,3)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="740" width="6" height="15" fill="rgb(223,193,7)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="756" width="6" height="15" fill="rgb(249,74,51)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="772" width="6" height="15" fill="rgb(210,227,31)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="12" y="788" width="6" height="15" fill="rgb(251,59,35)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="12" y="804" width="6" height="15" fill="rgb(228,42,30)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="820" width="6" height="15" fill="rgb(218,134,26)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="836" width="6" height="15" fill="rgb(232,196,43)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="852" width="6" height="15" fill="rgb(227,68,6)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="868" width="6" height="15" fill="rgb(247,141,44)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="884" width="6" height="15" fill="rgb(238,173,27)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="12" y="900" width="6" height="15" fill="rgb(210,123,42)"/><text x="15.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.24%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(235,88,39)"/><text x="18.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(227,18,2)"/><text x="18.00" y="942.50"></text></g><g><title>0x7f5b53c9e237 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(239,183,45)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="788" width="3" height="15" fill="rgb(212,128,20)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="804" width="3" height="15" fill="rgb(209,175,8)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="820" width="3" height="15" fill="rgb(252,160,46)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="18" y="836" width="3" height="15" fill="rgb(245,177,53)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="852" width="3" height="15" fill="rgb(211,116,3)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.24%)</title><rect x="18" y="868" width="3" height="15" fill="rgb(206,18,18)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(234,214,34)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(250,18,24)"/><text x="21.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(207,71,29)"/><text x="21.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(253,5,22)"/><text x="21.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(230,172,34)"/><text x="21.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(252,210,14)"/><text x="21.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="500" width="6" height="15" fill="rgb(210,105,13)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="516" width="6" height="15" fill="rgb(207,32,13)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="532" width="6" height="15" fill="rgb(248,181,28)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="18" y="548" width="6" height="15" fill="rgb(246,215,11)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="564" width="6" height="15" fill="rgb(219,185,13)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.48%)</title><rect x="18" y="580" width="6" height="15" fill="rgb(244,62,25)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="596" width="6" height="15" fill="rgb(248,146,18)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="612" width="6" height="15" fill="rgb(227,180,29)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="628" width="6" height="15" fill="rgb(247,109,0)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="18" y="644" width="6" height="15" fill="rgb(242,199,9)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="660" width="6" height="15" fill="rgb(235,77,19)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.48%)</title><rect x="18" y="676" width="6" height="15" fill="rgb(207,107,40)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="692" width="6" height="15" fill="rgb(205,164,1)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="708" width="6" height="15" fill="rgb(221,124,32)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="724" width="6" height="15" fill="rgb(207,106,7)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="18" y="740" width="6" height="15" fill="rgb(217,204,44)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="18" y="756" width="6" height="15" fill="rgb(240,143,30)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.48%)</title><rect x="18" y="772" width="6" height="15" fill="rgb(227,37,0)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(215,94,43)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(231,172,9)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(240,139,7)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(220,124,54)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(208,44,43)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(254,155,1)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(250,57,52)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.24%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(238,229,27)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(218,184,22)"/><text x="24.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(247,16,49)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(250,8,51)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(250,134,17)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(225,158,20)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(207,75,15)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(214,24,26)"/><text x="24.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.24%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(223,151,47)"/><text x="24.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.24%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(239,56,5)"/><text x="24.00" y="1054.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.24%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(240,78,11)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="10" y="196" width="17" height="15" fill="rgb(239,23,8)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="10" y="212" width="17" height="15" fill="rgb(206,174,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="10" y="228" width="17" height="15" fill="rgb(232,141,35)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="10" y="244" width="17" height="15" fill="rgb(254,166,52)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.45%)</title><rect x="10" y="260" width="17" height="15" fill="rgb(211,161,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="10" y="276" width="17" height="15" fill="rgb(213,228,9)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.73%)</title><rect x="18" y="292" width="9" height="15" fill="rgb(220,100,23)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="308" width="9" height="15" fill="rgb(237,41,1)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="324" width="9" height="15" fill="rgb(234,119,24)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="340" width="9" height="15" fill="rgb(235,173,36)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="18" y="356" width="9" height="15" fill="rgb(245,1,38)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="372" width="9" height="15" fill="rgb(245,25,12)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.73%)</title><rect x="18" y="388" width="9" height="15" fill="rgb(239,68,26)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="404" width="9" height="15" fill="rgb(229,83,16)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="420" width="9" height="15" fill="rgb(251,116,48)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="436" width="9" height="15" fill="rgb(233,105,37)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="18" y="452" width="9" height="15" fill="rgb(229,86,5)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="18" y="468" width="9" height="15" fill="rgb(229,42,44)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.73%)</title><rect x="18" y="484" width="9" height="15" fill="rgb(233,101,5)"/><text x="21.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(208,106,27)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(237,227,48)"/><text x="27.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(211,47,40)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(213,103,10)"/><text x="27.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(222,135,12)"/><text x="27.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="580" width="3" height="15" fill="rgb(251,130,3)"/><text x="27.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="596" width="3" height="15" fill="rgb(224,36,36)"/><text x="27.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.24%)</title><rect x="24" y="612" width="3" height="15" fill="rgb(228,105,22)"/><text x="27.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="628" width="3" height="15" fill="rgb(233,97,37)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="644" width="3" height="15" fill="rgb(209,82,11)"/><text x="27.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="660" width="3" height="15" fill="rgb(227,162,48)"/><text x="27.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="676" width="3" height="15" fill="rgb(230,153,12)"/><text x="27.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="692" width="3" height="15" fill="rgb(239,26,48)"/><text x="27.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.24%)</title><rect x="24" y="708" width="3" height="15" fill="rgb(214,128,18)"/><text x="27.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="724" width="3" height="15" fill="rgb(226,192,13)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="740" width="3" height="15" fill="rgb(239,212,30)"/><text x="27.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="756" width="3" height="15" fill="rgb(212,123,12)"/><text x="27.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(238,10,44)"/><text x="27.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(210,95,4)"/><text x="27.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.24%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(218,142,40)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(240,187,6)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(238,150,44)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(216,178,27)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(246,105,18)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(246,140,15)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py) (1 samples, 0.24%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(229,155,6)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(212,53,24)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(242,147,28)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(222,93,6)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(237,192,52)"/><text x="27.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(246,108,25)"/><text x="27.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(243,101,10)"/><text x="27.00" y="1006.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.24%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(241,85,13)"/><text x="33.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.24%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(210,221,24)"/><text x="33.00" y="1614.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.73%)</title><rect x="27" y="1508" width="8" height="15" fill="rgb(226,41,49)"/><text x="30.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.73%)</title><rect x="27" y="1524" width="8" height="15" fill="rgb(214,68,1)"/><text x="30.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.73%)</title><rect x="27" y="1540" width="8" height="15" fill="rgb(234,84,14)"/><text x="30.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.73%)</title><rect x="27" y="1556" width="8" height="15" fill="rgb(232,78,2)"/><text x="30.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.73%)</title><rect x="27" y="1572" width="8" height="15" fill="rgb(220,212,40)"/><text x="30.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.24%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(239,89,12)"/><text x="35.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="484" width="11" height="15" fill="rgb(223,97,45)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="500" width="11" height="15" fill="rgb(238,117,4)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="516" width="11" height="15" fill="rgb(225,187,15)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="532" width="11" height="15" fill="rgb(237,13,36)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="548" width="11" height="15" fill="rgb(231,85,46)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="564" width="11" height="15" fill="rgb(244,229,20)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.97%)</title><rect x="27" y="580" width="11" height="15" fill="rgb(219,14,2)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="596" width="11" height="15" fill="rgb(229,156,24)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="612" width="11" height="15" fill="rgb(224,108,33)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="628" width="11" height="15" fill="rgb(246,14,6)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="644" width="11" height="15" fill="rgb(237,70,26)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="660" width="11" height="15" fill="rgb(223,169,49)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.97%)</title><rect x="27" y="676" width="11" height="15" fill="rgb(205,7,46)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="692" width="11" height="15" fill="rgb(230,96,27)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="708" width="11" height="15" fill="rgb(224,50,17)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="724" width="11" height="15" fill="rgb(244,21,34)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="740" width="11" height="15" fill="rgb(230,172,6)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="756" width="11" height="15" fill="rgb(248,69,3)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.97%)</title><rect x="27" y="772" width="11" height="15" fill="rgb(212,194,53)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="788" width="11" height="15" fill="rgb(245,220,8)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="804" width="11" height="15" fill="rgb(250,132,36)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="820" width="11" height="15" fill="rgb(254,126,36)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="836" width="11" height="15" fill="rgb(205,122,13)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="852" width="11" height="15" fill="rgb(212,132,29)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.97%)</title><rect x="27" y="868" width="11" height="15" fill="rgb(235,114,35)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="884" width="11" height="15" fill="rgb(248,82,34)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="900" width="11" height="15" fill="rgb(250,225,41)"/><text x="30.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="916" width="11" height="15" fill="rgb(241,74,41)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="932" width="11" height="15" fill="rgb(253,34,50)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="948" width="11" height="15" fill="rgb(207,172,14)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="964" width="11" height="15" fill="rgb(242,186,11)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="980" width="11" height="15" fill="rgb(227,178,11)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="996" width="11" height="15" fill="rgb(223,15,0)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.97%)</title><rect x="27" y="1012" width="11" height="15" fill="rgb(224,211,41)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1028" width="11" height="15" fill="rgb(220,64,46)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1044" width="11" height="15" fill="rgb(242,38,6)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1060" width="11" height="15" fill="rgb(206,198,13)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="1076" width="11" height="15" fill="rgb(232,144,37)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1092" width="11" height="15" fill="rgb(245,38,45)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.97%)</title><rect x="27" y="1108" width="11" height="15" fill="rgb(229,34,16)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1124" width="11" height="15" fill="rgb(235,180,12)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1140" width="11" height="15" fill="rgb(225,164,1)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1156" width="11" height="15" fill="rgb(243,196,43)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1172" width="11" height="15" fill="rgb(249,80,32)"/><text x="30.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1188" width="11" height="15" fill="rgb(247,221,19)"/><text x="30.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="1204" width="11" height="15" fill="rgb(211,29,42)"/><text x="30.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1220" width="11" height="15" fill="rgb(250,130,34)"/><text x="30.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.97%)</title><rect x="27" y="1236" width="11" height="15" fill="rgb(217,1,54)"/><text x="30.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1252" width="11" height="15" fill="rgb(235,102,45)"/><text x="30.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1268" width="11" height="15" fill="rgb(237,159,29)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1284" width="11" height="15" fill="rgb(221,200,43)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1300" width="11" height="15" fill="rgb(235,127,0)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1316" width="11" height="15" fill="rgb(216,200,11)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="1332" width="11" height="15" fill="rgb(246,178,12)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1348" width="11" height="15" fill="rgb(244,209,14)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.97%)</title><rect x="27" y="1364" width="11" height="15" fill="rgb(212,40,20)"/><text x="30.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1380" width="11" height="15" fill="rgb(220,197,6)"/><text x="30.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1396" width="11" height="15" fill="rgb(251,108,50)"/><text x="30.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1412" width="11" height="15" fill="rgb(232,22,32)"/><text x="30.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.97%)</title><rect x="27" y="1428" width="11" height="15" fill="rgb(234,79,54)"/><text x="30.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="27" y="1444" width="11" height="15" fill="rgb(239,217,54)"/><text x="30.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.97%)</title><rect x="27" y="1460" width="11" height="15" fill="rgb(240,86,19)"/><text x="30.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.97%)</title><rect x="27" y="1476" width="11" height="15" fill="rgb(243,66,15)"/><text x="30.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.97%)</title><rect x="27" y="1492" width="11" height="15" fill="rgb(241,156,16)"/><text x="30.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="35" y="1508" width="3" height="15" fill="rgb(210,131,28)"/><text x="38.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="35" y="1524" width="3" height="15" fill="rgb(221,171,27)"/><text x="38.00" y="1534.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="35" y="1540" width="3" height="15" fill="rgb(244,84,14)"/><text x="38.00" y="1550.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="35" y="1556" width="3" height="15" fill="rgb(210,170,28)"/><text x="38.00" y="1566.50"></text></g><g><title>0x7f5b53c5ed07 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="35" y="1572" width="3" height="15" fill="rgb(247,157,25)"/><text x="38.00" y="1582.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py) (1 samples, 0.24%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(220,105,18)"/><text x="41.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.24%)</title><rect x="38" y="1140" width="3" height="15" fill="rgb(245,102,3)"/><text x="41.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.24%)</title><rect x="38" y="1156" width="3" height="15" fill="rgb(251,144,41)"/><text x="41.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.24%)</title><rect x="38" y="1172" width="3" height="15" fill="rgb(215,65,19)"/><text x="41.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.24%)</title><rect x="38" y="1188" width="3" height="15" fill="rgb(253,58,25)"/><text x="41.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.24%)</title><rect x="38" y="1204" width="3" height="15" fill="rgb(238,140,52)"/><text x="41.00" y="1214.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py) (1 samples, 0.24%)</title><rect x="41" y="1860" width="3" height="15" fill="rgb(246,193,34)"/><text x="44.00" y="1870.50"></text></g><g><title>compile (re.py) (1 samples, 0.24%)</title><rect x="41" y="1876" width="3" height="15" fill="rgb(247,174,47)"/><text x="44.00" y="1886.50"></text></g><g><title>_compile (re.py) (1 samples, 0.24%)</title><rect x="41" y="1892" width="3" height="15" fill="rgb(241,192,49)"/><text x="44.00" y="1902.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="41" y="1908" width="3" height="15" fill="rgb(224,16,44)"/><text x="44.00" y="1918.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="41" y="1924" width="3" height="15" fill="rgb(241,227,2)"/><text x="44.00" y="1934.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="41" y="1940" width="3" height="15" fill="rgb(210,9,44)"/><text x="44.00" y="1950.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="41" y="1956" width="3" height="15" fill="rgb(232,60,23)"/><text x="44.00" y="1966.50"></text></g><g><title>_escape (sre_parse.py) (1 samples, 0.24%)</title><rect x="41" y="1972" width="3" height="15" fill="rgb(254,215,11)"/><text x="44.00" y="1982.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.73%)</title><rect x="38" y="1012" width="9" height="15" fill="rgb(232,223,30)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="38" y="1028" width="9" height="15" fill="rgb(223,178,6)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="38" y="1044" width="9" height="15" fill="rgb(206,96,26)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="38" y="1060" width="9" height="15" fill="rgb(214,145,21)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.73%)</title><rect x="38" y="1076" width="9" height="15" fill="rgb(228,192,10)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.73%)</title><rect x="38" y="1092" width="9" height="15" fill="rgb(232,200,34)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.73%)</title><rect x="38" y="1108" width="9" height="15" fill="rgb(253,143,52)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1124" width="6" height="15" fill="rgb(215,146,46)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1140" width="6" height="15" fill="rgb(231,208,32)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1156" width="6" height="15" fill="rgb(218,37,4)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1172" width="6" height="15" fill="rgb(224,140,35)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1188" width="6" height="15" fill="rgb(207,181,10)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="1204" width="6" height="15" fill="rgb(246,32,49)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1220" width="6" height="15" fill="rgb(218,108,40)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1236" width="6" height="15" fill="rgb(243,183,41)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1252" width="6" height="15" fill="rgb(246,68,46)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1268" width="6" height="15" fill="rgb(206,106,29)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1284" width="6" height="15" fill="rgb(243,80,36)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.48%)</title><rect x="41" y="1300" width="6" height="15" fill="rgb(211,96,1)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1316" width="6" height="15" fill="rgb(227,115,38)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1332" width="6" height="15" fill="rgb(241,125,48)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1348" width="6" height="15" fill="rgb(228,15,37)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1364" width="6" height="15" fill="rgb(238,77,49)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1380" width="6" height="15" fill="rgb(244,95,13)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="1396" width="6" height="15" fill="rgb(254,138,26)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1412" width="6" height="15" fill="rgb(254,57,52)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1428" width="6" height="15" fill="rgb(253,25,5)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1444" width="6" height="15" fill="rgb(219,99,36)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1460" width="6" height="15" fill="rgb(228,202,22)"/><text x="44.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1476" width="6" height="15" fill="rgb(253,128,38)"/><text x="44.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.48%)</title><rect x="41" y="1492" width="6" height="15" fill="rgb(251,94,29)"/><text x="44.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1508" width="6" height="15" fill="rgb(230,227,29)"/><text x="44.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1524" width="6" height="15" fill="rgb(216,157,14)"/><text x="44.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1540" width="6" height="15" fill="rgb(208,38,16)"/><text x="44.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1556" width="6" height="15" fill="rgb(205,103,35)"/><text x="44.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1572" width="6" height="15" fill="rgb(240,61,38)"/><text x="44.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1588" width="6" height="15" fill="rgb(239,50,38)"/><text x="44.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1604" width="6" height="15" fill="rgb(239,63,31)"/><text x="44.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1620" width="6" height="15" fill="rgb(231,169,29)"/><text x="44.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.48%)</title><rect x="41" y="1636" width="6" height="15" fill="rgb(241,86,23)"/><text x="44.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1652" width="6" height="15" fill="rgb(228,60,48)"/><text x="44.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1668" width="6" height="15" fill="rgb(233,228,11)"/><text x="44.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1684" width="6" height="15" fill="rgb(237,20,43)"/><text x="44.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1700" width="6" height="15" fill="rgb(225,144,29)"/><text x="44.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1716" width="6" height="15" fill="rgb(213,186,33)"/><text x="44.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1732" width="6" height="15" fill="rgb(239,182,22)"/><text x="44.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1748" width="6" height="15" fill="rgb(215,32,21)"/><text x="44.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (2 samples, 0.48%)</title><rect x="41" y="1764" width="6" height="15" fill="rgb(206,191,27)"/><text x="44.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1780" width="6" height="15" fill="rgb(231,138,47)"/><text x="44.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1796" width="6" height="15" fill="rgb(219,125,35)"/><text x="44.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1812" width="6" height="15" fill="rgb(228,144,7)"/><text x="44.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="41" y="1828" width="6" height="15" fill="rgb(208,23,1)"/><text x="44.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="41" y="1844" width="6" height="15" fill="rgb(209,70,34)"/><text x="44.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.24%)</title><rect x="44" y="1860" width="3" height="15" fill="rgb(220,160,7)"/><text x="47.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1876" width="3" height="15" fill="rgb(244,175,49)"/><text x="47.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1892" width="3" height="15" fill="rgb(254,69,5)"/><text x="47.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1908" width="3" height="15" fill="rgb(233,58,21)"/><text x="47.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="1924" width="3" height="15" fill="rgb(205,165,10)"/><text x="47.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="1940" width="3" height="15" fill="rgb(228,75,51)"/><text x="47.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.24%)</title><rect x="44" y="1956" width="3" height="15" fill="rgb(208,97,2)"/><text x="47.00" y="1966.50"></text></g><g><title>setParseAction (pyparsing.py) (1 samples, 0.24%)</title><rect x="44" y="1972" width="3" height="15" fill="rgb(211,133,35)"/><text x="47.00" y="1982.50"></text></g><g><title>_trim_arity (pyparsing.py) (1 samples, 0.24%)</title><rect x="44" y="1988" width="3" height="15" fill="rgb(250,199,7)"/><text x="47.00" y="1998.50"></text></g><g><title>extract_stack (pyparsing.py) (1 samples, 0.24%)</title><rect x="44" y="2004" width="3" height="15" fill="rgb(207,157,36)"/><text x="47.00" y="2014.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.24%)</title><rect x="44" y="2020" width="3" height="15" fill="rgb(216,120,41)"/><text x="47.00" y="2030.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.24%)</title><rect x="44" y="2036" width="3" height="15" fill="rgb(226,223,33)"/><text x="47.00" y="2046.50"></text></g><g><title>line (traceback.py) (1 samples, 0.24%)</title><rect x="44" y="2052" width="3" height="15" fill="rgb(234,100,44)"/><text x="47.00" y="2062.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.24%)</title><rect x="44" y="2068" width="3" height="15" fill="rgb(206,131,22)"/><text x="47.00" y="2078.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.24%)</title><rect x="44" y="2084" width="3" height="15" fill="rgb(245,61,41)"/><text x="47.00" y="2094.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.24%)</title><rect x="44" y="2100" width="3" height="15" fill="rgb(222,41,49)"/><text x="47.00" y="2110.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="44" y="2116" width="3" height="15" fill="rgb(235,152,12)"/><text x="47.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.97%)</title><rect x="38" y="996" width="12" height="15" fill="rgb(252,46,30)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.24%)</title><rect x="47" y="1012" width="3" height="15" fill="rgb(239,158,14)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1028" width="3" height="15" fill="rgb(221,8,13)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1044" width="3" height="15" fill="rgb(233,190,53)"/><text x="50.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1060" width="3" height="15" fill="rgb(229,214,10)"/><text x="50.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1076" width="3" height="15" fill="rgb(218,191,17)"/><text x="50.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1092" width="3" height="15" fill="rgb(232,40,26)"/><text x="50.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1108" width="3" height="15" fill="rgb(206,118,29)"/><text x="50.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1124" width="3" height="15" fill="rgb(244,89,39)"/><text x="50.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1140" width="3" height="15" fill="rgb(207,81,40)"/><text x="50.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/api/__init__.py) (1 samples, 0.24%)</title><rect x="47" y="1156" width="3" height="15" fill="rgb(247,106,32)"/><text x="50.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1172" width="3" height="15" fill="rgb(254,146,24)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1188" width="3" height="15" fill="rgb(238,78,14)"/><text x="50.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1204" width="3" height="15" fill="rgb(224,82,34)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1220" width="3" height="15" fill="rgb(230,216,48)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="47" y="1236" width="3" height="15" fill="rgb(232,224,34)"/><text x="50.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1252" width="3" height="15" fill="rgb(236,30,34)"/><text x="50.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1268" width="3" height="15" fill="rgb(213,44,30)"/><text x="50.00" y="1278.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1284" width="3" height="15" fill="rgb(254,204,49)"/><text x="50.00" y="1294.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1300" width="3" height="15" fill="rgb(214,198,18)"/><text x="50.00" y="1310.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1316" width="3" height="15" fill="rgb(221,129,19)"/><text x="50.00" y="1326.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="47" y="1332" width="3" height="15" fill="rgb(237,81,50)"/><text x="50.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.18%)</title><rect x="27" y="340" width="25" height="15" fill="rgb(210,222,3)"/><text x="30.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="356" width="25" height="15" fill="rgb(237,90,7)"/><text x="30.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="372" width="25" height="15" fill="rgb(213,150,47)"/><text x="30.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="388" width="25" height="15" fill="rgb(224,196,30)"/><text x="30.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.18%)</title><rect x="27" y="404" width="25" height="15" fill="rgb(221,186,12)"/><text x="30.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="420" width="25" height="15" fill="rgb(214,3,14)"/><text x="30.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.18%)</title><rect x="27" y="436" width="25" height="15" fill="rgb(244,68,5)"/><text x="30.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="452" width="25" height="15" fill="rgb(218,69,0)"/><text x="30.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.18%)</title><rect x="27" y="468" width="25" height="15" fill="rgb(215,107,6)"/><text x="30.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="484" width="14" height="15" fill="rgb(230,77,31)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="500" width="14" height="15" fill="rgb(234,165,38)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="516" width="14" height="15" fill="rgb(214,163,13)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.21%)</title><rect x="38" y="532" width="14" height="15" fill="rgb(208,202,47)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="548" width="14" height="15" fill="rgb(237,62,27)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="564" width="14" height="15" fill="rgb(211,124,12)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="580" width="14" height="15" fill="rgb(254,76,50)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="596" width="14" height="15" fill="rgb(234,32,44)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="612" width="14" height="15" fill="rgb(235,166,46)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.21%)</title><rect x="38" y="628" width="14" height="15" fill="rgb(213,48,47)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="644" width="14" height="15" fill="rgb(216,107,42)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="660" width="14" height="15" fill="rgb(209,210,16)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="676" width="14" height="15" fill="rgb(222,76,9)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="692" width="14" height="15" fill="rgb(221,0,53)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="708" width="14" height="15" fill="rgb(245,63,48)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 1.21%)</title><rect x="38" y="724" width="14" height="15" fill="rgb(227,225,9)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="740" width="14" height="15" fill="rgb(224,168,47)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="756" width="14" height="15" fill="rgb(206,116,31)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="772" width="14" height="15" fill="rgb(230,60,25)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="788" width="14" height="15" fill="rgb(219,228,45)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="804" width="14" height="15" fill="rgb(245,189,48)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (5 samples, 1.21%)</title><rect x="38" y="820" width="14" height="15" fill="rgb(205,213,18)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="836" width="14" height="15" fill="rgb(206,51,26)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="852" width="14" height="15" fill="rgb(248,27,15)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="868" width="14" height="15" fill="rgb(218,223,24)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="884" width="14" height="15" fill="rgb(227,211,5)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="900" width="14" height="15" fill="rgb(248,2,6)"/><text x="41.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (5 samples, 1.21%)</title><rect x="38" y="916" width="14" height="15" fill="rgb(239,131,45)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="932" width="14" height="15" fill="rgb(226,172,19)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="948" width="14" height="15" fill="rgb(211,150,42)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.21%)</title><rect x="38" y="964" width="14" height="15" fill="rgb(209,61,29)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.21%)</title><rect x="38" y="980" width="14" height="15" fill="rgb(241,99,20)"/><text x="41.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="50" y="996" width="2" height="15" fill="rgb(244,73,5)"/><text x="53.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="50" y="1012" width="2" height="15" fill="rgb(213,8,46)"/><text x="53.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.42%)</title><rect x="27" y="244" width="28" height="15" fill="rgb(226,56,38)"/><text x="30.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="27" y="260" width="28" height="15" fill="rgb(235,181,43)"/><text x="30.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="27" y="276" width="28" height="15" fill="rgb(209,24,29)"/><text x="30.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="27" y="292" width="28" height="15" fill="rgb(215,164,42)"/><text x="30.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.42%)</title><rect x="27" y="308" width="28" height="15" fill="rgb(217,218,32)"/><text x="30.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.42%)</title><rect x="27" y="324" width="28" height="15" fill="rgb(213,161,35)"/><text x="30.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.24%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(209,159,51)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(246,184,24)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(223,114,48)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(239,186,24)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(248,77,4)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(236,37,19)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(245,50,9)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(250,147,50)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(207,52,43)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(241,133,43)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(213,157,40)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(211,49,14)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(225,46,22)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(227,106,38)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(250,198,30)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.24%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(242,59,18)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(232,146,10)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(250,227,0)"/><text x="55.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(211,86,51)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="644" width="3" height="15" fill="rgb(226,146,28)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="660" width="3" height="15" fill="rgb(211,141,49)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="676" width="3" height="15" fill="rgb(226,207,3)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="692" width="3" height="15" fill="rgb(215,69,46)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="708" width="3" height="15" fill="rgb(217,153,12)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(210,59,50)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(237,154,48)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(206,124,8)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(254,169,42)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(219,218,34)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(241,194,30)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.24%)</title><rect x="52" y="820" width="3" height="15" fill="rgb(220,195,7)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="836" width="3" height="15" fill="rgb(251,23,9)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="852" width="3" height="15" fill="rgb(205,200,8)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(243,227,17)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(240,9,32)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(249,107,19)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.24%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(230,34,38)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(240,99,38)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(223,209,44)"/><text x="55.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(245,46,47)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(217,115,17)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(218,206,16)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1012" width="3" height="15" fill="rgb(234,196,45)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(226,72,48)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(239,46,27)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(224,142,40)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(243,142,6)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1092" width="3" height="15" fill="rgb(241,165,1)"/><text x="55.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1108" width="3" height="15" fill="rgb(250,89,14)"/><text x="55.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(249,107,41)"/><text x="55.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(240,145,35)"/><text x="55.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(241,42,10)"/><text x="55.00" y="1166.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.24%)</title><rect x="55" y="372" width="3" height="15" fill="rgb(237,164,47)"/><text x="58.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="388" width="3" height="15" fill="rgb(253,8,26)"/><text x="58.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="404" width="3" height="15" fill="rgb(217,18,25)"/><text x="58.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="420" width="3" height="15" fill="rgb(216,101,45)"/><text x="58.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="436" width="3" height="15" fill="rgb(216,111,3)"/><text x="58.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="452" width="3" height="15" fill="rgb(247,103,41)"/><text x="58.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="468" width="3" height="15" fill="rgb(253,99,34)"/><text x="58.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="484" width="3" height="15" fill="rgb(229,81,32)"/><text x="58.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.24%)</title><rect x="55" y="500" width="3" height="15" fill="rgb(229,16,38)"/><text x="58.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="516" width="3" height="15" fill="rgb(214,23,43)"/><text x="58.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="532" width="3" height="15" fill="rgb(223,161,39)"/><text x="58.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="548" width="3" height="15" fill="rgb(227,127,18)"/><text x="58.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="564" width="3" height="15" fill="rgb(254,178,8)"/><text x="58.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="580" width="3" height="15" fill="rgb(239,108,48)"/><text x="58.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="596" width="3" height="15" fill="rgb(241,94,8)"/><text x="58.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="612" width="3" height="15" fill="rgb(231,58,16)"/><text x="58.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.24%)</title><rect x="55" y="628" width="3" height="15" fill="rgb(237,3,34)"/><text x="58.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="644" width="3" height="15" fill="rgb(205,139,48)"/><text x="58.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="660" width="3" height="15" fill="rgb(215,12,34)"/><text x="58.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="676" width="3" height="15" fill="rgb(205,173,50)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="692" width="3" height="15" fill="rgb(218,47,7)"/><text x="58.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="708" width="3" height="15" fill="rgb(214,153,3)"/><text x="58.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="724" width="3" height="15" fill="rgb(235,34,50)"/><text x="58.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="740" width="3" height="15" fill="rgb(209,54,26)"/><text x="58.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="756" width="3" height="15" fill="rgb(233,199,10)"/><text x="58.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.24%)</title><rect x="55" y="772" width="3" height="15" fill="rgb(230,105,40)"/><text x="58.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="788" width="3" height="15" fill="rgb(224,195,35)"/><text x="58.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="804" width="3" height="15" fill="rgb(248,156,12)"/><text x="58.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="820" width="3" height="15" fill="rgb(225,207,15)"/><text x="58.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="836" width="3" height="15" fill="rgb(231,152,11)"/><text x="58.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="852" width="3" height="15" fill="rgb(233,14,21)"/><text x="58.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="868" width="3" height="15" fill="rgb(253,207,19)"/><text x="58.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="884" width="3" height="15" fill="rgb(239,201,5)"/><text x="58.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.24%)</title><rect x="55" y="900" width="3" height="15" fill="rgb(226,206,23)"/><text x="58.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="916" width="3" height="15" fill="rgb(213,56,27)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="932" width="3" height="15" fill="rgb(216,163,12)"/><text x="58.00" y="942.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="948" width="3" height="15" fill="rgb(214,203,20)"/><text x="58.00" y="958.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="964" width="3" height="15" fill="rgb(247,53,41)"/><text x="58.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="68" width="51" height="15" fill="rgb(249,157,9)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="84" width="51" height="15" fill="rgb(216,19,12)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="100" width="51" height="15" fill="rgb(222,145,40)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.36%)</title><rect x="10" y="116" width="51" height="15" fill="rgb(218,138,7)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="132" width="51" height="15" fill="rgb(223,111,16)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid.py) (18 samples, 4.36%)</title><rect x="10" y="148" width="51" height="15" fill="rgb(215,131,29)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="164" width="51" height="15" fill="rgb(221,170,51)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.36%)</title><rect x="10" y="180" width="51" height="15" fill="rgb(234,151,3)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.91%)</title><rect x="27" y="196" width="34" height="15" fill="rgb(252,197,46)"/><text x="30.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.91%)</title><rect x="27" y="212" width="34" height="15" fill="rgb(209,174,30)"/><text x="30.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.91%)</title><rect x="27" y="228" width="34" height="15" fill="rgb(226,7,15)"/><text x="30.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.48%)</title><rect x="55" y="244" width="6" height="15" fill="rgb(247,121,52)"/><text x="58.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="260" width="6" height="15" fill="rgb(248,71,36)"/><text x="58.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="276" width="6" height="15" fill="rgb(230,101,34)"/><text x="58.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="292" width="6" height="15" fill="rgb(210,93,43)"/><text x="58.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="308" width="6" height="15" fill="rgb(209,103,2)"/><text x="58.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="324" width="6" height="15" fill="rgb(226,64,21)"/><text x="58.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="55" y="340" width="6" height="15" fill="rgb(229,199,30)"/><text x="58.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="55" y="356" width="6" height="15" fill="rgb(227,136,43)"/><text x="58.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.24%)</title><rect x="58" y="372" width="3" height="15" fill="rgb(248,50,40)"/><text x="61.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="58" y="388" width="3" height="15" fill="rgb(221,228,34)"/><text x="61.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="58" y="404" width="3" height="15" fill="rgb(233,130,39)"/><text x="61.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="58" y="420" width="3" height="15" fill="rgb(237,73,0)"/><text x="61.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="436" width="3" height="15" fill="rgb(248,126,39)"/><text x="61.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="452" width="3" height="15" fill="rgb(248,160,11)"/><text x="61.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="468" width="3" height="15" fill="rgb(251,46,3)"/><text x="61.00" y="478.50"></text></g><g><title>0x7f5b13c8eff9 (?) (1 samples, 0.24%)</title><rect x="107" y="212" width="3" height="15" fill="rgb(245,38,25)"/><text x="110.00" y="222.50"></text></g><g><title>0x7f5b13c89ef6 (?) (1 samples, 0.24%)</title><rect x="107" y="228" width="3" height="15" fill="rgb(205,89,42)"/><text x="110.00" y="238.50"></text></g><g><title>0x7f5b13c7e962 (?) (1 samples, 0.24%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(230,96,37)"/><text x="110.00" y="254.50"></text></g><g><title>0x7f5b13cb27a7 (?) (1 samples, 0.24%)</title><rect x="107" y="260" width="3" height="15" fill="rgb(235,108,27)"/><text x="110.00" y="270.50"></text></g><g><title>0x7f5b13cb2379 (?) (1 samples, 0.24%)</title><rect x="107" y="276" width="3" height="15" fill="rgb(206,102,25)"/><text x="110.00" y="286.50"></text></g><g><title>0x7f5b141108b8 (?) (1 samples, 0.24%)</title><rect x="107" y="292" width="3" height="15" fill="rgb(212,221,3)"/><text x="110.00" y="302.50"></text></g><g><title>0x7f5b1410ec7f (?) (1 samples, 0.24%)</title><rect x="107" y="308" width="3" height="15" fill="rgb(232,168,18)"/><text x="110.00" y="318.50"></text></g><g><title>0x7f5b1412199c (?) (1 samples, 0.24%)</title><rect x="107" y="324" width="3" height="15" fill="rgb(224,22,7)"/><text x="110.00" y="334.50"></text></g><g><title>0x7f5b13e270b1 (?) (1 samples, 0.24%)</title><rect x="107" y="340" width="3" height="15" fill="rgb(254,183,37)"/><text x="110.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(209,216,5)"/><text x="110.00" y="366.50"></text></g><g><title>0x7f5b53c5e96a (libc-2.29.so) (1 samples, 0.24%)</title><rect x="115" y="244" width="3" height="15" fill="rgb(241,212,37)"/><text x="118.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="118" y="260" width="3" height="15" fill="rgb(229,94,14)"/><text x="121.00" y="270.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="121" y="260" width="3" height="15" fill="rgb(237,10,28)"/><text x="124.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="121" y="276" width="3" height="15" fill="rgb(205,51,20)"/><text x="124.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (6 samples, 1.45%)</title><rect x="110" y="212" width="17" height="15" fill="rgb(232,31,4)"/><text x="113.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="115" y="228" width="12" height="15" fill="rgb(248,217,29)"/><text x="118.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="118" y="244" width="9" height="15" fill="rgb(242,196,6)"/><text x="121.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="124" y="260" width="3" height="15" fill="rgb(226,217,8)"/><text x="127.00" y="270.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="138" y="260" width="3" height="15" fill="rgb(231,42,23)"/><text x="141.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(250,127,26)"/><text x="147.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="144" y="308" width="3" height="15" fill="rgb(221,3,35)"/><text x="147.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="144" y="324" width="3" height="15" fill="rgb(254,105,47)"/><text x="147.00" y="334.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="144" y="340" width="3" height="15" fill="rgb(248,222,53)"/><text x="147.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="147" y="292" width="3" height="15" fill="rgb(236,136,45)"/><text x="150.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="155" y="500" width="3" height="15" fill="rgb(240,152,30)"/><text x="158.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="155" y="516" width="3" height="15" fill="rgb(225,94,28)"/><text x="158.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="356" width="9" height="15" fill="rgb(211,51,35)"/><text x="155.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="372" width="9" height="15" fill="rgb(225,87,38)"/><text x="155.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="388" width="9" height="15" fill="rgb(246,198,47)"/><text x="155.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="404" width="9" height="15" fill="rgb(233,140,38)"/><text x="155.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="420" width="9" height="15" fill="rgb(253,156,49)"/><text x="155.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="436" width="9" height="15" fill="rgb(252,107,29)"/><text x="155.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="152" y="452" width="9" height="15" fill="rgb(210,113,37)"/><text x="155.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="155" y="468" width="6" height="15" fill="rgb(211,165,54)"/><text x="158.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="155" y="484" width="6" height="15" fill="rgb(205,58,39)"/><text x="158.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="158" y="500" width="3" height="15" fill="rgb(206,92,43)"/><text x="161.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="158" y="516" width="3" height="15" fill="rgb(226,149,9)"/><text x="161.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="158" y="532" width="3" height="15" fill="rgb(228,214,29)"/><text x="161.00" y="542.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="152" y="340" width="12" height="15" fill="rgb(209,70,54)"/><text x="155.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="161" y="356" width="3" height="15" fill="rgb(205,135,7)"/><text x="164.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="161" y="372" width="3" height="15" fill="rgb(210,181,42)"/><text x="164.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="161" y="388" width="3" height="15" fill="rgb(205,89,4)"/><text x="164.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="172" y="356" width="6" height="15" fill="rgb(214,57,30)"/><text x="175.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="172" y="372" width="6" height="15" fill="rgb(227,192,5)"/><text x="175.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="178" y="356" width="3" height="15" fill="rgb(243,18,29)"/><text x="181.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="178" y="372" width="3" height="15" fill="rgb(226,67,45)"/><text x="181.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="178" y="388" width="3" height="15" fill="rgb(252,69,10)"/><text x="181.00" y="398.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="181" y="356" width="3" height="15" fill="rgb(211,181,44)"/><text x="184.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.94%)</title><rect x="164" y="340" width="23" height="15" fill="rgb(247,128,16)"/><text x="167.00" y="350.50">o..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="184" y="356" width="3" height="15" fill="rgb(252,208,15)"/><text x="187.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="184" y="372" width="3" height="15" fill="rgb(247,119,48)"/><text x="187.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="187" y="340" width="3" height="15" fill="rgb(237,38,4)"/><text x="190.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="187" y="356" width="3" height="15" fill="rgb(251,30,36)"/><text x="190.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="187" y="372" width="3" height="15" fill="rgb(221,122,22)"/><text x="190.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="187" y="388" width="3" height="15" fill="rgb(237,148,14)"/><text x="190.00" y="398.50"></text></g><g><title>0x7f5b53ddde2f (libm-2.29.so) (1 samples, 0.24%)</title><rect x="207" y="356" width="3" height="15" fill="rgb(247,134,21)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f5b53ddde71 (libm-2.29.so) (2 samples, 0.48%)</title><rect x="210" y="356" width="5" height="15" fill="rgb(246,119,31)"/><text x="213.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="215" y="356" width="3" height="15" fill="rgb(207,181,37)"/><text x="218.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="215" y="372" width="3" height="15" fill="rgb(243,34,13)"/><text x="218.00" y="382.50"></text></g><g><title>0x7f5b53c6d6aa (libc-2.29.so) (1 samples, 0.24%)</title><rect x="224" y="452" width="3" height="15" fill="rgb(214,111,42)"/><text x="227.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="227" y="452" width="3" height="15" fill="rgb(241,167,8)"/><text x="230.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="227" y="468" width="3" height="15" fill="rgb(239,178,8)"/><text x="230.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="227" y="484" width="3" height="15" fill="rgb(241,159,37)"/><text x="230.00" y="494.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="356" width="14" height="15" fill="rgb(218,203,31)"/><text x="221.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="372" width="14" height="15" fill="rgb(240,69,46)"/><text x="221.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="388" width="14" height="15" fill="rgb(235,42,16)"/><text x="221.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="404" width="14" height="15" fill="rgb(250,134,27)"/><text x="221.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="420" width="14" height="15" fill="rgb(213,206,53)"/><text x="221.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.21%)</title><rect x="218" y="436" width="14" height="15" fill="rgb(233,183,54)"/><text x="221.00" y="446.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="230" y="452" width="2" height="15" fill="rgb(244,95,34)"/><text x="233.00" y="462.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="232" y="356" width="3" height="15" fill="rgb(206,108,48)"/><text x="235.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="235" y="356" width="6" height="15" fill="rgb(219,96,18)"/><text x="238.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="238" y="372" width="3" height="15" fill="rgb(246,159,53)"/><text x="241.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="238" y="388" width="3" height="15" fill="rgb(225,201,27)"/><text x="241.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="241" y="356" width="3" height="15" fill="rgb(207,96,11)"/><text x="244.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 7.02%)</title><rect x="190" y="340" width="82" height="15" fill="rgb(210,207,19)"/><text x="193.00" y="350.50">onnxrunti..</text></g><g><title>tanhf32x (libm-2.29.so) (10 samples, 2.42%)</title><rect x="244" y="356" width="28" height="15" fill="rgb(224,96,21)"/><text x="247.00" y="366.50">t..</text></g><g><title>expm1f64 (libm-2.29.so) (7 samples, 1.69%)</title><rect x="252" y="372" width="20" height="15" fill="rgb(223,36,35)"/><text x="255.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 11.62%)</title><rect x="141" y="276" width="137" height="15" fill="rgb(248,199,12)"/><text x="144.00" y="286.50">onnxruntime::Infe..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 10.90%)</title><rect x="150" y="292" width="128" height="15" fill="rgb(244,79,21)"/><text x="153.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 10.65%)</title><rect x="152" y="308" width="126" height="15" fill="rgb(237,214,8)"/><text x="155.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 10.65%)</title><rect x="152" y="324" width="126" height="15" fill="rgb(217,99,46)"/><text x="155.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="272" y="340" width="6" height="15" fill="rgb(208,152,20)"/><text x="275.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.48%)</title><rect x="272" y="356" width="6" height="15" fill="rgb(212,193,1)"/><text x="275.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.48%)</title><rect x="272" y="372" width="6" height="15" fill="rgb(228,11,48)"/><text x="275.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 11.86%)</title><rect x="141" y="260" width="140" height="15" fill="rgb(238,86,53)"/><text x="144.00" y="270.50">onnxruntime::Infe..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="278" y="276" width="3" height="15" fill="rgb(245,40,49)"/><text x="281.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="278" y="292" width="3" height="15" fill="rgb(233,206,47)"/><text x="281.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="278" y="308" width="3" height="15" fill="rgb(212,149,49)"/><text x="281.00" y="318.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="287" y="276" width="3" height="15" fill="rgb(211,47,5)"/><text x="290.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="281" y="260" width="11" height="15" fill="rgb(206,206,17)"/><text x="284.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="290" y="276" width="2" height="15" fill="rgb(213,126,29)"/><text x="293.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="292" y="260" width="3" height="15" fill="rgb(222,113,35)"/><text x="295.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="292" y="276" width="3" height="15" fill="rgb(239,9,25)"/><text x="295.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="295" y="260" width="9" height="15" fill="rgb(215,23,41)"/><text x="298.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="304" y="260" width="3" height="15" fill="rgb(243,1,10)"/><text x="307.00" y="270.50"></text></g><g><title>0x7f5b53c5e991 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="304" y="276" width="3" height="15" fill="rgb(248,178,30)"/><text x="307.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="310" y="356" width="2" height="15" fill="rgb(206,36,32)"/><text x="313.00" y="366.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="307" y="276" width="8" height="15" fill="rgb(225,29,15)"/><text x="310.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="307" y="292" width="8" height="15" fill="rgb(222,116,15)"/><text x="310.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="307" y="308" width="8" height="15" fill="rgb(242,188,29)"/><text x="310.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.73%)</title><rect x="307" y="324" width="8" height="15" fill="rgb(248,42,32)"/><text x="310.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="310" y="340" width="5" height="15" fill="rgb(227,45,19)"/><text x="313.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="312" y="356" width="3" height="15" fill="rgb(248,87,10)"/><text x="315.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="312" y="372" width="3" height="15" fill="rgb(208,140,4)"/><text x="315.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="312" y="388" width="3" height="15" fill="rgb(217,20,44)"/><text x="315.00" y="398.50"></text></g><g><title>0x7f5b53c5e97c (libc-2.29.so) (1 samples, 0.24%)</title><rect x="312" y="404" width="3" height="15" fill="rgb(245,222,35)"/><text x="315.00" y="414.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 15.74%)</title><rect x="132" y="244" width="186" height="15" fill="rgb(235,145,47)"/><text x="135.00" y="254.50">onnxruntime::python::add..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.97%)</title><rect x="307" y="260" width="11" height="15" fill="rgb(240,137,0)"/><text x="310.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="315" y="276" width="3" height="15" fill="rgb(249,169,49)"/><text x="318.00" y="286.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="315" y="292" width="3" height="15" fill="rgb(214,25,2)"/><text x="318.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="318" y="244" width="3" height="15" fill="rgb(221,40,8)"/><text x="321.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="318" y="260" width="3" height="15" fill="rgb(226,30,16)"/><text x="321.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="321" y="244" width="3" height="15" fill="rgb(232,3,44)"/><text x="324.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="321" y="260" width="3" height="15" fill="rgb(212,220,20)"/><text x="324.00" y="270.50"></text></g><g><title>profile_ort (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (93 samples, 22.52%)</title><rect x="61" y="68" width="266" height="15" fill="rgb(220,85,3)"/><text x="64.00" y="78.50">profile_ort (bench_SVC_sigmoid_m_cl..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (93 samples, 22.52%)</title><rect x="61" y="84" width="266" height="15" fill="rgb(217,67,11)"/><text x="64.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (93 samples, 22.52%)</title><rect x="61" y="100" width="266" height="15" fill="rgb(221,67,45)"/><text x="64.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 21.31%)</title><rect x="75" y="116" width="252" height="15" fill="rgb(250,83,30)"/><text x="78.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (87 samples, 21.07%)</title><rect x="78" y="132" width="249" height="15" fill="rgb(222,162,51)"/><text x="81.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (86 samples, 20.82%)</title><rect x="81" y="148" width="246" height="15" fill="rgb(219,225,42)"/><text x="84.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (84 samples, 20.34%)</title><rect x="87" y="164" width="240" height="15" fill="rgb(229,89,2)"/><text x="90.00" y="174.50">_run_whole_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (80 samples, 19.37%)</title><rect x="98" y="180" width="229" height="15" fill="rgb(211,91,50)"/><text x="101.00" y="190.50">run (mlprodict/onnxrt/ops_whol..</text></g><g><title>run (onnxruntime/capi/session.py) (78 samples, 18.89%)</title><rect x="104" y="196" width="223" height="15" fill="rgb(206,112,51)"/><text x="107.00" y="206.50">run (onnxruntime/capi/session..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 16.95%)</title><rect x="127" y="212" width="200" height="15" fill="rgb(210,193,29)"/><text x="130.00" y="222.50">pybind11::cpp_function::di..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (69 samples, 16.71%)</title><rect x="130" y="228" width="197" height="15" fill="rgb(241,170,34)"/><text x="133.00" y="238.50">void pybind11::cpp_functi..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="324" y="244" width="3" height="15" fill="rgb(216,69,12)"/><text x="327.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="327" y="116" width="3" height="15" fill="rgb(246,95,53)"/><text x="330.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="327" y="132" width="3" height="15" fill="rgb(234,60,2)"/><text x="330.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="327" y="148" width="3" height="15" fill="rgb(237,217,23)"/><text x="330.00" y="158.50"></text></g><g><title>0x7f5b53c7f124 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="390" y="180" width="2" height="15" fill="rgb(254,194,43)"/><text x="393.00" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.73%)</title><rect x="392" y="180" width="9" height="15" fill="rgb(247,182,49)"/><text x="395.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.24%)</title><rect x="398" y="196" width="3" height="15" fill="rgb(253,224,23)"/><text x="401.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.48%)</title><rect x="472" y="196" width="6" height="15" fill="rgb(223,108,17)"/><text x="475.00" y="206.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.24%)</title><rect x="492" y="276" width="3" height="15" fill="rgb(247,72,30)"/><text x="495.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 0.97%)</title><rect x="490" y="212" width="11" height="15" fill="rgb(232,138,31)"/><text x="493.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.73%)</title><rect x="492" y="228" width="9" height="15" fill="rgb(250,189,28)"/><text x="495.00" y="238.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.73%)</title><rect x="492" y="244" width="9" height="15" fill="rgb(235,44,17)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.73%)</title><rect x="492" y="260" width="9" height="15" fill="rgb(218,117,18)"/><text x="495.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.48%)</title><rect x="495" y="276" width="6" height="15" fill="rgb(244,44,5)"/><text x="498.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="498" y="292" width="3" height="15" fill="rgb(216,75,52)"/><text x="501.00" y="302.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.24%)</title><rect x="501" y="212" width="3" height="15" fill="rgb(236,107,48)"/><text x="504.00" y="222.50"></text></g><g><title>0x7f5b14dcdc29 (?) (1 samples, 0.24%)</title><rect x="512" y="244" width="3" height="15" fill="rgb(240,31,23)"/><text x="515.00" y="254.50"></text></g><g><title>0x7f5b14dd4d9e (?) (1 samples, 0.24%)</title><rect x="512" y="260" width="3" height="15" fill="rgb(218,187,15)"/><text x="515.00" y="270.50"></text></g><g><title>0x7f5b14dd4c04 (?) (1 samples, 0.24%)</title><rect x="512" y="276" width="3" height="15" fill="rgb(245,16,50)"/><text x="515.00" y="286.50"></text></g><g><title>0x7f5b14dd4b17 (?) (1 samples, 0.24%)</title><rect x="512" y="292" width="3" height="15" fill="rgb(211,94,46)"/><text x="515.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="512" y="308" width="3" height="15" fill="rgb(219,180,29)"/><text x="515.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="512" y="324" width="3" height="15" fill="rgb(214,27,46)"/><text x="515.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="512" y="340" width="3" height="15" fill="rgb(240,193,42)"/><text x="515.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="515" y="292" width="3" height="15" fill="rgb(247,15,32)"/><text x="518.00" y="302.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.24%)</title><rect x="515" y="308" width="3" height="15" fill="rgb(253,26,39)"/><text x="518.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.48%)</title><rect x="515" y="244" width="6" height="15" fill="rgb(248,87,32)"/><text x="518.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.48%)</title><rect x="515" y="260" width="6" height="15" fill="rgb(234,35,36)"/><text x="518.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.48%)</title><rect x="515" y="276" width="6" height="15" fill="rgb(231,225,49)"/><text x="518.00" y="286.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.24%)</title><rect x="518" y="292" width="3" height="15" fill="rgb(234,129,25)"/><text x="521.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.24%)</title><rect x="518" y="308" width="3" height="15" fill="rgb(212,163,18)"/><text x="521.00" y="318.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h) (1 samples, 0.24%)</title><rect x="524" y="260" width="3" height="15" fill="rgb(253,93,28)"/><text x="527.00" y="270.50"></text></g><g><title>pybind11::dtype::of&lt;float&gt; (numpy.h) (1 samples, 0.24%)</title><rect x="527" y="436" width="3" height="15" fill="rgb(239,20,42)"/><text x="530.00" y="446.50"></text></g><g><title>pybind11::detail::npy_format_descriptor&lt;float, void&gt;::dtype (numpy.h) (1 samples, 0.24%)</title><rect x="527" y="452" width="3" height="15" fill="rgb(213,157,42)"/><text x="530.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="527" y="468" width="3" height="15" fill="rgb(228,157,15)"/><text x="530.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.24%)</title><rect x="532" y="532" width="3" height="15" fill="rgb(206,79,45)"/><text x="535.00" y="542.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.24%)</title><rect x="532" y="548" width="3" height="15" fill="rgb(251,224,50)"/><text x="535.00" y="558.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.24%)</title><rect x="532" y="564" width="3" height="15" fill="rgb(238,92,18)"/><text x="535.00" y="574.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="535" y="532" width="3" height="15" fill="rgb(226,213,35)"/><text x="538.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="535" y="548" width="3" height="15" fill="rgb(216,28,4)"/><text x="538.00" y="558.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.24%)</title><rect x="535" y="564" width="3" height="15" fill="rgb(233,78,45)"/><text x="538.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="535" y="580" width="3" height="15" fill="rgb(214,138,8)"/><text x="538.00" y="590.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.73%)</title><rect x="532" y="500" width="9" height="15" fill="rgb(211,194,15)"/><text x="535.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.73%)</title><rect x="532" y="516" width="9" height="15" fill="rgb(252,32,2)"/><text x="535.00" y="526.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.24%)</title><rect x="538" y="532" width="3" height="15" fill="rgb(206,221,49)"/><text x="541.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="538" y="548" width="3" height="15" fill="rgb(205,115,1)"/><text x="541.00" y="558.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (6 samples, 1.45%)</title><rect x="527" y="292" width="17" height="15" fill="rgb(240,195,31)"/><text x="530.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (6 samples, 1.45%)</title><rect x="527" y="308" width="17" height="15" fill="rgb(234,176,0)"/><text x="530.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (6 samples, 1.45%)</title><rect x="527" y="324" width="17" height="15" fill="rgb(250,225,50)"/><text x="530.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple) (6 samples, 1.45%)</title><rect x="527" y="340" width="17" height="15" fill="rgb(231,88,18)"/><text x="530.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h) (6 samples, 1.45%)</title><rect x="527" y="356" width="17" height="15" fill="rgb(244,168,48)"/><text x="530.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (6 samples, 1.45%)</title><rect x="527" y="372" width="17" height="15" fill="rgb(205,39,36)"/><text x="530.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h) (6 samples, 1.45%)</title><rect x="527" y="388" width="17" height="15" fill="rgb(253,60,3)"/><text x="530.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (6 samples, 1.45%)</title><rect x="527" y="404" width="17" height="15" fill="rgb(236,215,4)"/><text x="530.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (6 samples, 1.45%)</title><rect x="527" y="420" width="17" height="15" fill="rgb(223,203,39)"/><text x="530.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (5 samples, 1.21%)</title><rect x="530" y="436" width="14" height="15" fill="rgb(222,78,53)"/><text x="533.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (5 samples, 1.21%)</title><rect x="530" y="452" width="14" height="15" fill="rgb(213,41,40)"/><text x="533.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (5 samples, 1.21%)</title><rect x="530" y="468" width="14" height="15" fill="rgb(242,104,36)"/><text x="533.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h) (5 samples, 1.21%)</title><rect x="530" y="484" width="14" height="15" fill="rgb(242,161,42)"/><text x="533.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (stl_vector.h) (1 samples, 0.24%)</title><rect x="541" y="500" width="3" height="15" fill="rgb(214,45,11)"/><text x="544.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_move_assign (stl_vector.h) (1 samples, 0.24%)</title><rect x="541" y="516" width="3" height="15" fill="rgb(238,145,49)"/><text x="544.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.24%)</title><rect x="541" y="532" width="3" height="15" fill="rgb(229,83,47)"/><text x="544.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::~_Vector_base (stl_vector.h) (1 samples, 0.24%)</title><rect x="541" y="548" width="3" height="15" fill="rgb(210,205,37)"/><text x="544.00" y="558.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.24%)</title><rect x="541" y="564" width="3" height="15" fill="rgb(234,47,33)"/><text x="544.00" y="574.50"></text></g><g><title>tanhf32x (libm-2.29.so) (17 samples, 4.12%)</title><rect x="550" y="484" width="48" height="15" fill="rgb(222,114,31)"/><text x="553.00" y="494.50">tanh..</text></g><g><title>expm1f64 (libm-2.29.so) (11 samples, 2.66%)</title><rect x="567" y="500" width="31" height="15" fill="rgb(216,43,49)"/><text x="570.00" y="510.50">ex..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (21 samples, 5.08%)</title><rect x="547" y="468" width="60" height="15" fill="rgb(240,107,36)"/><text x="550.00" y="478.50">Runtim..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (3 samples, 0.73%)</title><rect x="598" y="484" width="9" height="15" fill="rgb(239,63,36)"/><text x="601.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.24%)</title><rect x="607" y="468" width="3" height="15" fill="rgb(220,50,52)"/><text x="610.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h) (1 samples, 0.24%)</title><rect x="607" y="484" width="3" height="15" fill="rgb(209,81,18)"/><text x="610.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h) (1 samples, 0.24%)</title><rect x="607" y="500" width="3" height="15" fill="rgb(219,228,20)"/><text x="610.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.48%)</title><rect x="610" y="468" width="5" height="15" fill="rgb(244,90,18)"/><text x="613.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (2 samples, 0.48%)</title><rect x="610" y="484" width="5" height="15" fill="rgb(250,25,9)"/><text x="613.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (1 samples, 0.24%)</title><rect x="612" y="500" width="3" height="15" fill="rgb(244,178,6)"/><text x="615.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.24%)</title><rect x="612" y="516" width="3" height="15" fill="rgb(233,107,0)"/><text x="615.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.24%)</title><rect x="612" y="532" width="3" height="15" fill="rgb(205,38,54)"/><text x="615.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.24%)</title><rect x="612" y="548" width="3" height="15" fill="rgb(212,196,15)"/><text x="615.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="612" y="564" width="3" height="15" fill="rgb(228,198,23)"/><text x="615.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="612" y="580" width="3" height="15" fill="rgb(251,166,31)"/><text x="615.00" y="590.50"></text></g><g><title>0x7f5b53c6000a (libc-2.29.so) (1 samples, 0.24%)</title><rect x="612" y="596" width="3" height="15" fill="rgb(245,85,12)"/><text x="615.00" y="606.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (1 samples, 0.24%)</title><rect x="615" y="468" width="3" height="15" fill="rgb(208,166,6)"/><text x="618.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.24%)</title><rect x="615" y="484" width="3" height="15" fill="rgb(253,182,4)"/><text x="618.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.24%)</title><rect x="615" y="500" width="3" height="15" fill="rgb(253,222,22)"/><text x="618.00" y="510.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (27 samples, 6.54%)</title><rect x="544" y="436" width="77" height="15" fill="rgb(251,227,43)"/><text x="547.00" y="446.50">pybind11..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (27 samples, 6.54%)</title><rect x="544" y="452" width="77" height="15" fill="rgb(244,148,2)"/><text x="547.00" y="462.50">RuntimeS..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.24%)</title><rect x="618" y="468" width="3" height="15" fill="rgb(247,66,3)"/><text x="621.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (1 samples, 0.24%)</title><rect x="618" y="484" width="3" height="15" fill="rgb(243,151,22)"/><text x="621.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (1 samples, 0.24%)</title><rect x="618" y="500" width="3" height="15" fill="rgb(228,46,13)"/><text x="621.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;long*, long*, std::allocator&lt;long&gt; &gt; (stl_uninitialized.h) (1 samples, 0.24%)</title><rect x="618" y="516" width="3" height="15" fill="rgb(216,112,17)"/><text x="621.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;long*&gt;, long*, long&gt; (stl_uninitialized.h) (1 samples, 0.24%)</title><rect x="618" y="532" width="3" height="15" fill="rgb(242,92,25)"/><text x="621.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;long*&gt;, long*&gt; (stl_uninitialized.h) (1 samples, 0.24%)</title><rect x="618" y="548" width="3" height="15" fill="rgb(254,172,5)"/><text x="621.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;long*&gt;, long*&gt; (stl_uninitialized.h) (1 samples, 0.24%)</title><rect x="618" y="564" width="3" height="15" fill="rgb(232,33,49)"/><text x="621.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;long*&gt;, long*&gt; (stl_algobase.h) (1 samples, 0.24%)</title><rect x="618" y="580" width="3" height="15" fill="rgb(206,193,8)"/><text x="621.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, long*, long*&gt; (stl_algobase.h) (1 samples, 0.24%)</title><rect x="618" y="596" width="3" height="15" fill="rgb(208,222,8)"/><text x="621.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, long*, long*&gt; (stl_algobase.h) (1 samples, 0.24%)</title><rect x="618" y="612" width="3" height="15" fill="rgb(227,227,48)"/><text x="621.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;long&gt; (stl_algobase.h) (1 samples, 0.24%)</title><rect x="618" y="628" width="3" height="15" fill="rgb(246,192,22)"/><text x="621.00" y="638.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (1 samples, 0.24%)</title><rect x="621" y="436" width="3" height="15" fill="rgb(216,86,45)"/><text x="624.00" y="446.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (29 samples, 7.02%)</title><rect x="544" y="292" width="83" height="15" fill="rgb(231,173,51)"/><text x="547.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (29 samples, 7.02%)</title><rect x="544" y="308" width="83" height="15" fill="rgb(244,169,17)"/><text x="547.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (29 samples, 7.02%)</title><rect x="544" y="324" width="83" height="15" fill="rgb(247,108,29)"/><text x="547.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (29 samples, 7.02%)</title><rect x="544" y="340" width="83" height="15" fill="rgb(223,103,51)"/><text x="547.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (29 samples, 7.02%)</title><rect x="544" y="356" width="83" height="15" fill="rgb(246,107,51)"/><text x="547.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (29 samples, 7.02%)</title><rect x="544" y="372" width="83" height="15" fill="rgb(254,163,34)"/><text x="547.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (29 samples, 7.02%)</title><rect x="544" y="388" width="83" height="15" fill="rgb(227,192,22)"/><text x="547.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (29 samples, 7.02%)</title><rect x="544" y="404" width="83" height="15" fill="rgb(217,51,7)"/><text x="547.00" y="414.50">pybind11:..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (29 samples, 7.02%)</title><rect x="544" y="420" width="83" height="15" fill="rgb(217,162,30)"/><text x="547.00" y="430.50">RuntimeSV..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.24%)</title><rect x="624" y="436" width="3" height="15" fill="rgb(249,31,33)"/><text x="627.00" y="446.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="624" y="452" width="3" height="15" fill="rgb(217,214,39)"/><text x="627.00" y="462.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.24%)</title><rect x="627" y="324" width="3" height="15" fill="rgb(238,109,18)"/><text x="630.00" y="334.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.24%)</title><rect x="630" y="420" width="2" height="15" fill="rgb(236,53,53)"/><text x="633.00" y="430.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.24%)</title><rect x="630" y="436" width="2" height="15" fill="rgb(250,19,7)"/><text x="633.00" y="446.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.24%)</title><rect x="630" y="452" width="2" height="15" fill="rgb(209,171,31)"/><text x="633.00" y="462.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="630" y="468" width="2" height="15" fill="rgb(210,213,22)"/><text x="633.00" y="478.50"></text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (108 samples, 26.15%)</title><rect x="327" y="100" width="308" height="15" fill="rgb(238,95,41)"/><text x="330.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 25.91%)</title><rect x="330" y="116" width="305" height="15" fill="rgb(254,215,27)"/><text x="333.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (103 samples, 24.94%)</title><rect x="341" y="132" width="294" height="15" fill="rgb(226,71,54)"/><text x="344.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (101 samples, 24.46%)</title><rect x="347" y="148" width="288" height="15" fill="rgb(235,216,3)"/><text x="350.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (96 samples, 23.24%)</title><rect x="361" y="164" width="274" height="15" fill="rgb(245,150,33)"/><text x="364.00" y="174.50">_run_sequence_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (82 samples, 19.85%)</title><rect x="401" y="180" width="234" height="15" fill="rgb(214,115,44)"/><text x="404.00" y="190.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (55 samples, 13.32%)</title><rect x="478" y="196" width="157" height="15" fill="rgb(216,13,35)"/><text x="481.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (46 samples, 11.14%)</title><rect x="504" y="212" width="131" height="15" fill="rgb(254,31,31)"/><text x="507.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (46 samples, 11.14%)</title><rect x="504" y="228" width="131" height="15" fill="rgb(212,160,33)"/><text x="507.00" y="238.50">_run (mlprodict/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (40 samples, 9.69%)</title><rect x="521" y="244" width="114" height="15" fill="rgb(226,7,46)"/><text x="524.00" y="254.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (38 samples, 9.20%)</title><rect x="527" y="260" width="108" height="15" fill="rgb(253,212,0)"/><text x="530.00" y="270.50">void pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (38 samples, 9.20%)</title><rect x="527" y="276" width="108" height="15" fill="rgb(249,201,22)"/><text x="530.00" y="286.50">void pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (3 samples, 0.73%)</title><rect x="627" y="292" width="8" height="15" fill="rgb(233,0,35)"/><text x="630.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (3 samples, 0.73%)</title><rect x="627" y="308" width="8" height="15" fill="rgb(212,24,53)"/><text x="630.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h) (2 samples, 0.48%)</title><rect x="630" y="324" width="5" height="15" fill="rgb(246,95,30)"/><text x="633.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h) (2 samples, 0.48%)</title><rect x="630" y="340" width="5" height="15" fill="rgb(212,78,52)"/><text x="633.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h) (2 samples, 0.48%)</title><rect x="630" y="356" width="5" height="15" fill="rgb(224,139,40)"/><text x="633.00" y="366.50"></text></g><g><title>pybind11::detail::get_local_type_info (cast.h) (2 samples, 0.48%)</title><rect x="630" y="372" width="5" height="15" fill="rgb(230,77,21)"/><text x="633.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (2 samples, 0.48%)</title><rect x="630" y="388" width="5" height="15" fill="rgb(237,49,48)"/><text x="633.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (2 samples, 0.48%)</title><rect x="630" y="404" width="5" height="15" fill="rgb(254,46,49)"/><text x="633.00" y="414.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (hashtable_policy.h) (1 samples, 0.24%)</title><rect x="632" y="420" width="3" height="15" fill="rgb(243,196,44)"/><text x="635.00" y="430.50"></text></g><g><title>std::hash&lt;std::type_index&gt;::operator() (typeindex) (1 samples, 0.24%)</title><rect x="632" y="436" width="3" height="15" fill="rgb(209,168,12)"/><text x="635.00" y="446.50"></text></g><g><title>std::type_index::hash_code (typeindex) (1 samples, 0.24%)</title><rect x="632" y="452" width="3" height="15" fill="rgb(229,114,33)"/><text x="635.00" y="462.50"></text></g><g><title>std::type_info::hash_code (typeinfo) (1 samples, 0.24%)</title><rect x="632" y="468" width="3" height="15" fill="rgb(219,161,13)"/><text x="635.00" y="478.50"></text></g><g><title>0x7f5b53c74e82 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="632" y="484" width="3" height="15" fill="rgb(227,49,5)"/><text x="635.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="635" y="404" width="3" height="15" fill="rgb(228,110,46)"/><text x="638.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="635" y="420" width="3" height="15" fill="rgb(229,166,45)"/><text x="638.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="635" y="436" width="3" height="15" fill="rgb(214,56,22)"/><text x="638.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="635" y="452" width="3" height="15" fill="rgb(227,87,47)"/><text x="638.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="635" y="468" width="3" height="15" fill="rgb(232,84,1)"/><text x="638.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.24%)</title><rect x="635" y="484" width="3" height="15" fill="rgb(234,227,4)"/><text x="638.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.24%)</title><rect x="635" y="500" width="3" height="15" fill="rgb(231,141,37)"/><text x="638.00" y="510.50"></text></g><g><title>profile_pyrt (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (110 samples, 26.63%)</title><rect x="327" y="68" width="314" height="15" fill="rgb(229,46,36)"/><text x="330.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_m_cl_proba..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (110 samples, 26.63%)</title><rect x="327" y="84" width="314" height="15" fill="rgb(235,220,32)"/><text x="330.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_prob..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.48%)</title><rect x="635" y="100" width="6" height="15" fill="rgb(207,34,33)"/><text x="638.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.48%)</title><rect x="635" y="116" width="6" height="15" fill="rgb(235,53,45)"/><text x="638.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.48%)</title><rect x="635" y="132" width="6" height="15" fill="rgb(206,146,31)"/><text x="638.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.48%)</title><rect x="635" y="148" width="6" height="15" fill="rgb(209,29,40)"/><text x="638.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.48%)</title><rect x="635" y="164" width="6" height="15" fill="rgb(240,58,33)"/><text x="638.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.48%)</title><rect x="635" y="180" width="6" height="15" fill="rgb(228,131,39)"/><text x="638.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.48%)</title><rect x="635" y="196" width="6" height="15" fill="rgb(231,90,17)"/><text x="638.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="212" width="6" height="15" fill="rgb(248,100,42)"/><text x="638.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="228" width="6" height="15" fill="rgb(249,122,42)"/><text x="638.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="244" width="6" height="15" fill="rgb(218,105,39)"/><text x="638.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="635" y="260" width="6" height="15" fill="rgb(248,79,46)"/><text x="638.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="276" width="6" height="15" fill="rgb(241,155,48)"/><text x="638.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.48%)</title><rect x="635" y="292" width="6" height="15" fill="rgb(207,151,17)"/><text x="638.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="308" width="6" height="15" fill="rgb(240,135,53)"/><text x="638.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="324" width="6" height="15" fill="rgb(218,182,32)"/><text x="638.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="340" width="6" height="15" fill="rgb(217,208,3)"/><text x="638.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="635" y="356" width="6" height="15" fill="rgb(214,143,10)"/><text x="638.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="635" y="372" width="6" height="15" fill="rgb(220,61,25)"/><text x="638.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.48%)</title><rect x="635" y="388" width="6" height="15" fill="rgb(241,136,2)"/><text x="638.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.24%)</title><rect x="638" y="404" width="3" height="15" fill="rgb(222,30,36)"/><text x="641.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.24%)</title><rect x="638" y="420" width="3" height="15" fill="rgb(243,41,23)"/><text x="641.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.24%)</title><rect x="638" y="436" width="3" height="15" fill="rgb(234,174,32)"/><text x="641.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.24%)</title><rect x="638" y="452" width="3" height="15" fill="rgb(230,15,40)"/><text x="641.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.24%)</title><rect x="638" y="468" width="3" height="15" fill="rgb(245,74,33)"/><text x="641.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.24%)</title><rect x="638" y="484" width="3" height="15" fill="rgb(221,80,3)"/><text x="641.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.24%)</title><rect x="638" y="500" width="3" height="15" fill="rgb(220,131,9)"/><text x="641.00" y="510.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.24%)</title><rect x="638" y="516" width="3" height="15" fill="rgb(228,91,47)"/><text x="641.00" y="526.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="655" y="132" width="3" height="15" fill="rgb(239,31,37)"/><text x="658.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="655" y="148" width="3" height="15" fill="rgb(232,40,38)"/><text x="658.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.48%)</title><rect x="655" y="116" width="6" height="15" fill="rgb(230,133,13)"/><text x="658.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.24%)</title><rect x="658" y="132" width="3" height="15" fill="rgb(233,199,27)"/><text x="661.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.24%)</title><rect x="658" y="148" width="3" height="15" fill="rgb(206,120,47)"/><text x="661.00" y="158.50"></text></g><g><title>0x7f5b2e74f3fd (?) (1 samples, 0.24%)</title><rect x="704" y="180" width="3" height="15" fill="rgb(218,184,15)"/><text x="707.00" y="190.50"></text></g><g><title>0x7f5b2e74d12f (?) (1 samples, 0.24%)</title><rect x="704" y="196" width="3" height="15" fill="rgb(225,8,43)"/><text x="707.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="704" y="212" width="3" height="15" fill="rgb(230,95,13)"/><text x="707.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.24%)</title><rect x="704" y="228" width="3" height="15" fill="rgb(236,94,45)"/><text x="707.00" y="238.50"></text></g><g><title>0x7f5b2e74cb52 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="707" y="196" width="3" height="15" fill="rgb(209,92,42)"/><text x="710.00" y="206.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="710" y="212" width="8" height="15" fill="rgb(230,29,31)"/><text x="713.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.73%)</title><rect x="710" y="228" width="8" height="15" fill="rgb(229,152,21)"/><text x="713.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.73%)</title><rect x="710" y="244" width="8" height="15" fill="rgb(253,68,23)"/><text x="713.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.24%)</title><rect x="715" y="260" width="3" height="15" fill="rgb(229,210,40)"/><text x="718.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.24%)</title><rect x="715" y="276" width="3" height="15" fill="rgb(226,129,26)"/><text x="718.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.24%)</title><rect x="715" y="292" width="3" height="15" fill="rgb(225,151,19)"/><text x="718.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="715" y="308" width="3" height="15" fill="rgb(225,7,19)"/><text x="718.00" y="318.50"></text></g><g><title>0x7f5b2e74cd0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.97%)</title><rect x="710" y="196" width="11" height="15" fill="rgb(241,220,22)"/><text x="713.00" y="206.50"></text></g><g><title>0x7f5b2e736f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="718" y="212" width="3" height="15" fill="rgb(225,85,37)"/><text x="721.00" y="222.50"></text></g><g><title>0x7f5b53c5e902 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="721" y="276" width="3" height="15" fill="rgb(240,88,11)"/><text x="724.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.48%)</title><rect x="721" y="260" width="6" height="15" fill="rgb(245,182,13)"/><text x="724.00" y="270.50"></text></g><g><title>0x7f5b53c5ebd4 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="724" y="276" width="3" height="15" fill="rgb(236,133,47)"/><text x="727.00" y="286.50"></text></g><g><title>0x7f5b2e74cd58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="721" y="196" width="9" height="15" fill="rgb(245,51,41)"/><text x="724.00" y="206.50"></text></g><g><title>0x7f5b2e7365ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="721" y="212" width="9" height="15" fill="rgb(208,206,0)"/><text x="724.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.73%)</title><rect x="721" y="228" width="9" height="15" fill="rgb(244,210,3)"/><text x="724.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.73%)</title><rect x="721" y="244" width="9" height="15" fill="rgb(245,154,9)"/><text x="724.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.24%)</title><rect x="727" y="260" width="3" height="15" fill="rgb(232,11,23)"/><text x="730.00" y="270.50"></text></g><g><title>0x7f5b2e74cde1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="730" y="196" width="2" height="15" fill="rgb(242,117,9)"/><text x="733.00" y="206.50"></text></g><g><title>0x7f5b2e7365ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="730" y="212" width="2" height="15" fill="rgb(215,142,17)"/><text x="733.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.24%)</title><rect x="730" y="228" width="2" height="15" fill="rgb(241,157,35)"/><text x="733.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.24%)</title><rect x="730" y="244" width="2" height="15" fill="rgb(217,208,0)"/><text x="733.00" y="254.50"></text></g><g><title>0x7f5b2e74ce66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="732" y="196" width="3" height="15" fill="rgb(233,128,26)"/><text x="735.00" y="206.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="732" y="212" width="3" height="15" fill="rgb(233,72,29)"/><text x="735.00" y="222.50"></text></g><g><title>0x7f5b2e74cf0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="735" y="196" width="9" height="15" fill="rgb(223,23,46)"/><text x="738.00" y="206.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="735" y="212" width="9" height="15" fill="rgb(232,184,26)"/><text x="738.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.73%)</title><rect x="735" y="228" width="9" height="15" fill="rgb(207,49,46)"/><text x="738.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.73%)</title><rect x="735" y="244" width="9" height="15" fill="rgb(223,103,35)"/><text x="738.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.48%)</title><rect x="738" y="260" width="6" height="15" fill="rgb(229,186,0)"/><text x="741.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.48%)</title><rect x="738" y="276" width="6" height="15" fill="rgb(252,79,53)"/><text x="741.00" y="286.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="744" y="212" width="3" height="15" fill="rgb(236,10,52)"/><text x="747.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.24%)</title><rect x="744" y="228" width="3" height="15" fill="rgb(234,33,24)"/><text x="747.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.24%)</title><rect x="744" y="244" width="3" height="15" fill="rgb(229,139,22)"/><text x="747.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.24%)</title><rect x="744" y="260" width="3" height="15" fill="rgb(229,111,40)"/><text x="747.00" y="270.50"></text></g><g><title>0x7f5b2e74cf5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="744" y="196" width="6" height="15" fill="rgb(206,125,5)"/><text x="747.00" y="206.50"></text></g><g><title>0x7f5b2e736f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="747" y="212" width="3" height="15" fill="rgb(244,53,28)"/><text x="750.00" y="222.50"></text></g><g><title>0x7f5b2e73633c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="747" y="228" width="3" height="15" fill="rgb(252,59,51)"/><text x="750.00" y="238.50"></text></g><g><title>0x7f5b2e735e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="747" y="244" width="3" height="15" fill="rgb(245,70,36)"/><text x="750.00" y="254.50"></text></g><g><title>0x7f5b2e74cf9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="750" y="196" width="2" height="15" fill="rgb(247,195,33)"/><text x="753.00" y="206.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="750" y="212" width="2" height="15" fill="rgb(236,113,24)"/><text x="753.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.24%)</title><rect x="750" y="228" width="2" height="15" fill="rgb(242,114,5)"/><text x="753.00" y="238.50"></text></g><g><title>0x7f5b52e81800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="758" y="244" width="3" height="15" fill="rgb(239,163,11)"/><text x="761.00" y="254.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.48%)</title><rect x="758" y="228" width="6" height="15" fill="rgb(250,79,19)"/><text x="761.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="761" y="244" width="3" height="15" fill="rgb(215,226,32)"/><text x="764.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="761" y="260" width="3" height="15" fill="rgb(208,173,44)"/><text x="764.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="761" y="276" width="3" height="15" fill="rgb(217,34,27)"/><text x="764.00" y="286.50"></text></g><g><title>0x7f5b2e74d12f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.21%)</title><rect x="752" y="196" width="15" height="15" fill="rgb(235,107,32)"/><text x="755.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (5 samples, 1.21%)</title><rect x="752" y="212" width="15" height="15" fill="rgb(214,101,31)"/><text x="755.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.24%)</title><rect x="764" y="228" width="3" height="15" fill="rgb(215,71,33)"/><text x="767.00" y="238.50"></text></g><g><title>0x7f5b2e737742 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="767" y="212" width="3" height="15" fill="rgb(233,143,13)"/><text x="770.00" y="222.50"></text></g><g><title>0x7f5b2e74d237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="767" y="196" width="5" height="15" fill="rgb(227,183,40)"/><text x="770.00" y="206.50"></text></g><g><title>0x7f5b2e7377c1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="770" y="212" width="2" height="15" fill="rgb(214,163,46)"/><text x="773.00" y="222.50"></text></g><g><title>0x7f5b2e74d3f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="772" y="196" width="3" height="15" fill="rgb(254,35,42)"/><text x="775.00" y="206.50"></text></g><g><title>0x7f5b2e74d443 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="775" y="196" width="3" height="15" fill="rgb(229,115,28)"/><text x="778.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.24%)</title><rect x="778" y="228" width="3" height="15" fill="rgb(233,101,43)"/><text x="781.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.24%)</title><rect x="778" y="244" width="3" height="15" fill="rgb(226,222,23)"/><text x="781.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.24%)</title><rect x="781" y="228" width="3" height="15" fill="rgb(253,11,17)"/><text x="784.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.24%)</title><rect x="781" y="244" width="3" height="15" fill="rgb(226,98,50)"/><text x="784.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="781" y="260" width="3" height="15" fill="rgb(248,199,40)"/><text x="784.00" y="270.50"></text></g><g><title>0x7f5b2e74d46c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.73%)</title><rect x="778" y="196" width="9" height="15" fill="rgb(237,186,9)"/><text x="781.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (3 samples, 0.73%)</title><rect x="778" y="212" width="9" height="15" fill="rgb(207,41,24)"/><text x="781.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="784" y="228" width="3" height="15" fill="rgb(248,49,18)"/><text x="787.00" y="238.50"></text></g><g><title>0x7f5b2e74d528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="787" y="196" width="3" height="15" fill="rgb(254,29,40)"/><text x="790.00" y="206.50"></text></g><g><title>0x7f5b2e736e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="787" y="212" width="3" height="15" fill="rgb(227,87,12)"/><text x="790.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.24%)</title><rect x="787" y="228" width="3" height="15" fill="rgb(208,219,1)"/><text x="790.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.24%)</title><rect x="787" y="244" width="3" height="15" fill="rgb(245,221,37)"/><text x="790.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.24%)</title><rect x="787" y="260" width="3" height="15" fill="rgb(232,35,28)"/><text x="790.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.24%)</title><rect x="787" y="276" width="3" height="15" fill="rgb(244,42,40)"/><text x="790.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.24%)</title><rect x="787" y="292" width="3" height="15" fill="rgb(206,77,24)"/><text x="790.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="787" y="308" width="3" height="15" fill="rgb(214,178,9)"/><text x="790.00" y="318.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.24%)</title><rect x="790" y="244" width="2" height="15" fill="rgb(236,210,34)"/><text x="793.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="792" y="260" width="6" height="15" fill="rgb(233,184,6)"/><text x="795.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.48%)</title><rect x="792" y="276" width="6" height="15" fill="rgb(230,94,2)"/><text x="795.00" y="286.50"></text></g><g><title>0x7f5b2e74d553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.69%)</title><rect x="790" y="196" width="20" height="15" fill="rgb(223,132,2)"/><text x="793.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.69%)</title><rect x="790" y="212" width="20" height="15" fill="rgb(220,80,9)"/><text x="793.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.69%)</title><rect x="790" y="228" width="20" height="15" fill="rgb(207,174,51)"/><text x="793.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.45%)</title><rect x="792" y="244" width="18" height="15" fill="rgb(219,206,43)"/><text x="795.00" y="254.50"></text></g><g><title>tanhf32x (libm-2.29.so) (4 samples, 0.97%)</title><rect x="798" y="260" width="12" height="15" fill="rgb(219,97,45)"/><text x="801.00" y="270.50"></text></g><g><title>expm1f64 (libm-2.29.so) (4 samples, 0.97%)</title><rect x="798" y="276" width="12" height="15" fill="rgb(236,53,19)"/><text x="801.00" y="286.50"></text></g><g><title>0x7f5b2e74d55e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="810" y="196" width="2" height="15" fill="rgb(240,2,45)"/><text x="813.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="810" y="212" width="2" height="15" fill="rgb(240,48,15)"/><text x="813.00" y="222.50"></text></g><g><title>0x7f5b2e74d6fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="812" y="196" width="3" height="15" fill="rgb(239,227,43)"/><text x="815.00" y="206.50"></text></g><g><title>0x7f5b2e74d70a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="815" y="196" width="3" height="15" fill="rgb(246,25,29)"/><text x="818.00" y="206.50"></text></g><g><title>0x7f5b2e74d7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="818" y="196" width="3" height="15" fill="rgb(209,193,12)"/><text x="821.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="818" y="212" width="3" height="15" fill="rgb(244,46,7)"/><text x="821.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="818" y="228" width="3" height="15" fill="rgb(210,36,54)"/><text x="821.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="818" y="244" width="3" height="15" fill="rgb(207,222,34)"/><text x="821.00" y="254.50"></text></g><g><title>0x7f5b2e74dbb0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="821" y="196" width="3" height="15" fill="rgb(230,166,12)"/><text x="824.00" y="206.50"></text></g><g><title>0x7f5b2e74dc20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="824" y="196" width="3" height="15" fill="rgb(210,170,50)"/><text x="827.00" y="206.50"></text></g><g><title>0x7f5b2e74f3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (47 samples, 11.38%)</title><rect x="707" y="180" width="134" height="15" fill="rgb(209,166,27)"/><text x="710.00" y="190.50">0x7f5b2e74f3fd (..</text></g><g><title>0x7f5b2e74ed06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.21%)</title><rect x="827" y="196" width="14" height="15" fill="rgb(254,225,50)"/><text x="830.00" y="206.50"></text></g><g><title>0x7f5b2e7365ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.21%)</title><rect x="827" y="212" width="14" height="15" fill="rgb(243,37,2)"/><text x="830.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 1.21%)</title><rect x="827" y="228" width="14" height="15" fill="rgb(232,148,11)"/><text x="830.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.97%)</title><rect x="830" y="244" width="11" height="15" fill="rgb(206,212,44)"/><text x="833.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.48%)</title><rect x="835" y="260" width="6" height="15" fill="rgb(236,79,17)"/><text x="838.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.48%)</title><rect x="835" y="276" width="6" height="15" fill="rgb(214,73,11)"/><text x="838.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.24%)</title><rect x="838" y="292" width="3" height="15" fill="rgb(225,67,33)"/><text x="841.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="838" y="308" width="3" height="15" fill="rgb(224,228,16)"/><text x="841.00" y="318.50"></text></g><g><title>0x7f5b2e750154 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="841" y="180" width="3" height="15" fill="rgb(241,147,27)"/><text x="844.00" y="190.50"></text></g><g><title>0x7f5b2e750175 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="844" y="180" width="3" height="15" fill="rgb(233,206,49)"/><text x="847.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (59 samples, 14.29%)</title><rect x="681" y="164" width="169" height="15" fill="rgb(236,203,39)"/><text x="684.00" y="174.50">_dense_predict_proba ..</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.24%)</title><rect x="847" y="180" width="3" height="15" fill="rgb(240,133,12)"/><text x="850.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (7 samples, 1.69%)</title><rect x="918" y="196" width="20" height="15" fill="rgb(243,179,15)"/><text x="921.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.48%)</title><rect x="938" y="196" width="6" height="15" fill="rgb(209,83,12)"/><text x="941.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.24%)</title><rect x="944" y="196" width="3" height="15" fill="rgb(210,126,45)"/><text x="947.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.45%)</title><rect x="961" y="212" width="17" height="15" fill="rgb(218,124,49)"/><text x="964.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 2.91%)</title><rect x="947" y="196" width="34" height="15" fill="rgb(231,24,22)"/><text x="950.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="978" y="212" width="3" height="15" fill="rgb(238,91,6)"/><text x="981.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.24%)</title><rect x="1018" y="212" width="3" height="15" fill="rgb(226,25,0)"/><text x="1021.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.24%)</title><rect x="1018" y="228" width="3" height="15" fill="rgb(254,206,12)"/><text x="1021.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 3.63%)</title><rect x="981" y="196" width="43" height="15" fill="rgb(244,140,54)"/><text x="984.00" y="206.50">_num..</text></g><g><title>array_shape_get (getset.c) (1 samples, 0.24%)</title><rect x="1021" y="212" width="3" height="15" fill="rgb(242,77,4)"/><text x="1024.00" y="222.50"></text></g><g><title>0x7f5b53c7f144 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1032" y="212" width="3" height="15" fill="rgb(253,90,35)"/><text x="1035.00" y="222.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.24%)</title><rect x="1041" y="276" width="3" height="15" fill="rgb(229,110,23)"/><text x="1044.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.24%)</title><rect x="1041" y="292" width="3" height="15" fill="rgb(217,186,14)"/><text x="1044.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="1041" y="308" width="3" height="15" fill="rgb(244,53,53)"/><text x="1044.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1041" y="324" width="3" height="15" fill="rgb(238,3,43)"/><text x="1044.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="1047" y="340" width="3" height="15" fill="rgb(226,126,22)"/><text x="1050.00" y="350.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (10 samples, 2.42%)</title><rect x="1024" y="196" width="28" height="15" fill="rgb(212,86,7)"/><text x="1027.00" y="206.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.45%)</title><rect x="1035" y="212" width="17" height="15" fill="rgb(247,217,6)"/><text x="1038.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (6 samples, 1.45%)</title><rect x="1035" y="228" width="17" height="15" fill="rgb(242,39,28)"/><text x="1038.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 1.21%)</title><rect x="1038" y="244" width="14" height="15" fill="rgb(218,60,23)"/><text x="1041.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (5 samples, 1.21%)</title><rect x="1038" y="260" width="14" height="15" fill="rgb(239,10,16)"/><text x="1041.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (3 samples, 0.73%)</title><rect x="1044" y="276" width="8" height="15" fill="rgb(240,94,29)"/><text x="1047.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.73%)</title><rect x="1044" y="292" width="8" height="15" fill="rgb(205,15,24)"/><text x="1047.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (3 samples, 0.73%)</title><rect x="1044" y="308" width="8" height="15" fill="rgb(219,150,37)"/><text x="1047.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.73%)</title><rect x="1044" y="324" width="8" height="15" fill="rgb(208,167,33)"/><text x="1047.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.24%)</title><rect x="1050" y="340" width="2" height="15" fill="rgb(228,184,14)"/><text x="1053.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="1050" y="356" width="2" height="15" fill="rgb(224,84,3)"/><text x="1053.00" y="366.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (74 samples, 17.92%)</title><rect x="861" y="180" width="211" height="15" fill="rgb(225,191,5)"/><text x="864.00" y="190.50">check_array (sklearn/utils/..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.69%)</title><rect x="1052" y="196" width="20" height="15" fill="rgb(253,29,13)"/><text x="1055.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 1.69%)</title><rect x="1052" y="212" width="20" height="15" fill="rgb(246,118,41)"/><text x="1055.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (7 samples, 1.69%)</title><rect x="1127" y="212" width="20" height="15" fill="rgb(251,158,30)"/><text x="1130.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (30 samples, 7.26%)</title><rect x="1084" y="196" width="86" height="15" fill="rgb(220,138,3)"/><text x="1087.00" y="206.50">&lt;listcomp&gt;..</text></g><g><title>unicode_startswith (python3.7) (8 samples, 1.94%)</title><rect x="1147" y="212" width="23" height="15" fill="rgb(241,144,8)"/><text x="1150.00" y="222.50">u..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (35 samples, 8.47%)</title><rect x="1072" y="180" width="100" height="15" fill="rgb(229,115,26)"/><text x="1075.00" y="190.50">check_is_fit..</text></g><g><title>isclass (inspect.py) (1 samples, 0.24%)</title><rect x="1170" y="196" width="2" height="15" fill="rgb(253,29,2)"/><text x="1173.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (114 samples, 27.60%)</title><rect x="850" y="164" width="325" height="15" fill="rgb(248,101,9)"/><text x="853.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.24%)</title><rect x="1172" y="180" width="3" height="15" fill="rgb(209,47,34)"/><text x="1175.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (176 samples, 42.62%)</title><rect x="675" y="148" width="503" height="15" fill="rgb(236,100,36)"/><text x="678.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>array_size_get (getset.c) (1 samples, 0.24%)</title><rect x="1175" y="164" width="3" height="15" fill="rgb(214,199,28)"/><text x="1178.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="1175" y="180" width="3" height="15" fill="rgb(213,53,13)"/><text x="1178.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="1178" y="148" width="3" height="15" fill="rgb(240,217,6)"/><text x="1181.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="1178" y="164" width="3" height="15" fill="rgb(233,22,24)"/><text x="1181.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="1178" y="180" width="3" height="15" fill="rgb(238,125,25)"/><text x="1181.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (179 samples, 43.34%)</title><rect x="672" y="132" width="512" height="15" fill="rgb(247,20,36)"/><text x="675.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (1 samples, 0.24%)</title><rect x="1181" y="148" width="3" height="15" fill="rgb(231,158,11)"/><text x="1184.00" y="158.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.24%)</title><rect x="1184" y="132" width="3" height="15" fill="rgb(235,153,1)"/><text x="1187.00" y="142.50"></text></g><g><title>all (413 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,183,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (413 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(230,94,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (192 samples, 46.49%)</title><rect x="641" y="68" width="549" height="15" fill="rgb(225,8,15)"/><text x="644.00" y="78.50">profile_skl (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_fl..</text></g><g><title>setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (192 samples, 46.49%)</title><rect x="641" y="84" width="549" height="15" fill="rgb(242,41,37)"/><text x="644.00" y="94.50">setup_profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_..</text></g><g><title>profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_.py) (192 samples, 46.49%)</title><rect x="641" y="100" width="549" height="15" fill="rgb(236,222,35)"/><text x="644.00" y="110.50">profile (bench_SVC_sigmoid_m_cl_probabilityTrue_kernelsigmoid_1_4_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (185 samples, 44.79%)</title><rect x="661" y="116" width="529" height="15" fill="rgb(215,155,33)"/><text x="664.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(231,147,3)"/><text x="1190.00" y="142.50"></text></g></g></svg>