<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(248,93,29)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(237,13,23)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(229,23,28)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(248,209,30)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(248,118,31)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(223,187,21)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(214,85,30)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(215,216,35)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(252,123,23)"/><text x="13.00" y="1006.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.32%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(222,177,7)"/><text x="13.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="13" y="868" width="12" height="15" fill="rgb(214,152,20)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="13" y="884" width="12" height="15" fill="rgb(223,93,9)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="13" y="900" width="12" height="15" fill="rgb(228,123,24)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="13" y="916" width="12" height="15" fill="rgb(235,104,51)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 0.96%)</title><rect x="13" y="932" width="12" height="15" fill="rgb(206,40,52)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="17" y="948" width="8" height="15" fill="rgb(212,26,50)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.64%)</title><rect x="17" y="964" width="8" height="15" fill="rgb(231,38,8)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.64%)</title><rect x="17" y="980" width="8" height="15" fill="rgb(249,11,29)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(215,116,53)"/><text x="24.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(223,213,47)"/><text x="24.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(231,216,35)"/><text x="24.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.32%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(227,164,36)"/><text x="24.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(235,218,40)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="196" width="18" height="15" fill="rgb(231,88,4)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="212" width="18" height="15" fill="rgb(217,164,15)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="228" width="18" height="15" fill="rgb(251,20,37)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="244" width="18" height="15" fill="rgb(251,196,35)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="260" width="18" height="15" fill="rgb(252,205,30)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="276" width="18" height="15" fill="rgb(246,18,37)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.60%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(246,0,16)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(209,26,36)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(218,94,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(235,18,52)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(249,146,7)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(239,66,21)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.60%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(245,207,29)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(206,129,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(241,112,27)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(223,106,17)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(225,115,40)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(216,76,37)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.60%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(208,197,34)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(254,24,44)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(216,117,6)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(238,24,45)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(206,101,8)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(237,128,24)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.60%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(211,156,39)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(215,82,14)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(223,211,34)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(251,30,7)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(222,173,35)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(254,106,19)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(229,163,6)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(245,195,24)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(245,117,10)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.60%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(222,161,12)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(237,84,54)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(218,213,41)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(221,185,48)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(235,176,14)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(224,110,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.60%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(226,180,16)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.60%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(223,188,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.60%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(227,127,52)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(250,137,2)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(232,184,31)"/><text x="28.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(207,148,52)"/><text x="28.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(252,42,36)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.32%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(217,133,33)"/><text x="28.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(224,53,36)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.32%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(254,146,49)"/><text x="28.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1124" width="4" height="15" fill="rgb(240,83,46)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1140" width="4" height="15" fill="rgb(205,30,14)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1156" width="4" height="15" fill="rgb(224,153,19)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1172" width="4" height="15" fill="rgb(242,151,14)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1188" width="4" height="15" fill="rgb(246,108,14)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.32%)</title><rect x="28" y="1204" width="4" height="15" fill="rgb(205,75,26)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1220" width="4" height="15" fill="rgb(250,178,39)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1236" width="4" height="15" fill="rgb(243,134,1)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1252" width="4" height="15" fill="rgb(236,10,23)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1268" width="4" height="15" fill="rgb(241,91,51)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1284" width="4" height="15" fill="rgb(211,190,20)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.32%)</title><rect x="28" y="1300" width="4" height="15" fill="rgb(218,180,0)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1316" width="4" height="15" fill="rgb(216,98,4)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1332" width="4" height="15" fill="rgb(248,71,33)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1348" width="4" height="15" fill="rgb(251,88,26)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1364" width="4" height="15" fill="rgb(215,160,22)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1380" width="4" height="15" fill="rgb(246,164,26)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.32%)</title><rect x="28" y="1396" width="4" height="15" fill="rgb(219,41,21)"/><text x="31.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1412" width="4" height="15" fill="rgb(238,188,27)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1428" width="4" height="15" fill="rgb(216,54,29)"/><text x="31.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="28" y="1444" width="4" height="15" fill="rgb(244,28,7)"/><text x="31.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1460" width="4" height="15" fill="rgb(208,13,7)"/><text x="31.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1476" width="4" height="15" fill="rgb(246,75,22)"/><text x="31.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="28" y="1492" width="4" height="15" fill="rgb(238,3,31)"/><text x="31.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1476" width="4" height="15" fill="rgb(207,158,42)"/><text x="35.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1492" width="4" height="15" fill="rgb(254,198,38)"/><text x="35.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1508" width="4" height="15" fill="rgb(205,46,17)"/><text x="35.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1524" width="4" height="15" fill="rgb(231,51,35)"/><text x="35.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1540" width="4" height="15" fill="rgb(252,54,27)"/><text x="35.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="32" y="1556" width="4" height="15" fill="rgb(248,216,44)"/><text x="35.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="32" y="1572" width="4" height="15" fill="rgb(237,116,43)"/><text x="35.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1588" width="4" height="15" fill="rgb(252,131,23)"/><text x="35.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1604" width="4" height="15" fill="rgb(227,203,8)"/><text x="35.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1620" width="4" height="15" fill="rgb(240,221,12)"/><text x="35.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1636" width="4" height="15" fill="rgb(225,15,31)"/><text x="35.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1652" width="4" height="15" fill="rgb(252,171,10)"/><text x="35.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.32%)</title><rect x="32" y="1668" width="4" height="15" fill="rgb(246,202,2)"/><text x="35.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.32%)</title><rect x="32" y="1684" width="4" height="15" fill="rgb(216,173,46)"/><text x="35.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1700" width="4" height="15" fill="rgb(213,176,18)"/><text x="35.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1716" width="4" height="15" fill="rgb(248,60,43)"/><text x="35.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1732" width="4" height="15" fill="rgb(240,1,12)"/><text x="35.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1748" width="4" height="15" fill="rgb(228,90,42)"/><text x="35.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1764" width="4" height="15" fill="rgb(226,47,41)"/><text x="35.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.32%)</title><rect x="32" y="1780" width="4" height="15" fill="rgb(230,117,25)"/><text x="35.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1796" width="4" height="15" fill="rgb(235,213,5)"/><text x="35.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1812" width="4" height="15" fill="rgb(245,96,54)"/><text x="35.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1828" width="4" height="15" fill="rgb(210,91,12)"/><text x="35.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1844" width="4" height="15" fill="rgb(232,5,47)"/><text x="35.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1860" width="4" height="15" fill="rgb(230,220,53)"/><text x="35.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.32%)</title><rect x="32" y="1876" width="4" height="15" fill="rgb(235,162,4)"/><text x="35.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1892" width="4" height="15" fill="rgb(237,180,37)"/><text x="35.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1908" width="4" height="15" fill="rgb(238,12,41)"/><text x="35.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1924" width="4" height="15" fill="rgb(239,92,4)"/><text x="35.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="1940" width="4" height="15" fill="rgb(217,131,43)"/><text x="35.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1956" width="4" height="15" fill="rgb(221,155,23)"/><text x="35.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.32%)</title><rect x="32" y="1972" width="4" height="15" fill="rgb(237,173,53)"/><text x="35.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="1988" width="4" height="15" fill="rgb(212,20,54)"/><text x="35.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="2004" width="4" height="15" fill="rgb(253,34,31)"/><text x="35.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="2020" width="4" height="15" fill="rgb(251,166,3)"/><text x="35.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="2036" width="4" height="15" fill="rgb(219,211,16)"/><text x="35.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="2052" width="4" height="15" fill="rgb(224,174,41)"/><text x="35.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="32" y="2068" width="4" height="15" fill="rgb(224,9,25)"/><text x="35.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="32" y="2084" width="4" height="15" fill="rgb(221,38,10)"/><text x="35.00" y="2094.50"></text></g><g><title>&lt;module&gt; (asyncio/tasks.py) (1 samples, 0.32%)</title><rect x="32" y="2100" width="4" height="15" fill="rgb(253,76,20)"/><text x="35.00" y="2110.50"></text></g><g><title>__init__ (_weakrefset.py) (1 samples, 0.32%)</title><rect x="32" y="2116" width="4" height="15" fill="rgb(227,201,14)"/><text x="35.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="484" width="12" height="15" fill="rgb(248,63,53)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="500" width="12" height="15" fill="rgb(234,96,24)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="516" width="12" height="15" fill="rgb(216,160,51)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="532" width="12" height="15" fill="rgb(211,95,18)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="548" width="12" height="15" fill="rgb(219,168,42)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="564" width="12" height="15" fill="rgb(235,215,12)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.96%)</title><rect x="28" y="580" width="12" height="15" fill="rgb(253,98,51)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="596" width="12" height="15" fill="rgb(218,224,17)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="612" width="12" height="15" fill="rgb(244,11,29)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="628" width="12" height="15" fill="rgb(250,154,28)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="644" width="12" height="15" fill="rgb(235,83,28)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="660" width="12" height="15" fill="rgb(206,146,3)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.96%)</title><rect x="28" y="676" width="12" height="15" fill="rgb(206,7,21)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="692" width="12" height="15" fill="rgb(207,165,51)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="708" width="12" height="15" fill="rgb(240,66,30)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="724" width="12" height="15" fill="rgb(225,228,54)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="740" width="12" height="15" fill="rgb(229,181,54)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="756" width="12" height="15" fill="rgb(244,179,1)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.96%)</title><rect x="28" y="772" width="12" height="15" fill="rgb(213,100,49)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="788" width="12" height="15" fill="rgb(209,93,32)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="804" width="12" height="15" fill="rgb(249,140,21)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="820" width="12" height="15" fill="rgb(216,159,20)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="836" width="12" height="15" fill="rgb(233,203,35)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="852" width="12" height="15" fill="rgb(236,68,45)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.96%)</title><rect x="28" y="868" width="12" height="15" fill="rgb(210,202,14)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="884" width="12" height="15" fill="rgb(250,155,18)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="900" width="12" height="15" fill="rgb(246,225,43)"/><text x="31.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="916" width="12" height="15" fill="rgb(236,151,7)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="932" width="12" height="15" fill="rgb(245,137,17)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="948" width="12" height="15" fill="rgb(205,85,38)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="964" width="12" height="15" fill="rgb(246,13,37)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="980" width="12" height="15" fill="rgb(205,52,28)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="996" width="12" height="15" fill="rgb(236,34,1)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.96%)</title><rect x="28" y="1012" width="12" height="15" fill="rgb(233,133,24)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="1028" width="12" height="15" fill="rgb(210,121,52)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="1044" width="12" height="15" fill="rgb(243,9,51)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="1060" width="12" height="15" fill="rgb(208,55,49)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="28" y="1076" width="12" height="15" fill="rgb(213,203,7)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="28" y="1092" width="12" height="15" fill="rgb(242,134,4)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.96%)</title><rect x="28" y="1108" width="12" height="15" fill="rgb(209,204,24)"/><text x="31.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1124" width="8" height="15" fill="rgb(238,84,5)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1140" width="8" height="15" fill="rgb(211,113,40)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1156" width="8" height="15" fill="rgb(238,14,3)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1172" width="8" height="15" fill="rgb(216,50,22)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1188" width="8" height="15" fill="rgb(237,185,25)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="32" y="1204" width="8" height="15" fill="rgb(246,65,1)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1220" width="8" height="15" fill="rgb(209,125,1)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.64%)</title><rect x="32" y="1236" width="8" height="15" fill="rgb(218,9,41)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1252" width="8" height="15" fill="rgb(221,116,15)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1268" width="8" height="15" fill="rgb(233,113,31)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1284" width="8" height="15" fill="rgb(223,213,37)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1300" width="8" height="15" fill="rgb(234,67,21)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1316" width="8" height="15" fill="rgb(238,107,28)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="32" y="1332" width="8" height="15" fill="rgb(245,54,54)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1348" width="8" height="15" fill="rgb(215,100,0)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.64%)</title><rect x="32" y="1364" width="8" height="15" fill="rgb(216,0,42)"/><text x="35.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1380" width="8" height="15" fill="rgb(237,82,45)"/><text x="35.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1396" width="8" height="15" fill="rgb(205,10,42)"/><text x="35.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1412" width="8" height="15" fill="rgb(219,86,21)"/><text x="35.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="32" y="1428" width="8" height="15" fill="rgb(240,153,7)"/><text x="35.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="32" y="1444" width="8" height="15" fill="rgb(227,207,28)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.64%)</title><rect x="32" y="1460" width="8" height="15" fill="rgb(211,126,24)"/><text x="35.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.32%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(248,130,0)"/><text x="39.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.32%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(228,177,14)"/><text x="39.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(207,68,27)"/><text x="39.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.32%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(237,100,22)"/><text x="39.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.32%)</title><rect x="36" y="1540" width="4" height="15" fill="rgb(225,40,54)"/><text x="39.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.32%)</title><rect x="36" y="1556" width="4" height="15" fill="rgb(208,153,38)"/><text x="39.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.32%)</title><rect x="36" y="1572" width="4" height="15" fill="rgb(249,110,8)"/><text x="39.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.32%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(242,145,15)"/><text x="39.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.32%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(226,52,6)"/><text x="39.00" y="1614.50"></text></g><g><title>0x7f27341070e9 (?) (1 samples, 0.32%)</title><rect x="36" y="1620" width="4" height="15" fill="rgb(217,70,1)"/><text x="39.00" y="1630.50"></text></g><g><title>0x7f27340f8567 (?) (1 samples, 0.32%)</title><rect x="36" y="1636" width="4" height="15" fill="rgb(251,77,31)"/><text x="39.00" y="1646.50"></text></g><g><title>0x7f27340e9586 (?) (1 samples, 0.32%)</title><rect x="36" y="1652" width="4" height="15" fill="rgb(219,199,36)"/><text x="39.00" y="1662.50"></text></g><g><title>0x7f27341070e9 (?) (1 samples, 0.32%)</title><rect x="36" y="1668" width="4" height="15" fill="rgb(229,196,40)"/><text x="39.00" y="1678.50"></text></g><g><title>0x7f27340f8548 (?) (1 samples, 0.32%)</title><rect x="36" y="1684" width="4" height="15" fill="rgb(218,135,5)"/><text x="39.00" y="1694.50"></text></g><g><title>0x7f27340f4944 (?) (1 samples, 0.32%)</title><rect x="36" y="1700" width="4" height="15" fill="rgb(226,109,1)"/><text x="39.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="772" width="4" height="15" fill="rgb(220,47,41)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(212,14,20)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="804" width="4" height="15" fill="rgb(242,119,38)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="820" width="4" height="15" fill="rgb(224,137,18)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="836" width="4" height="15" fill="rgb(235,39,0)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="852" width="4" height="15" fill="rgb(215,91,44)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.32%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(252,56,23)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(208,159,17)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(206,183,50)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(210,128,17)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(212,33,10)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(214,38,48)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.32%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(243,124,35)"/><text x="43.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(205,211,35)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(244,173,53)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(245,91,21)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1028" width="4" height="15" fill="rgb(216,106,48)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="40" y="1044" width="4" height="15" fill="rgb(230,126,44)"/><text x="43.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1060" width="4" height="15" fill="rgb(237,66,7)"/><text x="43.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1076" width="4" height="15" fill="rgb(216,52,31)"/><text x="43.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1092" width="4" height="15" fill="rgb(220,25,18)"/><text x="43.00" y="1102.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="40" y="1108" width="4" height="15" fill="rgb(219,134,25)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="932" width="7" height="15" fill="rgb(205,28,4)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="948" width="7" height="15" fill="rgb(249,127,24)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="964" width="7" height="15" fill="rgb(221,181,35)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="44" y="980" width="7" height="15" fill="rgb(247,56,42)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="996" width="7" height="15" fill="rgb(244,95,44)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.64%)</title><rect x="44" y="1012" width="7" height="15" fill="rgb(242,40,51)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="1028" width="7" height="15" fill="rgb(215,16,41)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="1044" width="7" height="15" fill="rgb(234,169,23)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="1060" width="7" height="15" fill="rgb(247,141,53)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.64%)</title><rect x="44" y="1076" width="7" height="15" fill="rgb(227,40,33)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="44" y="1092" width="7" height="15" fill="rgb(222,78,36)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.64%)</title><rect x="44" y="1108" width="7" height="15" fill="rgb(237,36,3)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1124" width="4" height="15" fill="rgb(227,120,6)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1140" width="4" height="15" fill="rgb(242,135,8)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1156" width="4" height="15" fill="rgb(210,1,20)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1172" width="4" height="15" fill="rgb(224,180,7)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1188" width="4" height="15" fill="rgb(218,156,33)"/><text x="50.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.32%)</title><rect x="47" y="1204" width="4" height="15" fill="rgb(210,150,50)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1220" width="4" height="15" fill="rgb(242,157,52)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1236" width="4" height="15" fill="rgb(251,24,0)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1252" width="4" height="15" fill="rgb(245,129,14)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1268" width="4" height="15" fill="rgb(245,179,40)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1284" width="4" height="15" fill="rgb(213,178,52)"/><text x="50.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.32%)</title><rect x="47" y="1300" width="4" height="15" fill="rgb(208,49,18)"/><text x="50.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1316" width="4" height="15" fill="rgb(228,171,1)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1332" width="4" height="15" fill="rgb(248,191,16)"/><text x="50.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1348" width="4" height="15" fill="rgb(241,181,50)"/><text x="50.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1364" width="4" height="15" fill="rgb(226,89,27)"/><text x="50.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1380" width="4" height="15" fill="rgb(209,150,11)"/><text x="50.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.32%)</title><rect x="47" y="1396" width="4" height="15" fill="rgb(208,169,45)"/><text x="50.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1412" width="4" height="15" fill="rgb(234,227,50)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1428" width="4" height="15" fill="rgb(231,143,26)"/><text x="50.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1444" width="4" height="15" fill="rgb(233,138,40)"/><text x="50.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1460" width="4" height="15" fill="rgb(208,119,32)"/><text x="50.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1476" width="4" height="15" fill="rgb(249,99,15)"/><text x="50.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.32%)</title><rect x="47" y="1492" width="4" height="15" fill="rgb(206,78,36)"/><text x="50.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1508" width="4" height="15" fill="rgb(231,164,54)"/><text x="50.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1524" width="4" height="15" fill="rgb(242,28,22)"/><text x="50.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1540" width="4" height="15" fill="rgb(252,227,52)"/><text x="50.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1556" width="4" height="15" fill="rgb(244,17,6)"/><text x="50.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1572" width="4" height="15" fill="rgb(250,208,13)"/><text x="50.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.32%)</title><rect x="47" y="1588" width="4" height="15" fill="rgb(225,83,39)"/><text x="50.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1604" width="4" height="15" fill="rgb(207,33,15)"/><text x="50.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1620" width="4" height="15" fill="rgb(209,211,40)"/><text x="50.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1636" width="4" height="15" fill="rgb(234,17,29)"/><text x="50.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1652" width="4" height="15" fill="rgb(208,135,26)"/><text x="50.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1668" width="4" height="15" fill="rgb(231,129,18)"/><text x="50.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.32%)</title><rect x="47" y="1684" width="4" height="15" fill="rgb(244,32,44)"/><text x="50.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1700" width="4" height="15" fill="rgb(214,151,31)"/><text x="50.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1716" width="4" height="15" fill="rgb(211,79,38)"/><text x="50.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1732" width="4" height="15" fill="rgb(225,83,51)"/><text x="50.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1748" width="4" height="15" fill="rgb(251,71,13)"/><text x="50.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1764" width="4" height="15" fill="rgb(225,44,30)"/><text x="50.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.32%)</title><rect x="47" y="1780" width="4" height="15" fill="rgb(242,216,47)"/><text x="50.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1796" width="4" height="15" fill="rgb(227,15,42)"/><text x="50.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1812" width="4" height="15" fill="rgb(221,98,38)"/><text x="50.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1828" width="4" height="15" fill="rgb(212,91,53)"/><text x="50.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="47" y="1844" width="4" height="15" fill="rgb(213,97,20)"/><text x="50.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="47" y="1860" width="4" height="15" fill="rgb(243,181,8)"/><text x="50.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.32%)</title><rect x="47" y="1876" width="4" height="15" fill="rgb(231,98,13)"/><text x="50.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.32%)</title><rect x="47" y="1892" width="4" height="15" fill="rgb(250,112,43)"/><text x="50.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.32%)</title><rect x="47" y="1908" width="4" height="15" fill="rgb(230,8,34)"/><text x="50.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.32%)</title><rect x="47" y="1924" width="4" height="15" fill="rgb(250,5,30)"/><text x="50.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.32%)</title><rect x="47" y="1940" width="4" height="15" fill="rgb(245,77,14)"/><text x="50.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.32%)</title><rect x="47" y="1956" width="4" height="15" fill="rgb(235,146,2)"/><text x="50.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.32%)</title><rect x="47" y="1972" width="4" height="15" fill="rgb(205,98,53)"/><text x="50.00" y="1982.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.32%)</title><rect x="47" y="1988" width="4" height="15" fill="rgb(212,31,27)"/><text x="50.00" y="1998.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.96%)</title><rect x="44" y="916" width="11" height="15" fill="rgb(244,131,27)"/><text x="47.00" y="926.50"></text></g><g><title>inner (typing.py) (1 samples, 0.32%)</title><rect x="51" y="932" width="4" height="15" fill="rgb(246,191,1)"/><text x="54.00" y="942.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.32%)</title><rect x="51" y="948" width="4" height="15" fill="rgb(220,192,7)"/><text x="54.00" y="958.50"></text></g><g><title>_subs_tvars (typing.py) (1 samples, 0.32%)</title><rect x="51" y="964" width="4" height="15" fill="rgb(249,54,25)"/><text x="54.00" y="974.50"></text></g><g><title>copy_with (typing.py) (1 samples, 0.32%)</title><rect x="51" y="980" width="4" height="15" fill="rgb(227,59,26)"/><text x="54.00" y="990.50"></text></g><g><title>__init__ (typing.py) (1 samples, 0.32%)</title><rect x="51" y="996" width="4" height="15" fill="rgb(224,36,29)"/><text x="54.00" y="1006.50"></text></g><g><title>_collect_type_vars (typing.py) (1 samples, 0.32%)</title><rect x="51" y="1012" width="4" height="15" fill="rgb(242,136,1)"/><text x="54.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.56%)</title><rect x="28" y="436" width="31" height="15" fill="rgb(205,26,32)"/><text x="31.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.56%)</title><rect x="28" y="452" width="31" height="15" fill="rgb(208,16,3)"/><text x="31.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.56%)</title><rect x="28" y="468" width="31" height="15" fill="rgb(246,76,36)"/><text x="31.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="484" width="19" height="15" fill="rgb(246,150,19)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="40" y="500" width="19" height="15" fill="rgb(235,223,38)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="516" width="19" height="15" fill="rgb(215,193,52)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.60%)</title><rect x="40" y="532" width="19" height="15" fill="rgb(217,44,50)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="548" width="19" height="15" fill="rgb(206,109,30)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="564" width="19" height="15" fill="rgb(209,37,27)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="580" width="19" height="15" fill="rgb(250,160,12)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="40" y="596" width="19" height="15" fill="rgb(246,7,9)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="612" width="19" height="15" fill="rgb(207,77,49)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.60%)</title><rect x="40" y="628" width="19" height="15" fill="rgb(247,112,52)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="644" width="19" height="15" fill="rgb(222,143,34)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="660" width="19" height="15" fill="rgb(224,74,30)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="676" width="19" height="15" fill="rgb(234,120,44)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.60%)</title><rect x="40" y="692" width="19" height="15" fill="rgb(239,15,45)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="708" width="19" height="15" fill="rgb(223,205,10)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 1.60%)</title><rect x="40" y="724" width="19" height="15" fill="rgb(226,12,20)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="740" width="19" height="15" fill="rgb(237,221,54)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.60%)</title><rect x="40" y="756" width="19" height="15" fill="rgb(250,156,10)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="772" width="15" height="15" fill="rgb(251,193,6)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.28%)</title><rect x="44" y="788" width="15" height="15" fill="rgb(224,110,35)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="804" width="15" height="15" fill="rgb(235,81,26)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.28%)</title><rect x="44" y="820" width="15" height="15" fill="rgb(246,33,35)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="836" width="15" height="15" fill="rgb(250,104,9)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="852" width="15" height="15" fill="rgb(234,173,3)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="868" width="15" height="15" fill="rgb(229,189,22)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.28%)</title><rect x="44" y="884" width="15" height="15" fill="rgb(217,66,37)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="44" y="900" width="15" height="15" fill="rgb(249,4,18)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py) (1 samples, 0.32%)</title><rect x="55" y="916" width="4" height="15" fill="rgb(253,227,50)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="55" y="932" width="4" height="15" fill="rgb(248,83,7)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="55" y="948" width="4" height="15" fill="rgb(220,50,49)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="55" y="964" width="4" height="15" fill="rgb(228,61,0)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="55" y="980" width="4" height="15" fill="rgb(210,42,40)"/><text x="58.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="55" y="996" width="4" height="15" fill="rgb(235,138,21)"/><text x="58.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="55" y="1012" width="4" height="15" fill="rgb(222,47,18)"/><text x="58.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 2.88%)</title><rect x="28" y="340" width="34" height="15" fill="rgb(224,73,11)"/><text x="31.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.88%)</title><rect x="28" y="356" width="34" height="15" fill="rgb(251,72,28)"/><text x="31.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.88%)</title><rect x="28" y="372" width="34" height="15" fill="rgb(239,190,27)"/><text x="31.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.88%)</title><rect x="28" y="388" width="34" height="15" fill="rgb(235,189,7)"/><text x="31.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.88%)</title><rect x="28" y="404" width="34" height="15" fill="rgb(217,144,11)"/><text x="31.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.88%)</title><rect x="28" y="420" width="34" height="15" fill="rgb(244,52,27)"/><text x="31.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.32%)</title><rect x="59" y="436" width="3" height="15" fill="rgb(254,122,3)"/><text x="62.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="452" width="3" height="15" fill="rgb(222,76,44)"/><text x="62.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="468" width="3" height="15" fill="rgb(246,71,23)"/><text x="62.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="484" width="3" height="15" fill="rgb(244,135,20)"/><text x="62.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="500" width="3" height="15" fill="rgb(235,100,44)"/><text x="62.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="516" width="3" height="15" fill="rgb(212,56,37)"/><text x="62.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.32%)</title><rect x="59" y="532" width="3" height="15" fill="rgb(206,199,0)"/><text x="62.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="548" width="3" height="15" fill="rgb(232,165,29)"/><text x="62.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="564" width="3" height="15" fill="rgb(206,88,10)"/><text x="62.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="580" width="3" height="15" fill="rgb(226,86,31)"/><text x="62.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="596" width="3" height="15" fill="rgb(241,40,41)"/><text x="62.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="612" width="3" height="15" fill="rgb(225,63,47)"/><text x="62.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="628" width="3" height="15" fill="rgb(214,36,49)"/><text x="62.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="644" width="3" height="15" fill="rgb(209,52,40)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="660" width="3" height="15" fill="rgb(210,100,3)"/><text x="62.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.32%)</title><rect x="59" y="676" width="3" height="15" fill="rgb(216,84,31)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="692" width="3" height="15" fill="rgb(215,194,44)"/><text x="62.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="708" width="3" height="15" fill="rgb(211,173,22)"/><text x="62.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="724" width="3" height="15" fill="rgb(235,208,21)"/><text x="62.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="740" width="3" height="15" fill="rgb(208,35,45)"/><text x="62.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="756" width="3" height="15" fill="rgb(238,210,25)"/><text x="62.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.32%)</title><rect x="59" y="772" width="3" height="15" fill="rgb(219,170,53)"/><text x="62.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="788" width="3" height="15" fill="rgb(210,206,26)"/><text x="62.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="804" width="3" height="15" fill="rgb(208,217,41)"/><text x="62.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="820" width="3" height="15" fill="rgb(241,165,53)"/><text x="62.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="836" width="3" height="15" fill="rgb(231,121,48)"/><text x="62.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="852" width="3" height="15" fill="rgb(235,162,33)"/><text x="62.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.32%)</title><rect x="59" y="868" width="3" height="15" fill="rgb(242,30,21)"/><text x="62.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="884" width="3" height="15" fill="rgb(212,116,38)"/><text x="62.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="900" width="3" height="15" fill="rgb(223,149,49)"/><text x="62.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="59" y="916" width="3" height="15" fill="rgb(207,35,42)"/><text x="62.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="932" width="3" height="15" fill="rgb(249,58,19)"/><text x="62.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="948" width="3" height="15" fill="rgb(222,21,3)"/><text x="62.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="964" width="3" height="15" fill="rgb(248,146,22)"/><text x="62.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="59" y="980" width="3" height="15" fill="rgb(228,217,14)"/><text x="62.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="59" y="996" width="3" height="15" fill="rgb(235,11,28)"/><text x="62.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.32%)</title><rect x="59" y="1012" width="3" height="15" fill="rgb(212,162,52)"/><text x="62.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.32%)</title><rect x="62" y="1156" width="4" height="15" fill="rgb(237,122,6)"/><text x="65.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="62" y="1172" width="4" height="15" fill="rgb(223,8,2)"/><text x="65.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="62" y="1188" width="4" height="15" fill="rgb(252,74,31)"/><text x="65.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="62" y="1204" width="4" height="15" fill="rgb(225,6,28)"/><text x="65.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="62" y="1220" width="4" height="15" fill="rgb(251,11,2)"/><text x="65.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="62" y="1236" width="4" height="15" fill="rgb(235,3,32)"/><text x="65.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="62" y="1252" width="4" height="15" fill="rgb(209,31,8)"/><text x="65.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.64%)</title><rect x="62" y="1140" width="8" height="15" fill="rgb(244,46,47)"/><text x="65.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.32%)</title><rect x="66" y="1156" width="4" height="15" fill="rgb(243,58,33)"/><text x="69.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1172" width="4" height="15" fill="rgb(229,217,11)"/><text x="69.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1188" width="4" height="15" fill="rgb(216,224,31)"/><text x="69.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1204" width="4" height="15" fill="rgb(235,185,51)"/><text x="69.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1220" width="4" height="15" fill="rgb(207,58,23)"/><text x="69.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1236" width="4" height="15" fill="rgb(220,214,40)"/><text x="69.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="66" y="1252" width="4" height="15" fill="rgb(249,23,19)"/><text x="69.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1268" width="4" height="15" fill="rgb(224,153,28)"/><text x="69.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py) (1 samples, 0.32%)</title><rect x="66" y="1284" width="4" height="15" fill="rgb(222,191,45)"/><text x="69.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1300" width="4" height="15" fill="rgb(237,21,16)"/><text x="69.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1316" width="4" height="15" fill="rgb(235,109,6)"/><text x="69.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1332" width="4" height="15" fill="rgb(229,171,12)"/><text x="69.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="66" y="1348" width="4" height="15" fill="rgb(214,197,47)"/><text x="69.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1364" width="4" height="15" fill="rgb(223,78,21)"/><text x="69.00" y="1374.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementTree.py) (1 samples, 0.32%)</title><rect x="66" y="1380" width="4" height="15" fill="rgb(230,190,4)"/><text x="69.00" y="1390.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1396" width="4" height="15" fill="rgb(247,99,51)"/><text x="69.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1412" width="4" height="15" fill="rgb(250,160,47)"/><text x="69.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1428" width="4" height="15" fill="rgb(247,54,8)"/><text x="69.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1444" width="4" height="15" fill="rgb(213,157,17)"/><text x="69.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1460" width="4" height="15" fill="rgb(206,225,9)"/><text x="69.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="66" y="1476" width="4" height="15" fill="rgb(242,174,15)"/><text x="69.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="66" y="1492" width="4" height="15" fill="rgb(243,12,23)"/><text x="69.00" y="1502.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementPath.py) (1 samples, 0.32%)</title><rect x="66" y="1508" width="4" height="15" fill="rgb(239,134,32)"/><text x="69.00" y="1518.50"></text></g><g><title>compile (re.py) (1 samples, 0.32%)</title><rect x="66" y="1524" width="4" height="15" fill="rgb(238,93,4)"/><text x="69.00" y="1534.50"></text></g><g><title>_compile (re.py) (1 samples, 0.32%)</title><rect x="66" y="1540" width="4" height="15" fill="rgb(252,74,51)"/><text x="69.00" y="1550.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.32%)</title><rect x="66" y="1556" width="4" height="15" fill="rgb(224,154,0)"/><text x="69.00" y="1566.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.32%)</title><rect x="66" y="1572" width="4" height="15" fill="rgb(220,89,42)"/><text x="69.00" y="1582.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.32%)</title><rect x="66" y="1588" width="4" height="15" fill="rgb(230,223,50)"/><text x="69.00" y="1598.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.32%)</title><rect x="66" y="1604" width="4" height="15" fill="rgb(246,106,43)"/><text x="69.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (3 samples, 0.96%)</title><rect x="62" y="580" width="12" height="15" fill="rgb(250,76,11)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="596" width="12" height="15" fill="rgb(248,160,49)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="612" width="12" height="15" fill="rgb(235,34,2)"/><text x="65.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="628" width="12" height="15" fill="rgb(208,45,51)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="644" width="12" height="15" fill="rgb(221,123,3)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="660" width="12" height="15" fill="rgb(208,32,8)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="676" width="12" height="15" fill="rgb(228,172,51)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="62" y="692" width="12" height="15" fill="rgb(233,144,3)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="708" width="12" height="15" fill="rgb(235,194,37)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (3 samples, 0.96%)</title><rect x="62" y="724" width="12" height="15" fill="rgb(254,23,36)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="740" width="12" height="15" fill="rgb(226,42,9)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="756" width="12" height="15" fill="rgb(230,89,45)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="772" width="12" height="15" fill="rgb(240,76,0)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="62" y="788" width="12" height="15" fill="rgb(216,111,23)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="804" width="12" height="15" fill="rgb(235,216,51)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (3 samples, 0.96%)</title><rect x="62" y="820" width="12" height="15" fill="rgb(247,123,26)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="836" width="12" height="15" fill="rgb(224,177,48)"/><text x="65.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="852" width="12" height="15" fill="rgb(243,124,43)"/><text x="65.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="868" width="12" height="15" fill="rgb(252,57,13)"/><text x="65.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="62" y="884" width="12" height="15" fill="rgb(219,174,46)"/><text x="65.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="900" width="12" height="15" fill="rgb(249,129,28)"/><text x="65.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (3 samples, 0.96%)</title><rect x="62" y="916" width="12" height="15" fill="rgb(238,182,26)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="932" width="12" height="15" fill="rgb(213,184,3)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="948" width="12" height="15" fill="rgb(238,23,25)"/><text x="65.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="964" width="12" height="15" fill="rgb(249,35,25)"/><text x="65.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="980" width="12" height="15" fill="rgb(239,105,43)"/><text x="65.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="996" width="12" height="15" fill="rgb(230,61,31)"/><text x="65.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="1012" width="12" height="15" fill="rgb(235,77,17)"/><text x="65.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="62" y="1028" width="12" height="15" fill="rgb(251,181,15)"/><text x="65.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="1044" width="12" height="15" fill="rgb(227,110,47)"/><text x="65.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (3 samples, 0.96%)</title><rect x="62" y="1060" width="12" height="15" fill="rgb(218,180,29)"/><text x="65.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="1076" width="12" height="15" fill="rgb(252,17,42)"/><text x="65.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="1092" width="12" height="15" fill="rgb(245,131,36)"/><text x="65.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.96%)</title><rect x="62" y="1108" width="12" height="15" fill="rgb(215,109,16)"/><text x="65.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.96%)</title><rect x="62" y="1124" width="12" height="15" fill="rgb(216,32,29)"/><text x="65.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="70" y="1140" width="4" height="15" fill="rgb(251,175,43)"/><text x="73.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="70" y="1156" width="4" height="15" fill="rgb(237,137,32)"/><text x="73.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 4.17%)</title><rect x="28" y="244" width="50" height="15" fill="rgb(222,13,1)"/><text x="31.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.17%)</title><rect x="28" y="260" width="50" height="15" fill="rgb(252,183,36)"/><text x="31.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.17%)</title><rect x="28" y="276" width="50" height="15" fill="rgb(214,188,28)"/><text x="31.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.17%)</title><rect x="28" y="292" width="50" height="15" fill="rgb(213,172,39)"/><text x="31.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.17%)</title><rect x="28" y="308" width="50" height="15" fill="rgb(241,117,31)"/><text x="31.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.17%)</title><rect x="28" y="324" width="50" height="15" fill="rgb(213,99,50)"/><text x="31.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.28%)</title><rect x="62" y="340" width="16" height="15" fill="rgb(221,116,16)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="356" width="16" height="15" fill="rgb(246,198,16)"/><text x="65.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="372" width="16" height="15" fill="rgb(250,19,32)"/><text x="65.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="388" width="16" height="15" fill="rgb(236,193,11)"/><text x="65.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="404" width="16" height="15" fill="rgb(240,145,14)"/><text x="65.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="420" width="16" height="15" fill="rgb(235,36,25)"/><text x="65.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="436" width="16" height="15" fill="rgb(218,71,11)"/><text x="65.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.28%)</title><rect x="62" y="452" width="16" height="15" fill="rgb(207,51,24)"/><text x="65.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="468" width="16" height="15" fill="rgb(240,196,49)"/><text x="65.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.28%)</title><rect x="62" y="484" width="16" height="15" fill="rgb(206,78,31)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="500" width="16" height="15" fill="rgb(235,160,51)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="516" width="16" height="15" fill="rgb(210,34,17)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="532" width="16" height="15" fill="rgb(232,126,27)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.28%)</title><rect x="62" y="548" width="16" height="15" fill="rgb(235,16,49)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.28%)</title><rect x="62" y="564" width="16" height="15" fill="rgb(218,3,31)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.32%)</title><rect x="74" y="580" width="4" height="15" fill="rgb(254,194,8)"/><text x="77.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="596" width="4" height="15" fill="rgb(254,122,32)"/><text x="77.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="612" width="4" height="15" fill="rgb(248,84,16)"/><text x="77.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="628" width="4" height="15" fill="rgb(221,52,21)"/><text x="77.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="644" width="4" height="15" fill="rgb(220,196,46)"/><text x="77.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="660" width="4" height="15" fill="rgb(220,120,30)"/><text x="77.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.32%)</title><rect x="74" y="676" width="4" height="15" fill="rgb(220,191,19)"/><text x="77.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="692" width="4" height="15" fill="rgb(238,223,23)"/><text x="77.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="708" width="4" height="15" fill="rgb(228,51,47)"/><text x="77.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="724" width="4" height="15" fill="rgb(220,118,20)"/><text x="77.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="740" width="4" height="15" fill="rgb(208,24,36)"/><text x="77.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="756" width="4" height="15" fill="rgb(216,102,22)"/><text x="77.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.32%)</title><rect x="74" y="772" width="4" height="15" fill="rgb(230,220,21)"/><text x="77.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="788" width="4" height="15" fill="rgb(238,88,16)"/><text x="77.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="804" width="4" height="15" fill="rgb(254,33,52)"/><text x="77.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="820" width="4" height="15" fill="rgb(216,220,1)"/><text x="77.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="836" width="4" height="15" fill="rgb(242,67,13)"/><text x="77.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="852" width="4" height="15" fill="rgb(247,137,30)"/><text x="77.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="868" width="4" height="15" fill="rgb(238,132,48)"/><text x="77.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="884" width="4" height="15" fill="rgb(221,50,11)"/><text x="77.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.32%)</title><rect x="74" y="900" width="4" height="15" fill="rgb(226,220,53)"/><text x="77.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="916" width="4" height="15" fill="rgb(208,107,31)"/><text x="77.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="932" width="4" height="15" fill="rgb(207,111,4)"/><text x="77.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="948" width="4" height="15" fill="rgb(207,167,21)"/><text x="77.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="964" width="4" height="15" fill="rgb(225,139,38)"/><text x="77.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="980" width="4" height="15" fill="rgb(234,92,38)"/><text x="77.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.32%)</title><rect x="74" y="996" width="4" height="15" fill="rgb(226,129,3)"/><text x="77.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1012" width="4" height="15" fill="rgb(236,70,54)"/><text x="77.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1028" width="4" height="15" fill="rgb(217,179,6)"/><text x="77.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1044" width="4" height="15" fill="rgb(245,227,47)"/><text x="77.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="1060" width="4" height="15" fill="rgb(235,138,3)"/><text x="77.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1076" width="4" height="15" fill="rgb(208,57,41)"/><text x="77.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.32%)</title><rect x="74" y="1092" width="4" height="15" fill="rgb(231,64,36)"/><text x="77.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1108" width="4" height="15" fill="rgb(213,29,19)"/><text x="77.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1124" width="4" height="15" fill="rgb(216,38,27)"/><text x="77.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1140" width="4" height="15" fill="rgb(252,56,22)"/><text x="77.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="1156" width="4" height="15" fill="rgb(214,84,11)"/><text x="77.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1172" width="4" height="15" fill="rgb(225,190,10)"/><text x="77.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py) (1 samples, 0.32%)</title><rect x="74" y="1188" width="4" height="15" fill="rgb(222,176,26)"/><text x="77.00" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1204" width="4" height="15" fill="rgb(246,1,16)"/><text x="77.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1220" width="4" height="15" fill="rgb(245,120,0)"/><text x="77.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1236" width="4" height="15" fill="rgb(230,86,19)"/><text x="77.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1252" width="4" height="15" fill="rgb(245,176,31)"/><text x="77.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1268" width="4" height="15" fill="rgb(238,124,1)"/><text x="77.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="1284" width="4" height="15" fill="rgb(209,206,10)"/><text x="77.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1300" width="4" height="15" fill="rgb(250,46,9)"/><text x="77.00" y="1310.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/__init__.py) (1 samples, 0.32%)</title><rect x="74" y="1316" width="4" height="15" fill="rgb(237,20,1)"/><text x="77.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1332" width="4" height="15" fill="rgb(217,42,28)"/><text x="77.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1348" width="4" height="15" fill="rgb(252,150,40)"/><text x="77.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1364" width="4" height="15" fill="rgb(244,19,25)"/><text x="77.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="74" y="1380" width="4" height="15" fill="rgb(211,219,32)"/><text x="77.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="74" y="1396" width="4" height="15" fill="rgb(212,61,52)"/><text x="77.00" y="1406.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/base.py) (1 samples, 0.32%)</title><rect x="74" y="1412" width="4" height="15" fill="rgb(227,151,31)"/><text x="77.00" y="1422.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.32%)</title><rect x="74" y="1428" width="4" height="15" fill="rgb(254,2,39)"/><text x="77.00" y="1438.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.32%)</title><rect x="78" y="244" width="3" height="15" fill="rgb(228,91,31)"/><text x="81.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="260" width="3" height="15" fill="rgb(237,132,43)"/><text x="81.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="276" width="3" height="15" fill="rgb(220,196,53)"/><text x="81.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="292" width="3" height="15" fill="rgb(248,221,43)"/><text x="81.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="308" width="3" height="15" fill="rgb(241,18,17)"/><text x="81.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="324" width="3" height="15" fill="rgb(240,130,54)"/><text x="81.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="340" width="3" height="15" fill="rgb(249,171,3)"/><text x="81.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="356" width="3" height="15" fill="rgb(221,138,40)"/><text x="81.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.32%)</title><rect x="78" y="372" width="3" height="15" fill="rgb(242,222,41)"/><text x="81.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="388" width="3" height="15" fill="rgb(210,137,46)"/><text x="81.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="404" width="3" height="15" fill="rgb(245,67,3)"/><text x="81.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="420" width="3" height="15" fill="rgb(237,93,47)"/><text x="81.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="436" width="3" height="15" fill="rgb(235,158,50)"/><text x="81.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="452" width="3" height="15" fill="rgb(251,200,23)"/><text x="81.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.32%)</title><rect x="78" y="468" width="3" height="15" fill="rgb(249,27,15)"/><text x="81.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="484" width="3" height="15" fill="rgb(252,150,0)"/><text x="81.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="500" width="3" height="15" fill="rgb(236,10,48)"/><text x="81.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="516" width="3" height="15" fill="rgb(231,40,41)"/><text x="81.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="532" width="3" height="15" fill="rgb(218,103,42)"/><text x="81.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="548" width="3" height="15" fill="rgb(245,60,32)"/><text x="81.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.32%)</title><rect x="78" y="564" width="3" height="15" fill="rgb(221,133,1)"/><text x="81.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="580" width="3" height="15" fill="rgb(246,21,39)"/><text x="81.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="596" width="3" height="15" fill="rgb(238,106,36)"/><text x="81.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="78" y="612" width="3" height="15" fill="rgb(209,226,43)"/><text x="81.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="628" width="3" height="15" fill="rgb(227,213,21)"/><text x="81.00" y="638.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="644" width="3" height="15" fill="rgb(237,144,28)"/><text x="81.00" y="654.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="78" y="660" width="3" height="15" fill="rgb(231,164,9)"/><text x="81.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="68" width="75" height="15" fill="rgb(236,179,38)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="84" width="75" height="15" fill="rgb(211,85,15)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="100" width="75" height="15" fill="rgb(235,30,3)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 6.41%)</title><rect x="10" y="116" width="75" height="15" fill="rgb(216,19,37)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="132" width="75" height="15" fill="rgb(214,0,53)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py) (20 samples, 6.41%)</title><rect x="10" y="148" width="75" height="15" fill="rgb(238,17,20)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="164" width="75" height="15" fill="rgb(232,24,10)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 6.41%)</title><rect x="10" y="180" width="75" height="15" fill="rgb(219,123,17)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.81%)</title><rect x="28" y="196" width="57" height="15" fill="rgb(232,141,0)"/><text x="31.00" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.81%)</title><rect x="28" y="212" width="57" height="15" fill="rgb(246,215,34)"/><text x="31.00" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.81%)</title><rect x="28" y="228" width="57" height="15" fill="rgb(241,4,16)"/><text x="31.00" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.32%)</title><rect x="81" y="244" width="4" height="15" fill="rgb(243,121,31)"/><text x="84.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="260" width="4" height="15" fill="rgb(212,201,7)"/><text x="84.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="276" width="4" height="15" fill="rgb(221,53,37)"/><text x="84.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="292" width="4" height="15" fill="rgb(210,174,17)"/><text x="84.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="81" y="308" width="4" height="15" fill="rgb(207,143,39)"/><text x="84.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="324" width="4" height="15" fill="rgb(212,187,1)"/><text x="84.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py) (1 samples, 0.32%)</title><rect x="81" y="340" width="4" height="15" fill="rgb(216,150,30)"/><text x="84.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="356" width="4" height="15" fill="rgb(216,116,9)"/><text x="84.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="372" width="4" height="15" fill="rgb(249,130,41)"/><text x="84.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="388" width="4" height="15" fill="rgb(221,126,6)"/><text x="84.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="81" y="404" width="4" height="15" fill="rgb(221,101,28)"/><text x="84.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="420" width="4" height="15" fill="rgb(236,190,46)"/><text x="84.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py) (1 samples, 0.32%)</title><rect x="81" y="436" width="4" height="15" fill="rgb(220,196,21)"/><text x="84.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="452" width="4" height="15" fill="rgb(253,49,17)"/><text x="84.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="468" width="4" height="15" fill="rgb(238,80,48)"/><text x="84.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="81" y="484" width="4" height="15" fill="rgb(234,151,26)"/><text x="84.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="81" y="500" width="4" height="15" fill="rgb(225,150,0)"/><text x="84.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="81" y="516" width="4" height="15" fill="rgb(238,151,31)"/><text x="84.00" y="526.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.32%)</title><rect x="81" y="532" width="4" height="15" fill="rgb(216,48,9)"/><text x="84.00" y="542.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="81" y="548" width="4" height="15" fill="rgb(243,160,24)"/><text x="84.00" y="558.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="85" y="132" width="4" height="15" fill="rgb(245,85,39)"/><text x="88.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.32%)</title><rect x="85" y="148" width="4" height="15" fill="rgb(230,204,17)"/><text x="88.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.96%)</title><rect x="85" y="116" width="11" height="15" fill="rgb(251,100,17)"/><text x="88.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.64%)</title><rect x="89" y="132" width="7" height="15" fill="rgb(236,15,28)"/><text x="92.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.32%)</title><rect x="93" y="148" width="3" height="15" fill="rgb(233,204,47)"/><text x="96.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.32%)</title><rect x="93" y="164" width="3" height="15" fill="rgb(215,209,35)"/><text x="96.00" y="174.50"></text></g><g><title>0x7f274404beb0 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="93" y="180" width="3" height="15" fill="rgb(227,174,48)"/><text x="96.00" y="190.50"></text></g><g><title>0x7f274404ac04 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="93" y="196" width="3" height="15" fill="rgb(236,20,12)"/><text x="96.00" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.64%)</title><rect x="131" y="180" width="7" height="15" fill="rgb(250,142,16)"/><text x="134.00" y="190.50"></text></g><g><title>0x7f27040bbff9 (?) (1 samples, 0.32%)</title><rect x="138" y="212" width="4" height="15" fill="rgb(211,188,44)"/><text x="141.00" y="222.50"></text></g><g><title>0x7f27040b6ef6 (?) (1 samples, 0.32%)</title><rect x="138" y="228" width="4" height="15" fill="rgb(239,41,0)"/><text x="141.00" y="238.50"></text></g><g><title>0x7f27040ab962 (?) (1 samples, 0.32%)</title><rect x="138" y="244" width="4" height="15" fill="rgb(244,118,25)"/><text x="141.00" y="254.50"></text></g><g><title>0x7f27040df7a7 (?) (1 samples, 0.32%)</title><rect x="138" y="260" width="4" height="15" fill="rgb(213,211,35)"/><text x="141.00" y="270.50"></text></g><g><title>0x7f27040df379 (?) (1 samples, 0.32%)</title><rect x="138" y="276" width="4" height="15" fill="rgb(236,104,24)"/><text x="141.00" y="286.50"></text></g><g><title>0x7f270453d8b8 (?) (1 samples, 0.32%)</title><rect x="138" y="292" width="4" height="15" fill="rgb(241,46,8)"/><text x="141.00" y="302.50"></text></g><g><title>0x7f270453bc7f (?) (1 samples, 0.32%)</title><rect x="138" y="308" width="4" height="15" fill="rgb(230,178,17)"/><text x="141.00" y="318.50"></text></g><g><title>0x7f270454e99c (?) (1 samples, 0.32%)</title><rect x="138" y="324" width="4" height="15" fill="rgb(231,209,24)"/><text x="141.00" y="334.50"></text></g><g><title>0x7f2704233ae6 (?) (1 samples, 0.32%)</title><rect x="138" y="340" width="4" height="15" fill="rgb(223,166,45)"/><text x="141.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="146" y="244" width="3" height="15" fill="rgb(229,81,8)"/><text x="149.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.96%)</title><rect x="142" y="212" width="11" height="15" fill="rgb(215,10,50)"/><text x="145.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="146" y="228" width="7" height="15" fill="rgb(227,159,0)"/><text x="149.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="149" y="244" width="4" height="15" fill="rgb(211,31,3)"/><text x="152.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="149" y="260" width="4" height="15" fill="rgb(214,62,31)"/><text x="152.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="161" y="292" width="4" height="15" fill="rgb(214,101,24)"/><text x="164.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="165" y="340" width="3" height="15" fill="rgb(245,99,30)"/><text x="168.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 17.95%)</title><rect x="157" y="260" width="212" height="15" fill="rgb(220,14,8)"/><text x="160.00" y="270.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 17.95%)</title><rect x="157" y="276" width="212" height="15" fill="rgb(220,192,17)"/><text x="160.00" y="286.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 17.31%)</title><rect x="165" y="292" width="204" height="15" fill="rgb(229,81,27)"/><text x="168.00" y="302.50">onnxruntime::utils::Execut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 17.31%)</title><rect x="165" y="308" width="204" height="15" fill="rgb(216,62,50)"/><text x="168.00" y="318.50">onnxruntime::utils::Execut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 17.31%)</title><rect x="165" y="324" width="204" height="15" fill="rgb(222,197,40)"/><text x="168.00" y="334.50">onnxruntime::SequentialExe..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 16.99%)</title><rect x="168" y="340" width="201" height="15" fill="rgb(246,147,44)"/><text x="171.00" y="350.50">onnxruntime::ml::LinearCla..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.60%)</title><rect x="350" y="356" width="19" height="15" fill="rgb(213,212,36)"/><text x="353.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="369" y="260" width="7" height="15" fill="rgb(232,46,5)"/><text x="372.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.64%)</title><rect x="369" y="276" width="7" height="15" fill="rgb(230,100,44)"/><text x="372.00" y="286.50"></text></g><g><title>0x7f274406bd94 (libc-2.29.so) (3 samples, 0.96%)</title><rect x="376" y="276" width="12" height="15" fill="rgb(231,26,25)"/><text x="379.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.28%)</title><rect x="376" y="260" width="15" height="15" fill="rgb(208,13,12)"/><text x="379.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.32%)</title><rect x="388" y="276" width="3" height="15" fill="rgb(253,21,40)"/><text x="391.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="388" y="292" width="3" height="15" fill="rgb(242,77,37)"/><text x="391.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.32%)</title><rect x="388" y="308" width="3" height="15" fill="rgb(216,213,47)"/><text x="391.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.32%)</title><rect x="388" y="324" width="3" height="15" fill="rgb(247,226,29)"/><text x="391.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.32%)</title><rect x="388" y="340" width="3" height="15" fill="rgb(239,71,6)"/><text x="391.00" y="350.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 20.19%)</title><rect x="157" y="244" width="238" height="15" fill="rgb(226,229,31)"/><text x="160.00" y="254.50">onnxruntime::python::addObjectM..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="391" y="260" width="4" height="15" fill="rgb(239,169,54)"/><text x="394.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="391" y="276" width="4" height="15" fill="rgb(226,201,19)"/><text x="394.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (79 samples, 25.32%)</title><rect x="100" y="132" width="299" height="15" fill="rgb(217,28,13)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (77 samples, 24.68%)</title><rect x="108" y="148" width="291" height="15" fill="rgb(253,166,16)"/><text x="111.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (73 samples, 23.40%)</title><rect x="123" y="164" width="276" height="15" fill="rgb(222,24,0)"/><text x="126.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (69 samples, 22.12%)</title><rect x="138" y="180" width="261" height="15" fill="rgb(218,173,11)"/><text x="141.00" y="190.50">run (mlprodict/onnxrt/ops_whole/se..</text></g><g><title>run (onnxruntime/capi/session.py) (69 samples, 22.12%)</title><rect x="138" y="196" width="261" height="15" fill="rgb(213,112,40)"/><text x="141.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 20.83%)</title><rect x="153" y="212" width="246" height="15" fill="rgb(238,219,7)"/><text x="156.00" y="222.50">pybind11::cpp_function::dispatch..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 20.51%)</title><rect x="157" y="228" width="242" height="15" fill="rgb(215,122,5)"/><text x="160.00" y="238.50">void pybind11::cpp_function::ini..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="395" y="244" width="4" height="15" fill="rgb(224,100,48)"/><text x="398.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="395" y="260" width="4" height="15" fill="rgb(213,96,31)"/><text x="398.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.32%)</title><rect x="395" y="276" width="4" height="15" fill="rgb(230,204,34)"/><text x="398.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (85 samples, 27.24%)</title><rect x="85" y="68" width="322" height="15" fill="rgb(211,4,23)"/><text x="88.00" y="78.50">profile_ort (bench_LogisticRegression_libli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (85 samples, 27.24%)</title><rect x="85" y="84" width="322" height="15" fill="rgb(215,223,54)"/><text x="88.00" y="94.50">setup_profile (bench_LogisticRegression_lib..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (85 samples, 27.24%)</title><rect x="85" y="100" width="322" height="15" fill="rgb(227,218,47)"/><text x="88.00" y="110.50">profile (bench_LogisticRegression_liblinear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 26.28%)</title><rect x="96" y="116" width="311" height="15" fill="rgb(218,81,35)"/><text x="99.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.64%)</title><rect x="399" y="132" width="8" height="15" fill="rgb(217,168,52)"/><text x="402.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.32%)</title><rect x="429" y="180" width="4" height="15" fill="rgb(233,197,1)"/><text x="432.00" y="190.50"></text></g><g><title>0x7f274406c124 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="467" y="244" width="4" height="15" fill="rgb(213,213,32)"/><text x="470.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.32%)</title><rect x="471" y="260" width="4" height="15" fill="rgb(241,118,15)"/><text x="474.00" y="270.50"></text></g><g><title>0x7f274406c124 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="471" y="276" width="4" height="15" fill="rgb(252,97,40)"/><text x="474.00" y="286.50"></text></g><g><title>0x7f274326db20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="501" y="340" width="4" height="15" fill="rgb(206,47,2)"/><text x="504.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.32%)</title><rect x="505" y="340" width="4" height="15" fill="rgb(253,73,38)"/><text x="508.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.32%)</title><rect x="509" y="340" width="4" height="15" fill="rgb(230,168,38)"/><text x="512.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.32%)</title><rect x="509" y="356" width="4" height="15" fill="rgb(254,5,17)"/><text x="512.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.32%)</title><rect x="509" y="372" width="4" height="15" fill="rgb(238,140,49)"/><text x="512.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (12 samples, 3.85%)</title><rect x="471" y="244" width="45" height="15" fill="rgb(253,222,47)"/><text x="474.00" y="254.50">argm..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 3.53%)</title><rect x="475" y="260" width="41" height="15" fill="rgb(207,20,29)"/><text x="478.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (10 samples, 3.21%)</title><rect x="478" y="276" width="38" height="15" fill="rgb(216,212,6)"/><text x="481.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (9 samples, 2.88%)</title><rect x="482" y="292" width="34" height="15" fill="rgb(252,53,12)"/><text x="485.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c) (9 samples, 2.88%)</title><rect x="482" y="308" width="34" height="15" fill="rgb(215,79,3)"/><text x="485.00" y="318.50">ar..</text></g><g><title>PyArray_ArgMax (calculation.c) (7 samples, 2.24%)</title><rect x="490" y="324" width="26" height="15" fill="rgb(207,74,44)"/><text x="493.00" y="334.50">P..</text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.32%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(248,69,47)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(247,56,23)"/><text x="516.00" y="366.50"></text></g><g><title>0x7f274406c103 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="531" y="340" width="4" height="15" fill="rgb(249,111,19)"/><text x="534.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.32%)</title><rect x="535" y="340" width="4" height="15" fill="rgb(223,74,13)"/><text x="538.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="539" y="372" width="4" height="15" fill="rgb(221,3,44)"/><text x="542.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="539" y="388" width="4" height="15" fill="rgb(216,118,2)"/><text x="542.00" y="398.50"></text></g><g><title>sgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.32%)</title><rect x="543" y="388" width="4" height="15" fill="rgb(215,210,8)"/><text x="546.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.88%)</title><rect x="524" y="276" width="34" height="15" fill="rgb(210,182,23)"/><text x="527.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 2.56%)</title><rect x="528" y="292" width="30" height="15" fill="rgb(254,12,13)"/><text x="531.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 2.56%)</title><rect x="528" y="308" width="30" height="15" fill="rgb(206,164,48)"/><text x="531.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 2.56%)</title><rect x="528" y="324" width="30" height="15" fill="rgb(212,226,34)"/><text x="531.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c) (5 samples, 1.60%)</title><rect x="539" y="340" width="19" height="15" fill="rgb(247,107,1)"/><text x="542.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.60%)</title><rect x="539" y="356" width="19" height="15" fill="rgb(218,99,49)"/><text x="542.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.28%)</title><rect x="543" y="372" width="15" height="15" fill="rgb(206,54,43)"/><text x="546.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.96%)</title><rect x="547" y="388" width="11" height="15" fill="rgb(227,108,11)"/><text x="550.00" y="398.50"></text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.32%)</title><rect x="558" y="276" width="4" height="15" fill="rgb(254,187,0)"/><text x="561.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.64%)</title><rect x="562" y="276" width="7" height="15" fill="rgb(237,15,12)"/><text x="565.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (32 samples, 10.26%)</title><rect x="516" y="244" width="121" height="15" fill="rgb(208,31,28)"/><text x="519.00" y="254.50">numpy_dot_inpla..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (30 samples, 9.62%)</title><rect x="524" y="260" width="113" height="15" fill="rgb(222,40,53)"/><text x="527.00" y="270.50">dot (&lt;__array..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.77%)</title><rect x="569" y="276" width="68" height="15" fill="rgb(218,97,15)"/><text x="572.00" y="286.50">sgemm_k..</text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.32%)</title><rect x="641" y="292" width="4" height="15" fill="rgb(241,211,6)"/><text x="644.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.32%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(216,86,16)"/><text x="648.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.32%)</title><rect x="645" y="324" width="4" height="15" fill="rgb(246,165,30)"/><text x="648.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.32%)</title><rect x="645" y="340" width="4" height="15" fill="rgb(205,192,3)"/><text x="648.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.32%)</title><rect x="645" y="356" width="4" height="15" fill="rgb(219,177,44)"/><text x="648.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.32%)</title><rect x="649" y="324" width="3" height="15" fill="rgb(238,131,28)"/><text x="652.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.64%)</title><rect x="649" y="308" width="7" height="15" fill="rgb(224,203,41)"/><text x="652.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.32%)</title><rect x="652" y="324" width="4" height="15" fill="rgb(206,72,21)"/><text x="655.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.64%)</title><rect x="656" y="308" width="8" height="15" fill="rgb(226,111,4)"/><text x="659.00" y="318.50"></text></g><g><title>0x7f274404bb87 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="660" y="324" width="4" height="15" fill="rgb(218,134,47)"/><text x="663.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.32%)</title><rect x="664" y="324" width="4" height="15" fill="rgb(253,124,34)"/><text x="667.00" y="334.50"></text></g><g><title>0x7f274406bd97 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="698" y="356" width="4" height="15" fill="rgb(226,172,2)"/><text x="701.00" y="366.50"></text></g><g><title>0x7f274406bdbe (libc-2.29.so) (1 samples, 0.32%)</title><rect x="702" y="356" width="3" height="15" fill="rgb(247,198,30)"/><text x="705.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (80 samples, 25.64%)</title><rect x="407" y="68" width="302" height="15" fill="rgb(209,126,35)"/><text x="410.00" y="78.50">profile_pyrt (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (80 samples, 25.64%)</title><rect x="407" y="84" width="302" height="15" fill="rgb(205,124,53)"/><text x="410.00" y="94.50">setup_profile (bench_LogisticRegression_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (80 samples, 25.64%)</title><rect x="407" y="100" width="302" height="15" fill="rgb(208,13,41)"/><text x="410.00" y="110.50">profile (bench_LogisticRegression_liblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (79 samples, 25.32%)</title><rect x="410" y="116" width="299" height="15" fill="rgb(235,111,51)"/><text x="413.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (79 samples, 25.32%)</title><rect x="410" y="132" width="299" height="15" fill="rgb(218,88,21)"/><text x="413.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (79 samples, 25.32%)</title><rect x="410" y="148" width="299" height="15" fill="rgb(207,175,28)"/><text x="413.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (79 samples, 25.32%)</title><rect x="410" y="164" width="299" height="15" fill="rgb(230,1,44)"/><text x="413.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (73 samples, 23.40%)</title><rect x="433" y="180" width="276" height="15" fill="rgb(249,3,52)"/><text x="436.00" y="190.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (70 samples, 22.44%)</title><rect x="444" y="196" width="265" height="15" fill="rgb(246,116,21)"/><text x="447.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (68 samples, 21.79%)</title><rect x="452" y="212" width="257" height="15" fill="rgb(233,161,11)"/><text x="455.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (68 samples, 21.79%)</title><rect x="452" y="228" width="257" height="15" fill="rgb(230,176,14)"/><text x="455.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 6.09%)</title><rect x="637" y="244" width="72" height="15" fill="rgb(236,157,1)"/><text x="640.00" y="254.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 5.77%)</title><rect x="641" y="260" width="68" height="15" fill="rgb(217,60,26)"/><text x="644.00" y="270.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (18 samples, 5.77%)</title><rect x="641" y="276" width="68" height="15" fill="rgb(248,217,32)"/><text x="644.00" y="286.50">execute..</text></g><g><title>iterator_loop (ufunc_object.c) (17 samples, 5.45%)</title><rect x="645" y="292" width="64" height="15" fill="rgb(214,105,30)"/><text x="648.00" y="302.50">iterato..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (12 samples, 3.85%)</title><rect x="664" y="308" width="45" height="15" fill="rgb(252,6,29)"/><text x="667.00" y="318.50">NpyI..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (11 samples, 3.53%)</title><rect x="668" y="324" width="41" height="15" fill="rgb(245,180,23)"/><text x="671.00" y="334.50">npy..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (11 samples, 3.53%)</title><rect x="668" y="340" width="41" height="15" fill="rgb(247,50,53)"/><text x="671.00" y="350.50">PyA..</text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.32%)</title><rect x="705" y="356" width="4" height="15" fill="rgb(229,119,25)"/><text x="708.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="709" y="116" width="4" height="15" fill="rgb(227,217,35)"/><text x="712.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.32%)</title><rect x="709" y="132" width="4" height="15" fill="rgb(240,224,31)"/><text x="712.00" y="142.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.32%)</title><rect x="751" y="164" width="4" height="15" fill="rgb(234,83,7)"/><text x="754.00" y="174.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.32%)</title><rect x="762" y="244" width="4" height="15" fill="rgb(210,222,45)"/><text x="765.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.32%)</title><rect x="762" y="260" width="4" height="15" fill="rgb(232,170,24)"/><text x="765.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.32%)</title><rect x="762" y="276" width="4" height="15" fill="rgb(233,69,45)"/><text x="765.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.32%)</title><rect x="762" y="292" width="4" height="15" fill="rgb(212,226,37)"/><text x="765.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.64%)</title><rect x="766" y="260" width="7" height="15" fill="rgb(246,156,38)"/><text x="769.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.32%)</title><rect x="770" y="276" width="3" height="15" fill="rgb(232,67,41)"/><text x="773.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.32%)</title><rect x="770" y="292" width="3" height="15" fill="rgb(244,212,36)"/><text x="773.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.32%)</title><rect x="770" y="308" width="3" height="15" fill="rgb(241,211,25)"/><text x="773.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.32%)</title><rect x="770" y="324" width="3" height="15" fill="rgb(238,216,29)"/><text x="773.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.32%)</title><rect x="770" y="340" width="3" height="15" fill="rgb(232,56,9)"/><text x="773.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.32%)</title><rect x="770" y="356" width="3" height="15" fill="rgb(233,194,15)"/><text x="773.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="770" y="372" width="3" height="15" fill="rgb(228,116,41)"/><text x="773.00" y="382.50"></text></g><g><title>0x7f274404d700 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="770" y="388" width="3" height="15" fill="rgb(230,38,5)"/><text x="773.00" y="398.50"></text></g><g><title>0x7f274404aaed (libc-2.29.so) (1 samples, 0.32%)</title><rect x="770" y="404" width="3" height="15" fill="rgb(242,11,16)"/><text x="773.00" y="414.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.32%)</title><rect x="773" y="260" width="4" height="15" fill="rgb(237,79,18)"/><text x="776.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.32%)</title><rect x="777" y="260" width="4" height="15" fill="rgb(226,91,24)"/><text x="780.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.60%)</title><rect x="766" y="244" width="19" height="15" fill="rgb(254,45,25)"/><text x="769.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.32%)</title><rect x="781" y="260" width="4" height="15" fill="rgb(212,173,30)"/><text x="784.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.32%)</title><rect x="781" y="276" width="4" height="15" fill="rgb(244,14,6)"/><text x="784.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.32%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(234,143,38)"/><text x="784.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.32%)</title><rect x="781" y="308" width="4" height="15" fill="rgb(242,62,54)"/><text x="784.00" y="318.50"></text></g><g><title>0x7f274406bd62 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="808" y="292" width="3" height="15" fill="rgb(243,34,8)"/><text x="811.00" y="302.50"></text></g><g><title>array_add (number.c) (17 samples, 5.45%)</title><rect x="755" y="164" width="64" height="15" fill="rgb(251,226,42)"/><text x="758.00" y="174.50">array_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 5.45%)</title><rect x="755" y="180" width="64" height="15" fill="rgb(232,18,0)"/><text x="758.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 5.45%)</title><rect x="755" y="196" width="64" height="15" fill="rgb(236,54,6)"/><text x="758.00" y="206.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 5.13%)</title><rect x="758" y="212" width="61" height="15" fill="rgb(239,47,7)"/><text x="761.00" y="222.50">execut..</text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 4.81%)</title><rect x="762" y="228" width="57" height="15" fill="rgb(254,110,21)"/><text x="765.00" y="238.50">iterat..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 2.88%)</title><rect x="785" y="244" width="34" height="15" fill="rgb(253,118,3)"/><text x="788.00" y="254.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 2.88%)</title><rect x="785" y="260" width="34" height="15" fill="rgb(253,224,23)"/><text x="788.00" y="270.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 2.88%)</title><rect x="785" y="276" width="34" height="15" fill="rgb(213,205,8)"/><text x="788.00" y="286.50">Py..</text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (2 samples, 0.64%)</title><rect x="811" y="292" width="8" height="15" fill="rgb(252,182,6)"/><text x="814.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.32%)</title><rect x="819" y="164" width="4" height="15" fill="rgb(230,85,18)"/><text x="822.00" y="174.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.28%)</title><rect x="883" y="180" width="15" height="15" fill="rgb(245,122,11)"/><text x="886.00" y="190.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.32%)</title><rect x="898" y="180" width="4" height="15" fill="rgb(241,4,47)"/><text x="901.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.32%)</title><rect x="902" y="180" width="4" height="15" fill="rgb(205,187,17)"/><text x="905.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.32%)</title><rect x="913" y="196" width="4" height="15" fill="rgb(251,167,1)"/><text x="916.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 1.28%)</title><rect x="906" y="180" width="15" height="15" fill="rgb(239,195,26)"/><text x="909.00" y="190.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.32%)</title><rect x="917" y="196" width="4" height="15" fill="rgb(240,189,7)"/><text x="920.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.92%)</title><rect x="921" y="180" width="23" height="15" fill="rgb(229,184,40)"/><text x="924.00" y="190.50">_..</text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.32%)</title><rect x="940" y="196" width="4" height="15" fill="rgb(230,156,50)"/><text x="943.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.32%)</title><rect x="944" y="180" width="3" height="15" fill="rgb(248,50,1)"/><text x="947.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.60%)</title><rect x="947" y="180" width="19" height="15" fill="rgb(208,92,0)"/><text x="950.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.64%)</title><rect x="959" y="196" width="7" height="15" fill="rgb(241,179,33)"/><text x="962.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (43 samples, 13.78%)</title><rect x="823" y="164" width="162" height="15" fill="rgb(242,6,10)"/><text x="826.00" y="174.50">check_array (sklearn..</text></g><g><title>simplefilter (warnings.py) (5 samples, 1.60%)</title><rect x="966" y="180" width="19" height="15" fill="rgb(250,129,9)"/><text x="969.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 1.28%)</title><rect x="970" y="196" width="15" height="15" fill="rgb(215,125,2)"/><text x="973.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.64%)</title><rect x="1000" y="196" width="8" height="15" fill="rgb(223,158,41)"/><text x="1003.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 3.53%)</title><rect x="985" y="164" width="42" height="15" fill="rgb(232,150,39)"/><text x="988.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 3.53%)</title><rect x="985" y="180" width="42" height="15" fill="rgb(230,120,33)"/><text x="988.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.60%)</title><rect x="1008" y="196" width="19" height="15" fill="rgb(246,186,18)"/><text x="1011.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.92%)</title><rect x="1034" y="180" width="23" height="15" fill="rgb(240,173,21)"/><text x="1037.00" y="190.50">d..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.49%)</title><rect x="1057" y="180" width="53" height="15" fill="rgb(233,46,20)"/><text x="1060.00" y="190.50">dgemm..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.32%)</title><rect x="1110" y="180" width="4" height="15" fill="rgb(222,19,3)"/><text x="1113.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.32%)</title><rect x="1114" y="196" width="4" height="15" fill="rgb(253,36,18)"/><text x="1117.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.32%)</title><rect x="1114" y="212" width="4" height="15" fill="rgb(243,165,43)"/><text x="1117.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.32%)</title><rect x="1114" y="228" width="4" height="15" fill="rgb(236,1,36)"/><text x="1117.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (4 samples, 1.28%)</title><rect x="1129" y="228" width="15" height="15" fill="rgb(226,179,54)"/><text x="1132.00" y="238.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.28%)</title><rect x="1129" y="244" width="15" height="15" fill="rgb(241,16,23)"/><text x="1132.00" y="254.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.28%)</title><rect x="1129" y="260" width="15" height="15" fill="rgb(254,178,43)"/><text x="1132.00" y="270.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.96%)</title><rect x="1133" y="276" width="11" height="15" fill="rgb(205,158,16)"/><text x="1136.00" y="286.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.32%)</title><rect x="1144" y="276" width="4" height="15" fill="rgb(230,38,4)"/><text x="1147.00" y="286.50"></text></g><g><title>0x7f27440039f1 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1148" y="324" width="4" height="15" fill="rgb(206,176,34)"/><text x="1151.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.64%)</title><rect x="1148" y="292" width="7" height="15" fill="rgb(243,142,10)"/><text x="1151.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.64%)</title><rect x="1148" y="308" width="7" height="15" fill="rgb(237,155,22)"/><text x="1151.00" y="318.50"></text></g><g><title>0x7f274406bd50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1152" y="324" width="3" height="15" fill="rgb(211,211,33)"/><text x="1155.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.92%)</title><rect x="1144" y="228" width="23" height="15" fill="rgb(254,218,31)"/><text x="1147.00" y="238.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 1.92%)</title><rect x="1144" y="244" width="23" height="15" fill="rgb(234,201,9)"/><text x="1147.00" y="254.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 1.92%)</title><rect x="1144" y="260" width="23" height="15" fill="rgb(242,138,21)"/><text x="1147.00" y="270.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.60%)</title><rect x="1148" y="276" width="19" height="15" fill="rgb(252,170,30)"/><text x="1151.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.96%)</title><rect x="1155" y="292" width="12" height="15" fill="rgb(247,92,30)"/><text x="1158.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.32%)</title><rect x="1167" y="228" width="4" height="15" fill="rgb(216,19,19)"/><text x="1170.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.32%)</title><rect x="1171" y="244" width="3" height="15" fill="rgb(222,86,50)"/><text x="1174.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.32%)</title><rect x="1171" y="260" width="3" height="15" fill="rgb(211,76,8)"/><text x="1174.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.32%)</title><rect x="1171" y="276" width="3" height="15" fill="rgb(223,166,42)"/><text x="1174.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (121 samples, 38.78%)</title><rect x="724" y="132" width="458" height="15" fill="rgb(239,119,15)"/><text x="727.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (120 samples, 38.46%)</title><rect x="728" y="148" width="454" height="15" fill="rgb(216,42,4)"/><text x="731.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (41 samples, 13.14%)</title><rect x="1027" y="164" width="155" height="15" fill="rgb(210,105,13)"/><text x="1030.00" y="174.50">safe_sparse_dot (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 5.77%)</title><rect x="1114" y="180" width="68" height="15" fill="rgb(228,154,23)"/><text x="1117.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 5.45%)</title><rect x="1118" y="196" width="64" height="15" fill="rgb(251,205,27)"/><text x="1121.00" y="206.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (17 samples, 5.45%)</title><rect x="1118" y="212" width="64" height="15" fill="rgb(237,196,20)"/><text x="1121.00" y="222.50">PyUFunc..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.96%)</title><rect x="1171" y="228" width="11" height="15" fill="rgb(235,39,27)"/><text x="1174.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.64%)</title><rect x="1174" y="244" width="8" height="15" fill="rgb(253,60,18)"/><text x="1177.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.64%)</title><rect x="1174" y="260" width="8" height="15" fill="rgb(205,183,1)"/><text x="1177.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.32%)</title><rect x="1178" y="276" width="4" height="15" fill="rgb(222,143,15)"/><text x="1181.00" y="286.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.32%)</title><rect x="1178" y="292" width="4" height="15" fill="rgb(222,215,44)"/><text x="1181.00" y="302.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.32%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(244,142,9)"/><text x="1185.00" y="142.50"></text></g><g><title>all (312 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,155,44)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (312 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(223,214,3)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (127 samples, 40.71%)</title><rect x="709" y="68" width="481" height="15" fill="rgb(228,101,9)"/><text x="712.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (127 samples, 40.71%)</title><rect x="709" y="84" width="481" height="15" fill="rgb(218,83,49)"/><text x="712.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_so..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (127 samples, 40.71%)</title><rect x="709" y="100" width="481" height="15" fill="rgb(218,124,26)"/><text x="712.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 40.38%)</title><rect x="713" y="116" width="477" height="15" fill="rgb(208,112,32)"/><text x="716.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.32%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(234,86,48)"/><text x="1189.00" y="142.50"></text></g></g></svg>