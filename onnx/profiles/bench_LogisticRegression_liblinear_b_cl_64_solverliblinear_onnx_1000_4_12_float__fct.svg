<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>new_context (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="10" y="1412" width="1" height="15" fill="rgb(220,129,46)"/><text x="13.00" y="1422.50"></text></g><g><title>new_context (jinja2/runtime.py) (1 samples, 0.11%)</title><rect x="10" y="1428" width="1" height="15" fill="rgb(205,209,25)"/><text x="13.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(220,132,53)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(209,122,2)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(242,21,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(247,51,38)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(228,39,29)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(241,45,19)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.34%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(215,26,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(213,68,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(241,0,0)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(231,147,30)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(236,203,50)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(253,132,36)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(243,209,45)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(217,49,43)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(240,59,12)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(233,143,29)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(230,202,0)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(220,141,2)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(207,126,1)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(207,63,1)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(211,197,51)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.34%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(226,120,24)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(236,54,19)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(226,162,47)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(210,219,0)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(207,139,14)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(239,105,26)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="1060" width="4" height="15" fill="rgb(250,86,19)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1076" width="4" height="15" fill="rgb(209,78,49)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.34%)</title><rect x="10" y="1092" width="4" height="15" fill="rgb(239,118,12)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1108" width="4" height="15" fill="rgb(247,20,31)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1124" width="4" height="15" fill="rgb(246,13,37)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1140" width="4" height="15" fill="rgb(232,127,19)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1156" width="4" height="15" fill="rgb(225,223,26)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1172" width="4" height="15" fill="rgb(222,161,39)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="1188" width="4" height="15" fill="rgb(209,137,40)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1204" width="4" height="15" fill="rgb(210,98,16)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.34%)</title><rect x="10" y="1220" width="4" height="15" fill="rgb(253,9,36)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1236" width="4" height="15" fill="rgb(218,101,30)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1252" width="4" height="15" fill="rgb(212,12,47)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1268" width="4" height="15" fill="rgb(215,62,15)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="10" y="1284" width="4" height="15" fill="rgb(211,176,33)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="10" y="1300" width="4" height="15" fill="rgb(240,175,47)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="10" y="1316" width="4" height="15" fill="rgb(239,153,48)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="10" y="1332" width="4" height="15" fill="rgb(251,103,51)"/><text x="13.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.34%)</title><rect x="10" y="1348" width="4" height="15" fill="rgb(207,188,18)"/><text x="13.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.34%)</title><rect x="10" y="1364" width="4" height="15" fill="rgb(245,112,48)"/><text x="13.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.34%)</title><rect x="10" y="1380" width="4" height="15" fill="rgb(241,191,52)"/><text x="13.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.34%)</title><rect x="10" y="1396" width="4" height="15" fill="rgb(231,24,19)"/><text x="13.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.23%)</title><rect x="11" y="1412" width="3" height="15" fill="rgb(224,181,12)"/><text x="14.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.23%)</title><rect x="11" y="1428" width="3" height="15" fill="rgb(248,80,20)"/><text x="14.00" y="1438.50"></text></g><g><title>0x7f5771e1707e (?) (1 samples, 0.11%)</title><rect x="12" y="1444" width="2" height="15" fill="rgb(250,118,18)"/><text x="15.00" y="1454.50"></text></g><g><title>0x7f5771e16f97 (?) (1 samples, 0.11%)</title><rect x="12" y="1460" width="2" height="15" fill="rgb(218,156,27)"/><text x="15.00" y="1470.50"></text></g><g><title>0x7f5781d5693b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="1476" width="2" height="15" fill="rgb(223,210,27)"/><text x="15.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1124" width="1" height="15" fill="rgb(208,113,14)"/><text x="17.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1140" width="1" height="15" fill="rgb(252,164,36)"/><text x="17.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1156" width="1" height="15" fill="rgb(206,225,34)"/><text x="17.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="14" y="1172" width="1" height="15" fill="rgb(228,99,4)"/><text x="17.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1188" width="1" height="15" fill="rgb(211,172,3)"/><text x="17.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.11%)</title><rect x="14" y="1204" width="1" height="15" fill="rgb(213,45,4)"/><text x="17.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1220" width="1" height="15" fill="rgb(209,153,53)"/><text x="17.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1236" width="1" height="15" fill="rgb(222,138,35)"/><text x="17.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1252" width="1" height="15" fill="rgb(230,94,50)"/><text x="17.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="14" y="1268" width="1" height="15" fill="rgb(241,29,10)"/><text x="17.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1284" width="1" height="15" fill="rgb(210,84,45)"/><text x="17.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/_ellip_harm.py) (1 samples, 0.11%)</title><rect x="14" y="1300" width="1" height="15" fill="rgb(226,228,21)"/><text x="17.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1316" width="1" height="15" fill="rgb(244,40,32)"/><text x="17.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1332" width="1" height="15" fill="rgb(207,27,26)"/><text x="17.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1348" width="1" height="15" fill="rgb(205,6,35)"/><text x="17.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1364" width="1" height="15" fill="rgb(208,85,14)"/><text x="17.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="14" y="1380" width="1" height="15" fill="rgb(228,139,25)"/><text x="17.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="14" y="1396" width="1" height="15" fill="rgb(205,182,15)"/><text x="17.00" y="1406.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1412" width="1" height="15" fill="rgb(208,128,1)"/><text x="17.00" y="1422.50"></text></g><g><title>0x7f5781fde995 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1428" width="1" height="15" fill="rgb(219,75,28)"/><text x="17.00" y="1438.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1444" width="1" height="15" fill="rgb(254,156,34)"/><text x="17.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1460" width="1" height="15" fill="rgb(230,136,33)"/><text x="17.00" y="1470.50"></text></g><g><title>0x7f5781fde258 (libdl-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1476" width="1" height="15" fill="rgb(235,149,5)"/><text x="17.00" y="1486.50"></text></g><g><title>0x7f578202bd7a (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1492" width="1" height="15" fill="rgb(251,66,22)"/><text x="17.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1508" width="1" height="15" fill="rgb(221,216,24)"/><text x="17.00" y="1518.50"></text></g><g><title>0x7f578202c345 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1524" width="1" height="15" fill="rgb(230,83,31)"/><text x="17.00" y="1534.50"></text></g><g><title>0x7f5782024fec (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1540" width="1" height="15" fill="rgb(246,21,15)"/><text x="17.00" y="1550.50"></text></g><g><title>0x7f578202356b (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1556" width="1" height="15" fill="rgb(214,40,25)"/><text x="17.00" y="1566.50"></text></g><g><title>0x7f5782022c6d (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1572" width="1" height="15" fill="rgb(223,74,47)"/><text x="17.00" y="1582.50"></text></g><g><title>0x7f5782022765 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1588" width="1" height="15" fill="rgb(246,65,33)"/><text x="17.00" y="1598.50"></text></g><g><title>0x7f5782034028 (ld-2.29.so) (1 samples, 0.11%)</title><rect x="14" y="1604" width="1" height="15" fill="rgb(244,5,4)"/><text x="17.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="836" width="2" height="15" fill="rgb(235,41,4)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(248,85,25)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(231,17,23)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(209,175,16)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(226,30,14)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.23%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(215,204,54)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(253,188,7)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(226,96,32)"/><text x="17.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(226,3,53)"/><text x="17.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(237,167,11)"/><text x="17.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(221,72,54)"/><text x="17.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.23%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(249,156,41)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(223,42,34)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(207,138,3)"/><text x="17.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(247,153,7)"/><text x="17.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="14" y="1076" width="2" height="15" fill="rgb(212,173,9)"/><text x="17.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(222,139,47)"/><text x="17.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.23%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(206,40,4)"/><text x="17.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1124" width="1" height="15" fill="rgb(220,134,48)"/><text x="18.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1140" width="1" height="15" fill="rgb(243,87,36)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1156" width="1" height="15" fill="rgb(245,80,28)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1172" width="1" height="15" fill="rgb(242,112,7)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1188" width="1" height="15" fill="rgb(232,174,1)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1204" width="1" height="15" fill="rgb(218,214,50)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1220" width="1" height="15" fill="rgb(226,118,25)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="15" y="1236" width="1" height="15" fill="rgb(244,161,47)"/><text x="18.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1252" width="1" height="15" fill="rgb(216,135,27)"/><text x="18.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1268" width="1" height="15" fill="rgb(207,67,11)"/><text x="18.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1284" width="1" height="15" fill="rgb(219,74,29)"/><text x="18.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1300" width="1" height="15" fill="rgb(217,17,13)"/><text x="18.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1316" width="1" height="15" fill="rgb(242,22,16)"/><text x="18.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="1332" width="1" height="15" fill="rgb(237,102,43)"/><text x="18.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1348" width="1" height="15" fill="rgb(242,15,19)"/><text x="18.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.11%)</title><rect x="15" y="1364" width="1" height="15" fill="rgb(208,56,5)"/><text x="18.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="15" y="1380" width="1" height="15" fill="rgb(233,26,53)"/><text x="18.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="15" y="1396" width="1" height="15" fill="rgb(240,47,38)"/><text x="18.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.79%)</title><rect x="10" y="292" width="9" height="15" fill="rgb(227,190,43)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="308" width="9" height="15" fill="rgb(245,106,28)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="324" width="9" height="15" fill="rgb(217,19,36)"/><text x="13.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(227,73,0)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(209,188,41)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(236,192,41)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(220,138,13)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(236,145,24)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(249,156,28)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 0.79%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(211,203,16)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(206,136,47)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(235,54,0)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(218,220,51)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(250,67,29)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(219,10,13)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 0.79%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(230,143,15)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(209,121,41)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(210,192,38)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(249,18,30)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.79%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(206,209,36)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.79%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(246,56,38)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.45%)</title><rect x="14" y="628" width="5" height="15" fill="rgb(233,35,32)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="644" width="5" height="15" fill="rgb(211,204,44)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="660" width="5" height="15" fill="rgb(219,213,45)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="676" width="5" height="15" fill="rgb(210,85,14)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="14" y="692" width="5" height="15" fill="rgb(242,114,29)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="708" width="5" height="15" fill="rgb(235,88,30)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.45%)</title><rect x="14" y="724" width="5" height="15" fill="rgb(205,162,23)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="740" width="5" height="15" fill="rgb(254,100,25)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="756" width="5" height="15" fill="rgb(237,121,1)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="772" width="5" height="15" fill="rgb(219,47,9)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="14" y="788" width="5" height="15" fill="rgb(209,178,41)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="14" y="804" width="5" height="15" fill="rgb(251,140,40)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.45%)</title><rect x="14" y="820" width="5" height="15" fill="rgb(214,20,9)"/><text x="17.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(220,94,0)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(230,2,54)"/><text x="19.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(236,14,28)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(221,128,24)"/><text x="19.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(244,169,48)"/><text x="19.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(235,179,18)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(218,220,16)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.23%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(219,210,45)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(251,89,14)"/><text x="19.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(217,134,30)"/><text x="19.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(214,41,41)"/><text x="19.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(234,157,24)"/><text x="19.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(239,151,31)"/><text x="19.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.23%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(237,69,32)"/><text x="19.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(213,170,33)"/><text x="19.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(237,148,38)"/><text x="19.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(213,211,11)"/><text x="19.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(228,123,33)"/><text x="19.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1124" width="3" height="15" fill="rgb(213,52,44)"/><text x="19.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (2 samples, 0.23%)</title><rect x="16" y="1140" width="3" height="15" fill="rgb(227,162,54)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1156" width="3" height="15" fill="rgb(214,173,54)"/><text x="19.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1172" width="3" height="15" fill="rgb(234,111,13)"/><text x="19.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1188" width="3" height="15" fill="rgb(237,122,13)"/><text x="19.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(249,206,47)"/><text x="19.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(233,142,12)"/><text x="19.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (2 samples, 0.23%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(211,24,47)"/><text x="19.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(249,185,47)"/><text x="19.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(247,33,31)"/><text x="19.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(224,170,53)"/><text x="19.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(233,104,52)"/><text x="19.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(239,200,52)"/><text x="19.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (2 samples, 0.23%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(249,53,46)"/><text x="19.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(220,228,48)"/><text x="19.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(236,159,7)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(221,23,24)"/><text x="19.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1396" width="3" height="15" fill="rgb(215,68,19)"/><text x="19.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1412" width="3" height="15" fill="rgb(221,130,32)"/><text x="19.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1428" width="3" height="15" fill="rgb(209,130,11)"/><text x="19.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1444" width="3" height="15" fill="rgb(239,131,46)"/><text x="19.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1460" width="3" height="15" fill="rgb(206,120,44)"/><text x="19.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (2 samples, 0.23%)</title><rect x="16" y="1476" width="3" height="15" fill="rgb(218,117,7)"/><text x="19.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1492" width="3" height="15" fill="rgb(220,203,19)"/><text x="19.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1508" width="3" height="15" fill="rgb(215,36,39)"/><text x="19.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1524" width="3" height="15" fill="rgb(207,203,33)"/><text x="19.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1540" width="3" height="15" fill="rgb(222,164,32)"/><text x="19.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1556" width="3" height="15" fill="rgb(205,81,47)"/><text x="19.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (2 samples, 0.23%)</title><rect x="16" y="1572" width="3" height="15" fill="rgb(253,142,49)"/><text x="19.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1588" width="3" height="15" fill="rgb(237,141,45)"/><text x="19.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1604" width="3" height="15" fill="rgb(239,213,48)"/><text x="19.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1620" width="3" height="15" fill="rgb(253,94,43)"/><text x="19.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1636" width="3" height="15" fill="rgb(232,26,30)"/><text x="19.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1652" width="3" height="15" fill="rgb(208,46,5)"/><text x="19.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (2 samples, 0.23%)</title><rect x="16" y="1668" width="3" height="15" fill="rgb(215,142,54)"/><text x="19.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1684" width="3" height="15" fill="rgb(226,156,3)"/><text x="19.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1700" width="3" height="15" fill="rgb(236,219,38)"/><text x="19.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1716" width="3" height="15" fill="rgb(207,191,19)"/><text x="19.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1732" width="3" height="15" fill="rgb(221,186,34)"/><text x="19.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1748" width="3" height="15" fill="rgb(221,108,26)"/><text x="19.00" y="1758.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (2 samples, 0.23%)</title><rect x="16" y="1764" width="3" height="15" fill="rgb(247,88,21)"/><text x="19.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1780" width="3" height="15" fill="rgb(209,84,37)"/><text x="19.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1796" width="3" height="15" fill="rgb(234,163,54)"/><text x="19.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1812" width="3" height="15" fill="rgb(208,12,38)"/><text x="19.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1828" width="3" height="15" fill="rgb(241,206,35)"/><text x="19.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1844" width="3" height="15" fill="rgb(214,166,51)"/><text x="19.00" y="1854.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py) (2 samples, 0.23%)</title><rect x="16" y="1860" width="3" height="15" fill="rgb(206,12,21)"/><text x="19.00" y="1870.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1876" width="3" height="15" fill="rgb(206,188,49)"/><text x="19.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1892" width="3" height="15" fill="rgb(233,117,31)"/><text x="19.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1908" width="3" height="15" fill="rgb(230,68,45)"/><text x="19.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1924" width="3" height="15" fill="rgb(227,109,36)"/><text x="19.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1940" width="3" height="15" fill="rgb(221,154,0)"/><text x="19.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="16" y="1956" width="3" height="15" fill="rgb(244,165,23)"/><text x="19.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="16" y="1972" width="3" height="15" fill="rgb(253,112,40)"/><text x="19.00" y="1982.50"></text></g><g><title>&lt;module&gt; (psutil/_common.py) (2 samples, 0.23%)</title><rect x="16" y="1988" width="3" height="15" fill="rgb(253,141,30)"/><text x="19.00" y="1998.50"></text></g><g><title>namedtuple (collections/__init__.py) (2 samples, 0.23%)</title><rect x="16" y="2004" width="3" height="15" fill="rgb(240,5,11)"/><text x="19.00" y="2014.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(235,65,14)"/><text x="22.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(209,83,51)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(231,53,32)"/><text x="22.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(235,159,34)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="19" y="996" width="1" height="15" fill="rgb(229,229,44)"/><text x="22.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(239,199,51)"/><text x="22.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(206,205,41)"/><text x="22.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(222,57,51)"/><text x="22.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.23%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(235,165,37)"/><text x="22.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(225,181,47)"/><text x="23.00" y="942.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.11%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(236,105,13)"/><text x="23.00" y="958.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.11%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(248,19,47)"/><text x="23.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(240,199,5)"/><text x="22.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.34%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(221,64,40)"/><text x="22.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="868" width="1" height="15" fill="rgb(216,46,44)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="884" width="1" height="15" fill="rgb(212,61,31)"/><text x="25.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="900" width="1" height="15" fill="rgb(243,153,15)"/><text x="25.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="916" width="1" height="15" fill="rgb(219,64,51)"/><text x="25.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="932" width="1" height="15" fill="rgb(235,84,45)"/><text x="25.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="22" y="948" width="1" height="15" fill="rgb(220,101,34)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(245,152,0)"/><text x="25.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(249,4,14)"/><text x="25.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(206,70,3)"/><text x="25.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.25%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(227,2,30)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.25%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(251,63,2)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.25%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(229,175,25)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.25%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(213,47,0)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.25%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(237,82,8)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.25%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(215,181,1)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="292" width="5" height="15" fill="rgb(228,195,13)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="308" width="5" height="15" fill="rgb(234,66,7)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="324" width="5" height="15" fill="rgb(231,57,53)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="340" width="5" height="15" fill="rgb(218,165,8)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="356" width="5" height="15" fill="rgb(224,192,37)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="372" width="5" height="15" fill="rgb(239,82,52)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.45%)</title><rect x="19" y="388" width="5" height="15" fill="rgb(220,165,39)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="404" width="5" height="15" fill="rgb(221,155,46)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="420" width="5" height="15" fill="rgb(249,199,4)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="436" width="5" height="15" fill="rgb(226,88,35)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="452" width="5" height="15" fill="rgb(252,150,39)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="468" width="5" height="15" fill="rgb(246,4,30)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.45%)</title><rect x="19" y="484" width="5" height="15" fill="rgb(239,126,23)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="500" width="5" height="15" fill="rgb(217,137,50)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="516" width="5" height="15" fill="rgb(248,145,16)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(208,95,30)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(240,117,27)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(212,23,51)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.45%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(221,50,10)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(250,9,36)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(215,30,27)"/><text x="22.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(231,91,25)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(234,107,23)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(241,49,28)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(240,92,46)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(249,203,41)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(219,88,1)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(226,114,45)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(213,119,34)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(222,15,15)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(233,41,9)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.45%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(212,76,10)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.45%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(215,23,6)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.45%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(253,90,50)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(215,127,14)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(206,220,5)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(214,10,52)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(209,22,52)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(247,47,9)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.11%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(241,186,37)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(246,187,45)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(254,83,14)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(208,105,51)"/><text x="26.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(248,11,23)"/><text x="26.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.11%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(240,57,0)"/><text x="26.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(242,183,9)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(251,120,11)"/><text x="26.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(254,187,6)"/><text x="26.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(251,72,33)"/><text x="26.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(252,209,29)"/><text x="26.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(241,177,32)"/><text x="26.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(219,184,21)"/><text x="26.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(207,118,37)"/><text x="26.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(252,43,3)"/><text x="26.00" y="1150.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(224,72,49)"/><text x="26.00" y="1166.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(220,227,20)"/><text x="26.00" y="1182.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(231,30,42)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(206,11,46)"/><text x="26.00" y="1214.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(224,123,23)"/><text x="26.00" y="1230.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(218,119,52)"/><text x="26.00" y="1246.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(248,158,44)"/><text x="26.00" y="1262.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(209,11,16)"/><text x="26.00" y="1278.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(206,54,25)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(228,163,9)"/><text x="26.00" y="1310.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.11%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(244,33,40)"/><text x="26.00" y="1326.50"></text></g><g><title>copy (copy.py) (1 samples, 0.11%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(241,198,26)"/><text x="26.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.11%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(242,31,10)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(229,102,52)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(239,65,19)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(226,226,41)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(206,114,7)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(227,132,30)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.11%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(206,99,11)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(235,143,49)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(227,168,15)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(232,40,47)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(245,18,37)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(224,9,26)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.11%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(226,120,8)"/><text x="27.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(243,169,10)"/><text x="27.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(250,74,20)"/><text x="27.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(220,210,18)"/><text x="27.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(244,63,13)"/><text x="27.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(224,94,33)"/><text x="27.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(222,138,34)"/><text x="27.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(205,127,14)"/><text x="27.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(239,95,37)"/><text x="27.00" y="910.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(215,74,4)"/><text x="27.00" y="926.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.11%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(206,101,16)"/><text x="27.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (2 samples, 0.23%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(206,94,40)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="260" width="3" height="15" fill="rgb(219,55,9)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="276" width="3" height="15" fill="rgb(228,140,19)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="292" width="3" height="15" fill="rgb(254,207,24)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="308" width="3" height="15" fill="rgb(253,220,5)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="324" width="3" height="15" fill="rgb(207,107,24)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.23%)</title><rect x="24" y="340" width="3" height="15" fill="rgb(213,203,34)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="356" width="3" height="15" fill="rgb(238,208,29)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="372" width="3" height="15" fill="rgb(214,9,34)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="388" width="3" height="15" fill="rgb(218,124,37)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="404" width="3" height="15" fill="rgb(222,171,6)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="420" width="3" height="15" fill="rgb(229,73,12)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="436" width="3" height="15" fill="rgb(241,34,0)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="452" width="3" height="15" fill="rgb(254,159,2)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="468" width="3" height="15" fill="rgb(211,216,45)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.23%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(221,212,53)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(207,209,26)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(239,22,37)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(239,149,17)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.23%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(223,27,14)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(210,220,50)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.11%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(248,127,52)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(231,146,29)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(242,127,53)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(241,25,42)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(210,46,23)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(248,143,10)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.11%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(236,110,36)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(212,145,52)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="708" width="1" height="15" fill="rgb(213,92,25)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(252,86,31)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="740" width="1" height="15" fill="rgb(234,179,36)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="756" width="1" height="15" fill="rgb(219,148,51)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="772" width="1" height="15" fill="rgb(233,212,42)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="788" width="1" height="15" fill="rgb(229,78,5)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="804" width="1" height="15" fill="rgb(215,42,42)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="820" width="1" height="15" fill="rgb(250,10,26)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="836" width="1" height="15" fill="rgb(210,161,5)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="852" width="1" height="15" fill="rgb(213,147,45)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="868" width="1" height="15" fill="rgb(247,148,35)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="884" width="1" height="15" fill="rgb(211,218,29)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.11%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(226,134,49)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(208,85,33)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(232,96,45)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(248,2,22)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(220,154,24)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(205,125,10)"/><text x="29.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(236,74,14)"/><text x="29.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(227,11,48)"/><text x="29.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(219,52,37)"/><text x="29.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(231,31,50)"/><text x="29.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(228,173,6)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(234,191,7)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(234,16,23)"/><text x="29.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(246,42,52)"/><text x="29.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(242,130,39)"/><text x="29.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(230,56,45)"/><text x="29.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(214,134,26)"/><text x="29.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.11%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(242,163,36)"/><text x="29.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(226,1,4)"/><text x="29.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(247,185,21)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(209,162,7)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(247,115,34)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(224,167,15)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(239,229,16)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(233,200,39)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.11%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(234,181,41)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(234,29,9)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(208,89,51)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1348" width="1" height="15" fill="rgb(214,43,42)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="26" y="1364" width="1" height="15" fill="rgb(209,7,39)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="26" y="1380" width="1" height="15" fill="rgb(220,131,41)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.11%)</title><rect x="26" y="1396" width="1" height="15" fill="rgb(247,46,3)"/><text x="29.00" y="1406.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.11%)</title><rect x="26" y="1412" width="1" height="15" fill="rgb(237,206,17)"/><text x="29.00" y="1422.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.11%)</title><rect x="26" y="1428" width="1" height="15" fill="rgb(252,69,18)"/><text x="29.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="68" width="18" height="15" fill="rgb(211,195,50)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="84" width="18" height="15" fill="rgb(232,13,50)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(233,63,19)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.59%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(225,53,39)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="132" width="18" height="15" fill="rgb(232,151,45)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (14 samples, 1.59%)</title><rect x="10" y="148" width="18" height="15" fill="rgb(215,22,6)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="164" width="18" height="15" fill="rgb(210,153,12)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.59%)</title><rect x="10" y="180" width="18" height="15" fill="rgb(233,203,54)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(209,196,15)"/><text x="27.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.34%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(230,14,6)"/><text x="27.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.34%)</title><rect x="24" y="228" width="4" height="15" fill="rgb(239,32,4)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(250,134,38)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(219,154,54)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(239,69,45)"/><text x="30.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(242,188,51)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(205,224,33)"/><text x="30.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(225,177,45)"/><text x="30.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(231,203,6)"/><text x="30.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(238,159,9)"/><text x="30.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.11%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(227,163,26)"/><text x="30.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(239,78,18)"/><text x="30.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(225,74,47)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(219,180,44)"/><text x="30.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(216,106,5)"/><text x="30.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(239,168,12)"/><text x="30.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(242,1,39)"/><text x="30.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(252,7,26)"/><text x="30.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py) (1 samples, 0.11%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(223,121,10)"/><text x="30.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(233,28,51)"/><text x="30.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(233,92,35)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="548" width="1" height="15" fill="rgb(227,23,51)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="564" width="1" height="15" fill="rgb(245,175,42)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="580" width="1" height="15" fill="rgb(217,229,27)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="596" width="1" height="15" fill="rgb(212,84,24)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="612" width="1" height="15" fill="rgb(233,65,49)"/><text x="30.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="27" y="628" width="1" height="15" fill="rgb(207,113,34)"/><text x="30.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="644" width="1" height="15" fill="rgb(223,75,4)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="660" width="1" height="15" fill="rgb(238,91,45)"/><text x="30.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="676" width="1" height="15" fill="rgb(254,194,40)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="692" width="1" height="15" fill="rgb(233,183,33)"/><text x="30.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="708" width="1" height="15" fill="rgb(216,136,24)"/><text x="30.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="724" width="1" height="15" fill="rgb(214,108,48)"/><text x="30.00" y="734.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="740" width="1" height="15" fill="rgb(233,93,20)"/><text x="30.00" y="750.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="27" y="756" width="1" height="15" fill="rgb(210,124,48)"/><text x="30.00" y="766.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="772" width="1" height="15" fill="rgb(252,45,19)"/><text x="30.00" y="782.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="27" y="788" width="1" height="15" fill="rgb(207,138,54)"/><text x="30.00" y="798.50"></text></g><g><title>0x7f5781d55bc0 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="110" y="132" width="2" height="15" fill="rgb(252,103,15)"/><text x="113.00" y="142.50"></text></g><g><title>0x7f5781d55bcc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="112" y="132" width="2" height="15" fill="rgb(249,102,45)"/><text x="115.00" y="142.50"></text></g><g><title>0x7f5781d55bdf (libc-2.29.so) (2 samples, 0.23%)</title><rect x="114" y="132" width="2" height="15" fill="rgb(216,3,19)"/><text x="117.00" y="142.50"></text></g><g><title>0x7f5781d55c00 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="116" y="132" width="2" height="15" fill="rgb(208,223,30)"/><text x="119.00" y="142.50"></text></g><g><title>0x7f5781d55c04 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="118" y="132" width="1" height="15" fill="rgb(225,213,1)"/><text x="121.00" y="142.50"></text></g><g><title>0x7f5781d55c14 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="119" y="132" width="3" height="15" fill="rgb(222,131,3)"/><text x="122.00" y="142.50"></text></g><g><title>0x7f5781d55c20 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="122" y="132" width="1" height="15" fill="rgb(249,58,16)"/><text x="125.00" y="142.50"></text></g><g><title>0x7f5781d55c2d (libc-2.29.so) (4 samples, 0.45%)</title><rect x="123" y="132" width="5" height="15" fill="rgb(223,76,32)"/><text x="126.00" y="142.50"></text></g><g><title>0x7f5781d55c49 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="128" y="132" width="2" height="15" fill="rgb(246,182,17)"/><text x="131.00" y="142.50"></text></g><g><title>0x7f5781d55c4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="130" y="132" width="1" height="15" fill="rgb(250,90,42)"/><text x="133.00" y="142.50"></text></g><g><title>0x7f5781d55c5a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="131" y="132" width="1" height="15" fill="rgb(238,222,2)"/><text x="134.00" y="142.50"></text></g><g><title>0x7f5781d55c6a (libc-2.29.so) (2 samples, 0.23%)</title><rect x="132" y="132" width="3" height="15" fill="rgb(222,177,26)"/><text x="135.00" y="142.50"></text></g><g><title>0x7f5781d55aa4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="135" y="148" width="1" height="15" fill="rgb(217,183,53)"/><text x="138.00" y="158.50"></text></g><g><title>0x7f5781d55c73 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="135" y="132" width="3" height="15" fill="rgb(210,195,12)"/><text x="138.00" y="142.50"></text></g><g><title>0x7f5781d55aaf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="136" y="148" width="2" height="15" fill="rgb(240,60,43)"/><text x="139.00" y="158.50"></text></g><g><title>0x7f5781d56eb0 (libc-2.29.so) (22 samples, 2.49%)</title><rect x="110" y="116" width="29" height="15" fill="rgb(229,73,0)"/><text x="113.00" y="126.50">0x..</text></g><g><title>0x7f5781d55ca7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="138" y="132" width="1" height="15" fill="rgb(210,169,5)"/><text x="141.00" y="142.50"></text></g><g><title>0x7f5781d55aa8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="138" y="148" width="1" height="15" fill="rgb(208,120,17)"/><text x="141.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="139" y="116" width="1" height="15" fill="rgb(244,4,13)"/><text x="142.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="139" y="132" width="1" height="15" fill="rgb(243,129,24)"/><text x="142.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="139" y="148" width="1" height="15" fill="rgb(241,172,33)"/><text x="142.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.23%)</title><rect x="146" y="180" width="2" height="15" fill="rgb(220,152,35)"/><text x="149.00" y="190.50"></text></g><g><title>0x7f57425bfff9 (?) (1 samples, 0.11%)</title><rect x="150" y="212" width="1" height="15" fill="rgb(218,111,41)"/><text x="153.00" y="222.50"></text></g><g><title>0x7f57425baef6 (?) (1 samples, 0.11%)</title><rect x="150" y="228" width="1" height="15" fill="rgb(218,82,7)"/><text x="153.00" y="238.50"></text></g><g><title>0x7f57425af962 (?) (1 samples, 0.11%)</title><rect x="150" y="244" width="1" height="15" fill="rgb(214,2,52)"/><text x="153.00" y="254.50"></text></g><g><title>0x7f57425e37a7 (?) (1 samples, 0.11%)</title><rect x="150" y="260" width="1" height="15" fill="rgb(209,110,50)"/><text x="153.00" y="270.50"></text></g><g><title>0x7f57425e3379 (?) (1 samples, 0.11%)</title><rect x="150" y="276" width="1" height="15" fill="rgb(253,8,8)"/><text x="153.00" y="286.50"></text></g><g><title>0x7f5742a418b8 (?) (1 samples, 0.11%)</title><rect x="150" y="292" width="1" height="15" fill="rgb(229,186,40)"/><text x="153.00" y="302.50"></text></g><g><title>0x7f5742a3fc7f (?) (1 samples, 0.11%)</title><rect x="150" y="308" width="1" height="15" fill="rgb(226,71,13)"/><text x="153.00" y="318.50"></text></g><g><title>0x7f5742a5299c (?) (1 samples, 0.11%)</title><rect x="150" y="324" width="1" height="15" fill="rgb(208,85,7)"/><text x="153.00" y="334.50"></text></g><g><title>0x7f574277d450 (?) (1 samples, 0.11%)</title><rect x="150" y="340" width="1" height="15" fill="rgb(246,52,27)"/><text x="153.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="150" y="356" width="1" height="15" fill="rgb(216,31,1)"/><text x="153.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="150" y="372" width="1" height="15" fill="rgb(233,174,45)"/><text x="153.00" y="382.50"></text></g><g><title>0x7f5781d58368 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="150" y="388" width="1" height="15" fill="rgb(233,13,12)"/><text x="153.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.11%)</title><rect x="151" y="212" width="1" height="15" fill="rgb(207,55,19)"/><text x="154.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="151" y="228" width="1" height="15" fill="rgb(206,125,54)"/><text x="154.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="152" y="228" width="2" height="15" fill="rgb(220,158,19)"/><text x="155.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="156" y="292" width="2" height="15" fill="rgb(235,70,53)"/><text x="159.00" y="302.50"></text></g><g><title>0x7f5781d5694f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="156" y="308" width="2" height="15" fill="rgb(235,174,49)"/><text x="159.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="158" y="292" width="1" height="15" fill="rgb(207,197,30)"/><text x="161.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="159" y="292" width="2" height="15" fill="rgb(239,48,22)"/><text x="162.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="162" y="340" width="1" height="15" fill="rgb(245,114,28)"/><text x="165.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="162" y="356" width="1" height="15" fill="rgb(250,228,4)"/><text x="165.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="162" y="372" width="1" height="15" fill="rgb(208,194,49)"/><text x="165.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="162" y="388" width="1" height="15" fill="rgb(215,86,26)"/><text x="165.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="162" y="404" width="1" height="15" fill="rgb(254,91,34)"/><text x="165.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="163" y="356" width="2" height="15" fill="rgb(229,97,29)"/><text x="166.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="163" y="372" width="2" height="15" fill="rgb(251,21,24)"/><text x="166.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="163" y="388" width="2" height="15" fill="rgb(227,134,41)"/><text x="166.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="165" y="356" width="1" height="15" fill="rgb(251,177,33)"/><text x="168.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="165" y="372" width="1" height="15" fill="rgb(226,78,35)"/><text x="168.00" y="382.50"></text></g><g><title>0x7f5781d57e07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="165" y="388" width="1" height="15" fill="rgb(234,199,46)"/><text x="168.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.34%)</title><rect x="163" y="340" width="4" height="15" fill="rgb(249,111,42)"/><text x="166.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="166" y="356" width="1" height="15" fill="rgb(253,78,34)"/><text x="169.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="166" y="372" width="1" height="15" fill="rgb(221,220,6)"/><text x="169.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="167" y="340" width="2" height="15" fill="rgb(221,122,27)"/><text x="170.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="199" y="356" width="2" height="15" fill="rgb(253,218,34)"/><text x="202.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="356" width="1" height="15" fill="rgb(209,88,20)"/><text x="204.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="372" width="1" height="15" fill="rgb(243,34,14)"/><text x="204.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="388" width="1" height="15" fill="rgb(253,160,19)"/><text x="204.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="404" width="1" height="15" fill="rgb(238,45,52)"/><text x="204.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="420" width="1" height="15" fill="rgb(243,186,5)"/><text x="204.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="201" y="436" width="1" height="15" fill="rgb(248,125,19)"/><text x="204.00" y="446.50"></text></g><g><title>0x7f5781d76db3 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="222" y="372" width="3" height="15" fill="rgb(229,69,7)"/><text x="225.00" y="382.50"></text></g><g><title>0x7f5781ed5e14 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="225" y="372" width="1" height="15" fill="rgb(231,88,1)"/><text x="228.00" y="382.50"></text></g><g><title>0x7f5781ed5e71 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="226" y="372" width="1" height="15" fill="rgb(246,99,43)"/><text x="229.00" y="382.50"></text></g><g><title>0x7f5781ed5e7a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="227" y="372" width="2" height="15" fill="rgb(254,75,6)"/><text x="230.00" y="382.50"></text></g><g><title>0x7f5781ed5e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="229" y="372" width="1" height="15" fill="rgb(224,183,9)"/><text x="232.00" y="382.50"></text></g><g><title>0x7f5781ed5e96 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="230" y="372" width="3" height="15" fill="rgb(233,94,22)"/><text x="233.00" y="382.50"></text></g><g><title>0x7f5781ed5ea2 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="233" y="372" width="4" height="15" fill="rgb(230,32,15)"/><text x="236.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 5.89%)</title><rect x="169" y="340" width="69" height="15" fill="rgb(213,154,53)"/><text x="172.00" y="350.50">onnxrun..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.06%)</title><rect x="202" y="356" width="36" height="15" fill="rgb(206,133,30)"/><text x="205.00" y="366.50">onn..</text></g><g><title>0x7f5781ed5ea6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="237" y="372" width="1" height="15" fill="rgb(247,190,16)"/><text x="240.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.49%)</title><rect x="238" y="340" width="29" height="15" fill="rgb(249,91,3)"/><text x="241.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.49%)</title><rect x="238" y="356" width="29" height="15" fill="rgb(208,101,43)"/><text x="241.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="372" width="1" height="15" fill="rgb(240,221,11)"/><text x="269.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="388" width="1" height="15" fill="rgb(206,6,38)"/><text x="269.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="404" width="1" height="15" fill="rgb(227,94,8)"/><text x="269.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="420" width="1" height="15" fill="rgb(228,77,18)"/><text x="269.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="436" width="1" height="15" fill="rgb(213,81,51)"/><text x="269.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="452" width="1" height="15" fill="rgb(236,192,22)"/><text x="269.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="468" width="1" height="15" fill="rgb(216,151,15)"/><text x="269.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="484" width="1" height="15" fill="rgb(206,31,36)"/><text x="269.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="266" y="500" width="1" height="15" fill="rgb(246,51,29)"/><text x="269.00" y="510.50"></text></g><g><title>0x7f5781d656e3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="266" y="516" width="1" height="15" fill="rgb(217,114,8)"/><text x="269.00" y="526.50"></text></g><g><title>0x7f5742586930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="303" y="356" width="2" height="15" fill="rgb(221,185,41)"/><text x="306.00" y="366.50"></text></g><g><title>0x7f5781d57b49 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="374" y="388" width="2" height="15" fill="rgb(215,97,10)"/><text x="377.00" y="398.50"></text></g><g><title>0x7f5781d57b61 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="376" y="388" width="1" height="15" fill="rgb(223,86,46)"/><text x="379.00" y="398.50"></text></g><g><title>0x7f5781d57b76 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="377" y="388" width="1" height="15" fill="rgb(217,99,40)"/><text x="380.00" y="398.50"></text></g><g><title>0x7f5781d57d36 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="378" y="388" width="2" height="15" fill="rgb(219,99,0)"/><text x="381.00" y="398.50"></text></g><g><title>0x7f5781d57d48 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="380" y="388" width="1" height="15" fill="rgb(213,79,29)"/><text x="383.00" y="398.50"></text></g><g><title>0x7f5781d57d67 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="381" y="388" width="3" height="15" fill="rgb(245,165,1)"/><text x="384.00" y="398.50"></text></g><g><title>0x7f5781d57d8d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="384" y="388" width="1" height="15" fill="rgb(227,97,4)"/><text x="387.00" y="398.50"></text></g><g><title>0x7f5781d57d9f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="385" y="388" width="1" height="15" fill="rgb(212,15,24)"/><text x="388.00" y="398.50"></text></g><g><title>0x7f5781d57db4 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="386" y="388" width="3" height="15" fill="rgb(209,154,7)"/><text x="389.00" y="398.50"></text></g><g><title>0x7f5781d57dd2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="389" y="388" width="1" height="15" fill="rgb(254,29,43)"/><text x="392.00" y="398.50"></text></g><g><title>0x7f5781d57dec (libc-2.29.so) (3 samples, 0.34%)</title><rect x="390" y="388" width="4" height="15" fill="rgb(237,188,36)"/><text x="393.00" y="398.50"></text></g><g><title>0x7f5781d57e07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(236,4,24)"/><text x="397.00" y="398.50"></text></g><g><title>0x7f5781d57f2a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="396" y="388" width="1" height="15" fill="rgb(216,219,8)"/><text x="399.00" y="398.50"></text></g><g><title>0x7f5781d57fde (libc-2.29.so) (2 samples, 0.23%)</title><rect x="397" y="388" width="3" height="15" fill="rgb(207,148,39)"/><text x="400.00" y="398.50"></text></g><g><title>0x7f5781d58033 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="400" y="388" width="2" height="15" fill="rgb(254,44,50)"/><text x="403.00" y="398.50"></text></g><g><title>0x7f5781d58040 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="402" y="388" width="2" height="15" fill="rgb(240,204,3)"/><text x="405.00" y="398.50"></text></g><g><title>0x7f5781d58064 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="404" y="388" width="1" height="15" fill="rgb(229,40,23)"/><text x="407.00" y="398.50"></text></g><g><title>0x7f5781d5806d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="405" y="388" width="1" height="15" fill="rgb(216,52,18)"/><text x="408.00" y="398.50"></text></g><g><title>0x7f5781d5808c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="406" y="388" width="2" height="15" fill="rgb(254,22,43)"/><text x="409.00" y="398.50"></text></g><g><title>0x7f5781d58097 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="408" y="388" width="2" height="15" fill="rgb(249,58,12)"/><text x="411.00" y="398.50"></text></g><g><title>0x7f5781d580a3 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="410" y="388" width="3" height="15" fill="rgb(212,170,0)"/><text x="413.00" y="398.50"></text></g><g><title>0x7f5781d58368 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="413" y="388" width="3" height="15" fill="rgb(252,225,12)"/><text x="416.00" y="398.50"></text></g><g><title>0x7f5781d58384 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="416" y="388" width="1" height="15" fill="rgb(214,84,6)"/><text x="419.00" y="398.50"></text></g><g><title>0x7f5781d58395 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="417" y="388" width="1" height="15" fill="rgb(242,49,45)"/><text x="420.00" y="398.50"></text></g><g><title>0x7f5781d583ae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="418" y="388" width="2" height="15" fill="rgb(210,16,28)"/><text x="421.00" y="398.50"></text></g><g><title>0x7f5781d583c4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="420" y="388" width="1" height="15" fill="rgb(245,116,31)"/><text x="423.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (90 samples, 10.19%)</title><rect x="305" y="356" width="120" height="15" fill="rgb(215,164,47)"/><text x="308.00" y="366.50">operator new (..</text></g><g><title>malloc (libc-2.29.so) (85 samples, 9.63%)</title><rect x="312" y="372" width="113" height="15" fill="rgb(250,163,30)"/><text x="315.00" y="382.50">malloc (libc-..</text></g><g><title>0x7f5781d583e0 (libc-2.29.so) (3 samples, 0.34%)</title><rect x="421" y="388" width="4" height="15" fill="rgb(241,74,12)"/><text x="424.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.02%)</title><rect x="425" y="356" width="12" height="15" fill="rgb(252,221,40)"/><text x="428.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.45%)</title><rect x="432" y="372" width="5" height="15" fill="rgb(241,27,27)"/><text x="435.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (7 samples, 0.79%)</title><rect x="437" y="356" width="9" height="15" fill="rgb(245,226,22)"/><text x="440.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (221 samples, 25.03%)</title><rect x="161" y="308" width="295" height="15" fill="rgb(229,131,44)"/><text x="164.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (221 samples, 25.03%)</title><rect x="161" y="324" width="295" height="15" fill="rgb(235,14,4)"/><text x="164.00" y="334.50">onnxruntime::SequentialExecutor::Execut..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 15.97%)</title><rect x="267" y="340" width="189" height="15" fill="rgb(254,57,29)"/><text x="270.00" y="350.50">onnxruntime::ml::ZipMapO..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.79%)</title><rect x="446" y="356" width="10" height="15" fill="rgb(243,184,25)"/><text x="449.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (225 samples, 25.48%)</title><rect x="156" y="276" width="301" height="15" fill="rgb(247,149,0)"/><text x="159.00" y="286.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (222 samples, 25.14%)</title><rect x="161" y="292" width="296" height="15" fill="rgb(227,191,40)"/><text x="164.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxr..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="456" y="308" width="1" height="15" fill="rgb(239,190,10)"/><text x="459.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="456" y="324" width="1" height="15" fill="rgb(221,185,12)"/><text x="459.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="456" y="340" width="1" height="15" fill="rgb(205,11,9)"/><text x="459.00" y="350.50"></text></g><g><title>0x7f5781e34130 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="456" y="356" width="1" height="15" fill="rgb(227,20,28)"/><text x="459.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 25.59%)</title><rect x="156" y="260" width="303" height="15" fill="rgb(222,174,10)"/><text x="159.00" y="270.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(234,58,11)"/><text x="460.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="459" y="260" width="2" height="15" fill="rgb(209,66,46)"/><text x="462.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="460" y="276" width="1" height="15" fill="rgb(233,152,7)"/><text x="463.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="460" y="292" width="1" height="15" fill="rgb(228,10,33)"/><text x="463.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="460" y="308" width="1" height="15" fill="rgb(252,64,10)"/><text x="463.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="460" y="324" width="1" height="15" fill="rgb(241,81,37)"/><text x="463.00" y="334.50"></text></g><g><title>0x7f5742587570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="569" y="276" width="2" height="15" fill="rgb(220,25,8)"/><text x="572.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.32%)</title><rect x="571" y="276" width="63" height="15" fill="rgb(252,168,12)"/><text x="574.00" y="286.50">pybind..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 15.29%)</title><rect x="461" y="260" width="181" height="15" fill="rgb(214,125,15)"/><text x="464.00" y="270.50">pybind11::detail::map_c..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.68%)</title><rect x="634" y="276" width="8" height="15" fill="rgb(220,2,25)"/><text x="637.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="642" y="260" width="1" height="15" fill="rgb(250,183,22)"/><text x="645.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="642" y="276" width="1" height="15" fill="rgb(218,117,41)"/><text x="645.00" y="286.50"></text></g><g><title>0x7f5781d77103 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="642" y="292" width="1" height="15" fill="rgb(206,212,30)"/><text x="645.00" y="302.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="643" y="276" width="1" height="15" fill="rgb(234,10,47)"/><text x="646.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="643" y="292" width="1" height="15" fill="rgb(252,18,34)"/><text x="646.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="643" y="308" width="1" height="15" fill="rgb(254,167,53)"/><text x="646.00" y="318.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="643" y="324" width="1" height="15" fill="rgb(239,4,33)"/><text x="646.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="643" y="340" width="1" height="15" fill="rgb(220,112,53)"/><text x="646.00" y="350.50"></text></g><g><title>0x7f57718237a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="650" y="292" width="1" height="15" fill="rgb(239,211,34)"/><text x="653.00" y="302.50"></text></g><g><title>0x7f5781d5690e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="651" y="292" width="1" height="15" fill="rgb(242,170,42)"/><text x="654.00" y="302.50"></text></g><g><title>0x7f5781d5691e (libc-2.29.so) (2 samples, 0.23%)</title><rect x="652" y="292" width="3" height="15" fill="rgb(231,151,24)"/><text x="655.00" y="302.50"></text></g><g><title>0x7f5781d56961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="655" y="292" width="1" height="15" fill="rgb(207,9,39)"/><text x="658.00" y="302.50"></text></g><g><title>0x7f5781d56982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="656" y="292" width="2" height="15" fill="rgb(240,73,6)"/><text x="659.00" y="302.50"></text></g><g><title>0x7f5781d569b3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="658" y="292" width="1" height="15" fill="rgb(241,9,25)"/><text x="661.00" y="302.50"></text></g><g><title>0x7f5781d569d3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="659" y="292" width="1" height="15" fill="rgb(206,45,2)"/><text x="662.00" y="302.50"></text></g><g><title>0x7f5781d56a33 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="660" y="292" width="2" height="15" fill="rgb(216,131,46)"/><text x="663.00" y="302.50"></text></g><g><title>0x7f5781d56a51 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(223,81,20)"/><text x="665.00" y="302.50"></text></g><g><title>0x7f5781d56d02 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="664" y="292" width="2" height="15" fill="rgb(214,187,10)"/><text x="667.00" y="302.50"></text></g><g><title>0x7f5781d56d07 (libc-2.29.so) (15 samples, 1.70%)</title><rect x="666" y="292" width="20" height="15" fill="rgb(228,210,38)"/><text x="669.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.45%)</title><rect x="686" y="292" width="5" height="15" fill="rgb(254,192,47)"/><text x="689.00" y="302.50"></text></g><g><title>0x7f5781d5692c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="695" y="308" width="1" height="15" fill="rgb(208,194,13)"/><text x="698.00" y="318.50"></text></g><g><title>0x7f5781d56998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="696" y="308" width="2" height="15" fill="rgb(214,205,8)"/><text x="699.00" y="318.50"></text></g><g><title>0x7f5781d5699b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="698" y="308" width="1" height="15" fill="rgb(219,165,48)"/><text x="701.00" y="318.50"></text></g><g><title>0x7f5781d569b7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="699" y="308" width="1" height="15" fill="rgb(211,226,10)"/><text x="702.00" y="318.50"></text></g><g><title>0x7f5781d56a51 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="700" y="308" width="2" height="15" fill="rgb(213,21,54)"/><text x="703.00" y="318.50"></text></g><g><title>0x7f5781d56cf0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="702" y="308" width="1" height="15" fill="rgb(241,78,9)"/><text x="705.00" y="318.50"></text></g><g><title>0x7f5781d56d02 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="703" y="308" width="3" height="15" fill="rgb(216,90,3)"/><text x="706.00" y="318.50"></text></g><g><title>0x7f5781d56d07 (libc-2.29.so) (12 samples, 1.36%)</title><rect x="706" y="308" width="16" height="15" fill="rgb(249,229,32)"/><text x="709.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.45%)</title><rect x="722" y="308" width="5" height="15" fill="rgb(216,0,49)"/><text x="725.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (430 samples, 48.70%)</title><rect x="154" y="244" width="574" height="15" fill="rgb(247,223,47)"/><text x="157.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 7.25%)</title><rect x="643" y="260" width="85" height="15" fill="rgb(248,17,35)"/><text x="646.00" y="270.50">std::vecto..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 7.13%)</title><rect x="644" y="276" width="84" height="15" fill="rgb(211,52,8)"/><text x="647.00" y="286.50">onnxrunti..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.17%)</title><rect x="691" y="292" width="37" height="15" fill="rgb(240,151,29)"/><text x="694.00" y="302.50">std..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="727" y="308" width="1" height="15" fill="rgb(208,207,49)"/><text x="730.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (525 samples, 59.46%)</title><rect x="28" y="68" width="702" height="15" fill="rgb(253,23,25)"/><text x="31.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (525 samples, 59.46%)</title><rect x="28" y="84" width="702" height="15" fill="rgb(254,127,19)"/><text x="31.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.p..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (525 samples, 59.46%)</title><rect x="28" y="100" width="702" height="15" fill="rgb(213,89,45)"/><text x="31.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (441 samples, 49.94%)</title><rect x="140" y="116" width="590" height="15" fill="rgb(210,120,15)"/><text x="143.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (440 samples, 49.83%)</title><rect x="142" y="132" width="588" height="15" fill="rgb(250,148,16)"/><text x="145.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (440 samples, 49.83%)</title><rect x="142" y="148" width="588" height="15" fill="rgb(250,21,14)"/><text x="145.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (439 samples, 49.72%)</title><rect x="143" y="164" width="587" height="15" fill="rgb(224,9,6)"/><text x="146.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (435 samples, 49.26%)</title><rect x="148" y="180" width="582" height="15" fill="rgb(232,220,34)"/><text x="151.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (435 samples, 49.26%)</title><rect x="148" y="196" width="582" height="15" fill="rgb(229,4,34)"/><text x="151.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (432 samples, 48.92%)</title><rect x="152" y="212" width="578" height="15" fill="rgb(236,79,36)"/><text x="155.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (431 samples, 48.81%)</title><rect x="154" y="228" width="576" height="15" fill="rgb(213,41,14)"/><text x="157.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="728" y="244" width="2" height="15" fill="rgb(243,189,3)"/><text x="731.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="730" y="116" width="1" height="15" fill="rgb(238,182,12)"/><text x="733.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="730" y="132" width="1" height="15" fill="rgb(209,125,24)"/><text x="733.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="730" y="148" width="1" height="15" fill="rgb(214,158,39)"/><text x="733.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="730" y="164" width="1" height="15" fill="rgb(251,108,0)"/><text x="733.00" y="174.50"></text></g><g><title>0x7f5781d569a1 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="730" y="180" width="1" height="15" fill="rgb(247,71,42)"/><text x="733.00" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.11%)</title><rect x="735" y="180" width="1" height="15" fill="rgb(253,44,14)"/><text x="738.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.23%)</title><rect x="767" y="212" width="3" height="15" fill="rgb(227,37,50)"/><text x="770.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.23%)</title><rect x="767" y="228" width="3" height="15" fill="rgb(236,102,21)"/><text x="770.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.11%)</title><rect x="769" y="244" width="1" height="15" fill="rgb(239,41,31)"/><text x="772.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.11%)</title><rect x="769" y="260" width="1" height="15" fill="rgb(240,158,2)"/><text x="772.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.11%)</title><rect x="769" y="276" width="1" height="15" fill="rgb(224,116,16)"/><text x="772.00" y="286.50"></text></g><g><title>0x7f5781d76d94 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="769" y="292" width="1" height="15" fill="rgb(215,154,6)"/><text x="772.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (5 samples, 0.57%)</title><rect x="770" y="212" width="7" height="15" fill="rgb(213,3,11)"/><text x="773.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (4 samples, 0.45%)</title><rect x="771" y="228" width="6" height="15" fill="rgb(206,176,18)"/><text x="774.00" y="238.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (4 samples, 0.45%)</title><rect x="791" y="340" width="6" height="15" fill="rgb(237,37,53)"/><text x="794.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (10 samples, 1.13%)</title><rect x="785" y="244" width="13" height="15" fill="rgb(253,44,11)"/><text x="788.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.02%)</title><rect x="786" y="260" width="12" height="15" fill="rgb(242,21,27)"/><text x="789.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 1.02%)</title><rect x="786" y="276" width="12" height="15" fill="rgb(244,162,41)"/><text x="789.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 0.91%)</title><rect x="787" y="292" width="11" height="15" fill="rgb(235,152,35)"/><text x="790.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (7 samples, 0.79%)</title><rect x="789" y="308" width="9" height="15" fill="rgb(215,16,34)"/><text x="792.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (7 samples, 0.79%)</title><rect x="789" y="324" width="9" height="15" fill="rgb(212,30,37)"/><text x="792.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="797" y="340" width="1" height="15" fill="rgb(247,178,38)"/><text x="800.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="797" y="356" width="1" height="15" fill="rgb(216,139,2)"/><text x="800.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="797" y="372" width="1" height="15" fill="rgb(237,46,22)"/><text x="800.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="797" y="388" width="1" height="15" fill="rgb(242,98,11)"/><text x="800.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="797" y="404" width="1" height="15" fill="rgb(221,59,49)"/><text x="800.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="797" y="420" width="1" height="15" fill="rgb(235,131,21)"/><text x="800.00" y="430.50"></text></g><g><title>0x7f5781d57dd6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="797" y="436" width="1" height="15" fill="rgb(214,190,29)"/><text x="800.00" y="446.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="802" y="324" width="1" height="15" fill="rgb(225,161,5)"/><text x="805.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.11%)</title><rect x="802" y="340" width="1" height="15" fill="rgb(250,213,3)"/><text x="805.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (2 samples, 0.23%)</title><rect x="803" y="340" width="3" height="15" fill="rgb(221,69,38)"/><text x="806.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="805" y="356" width="1" height="15" fill="rgb(253,154,5)"/><text x="808.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.57%)</title><rect x="802" y="276" width="7" height="15" fill="rgb(205,114,23)"/><text x="805.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 0.57%)</title><rect x="802" y="292" width="7" height="15" fill="rgb(249,47,48)"/><text x="805.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 0.57%)</title><rect x="802" y="308" width="7" height="15" fill="rgb(253,155,50)"/><text x="805.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 0.45%)</title><rect x="803" y="324" width="6" height="15" fill="rgb(226,75,9)"/><text x="806.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.23%)</title><rect x="806" y="340" width="3" height="15" fill="rgb(243,219,30)"/><text x="809.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.23%)</title><rect x="806" y="356" width="3" height="15" fill="rgb(221,113,9)"/><text x="809.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.23%)</title><rect x="806" y="372" width="3" height="15" fill="rgb(216,115,47)"/><text x="809.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.23%)</title><rect x="806" y="388" width="3" height="15" fill="rgb(208,90,27)"/><text x="809.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.11%)</title><rect x="809" y="276" width="1" height="15" fill="rgb(216,70,32)"/><text x="812.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (18 samples, 2.04%)</title><rect x="798" y="244" width="24" height="15" fill="rgb(216,78,35)"/><text x="801.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (18 samples, 2.04%)</title><rect x="798" y="260" width="24" height="15" fill="rgb(219,96,28)"/><text x="801.00" y="270.50">d..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.02%)</title><rect x="810" y="276" width="12" height="15" fill="rgb(248,110,40)"/><text x="813.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="823" y="260" width="2" height="15" fill="rgb(242,88,26)"/><text x="826.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="823" y="276" width="2" height="15" fill="rgb(221,50,46)"/><text x="826.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.11%)</title><rect x="823" y="292" width="2" height="15" fill="rgb(210,175,12)"/><text x="826.00" y="302.50"></text></g><g><title>0x7f5781d6ce50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="823" y="308" width="2" height="15" fill="rgb(214,119,27)"/><text x="826.00" y="318.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.11%)</title><rect x="825" y="276" width="1" height="15" fill="rgb(253,191,19)"/><text x="828.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="825" y="292" width="1" height="15" fill="rgb(238,87,50)"/><text x="828.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="825" y="308" width="1" height="15" fill="rgb(254,17,20)"/><text x="828.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="827" y="324" width="2" height="15" fill="rgb(216,203,12)"/><text x="830.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="829" y="324" width="1" height="15" fill="rgb(243,102,10)"/><text x="832.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.45%)</title><rect x="827" y="308" width="6" height="15" fill="rgb(235,20,52)"/><text x="830.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.23%)</title><rect x="830" y="324" width="3" height="15" fill="rgb(223,200,35)"/><text x="833.00" y="334.50"></text></g><g><title>0x7f5781d76dae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="841" y="356" width="1" height="15" fill="rgb(210,158,14)"/><text x="844.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 1.47%)</title><rect x="826" y="292" width="17" height="15" fill="rgb(238,153,40)"/><text x="829.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (8 samples, 0.91%)</title><rect x="833" y="308" width="10" height="15" fill="rgb(230,183,31)"/><text x="836.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (8 samples, 0.91%)</title><rect x="833" y="324" width="10" height="15" fill="rgb(245,100,16)"/><text x="836.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (8 samples, 0.91%)</title><rect x="833" y="340" width="10" height="15" fill="rgb(217,146,46)"/><text x="836.00" y="350.50"></text></g><g><title>0x7f5781d76dbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="842" y="356" width="1" height="15" fill="rgb(252,30,27)"/><text x="845.00" y="366.50"></text></g><g><title>0x7f576415b33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="843" y="308" width="2" height="15" fill="rgb(219,3,1)"/><text x="846.00" y="318.50"></text></g><g><title>0x7f5764286c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="846" y="340" width="1" height="15" fill="rgb(226,113,29)"/><text x="849.00" y="350.50"></text></g><g><title>0x7f5781ea21a0 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="851" y="356" width="4" height="15" fill="rgb(250,26,51)"/><text x="854.00" y="366.50"></text></g><g><title>0x7f5781ed5e00 (libm-2.29.so) (3 samples, 0.34%)</title><rect x="855" y="356" width="4" height="15" fill="rgb(207,191,6)"/><text x="858.00" y="366.50"></text></g><g><title>0x7f5781ed5e06 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="859" y="356" width="2" height="15" fill="rgb(244,14,36)"/><text x="862.00" y="366.50"></text></g><g><title>0x7f5781ed5e0e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="861" y="356" width="1" height="15" fill="rgb(216,102,46)"/><text x="864.00" y="366.50"></text></g><g><title>0x7f5781ed5e17 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="862" y="356" width="3" height="15" fill="rgb(235,81,14)"/><text x="865.00" y="366.50"></text></g><g><title>0x7f5781ed5e62 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="865" y="356" width="1" height="15" fill="rgb(244,129,14)"/><text x="868.00" y="366.50"></text></g><g><title>0x7f576417d214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.27%)</title><rect x="845" y="324" width="26" height="15" fill="rgb(243,102,15)"/><text x="848.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (18 samples, 2.04%)</title><rect x="847" y="340" width="24" height="15" fill="rgb(242,88,14)"/><text x="850.00" y="350.50">e..</text></g><g><title>0x7f5781ed5ea6 (libm-2.29.so) (4 samples, 0.45%)</title><rect x="866" y="356" width="5" height="15" fill="rgb(228,215,52)"/><text x="869.00" y="366.50"></text></g><g><title>0x7f576417d224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="871" y="324" width="2" height="15" fill="rgb(247,54,48)"/><text x="874.00" y="334.50"></text></g><g><title>0x7f576415b33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (29 samples, 3.28%)</title><rect x="845" y="308" width="38" height="15" fill="rgb(207,125,1)"/><text x="848.00" y="318.50">0x7..</text></g><g><title>0x7f576417d228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.91%)</title><rect x="873" y="324" width="10" height="15" fill="rgb(227,126,21)"/><text x="876.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (45 samples, 5.10%)</title><rect x="825" y="260" width="60" height="15" fill="rgb(206,90,29)"/><text x="828.00" y="270.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (44 samples, 4.98%)</title><rect x="826" y="276" width="59" height="15" fill="rgb(213,28,20)"/><text x="829.00" y="286.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (31 samples, 3.51%)</title><rect x="843" y="292" width="42" height="15" fill="rgb(208,117,18)"/><text x="846.00" y="302.50">tri..</text></g><g><title>0x7f576415b345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="883" y="308" width="2" height="15" fill="rgb(243,128,21)"/><text x="886.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (80 samples, 9.06%)</title><rect x="779" y="228" width="107" height="15" fill="rgb(236,101,12)"/><text x="782.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (48 samples, 5.44%)</title><rect x="822" y="244" width="64" height="15" fill="rgb(207,201,8)"/><text x="825.00" y="254.50">ufunc_g..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="885" y="260" width="1" height="15" fill="rgb(254,76,2)"/><text x="888.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="889" y="276" width="1" height="15" fill="rgb(221,31,28)"/><text x="892.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="889" y="292" width="1" height="15" fill="rgb(219,51,50)"/><text x="892.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="890" y="292" width="1" height="15" fill="rgb(213,109,39)"/><text x="893.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="890" y="308" width="1" height="15" fill="rgb(210,12,1)"/><text x="893.00" y="318.50"></text></g><g><title>0x7f5780f78f10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="890" y="324" width="1" height="15" fill="rgb(250,102,13)"/><text x="893.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.34%)</title><rect x="889" y="260" width="4" height="15" fill="rgb(252,139,37)"/><text x="892.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.23%)</title><rect x="890" y="276" width="3" height="15" fill="rgb(219,74,47)"/><text x="893.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="891" y="292" width="2" height="15" fill="rgb(229,31,46)"/><text x="894.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="891" y="308" width="2" height="15" fill="rgb(212,86,47)"/><text x="894.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="891" y="324" width="2" height="15" fill="rgb(241,27,20)"/><text x="894.00" y="334.50"></text></g><g><title>0x7f5781d56f71 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="891" y="340" width="2" height="15" fill="rgb(253,110,8)"/><text x="894.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.23%)</title><rect x="896" y="324" width="2" height="15" fill="rgb(243,121,25)"/><text x="899.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.23%)</title><rect x="896" y="340" width="2" height="15" fill="rgb(228,126,16)"/><text x="899.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.23%)</title><rect x="896" y="356" width="2" height="15" fill="rgb(224,44,28)"/><text x="899.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.23%)</title><rect x="896" y="372" width="2" height="15" fill="rgb(205,208,31)"/><text x="899.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.23%)</title><rect x="896" y="388" width="2" height="15" fill="rgb(209,162,25)"/><text x="899.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="898" y="388" width="2" height="15" fill="rgb(213,129,18)"/><text x="901.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="900" y="388" width="1" height="15" fill="rgb(219,17,48)"/><text x="903.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.34%)</title><rect x="898" y="372" width="4" height="15" fill="rgb(212,211,38)"/><text x="901.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="901" y="388" width="1" height="15" fill="rgb(239,209,17)"/><text x="904.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="902" y="372" width="2" height="15" fill="rgb(227,198,21)"/><text x="905.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(230,152,44)"/><text x="905.00" y="398.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="904" y="372" width="1" height="15" fill="rgb(234,47,54)"/><text x="907.00" y="382.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="905" y="404" width="1" height="15" fill="rgb(237,186,53)"/><text x="908.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="905" y="420" width="1" height="15" fill="rgb(231,24,33)"/><text x="908.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="905" y="436" width="1" height="15" fill="rgb(227,170,26)"/><text x="908.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.23%)</title><rect x="905" y="372" width="3" height="15" fill="rgb(247,85,22)"/><text x="908.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.23%)</title><rect x="905" y="388" width="3" height="15" fill="rgb(250,148,17)"/><text x="908.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="906" y="404" width="2" height="15" fill="rgb(226,224,8)"/><text x="909.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="906" y="420" width="2" height="15" fill="rgb(244,99,51)"/><text x="909.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (8 samples, 0.91%)</title><rect x="914" y="388" width="11" height="15" fill="rgb(225,77,43)"/><text x="917.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.11%)</title><rect x="924" y="404" width="1" height="15" fill="rgb(219,135,47)"/><text x="927.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="925" y="388" width="1" height="15" fill="rgb(242,18,53)"/><text x="928.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (22 samples, 2.49%)</title><rect x="898" y="356" width="30" height="15" fill="rgb(235,73,46)"/><text x="901.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 1.70%)</title><rect x="908" y="372" width="20" height="15" fill="rgb(230,140,20)"/><text x="911.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="926" y="388" width="2" height="15" fill="rgb(235,116,36)"/><text x="929.00" y="398.50"></text></g><g><title>array_sum (methods.c) (29 samples, 3.28%)</title><rect x="893" y="260" width="39" height="15" fill="rgb(219,42,36)"/><text x="896.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (29 samples, 3.28%)</title><rect x="893" y="276" width="39" height="15" fill="rgb(226,158,31)"/><text x="896.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (27 samples, 3.06%)</title><rect x="896" y="292" width="36" height="15" fill="rgb(242,214,47)"/><text x="899.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (27 samples, 3.06%)</title><rect x="896" y="308" width="36" height="15" fill="rgb(206,178,7)"/><text x="899.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (25 samples, 2.83%)</title><rect x="898" y="324" width="34" height="15" fill="rgb(234,65,23)"/><text x="901.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (25 samples, 2.83%)</title><rect x="898" y="340" width="34" height="15" fill="rgb(252,155,8)"/><text x="901.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.34%)</title><rect x="928" y="356" width="4" height="15" fill="rgb(235,70,20)"/><text x="931.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.23%)</title><rect x="929" y="372" width="3" height="15" fill="rgb(250,164,46)"/><text x="932.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="930" y="388" width="2" height="15" fill="rgb(214,106,8)"/><text x="933.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.11%)</title><rect x="930" y="404" width="2" height="15" fill="rgb(251,5,7)"/><text x="933.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.13%)</title><rect x="932" y="308" width="13" height="15" fill="rgb(231,42,41)"/><text x="935.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (10 samples, 1.13%)</title><rect x="932" y="324" width="13" height="15" fill="rgb(209,57,31)"/><text x="935.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 1.02%)</title><rect x="933" y="340" width="12" height="15" fill="rgb(241,20,2)"/><text x="936.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 1.02%)</title><rect x="933" y="356" width="12" height="15" fill="rgb(232,107,3)"/><text x="936.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 0.68%)</title><rect x="937" y="372" width="8" height="15" fill="rgb(216,191,23)"/><text x="940.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.25%)</title><rect x="932" y="292" width="14" height="15" fill="rgb(225,97,39)"/><text x="935.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="945" y="308" width="1" height="15" fill="rgb(212,75,2)"/><text x="948.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.11%)</title><rect x="945" y="324" width="1" height="15" fill="rgb(216,67,35)"/><text x="948.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="945" y="340" width="1" height="15" fill="rgb(241,43,48)"/><text x="948.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="945" y="356" width="1" height="15" fill="rgb(247,211,7)"/><text x="948.00" y="366.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h) (1 samples, 0.11%)</title><rect x="945" y="372" width="1" height="15" fill="rgb(211,60,7)"/><text x="948.00" y="382.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (160 samples, 18.12%)</title><rect x="734" y="164" width="214" height="15" fill="rgb(239,195,48)"/><text x="737.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (158 samples, 17.89%)</title><rect x="736" y="180" width="212" height="15" fill="rgb(214,146,51)"/><text x="739.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (137 samples, 15.52%)</title><rect x="765" y="196" width="183" height="15" fill="rgb(210,34,32)"/><text x="768.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (128 samples, 14.50%)</title><rect x="777" y="212" width="171" height="15" fill="rgb(245,61,39)"/><text x="780.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (46 samples, 5.21%)</title><rect x="886" y="228" width="62" height="15" fill="rgb(212,81,49)"/><text x="889.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (46 samples, 5.21%)</title><rect x="886" y="244" width="62" height="15" fill="rgb(225,31,44)"/><text x="889.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 1.36%)</title><rect x="932" y="260" width="16" height="15" fill="rgb(216,111,33)"/><text x="935.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 1.36%)</title><rect x="932" y="276" width="16" height="15" fill="rgb(221,15,18)"/><text x="935.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="946" y="292" width="2" height="15" fill="rgb(214,59,47)"/><text x="949.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="946" y="308" width="2" height="15" fill="rgb(254,113,23)"/><text x="949.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="324" width="2" height="15" fill="rgb(206,212,36)"/><text x="949.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (164 samples, 18.57%)</title><rect x="730" y="68" width="219" height="15" fill="rgb(234,15,32)"/><text x="733.00" y="78.50">profile_pyrt (bench_Logistic..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (164 samples, 18.57%)</title><rect x="730" y="84" width="219" height="15" fill="rgb(212,222,10)"/><text x="733.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (164 samples, 18.57%)</title><rect x="730" y="100" width="219" height="15" fill="rgb(237,64,10)"/><text x="733.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (163 samples, 18.46%)</title><rect x="731" y="116" width="218" height="15" fill="rgb(209,226,49)"/><text x="734.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (163 samples, 18.46%)</title><rect x="731" y="132" width="218" height="15" fill="rgb(228,92,11)"/><text x="734.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (162 samples, 18.35%)</title><rect x="732" y="148" width="217" height="15" fill="rgb(219,101,49)"/><text x="735.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="948" y="164" width="1" height="15" fill="rgb(211,135,19)"/><text x="951.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="948" y="180" width="1" height="15" fill="rgb(226,175,4)"/><text x="951.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="948" y="196" width="1" height="15" fill="rgb(216,71,43)"/><text x="951.00" y="206.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="964" y="180" width="1" height="15" fill="rgb(252,208,12)"/><text x="967.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="964" y="196" width="1" height="15" fill="rgb(233,36,7)"/><text x="967.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="969" y="244" width="1" height="15" fill="rgb(228,207,49)"/><text x="972.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="969" y="260" width="1" height="15" fill="rgb(232,82,6)"/><text x="972.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="969" y="276" width="1" height="15" fill="rgb(237,126,4)"/><text x="972.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="969" y="292" width="1" height="15" fill="rgb(240,142,40)"/><text x="972.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="969" y="308" width="1" height="15" fill="rgb(254,1,39)"/><text x="972.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.11%)</title><rect x="972" y="308" width="1" height="15" fill="rgb(219,55,34)"/><text x="975.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.23%)</title><rect x="972" y="292" width="2" height="15" fill="rgb(209,226,53)"/><text x="975.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="973" y="308" width="1" height="15" fill="rgb(217,0,42)"/><text x="976.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.11%)</title><rect x="974" y="292" width="2" height="15" fill="rgb(248,156,14)"/><text x="977.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.11%)</title><rect x="974" y="308" width="2" height="15" fill="rgb(206,76,26)"/><text x="977.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="974" y="324" width="2" height="15" fill="rgb(230,72,23)"/><text x="977.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="974" y="340" width="2" height="15" fill="rgb(247,205,22)"/><text x="977.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="974" y="356" width="2" height="15" fill="rgb(242,111,3)"/><text x="977.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="974" y="372" width="2" height="15" fill="rgb(237,34,6)"/><text x="977.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="974" y="388" width="2" height="15" fill="rgb(235,72,36)"/><text x="977.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="974" y="404" width="2" height="15" fill="rgb(238,149,8)"/><text x="977.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="976" y="292" width="1" height="15" fill="rgb(208,79,26)"/><text x="979.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="976" y="308" width="1" height="15" fill="rgb(254,88,27)"/><text x="979.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (13 samples, 1.47%)</title><rect x="981" y="308" width="17" height="15" fill="rgb(208,137,52)"/><text x="984.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (7 samples, 0.79%)</title><rect x="989" y="324" width="9" height="15" fill="rgb(239,178,26)"/><text x="992.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (24 samples, 2.72%)</title><rect x="972" y="276" width="32" height="15" fill="rgb(219,87,51)"/><text x="975.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (20 samples, 2.27%)</title><rect x="977" y="292" width="27" height="15" fill="rgb(208,28,7)"/><text x="980.00" y="302.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.45%)</title><rect x="998" y="308" width="6" height="15" fill="rgb(229,142,25)"/><text x="1001.00" y="318.50"></text></g><g><title>0x7f5781d7714e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1004" y="292" width="1" height="15" fill="rgb(241,220,9)"/><text x="1007.00" y="302.50"></text></g><g><title>array_sum (methods.c) (31 samples, 3.51%)</title><rect x="965" y="180" width="41" height="15" fill="rgb(225,220,38)"/><text x="968.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (31 samples, 3.51%)</title><rect x="965" y="196" width="41" height="15" fill="rgb(240,8,8)"/><text x="968.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (30 samples, 3.40%)</title><rect x="966" y="212" width="40" height="15" fill="rgb(214,132,35)"/><text x="969.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (28 samples, 3.17%)</title><rect x="969" y="228" width="37" height="15" fill="rgb(205,111,7)"/><text x="972.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (27 samples, 3.06%)</title><rect x="970" y="244" width="36" height="15" fill="rgb(234,181,26)"/><text x="973.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 2.94%)</title><rect x="972" y="260" width="34" height="15" fill="rgb(214,104,42)"/><text x="975.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.23%)</title><rect x="1004" y="276" width="2" height="15" fill="rgb(230,207,52)"/><text x="1007.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1005" y="292" width="1" height="15" fill="rgb(244,50,41)"/><text x="1008.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1005" y="308" width="1" height="15" fill="rgb(224,33,22)"/><text x="1008.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="1012" y="196" width="1" height="15" fill="rgb(250,195,49)"/><text x="1015.00" y="206.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.11%)</title><rect x="1014" y="276" width="2" height="15" fill="rgb(228,49,52)"/><text x="1017.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(213,18,12)"/><text x="1017.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.11%)</title><rect x="1014" y="308" width="2" height="15" fill="rgb(252,122,32)"/><text x="1017.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1014" y="324" width="2" height="15" fill="rgb(215,212,31)"/><text x="1017.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="1018" y="356" width="2" height="15" fill="rgb(226,162,54)"/><text x="1021.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="1018" y="372" width="2" height="15" fill="rgb(253,142,24)"/><text x="1021.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.45%)</title><rect x="1016" y="276" width="5" height="15" fill="rgb(208,180,20)"/><text x="1019.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.45%)</title><rect x="1016" y="292" width="5" height="15" fill="rgb(254,2,31)"/><text x="1019.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (3 samples, 0.34%)</title><rect x="1017" y="308" width="4" height="15" fill="rgb(233,14,13)"/><text x="1020.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.23%)</title><rect x="1018" y="324" width="3" height="15" fill="rgb(227,218,51)"/><text x="1021.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.23%)</title><rect x="1018" y="340" width="3" height="15" fill="rgb(217,224,36)"/><text x="1021.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1020" y="356" width="1" height="15" fill="rgb(208,75,33)"/><text x="1023.00" y="366.50"></text></g><g><title>0x7f5781d76d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1025" y="324" width="1" height="15" fill="rgb(222,125,54)"/><text x="1028.00" y="334.50"></text></g><g><title>0x7f5781d76d62 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1026" y="324" width="2" height="15" fill="rgb(237,217,34)"/><text x="1029.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (8 samples, 0.91%)</title><rect x="1021" y="276" width="11" height="15" fill="rgb(227,57,11)"/><text x="1024.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.79%)</title><rect x="1022" y="292" width="10" height="15" fill="rgb(233,215,29)"/><text x="1025.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.79%)</title><rect x="1022" y="308" width="10" height="15" fill="rgb(254,128,53)"/><text x="1025.00" y="318.50"></text></g><g><title>0x7f5781d76d6f (libc-2.29.so) (3 samples, 0.34%)</title><rect x="1028" y="324" width="4" height="15" fill="rgb(241,60,16)"/><text x="1031.00" y="334.50"></text></g><g><title>array_add (number.c) (15 samples, 1.70%)</title><rect x="1013" y="196" width="20" height="15" fill="rgb(247,207,52)"/><text x="1016.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 1.59%)</title><rect x="1014" y="212" width="19" height="15" fill="rgb(233,23,32)"/><text x="1017.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 1.59%)</title><rect x="1014" y="228" width="19" height="15" fill="rgb(210,204,2)"/><text x="1017.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 1.59%)</title><rect x="1014" y="244" width="19" height="15" fill="rgb(247,212,7)"/><text x="1017.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (14 samples, 1.59%)</title><rect x="1014" y="260" width="19" height="15" fill="rgb(216,58,15)"/><text x="1017.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1032" y="276" width="1" height="15" fill="rgb(250,70,25)"/><text x="1035.00" y="286.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.11%)</title><rect x="1041" y="212" width="2" height="15" fill="rgb(221,180,40)"/><text x="1044.00" y="222.50"></text></g><g><title>0x7f5781d6ce50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1047" y="228" width="1" height="15" fill="rgb(210,90,37)"/><text x="1050.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.23%)</title><rect x="1048" y="228" width="3" height="15" fill="rgb(226,227,23)"/><text x="1051.00" y="238.50"></text></g><g><title>0x7f5781d6ce7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1049" y="244" width="2" height="15" fill="rgb(222,65,15)"/><text x="1052.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.11%)</title><rect x="1051" y="228" width="1" height="15" fill="rgb(251,20,37)"/><text x="1054.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 0.91%)</title><rect x="1043" y="212" width="10" height="15" fill="rgb(239,26,8)"/><text x="1046.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1052" y="228" width="1" height="15" fill="rgb(238,50,41)"/><text x="1055.00" y="238.50"></text></g><g><title>0x7f5781d676d4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1052" y="244" width="1" height="15" fill="rgb(225,90,27)"/><text x="1055.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.23%)</title><rect x="1053" y="212" width="3" height="15" fill="rgb(218,41,15)"/><text x="1056.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.11%)</title><rect x="1060" y="228" width="1" height="15" fill="rgb(220,197,25)"/><text x="1063.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 0.68%)</title><rect x="1056" y="212" width="8" height="15" fill="rgb(230,56,19)"/><text x="1059.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.23%)</title><rect x="1061" y="228" width="3" height="15" fill="rgb(235,190,11)"/><text x="1064.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.23%)</title><rect x="1061" y="244" width="3" height="15" fill="rgb(205,174,54)"/><text x="1064.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.11%)</title><rect x="1064" y="212" width="1" height="15" fill="rgb(233,187,10)"/><text x="1067.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.23%)</title><rect x="1065" y="212" width="3" height="15" fill="rgb(217,198,22)"/><text x="1068.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.11%)</title><rect x="1067" y="228" width="1" height="15" fill="rgb(232,179,11)"/><text x="1070.00" y="238.50"></text></g><g><title>0x7f5781d6ce7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1067" y="244" width="1" height="15" fill="rgb(253,30,41)"/><text x="1070.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (31 samples, 3.51%)</title><rect x="1033" y="196" width="42" height="15" fill="rgb(239,137,26)"/><text x="1036.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.57%)</title><rect x="1068" y="212" width="7" height="15" fill="rgb(246,209,52)"/><text x="1071.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.45%)</title><rect x="1069" y="228" width="6" height="15" fill="rgb(214,145,4)"/><text x="1072.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1077" y="228" width="2" height="15" fill="rgb(244,215,27)"/><text x="1080.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 0.45%)</title><rect x="1075" y="196" width="5" height="15" fill="rgb(226,8,53)"/><text x="1078.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.45%)</title><rect x="1075" y="212" width="5" height="15" fill="rgb(226,31,54)"/><text x="1078.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.11%)</title><rect x="1079" y="228" width="1" height="15" fill="rgb(219,219,3)"/><text x="1082.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.11%)</title><rect x="1081" y="212" width="2" height="15" fill="rgb(207,88,53)"/><text x="1084.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 0.91%)</title><rect x="1083" y="212" width="10" height="15" fill="rgb(221,223,35)"/><text x="1086.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.34%)</title><rect x="1095" y="260" width="4" height="15" fill="rgb(219,71,1)"/><text x="1098.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.34%)</title><rect x="1095" y="276" width="4" height="15" fill="rgb(214,90,1)"/><text x="1098.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.34%)</title><rect x="1095" y="292" width="4" height="15" fill="rgb(229,9,10)"/><text x="1098.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.23%)</title><rect x="1096" y="308" width="3" height="15" fill="rgb(238,149,20)"/><text x="1099.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.11%)</title><rect x="1099" y="308" width="1" height="15" fill="rgb(239,213,33)"/><text x="1102.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1099" y="324" width="1" height="15" fill="rgb(241,89,26)"/><text x="1102.00" y="334.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (2 samples, 0.23%)</title><rect x="1100" y="324" width="3" height="15" fill="rgb(251,119,28)"/><text x="1103.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.45%)</title><rect x="1099" y="292" width="5" height="15" fill="rgb(243,25,18)"/><text x="1102.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.34%)</title><rect x="1100" y="308" width="4" height="15" fill="rgb(234,199,28)"/><text x="1103.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.11%)</title><rect x="1103" y="324" width="1" height="15" fill="rgb(247,210,25)"/><text x="1106.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="1103" y="340" width="1" height="15" fill="rgb(226,98,47)"/><text x="1106.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.68%)</title><rect x="1099" y="260" width="8" height="15" fill="rgb(244,94,18)"/><text x="1102.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 0.68%)</title><rect x="1099" y="276" width="8" height="15" fill="rgb(216,142,42)"/><text x="1102.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.23%)</title><rect x="1104" y="292" width="3" height="15" fill="rgb(212,118,33)"/><text x="1107.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.23%)</title><rect x="1104" y="308" width="3" height="15" fill="rgb(224,49,46)"/><text x="1107.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.23%)</title><rect x="1104" y="324" width="3" height="15" fill="rgb(209,96,48)"/><text x="1107.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1105" y="340" width="2" height="15" fill="rgb(238,212,40)"/><text x="1108.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (76 samples, 8.61%)</title><rect x="1006" y="180" width="102" height="15" fill="rgb(237,164,47)"/><text x="1009.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (21 samples, 2.38%)</title><rect x="1080" y="196" width="28" height="15" fill="rgb(254,138,11)"/><text x="1083.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.25%)</title><rect x="1093" y="212" width="15" height="15" fill="rgb(212,186,18)"/><text x="1096.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.25%)</title><rect x="1093" y="228" width="15" height="15" fill="rgb(223,85,12)"/><text x="1096.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 1.25%)</title><rect x="1093" y="244" width="15" height="15" fill="rgb(245,0,53)"/><text x="1096.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1107" y="260" width="1" height="15" fill="rgb(253,49,11)"/><text x="1110.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.23%)</title><rect x="1109" y="196" width="3" height="15" fill="rgb(210,119,52)"/><text x="1112.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.23%)</title><rect x="1109" y="212" width="3" height="15" fill="rgb(231,216,18)"/><text x="1112.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.23%)</title><rect x="1109" y="228" width="3" height="15" fill="rgb(249,195,13)"/><text x="1112.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="1111" y="244" width="1" height="15" fill="rgb(244,121,23)"/><text x="1114.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1115" y="260" width="1" height="15" fill="rgb(206,141,14)"/><text x="1118.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1115" y="276" width="1" height="15" fill="rgb(230,68,51)"/><text x="1118.00" y="286.50"></text></g><g><title>0x7f5781d0e7a5 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1115" y="292" width="1" height="15" fill="rgb(213,140,40)"/><text x="1118.00" y="302.50"></text></g><g><title>0x7f5781d0e7c2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1115" y="308" width="1" height="15" fill="rgb(212,24,14)"/><text x="1118.00" y="318.50"></text></g><g><title>0x7f5781d0ea79 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1115" y="324" width="1" height="15" fill="rgb(247,126,30)"/><text x="1118.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.23%)</title><rect x="1115" y="228" width="2" height="15" fill="rgb(228,137,19)"/><text x="1118.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.23%)</title><rect x="1115" y="244" width="2" height="15" fill="rgb(225,1,6)"/><text x="1118.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1116" y="260" width="1" height="15" fill="rgb(214,137,17)"/><text x="1119.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1116" y="276" width="1" height="15" fill="rgb(241,128,4)"/><text x="1119.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="1116" y="292" width="1" height="15" fill="rgb(217,156,13)"/><text x="1119.00" y="302.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="1116" y="308" width="1" height="15" fill="rgb(217,18,38)"/><text x="1119.00" y="318.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="1116" y="324" width="1" height="15" fill="rgb(224,137,14)"/><text x="1119.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(229,160,23)"/><text x="1120.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (7 samples, 0.79%)</title><rect x="1117" y="244" width="10" height="15" fill="rgb(226,191,26)"/><text x="1120.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (7 samples, 0.79%)</title><rect x="1117" y="260" width="10" height="15" fill="rgb(233,4,42)"/><text x="1120.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (7 samples, 0.79%)</title><rect x="1117" y="276" width="10" height="15" fill="rgb(241,134,26)"/><text x="1120.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 0.68%)</title><rect x="1119" y="292" width="8" height="15" fill="rgb(225,173,20)"/><text x="1122.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1127" y="244" width="1" height="15" fill="rgb(252,6,50)"/><text x="1130.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1127" y="260" width="1" height="15" fill="rgb(253,134,43)"/><text x="1130.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.23%)</title><rect x="1128" y="244" width="3" height="15" fill="rgb(215,177,24)"/><text x="1131.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 1.81%)</title><rect x="1117" y="228" width="22" height="15" fill="rgb(215,132,35)"/><text x="1120.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.68%)</title><rect x="1131" y="244" width="8" height="15" fill="rgb(230,97,42)"/><text x="1134.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 0.68%)</title><rect x="1131" y="260" width="8" height="15" fill="rgb(207,191,40)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.57%)</title><rect x="1132" y="276" width="7" height="15" fill="rgb(210,63,38)"/><text x="1135.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.23%)</title><rect x="1136" y="292" width="3" height="15" fill="rgb(217,127,20)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f576413afe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1141" y="276" width="2" height="15" fill="rgb(208,199,2)"/><text x="1144.00" y="286.50"></text></g><g><title>0x7f5781ea21b0 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(236,70,15)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f5781f28bd3 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(216,84,35)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f5781f28be7 (libm-2.29.so) (5 samples, 0.57%)</title><rect x="1155" y="292" width="6" height="15" fill="rgb(227,55,10)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f5781f28c07 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1161" y="292" width="3" height="15" fill="rgb(206,213,17)"/><text x="1164.00" y="302.50"></text></g><g><title>0x7f5781f28c18 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1164" y="292" width="3" height="15" fill="rgb(230,184,44)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7f5781f28c6a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(226,37,5)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7f576417d265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.38%)</title><rect x="1141" y="260" width="28" height="15" fill="rgb(234,105,49)"/><text x="1144.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (20 samples, 2.27%)</title><rect x="1143" y="276" width="26" height="15" fill="rgb(211,79,25)"/><text x="1146.00" y="286.50">e..</text></g><g><title>0x7f5781f28c7b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1168" y="292" width="1" height="15" fill="rgb(208,158,22)"/><text x="1171.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (50 samples, 5.66%)</title><rect x="1112" y="212" width="67" height="15" fill="rgb(233,141,35)"/><text x="1115.00" y="222.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 3.40%)</title><rect x="1139" y="228" width="40" height="15" fill="rgb(239,0,13)"/><text x="1142.00" y="238.50">tri..</text></g><g><title>0x7f576415c9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 3.17%)</title><rect x="1141" y="244" width="38" height="15" fill="rgb(240,123,6)"/><text x="1144.00" y="254.50">0x7..</text></g><g><title>0x7f576417d279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.79%)</title><rect x="1169" y="260" width="10" height="15" fill="rgb(236,3,41)"/><text x="1172.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (165 samples, 18.69%)</title><rect x="961" y="164" width="220" height="15" fill="rgb(229,190,53)"/><text x="964.00" y="174.50">_predict_proba_lr (sklearn/li..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (55 samples, 6.23%)</title><rect x="1108" y="180" width="73" height="15" fill="rgb(220,229,45)"/><text x="1111.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (52 samples, 5.89%)</title><rect x="1112" y="196" width="69" height="15" fill="rgb(207,116,48)"/><text x="1115.00" y="206.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.23%)</title><rect x="1179" y="212" width="2" height="15" fill="rgb(231,16,45)"/><text x="1182.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1180" y="228" width="1" height="15" fill="rgb(216,61,11)"/><text x="1183.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1180" y="244" width="1" height="15" fill="rgb(239,173,42)"/><text x="1183.00" y="254.50"></text></g><g><title>all (883 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,75,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (883 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,177,3)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (180 samples, 20.39%)</title><rect x="949" y="68" width="241" height="15" fill="rgb(239,5,14)"/><text x="952.00" y="78.50">profile_skl (bench_LogisticRegre..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (180 samples, 20.39%)</title><rect x="949" y="84" width="241" height="15" fill="rgb(251,128,10)"/><text x="952.00" y="94.50">setup_profile (bench_LogisticReg..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_.py) (180 samples, 20.39%)</title><rect x="949" y="100" width="241" height="15" fill="rgb(238,195,14)"/><text x="952.00" y="110.50">profile (bench_LogisticRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (180 samples, 20.39%)</title><rect x="949" y="116" width="241" height="15" fill="rgb(230,208,51)"/><text x="952.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (177 samples, 20.05%)</title><rect x="953" y="132" width="237" height="15" fill="rgb(231,171,25)"/><text x="956.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (176 samples, 19.93%)</title><rect x="954" y="148" width="236" height="15" fill="rgb(222,217,54)"/><text x="957.00" y="158.50">predict_proba (sklearn/linear_m..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.68%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(232,226,17)"/><text x="1184.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 0.57%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(217,123,50)"/><text x="1186.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.23%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(211,166,3)"/><text x="1190.00" y="206.50"></text></g></g></svg>