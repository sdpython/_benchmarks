<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.38%)</title><rect x="10" y="1060" width="4" height="15" fill="rgb(211,50,23)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1076" width="4" height="15" fill="rgb(235,89,29)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1092" width="4" height="15" fill="rgb(238,205,3)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1108" width="4" height="15" fill="rgb(208,65,2)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1124" width="4" height="15" fill="rgb(209,25,35)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1140" width="4" height="15" fill="rgb(207,141,35)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="1156" width="4" height="15" fill="rgb(223,74,29)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1172" width="4" height="15" fill="rgb(239,88,32)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1188" width="4" height="15" fill="rgb(235,164,5)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1204" width="4" height="15" fill="rgb(232,228,47)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1220" width="4" height="15" fill="rgb(243,110,0)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1236" width="4" height="15" fill="rgb(247,15,5)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.38%)</title><rect x="10" y="1252" width="4" height="15" fill="rgb(243,104,43)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1268" width="4" height="15" fill="rgb(243,57,43)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1284" width="4" height="15" fill="rgb(232,172,0)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1300" width="4" height="15" fill="rgb(229,20,26)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1316" width="4" height="15" fill="rgb(231,24,29)"/><text x="13.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1332" width="4" height="15" fill="rgb(227,25,8)"/><text x="13.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="1348" width="4" height="15" fill="rgb(210,158,19)"/><text x="13.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1364" width="4" height="15" fill="rgb(220,173,41)"/><text x="13.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1380" width="4" height="15" fill="rgb(217,41,43)"/><text x="13.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1396" width="4" height="15" fill="rgb(215,68,18)"/><text x="13.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1412" width="4" height="15" fill="rgb(248,107,25)"/><text x="13.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1428" width="4" height="15" fill="rgb(237,139,34)"/><text x="13.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.38%)</title><rect x="10" y="1444" width="4" height="15" fill="rgb(251,27,13)"/><text x="13.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1460" width="4" height="15" fill="rgb(215,142,24)"/><text x="13.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1476" width="4" height="15" fill="rgb(242,13,14)"/><text x="13.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1492" width="4" height="15" fill="rgb(224,195,25)"/><text x="13.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1508" width="4" height="15" fill="rgb(240,76,9)"/><text x="13.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1524" width="4" height="15" fill="rgb(219,110,44)"/><text x="13.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="1540" width="4" height="15" fill="rgb(243,145,42)"/><text x="13.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1556" width="4" height="15" fill="rgb(220,25,25)"/><text x="13.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1572" width="4" height="15" fill="rgb(227,61,50)"/><text x="13.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1588" width="4" height="15" fill="rgb(226,6,19)"/><text x="13.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="10" y="1604" width="4" height="15" fill="rgb(254,112,1)"/><text x="13.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="10" y="1620" width="4" height="15" fill="rgb(212,64,53)"/><text x="13.00" y="1630.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_ridge.py) (1 samples, 0.38%)</title><rect x="10" y="1636" width="4" height="15" fill="rgb(238,168,48)"/><text x="13.00" y="1646.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.38%)</title><rect x="10" y="1652" width="4" height="15" fill="rgb(208,35,7)"/><text x="13.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.76%)</title><rect x="10" y="628" width="9" height="15" fill="rgb(242,123,49)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="644" width="9" height="15" fill="rgb(214,50,29)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="660" width="9" height="15" fill="rgb(220,19,2)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="676" width="9" height="15" fill="rgb(217,58,21)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="10" y="692" width="9" height="15" fill="rgb(223,3,25)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="708" width="9" height="15" fill="rgb(252,54,22)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.76%)</title><rect x="10" y="724" width="9" height="15" fill="rgb(239,210,46)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="740" width="9" height="15" fill="rgb(210,125,48)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="756" width="9" height="15" fill="rgb(224,103,28)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="772" width="9" height="15" fill="rgb(205,201,48)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="788" width="9" height="15" fill="rgb(224,34,4)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="804" width="9" height="15" fill="rgb(253,50,23)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="820" width="9" height="15" fill="rgb(228,121,47)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(224,217,20)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(248,134,51)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.76%)</title><rect x="10" y="868" width="9" height="15" fill="rgb(247,40,38)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="884" width="9" height="15" fill="rgb(226,9,27)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="900" width="9" height="15" fill="rgb(221,160,37)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="916" width="9" height="15" fill="rgb(207,129,21)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="10" y="932" width="9" height="15" fill="rgb(247,209,27)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="948" width="9" height="15" fill="rgb(244,21,39)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.76%)</title><rect x="10" y="964" width="9" height="15" fill="rgb(254,97,54)"/><text x="13.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="980" width="9" height="15" fill="rgb(221,201,36)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="996" width="9" height="15" fill="rgb(235,159,27)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="1012" width="9" height="15" fill="rgb(225,195,5)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="10" y="1028" width="9" height="15" fill="rgb(254,77,39)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="10" y="1044" width="9" height="15" fill="rgb(235,172,14)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.38%)</title><rect x="14" y="1060" width="5" height="15" fill="rgb(246,126,20)"/><text x="17.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="14" y="1076" width="5" height="15" fill="rgb(222,223,2)"/><text x="17.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="14" y="1092" width="5" height="15" fill="rgb(243,113,36)"/><text x="17.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="14" y="1108" width="5" height="15" fill="rgb(249,184,54)"/><text x="17.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="14" y="1124" width="5" height="15" fill="rgb(247,63,33)"/><text x="17.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="14" y="1140" width="5" height="15" fill="rgb(222,92,47)"/><text x="17.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="14" y="1156" width="5" height="15" fill="rgb(235,34,18)"/><text x="17.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="14" y="1172" width="5" height="15" fill="rgb(251,137,11)"/><text x="17.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.38%)</title><rect x="14" y="1188" width="5" height="15" fill="rgb(227,7,53)"/><text x="17.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.38%)</title><rect x="14" y="1204" width="5" height="15" fill="rgb(249,136,45)"/><text x="17.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.38%)</title><rect x="14" y="1220" width="5" height="15" fill="rgb(242,171,5)"/><text x="17.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.38%)</title><rect x="14" y="1236" width="5" height="15" fill="rgb(245,0,38)"/><text x="17.00" y="1246.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.38%)</title><rect x="14" y="1252" width="5" height="15" fill="rgb(219,114,32)"/><text x="17.00" y="1262.50"></text></g><g><title>compile (re.py) (1 samples, 0.38%)</title><rect x="14" y="1268" width="5" height="15" fill="rgb(236,135,42)"/><text x="17.00" y="1278.50"></text></g><g><title>_compile (re.py) (1 samples, 0.38%)</title><rect x="14" y="1284" width="5" height="15" fill="rgb(207,5,21)"/><text x="17.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.38%)</title><rect x="19" y="628" width="4" height="15" fill="rgb(238,131,22)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="644" width="4" height="15" fill="rgb(236,195,12)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="660" width="4" height="15" fill="rgb(235,148,6)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="676" width="4" height="15" fill="rgb(240,195,43)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="19" y="692" width="4" height="15" fill="rgb(249,99,31)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="708" width="4" height="15" fill="rgb(223,57,49)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.38%)</title><rect x="19" y="724" width="4" height="15" fill="rgb(237,77,6)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="740" width="4" height="15" fill="rgb(216,198,37)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="756" width="4" height="15" fill="rgb(245,85,39)"/><text x="22.00" y="766.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="19" y="772" width="4" height="15" fill="rgb(252,143,4)"/><text x="22.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="19" y="788" width="4" height="15" fill="rgb(246,228,41)"/><text x="22.00" y="798.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="19" y="804" width="4" height="15" fill="rgb(223,143,52)"/><text x="22.00" y="814.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="19" y="820" width="4" height="15" fill="rgb(234,33,26)"/><text x="22.00" y="830.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(241,143,47)"/><text x="22.00" y="846.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(206,104,4)"/><text x="22.00" y="862.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(221,21,33)"/><text x="22.00" y="878.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.38%)</title><rect x="23" y="1364" width="5" height="15" fill="rgb(238,181,45)"/><text x="26.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="23" y="1380" width="5" height="15" fill="rgb(231,174,2)"/><text x="26.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="23" y="1396" width="5" height="15" fill="rgb(217,22,43)"/><text x="26.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.38%)</title><rect x="23" y="1412" width="5" height="15" fill="rgb(253,72,5)"/><text x="26.00" y="1422.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.38%)</title><rect x="23" y="1428" width="5" height="15" fill="rgb(210,190,51)"/><text x="26.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="340" width="22" height="15" fill="rgb(228,78,22)"/><text x="13.00" y="350.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="356" width="22" height="15" fill="rgb(237,66,52)"/><text x="13.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="372" width="22" height="15" fill="rgb(231,218,33)"/><text x="13.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="388" width="22" height="15" fill="rgb(226,223,10)"/><text x="13.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.91%)</title><rect x="10" y="404" width="22" height="15" fill="rgb(214,226,11)"/><text x="13.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="420" width="22" height="15" fill="rgb(254,100,53)"/><text x="13.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.91%)</title><rect x="10" y="436" width="22" height="15" fill="rgb(207,180,51)"/><text x="13.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="452" width="22" height="15" fill="rgb(250,176,32)"/><text x="13.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="468" width="22" height="15" fill="rgb(223,182,32)"/><text x="13.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="484" width="22" height="15" fill="rgb(218,133,24)"/><text x="13.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.91%)</title><rect x="10" y="500" width="22" height="15" fill="rgb(236,12,20)"/><text x="13.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="516" width="22" height="15" fill="rgb(212,41,45)"/><text x="13.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.91%)</title><rect x="10" y="532" width="22" height="15" fill="rgb(218,50,45)"/><text x="13.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="548" width="22" height="15" fill="rgb(240,219,54)"/><text x="13.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="564" width="22" height="15" fill="rgb(225,87,34)"/><text x="13.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="580" width="22" height="15" fill="rgb(246,29,51)"/><text x="13.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.91%)</title><rect x="10" y="596" width="22" height="15" fill="rgb(227,18,33)"/><text x="13.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.91%)</title><rect x="10" y="612" width="22" height="15" fill="rgb(254,112,48)"/><text x="13.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.76%)</title><rect x="23" y="628" width="9" height="15" fill="rgb(212,0,7)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="644" width="9" height="15" fill="rgb(250,134,44)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="660" width="9" height="15" fill="rgb(250,210,33)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="676" width="9" height="15" fill="rgb(231,130,0)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="692" width="9" height="15" fill="rgb(218,137,21)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="708" width="9" height="15" fill="rgb(231,74,49)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.76%)</title><rect x="23" y="724" width="9" height="15" fill="rgb(224,42,17)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="740" width="9" height="15" fill="rgb(243,166,15)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="756" width="9" height="15" fill="rgb(218,177,34)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="772" width="9" height="15" fill="rgb(207,128,50)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="788" width="9" height="15" fill="rgb(243,140,2)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="804" width="9" height="15" fill="rgb(245,206,29)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.76%)</title><rect x="23" y="820" width="9" height="15" fill="rgb(253,132,42)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="836" width="9" height="15" fill="rgb(240,7,1)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="852" width="9" height="15" fill="rgb(245,123,12)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="868" width="9" height="15" fill="rgb(254,65,9)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="884" width="9" height="15" fill="rgb(207,158,46)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="900" width="9" height="15" fill="rgb(244,56,33)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.76%)</title><rect x="23" y="916" width="9" height="15" fill="rgb(233,90,18)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="932" width="9" height="15" fill="rgb(225,97,45)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="948" width="9" height="15" fill="rgb(232,41,43)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="964" width="9" height="15" fill="rgb(220,4,18)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="980" width="9" height="15" fill="rgb(212,226,0)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="996" width="9" height="15" fill="rgb(246,101,40)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.76%)</title><rect x="23" y="1012" width="9" height="15" fill="rgb(220,96,34)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1028" width="9" height="15" fill="rgb(230,46,16)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1044" width="9" height="15" fill="rgb(220,177,18)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1060" width="9" height="15" fill="rgb(223,54,20)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="1076" width="9" height="15" fill="rgb(221,124,5)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1092" width="9" height="15" fill="rgb(219,186,12)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.76%)</title><rect x="23" y="1108" width="9" height="15" fill="rgb(206,128,17)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1124" width="9" height="15" fill="rgb(235,10,32)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1140" width="9" height="15" fill="rgb(223,182,26)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1156" width="9" height="15" fill="rgb(210,215,47)"/><text x="26.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1172" width="9" height="15" fill="rgb(208,2,46)"/><text x="26.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1188" width="9" height="15" fill="rgb(214,132,29)"/><text x="26.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="1204" width="9" height="15" fill="rgb(237,65,53)"/><text x="26.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1220" width="9" height="15" fill="rgb(240,216,32)"/><text x="26.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.76%)</title><rect x="23" y="1236" width="9" height="15" fill="rgb(228,227,53)"/><text x="26.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1252" width="9" height="15" fill="rgb(227,161,37)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1268" width="9" height="15" fill="rgb(217,45,4)"/><text x="26.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1284" width="9" height="15" fill="rgb(226,43,22)"/><text x="26.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1300" width="9" height="15" fill="rgb(226,66,20)"/><text x="26.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1316" width="9" height="15" fill="rgb(210,69,54)"/><text x="26.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="23" y="1332" width="9" height="15" fill="rgb(252,161,48)"/><text x="26.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="23" y="1348" width="9" height="15" fill="rgb(247,31,51)"/><text x="26.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.38%)</title><rect x="28" y="1364" width="4" height="15" fill="rgb(253,116,18)"/><text x="31.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="28" y="1380" width="4" height="15" fill="rgb(214,161,9)"/><text x="31.00" y="1390.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="28" y="1396" width="4" height="15" fill="rgb(210,185,42)"/><text x="31.00" y="1406.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.38%)</title><rect x="28" y="1412" width="4" height="15" fill="rgb(215,210,18)"/><text x="31.00" y="1422.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.38%)</title><rect x="28" y="1428" width="4" height="15" fill="rgb(247,158,30)"/><text x="31.00" y="1438.50"></text></g><g><title>0x7fb3bb0ec40e (?) (1 samples, 0.38%)</title><rect x="32" y="772" width="5" height="15" fill="rgb(234,152,28)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="788" width="5" height="15" fill="rgb(212,130,14)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="804" width="5" height="15" fill="rgb(226,216,16)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="820" width="5" height="15" fill="rgb(229,187,21)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="836" width="5" height="15" fill="rgb(237,43,23)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="852" width="5" height="15" fill="rgb(219,27,28)"/><text x="35.00" y="862.50"></text></g><g><title>0x7fb3baea5cd2 (?) (1 samples, 0.38%)</title><rect x="32" y="868" width="5" height="15" fill="rgb(227,124,13)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="884" width="5" height="15" fill="rgb(248,31,4)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="900" width="5" height="15" fill="rgb(238,10,20)"/><text x="35.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="916" width="5" height="15" fill="rgb(213,216,47)"/><text x="35.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="932" width="5" height="15" fill="rgb(228,179,18)"/><text x="35.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="948" width="5" height="15" fill="rgb(230,73,3)"/><text x="35.00" y="958.50"></text></g><g><title>0x7fb3ba59b0e5 (?) (1 samples, 0.38%)</title><rect x="32" y="964" width="5" height="15" fill="rgb(247,157,30)"/><text x="35.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="980" width="5" height="15" fill="rgb(220,38,42)"/><text x="35.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="996" width="5" height="15" fill="rgb(247,154,22)"/><text x="35.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1012" width="5" height="15" fill="rgb(221,25,22)"/><text x="35.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1028" width="5" height="15" fill="rgb(248,118,16)"/><text x="35.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1044" width="5" height="15" fill="rgb(244,138,45)"/><text x="35.00" y="1054.50"></text></g><g><title>0x7fb3ba31fe68 (?) (1 samples, 0.38%)</title><rect x="32" y="1060" width="5" height="15" fill="rgb(214,117,28)"/><text x="35.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1076" width="5" height="15" fill="rgb(223,166,24)"/><text x="35.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1092" width="5" height="15" fill="rgb(231,20,31)"/><text x="35.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1108" width="5" height="15" fill="rgb(207,146,31)"/><text x="35.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1124" width="5" height="15" fill="rgb(219,133,4)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1140" width="5" height="15" fill="rgb(252,12,22)"/><text x="35.00" y="1150.50"></text></g><g><title>0x7fb3ba0b02fb (?) (1 samples, 0.38%)</title><rect x="32" y="1156" width="5" height="15" fill="rgb(243,187,21)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1172" width="5" height="15" fill="rgb(218,19,14)"/><text x="35.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1188" width="5" height="15" fill="rgb(237,169,35)"/><text x="35.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1204" width="5" height="15" fill="rgb(226,225,39)"/><text x="35.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1220" width="5" height="15" fill="rgb(228,2,7)"/><text x="35.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1236" width="5" height="15" fill="rgb(226,17,9)"/><text x="35.00" y="1246.50"></text></g><g><title>0x7fb3b9e94153 (?) (1 samples, 0.38%)</title><rect x="32" y="1252" width="5" height="15" fill="rgb(208,149,39)"/><text x="35.00" y="1262.50"></text></g><g><title>0x7fb3b9e92c13 (?) (1 samples, 0.38%)</title><rect x="32" y="1268" width="5" height="15" fill="rgb(232,120,20)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1284" width="5" height="15" fill="rgb(245,173,10)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1300" width="5" height="15" fill="rgb(240,23,49)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1316" width="5" height="15" fill="rgb(225,150,37)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="32" y="1332" width="5" height="15" fill="rgb(217,153,34)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="32" y="1348" width="5" height="15" fill="rgb(219,219,2)"/><text x="35.00" y="1358.50"></text></g><g><title>0x7fb3b9c2f181 (?) (1 samples, 0.38%)</title><rect x="32" y="1364" width="5" height="15" fill="rgb(212,174,23)"/><text x="35.00" y="1374.50"></text></g><g><title>0x7fb3b9c321c9 (?) (1 samples, 0.38%)</title><rect x="32" y="1380" width="5" height="15" fill="rgb(215,224,23)"/><text x="35.00" y="1390.50"></text></g><g><title>0x7fb3b9c5e167 (?) (1 samples, 0.38%)</title><rect x="32" y="1396" width="5" height="15" fill="rgb(226,152,10)"/><text x="35.00" y="1406.50"></text></g><g><title>0x7fb3b9c59b64 (?) (1 samples, 0.38%)</title><rect x="32" y="1412" width="5" height="15" fill="rgb(232,68,52)"/><text x="35.00" y="1422.50"></text></g><g><title>0x7fb3b9c3d07b (?) (1 samples, 0.38%)</title><rect x="32" y="1428" width="5" height="15" fill="rgb(215,93,25)"/><text x="35.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.38%)</title><rect x="32" y="1444" width="5" height="15" fill="rgb(225,39,21)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="32" y="1460" width="5" height="15" fill="rgb(248,46,3)"/><text x="35.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="32" y="1476" width="5" height="15" fill="rgb(220,25,52)"/><text x="35.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="32" y="1492" width="5" height="15" fill="rgb(251,136,50)"/><text x="35.00" y="1502.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.38%)</title><rect x="32" y="1508" width="5" height="15" fill="rgb(235,115,24)"/><text x="35.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="500" width="9" height="15" fill="rgb(207,62,36)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="516" width="9" height="15" fill="rgb(239,25,45)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="532" width="9" height="15" fill="rgb(205,18,52)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="32" y="548" width="9" height="15" fill="rgb(250,214,11)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="564" width="9" height="15" fill="rgb(242,226,4)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 0.76%)</title><rect x="32" y="580" width="9" height="15" fill="rgb(245,38,49)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="596" width="9" height="15" fill="rgb(229,181,0)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="612" width="9" height="15" fill="rgb(237,216,42)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="628" width="9" height="15" fill="rgb(233,178,53)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="32" y="644" width="9" height="15" fill="rgb(228,224,28)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="660" width="9" height="15" fill="rgb(227,97,52)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 0.76%)</title><rect x="32" y="676" width="9" height="15" fill="rgb(250,32,12)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="692" width="9" height="15" fill="rgb(210,28,27)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="708" width="9" height="15" fill="rgb(243,215,48)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="724" width="9" height="15" fill="rgb(215,74,45)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="32" y="740" width="9" height="15" fill="rgb(243,150,20)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="32" y="756" width="9" height="15" fill="rgb(233,59,40)"/><text x="35.00" y="766.50"></text></g><g><title>0x7fb3bb0ec40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="772" width="4" height="15" fill="rgb(208,91,44)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="788" width="4" height="15" fill="rgb(207,196,3)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="804" width="4" height="15" fill="rgb(241,226,40)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="820" width="4" height="15" fill="rgb(216,83,42)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="836" width="4" height="15" fill="rgb(238,127,49)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="852" width="4" height="15" fill="rgb(234,39,29)"/><text x="40.00" y="862.50"></text></g><g><title>0x7fb3baea5cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="868" width="4" height="15" fill="rgb(228,91,45)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="884" width="4" height="15" fill="rgb(223,219,45)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="900" width="4" height="15" fill="rgb(206,126,45)"/><text x="40.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(237,186,11)"/><text x="40.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(245,157,0)"/><text x="40.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(238,74,21)"/><text x="40.00" y="958.50"></text></g><g><title>0x7fb3ba59b0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(207,45,34)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(218,200,20)"/><text x="40.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="996" width="4" height="15" fill="rgb(213,105,23)"/><text x="40.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1012" width="4" height="15" fill="rgb(246,36,41)"/><text x="40.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="1028" width="4" height="15" fill="rgb(224,179,16)"/><text x="40.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1044" width="4" height="15" fill="rgb(254,106,49)"/><text x="40.00" y="1054.50"></text></g><g><title>0x7fb3ba31fe68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1060" width="4" height="15" fill="rgb(233,227,14)"/><text x="40.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1076" width="4" height="15" fill="rgb(231,104,43)"/><text x="40.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1092" width="4" height="15" fill="rgb(233,47,28)"/><text x="40.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1108" width="4" height="15" fill="rgb(239,68,32)"/><text x="40.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="1124" width="4" height="15" fill="rgb(239,46,18)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1140" width="4" height="15" fill="rgb(211,5,42)"/><text x="40.00" y="1150.50"></text></g><g><title>0x7fb3ba0b02fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1156" width="4" height="15" fill="rgb(217,3,7)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1172" width="4" height="15" fill="rgb(244,194,34)"/><text x="40.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1188" width="4" height="15" fill="rgb(241,116,1)"/><text x="40.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1204" width="4" height="15" fill="rgb(206,74,28)"/><text x="40.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="1220" width="4" height="15" fill="rgb(218,54,2)"/><text x="40.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1236" width="4" height="15" fill="rgb(245,80,6)"/><text x="40.00" y="1246.50"></text></g><g><title>0x7fb3b9e94153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1252" width="4" height="15" fill="rgb(228,14,34)"/><text x="40.00" y="1262.50"></text></g><g><title>0x7fb3b9e92c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1268" width="4" height="15" fill="rgb(237,8,15)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1284" width="4" height="15" fill="rgb(229,114,22)"/><text x="40.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1300" width="4" height="15" fill="rgb(218,64,47)"/><text x="40.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1316" width="4" height="15" fill="rgb(216,100,31)"/><text x="40.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="37" y="1332" width="4" height="15" fill="rgb(210,51,28)"/><text x="40.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="37" y="1348" width="4" height="15" fill="rgb(233,68,27)"/><text x="40.00" y="1358.50"></text></g><g><title>0x7fb3b9c2f181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1364" width="4" height="15" fill="rgb(220,181,34)"/><text x="40.00" y="1374.50"></text></g><g><title>0x7fb3b9c321c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1380" width="4" height="15" fill="rgb(226,222,45)"/><text x="40.00" y="1390.50"></text></g><g><title>0x7fb3b9c5e167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1396" width="4" height="15" fill="rgb(218,6,51)"/><text x="40.00" y="1406.50"></text></g><g><title>0x7fb3b9c59b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1412" width="4" height="15" fill="rgb(205,109,14)"/><text x="40.00" y="1422.50"></text></g><g><title>0x7fb3b9c3d07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="37" y="1428" width="4" height="15" fill="rgb(227,34,6)"/><text x="40.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.38%)</title><rect x="37" y="1444" width="4" height="15" fill="rgb(237,42,11)"/><text x="40.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="37" y="1460" width="4" height="15" fill="rgb(208,107,30)"/><text x="40.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="37" y="1476" width="4" height="15" fill="rgb(211,153,38)"/><text x="40.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.38%)</title><rect x="37" y="1492" width="4" height="15" fill="rgb(240,112,22)"/><text x="40.00" y="1502.50"></text></g><g><title>get (_collections_abc.py) (1 samples, 0.38%)</title><rect x="37" y="1508" width="4" height="15" fill="rgb(219,63,6)"/><text x="40.00" y="1518.50"></text></g><g><title>__getitem__ (os.py) (1 samples, 0.38%)</title><rect x="37" y="1524" width="4" height="15" fill="rgb(213,122,40)"/><text x="40.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 3.05%)</title><rect x="10" y="292" width="36" height="15" fill="rgb(214,198,14)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="10" y="308" width="36" height="15" fill="rgb(232,161,9)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="10" y="324" width="36" height="15" fill="rgb(225,83,46)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="340" width="14" height="15" fill="rgb(254,140,42)"/><text x="35.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.15%)</title><rect x="32" y="356" width="14" height="15" fill="rgb(249,139,36)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="372" width="14" height="15" fill="rgb(248,163,18)"/><text x="35.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.15%)</title><rect x="32" y="388" width="14" height="15" fill="rgb(222,222,43)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="404" width="14" height="15" fill="rgb(231,127,29)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="420" width="14" height="15" fill="rgb(229,63,22)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="436" width="14" height="15" fill="rgb(216,218,38)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.15%)</title><rect x="32" y="452" width="14" height="15" fill="rgb(251,112,1)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.15%)</title><rect x="32" y="468" width="14" height="15" fill="rgb(217,138,47)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.15%)</title><rect x="32" y="484" width="14" height="15" fill="rgb(222,124,16)"/><text x="35.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="500" width="5" height="15" fill="rgb(212,205,52)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="516" width="5" height="15" fill="rgb(207,127,22)"/><text x="44.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="532" width="5" height="15" fill="rgb(206,195,2)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="548" width="5" height="15" fill="rgb(239,141,6)"/><text x="44.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="564" width="5" height="15" fill="rgb(220,175,54)"/><text x="44.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="41" y="580" width="5" height="15" fill="rgb(230,56,15)"/><text x="44.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="596" width="5" height="15" fill="rgb(235,104,2)"/><text x="44.00" y="606.50"></text></g><g><title>0x7fb3b867f2ff (?) (1 samples, 0.38%)</title><rect x="41" y="612" width="5" height="15" fill="rgb(252,106,12)"/><text x="44.00" y="622.50"></text></g><g><title>0x7fb3b868552a (?) (1 samples, 0.38%)</title><rect x="41" y="628" width="5" height="15" fill="rgb(216,146,41)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="644" width="5" height="15" fill="rgb(210,110,14)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="660" width="5" height="15" fill="rgb(227,32,3)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="676" width="5" height="15" fill="rgb(225,57,7)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="41" y="692" width="5" height="15" fill="rgb(253,186,12)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="41" y="708" width="5" height="15" fill="rgb(245,113,30)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (fractions.py) (1 samples, 0.38%)</title><rect x="41" y="724" width="5" height="15" fill="rgb(248,226,16)"/><text x="44.00" y="734.50"></text></g><g><title>compile (re.py) (1 samples, 0.38%)</title><rect x="41" y="740" width="5" height="15" fill="rgb(229,71,34)"/><text x="44.00" y="750.50"></text></g><g><title>_compile (re.py) (1 samples, 0.38%)</title><rect x="41" y="756" width="5" height="15" fill="rgb(206,60,42)"/><text x="44.00" y="766.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.38%)</title><rect x="41" y="772" width="5" height="15" fill="rgb(238,114,7)"/><text x="44.00" y="782.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="788" width="5" height="15" fill="rgb(225,80,21)"/><text x="44.00" y="798.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="804" width="5" height="15" fill="rgb(242,29,7)"/><text x="44.00" y="814.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="820" width="5" height="15" fill="rgb(219,9,18)"/><text x="44.00" y="830.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="836" width="5" height="15" fill="rgb(220,117,9)"/><text x="44.00" y="846.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="852" width="5" height="15" fill="rgb(209,77,12)"/><text x="44.00" y="862.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="868" width="5" height="15" fill="rgb(212,200,40)"/><text x="44.00" y="878.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="884" width="5" height="15" fill="rgb(251,219,53)"/><text x="44.00" y="894.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="900" width="5" height="15" fill="rgb(228,82,17)"/><text x="44.00" y="910.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="916" width="5" height="15" fill="rgb(207,54,39)"/><text x="44.00" y="926.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.38%)</title><rect x="41" y="932" width="5" height="15" fill="rgb(232,135,33)"/><text x="44.00" y="942.50"></text></g><g><title>0x7fb3ce8bc782 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="41" y="948" width="5" height="15" fill="rgb(208,58,3)"/><text x="44.00" y="958.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(254,169,11)"/><text x="49.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(224,202,26)"/><text x="49.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(241,106,36)"/><text x="49.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(214,66,28)"/><text x="49.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(229,212,24)"/><text x="49.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.76%)</title><rect x="46" y="868" width="9" height="15" fill="rgb(248,165,27)"/><text x="49.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.76%)</title><rect x="46" y="884" width="9" height="15" fill="rgb(246,220,29)"/><text x="49.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.76%)</title><rect x="46" y="900" width="9" height="15" fill="rgb(224,164,26)"/><text x="49.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.76%)</title><rect x="46" y="916" width="9" height="15" fill="rgb(238,179,53)"/><text x="49.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="46" y="932" width="9" height="15" fill="rgb(214,36,28)"/><text x="49.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="46" y="948" width="9" height="15" fill="rgb(240,86,36)"/><text x="49.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="46" y="964" width="9" height="15" fill="rgb(229,142,37)"/><text x="49.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="50" y="980" width="5" height="15" fill="rgb(218,158,52)"/><text x="53.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="50" y="996" width="5" height="15" fill="rgb(248,101,13)"/><text x="53.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="868" width="4" height="15" fill="rgb(214,222,51)"/><text x="58.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="884" width="4" height="15" fill="rgb(247,135,46)"/><text x="58.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="900" width="4" height="15" fill="rgb(217,32,51)"/><text x="58.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="916" width="4" height="15" fill="rgb(247,38,41)"/><text x="58.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="932" width="4" height="15" fill="rgb(224,37,19)"/><text x="58.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="948" width="4" height="15" fill="rgb(237,47,4)"/><text x="58.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="964" width="4" height="15" fill="rgb(210,1,26)"/><text x="58.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="55" y="980" width="4" height="15" fill="rgb(216,156,16)"/><text x="58.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.38%)</title><rect x="55" y="996" width="4" height="15" fill="rgb(250,91,30)"/><text x="58.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 1.15%)</title><rect x="59" y="900" width="14" height="15" fill="rgb(217,43,13)"/><text x="62.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (3 samples, 1.15%)</title><rect x="59" y="916" width="14" height="15" fill="rgb(254,64,39)"/><text x="62.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (3 samples, 1.15%)</title><rect x="59" y="932" width="14" height="15" fill="rgb(237,199,9)"/><text x="62.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (3 samples, 1.15%)</title><rect x="59" y="948" width="14" height="15" fill="rgb(222,65,8)"/><text x="62.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (3 samples, 1.15%)</title><rect x="59" y="964" width="14" height="15" fill="rgb(227,61,22)"/><text x="62.00" y="974.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.38%)</title><rect x="68" y="980" width="5" height="15" fill="rgb(250,131,17)"/><text x="71.00" y="990.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="73" y="900" width="4" height="15" fill="rgb(207,3,50)"/><text x="76.00" y="910.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.38%)</title><rect x="73" y="916" width="4" height="15" fill="rgb(221,151,29)"/><text x="76.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.11%)</title><rect x="10" y="196" width="72" height="15" fill="rgb(215,213,39)"/><text x="13.00" y="206.50">_call_wi..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.11%)</title><rect x="10" y="212" width="72" height="15" fill="rgb(209,222,11)"/><text x="13.00" y="222.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.11%)</title><rect x="10" y="228" width="72" height="15" fill="rgb(247,142,19)"/><text x="13.00" y="238.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.11%)</title><rect x="10" y="244" width="72" height="15" fill="rgb(246,218,35)"/><text x="13.00" y="254.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 6.11%)</title><rect x="10" y="260" width="72" height="15" fill="rgb(242,32,45)"/><text x="13.00" y="270.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 6.11%)</title><rect x="10" y="276" width="72" height="15" fill="rgb(244,5,18)"/><text x="13.00" y="286.50">_call_wi..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 3.05%)</title><rect x="46" y="292" width="36" height="15" fill="rgb(212,4,30)"/><text x="49.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="308" width="36" height="15" fill="rgb(246,95,41)"/><text x="49.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="324" width="36" height="15" fill="rgb(229,147,51)"/><text x="49.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="340" width="36" height="15" fill="rgb(214,129,11)"/><text x="49.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.05%)</title><rect x="46" y="356" width="36" height="15" fill="rgb(227,103,12)"/><text x="49.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="372" width="36" height="15" fill="rgb(254,176,51)"/><text x="49.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 3.05%)</title><rect x="46" y="388" width="36" height="15" fill="rgb(205,78,13)"/><text x="49.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="404" width="36" height="15" fill="rgb(215,89,30)"/><text x="49.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="420" width="36" height="15" fill="rgb(207,153,1)"/><text x="49.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="436" width="36" height="15" fill="rgb(235,125,44)"/><text x="49.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.05%)</title><rect x="46" y="452" width="36" height="15" fill="rgb(240,40,32)"/><text x="49.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="468" width="36" height="15" fill="rgb(221,11,18)"/><text x="49.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 3.05%)</title><rect x="46" y="484" width="36" height="15" fill="rgb(248,126,31)"/><text x="49.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="500" width="36" height="15" fill="rgb(246,182,41)"/><text x="49.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="516" width="36" height="15" fill="rgb(240,137,52)"/><text x="49.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="532" width="36" height="15" fill="rgb(237,79,33)"/><text x="49.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.05%)</title><rect x="46" y="548" width="36" height="15" fill="rgb(205,77,26)"/><text x="49.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="564" width="36" height="15" fill="rgb(244,18,30)"/><text x="49.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 3.05%)</title><rect x="46" y="580" width="36" height="15" fill="rgb(205,141,34)"/><text x="49.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="596" width="36" height="15" fill="rgb(218,80,7)"/><text x="49.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="612" width="36" height="15" fill="rgb(209,116,41)"/><text x="49.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="628" width="36" height="15" fill="rgb(210,121,26)"/><text x="49.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="644" width="36" height="15" fill="rgb(235,19,17)"/><text x="49.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="660" width="36" height="15" fill="rgb(240,39,29)"/><text x="49.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="676" width="36" height="15" fill="rgb(227,90,15)"/><text x="49.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.05%)</title><rect x="46" y="692" width="36" height="15" fill="rgb(208,34,24)"/><text x="49.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="708" width="36" height="15" fill="rgb(206,57,51)"/><text x="49.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 3.05%)</title><rect x="46" y="724" width="36" height="15" fill="rgb(223,159,33)"/><text x="49.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="740" width="36" height="15" fill="rgb(252,32,18)"/><text x="49.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="756" width="36" height="15" fill="rgb(214,162,18)"/><text x="49.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="772" width="36" height="15" fill="rgb(235,224,31)"/><text x="49.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.05%)</title><rect x="46" y="788" width="36" height="15" fill="rgb(222,64,10)"/><text x="49.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.05%)</title><rect x="46" y="804" width="36" height="15" fill="rgb(235,111,35)"/><text x="49.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 3.05%)</title><rect x="46" y="820" width="36" height="15" fill="rgb(252,71,18)"/><text x="49.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 3.05%)</title><rect x="46" y="836" width="36" height="15" fill="rgb(206,224,18)"/><text x="49.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 3.05%)</title><rect x="46" y="852" width="36" height="15" fill="rgb(214,226,54)"/><text x="49.00" y="862.50">_in..</text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 1.91%)</title><rect x="59" y="868" width="23" height="15" fill="rgb(245,182,41)"/><text x="62.00" y="878.50">a..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 1.91%)</title><rect x="59" y="884" width="23" height="15" fill="rgb(230,131,30)"/><text x="62.00" y="894.50">f..</text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="77" y="900" width="5" height="15" fill="rgb(231,213,49)"/><text x="80.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.38%)</title><rect x="77" y="916" width="5" height="15" fill="rgb(250,115,9)"/><text x="80.00" y="926.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="77" y="932" width="5" height="15" fill="rgb(232,127,24)"/><text x="80.00" y="942.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.38%)</title><rect x="82" y="580" width="4" height="15" fill="rgb(219,61,29)"/><text x="85.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="596" width="4" height="15" fill="rgb(227,38,28)"/><text x="85.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="612" width="4" height="15" fill="rgb(210,111,27)"/><text x="85.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="628" width="4" height="15" fill="rgb(250,105,42)"/><text x="85.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="644" width="4" height="15" fill="rgb(212,188,22)"/><text x="85.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="660" width="4" height="15" fill="rgb(221,106,11)"/><text x="85.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="82" y="676" width="4" height="15" fill="rgb(233,107,32)"/><text x="85.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="692" width="4" height="15" fill="rgb(247,24,47)"/><text x="85.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="708" width="4" height="15" fill="rgb(245,83,49)"/><text x="85.00" y="718.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="82" y="724" width="4" height="15" fill="rgb(206,0,11)"/><text x="85.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="68" width="81" height="15" fill="rgb(217,100,21)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="84" width="81" height="15" fill="rgb(230,63,6)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="100" width="81" height="15" fill="rgb(206,80,33)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 6.87%)</title><rect x="10" y="116" width="81" height="15" fill="rgb(208,145,4)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="132" width="81" height="15" fill="rgb(222,146,11)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (18 samples, 6.87%)</title><rect x="10" y="148" width="81" height="15" fill="rgb(209,208,9)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="164" width="81" height="15" fill="rgb(237,213,48)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.87%)</title><rect x="10" y="180" width="81" height="15" fill="rgb(250,1,39)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="196" width="9" height="15" fill="rgb(238,70,49)"/><text x="85.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="82" y="212" width="9" height="15" fill="rgb(209,99,31)"/><text x="85.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="228" width="9" height="15" fill="rgb(224,195,28)"/><text x="85.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (2 samples, 0.76%)</title><rect x="82" y="244" width="9" height="15" fill="rgb(242,147,33)"/><text x="85.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="260" width="9" height="15" fill="rgb(251,80,26)"/><text x="85.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="276" width="9" height="15" fill="rgb(234,67,14)"/><text x="85.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="292" width="9" height="15" fill="rgb(208,184,29)"/><text x="85.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="82" y="308" width="9" height="15" fill="rgb(242,27,46)"/><text x="85.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="324" width="9" height="15" fill="rgb(240,166,30)"/><text x="85.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.76%)</title><rect x="82" y="340" width="9" height="15" fill="rgb(211,156,27)"/><text x="85.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="356" width="9" height="15" fill="rgb(251,194,15)"/><text x="85.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="372" width="9" height="15" fill="rgb(222,117,38)"/><text x="85.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="388" width="9" height="15" fill="rgb(221,137,13)"/><text x="85.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="404" width="9" height="15" fill="rgb(240,145,54)"/><text x="85.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="420" width="9" height="15" fill="rgb(254,180,36)"/><text x="85.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="436" width="9" height="15" fill="rgb(226,113,0)"/><text x="85.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="82" y="452" width="9" height="15" fill="rgb(209,80,30)"/><text x="85.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="468" width="9" height="15" fill="rgb(228,36,19)"/><text x="85.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.76%)</title><rect x="82" y="484" width="9" height="15" fill="rgb(224,127,19)"/><text x="85.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="500" width="9" height="15" fill="rgb(253,212,18)"/><text x="85.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="516" width="9" height="15" fill="rgb(252,223,40)"/><text x="85.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="532" width="9" height="15" fill="rgb(221,114,12)"/><text x="85.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.76%)</title><rect x="82" y="548" width="9" height="15" fill="rgb(234,120,4)"/><text x="85.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.76%)</title><rect x="82" y="564" width="9" height="15" fill="rgb(229,219,24)"/><text x="85.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.38%)</title><rect x="86" y="580" width="5" height="15" fill="rgb(236,97,17)"/><text x="89.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="596" width="5" height="15" fill="rgb(240,191,19)"/><text x="89.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="612" width="5" height="15" fill="rgb(237,109,29)"/><text x="89.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="628" width="5" height="15" fill="rgb(232,12,32)"/><text x="89.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="86" y="644" width="5" height="15" fill="rgb(219,145,12)"/><text x="89.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="660" width="5" height="15" fill="rgb(220,58,39)"/><text x="89.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.38%)</title><rect x="86" y="676" width="5" height="15" fill="rgb(239,53,20)"/><text x="89.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="692" width="5" height="15" fill="rgb(241,224,41)"/><text x="89.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="708" width="5" height="15" fill="rgb(206,166,16)"/><text x="89.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="724" width="5" height="15" fill="rgb(208,106,11)"/><text x="89.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="86" y="740" width="5" height="15" fill="rgb(225,53,53)"/><text x="89.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="756" width="5" height="15" fill="rgb(240,43,20)"/><text x="89.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.38%)</title><rect x="86" y="772" width="5" height="15" fill="rgb(252,37,38)"/><text x="89.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="788" width="5" height="15" fill="rgb(233,2,38)"/><text x="89.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="804" width="5" height="15" fill="rgb(233,132,37)"/><text x="89.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="820" width="5" height="15" fill="rgb(206,23,3)"/><text x="89.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="836" width="5" height="15" fill="rgb(246,73,23)"/><text x="89.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="852" width="5" height="15" fill="rgb(234,152,31)"/><text x="89.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="86" y="868" width="5" height="15" fill="rgb(208,129,53)"/><text x="89.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="86" y="884" width="5" height="15" fill="rgb(229,58,32)"/><text x="89.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.38%)</title><rect x="86" y="900" width="5" height="15" fill="rgb(242,52,30)"/><text x="89.00" y="910.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.76%)</title><rect x="149" y="180" width="9" height="15" fill="rgb(223,179,44)"/><text x="152.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.38%)</title><rect x="235" y="196" width="4" height="15" fill="rgb(211,115,14)"/><text x="238.00" y="206.50"></text></g><g><title>0x7fb3ce8bc73f (libc-2.29.so) (1 samples, 0.38%)</title><rect x="262" y="260" width="4" height="15" fill="rgb(220,171,30)"/><text x="265.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.38%)</title><rect x="266" y="276" width="5" height="15" fill="rgb(232,67,1)"/><text x="269.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="271" y="292" width="4" height="15" fill="rgb(215,174,29)"/><text x="274.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.53%)</title><rect x="266" y="260" width="18" height="15" fill="rgb(224,63,5)"/><text x="269.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.15%)</title><rect x="271" y="276" width="13" height="15" fill="rgb(208,4,15)"/><text x="274.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (2 samples, 0.76%)</title><rect x="275" y="292" width="9" height="15" fill="rgb(240,76,44)"/><text x="278.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (8 samples, 3.05%)</title><rect x="253" y="212" width="36" height="15" fill="rgb(209,88,37)"/><text x="256.00" y="222.50">_ru..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (7 samples, 2.67%)</title><rect x="257" y="228" width="32" height="15" fill="rgb(235,80,21)"/><text x="260.00" y="238.50">&lt;l..</text></g><g><title>array_astype (methods.c) (7 samples, 2.67%)</title><rect x="257" y="244" width="32" height="15" fill="rgb(231,75,48)"/><text x="260.00" y="254.50">ar..</text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.38%)</title><rect x="284" y="260" width="5" height="15" fill="rgb(234,173,21)"/><text x="287.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 1.15%)</title><rect x="289" y="212" width="13" height="15" fill="rgb(208,120,46)"/><text x="292.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.76%)</title><rect x="293" y="228" width="9" height="15" fill="rgb(227,216,34)"/><text x="296.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.38%)</title><rect x="302" y="212" width="5" height="15" fill="rgb(229,195,47)"/><text x="305.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.38%)</title><rect x="302" y="228" width="5" height="15" fill="rgb(208,148,16)"/><text x="305.00" y="238.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.38%)</title><rect x="320" y="260" width="5" height="15" fill="rgb(234,131,26)"/><text x="323.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 2.67%)</title><rect x="320" y="244" width="32" height="15" fill="rgb(221,142,47)"/><text x="323.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.29%)</title><rect x="325" y="260" width="27" height="15" fill="rgb(205,177,2)"/><text x="328.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.91%)</title><rect x="329" y="276" width="23" height="15" fill="rgb(254,215,49)"/><text x="332.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.53%)</title><rect x="334" y="292" width="18" height="15" fill="rgb(216,140,42)"/><text x="337.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.76%)</title><rect x="343" y="308" width="9" height="15" fill="rgb(238,49,33)"/><text x="346.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.38%)</title><rect x="347" y="324" width="5" height="15" fill="rgb(218,224,16)"/><text x="350.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.38%)</title><rect x="365" y="324" width="5" height="15" fill="rgb(235,110,35)"/><text x="368.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.38%)</title><rect x="365" y="340" width="5" height="15" fill="rgb(234,151,15)"/><text x="368.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.38%)</title><rect x="370" y="340" width="4" height="15" fill="rgb(230,150,4)"/><text x="373.00" y="350.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.38%)</title><rect x="370" y="356" width="4" height="15" fill="rgb(213,3,15)"/><text x="373.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (6 samples, 2.29%)</title><rect x="352" y="244" width="27" height="15" fill="rgb(230,36,35)"/><text x="355.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (4 samples, 1.53%)</title><rect x="361" y="260" width="18" height="15" fill="rgb(217,108,20)"/><text x="364.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.15%)</title><rect x="365" y="276" width="14" height="15" fill="rgb(223,53,45)"/><text x="368.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.15%)</title><rect x="365" y="292" width="14" height="15" fill="rgb(216,104,15)"/><text x="368.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 1.15%)</title><rect x="365" y="308" width="14" height="15" fill="rgb(254,198,15)"/><text x="368.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.76%)</title><rect x="370" y="324" width="9" height="15" fill="rgb(236,105,25)"/><text x="373.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.38%)</title><rect x="374" y="340" width="5" height="15" fill="rgb(250,229,8)"/><text x="377.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.38%)</title><rect x="374" y="356" width="5" height="15" fill="rgb(252,163,23)"/><text x="377.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="374" y="372" width="5" height="15" fill="rgb(220,138,19)"/><text x="377.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.38%)</title><rect x="383" y="260" width="5" height="15" fill="rgb(245,30,19)"/><text x="386.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="383" y="276" width="5" height="15" fill="rgb(238,169,24)"/><text x="386.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.38%)</title><rect x="383" y="292" width="5" height="15" fill="rgb(206,149,8)"/><text x="386.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="392" y="292" width="5" height="15" fill="rgb(237,3,31)"/><text x="395.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.38%)</title><rect x="392" y="308" width="5" height="15" fill="rgb(233,172,33)"/><text x="395.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.76%)</title><rect x="392" y="276" width="9" height="15" fill="rgb(251,52,1)"/><text x="395.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="397" y="292" width="4" height="15" fill="rgb(243,72,35)"/><text x="400.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.38%)</title><rect x="401" y="276" width="5" height="15" fill="rgb(220,190,9)"/><text x="404.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.38%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(254,112,30)"/><text x="409.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.38%)</title><rect x="406" y="308" width="4" height="15" fill="rgb(211,62,17)"/><text x="409.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.38%)</title><rect x="406" y="324" width="4" height="15" fill="rgb(252,84,7)"/><text x="409.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.38%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(230,65,40)"/><text x="409.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.76%)</title><rect x="415" y="308" width="9" height="15" fill="rgb(216,200,23)"/><text x="418.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.38%)</title><rect x="419" y="324" width="5" height="15" fill="rgb(210,186,11)"/><text x="422.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.38%)</title><rect x="419" y="340" width="5" height="15" fill="rgb(230,32,45)"/><text x="422.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.38%)</title><rect x="424" y="308" width="4" height="15" fill="rgb(207,225,27)"/><text x="427.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.91%)</title><rect x="410" y="292" width="23" height="15" fill="rgb(229,102,46)"/><text x="413.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.38%)</title><rect x="428" y="308" width="5" height="15" fill="rgb(220,117,54)"/><text x="431.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.38%)</title><rect x="428" y="324" width="5" height="15" fill="rgb(206,176,39)"/><text x="431.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (29 samples, 11.07%)</title><rect x="307" y="228" width="130" height="15" fill="rgb(234,77,20)"/><text x="310.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.96%)</title><rect x="379" y="244" width="58" height="15" fill="rgb(251,67,25)"/><text x="382.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 4.20%)</title><rect x="388" y="260" width="49" height="15" fill="rgb(206,186,7)"/><text x="391.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.67%)</title><rect x="406" y="276" width="31" height="15" fill="rgb(246,19,54)"/><text x="409.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.38%)</title><rect x="433" y="292" width="4" height="15" fill="rgb(213,167,45)"/><text x="436.00" y="302.50"></text></g><g><title>0x7fb3b0cac9a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="433" y="308" width="4" height="15" fill="rgb(239,159,8)"/><text x="436.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.38%)</title><rect x="451" y="260" width="4" height="15" fill="rgb(246,101,23)"/><text x="454.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.38%)</title><rect x="451" y="276" width="4" height="15" fill="rgb(222,216,16)"/><text x="454.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.38%)</title><rect x="455" y="260" width="5" height="15" fill="rgb(247,108,12)"/><text x="458.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.38%)</title><rect x="464" y="324" width="5" height="15" fill="rgb(229,121,49)"/><text x="467.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="464" y="340" width="5" height="15" fill="rgb(217,73,40)"/><text x="467.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.38%)</title><rect x="464" y="356" width="5" height="15" fill="rgb(213,36,41)"/><text x="467.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.38%)</title><rect x="464" y="372" width="5" height="15" fill="rgb(242,150,20)"/><text x="467.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.38%)</title><rect x="464" y="388" width="5" height="15" fill="rgb(218,63,35)"/><text x="467.00" y="398.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.38%)</title><rect x="487" y="340" width="4" height="15" fill="rgb(208,161,14)"/><text x="490.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.38%)</title><rect x="491" y="340" width="5" height="15" fill="rgb(213,53,18)"/><text x="494.00" y="350.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.38%)</title><rect x="500" y="372" width="5" height="15" fill="rgb(219,96,1)"/><text x="503.00" y="382.50"></text></g><g><title>array_sum (methods.c) (11 samples, 4.20%)</title><rect x="460" y="260" width="49" height="15" fill="rgb(244,225,28)"/><text x="463.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 4.20%)</title><rect x="460" y="276" width="49" height="15" fill="rgb(253,195,11)"/><text x="463.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 4.20%)</title><rect x="460" y="292" width="49" height="15" fill="rgb(247,97,10)"/><text x="463.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 3.82%)</title><rect x="464" y="308" width="45" height="15" fill="rgb(221,0,2)"/><text x="467.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.44%)</title><rect x="469" y="324" width="40" height="15" fill="rgb(246,136,51)"/><text x="472.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.15%)</title><rect x="496" y="340" width="13" height="15" fill="rgb(220,159,45)"/><text x="499.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.15%)</title><rect x="496" y="356" width="13" height="15" fill="rgb(214,62,24)"/><text x="499.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.38%)</title><rect x="505" y="372" width="4" height="15" fill="rgb(232,103,25)"/><text x="508.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.38%)</title><rect x="509" y="276" width="5" height="15" fill="rgb(243,123,13)"/><text x="512.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="509" y="292" width="5" height="15" fill="rgb(253,131,46)"/><text x="512.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.38%)</title><rect x="509" y="308" width="5" height="15" fill="rgb(242,6,10)"/><text x="512.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="509" y="324" width="5" height="15" fill="rgb(237,79,46)"/><text x="512.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.38%)</title><rect x="523" y="292" width="4" height="15" fill="rgb(217,66,49)"/><text x="526.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.38%)</title><rect x="527" y="292" width="5" height="15" fill="rgb(231,117,22)"/><text x="530.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.38%)</title><rect x="527" y="308" width="5" height="15" fill="rgb(239,152,48)"/><text x="530.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.38%)</title><rect x="527" y="324" width="5" height="15" fill="rgb(236,103,53)"/><text x="530.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.38%)</title><rect x="527" y="340" width="5" height="15" fill="rgb(254,211,3)"/><text x="530.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.38%)</title><rect x="532" y="292" width="4" height="15" fill="rgb(250,155,10)"/><text x="535.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (99 samples, 37.79%)</title><rect x="95" y="132" width="446" height="15" fill="rgb(254,131,11)"/><text x="98.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (96 samples, 36.64%)</title><rect x="109" y="148" width="432" height="15" fill="rgb(227,190,12)"/><text x="112.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (93 samples, 35.50%)</title><rect x="122" y="164" width="419" height="15" fill="rgb(208,202,46)"/><text x="125.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (85 samples, 32.44%)</title><rect x="158" y="180" width="383" height="15" fill="rgb(252,24,14)"/><text x="161.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (67 samples, 25.57%)</title><rect x="239" y="196" width="302" height="15" fill="rgb(210,213,13)"/><text x="242.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (52 samples, 19.85%)</title><rect x="307" y="212" width="234" height="15" fill="rgb(250,119,34)"/><text x="310.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 8.78%)</title><rect x="437" y="228" width="104" height="15" fill="rgb(231,208,33)"/><text x="440.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (22 samples, 8.40%)</title><rect x="442" y="244" width="99" height="15" fill="rgb(245,29,44)"/><text x="445.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.67%)</title><rect x="509" y="260" width="32" height="15" fill="rgb(221,165,10)"/><text x="512.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.29%)</title><rect x="514" y="276" width="27" height="15" fill="rgb(220,112,3)"/><text x="517.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="536" y="292" width="5" height="15" fill="rgb(247,0,52)"/><text x="539.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (101 samples, 38.55%)</title><rect x="91" y="100" width="454" height="15" fill="rgb(210,135,6)"/><text x="94.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverlibl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (101 samples, 38.55%)</title><rect x="91" y="116" width="454" height="15" fill="rgb(215,161,28)"/><text x="94.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.38%)</title><rect x="541" y="132" width="4" height="15" fill="rgb(243,9,51)"/><text x="544.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (102 samples, 38.93%)</title><rect x="91" y="68" width="459" height="15" fill="rgb(245,136,47)"/><text x="94.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solve..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (102 samples, 38.93%)</title><rect x="91" y="84" width="459" height="15" fill="rgb(230,15,11)"/><text x="94.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solv..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="545" y="100" width="5" height="15" fill="rgb(248,51,12)"/><text x="548.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="545" y="116" width="5" height="15" fill="rgb(240,173,49)"/><text x="548.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="545" y="132" width="5" height="15" fill="rgb(236,95,49)"/><text x="548.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.38%)</title><rect x="545" y="148" width="5" height="15" fill="rgb(241,17,0)"/><text x="548.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.38%)</title><rect x="545" y="164" width="5" height="15" fill="rgb(251,176,40)"/><text x="548.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.38%)</title><rect x="545" y="180" width="5" height="15" fill="rgb(241,47,49)"/><text x="548.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.38%)</title><rect x="545" y="196" width="5" height="15" fill="rgb(222,223,21)"/><text x="548.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="212" width="5" height="15" fill="rgb(240,215,29)"/><text x="548.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="228" width="5" height="15" fill="rgb(206,77,51)"/><text x="548.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="244" width="5" height="15" fill="rgb(234,203,14)"/><text x="548.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="545" y="260" width="5" height="15" fill="rgb(238,188,24)"/><text x="548.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="276" width="5" height="15" fill="rgb(205,76,49)"/><text x="548.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.38%)</title><rect x="545" y="292" width="5" height="15" fill="rgb(225,94,47)"/><text x="548.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="308" width="5" height="15" fill="rgb(214,142,54)"/><text x="548.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="324" width="5" height="15" fill="rgb(213,76,31)"/><text x="548.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="340" width="5" height="15" fill="rgb(222,217,28)"/><text x="548.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="545" y="356" width="5" height="15" fill="rgb(252,167,50)"/><text x="548.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="372" width="5" height="15" fill="rgb(253,69,34)"/><text x="548.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.38%)</title><rect x="545" y="388" width="5" height="15" fill="rgb(223,76,2)"/><text x="548.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="404" width="5" height="15" fill="rgb(232,104,40)"/><text x="548.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="420" width="5" height="15" fill="rgb(244,99,38)"/><text x="548.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="436" width="5" height="15" fill="rgb(250,3,38)"/><text x="548.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="545" y="452" width="5" height="15" fill="rgb(232,134,50)"/><text x="548.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="545" y="468" width="5" height="15" fill="rgb(254,203,14)"/><text x="548.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.38%)</title><rect x="545" y="484" width="5" height="15" fill="rgb(237,214,14)"/><text x="548.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.38%)</title><rect x="545" y="500" width="5" height="15" fill="rgb(205,82,53)"/><text x="548.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="545" y="516" width="5" height="15" fill="rgb(235,120,21)"/><text x="548.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="545" y="532" width="5" height="15" fill="rgb(209,94,12)"/><text x="548.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="545" y="548" width="5" height="15" fill="rgb(222,221,33)"/><text x="548.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="545" y="564" width="5" height="15" fill="rgb(216,31,17)"/><text x="548.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="545" y="580" width="5" height="15" fill="rgb(213,66,43)"/><text x="548.00" y="590.50"></text></g><g><title>set_environment (jinja2/nodes.py) (1 samples, 0.38%)</title><rect x="545" y="596" width="5" height="15" fill="rgb(248,192,43)"/><text x="548.00" y="606.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.38%)</title><rect x="545" y="612" width="5" height="15" fill="rgb(207,23,18)"/><text x="548.00" y="622.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.38%)</title><rect x="590" y="196" width="5" height="15" fill="rgb(244,55,43)"/><text x="593.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.38%)</title><rect x="590" y="212" width="5" height="15" fill="rgb(206,210,52)"/><text x="593.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.76%)</title><rect x="590" y="180" width="10" height="15" fill="rgb(205,158,0)"/><text x="593.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.38%)</title><rect x="595" y="196" width="5" height="15" fill="rgb(245,96,6)"/><text x="598.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.38%)</title><rect x="595" y="212" width="5" height="15" fill="rgb(213,152,7)"/><text x="598.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(223,54,47)"/><text x="598.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.38%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(214,14,12)"/><text x="598.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.38%)</title><rect x="595" y="260" width="5" height="15" fill="rgb(254,221,17)"/><text x="598.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.53%)</title><rect x="600" y="244" width="18" height="15" fill="rgb(243,174,12)"/><text x="603.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.53%)</title><rect x="600" y="260" width="18" height="15" fill="rgb(253,117,24)"/><text x="603.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.53%)</title><rect x="600" y="276" width="18" height="15" fill="rgb(234,1,24)"/><text x="603.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.53%)</title><rect x="600" y="292" width="18" height="15" fill="rgb(241,194,44)"/><text x="603.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.53%)</title><rect x="600" y="308" width="18" height="15" fill="rgb(242,53,15)"/><text x="603.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.38%)</title><rect x="618" y="292" width="4" height="15" fill="rgb(221,3,12)"/><text x="621.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.38%)</title><rect x="618" y="308" width="4" height="15" fill="rgb(241,49,46)"/><text x="621.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.76%)</title><rect x="622" y="292" width="9" height="15" fill="rgb(240,113,40)"/><text x="625.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.76%)</title><rect x="622" y="308" width="9" height="15" fill="rgb(248,154,29)"/><text x="625.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.76%)</title><rect x="622" y="324" width="9" height="15" fill="rgb(235,74,21)"/><text x="625.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.76%)</title><rect x="622" y="340" width="9" height="15" fill="rgb(214,202,54)"/><text x="625.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.38%)</title><rect x="627" y="356" width="4" height="15" fill="rgb(244,225,32)"/><text x="630.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.53%)</title><rect x="618" y="276" width="18" height="15" fill="rgb(218,18,25)"/><text x="621.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.38%)</title><rect x="631" y="292" width="5" height="15" fill="rgb(225,227,26)"/><text x="634.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.38%)</title><rect x="631" y="308" width="5" height="15" fill="rgb(224,42,50)"/><text x="634.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.38%)</title><rect x="631" y="324" width="5" height="15" fill="rgb(246,13,53)"/><text x="634.00" y="334.50"></text></g><g><title>0x7fb3ce8c712f (libc-2.29.so) (1 samples, 0.38%)</title><rect x="631" y="340" width="5" height="15" fill="rgb(239,215,52)"/><text x="634.00" y="350.50"></text></g><g><title>array_sum (methods.c) (10 samples, 3.82%)</title><rect x="600" y="180" width="45" height="15" fill="rgb(207,51,27)"/><text x="603.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 3.82%)</title><rect x="600" y="196" width="45" height="15" fill="rgb(243,0,1)"/><text x="603.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 3.82%)</title><rect x="600" y="212" width="45" height="15" fill="rgb(211,48,35)"/><text x="603.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 3.82%)</title><rect x="600" y="228" width="45" height="15" fill="rgb(237,61,49)"/><text x="603.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 2.29%)</title><rect x="618" y="244" width="27" height="15" fill="rgb(245,24,27)"/><text x="621.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 2.29%)</title><rect x="618" y="260" width="27" height="15" fill="rgb(214,200,31)"/><text x="621.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.76%)</title><rect x="636" y="276" width="9" height="15" fill="rgb(226,145,18)"/><text x="639.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="640" y="292" width="5" height="15" fill="rgb(213,224,41)"/><text x="643.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="640" y="308" width="5" height="15" fill="rgb(219,193,29)"/><text x="643.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="640" y="324" width="5" height="15" fill="rgb(223,179,22)"/><text x="643.00" y="334.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.38%)</title><rect x="640" y="340" width="5" height="15" fill="rgb(222,7,39)"/><text x="643.00" y="350.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.76%)</title><rect x="658" y="196" width="9" height="15" fill="rgb(245,23,50)"/><text x="661.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.38%)</title><rect x="663" y="212" width="4" height="15" fill="rgb(225,195,32)"/><text x="666.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="663" y="228" width="4" height="15" fill="rgb(222,161,46)"/><text x="666.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.38%)</title><rect x="663" y="244" width="4" height="15" fill="rgb(220,9,4)"/><text x="666.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.38%)</title><rect x="672" y="276" width="4" height="15" fill="rgb(246,139,54)"/><text x="675.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.38%)</title><rect x="672" y="292" width="4" height="15" fill="rgb(221,210,41)"/><text x="675.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.38%)</title><rect x="672" y="308" width="4" height="15" fill="rgb(230,193,44)"/><text x="675.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.38%)</title><rect x="672" y="324" width="4" height="15" fill="rgb(253,53,15)"/><text x="675.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.38%)</title><rect x="676" y="292" width="5" height="15" fill="rgb(239,169,24)"/><text x="679.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.38%)</title><rect x="676" y="308" width="5" height="15" fill="rgb(214,140,12)"/><text x="679.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.76%)</title><rect x="676" y="276" width="9" height="15" fill="rgb(231,63,42)"/><text x="679.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.38%)</title><rect x="681" y="292" width="4" height="15" fill="rgb(208,14,43)"/><text x="684.00" y="302.50"></text></g><g><title>array_add (number.c) (5 samples, 1.91%)</title><rect x="667" y="196" width="23" height="15" fill="rgb(237,142,4)"/><text x="670.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.91%)</title><rect x="667" y="212" width="23" height="15" fill="rgb(207,208,44)"/><text x="670.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.91%)</title><rect x="667" y="228" width="23" height="15" fill="rgb(233,56,26)"/><text x="670.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.53%)</title><rect x="672" y="244" width="18" height="15" fill="rgb(237,117,1)"/><text x="675.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.53%)</title><rect x="672" y="260" width="18" height="15" fill="rgb(240,168,29)"/><text x="675.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.38%)</title><rect x="685" y="276" width="5" height="15" fill="rgb(217,32,12)"/><text x="688.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.38%)</title><rect x="685" y="292" width="5" height="15" fill="rgb(217,207,47)"/><text x="688.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.76%)</title><rect x="690" y="196" width="9" height="15" fill="rgb(217,23,7)"/><text x="693.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.76%)</title><rect x="690" y="212" width="9" height="15" fill="rgb(234,69,10)"/><text x="693.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.38%)</title><rect x="694" y="228" width="5" height="15" fill="rgb(246,129,14)"/><text x="697.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.15%)</title><rect x="753" y="212" width="13" height="15" fill="rgb(225,13,27)"/><text x="756.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.76%)</title><rect x="766" y="212" width="9" height="15" fill="rgb(229,55,17)"/><text x="769.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.76%)</title><rect x="775" y="212" width="9" height="15" fill="rgb(213,85,9)"/><text x="778.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="816" y="228" width="4" height="15" fill="rgb(230,49,15)"/><text x="819.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (3 samples, 1.15%)</title><rect x="820" y="228" width="14" height="15" fill="rgb(243,24,38)"/><text x="823.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 4.58%)</title><rect x="784" y="212" width="54" height="15" fill="rgb(253,70,14)"/><text x="787.00" y="222.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="834" y="228" width="4" height="15" fill="rgb(222,23,2)"/><text x="837.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.76%)</title><rect x="838" y="212" width="9" height="15" fill="rgb(215,18,42)"/><text x="841.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 3.05%)</title><rect x="847" y="212" width="36" height="15" fill="rgb(206,109,50)"/><text x="850.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.53%)</title><rect x="865" y="228" width="18" height="15" fill="rgb(218,25,26)"/><text x="868.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.38%)</title><rect x="879" y="244" width="4" height="15" fill="rgb(226,192,37)"/><text x="882.00" y="254.50"></text></g><g><title>array_ndim_get (getset.c) (1 samples, 0.38%)</title><rect x="883" y="212" width="5" height="15" fill="rgb(245,55,48)"/><text x="886.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.38%)</title><rect x="888" y="212" width="4" height="15" fill="rgb(210,50,12)"/><text x="891.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (6 samples, 2.29%)</title><rect x="892" y="212" width="27" height="15" fill="rgb(251,171,54)"/><text x="895.00" y="222.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.76%)</title><rect x="910" y="228" width="9" height="15" fill="rgb(228,69,7)"/><text x="913.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (56 samples, 21.37%)</title><rect x="699" y="196" width="252" height="15" fill="rgb(239,139,40)"/><text x="702.00" y="206.50">check_array (sklearn/utils/valida..</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.67%)</title><rect x="919" y="212" width="32" height="15" fill="rgb(207,212,10)"/><text x="922.00" y="222.50">si..</text></g><g><title>_add_filter (warnings.py) (7 samples, 2.67%)</title><rect x="919" y="228" width="32" height="15" fill="rgb(238,36,12)"/><text x="922.00" y="238.50">_a..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.76%)</title><rect x="973" y="228" width="9" height="15" fill="rgb(216,55,51)"/><text x="976.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 4.20%)</title><rect x="951" y="196" width="49" height="15" fill="rgb(247,170,4)"/><text x="954.00" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 3.82%)</title><rect x="955" y="212" width="45" height="15" fill="rgb(226,226,8)"/><text x="958.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.53%)</title><rect x="982" y="228" width="18" height="15" fill="rgb(218,18,3)"/><text x="985.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.38%)</title><rect x="1009" y="260" width="5" height="15" fill="rgb(234,116,18)"/><text x="1012.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.38%)</title><rect x="1009" y="276" width="5" height="15" fill="rgb(249,129,53)"/><text x="1012.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.38%)</title><rect x="1009" y="292" width="5" height="15" fill="rgb(232,163,1)"/><text x="1012.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1014" y="276" width="4" height="15" fill="rgb(217,198,42)"/><text x="1017.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.15%)</title><rect x="1014" y="260" width="13" height="15" fill="rgb(216,161,26)"/><text x="1017.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.76%)</title><rect x="1018" y="276" width="9" height="15" fill="rgb(248,21,39)"/><text x="1021.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1023" y="292" width="4" height="15" fill="rgb(220,154,53)"/><text x="1026.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1023" y="308" width="4" height="15" fill="rgb(205,61,22)"/><text x="1026.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="1027" y="260" width="5" height="15" fill="rgb(224,32,50)"/><text x="1030.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (87 samples, 33.21%)</title><rect x="645" y="180" width="391" height="15" fill="rgb(210,81,25)"/><text x="648.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (8 samples, 3.05%)</title><rect x="1000" y="196" width="36" height="15" fill="rgb(250,114,12)"/><text x="1003.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.67%)</title><rect x="1005" y="212" width="31" height="15" fill="rgb(226,190,42)"/><text x="1008.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.29%)</title><rect x="1009" y="228" width="27" height="15" fill="rgb(216,134,35)"/><text x="1012.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (6 samples, 2.29%)</title><rect x="1009" y="244" width="27" height="15" fill="rgb(245,130,14)"/><text x="1012.00" y="254.50">P..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="1032" y="260" width="4" height="15" fill="rgb(226,226,24)"/><text x="1035.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1032" y="276" width="4" height="15" fill="rgb(228,102,29)"/><text x="1035.00" y="286.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="1036" y="212" width="5" height="15" fill="rgb(241,181,40)"/><text x="1039.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1045" y="260" width="5" height="15" fill="rgb(214,68,20)"/><text x="1048.00" y="270.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1045" y="276" width="5" height="15" fill="rgb(207,62,12)"/><text x="1048.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1050" y="260" width="4" height="15" fill="rgb(220,184,28)"/><text x="1053.00" y="270.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1050" y="276" width="4" height="15" fill="rgb(218,177,2)"/><text x="1053.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.38%)</title><rect x="1054" y="292" width="5" height="15" fill="rgb(223,185,26)"/><text x="1057.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.38%)</title><rect x="1054" y="308" width="5" height="15" fill="rgb(253,71,37)"/><text x="1057.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.53%)</title><rect x="1045" y="228" width="18" height="15" fill="rgb(209,199,51)"/><text x="1048.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.53%)</title><rect x="1045" y="244" width="18" height="15" fill="rgb(210,109,16)"/><text x="1048.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.76%)</title><rect x="1054" y="260" width="9" height="15" fill="rgb(225,80,7)"/><text x="1057.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.76%)</title><rect x="1054" y="276" width="9" height="15" fill="rgb(252,228,13)"/><text x="1057.00" y="286.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.38%)</title><rect x="1059" y="292" width="4" height="15" fill="rgb(208,27,13)"/><text x="1062.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.53%)</title><rect x="1063" y="244" width="18" height="15" fill="rgb(227,22,24)"/><text x="1066.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.76%)</title><rect x="1072" y="260" width="9" height="15" fill="rgb(214,192,40)"/><text x="1075.00" y="270.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h) (1 samples, 0.38%)</title><rect x="1077" y="276" width="4" height="15" fill="rgb(215,182,35)"/><text x="1080.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1081" y="244" width="5" height="15" fill="rgb(219,80,48)"/><text x="1084.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.29%)</title><rect x="1063" y="228" width="27" height="15" fill="rgb(238,32,12)"/><text x="1066.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.38%)</title><rect x="1086" y="244" width="4" height="15" fill="rgb(219,73,2)"/><text x="1089.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.38%)</title><rect x="1086" y="260" width="4" height="15" fill="rgb(249,198,34)"/><text x="1089.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 4.58%)</title><rect x="1041" y="212" width="54" height="15" fill="rgb(233,82,44)"/><text x="1044.00" y="222.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1090" y="228" width="5" height="15" fill="rgb(207,221,13)"/><text x="1093.00" y="238.50"></text></g><g><title>0x7fb3b0cac9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="1090" y="244" width="5" height="15" fill="rgb(240,173,35)"/><text x="1093.00" y="254.50"></text></g><g><title>0x7fb3b0ccd25c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="1090" y="260" width="5" height="15" fill="rgb(248,164,20)"/><text x="1093.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.76%)</title><rect x="1095" y="212" width="9" height="15" fill="rgb(241,125,17)"/><text x="1098.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1099" y="228" width="5" height="15" fill="rgb(241,182,15)"/><text x="1102.00" y="238.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1108" y="228" width="5" height="15" fill="rgb(212,100,28)"/><text x="1111.00" y="238.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1108" y="244" width="5" height="15" fill="rgb(235,100,13)"/><text x="1111.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 1.15%)</title><rect x="1104" y="212" width="13" height="15" fill="rgb(206,90,40)"/><text x="1107.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="1113" y="228" width="4" height="15" fill="rgb(234,140,14)"/><text x="1116.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (19 samples, 7.25%)</title><rect x="1036" y="196" width="86" height="15" fill="rgb(230,55,43)"/><text x="1039.00" y="206.50">PyUFunc_Ge..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1117" y="212" width="5" height="15" fill="rgb(253,32,27)"/><text x="1120.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (121 samples, 46.18%)</title><rect x="581" y="164" width="545" height="15" fill="rgb(223,205,51)"/><text x="584.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 7.63%)</title><rect x="1036" y="180" width="90" height="15" fill="rgb(216,129,49)"/><text x="1039.00" y="190.50">ufunc_gene..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1122" y="196" width="4" height="15" fill="rgb(243,1,25)"/><text x="1125.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.15%)</title><rect x="1158" y="196" width="13" height="15" fill="rgb(218,58,38)"/><text x="1161.00" y="206.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (141 samples, 53.82%)</title><rect x="550" y="68" width="635" height="15" fill="rgb(217,16,28)"/><text x="553.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_dou..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (141 samples, 53.82%)</title><rect x="550" y="84" width="635" height="15" fill="rgb(217,6,28)"/><text x="553.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_d..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (141 samples, 53.82%)</title><rect x="550" y="100" width="635" height="15" fill="rgb(226,86,29)"/><text x="553.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (140 samples, 53.44%)</title><rect x="554" y="116" width="631" height="15" fill="rgb(246,27,26)"/><text x="557.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 53.05%)</title><rect x="559" y="132" width="626" height="15" fill="rgb(235,221,45)"/><text x="562.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (139 samples, 53.05%)</title><rect x="559" y="148" width="626" height="15" fill="rgb(250,70,41)"/><text x="562.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 4.96%)</title><rect x="1126" y="164" width="59" height="15" fill="rgb(211,51,17)"/><text x="1129.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 3.82%)</title><rect x="1140" y="180" width="45" height="15" fill="rgb(233,61,52)"/><text x="1143.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.15%)</title><rect x="1171" y="196" width="14" height="15" fill="rgb(231,29,37)"/><text x="1174.00" y="206.50"></text></g><g><title>all (262 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,1,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (262 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,49,38)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1_4_12_double_.py) (1 samples, 0.38%)</title><rect x="1185" y="68" width="5" height="15" fill="rgb(205,26,5)"/><text x="1188.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (1 samples, 0.38%)</title><rect x="1185" y="84" width="5" height="15" fill="rgb(237,46,51)"/><text x="1188.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(215,58,23)"/><text x="1188.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(229,190,35)"/><text x="1188.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.38%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(217,195,38)"/><text x="1188.00" y="142.50"></text></g><g><title>array_true_divide (number.c) (1 samples, 0.38%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(224,39,17)"/><text x="1188.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(222,154,47)"/><text x="1188.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(226,51,22)"/><text x="1188.00" y="190.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(252,112,54)"/><text x="1188.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.38%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(221,179,20)"/><text x="1188.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.38%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(252,20,47)"/><text x="1188.00" y="238.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.38%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(250,150,19)"/><text x="1188.00" y="254.50"></text></g></g></svg>