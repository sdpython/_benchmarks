<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.16%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(250,65,51)"/><text x="13.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(226,220,25)"/><text x="13.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(233,222,16)"/><text x="13.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.16%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(215,182,40)"/><text x="13.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.16%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(241,185,53)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f69a6e099dd (?) (1 samples, 0.16%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(234,113,49)"/><text x="13.00" y="254.50"></text></g><g><title>0x7f69a6e2a265 (?) (1 samples, 0.16%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(225,26,29)"/><text x="13.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.16%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(213,115,51)"/><text x="13.00" y="286.50"></text></g><g><title>0x7f69c4b4f1b0 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(206,57,12)"/><text x="13.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="11" y="292" width="2" height="15" fill="rgb(228,12,12)"/><text x="14.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3055) (1 samples, 0.16%)</title><rect x="11" y="308" width="2" height="15" fill="rgb(229,162,11)"/><text x="14.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:18) (3 samples, 0.49%)</title><rect x="10" y="100" width="5" height="15" fill="rgb(220,208,24)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.49%)</title><rect x="10" y="116" width="5" height="15" fill="rgb(223,97,42)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.49%)</title><rect x="10" y="132" width="5" height="15" fill="rgb(222,194,10)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.49%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(251,204,53)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.32%)</title><rect x="11" y="164" width="4" height="15" fill="rgb(220,156,6)"/><text x="14.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.32%)</title><rect x="11" y="180" width="4" height="15" fill="rgb(252,152,2)"/><text x="14.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.32%)</title><rect x="11" y="196" width="4" height="15" fill="rgb(239,204,9)"/><text x="14.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.32%)</title><rect x="11" y="212" width="4" height="15" fill="rgb(207,61,35)"/><text x="14.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.32%)</title><rect x="11" y="228" width="4" height="15" fill="rgb(222,126,39)"/><text x="14.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.32%)</title><rect x="11" y="244" width="4" height="15" fill="rgb(243,114,18)"/><text x="14.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.32%)</title><rect x="11" y="260" width="4" height="15" fill="rgb(224,78,49)"/><text x="14.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.32%)</title><rect x="11" y="276" width="4" height="15" fill="rgb(212,64,2)"/><text x="14.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.16%)</title><rect x="13" y="292" width="2" height="15" fill="rgb(250,39,10)"/><text x="16.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.16%)</title><rect x="13" y="308" width="2" height="15" fill="rgb(246,134,15)"/><text x="16.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2732) (1 samples, 0.16%)</title><rect x="13" y="324" width="2" height="15" fill="rgb(246,44,15)"/><text x="16.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="19" y="180" width="2" height="15" fill="rgb(233,130,53)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.65%)</title><rect x="21" y="180" width="8" height="15" fill="rgb(210,219,7)"/><text x="24.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 0.97%)</title><rect x="19" y="148" width="12" height="15" fill="rgb(238,25,34)"/><text x="22.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.97%)</title><rect x="19" y="164" width="12" height="15" fill="rgb(253,100,4)"/><text x="22.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="29" y="180" width="2" height="15" fill="rgb(235,0,17)"/><text x="32.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.32%)</title><rect x="31" y="212" width="3" height="15" fill="rgb(231,144,26)"/><text x="34.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(224,175,5)"/><text x="35.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.49%)</title><rect x="31" y="180" width="5" height="15" fill="rgb(242,185,2)"/><text x="34.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.49%)</title><rect x="31" y="196" width="5" height="15" fill="rgb(205,34,3)"/><text x="34.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="34" y="212" width="2" height="15" fill="rgb(220,23,5)"/><text x="37.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="34" y="228" width="2" height="15" fill="rgb(250,54,36)"/><text x="37.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.16%)</title><rect x="36" y="196" width="2" height="15" fill="rgb(224,157,36)"/><text x="39.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.32%)</title><rect x="38" y="196" width="4" height="15" fill="rgb(215,138,34)"/><text x="41.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.16%)</title><rect x="40" y="212" width="2" height="15" fill="rgb(230,106,29)"/><text x="43.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.32%)</title><rect x="42" y="196" width="4" height="15" fill="rgb(231,124,31)"/><text x="45.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.32%)</title><rect x="42" y="212" width="4" height="15" fill="rgb(221,114,25)"/><text x="45.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.32%)</title><rect x="46" y="196" width="4" height="15" fill="rgb(253,90,35)"/><text x="49.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.16%)</title><rect x="50" y="212" width="2" height="15" fill="rgb(209,97,53)"/><text x="53.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.16%)</title><rect x="50" y="228" width="2" height="15" fill="rgb(210,108,22)"/><text x="53.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.32%)</title><rect x="50" y="196" width="3" height="15" fill="rgb(235,182,29)"/><text x="53.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.16%)</title><rect x="52" y="212" width="1" height="15" fill="rgb(207,138,20)"/><text x="55.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.16%)</title><rect x="52" y="228" width="1" height="15" fill="rgb(224,108,27)"/><text x="55.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (11 samples, 1.78%)</title><rect x="36" y="180" width="21" height="15" fill="rgb(252,224,48)"/><text x="39.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.32%)</title><rect x="53" y="196" width="4" height="15" fill="rgb(244,17,30)"/><text x="56.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.32%)</title><rect x="53" y="212" width="4" height="15" fill="rgb(238,224,23)"/><text x="56.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.32%)</title><rect x="57" y="260" width="4" height="15" fill="rgb(226,13,53)"/><text x="60.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.32%)</title><rect x="57" y="276" width="4" height="15" fill="rgb(235,78,38)"/><text x="60.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.32%)</title><rect x="57" y="292" width="4" height="15" fill="rgb(209,141,3)"/><text x="60.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.32%)</title><rect x="57" y="308" width="4" height="15" fill="rgb(205,65,47)"/><text x="60.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.32%)</title><rect x="57" y="324" width="4" height="15" fill="rgb(251,159,48)"/><text x="60.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.32%)</title><rect x="57" y="340" width="4" height="15" fill="rgb(241,101,26)"/><text x="60.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.32%)</title><rect x="57" y="356" width="4" height="15" fill="rgb(206,29,6)"/><text x="60.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.32%)</title><rect x="57" y="372" width="4" height="15" fill="rgb(228,174,22)"/><text x="60.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.32%)</title><rect x="57" y="388" width="4" height="15" fill="rgb(220,195,29)"/><text x="60.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.32%)</title><rect x="57" y="404" width="4" height="15" fill="rgb(206,174,8)"/><text x="60.00" y="414.50"></text></g><g><title>0x7f69c4a05700 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="57" y="420" width="4" height="15" fill="rgb(236,94,35)"/><text x="60.00" y="430.50"></text></g><g><title>0x7f69c4a02aa4 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="57" y="436" width="4" height="15" fill="rgb(219,156,46)"/><text x="60.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.32%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(213,73,42)"/><text x="64.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.49%)</title><rect x="61" y="260" width="6" height="15" fill="rgb(213,206,34)"/><text x="64.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.49%)</title><rect x="61" y="276" width="6" height="15" fill="rgb(208,70,8)"/><text x="64.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.49%)</title><rect x="61" y="292" width="6" height="15" fill="rgb(206,218,22)"/><text x="64.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(249,126,47)"/><text x="68.00" y="318.50"></text></g><g><title>0x7f69c4a23d5f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="65" y="324" width="2" height="15" fill="rgb(207,14,48)"/><text x="68.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.16%)</title><rect x="67" y="260" width="2" height="15" fill="rgb(254,190,31)"/><text x="70.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(254,3,10)"/><text x="70.00" y="286.50"></text></g><g><title>array_add (number.c:330) (8 samples, 1.29%)</title><rect x="57" y="196" width="16" height="15" fill="rgb(229,225,2)"/><text x="60.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.29%)</title><rect x="57" y="212" width="16" height="15" fill="rgb(226,17,26)"/><text x="60.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.29%)</title><rect x="57" y="228" width="16" height="15" fill="rgb(234,202,48)"/><text x="60.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.29%)</title><rect x="57" y="244" width="16" height="15" fill="rgb(209,92,43)"/><text x="60.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.32%)</title><rect x="69" y="260" width="4" height="15" fill="rgb(229,57,2)"/><text x="72.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.32%)</title><rect x="69" y="276" width="4" height="15" fill="rgb(253,56,16)"/><text x="72.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.32%)</title><rect x="69" y="292" width="4" height="15" fill="rgb(235,147,21)"/><text x="72.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.32%)</title><rect x="69" y="308" width="4" height="15" fill="rgb(239,34,6)"/><text x="72.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.32%)</title><rect x="69" y="324" width="4" height="15" fill="rgb(253,171,6)"/><text x="72.00" y="334.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(225,20,44)"/><text x="77.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.10%)</title><rect x="76" y="212" width="25" height="15" fill="rgb(216,11,39)"/><text x="79.00" y="222.50">d..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.16%)</title><rect x="101" y="276" width="2" height="15" fill="rgb(239,212,17)"/><text x="104.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.16%)</title><rect x="101" y="292" width="2" height="15" fill="rgb(248,207,12)"/><text x="104.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="101" y="308" width="2" height="15" fill="rgb(231,27,13)"/><text x="104.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="101" y="324" width="2" height="15" fill="rgb(246,225,18)"/><text x="104.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.16%)</title><rect x="101" y="340" width="2" height="15" fill="rgb(219,12,41)"/><text x="104.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.16%)</title><rect x="101" y="356" width="2" height="15" fill="rgb(245,137,7)"/><text x="104.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="101" y="372" width="2" height="15" fill="rgb(222,142,24)"/><text x="104.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:306) (1 samples, 0.16%)</title><rect x="103" y="292" width="2" height="15" fill="rgb(218,140,20)"/><text x="106.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:695) (1 samples, 0.16%)</title><rect x="103" y="308" width="2" height="15" fill="rgb(217,113,4)"/><text x="106.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (14 samples, 2.27%)</title><rect x="101" y="244" width="27" height="15" fill="rgb(254,103,50)"/><text x="104.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (14 samples, 2.27%)</title><rect x="101" y="260" width="27" height="15" fill="rgb(215,38,26)"/><text x="104.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (13 samples, 2.10%)</title><rect x="103" y="276" width="25" height="15" fill="rgb(240,73,35)"/><text x="106.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (12 samples, 1.94%)</title><rect x="105" y="292" width="23" height="15" fill="rgb(234,92,31)"/><text x="108.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (12 samples, 1.94%)</title><rect x="105" y="308" width="23" height="15" fill="rgb(243,199,17)"/><text x="108.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (12 samples, 1.94%)</title><rect x="105" y="324" width="23" height="15" fill="rgb(220,222,32)"/><text x="108.00" y="334.50">_..</text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(232,134,53)"/><text x="131.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(254,14,49)"/><text x="131.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (67 samples, 10.84%)</title><rect x="31" y="164" width="127" height="15" fill="rgb(207,193,51)"/><text x="34.00" y="174.50">_predict_proba_..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (53 samples, 8.58%)</title><rect x="57" y="180" width="101" height="15" fill="rgb(234,155,28)"/><text x="60.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (45 samples, 7.28%)</title><rect x="73" y="196" width="85" height="15" fill="rgb(236,88,8)"/><text x="76.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 4.85%)</title><rect x="101" y="212" width="57" height="15" fill="rgb(207,180,51)"/><text x="104.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (30 samples, 4.85%)</title><rect x="101" y="228" width="57" height="15" fill="rgb(210,22,5)"/><text x="104.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (16 samples, 2.59%)</title><rect x="128" y="244" width="30" height="15" fill="rgb(243,152,16)"/><text x="131.00" y="254.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (16 samples, 2.59%)</title><rect x="128" y="260" width="30" height="15" fill="rgb(215,124,47)"/><text x="131.00" y="270.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.59%)</title><rect x="128" y="276" width="30" height="15" fill="rgb(226,218,40)"/><text x="131.00" y="286.50">cb..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.43%)</title><rect x="130" y="292" width="28" height="15" fill="rgb(244,173,8)"/><text x="133.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.43%)</title><rect x="130" y="308" width="28" height="15" fill="rgb(216,49,27)"/><text x="133.00" y="318.50">d..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.16%)</title><rect x="160" y="196" width="2" height="15" fill="rgb(240,46,40)"/><text x="163.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.16%)</title><rect x="160" y="212" width="2" height="15" fill="rgb(212,15,9)"/><text x="163.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:919) (1 samples, 0.16%)</title><rect x="160" y="228" width="2" height="15" fill="rgb(242,185,23)"/><text x="163.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.16%)</title><rect x="162" y="196" width="2" height="15" fill="rgb(219,211,39)"/><text x="165.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.16%)</title><rect x="162" y="212" width="2" height="15" fill="rgb(222,164,32)"/><text x="165.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.16%)</title><rect x="164" y="212" width="2" height="15" fill="rgb(243,43,36)"/><text x="167.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.16%)</title><rect x="164" y="228" width="2" height="15" fill="rgb(231,98,50)"/><text x="167.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.16%)</title><rect x="164" y="244" width="2" height="15" fill="rgb(232,152,47)"/><text x="167.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.16%)</title><rect x="164" y="260" width="2" height="15" fill="rgb(236,203,8)"/><text x="167.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:446) (1 samples, 0.16%)</title><rect x="164" y="276" width="2" height="15" fill="rgb(211,151,3)"/><text x="167.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h:44) (1 samples, 0.16%)</title><rect x="164" y="292" width="2" height="15" fill="rgb(251,143,1)"/><text x="167.00" y="302.50"></text></g><g><title>0x7f69a6e2a254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="166" y="260" width="2" height="15" fill="rgb(233,29,17)"/><text x="169.00" y="270.50"></text></g><g><title>0x7f69c4bd5bb4 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="172" y="292" width="2" height="15" fill="rgb(234,183,18)"/><text x="175.00" y="302.50"></text></g><g><title>0x7f69c4bd5bd3 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="174" y="292" width="2" height="15" fill="rgb(242,191,46)"/><text x="177.00" y="302.50"></text></g><g><title>0x7f69c4bd5be7 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="176" y="292" width="3" height="15" fill="rgb(236,97,43)"/><text x="179.00" y="302.50"></text></g><g><title>0x7f69c4bd5c2e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="179" y="292" width="2" height="15" fill="rgb(218,43,20)"/><text x="182.00" y="302.50"></text></g><g><title>0x7f69a6e2a265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.29%)</title><rect x="168" y="260" width="15" height="15" fill="rgb(243,141,27)"/><text x="171.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.29%)</title><rect x="168" y="276" width="15" height="15" fill="rgb(242,130,2)"/><text x="171.00" y="286.50"></text></g><g><title>0x7f69c4bd5c56 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="181" y="292" width="2" height="15" fill="rgb(231,222,50)"/><text x="184.00" y="302.50"></text></g><g><title>0x7f69a6e2a275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="183" y="260" width="2" height="15" fill="rgb(231,80,27)"/><text x="186.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (22 samples, 3.56%)</title><rect x="158" y="164" width="42" height="15" fill="rgb(220,113,50)"/><text x="161.00" y="174.50">_pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 3.40%)</title><rect x="160" y="180" width="40" height="15" fill="rgb(220,58,21)"/><text x="163.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 3.07%)</title><rect x="164" y="196" width="36" height="15" fill="rgb(239,128,9)"/><text x="167.00" y="206.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (18 samples, 2.91%)</title><rect x="166" y="212" width="34" height="15" fill="rgb(251,82,43)"/><text x="169.00" y="222.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (18 samples, 2.91%)</title><rect x="166" y="228" width="34" height="15" fill="rgb(232,68,54)"/><text x="169.00" y="238.50">tr..</text></g><g><title>0x7f69a6e099dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.91%)</title><rect x="166" y="244" width="34" height="15" fill="rgb(250,153,49)"/><text x="169.00" y="254.50">0x..</text></g><g><title>0x7f69a6e2a279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.29%)</title><rect x="185" y="260" width="15" height="15" fill="rgb(220,183,30)"/><text x="188.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.16%)</title><rect x="200" y="308" width="2" height="15" fill="rgb(236,217,33)"/><text x="203.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="200" y="324" width="2" height="15" fill="rgb(207,125,47)"/><text x="203.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.32%)</title><rect x="200" y="228" width="4" height="15" fill="rgb(211,43,15)"/><text x="203.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.32%)</title><rect x="200" y="244" width="4" height="15" fill="rgb(228,68,6)"/><text x="203.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.32%)</title><rect x="200" y="260" width="4" height="15" fill="rgb(231,111,2)"/><text x="203.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.32%)</title><rect x="200" y="276" width="4" height="15" fill="rgb(252,11,38)"/><text x="203.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.32%)</title><rect x="200" y="292" width="4" height="15" fill="rgb(233,150,44)"/><text x="203.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.16%)</title><rect x="202" y="308" width="2" height="15" fill="rgb(252,43,12)"/><text x="205.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.16%)</title><rect x="204" y="260" width="2" height="15" fill="rgb(220,205,34)"/><text x="207.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.16%)</title><rect x="204" y="276" width="2" height="15" fill="rgb(243,134,22)"/><text x="207.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.16%)</title><rect x="204" y="292" width="2" height="15" fill="rgb(238,161,34)"/><text x="207.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.16%)</title><rect x="204" y="308" width="2" height="15" fill="rgb(228,3,21)"/><text x="207.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1721) (1 samples, 0.16%)</title><rect x="204" y="324" width="2" height="15" fill="rgb(229,148,31)"/><text x="207.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.16%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(208,120,33)"/><text x="209.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.16%)</title><rect x="206" y="292" width="2" height="15" fill="rgb(211,84,36)"/><text x="209.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.16%)</title><rect x="206" y="308" width="2" height="15" fill="rgb(214,104,37)"/><text x="209.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.16%)</title><rect x="206" y="324" width="2" height="15" fill="rgb(218,134,19)"/><text x="209.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="206" y="340" width="2" height="15" fill="rgb(213,137,28)"/><text x="209.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.16%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(223,172,29)"/><text x="211.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.16%)</title><rect x="208" y="308" width="2" height="15" fill="rgb(236,177,10)"/><text x="211.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.16%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(211,192,17)"/><text x="213.00" y="302.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.16%)</title><rect x="218" y="324" width="2" height="15" fill="rgb(253,185,15)"/><text x="221.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.49%)</title><rect x="216" y="308" width="5" height="15" fill="rgb(222,229,49)"/><text x="219.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="220" y="324" width="1" height="15" fill="rgb(222,135,44)"/><text x="223.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 1.29%)</title><rect x="208" y="276" width="15" height="15" fill="rgb(227,5,22)"/><text x="211.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.97%)</title><rect x="212" y="292" width="11" height="15" fill="rgb(250,70,15)"/><text x="215.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.16%)</title><rect x="221" y="308" width="2" height="15" fill="rgb(214,86,40)"/><text x="224.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 2.10%)</title><rect x="200" y="180" width="25" height="15" fill="rgb(221,212,23)"/><text x="203.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.10%)</title><rect x="200" y="196" width="25" height="15" fill="rgb(252,47,9)"/><text x="203.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 2.10%)</title><rect x="200" y="212" width="25" height="15" fill="rgb(242,146,9)"/><text x="203.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 1.78%)</title><rect x="204" y="228" width="21" height="15" fill="rgb(253,206,3)"/><text x="207.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.78%)</title><rect x="204" y="244" width="21" height="15" fill="rgb(223,204,51)"/><text x="207.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.62%)</title><rect x="206" y="260" width="19" height="15" fill="rgb(253,65,38)"/><text x="209.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.16%)</title><rect x="223" y="276" width="2" height="15" fill="rgb(251,11,44)"/><text x="226.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.16%)</title><rect x="223" y="292" width="2" height="15" fill="rgb(218,183,40)"/><text x="226.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="225" y="228" width="2" height="15" fill="rgb(236,25,28)"/><text x="228.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="225" y="244" width="2" height="15" fill="rgb(241,171,35)"/><text x="228.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.16%)</title><rect x="225" y="260" width="2" height="15" fill="rgb(236,102,36)"/><text x="228.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.32%)</title><rect x="227" y="276" width="4" height="15" fill="rgb(221,83,48)"/><text x="230.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.65%)</title><rect x="227" y="228" width="8" height="15" fill="rgb(238,45,54)"/><text x="230.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.65%)</title><rect x="227" y="244" width="8" height="15" fill="rgb(206,117,34)"/><text x="230.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.65%)</title><rect x="227" y="260" width="8" height="15" fill="rgb(237,182,37)"/><text x="230.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.32%)</title><rect x="231" y="276" width="4" height="15" fill="rgb(221,118,9)"/><text x="234.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="233" y="292" width="2" height="15" fill="rgb(226,146,46)"/><text x="236.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:38) (120 samples, 19.42%)</title><rect x="10" y="52" width="229" height="15" fill="rgb(231,165,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegres..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:37) (120 samples, 19.42%)</title><rect x="10" y="68" width="229" height="15" fill="rgb(242,191,18)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:29) (120 samples, 19.42%)</title><rect x="10" y="84" width="229" height="15" fill="rgb(219,185,16)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:23) (117 samples, 18.93%)</title><rect x="15" y="100" width="224" height="15" fill="rgb(209,95,44)"/><text x="18.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (116 samples, 18.77%)</title><rect x="17" y="116" width="222" height="15" fill="rgb(231,65,47)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (115 samples, 18.61%)</title><rect x="19" y="132" width="220" height="15" fill="rgb(238,62,19)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (109 samples, 17.64%)</title><rect x="31" y="148" width="208" height="15" fill="rgb(229,49,6)"/><text x="34.00" y="158.50">predict_proba (sklearn/line..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (20 samples, 3.24%)</title><rect x="200" y="164" width="39" height="15" fill="rgb(212,132,3)"/><text x="203.00" y="174.50">_pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.13%)</title><rect x="225" y="180" width="14" height="15" fill="rgb(211,76,50)"/><text x="228.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.13%)</title><rect x="225" y="196" width="14" height="15" fill="rgb(243,29,33)"/><text x="228.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.13%)</title><rect x="225" y="212" width="14" height="15" fill="rgb(235,53,39)"/><text x="228.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.32%)</title><rect x="235" y="228" width="4" height="15" fill="rgb(247,159,51)"/><text x="238.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.32%)</title><rect x="235" y="244" width="4" height="15" fill="rgb(242,85,31)"/><text x="238.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.32%)</title><rect x="235" y="260" width="4" height="15" fill="rgb(250,198,31)"/><text x="238.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.32%)</title><rect x="235" y="276" width="4" height="15" fill="rgb(213,128,31)"/><text x="238.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.32%)</title><rect x="235" y="292" width="4" height="15" fill="rgb(253,109,6)"/><text x="238.00" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1362) (1 samples, 0.16%)</title><rect x="239" y="964" width="2" height="15" fill="rgb(226,36,24)"/><text x="242.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (2 samples, 0.32%)</title><rect x="239" y="148" width="3" height="15" fill="rgb(248,206,4)"/><text x="242.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="164" width="3" height="15" fill="rgb(253,181,38)"/><text x="242.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="239" y="180" width="3" height="15" fill="rgb(227,203,47)"/><text x="242.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="196" width="3" height="15" fill="rgb(244,203,21)"/><text x="242.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="212" width="3" height="15" fill="rgb(245,112,44)"/><text x="242.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="228" width="3" height="15" fill="rgb(247,214,32)"/><text x="242.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="244" width="3" height="15" fill="rgb(246,23,20)"/><text x="242.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="260" width="3" height="15" fill="rgb(241,113,1)"/><text x="242.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="276" width="3" height="15" fill="rgb(246,218,31)"/><text x="242.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.32%)</title><rect x="239" y="292" width="3" height="15" fill="rgb(234,36,44)"/><text x="242.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="308" width="3" height="15" fill="rgb(246,119,21)"/><text x="242.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="324" width="3" height="15" fill="rgb(226,10,41)"/><text x="242.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="340" width="3" height="15" fill="rgb(236,88,53)"/><text x="242.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="356" width="3" height="15" fill="rgb(228,125,6)"/><text x="242.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="372" width="3" height="15" fill="rgb(227,150,13)"/><text x="242.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.32%)</title><rect x="239" y="388" width="3" height="15" fill="rgb(208,108,14)"/><text x="242.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="404" width="3" height="15" fill="rgb(235,92,4)"/><text x="242.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="420" width="3" height="15" fill="rgb(219,210,26)"/><text x="242.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="436" width="3" height="15" fill="rgb(239,186,51)"/><text x="242.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="452" width="3" height="15" fill="rgb(229,119,8)"/><text x="242.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="468" width="3" height="15" fill="rgb(219,47,53)"/><text x="242.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.32%)</title><rect x="239" y="484" width="3" height="15" fill="rgb(247,215,24)"/><text x="242.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="500" width="3" height="15" fill="rgb(251,99,26)"/><text x="242.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="516" width="3" height="15" fill="rgb(209,213,7)"/><text x="242.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="532" width="3" height="15" fill="rgb(214,141,52)"/><text x="242.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="548" width="3" height="15" fill="rgb(232,53,43)"/><text x="242.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="564" width="3" height="15" fill="rgb(230,12,5)"/><text x="242.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.32%)</title><rect x="239" y="580" width="3" height="15" fill="rgb(247,83,27)"/><text x="242.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="596" width="3" height="15" fill="rgb(229,38,16)"/><text x="242.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="239" y="612" width="3" height="15" fill="rgb(239,0,23)"/><text x="242.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="628" width="3" height="15" fill="rgb(205,197,11)"/><text x="242.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="644" width="3" height="15" fill="rgb(248,123,52)"/><text x="242.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="660" width="3" height="15" fill="rgb(234,39,2)"/><text x="242.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="676" width="3" height="15" fill="rgb(210,199,8)"/><text x="242.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="692" width="3" height="15" fill="rgb(219,38,54)"/><text x="242.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="708" width="3" height="15" fill="rgb(231,157,37)"/><text x="242.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.32%)</title><rect x="239" y="724" width="3" height="15" fill="rgb(228,228,9)"/><text x="242.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="239" y="740" width="3" height="15" fill="rgb(254,225,35)"/><text x="242.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="239" y="756" width="3" height="15" fill="rgb(237,147,18)"/><text x="242.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="239" y="772" width="3" height="15" fill="rgb(248,134,41)"/><text x="242.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="239" y="788" width="3" height="15" fill="rgb(215,63,14)"/><text x="242.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="239" y="804" width="3" height="15" fill="rgb(219,147,34)"/><text x="242.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.32%)</title><rect x="239" y="820" width="3" height="15" fill="rgb(249,54,26)"/><text x="242.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.32%)</title><rect x="239" y="836" width="3" height="15" fill="rgb(211,85,26)"/><text x="242.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.32%)</title><rect x="239" y="852" width="3" height="15" fill="rgb(226,44,39)"/><text x="242.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.32%)</title><rect x="239" y="868" width="3" height="15" fill="rgb(247,45,36)"/><text x="242.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.32%)</title><rect x="239" y="884" width="3" height="15" fill="rgb(248,83,17)"/><text x="242.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.32%)</title><rect x="239" y="900" width="3" height="15" fill="rgb(252,147,38)"/><text x="242.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.32%)</title><rect x="239" y="916" width="3" height="15" fill="rgb(230,114,8)"/><text x="242.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.32%)</title><rect x="239" y="932" width="3" height="15" fill="rgb(213,15,21)"/><text x="242.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.32%)</title><rect x="239" y="948" width="3" height="15" fill="rgb(245,163,38)"/><text x="242.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.16%)</title><rect x="241" y="964" width="1" height="15" fill="rgb(226,97,49)"/><text x="244.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.16%)</title><rect x="241" y="980" width="1" height="15" fill="rgb(213,8,4)"/><text x="244.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.16%)</title><rect x="241" y="996" width="1" height="15" fill="rgb(219,152,52)"/><text x="244.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.16%)</title><rect x="241" y="1012" width="1" height="15" fill="rgb(211,100,35)"/><text x="244.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="241" y="1028" width="1" height="15" fill="rgb(238,225,39)"/><text x="244.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="241" y="1044" width="1" height="15" fill="rgb(223,27,33)"/><text x="244.00" y="1054.50"></text></g><g><title>0x7f69b124940e (?) (1 samples, 0.16%)</title><rect x="242" y="772" width="2" height="15" fill="rgb(245,207,37)"/><text x="245.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="788" width="2" height="15" fill="rgb(249,182,30)"/><text x="245.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="804" width="2" height="15" fill="rgb(254,21,45)"/><text x="245.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="820" width="2" height="15" fill="rgb(237,158,36)"/><text x="245.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="836" width="2" height="15" fill="rgb(214,190,50)"/><text x="245.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="852" width="2" height="15" fill="rgb(229,12,42)"/><text x="245.00" y="862.50"></text></g><g><title>0x7f69b1002cd2 (?) (1 samples, 0.16%)</title><rect x="242" y="868" width="2" height="15" fill="rgb(223,119,14)"/><text x="245.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="884" width="2" height="15" fill="rgb(236,107,5)"/><text x="245.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="900" width="2" height="15" fill="rgb(249,41,52)"/><text x="245.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="916" width="2" height="15" fill="rgb(249,5,32)"/><text x="245.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="932" width="2" height="15" fill="rgb(217,15,31)"/><text x="245.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="948" width="2" height="15" fill="rgb(247,124,15)"/><text x="245.00" y="958.50"></text></g><g><title>0x7f69b06f80e5 (?) (1 samples, 0.16%)</title><rect x="242" y="964" width="2" height="15" fill="rgb(209,61,25)"/><text x="245.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="980" width="2" height="15" fill="rgb(220,55,42)"/><text x="245.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="996" width="2" height="15" fill="rgb(208,68,0)"/><text x="245.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="1012" width="2" height="15" fill="rgb(216,227,6)"/><text x="245.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="1028" width="2" height="15" fill="rgb(212,62,19)"/><text x="245.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="1044" width="2" height="15" fill="rgb(236,207,34)"/><text x="245.00" y="1054.50"></text></g><g><title>0x7f69b047ce68 (?) (1 samples, 0.16%)</title><rect x="242" y="1060" width="2" height="15" fill="rgb(222,65,23)"/><text x="245.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="1076" width="2" height="15" fill="rgb(229,137,27)"/><text x="245.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="1092" width="2" height="15" fill="rgb(226,98,47)"/><text x="245.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="1108" width="2" height="15" fill="rgb(250,136,41)"/><text x="245.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="1124" width="2" height="15" fill="rgb(248,96,30)"/><text x="245.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="1140" width="2" height="15" fill="rgb(212,218,51)"/><text x="245.00" y="1150.50"></text></g><g><title>0x7f69b020d2fb (?) (1 samples, 0.16%)</title><rect x="242" y="1156" width="2" height="15" fill="rgb(221,171,30)"/><text x="245.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="1172" width="2" height="15" fill="rgb(239,123,33)"/><text x="245.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="1188" width="2" height="15" fill="rgb(217,169,7)"/><text x="245.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="1204" width="2" height="15" fill="rgb(220,203,21)"/><text x="245.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="1220" width="2" height="15" fill="rgb(243,54,48)"/><text x="245.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="1236" width="2" height="15" fill="rgb(237,190,52)"/><text x="245.00" y="1246.50"></text></g><g><title>0x7f69afff1153 (?) (1 samples, 0.16%)</title><rect x="242" y="1252" width="2" height="15" fill="rgb(209,146,4)"/><text x="245.00" y="1262.50"></text></g><g><title>0x7f69affefc13 (?) (1 samples, 0.16%)</title><rect x="242" y="1268" width="2" height="15" fill="rgb(237,123,54)"/><text x="245.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="242" y="1284" width="2" height="15" fill="rgb(249,174,17)"/><text x="245.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="242" y="1300" width="2" height="15" fill="rgb(225,229,51)"/><text x="245.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="242" y="1316" width="2" height="15" fill="rgb(224,162,34)"/><text x="245.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="242" y="1332" width="2" height="15" fill="rgb(210,161,50)"/><text x="245.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="242" y="1348" width="2" height="15" fill="rgb(238,229,25)"/><text x="245.00" y="1358.50"></text></g><g><title>0x7f69afd8c181 (?) (1 samples, 0.16%)</title><rect x="242" y="1364" width="2" height="15" fill="rgb(211,40,33)"/><text x="245.00" y="1374.50"></text></g><g><title>0x7f69afd8f1c9 (?) (1 samples, 0.16%)</title><rect x="242" y="1380" width="2" height="15" fill="rgb(229,146,51)"/><text x="245.00" y="1390.50"></text></g><g><title>0x7f69afdbb167 (?) (1 samples, 0.16%)</title><rect x="242" y="1396" width="2" height="15" fill="rgb(240,125,54)"/><text x="245.00" y="1406.50"></text></g><g><title>0x7f69afdb6b64 (?) (1 samples, 0.16%)</title><rect x="242" y="1412" width="2" height="15" fill="rgb(245,41,3)"/><text x="245.00" y="1422.50"></text></g><g><title>0x7f69afd9a07b (?) (1 samples, 0.16%)</title><rect x="242" y="1428" width="2" height="15" fill="rgb(225,48,7)"/><text x="245.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.16%)</title><rect x="242" y="1444" width="2" height="15" fill="rgb(221,74,20)"/><text x="245.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.16%)</title><rect x="242" y="1460" width="2" height="15" fill="rgb(242,46,52)"/><text x="245.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.16%)</title><rect x="242" y="1476" width="2" height="15" fill="rgb(246,93,37)"/><text x="245.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.16%)</title><rect x="242" y="1492" width="2" height="15" fill="rgb(218,171,28)"/><text x="245.00" y="1502.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="242" y="1508" width="2" height="15" fill="rgb(222,56,17)"/><text x="245.00" y="1518.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.32%)</title><rect x="242" y="484" width="4" height="15" fill="rgb(251,0,31)"/><text x="245.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="242" y="500" width="4" height="15" fill="rgb(214,86,13)"/><text x="245.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="242" y="516" width="4" height="15" fill="rgb(231,87,0)"/><text x="245.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="242" y="532" width="4" height="15" fill="rgb(248,140,18)"/><text x="245.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="242" y="548" width="4" height="15" fill="rgb(251,186,49)"/><text x="245.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="242" y="564" width="4" height="15" fill="rgb(247,173,2)"/><text x="245.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.32%)</title><rect x="242" y="580" width="4" height="15" fill="rgb(234,45,39)"/><text x="245.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="242" y="596" width="4" height="15" fill="rgb(209,148,22)"/><text x="245.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="242" y="612" width="4" height="15" fill="rgb(231,5,19)"/><text x="245.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="242" y="628" width="4" height="15" fill="rgb(208,62,45)"/><text x="245.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="242" y="644" width="4" height="15" fill="rgb(252,200,5)"/><text x="245.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="242" y="660" width="4" height="15" fill="rgb(215,48,25)"/><text x="245.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (2 samples, 0.32%)</title><rect x="242" y="676" width="4" height="15" fill="rgb(247,87,25)"/><text x="245.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="242" y="692" width="4" height="15" fill="rgb(243,177,41)"/><text x="245.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="242" y="708" width="4" height="15" fill="rgb(225,158,8)"/><text x="245.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="242" y="724" width="4" height="15" fill="rgb(235,53,16)"/><text x="245.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.32%)</title><rect x="242" y="740" width="4" height="15" fill="rgb(206,131,16)"/><text x="245.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="242" y="756" width="4" height="15" fill="rgb(231,87,30)"/><text x="245.00" y="766.50"></text></g><g><title>0x7f69b124940e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="772" width="2" height="15" fill="rgb(239,190,25)"/><text x="247.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="788" width="2" height="15" fill="rgb(207,89,1)"/><text x="247.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="804" width="2" height="15" fill="rgb(246,227,42)"/><text x="247.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="820" width="2" height="15" fill="rgb(231,179,16)"/><text x="247.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="836" width="2" height="15" fill="rgb(224,177,25)"/><text x="247.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="852" width="2" height="15" fill="rgb(224,86,34)"/><text x="247.00" y="862.50"></text></g><g><title>0x7f69b1002cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="868" width="2" height="15" fill="rgb(254,108,42)"/><text x="247.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="884" width="2" height="15" fill="rgb(225,118,49)"/><text x="247.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="900" width="2" height="15" fill="rgb(231,50,22)"/><text x="247.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="916" width="2" height="15" fill="rgb(220,180,14)"/><text x="247.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="932" width="2" height="15" fill="rgb(236,189,38)"/><text x="247.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="948" width="2" height="15" fill="rgb(226,67,31)"/><text x="247.00" y="958.50"></text></g><g><title>0x7f69b06f80e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="964" width="2" height="15" fill="rgb(245,220,44)"/><text x="247.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="980" width="2" height="15" fill="rgb(246,49,48)"/><text x="247.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="996" width="2" height="15" fill="rgb(250,93,52)"/><text x="247.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="1012" width="2" height="15" fill="rgb(208,227,6)"/><text x="247.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="1028" width="2" height="15" fill="rgb(216,141,13)"/><text x="247.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="1044" width="2" height="15" fill="rgb(239,76,3)"/><text x="247.00" y="1054.50"></text></g><g><title>0x7f69b047ce68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1060" width="2" height="15" fill="rgb(238,118,7)"/><text x="247.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="1076" width="2" height="15" fill="rgb(239,181,17)"/><text x="247.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="1092" width="2" height="15" fill="rgb(252,16,4)"/><text x="247.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="1108" width="2" height="15" fill="rgb(253,178,28)"/><text x="247.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="1124" width="2" height="15" fill="rgb(224,138,23)"/><text x="247.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="1140" width="2" height="15" fill="rgb(223,185,26)"/><text x="247.00" y="1150.50"></text></g><g><title>0x7f69b020d2fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1156" width="2" height="15" fill="rgb(207,119,50)"/><text x="247.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="1172" width="2" height="15" fill="rgb(219,50,24)"/><text x="247.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="1188" width="2" height="15" fill="rgb(217,183,9)"/><text x="247.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="1204" width="2" height="15" fill="rgb(240,172,42)"/><text x="247.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="1220" width="2" height="15" fill="rgb(229,219,48)"/><text x="247.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="1236" width="2" height="15" fill="rgb(253,74,36)"/><text x="247.00" y="1246.50"></text></g><g><title>0x7f69afff1153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1252" width="2" height="15" fill="rgb(239,198,4)"/><text x="247.00" y="1262.50"></text></g><g><title>0x7f69affefc13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1268" width="2" height="15" fill="rgb(217,225,39)"/><text x="247.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="244" y="1284" width="2" height="15" fill="rgb(226,32,29)"/><text x="247.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="244" y="1300" width="2" height="15" fill="rgb(250,205,32)"/><text x="247.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="244" y="1316" width="2" height="15" fill="rgb(205,58,20)"/><text x="247.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.16%)</title><rect x="244" y="1332" width="2" height="15" fill="rgb(205,37,8)"/><text x="247.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="244" y="1348" width="2" height="15" fill="rgb(228,16,39)"/><text x="247.00" y="1358.50"></text></g><g><title>0x7f69afd8c181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1364" width="2" height="15" fill="rgb(211,93,53)"/><text x="247.00" y="1374.50"></text></g><g><title>0x7f69afd8f1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1380" width="2" height="15" fill="rgb(250,46,25)"/><text x="247.00" y="1390.50"></text></g><g><title>0x7f69afdbb167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1396" width="2" height="15" fill="rgb(237,197,35)"/><text x="247.00" y="1406.50"></text></g><g><title>0x7f69afdb707f (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1412" width="2" height="15" fill="rgb(217,75,54)"/><text x="247.00" y="1422.50"></text></g><g><title>0x7f69afd9e41b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1428" width="2" height="15" fill="rgb(223,89,19)"/><text x="247.00" y="1438.50"></text></g><g><title>0x7f69afdb1728 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1444" width="2" height="15" fill="rgb(208,46,36)"/><text x="247.00" y="1454.50"></text></g><g><title>0x7f69afd9c4af (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1460" width="2" height="15" fill="rgb(246,29,33)"/><text x="247.00" y="1470.50"></text></g><g><title>0x7f69afd9b354 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="244" y="1476" width="2" height="15" fill="rgb(206,8,51)"/><text x="247.00" y="1486.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="244" y="1492" width="2" height="15" fill="rgb(207,175,34)"/><text x="247.00" y="1502.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="244" y="1508" width="2" height="15" fill="rgb(253,53,4)"/><text x="247.00" y="1518.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.16%)</title><rect x="244" y="1524" width="2" height="15" fill="rgb(212,160,54)"/><text x="247.00" y="1534.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.16%)</title><rect x="244" y="1540" width="2" height="15" fill="rgb(238,39,41)"/><text x="247.00" y="1550.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.16%)</title><rect x="244" y="1556" width="2" height="15" fill="rgb(208,12,9)"/><text x="247.00" y="1566.50"></text></g><g><title>_parse (sre_parse.py:817) (1 samples, 0.16%)</title><rect x="244" y="1572" width="2" height="15" fill="rgb(206,9,35)"/><text x="247.00" y="1582.50"></text></g><g><title>match (sre_parse.py:251) (1 samples, 0.16%)</title><rect x="244" y="1588" width="2" height="15" fill="rgb(229,178,26)"/><text x="247.00" y="1598.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.16%)</title><rect x="244" y="1604" width="2" height="15" fill="rgb(251,192,7)"/><text x="247.00" y="1614.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.16%)</title><rect x="244" y="1620" width="2" height="15" fill="rgb(205,46,51)"/><text x="247.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.16%)</title><rect x="246" y="1636" width="2" height="15" fill="rgb(253,140,28)"/><text x="249.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="246" y="1652" width="2" height="15" fill="rgb(240,149,16)"/><text x="249.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="246" y="1668" width="2" height="15" fill="rgb(248,94,47)"/><text x="249.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="246" y="1684" width="2" height="15" fill="rgb(224,27,7)"/><text x="249.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="246" y="1700" width="2" height="15" fill="rgb(214,223,16)"/><text x="249.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="246" y="1716" width="2" height="15" fill="rgb(254,96,41)"/><text x="249.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.16%)</title><rect x="246" y="1732" width="2" height="15" fill="rgb(253,163,23)"/><text x="249.00" y="1742.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="246" y="1748" width="2" height="15" fill="rgb(206,122,26)"/><text x="249.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="246" y="1764" width="2" height="15" fill="rgb(214,170,41)"/><text x="249.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="246" y="1780" width="2" height="15" fill="rgb(224,183,10)"/><text x="249.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="246" y="1796" width="2" height="15" fill="rgb(225,181,30)"/><text x="249.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="246" y="1812" width="2" height="15" fill="rgb(238,70,53)"/><text x="249.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="246" y="1828" width="2" height="15" fill="rgb(226,68,33)"/><text x="249.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="246" y="1844" width="2" height="15" fill="rgb(235,17,30)"/><text x="249.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.16%)</title><rect x="246" y="1860" width="2" height="15" fill="rgb(243,117,18)"/><text x="249.00" y="1870.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.16%)</title><rect x="246" y="1876" width="2" height="15" fill="rgb(226,223,37)"/><text x="249.00" y="1886.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.16%)</title><rect x="246" y="1892" width="2" height="15" fill="rgb(225,227,22)"/><text x="249.00" y="1902.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.16%)</title><rect x="246" y="1908" width="2" height="15" fill="rgb(215,226,51)"/><text x="249.00" y="1918.50"></text></g><g><title>search (re.py:183) (1 samples, 0.16%)</title><rect x="246" y="1924" width="2" height="15" fill="rgb(206,96,12)"/><text x="249.00" y="1934.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="246" y="1940" width="2" height="15" fill="rgb(250,181,5)"/><text x="249.00" y="1950.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.16%)</title><rect x="246" y="1956" width="2" height="15" fill="rgb(239,80,43)"/><text x="249.00" y="1966.50"></text></g><g><title>parse (sre_parse.py:925) (1 samples, 0.16%)</title><rect x="246" y="1972" width="2" height="15" fill="rgb(254,20,46)"/><text x="249.00" y="1982.50"></text></g><g><title>__init__ (sre_parse.py:77) (1 samples, 0.16%)</title><rect x="246" y="1988" width="2" height="15" fill="rgb(242,0,28)"/><text x="249.00" y="1998.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.32%)</title><rect x="246" y="868" width="4" height="15" fill="rgb(231,149,52)"/><text x="249.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="884" width="4" height="15" fill="rgb(245,195,22)"/><text x="249.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="900" width="4" height="15" fill="rgb(241,185,45)"/><text x="249.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="916" width="4" height="15" fill="rgb(239,143,15)"/><text x="249.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="932" width="4" height="15" fill="rgb(245,196,46)"/><text x="249.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="948" width="4" height="15" fill="rgb(208,71,21)"/><text x="249.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.32%)</title><rect x="246" y="964" width="4" height="15" fill="rgb(234,84,4)"/><text x="249.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="980" width="4" height="15" fill="rgb(231,171,37)"/><text x="249.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="996" width="4" height="15" fill="rgb(238,57,11)"/><text x="249.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1012" width="4" height="15" fill="rgb(225,83,38)"/><text x="249.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1028" width="4" height="15" fill="rgb(252,160,21)"/><text x="249.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1044" width="4" height="15" fill="rgb(225,181,30)"/><text x="249.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.32%)</title><rect x="246" y="1060" width="4" height="15" fill="rgb(230,64,27)"/><text x="249.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1076" width="4" height="15" fill="rgb(225,80,27)"/><text x="249.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1092" width="4" height="15" fill="rgb(216,145,12)"/><text x="249.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1108" width="4" height="15" fill="rgb(215,132,43)"/><text x="249.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1124" width="4" height="15" fill="rgb(228,23,48)"/><text x="249.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1140" width="4" height="15" fill="rgb(210,162,7)"/><text x="249.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.32%)</title><rect x="246" y="1156" width="4" height="15" fill="rgb(234,85,10)"/><text x="249.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1172" width="4" height="15" fill="rgb(228,159,11)"/><text x="249.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1188" width="4" height="15" fill="rgb(210,113,4)"/><text x="249.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1204" width="4" height="15" fill="rgb(243,48,29)"/><text x="249.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1220" width="4" height="15" fill="rgb(215,179,14)"/><text x="249.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1236" width="4" height="15" fill="rgb(249,60,11)"/><text x="249.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.32%)</title><rect x="246" y="1252" width="4" height="15" fill="rgb(228,131,44)"/><text x="249.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1268" width="4" height="15" fill="rgb(244,221,23)"/><text x="249.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1284" width="4" height="15" fill="rgb(209,196,14)"/><text x="249.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1300" width="4" height="15" fill="rgb(224,83,37)"/><text x="249.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1316" width="4" height="15" fill="rgb(251,220,2)"/><text x="249.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1332" width="4" height="15" fill="rgb(210,43,20)"/><text x="249.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.32%)</title><rect x="246" y="1348" width="4" height="15" fill="rgb(252,9,40)"/><text x="249.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1364" width="4" height="15" fill="rgb(217,126,14)"/><text x="249.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1380" width="4" height="15" fill="rgb(221,187,18)"/><text x="249.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1396" width="4" height="15" fill="rgb(232,24,27)"/><text x="249.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1412" width="4" height="15" fill="rgb(222,142,41)"/><text x="249.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1428" width="4" height="15" fill="rgb(252,86,31)"/><text x="249.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.32%)</title><rect x="246" y="1444" width="4" height="15" fill="rgb(233,14,43)"/><text x="249.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1460" width="4" height="15" fill="rgb(230,134,9)"/><text x="249.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1476" width="4" height="15" fill="rgb(210,205,25)"/><text x="249.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1492" width="4" height="15" fill="rgb(217,98,6)"/><text x="249.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1508" width="4" height="15" fill="rgb(215,194,28)"/><text x="249.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1524" width="4" height="15" fill="rgb(218,204,7)"/><text x="249.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.32%)</title><rect x="246" y="1540" width="4" height="15" fill="rgb(212,55,30)"/><text x="249.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="246" y="1556" width="4" height="15" fill="rgb(235,90,24)"/><text x="249.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="246" y="1572" width="4" height="15" fill="rgb(211,10,26)"/><text x="249.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="246" y="1588" width="4" height="15" fill="rgb(252,76,35)"/><text x="249.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="246" y="1604" width="4" height="15" fill="rgb(251,143,44)"/><text x="249.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="246" y="1620" width="4" height="15" fill="rgb(218,207,54)"/><text x="249.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.16%)</title><rect x="248" y="1636" width="2" height="15" fill="rgb(209,158,20)"/><text x="251.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="248" y="1652" width="2" height="15" fill="rgb(244,213,37)"/><text x="251.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="248" y="1668" width="2" height="15" fill="rgb(240,14,16)"/><text x="251.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="248" y="1684" width="2" height="15" fill="rgb(220,124,31)"/><text x="251.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="248" y="1700" width="2" height="15" fill="rgb(252,108,4)"/><text x="251.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="248" y="1716" width="2" height="15" fill="rgb(222,33,50)"/><text x="251.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.16%)</title><rect x="248" y="1732" width="2" height="15" fill="rgb(219,136,10)"/><text x="251.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="248" y="1748" width="2" height="15" fill="rgb(207,202,29)"/><text x="251.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="248" y="1764" width="2" height="15" fill="rgb(233,157,3)"/><text x="251.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="248" y="1780" width="2" height="15" fill="rgb(245,214,25)"/><text x="251.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="248" y="1796" width="2" height="15" fill="rgb(222,200,8)"/><text x="251.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="248" y="1812" width="2" height="15" fill="rgb(219,54,50)"/><text x="251.00" y="1822.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:40) (1 samples, 0.16%)</title><rect x="248" y="1828" width="2" height="15" fill="rgb(213,44,13)"/><text x="251.00" y="1838.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="248" y="1844" width="2" height="15" fill="rgb(211,107,14)"/><text x="251.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="248" y="1860" width="2" height="15" fill="rgb(218,20,38)"/><text x="251.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="248" y="1876" width="2" height="15" fill="rgb(225,55,50)"/><text x="251.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="248" y="1892" width="2" height="15" fill="rgb(213,105,26)"/><text x="251.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="248" y="1908" width="2" height="15" fill="rgb(228,176,26)"/><text x="251.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="248" y="1924" width="2" height="15" fill="rgb(220,15,2)"/><text x="251.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="248" y="1940" width="2" height="15" fill="rgb(214,74,23)"/><text x="251.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="248" y="1956" width="2" height="15" fill="rgb(250,192,38)"/><text x="251.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.16%)</title><rect x="250" y="964" width="2" height="15" fill="rgb(236,126,21)"/><text x="253.00" y="974.50"></text></g><g><title>NDFrame (pandas/core/generic.py:10421) (1 samples, 0.16%)</title><rect x="250" y="980" width="2" height="15" fill="rgb(242,8,17)"/><text x="253.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:14) (1 samples, 0.16%)</title><rect x="252" y="1156" width="2" height="15" fill="rgb(224,170,27)"/><text x="255.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="252" y="1172" width="2" height="15" fill="rgb(224,159,39)"/><text x="255.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="252" y="1188" width="2" height="15" fill="rgb(243,156,50)"/><text x="255.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="252" y="1204" width="2" height="15" fill="rgb(237,50,22)"/><text x="255.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="252" y="1220" width="2" height="15" fill="rgb(228,148,2)"/><text x="255.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="252" y="1236" width="2" height="15" fill="rgb(247,65,35)"/><text x="255.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/category.py:56) (1 samples, 0.16%)</title><rect x="252" y="1252" width="2" height="15" fill="rgb(254,5,6)"/><text x="255.00" y="1262.50"></text></g><g><title>CategoricalIndex (pandas/core/indexes/category.py:722) (1 samples, 0.16%)</title><rect x="252" y="1268" width="2" height="15" fill="rgb(250,102,39)"/><text x="255.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:324) (1 samples, 0.16%)</title><rect x="252" y="1284" width="2" height="15" fill="rgb(240,125,8)"/><text x="255.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (5 samples, 0.81%)</title><rect x="246" y="580" width="10" height="15" fill="rgb(212,104,29)"/><text x="249.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="246" y="596" width="10" height="15" fill="rgb(244,170,2)"/><text x="249.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="246" y="612" width="10" height="15" fill="rgb(213,50,29)"/><text x="249.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="246" y="628" width="10" height="15" fill="rgb(252,44,1)"/><text x="249.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="246" y="644" width="10" height="15" fill="rgb(245,194,48)"/><text x="249.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="246" y="660" width="10" height="15" fill="rgb(234,84,54)"/><text x="249.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (5 samples, 0.81%)</title><rect x="246" y="676" width="10" height="15" fill="rgb(212,46,6)"/><text x="249.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="246" y="692" width="10" height="15" fill="rgb(215,27,30)"/><text x="249.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="246" y="708" width="10" height="15" fill="rgb(214,212,0)"/><text x="249.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="246" y="724" width="10" height="15" fill="rgb(233,146,8)"/><text x="249.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="246" y="740" width="10" height="15" fill="rgb(239,201,47)"/><text x="249.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="246" y="756" width="10" height="15" fill="rgb(228,155,21)"/><text x="249.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (5 samples, 0.81%)</title><rect x="246" y="772" width="10" height="15" fill="rgb(224,113,35)"/><text x="249.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.81%)</title><rect x="246" y="788" width="10" height="15" fill="rgb(237,73,8)"/><text x="249.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.81%)</title><rect x="246" y="804" width="10" height="15" fill="rgb(227,167,21)"/><text x="249.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.81%)</title><rect x="246" y="820" width="10" height="15" fill="rgb(245,54,47)"/><text x="249.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.81%)</title><rect x="246" y="836" width="10" height="15" fill="rgb(226,89,37)"/><text x="249.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.81%)</title><rect x="246" y="852" width="10" height="15" fill="rgb(218,56,1)"/><text x="249.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (3 samples, 0.49%)</title><rect x="250" y="868" width="6" height="15" fill="rgb(205,18,54)"/><text x="253.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="250" y="884" width="6" height="15" fill="rgb(244,108,51)"/><text x="253.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="250" y="900" width="6" height="15" fill="rgb(248,145,16)"/><text x="253.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="250" y="916" width="6" height="15" fill="rgb(218,109,14)"/><text x="253.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="250" y="932" width="6" height="15" fill="rgb(246,121,46)"/><text x="253.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="250" y="948" width="6" height="15" fill="rgb(253,137,53)"/><text x="253.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.32%)</title><rect x="252" y="964" width="4" height="15" fill="rgb(213,153,35)"/><text x="255.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="252" y="980" width="4" height="15" fill="rgb(226,229,44)"/><text x="255.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="252" y="996" width="4" height="15" fill="rgb(212,16,43)"/><text x="255.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="252" y="1012" width="4" height="15" fill="rgb(220,34,39)"/><text x="255.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="252" y="1028" width="4" height="15" fill="rgb(250,28,17)"/><text x="255.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="252" y="1044" width="4" height="15" fill="rgb(252,101,7)"/><text x="255.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.32%)</title><rect x="252" y="1060" width="4" height="15" fill="rgb(252,161,2)"/><text x="255.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="252" y="1076" width="4" height="15" fill="rgb(248,190,54)"/><text x="255.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="252" y="1092" width="4" height="15" fill="rgb(225,12,7)"/><text x="255.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="252" y="1108" width="4" height="15" fill="rgb(243,130,8)"/><text x="255.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="252" y="1124" width="4" height="15" fill="rgb(244,194,46)"/><text x="255.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="252" y="1140" width="4" height="15" fill="rgb(224,67,6)"/><text x="255.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.16%)</title><rect x="254" y="1156" width="2" height="15" fill="rgb(206,168,54)"/><text x="257.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="254" y="1172" width="2" height="15" fill="rgb(234,181,32)"/><text x="257.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="254" y="1188" width="2" height="15" fill="rgb(220,152,49)"/><text x="257.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="254" y="1204" width="2" height="15" fill="rgb(214,28,33)"/><text x="257.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="254" y="1220" width="2" height="15" fill="rgb(225,19,23)"/><text x="257.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="254" y="1236" width="2" height="15" fill="rgb(237,138,53)"/><text x="257.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.16%)</title><rect x="254" y="1252" width="2" height="15" fill="rgb(238,138,18)"/><text x="257.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="254" y="1268" width="2" height="15" fill="rgb(223,178,41)"/><text x="257.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="254" y="1284" width="2" height="15" fill="rgb(234,22,54)"/><text x="257.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="254" y="1300" width="2" height="15" fill="rgb(219,68,54)"/><text x="257.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="254" y="1316" width="2" height="15" fill="rgb(248,25,19)"/><text x="257.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="254" y="1332" width="2" height="15" fill="rgb(251,97,8)"/><text x="257.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py:94) (1 samples, 0.16%)</title><rect x="254" y="1348" width="2" height="15" fill="rgb(211,62,8)"/><text x="257.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (9 samples, 1.46%)</title><rect x="242" y="292" width="18" height="15" fill="rgb(216,53,21)"/><text x="245.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="242" y="308" width="18" height="15" fill="rgb(220,24,0)"/><text x="245.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="242" y="324" width="18" height="15" fill="rgb(250,194,4)"/><text x="245.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="242" y="340" width="18" height="15" fill="rgb(228,20,31)"/><text x="245.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="242" y="356" width="18" height="15" fill="rgb(210,40,0)"/><text x="245.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="242" y="372" width="18" height="15" fill="rgb(215,91,4)"/><text x="245.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (9 samples, 1.46%)</title><rect x="242" y="388" width="18" height="15" fill="rgb(218,100,2)"/><text x="245.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="242" y="404" width="18" height="15" fill="rgb(219,106,34)"/><text x="245.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="242" y="420" width="18" height="15" fill="rgb(216,117,46)"/><text x="245.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="242" y="436" width="18" height="15" fill="rgb(235,136,11)"/><text x="245.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="242" y="452" width="18" height="15" fill="rgb(237,97,25)"/><text x="245.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="242" y="468" width="18" height="15" fill="rgb(209,155,39)"/><text x="245.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (7 samples, 1.13%)</title><rect x="246" y="484" width="14" height="15" fill="rgb(228,141,2)"/><text x="249.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.13%)</title><rect x="246" y="500" width="14" height="15" fill="rgb(223,147,20)"/><text x="249.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.13%)</title><rect x="246" y="516" width="14" height="15" fill="rgb(230,30,44)"/><text x="249.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.13%)</title><rect x="246" y="532" width="14" height="15" fill="rgb(243,113,37)"/><text x="249.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.13%)</title><rect x="246" y="548" width="14" height="15" fill="rgb(206,63,31)"/><text x="249.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.13%)</title><rect x="246" y="564" width="14" height="15" fill="rgb(243,57,11)"/><text x="249.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.32%)</title><rect x="256" y="580" width="4" height="15" fill="rgb(235,9,25)"/><text x="259.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="256" y="596" width="4" height="15" fill="rgb(238,137,15)"/><text x="259.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="256" y="612" width="4" height="15" fill="rgb(239,142,2)"/><text x="259.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="256" y="628" width="4" height="15" fill="rgb(246,95,6)"/><text x="259.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="256" y="644" width="4" height="15" fill="rgb(252,222,29)"/><text x="259.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="256" y="660" width="4" height="15" fill="rgb(208,213,44)"/><text x="259.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="256" y="676" width="4" height="15" fill="rgb(208,229,50)"/><text x="259.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="256" y="692" width="4" height="15" fill="rgb(209,99,16)"/><text x="259.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="256" y="708" width="4" height="15" fill="rgb(221,89,54)"/><text x="259.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (2 samples, 0.32%)</title><rect x="256" y="724" width="4" height="15" fill="rgb(240,175,7)"/><text x="259.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="256" y="740" width="4" height="15" fill="rgb(217,25,5)"/><text x="259.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="256" y="756" width="4" height="15" fill="rgb(242,96,38)"/><text x="259.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="256" y="772" width="4" height="15" fill="rgb(222,154,6)"/><text x="259.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="256" y="788" width="4" height="15" fill="rgb(247,68,20)"/><text x="259.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="256" y="804" width="4" height="15" fill="rgb(208,34,9)"/><text x="259.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:25) (2 samples, 0.32%)</title><rect x="256" y="820" width="4" height="15" fill="rgb(211,12,25)"/><text x="259.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="256" y="836" width="4" height="15" fill="rgb(242,63,35)"/><text x="259.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="256" y="852" width="4" height="15" fill="rgb(221,68,36)"/><text x="259.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="256" y="868" width="4" height="15" fill="rgb(229,92,1)"/><text x="259.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="256" y="884" width="4" height="15" fill="rgb(238,150,10)"/><text x="259.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="256" y="900" width="4" height="15" fill="rgb(208,33,54)"/><text x="259.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/sorting.py:17) (2 samples, 0.32%)</title><rect x="256" y="916" width="4" height="15" fill="rgb(229,115,28)"/><text x="259.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="256" y="932" width="4" height="15" fill="rgb(217,5,7)"/><text x="259.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="256" y="948" width="4" height="15" fill="rgb(244,29,11)"/><text x="259.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="256" y="964" width="4" height="15" fill="rgb(246,171,38)"/><text x="259.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.32%)</title><rect x="256" y="980" width="4" height="15" fill="rgb(248,107,54)"/><text x="259.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.32%)</title><rect x="256" y="996" width="4" height="15" fill="rgb(233,162,9)"/><text x="259.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.32%)</title><rect x="256" y="1012" width="4" height="15" fill="rgb(226,213,18)"/><text x="259.00" y="1022.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.16%)</title><rect x="258" y="1028" width="2" height="15" fill="rgb(232,65,34)"/><text x="261.00" y="1038.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.32%)</title><rect x="260" y="820" width="3" height="15" fill="rgb(207,167,22)"/><text x="263.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="260" y="836" width="3" height="15" fill="rgb(216,155,34)"/><text x="263.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="260" y="852" width="3" height="15" fill="rgb(242,157,29)"/><text x="263.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="260" y="868" width="3" height="15" fill="rgb(230,5,14)"/><text x="263.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="260" y="884" width="3" height="15" fill="rgb(230,8,24)"/><text x="263.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="260" y="900" width="3" height="15" fill="rgb(253,126,41)"/><text x="263.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="260" y="916" width="3" height="15" fill="rgb(226,97,21)"/><text x="263.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="260" y="932" width="3" height="15" fill="rgb(220,151,8)"/><text x="263.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.32%)</title><rect x="260" y="948" width="3" height="15" fill="rgb(209,27,22)"/><text x="263.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="260" y="964" width="3" height="15" fill="rgb(235,127,54)"/><text x="263.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="260" y="980" width="3" height="15" fill="rgb(225,169,35)"/><text x="263.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="260" y="996" width="3" height="15" fill="rgb(227,205,24)"/><text x="263.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="260" y="1012" width="3" height="15" fill="rgb(247,2,43)"/><text x="263.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="260" y="1028" width="3" height="15" fill="rgb(219,134,25)"/><text x="263.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (2 samples, 0.32%)</title><rect x="260" y="1044" width="3" height="15" fill="rgb(235,218,4)"/><text x="263.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="260" y="1060" width="3" height="15" fill="rgb(243,32,20)"/><text x="263.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="260" y="1076" width="3" height="15" fill="rgb(226,152,19)"/><text x="263.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="260" y="1092" width="3" height="15" fill="rgb(228,156,4)"/><text x="263.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.32%)</title><rect x="260" y="1108" width="3" height="15" fill="rgb(209,63,27)"/><text x="263.00" y="1118.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.32%)</title><rect x="260" y="1124" width="3" height="15" fill="rgb(236,138,27)"/><text x="263.00" y="1134.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.32%)</title><rect x="260" y="1140" width="3" height="15" fill="rgb(248,210,1)"/><text x="263.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (3 samples, 0.49%)</title><rect x="260" y="532" width="5" height="15" fill="rgb(254,135,35)"/><text x="263.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="260" y="548" width="5" height="15" fill="rgb(212,197,0)"/><text x="263.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="260" y="564" width="5" height="15" fill="rgb(223,44,15)"/><text x="263.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="260" y="580" width="5" height="15" fill="rgb(233,83,26)"/><text x="263.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="260" y="596" width="5" height="15" fill="rgb(249,119,23)"/><text x="263.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="260" y="612" width="5" height="15" fill="rgb(219,14,40)"/><text x="263.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.49%)</title><rect x="260" y="628" width="5" height="15" fill="rgb(232,222,25)"/><text x="263.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="260" y="644" width="5" height="15" fill="rgb(206,126,3)"/><text x="263.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="260" y="660" width="5" height="15" fill="rgb(224,15,48)"/><text x="263.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="260" y="676" width="5" height="15" fill="rgb(241,136,19)"/><text x="263.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="260" y="692" width="5" height="15" fill="rgb(237,86,14)"/><text x="263.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="260" y="708" width="5" height="15" fill="rgb(244,48,32)"/><text x="263.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.49%)</title><rect x="260" y="724" width="5" height="15" fill="rgb(235,35,4)"/><text x="263.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="260" y="740" width="5" height="15" fill="rgb(231,223,5)"/><text x="263.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="260" y="756" width="5" height="15" fill="rgb(250,45,16)"/><text x="263.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="260" y="772" width="5" height="15" fill="rgb(231,156,20)"/><text x="263.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="260" y="788" width="5" height="15" fill="rgb(235,84,44)"/><text x="263.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="260" y="804" width="5" height="15" fill="rgb(221,14,45)"/><text x="263.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.16%)</title><rect x="263" y="820" width="2" height="15" fill="rgb(250,91,19)"/><text x="266.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="836" width="2" height="15" fill="rgb(211,151,33)"/><text x="266.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="852" width="2" height="15" fill="rgb(228,217,47)"/><text x="266.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="868" width="2" height="15" fill="rgb(242,4,48)"/><text x="266.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="884" width="2" height="15" fill="rgb(215,13,6)"/><text x="266.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="900" width="2" height="15" fill="rgb(225,155,6)"/><text x="266.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.16%)</title><rect x="263" y="916" width="2" height="15" fill="rgb(251,167,36)"/><text x="266.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="932" width="2" height="15" fill="rgb(253,34,10)"/><text x="266.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="948" width="2" height="15" fill="rgb(226,184,30)"/><text x="266.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="964" width="2" height="15" fill="rgb(251,225,0)"/><text x="266.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="980" width="2" height="15" fill="rgb(214,80,49)"/><text x="266.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="996" width="2" height="15" fill="rgb(253,74,38)"/><text x="266.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.16%)</title><rect x="263" y="1012" width="2" height="15" fill="rgb(217,108,36)"/><text x="266.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="1028" width="2" height="15" fill="rgb(226,223,3)"/><text x="266.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="1044" width="2" height="15" fill="rgb(246,12,17)"/><text x="266.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="1060" width="2" height="15" fill="rgb(208,208,13)"/><text x="266.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="1076" width="2" height="15" fill="rgb(246,42,44)"/><text x="266.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1092" width="2" height="15" fill="rgb(247,183,5)"/><text x="266.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.16%)</title><rect x="263" y="1108" width="2" height="15" fill="rgb(245,100,46)"/><text x="266.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="263" y="1124" width="2" height="15" fill="rgb(244,198,23)"/><text x="266.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1140" width="2" height="15" fill="rgb(241,111,42)"/><text x="266.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="1156" width="2" height="15" fill="rgb(250,186,2)"/><text x="266.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="1172" width="2" height="15" fill="rgb(247,158,15)"/><text x="266.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="1188" width="2" height="15" fill="rgb(228,221,41)"/><text x="266.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="1204" width="2" height="15" fill="rgb(212,88,13)"/><text x="266.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1220" width="2" height="15" fill="rgb(251,206,54)"/><text x="266.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.16%)</title><rect x="263" y="1236" width="2" height="15" fill="rgb(218,126,19)"/><text x="266.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="263" y="1252" width="2" height="15" fill="rgb(239,178,18)"/><text x="266.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1268" width="2" height="15" fill="rgb(245,20,41)"/><text x="266.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="263" y="1284" width="2" height="15" fill="rgb(224,6,47)"/><text x="266.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="263" y="1300" width="2" height="15" fill="rgb(237,92,30)"/><text x="266.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="263" y="1316" width="2" height="15" fill="rgb(222,37,33)"/><text x="266.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="263" y="1332" width="2" height="15" fill="rgb(207,117,34)"/><text x="266.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="263" y="1348" width="2" height="15" fill="rgb(239,99,3)"/><text x="266.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2656) (1 samples, 0.16%)</title><rect x="263" y="1364" width="2" height="15" fill="rgb(244,72,25)"/><text x="266.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.16%)</title><rect x="263" y="1380" width="2" height="15" fill="rgb(226,223,28)"/><text x="266.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.16%)</title><rect x="263" y="1396" width="2" height="15" fill="rgb(205,126,35)"/><text x="266.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.16%)</title><rect x="263" y="1412" width="2" height="15" fill="rgb(228,47,41)"/><text x="266.00" y="1422.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.16%)</title><rect x="263" y="1428" width="2" height="15" fill="rgb(223,101,6)"/><text x="266.00" y="1438.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.16%)</title><rect x="265" y="1252" width="2" height="15" fill="rgb(237,127,54)"/><text x="268.00" y="1262.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.32%)</title><rect x="265" y="1236" width="4" height="15" fill="rgb(253,121,23)"/><text x="268.00" y="1246.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.16%)</title><rect x="267" y="1252" width="2" height="15" fill="rgb(234,184,6)"/><text x="270.00" y="1262.50"></text></g><g><title>sre_ucs1_match.cold.27 (python3.7) (1 samples, 0.16%)</title><rect x="267" y="1268" width="2" height="15" fill="rgb(228,33,9)"/><text x="270.00" y="1278.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.49%)</title><rect x="265" y="964" width="6" height="15" fill="rgb(234,134,50)"/><text x="268.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="265" y="980" width="6" height="15" fill="rgb(232,45,30)"/><text x="268.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="265" y="996" width="6" height="15" fill="rgb(246,198,40)"/><text x="268.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="265" y="1012" width="6" height="15" fill="rgb(240,22,8)"/><text x="268.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="265" y="1028" width="6" height="15" fill="rgb(226,155,20)"/><text x="268.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="265" y="1044" width="6" height="15" fill="rgb(249,196,48)"/><text x="268.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.49%)</title><rect x="265" y="1060" width="6" height="15" fill="rgb(230,224,7)"/><text x="268.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="265" y="1076" width="6" height="15" fill="rgb(254,62,31)"/><text x="268.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="265" y="1092" width="6" height="15" fill="rgb(253,56,50)"/><text x="268.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="265" y="1108" width="6" height="15" fill="rgb(233,5,38)"/><text x="268.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="265" y="1124" width="6" height="15" fill="rgb(244,74,29)"/><text x="268.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="265" y="1140" width="6" height="15" fill="rgb(250,177,25)"/><text x="268.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.49%)</title><rect x="265" y="1156" width="6" height="15" fill="rgb(246,41,19)"/><text x="268.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.49%)</title><rect x="265" y="1172" width="6" height="15" fill="rgb(218,60,52)"/><text x="268.00" y="1182.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.49%)</title><rect x="265" y="1188" width="6" height="15" fill="rgb(253,121,42)"/><text x="268.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 0.49%)</title><rect x="265" y="1204" width="6" height="15" fill="rgb(205,211,15)"/><text x="268.00" y="1214.50"></text></g><g><title>getblock (inspect.py:940) (3 samples, 0.49%)</title><rect x="265" y="1220" width="6" height="15" fill="rgb(205,224,9)"/><text x="268.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py:627) (1 samples, 0.16%)</title><rect x="269" y="1236" width="2" height="15" fill="rgb(229,110,15)"/><text x="272.00" y="1246.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.16%)</title><rect x="271" y="964" width="2" height="15" fill="rgb(223,59,5)"/><text x="274.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="271" y="980" width="2" height="15" fill="rgb(206,182,35)"/><text x="274.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="271" y="996" width="2" height="15" fill="rgb(248,93,32)"/><text x="274.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="271" y="1012" width="2" height="15" fill="rgb(246,190,41)"/><text x="274.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="271" y="1028" width="2" height="15" fill="rgb(249,101,23)"/><text x="274.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="271" y="1044" width="2" height="15" fill="rgb(246,19,34)"/><text x="274.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:20) (1 samples, 0.16%)</title><rect x="271" y="1060" width="2" height="15" fill="rgb(250,27,14)"/><text x="274.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="271" y="1076" width="2" height="15" fill="rgb(233,17,39)"/><text x="274.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="271" y="1092" width="2" height="15" fill="rgb(224,83,23)"/><text x="274.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="271" y="1108" width="2" height="15" fill="rgb(233,158,52)"/><text x="274.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="271" y="1124" width="2" height="15" fill="rgb(207,164,8)"/><text x="274.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="271" y="1140" width="2" height="15" fill="rgb(209,6,22)"/><text x="274.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/gaussian_process/__init__.py:13) (1 samples, 0.16%)</title><rect x="271" y="1156" width="2" height="15" fill="rgb(254,97,27)"/><text x="274.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="271" y="1172" width="2" height="15" fill="rgb(240,175,11)"/><text x="274.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.16%)</title><rect x="271" y="1188" width="2" height="15" fill="rgb(242,81,48)"/><text x="274.00" y="1198.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.16%)</title><rect x="271" y="1204" width="2" height="15" fill="rgb(247,92,46)"/><text x="274.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.16%)</title><rect x="271" y="1220" width="2" height="15" fill="rgb(239,207,20)"/><text x="274.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.16%)</title><rect x="271" y="1236" width="2" height="15" fill="rgb(227,124,33)"/><text x="274.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.16%)</title><rect x="271" y="1252" width="2" height="15" fill="rgb(226,217,10)"/><text x="274.00" y="1262.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.16%)</title><rect x="271" y="1268" width="2" height="15" fill="rgb(208,228,42)"/><text x="274.00" y="1278.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.16%)</title><rect x="271" y="1284" width="2" height="15" fill="rgb(219,74,51)"/><text x="274.00" y="1294.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="271" y="1300" width="2" height="15" fill="rgb(248,15,21)"/><text x="274.00" y="1310.50"></text></g><g><title>0x7f69c4a43237 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="271" y="1316" width="2" height="15" fill="rgb(243,21,28)"/><text x="274.00" y="1326.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.16%)</title><rect x="273" y="1092" width="2" height="15" fill="rgb(237,139,14)"/><text x="276.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="273" y="1108" width="2" height="15" fill="rgb(240,43,22)"/><text x="276.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="273" y="1124" width="2" height="15" fill="rgb(242,200,22)"/><text x="276.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="273" y="1140" width="2" height="15" fill="rgb(249,222,37)"/><text x="276.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="273" y="1156" width="2" height="15" fill="rgb(227,85,0)"/><text x="276.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="273" y="1172" width="2" height="15" fill="rgb(230,120,16)"/><text x="276.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="273" y="1188" width="2" height="15" fill="rgb(237,131,50)"/><text x="276.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="273" y="1204" width="2" height="15" fill="rgb(233,29,6)"/><text x="276.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.16%)</title><rect x="273" y="1220" width="2" height="15" fill="rgb(235,124,23)"/><text x="276.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="273" y="1236" width="2" height="15" fill="rgb(244,121,37)"/><text x="276.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="273" y="1252" width="2" height="15" fill="rgb(225,17,1)"/><text x="276.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="273" y="1268" width="2" height="15" fill="rgb(211,104,27)"/><text x="276.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="273" y="1284" width="2" height="15" fill="rgb(226,10,53)"/><text x="276.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="273" y="1300" width="2" height="15" fill="rgb(246,155,38)"/><text x="276.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.16%)</title><rect x="273" y="1316" width="2" height="15" fill="rgb(207,217,44)"/><text x="276.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.16%)</title><rect x="273" y="1332" width="2" height="15" fill="rgb(239,56,52)"/><text x="276.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.16%)</title><rect x="273" y="1348" width="2" height="15" fill="rgb(242,205,22)"/><text x="276.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.16%)</title><rect x="273" y="1364" width="2" height="15" fill="rgb(233,191,3)"/><text x="276.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.16%)</title><rect x="273" y="1380" width="2" height="15" fill="rgb(213,108,31)"/><text x="276.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.16%)</title><rect x="273" y="1396" width="2" height="15" fill="rgb(226,153,42)"/><text x="276.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="273" y="1412" width="2" height="15" fill="rgb(254,76,20)"/><text x="276.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.16%)</title><rect x="273" y="1428" width="2" height="15" fill="rgb(241,110,32)"/><text x="276.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.16%)</title><rect x="273" y="1444" width="2" height="15" fill="rgb(248,190,39)"/><text x="276.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.16%)</title><rect x="273" y="1460" width="2" height="15" fill="rgb(247,148,21)"/><text x="276.00" y="1470.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.16%)</title><rect x="273" y="1476" width="2" height="15" fill="rgb(213,58,29)"/><text x="276.00" y="1486.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.16%)</title><rect x="273" y="1492" width="2" height="15" fill="rgb(240,209,7)"/><text x="276.00" y="1502.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.16%)</title><rect x="273" y="1508" width="2" height="15" fill="rgb(215,8,44)"/><text x="276.00" y="1518.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="273" y="1524" width="2" height="15" fill="rgb(208,157,17)"/><text x="276.00" y="1534.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (18 samples, 2.91%)</title><rect x="242" y="148" width="35" height="15" fill="rgb(221,35,13)"/><text x="245.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 2.91%)</title><rect x="242" y="164" width="35" height="15" fill="rgb(245,13,13)"/><text x="245.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (18 samples, 2.91%)</title><rect x="242" y="180" width="35" height="15" fill="rgb(228,108,41)"/><text x="245.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 2.91%)</title><rect x="242" y="196" width="35" height="15" fill="rgb(207,9,5)"/><text x="245.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 2.91%)</title><rect x="242" y="212" width="35" height="15" fill="rgb(230,6,14)"/><text x="245.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 2.91%)</title><rect x="242" y="228" width="35" height="15" fill="rgb(232,204,24)"/><text x="245.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 2.91%)</title><rect x="242" y="244" width="35" height="15" fill="rgb(231,55,49)"/><text x="245.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 2.91%)</title><rect x="242" y="260" width="35" height="15" fill="rgb(232,180,21)"/><text x="245.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 2.91%)</title><rect x="242" y="276" width="35" height="15" fill="rgb(225,119,39)"/><text x="245.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (9 samples, 1.46%)</title><rect x="260" y="292" width="17" height="15" fill="rgb(225,59,51)"/><text x="263.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="260" y="308" width="17" height="15" fill="rgb(212,48,0)"/><text x="263.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.46%)</title><rect x="260" y="324" width="17" height="15" fill="rgb(247,71,42)"/><text x="263.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="260" y="340" width="17" height="15" fill="rgb(216,90,47)"/><text x="263.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="260" y="356" width="17" height="15" fill="rgb(218,158,5)"/><text x="263.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="260" y="372" width="17" height="15" fill="rgb(205,92,43)"/><text x="263.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="260" y="388" width="17" height="15" fill="rgb(205,126,4)"/><text x="263.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="260" y="404" width="17" height="15" fill="rgb(210,207,8)"/><text x="263.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="260" y="420" width="17" height="15" fill="rgb(228,7,19)"/><text x="263.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (9 samples, 1.46%)</title><rect x="260" y="436" width="17" height="15" fill="rgb(233,145,52)"/><text x="263.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.46%)</title><rect x="260" y="452" width="17" height="15" fill="rgb(242,19,32)"/><text x="263.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.46%)</title><rect x="260" y="468" width="17" height="15" fill="rgb(244,99,3)"/><text x="263.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.46%)</title><rect x="260" y="484" width="17" height="15" fill="rgb(242,115,25)"/><text x="263.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.46%)</title><rect x="260" y="500" width="17" height="15" fill="rgb(209,11,49)"/><text x="263.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.46%)</title><rect x="260" y="516" width="17" height="15" fill="rgb(241,176,31)"/><text x="263.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 0.97%)</title><rect x="265" y="532" width="12" height="15" fill="rgb(213,214,51)"/><text x="268.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.97%)</title><rect x="265" y="548" width="12" height="15" fill="rgb(229,207,20)"/><text x="268.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.97%)</title><rect x="265" y="564" width="12" height="15" fill="rgb(216,91,10)"/><text x="268.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.97%)</title><rect x="265" y="580" width="12" height="15" fill="rgb(236,128,33)"/><text x="268.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.97%)</title><rect x="265" y="596" width="12" height="15" fill="rgb(254,137,20)"/><text x="268.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.97%)</title><rect x="265" y="612" width="12" height="15" fill="rgb(249,66,22)"/><text x="268.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 0.97%)</title><rect x="265" y="628" width="12" height="15" fill="rgb(239,222,45)"/><text x="268.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.97%)</title><rect x="265" y="644" width="12" height="15" fill="rgb(218,195,35)"/><text x="268.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.97%)</title><rect x="265" y="660" width="12" height="15" fill="rgb(226,109,30)"/><text x="268.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.97%)</title><rect x="265" y="676" width="12" height="15" fill="rgb(239,5,37)"/><text x="268.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.97%)</title><rect x="265" y="692" width="12" height="15" fill="rgb(218,212,15)"/><text x="268.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.97%)</title><rect x="265" y="708" width="12" height="15" fill="rgb(252,143,48)"/><text x="268.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 0.97%)</title><rect x="265" y="724" width="12" height="15" fill="rgb(253,135,46)"/><text x="268.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.97%)</title><rect x="265" y="740" width="12" height="15" fill="rgb(241,30,3)"/><text x="268.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.97%)</title><rect x="265" y="756" width="12" height="15" fill="rgb(235,152,50)"/><text x="268.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.97%)</title><rect x="265" y="772" width="12" height="15" fill="rgb(236,79,54)"/><text x="268.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.97%)</title><rect x="265" y="788" width="12" height="15" fill="rgb(217,28,3)"/><text x="268.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.97%)</title><rect x="265" y="804" width="12" height="15" fill="rgb(230,52,17)"/><text x="268.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.97%)</title><rect x="265" y="820" width="12" height="15" fill="rgb(209,110,29)"/><text x="268.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.97%)</title><rect x="265" y="836" width="12" height="15" fill="rgb(210,86,47)"/><text x="268.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.97%)</title><rect x="265" y="852" width="12" height="15" fill="rgb(236,105,1)"/><text x="268.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 0.97%)</title><rect x="265" y="868" width="12" height="15" fill="rgb(215,50,2)"/><text x="268.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.97%)</title><rect x="265" y="884" width="12" height="15" fill="rgb(211,183,54)"/><text x="268.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.97%)</title><rect x="265" y="900" width="12" height="15" fill="rgb(250,187,47)"/><text x="268.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.97%)</title><rect x="265" y="916" width="12" height="15" fill="rgb(223,11,17)"/><text x="268.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.97%)</title><rect x="265" y="932" width="12" height="15" fill="rgb(230,105,2)"/><text x="268.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.97%)</title><rect x="265" y="948" width="12" height="15" fill="rgb(242,125,45)"/><text x="268.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.32%)</title><rect x="273" y="964" width="4" height="15" fill="rgb(240,109,36)"/><text x="276.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="273" y="980" width="4" height="15" fill="rgb(209,117,2)"/><text x="276.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="273" y="996" width="4" height="15" fill="rgb(254,85,30)"/><text x="276.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="273" y="1012" width="4" height="15" fill="rgb(209,91,6)"/><text x="276.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="273" y="1028" width="4" height="15" fill="rgb(250,63,44)"/><text x="276.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="273" y="1044" width="4" height="15" fill="rgb(239,128,47)"/><text x="276.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="273" y="1060" width="4" height="15" fill="rgb(219,49,36)"/><text x="276.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="273" y="1076" width="4" height="15" fill="rgb(228,126,2)"/><text x="276.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:20) (1 samples, 0.16%)</title><rect x="275" y="1092" width="2" height="15" fill="rgb(252,31,7)"/><text x="278.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="275" y="1108" width="2" height="15" fill="rgb(241,204,28)"/><text x="278.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="275" y="1124" width="2" height="15" fill="rgb(244,0,41)"/><text x="278.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="275" y="1140" width="2" height="15" fill="rgb(251,102,34)"/><text x="278.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:952) (1 samples, 0.16%)</title><rect x="275" y="1156" width="2" height="15" fill="rgb(223,144,14)"/><text x="278.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.16%)</title><rect x="277" y="484" width="2" height="15" fill="rgb(210,1,2)"/><text x="280.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="500" width="2" height="15" fill="rgb(225,184,15)"/><text x="280.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="516" width="2" height="15" fill="rgb(235,26,32)"/><text x="280.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="532" width="2" height="15" fill="rgb(249,220,50)"/><text x="280.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="548" width="2" height="15" fill="rgb(245,19,21)"/><text x="280.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="564" width="2" height="15" fill="rgb(248,91,10)"/><text x="280.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.16%)</title><rect x="277" y="580" width="2" height="15" fill="rgb(254,44,17)"/><text x="280.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="596" width="2" height="15" fill="rgb(208,182,50)"/><text x="280.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="612" width="2" height="15" fill="rgb(226,202,10)"/><text x="280.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="628" width="2" height="15" fill="rgb(251,229,8)"/><text x="280.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="644" width="2" height="15" fill="rgb(231,192,38)"/><text x="280.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="660" width="2" height="15" fill="rgb(208,78,20)"/><text x="280.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.16%)</title><rect x="277" y="676" width="2" height="15" fill="rgb(235,35,47)"/><text x="280.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="692" width="2" height="15" fill="rgb(221,204,53)"/><text x="280.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="708" width="2" height="15" fill="rgb(238,220,26)"/><text x="280.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="724" width="2" height="15" fill="rgb(245,142,47)"/><text x="280.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="740" width="2" height="15" fill="rgb(222,45,39)"/><text x="280.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="756" width="2" height="15" fill="rgb(224,163,42)"/><text x="280.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.16%)</title><rect x="277" y="772" width="2" height="15" fill="rgb(219,75,36)"/><text x="280.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="277" y="788" width="2" height="15" fill="rgb(239,222,50)"/><text x="280.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="804" width="2" height="15" fill="rgb(236,116,27)"/><text x="280.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="820" width="2" height="15" fill="rgb(215,229,46)"/><text x="280.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="836" width="2" height="15" fill="rgb(218,135,22)"/><text x="280.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="852" width="2" height="15" fill="rgb(229,132,25)"/><text x="280.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="868" width="2" height="15" fill="rgb(246,176,5)"/><text x="280.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="884" width="2" height="15" fill="rgb(227,147,17)"/><text x="280.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.16%)</title><rect x="277" y="900" width="2" height="15" fill="rgb(234,127,20)"/><text x="280.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="916" width="2" height="15" fill="rgb(211,83,34)"/><text x="280.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="277" y="932" width="2" height="15" fill="rgb(205,1,49)"/><text x="280.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="948" width="2" height="15" fill="rgb(212,4,32)"/><text x="280.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="964" width="2" height="15" fill="rgb(237,118,45)"/><text x="280.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="980" width="2" height="15" fill="rgb(216,128,23)"/><text x="280.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="996" width="2" height="15" fill="rgb(251,142,23)"/><text x="280.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="1012" width="2" height="15" fill="rgb(216,132,14)"/><text x="280.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1028" width="2" height="15" fill="rgb(220,141,8)"/><text x="280.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.16%)</title><rect x="277" y="1044" width="2" height="15" fill="rgb(228,37,12)"/><text x="280.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="277" y="1060" width="2" height="15" fill="rgb(222,41,16)"/><text x="280.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1076" width="2" height="15" fill="rgb(241,141,3)"/><text x="280.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="1092" width="2" height="15" fill="rgb(214,164,11)"/><text x="280.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="1108" width="2" height="15" fill="rgb(247,74,40)"/><text x="280.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="1124" width="2" height="15" fill="rgb(225,86,28)"/><text x="280.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="1140" width="2" height="15" fill="rgb(247,84,42)"/><text x="280.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1156" width="2" height="15" fill="rgb(219,136,21)"/><text x="280.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.16%)</title><rect x="277" y="1172" width="2" height="15" fill="rgb(216,224,31)"/><text x="280.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="277" y="1188" width="2" height="15" fill="rgb(228,205,11)"/><text x="280.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1204" width="2" height="15" fill="rgb(244,211,29)"/><text x="280.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="1220" width="2" height="15" fill="rgb(228,103,8)"/><text x="280.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="1236" width="2" height="15" fill="rgb(241,189,50)"/><text x="280.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="1252" width="2" height="15" fill="rgb(218,211,33)"/><text x="280.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="1268" width="2" height="15" fill="rgb(252,120,31)"/><text x="280.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1284" width="2" height="15" fill="rgb(251,16,14)"/><text x="280.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.16%)</title><rect x="277" y="1300" width="2" height="15" fill="rgb(211,41,2)"/><text x="280.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="277" y="1316" width="2" height="15" fill="rgb(234,155,54)"/><text x="280.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="277" y="1332" width="2" height="15" fill="rgb(224,171,35)"/><text x="280.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="277" y="1348" width="2" height="15" fill="rgb(247,14,18)"/><text x="280.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="277" y="1364" width="2" height="15" fill="rgb(243,224,49)"/><text x="280.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="277" y="1380" width="2" height="15" fill="rgb(221,206,45)"/><text x="280.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:603) (1 samples, 0.16%)</title><rect x="277" y="1396" width="2" height="15" fill="rgb(246,138,49)"/><text x="280.00" y="1406.50"></text></g><g><title>0x7f69c4a03a9d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="277" y="1412" width="2" height="15" fill="rgb(206,138,46)"/><text x="280.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.49%)</title><rect x="277" y="340" width="6" height="15" fill="rgb(224,39,23)"/><text x="280.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="277" y="356" width="6" height="15" fill="rgb(231,57,4)"/><text x="280.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.49%)</title><rect x="277" y="372" width="6" height="15" fill="rgb(212,109,34)"/><text x="280.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="277" y="388" width="6" height="15" fill="rgb(230,174,38)"/><text x="280.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.49%)</title><rect x="277" y="404" width="6" height="15" fill="rgb(246,77,44)"/><text x="280.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.49%)</title><rect x="277" y="420" width="6" height="15" fill="rgb(222,154,2)"/><text x="280.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.49%)</title><rect x="277" y="436" width="6" height="15" fill="rgb(251,99,6)"/><text x="280.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.49%)</title><rect x="277" y="452" width="6" height="15" fill="rgb(234,65,49)"/><text x="280.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.49%)</title><rect x="277" y="468" width="6" height="15" fill="rgb(248,10,30)"/><text x="280.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.32%)</title><rect x="279" y="484" width="4" height="15" fill="rgb(246,213,42)"/><text x="282.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="279" y="500" width="4" height="15" fill="rgb(227,70,48)"/><text x="282.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="279" y="516" width="4" height="15" fill="rgb(254,109,28)"/><text x="282.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="279" y="532" width="4" height="15" fill="rgb(212,156,12)"/><text x="282.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="279" y="548" width="4" height="15" fill="rgb(223,202,1)"/><text x="282.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="279" y="564" width="4" height="15" fill="rgb(221,104,5)"/><text x="282.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (2 samples, 0.32%)</title><rect x="279" y="580" width="4" height="15" fill="rgb(237,168,54)"/><text x="282.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="279" y="596" width="4" height="15" fill="rgb(239,102,18)"/><text x="282.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="279" y="612" width="4" height="15" fill="rgb(224,79,38)"/><text x="282.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="279" y="628" width="4" height="15" fill="rgb(224,155,34)"/><text x="282.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="279" y="644" width="4" height="15" fill="rgb(214,109,38)"/><text x="282.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="279" y="660" width="4" height="15" fill="rgb(237,92,30)"/><text x="282.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (2 samples, 0.32%)</title><rect x="279" y="676" width="4" height="15" fill="rgb(205,197,0)"/><text x="282.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="279" y="692" width="4" height="15" fill="rgb(235,140,51)"/><text x="282.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="279" y="708" width="4" height="15" fill="rgb(244,101,42)"/><text x="282.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="279" y="724" width="4" height="15" fill="rgb(213,35,20)"/><text x="282.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="279" y="740" width="4" height="15" fill="rgb(239,190,15)"/><text x="282.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="279" y="756" width="4" height="15" fill="rgb(243,19,42)"/><text x="282.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (2 samples, 0.32%)</title><rect x="279" y="772" width="4" height="15" fill="rgb(242,183,29)"/><text x="282.00" y="782.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.32%)</title><rect x="279" y="788" width="4" height="15" fill="rgb(206,25,25)"/><text x="282.00" y="798.50"></text></g><g><title>_compile (re.py:286) (2 samples, 0.32%)</title><rect x="279" y="804" width="4" height="15" fill="rgb(206,108,16)"/><text x="282.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (2 samples, 0.32%)</title><rect x="279" y="820" width="4" height="15" fill="rgb(210,98,11)"/><text x="282.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (2 samples, 0.32%)</title><rect x="279" y="836" width="4" height="15" fill="rgb(213,130,44)"/><text x="282.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.32%)</title><rect x="279" y="852" width="4" height="15" fill="rgb(215,62,15)"/><text x="282.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (2 samples, 0.32%)</title><rect x="279" y="868" width="4" height="15" fill="rgb(217,179,26)"/><text x="282.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.32%)</title><rect x="279" y="884" width="4" height="15" fill="rgb(236,224,53)"/><text x="282.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:477) (2 samples, 0.32%)</title><rect x="279" y="900" width="4" height="15" fill="rgb(239,152,25)"/><text x="282.00" y="910.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:4) (24 samples, 3.88%)</title><rect x="239" y="52" width="45" height="15" fill="rgb(210,92,44)"/><text x="242.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (24 samples, 3.88%)</title><rect x="239" y="68" width="45" height="15" fill="rgb(226,160,17)"/><text x="242.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (24 samples, 3.88%)</title><rect x="239" y="84" width="45" height="15" fill="rgb(236,126,33)"/><text x="242.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (24 samples, 3.88%)</title><rect x="239" y="100" width="45" height="15" fill="rgb(250,203,46)"/><text x="242.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (24 samples, 3.88%)</title><rect x="239" y="116" width="45" height="15" fill="rgb(212,204,6)"/><text x="242.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (24 samples, 3.88%)</title><rect x="239" y="132" width="45" height="15" fill="rgb(228,147,40)"/><text x="242.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:8) (4 samples, 0.65%)</title><rect x="277" y="148" width="7" height="15" fill="rgb(245,49,7)"/><text x="280.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="277" y="164" width="7" height="15" fill="rgb(227,107,42)"/><text x="280.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="277" y="180" width="7" height="15" fill="rgb(238,8,10)"/><text x="280.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="277" y="196" width="7" height="15" fill="rgb(216,52,18)"/><text x="280.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="277" y="212" width="7" height="15" fill="rgb(209,192,53)"/><text x="280.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="277" y="228" width="7" height="15" fill="rgb(215,36,13)"/><text x="280.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 0.65%)</title><rect x="277" y="244" width="7" height="15" fill="rgb(221,110,2)"/><text x="280.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.65%)</title><rect x="277" y="260" width="7" height="15" fill="rgb(235,167,2)"/><text x="280.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.65%)</title><rect x="277" y="276" width="7" height="15" fill="rgb(229,143,47)"/><text x="280.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.65%)</title><rect x="277" y="292" width="7" height="15" fill="rgb(209,142,0)"/><text x="280.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.65%)</title><rect x="277" y="308" width="7" height="15" fill="rgb(224,155,41)"/><text x="280.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.65%)</title><rect x="277" y="324" width="7" height="15" fill="rgb(245,185,52)"/><text x="280.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.16%)</title><rect x="283" y="340" width="1" height="15" fill="rgb(205,123,5)"/><text x="286.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="356" width="1" height="15" fill="rgb(221,202,48)"/><text x="286.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="283" y="372" width="1" height="15" fill="rgb(253,121,18)"/><text x="286.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="388" width="1" height="15" fill="rgb(250,199,25)"/><text x="286.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="404" width="1" height="15" fill="rgb(230,70,46)"/><text x="286.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="420" width="1" height="15" fill="rgb(221,20,8)"/><text x="286.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="436" width="1" height="15" fill="rgb(251,153,11)"/><text x="286.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="452" width="1" height="15" fill="rgb(234,117,52)"/><text x="286.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="468" width="1" height="15" fill="rgb(243,220,51)"/><text x="286.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.16%)</title><rect x="283" y="484" width="1" height="15" fill="rgb(224,186,47)"/><text x="286.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="500" width="1" height="15" fill="rgb(242,74,52)"/><text x="286.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="516" width="1" height="15" fill="rgb(254,205,10)"/><text x="286.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="532" width="1" height="15" fill="rgb(224,217,6)"/><text x="286.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="548" width="1" height="15" fill="rgb(245,122,52)"/><text x="286.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="564" width="1" height="15" fill="rgb(246,180,22)"/><text x="286.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.16%)</title><rect x="283" y="580" width="1" height="15" fill="rgb(212,63,22)"/><text x="286.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="596" width="1" height="15" fill="rgb(239,172,21)"/><text x="286.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="612" width="1" height="15" fill="rgb(234,83,43)"/><text x="286.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="628" width="1" height="15" fill="rgb(249,180,51)"/><text x="286.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="644" width="1" height="15" fill="rgb(209,37,34)"/><text x="286.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="660" width="1" height="15" fill="rgb(215,179,21)"/><text x="286.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py:6) (1 samples, 0.16%)</title><rect x="283" y="676" width="1" height="15" fill="rgb(224,84,36)"/><text x="286.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="692" width="1" height="15" fill="rgb(213,19,32)"/><text x="286.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="708" width="1" height="15" fill="rgb(205,71,48)"/><text x="286.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="724" width="1" height="15" fill="rgb(214,140,15)"/><text x="286.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="740" width="1" height="15" fill="rgb(238,73,23)"/><text x="286.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="756" width="1" height="15" fill="rgb(243,67,49)"/><text x="286.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py:7) (1 samples, 0.16%)</title><rect x="283" y="772" width="1" height="15" fill="rgb(212,172,1)"/><text x="286.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="788" width="1" height="15" fill="rgb(216,140,26)"/><text x="286.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="804" width="1" height="15" fill="rgb(207,176,24)"/><text x="286.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="820" width="1" height="15" fill="rgb(252,176,34)"/><text x="286.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="836" width="1" height="15" fill="rgb(216,141,5)"/><text x="286.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="852" width="1" height="15" fill="rgb(253,126,13)"/><text x="286.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py:8) (1 samples, 0.16%)</title><rect x="283" y="868" width="1" height="15" fill="rgb(249,183,9)"/><text x="286.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="884" width="1" height="15" fill="rgb(235,148,31)"/><text x="286.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="283" y="900" width="1" height="15" fill="rgb(221,89,46)"/><text x="286.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="916" width="1" height="15" fill="rgb(237,2,0)"/><text x="286.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="932" width="1" height="15" fill="rgb(244,158,38)"/><text x="286.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="948" width="1" height="15" fill="rgb(210,166,52)"/><text x="286.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="964" width="1" height="15" fill="rgb(251,156,44)"/><text x="286.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="980" width="1" height="15" fill="rgb(205,214,10)"/><text x="286.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="996" width="1" height="15" fill="rgb(248,115,2)"/><text x="286.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py:6) (1 samples, 0.16%)</title><rect x="283" y="1012" width="1" height="15" fill="rgb(219,80,33)"/><text x="286.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="1028" width="1" height="15" fill="rgb(217,188,12)"/><text x="286.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="1044" width="1" height="15" fill="rgb(230,139,19)"/><text x="286.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="1060" width="1" height="15" fill="rgb(215,17,11)"/><text x="286.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="1076" width="1" height="15" fill="rgb(245,85,32)"/><text x="286.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="1092" width="1" height="15" fill="rgb(215,73,8)"/><text x="286.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py:6) (1 samples, 0.16%)</title><rect x="283" y="1108" width="1" height="15" fill="rgb(216,152,50)"/><text x="286.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="1124" width="1" height="15" fill="rgb(213,21,39)"/><text x="286.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="1140" width="1" height="15" fill="rgb(237,70,45)"/><text x="286.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="1156" width="1" height="15" fill="rgb(236,229,22)"/><text x="286.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="1172" width="1" height="15" fill="rgb(224,42,41)"/><text x="286.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="1188" width="1" height="15" fill="rgb(233,95,20)"/><text x="286.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gactions.py:7) (1 samples, 0.16%)</title><rect x="283" y="1204" width="1" height="15" fill="rgb(245,165,5)"/><text x="286.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="283" y="1220" width="1" height="15" fill="rgb(230,89,16)"/><text x="286.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="283" y="1236" width="1" height="15" fill="rgb(208,21,52)"/><text x="286.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="283" y="1252" width="1" height="15" fill="rgb(208,60,2)"/><text x="286.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="283" y="1268" width="1" height="15" fill="rgb(210,146,35)"/><text x="286.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="283" y="1284" width="1" height="15" fill="rgb(239,44,25)"/><text x="286.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gtypes.py:142) (1 samples, 0.16%)</title><rect x="283" y="1300" width="1" height="15" fill="rgb(210,115,44)"/><text x="286.00" y="1310.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.16%)</title><rect x="284" y="196" width="2" height="15" fill="rgb(237,115,25)"/><text x="287.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.16%)</title><rect x="284" y="212" width="2" height="15" fill="rgb(242,103,16)"/><text x="287.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:18) (2 samples, 0.32%)</title><rect x="284" y="100" width="4" height="15" fill="rgb(241,212,27)"/><text x="287.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.32%)</title><rect x="284" y="116" width="4" height="15" fill="rgb(238,180,54)"/><text x="287.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.32%)</title><rect x="284" y="132" width="4" height="15" fill="rgb(248,88,14)"/><text x="287.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.32%)</title><rect x="284" y="148" width="4" height="15" fill="rgb(253,9,13)"/><text x="287.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.32%)</title><rect x="284" y="164" width="4" height="15" fill="rgb(217,52,31)"/><text x="287.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.32%)</title><rect x="284" y="180" width="4" height="15" fill="rgb(216,173,16)"/><text x="287.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.16%)</title><rect x="286" y="196" width="2" height="15" fill="rgb(249,113,40)"/><text x="289.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.16%)</title><rect x="286" y="212" width="2" height="15" fill="rgb(238,27,8)"/><text x="289.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.16%)</title><rect x="286" y="228" width="2" height="15" fill="rgb(253,40,38)"/><text x="289.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.16%)</title><rect x="286" y="244" width="2" height="15" fill="rgb(243,219,20)"/><text x="289.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="286" y="260" width="2" height="15" fill="rgb(254,61,27)"/><text x="289.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="286" y="276" width="2" height="15" fill="rgb(251,55,33)"/><text x="289.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.16%)</title><rect x="286" y="292" width="2" height="15" fill="rgb(205,145,25)"/><text x="289.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="286" y="308" width="2" height="15" fill="rgb(221,78,18)"/><text x="289.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="286" y="324" width="2" height="15" fill="rgb(220,221,10)"/><text x="289.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="286" y="340" width="2" height="15" fill="rgb(245,226,22)"/><text x="289.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="286" y="356" width="2" height="15" fill="rgb(248,118,21)"/><text x="289.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="286" y="372" width="2" height="15" fill="rgb(222,192,30)"/><text x="289.00" y="382.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.16%)</title><rect x="290" y="164" width="2" height="15" fill="rgb(212,52,28)"/><text x="293.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.16%)</title><rect x="298" y="180" width="2" height="15" fill="rgb(239,35,38)"/><text x="301.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.32%)</title><rect x="300" y="180" width="4" height="15" fill="rgb(254,206,31)"/><text x="303.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.16%)</title><rect x="304" y="212" width="1" height="15" fill="rgb(237,27,23)"/><text x="307.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.16%)</title><rect x="304" y="228" width="1" height="15" fill="rgb(232,51,15)"/><text x="307.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.16%)</title><rect x="304" y="244" width="1" height="15" fill="rgb(253,149,45)"/><text x="307.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.16%)</title><rect x="304" y="260" width="1" height="15" fill="rgb(211,139,14)"/><text x="307.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.16%)</title><rect x="304" y="276" width="1" height="15" fill="rgb(233,227,35)"/><text x="307.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.16%)</title><rect x="304" y="292" width="1" height="15" fill="rgb(232,94,11)"/><text x="307.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.16%)</title><rect x="304" y="308" width="1" height="15" fill="rgb(239,110,8)"/><text x="307.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.49%)</title><rect x="304" y="196" width="5" height="15" fill="rgb(231,215,52)"/><text x="307.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.32%)</title><rect x="305" y="212" width="4" height="15" fill="rgb(214,192,21)"/><text x="308.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.16%)</title><rect x="307" y="228" width="2" height="15" fill="rgb(212,87,49)"/><text x="310.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.16%)</title><rect x="313" y="388" width="2" height="15" fill="rgb(227,37,29)"/><text x="316.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.49%)</title><rect x="313" y="308" width="6" height="15" fill="rgb(213,99,1)"/><text x="316.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.49%)</title><rect x="313" y="324" width="6" height="15" fill="rgb(215,92,25)"/><text x="316.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.49%)</title><rect x="313" y="340" width="6" height="15" fill="rgb(250,218,35)"/><text x="316.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.49%)</title><rect x="313" y="356" width="6" height="15" fill="rgb(239,152,37)"/><text x="316.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.49%)</title><rect x="313" y="372" width="6" height="15" fill="rgb(218,21,14)"/><text x="316.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.32%)</title><rect x="315" y="388" width="4" height="15" fill="rgb(247,84,42)"/><text x="318.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.16%)</title><rect x="319" y="356" width="2" height="15" fill="rgb(217,118,0)"/><text x="322.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.16%)</title><rect x="319" y="372" width="2" height="15" fill="rgb(233,104,24)"/><text x="322.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.16%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(209,87,26)"/><text x="322.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="319" y="404" width="2" height="15" fill="rgb(220,5,24)"/><text x="322.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="319" y="420" width="2" height="15" fill="rgb(249,26,41)"/><text x="322.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="319" y="436" width="2" height="15" fill="rgb(212,163,10)"/><text x="322.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="319" y="452" width="2" height="15" fill="rgb(222,203,30)"/><text x="322.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="319" y="468" width="2" height="15" fill="rgb(246,18,2)"/><text x="322.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="319" y="484" width="2" height="15" fill="rgb(207,63,40)"/><text x="322.00" y="494.50"></text></g><g><title>0x7f69c4a04b12 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="319" y="500" width="2" height="15" fill="rgb(237,68,1)"/><text x="322.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="321" y="356" width="2" height="15" fill="rgb(250,193,51)"/><text x="324.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.16%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(240,176,0)"/><text x="324.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.16%)</title><rect x="321" y="388" width="2" height="15" fill="rgb(246,72,26)"/><text x="324.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.16%)</title><rect x="321" y="404" width="2" height="15" fill="rgb(213,87,15)"/><text x="324.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.16%)</title><rect x="323" y="356" width="2" height="15" fill="rgb(232,207,30)"/><text x="326.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.16%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(207,197,18)"/><text x="326.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.16%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(236,184,5)"/><text x="326.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.16%)</title><rect x="323" y="404" width="2" height="15" fill="rgb(239,114,47)"/><text x="326.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.16%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(252,219,4)"/><text x="328.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (3 samples, 0.49%)</title><rect x="326" y="388" width="6" height="15" fill="rgb(234,55,8)"/><text x="329.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.16%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(253,125,9)"/><text x="335.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.16%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(222,89,1)"/><text x="337.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.16%)</title><rect x="334" y="404" width="2" height="15" fill="rgb(206,188,19)"/><text x="337.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.16%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(243,156,21)"/><text x="339.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:216) (1 samples, 0.16%)</title><rect x="338" y="388" width="2" height="15" fill="rgb(238,133,35)"/><text x="341.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.16%)</title><rect x="340" y="388" width="2" height="15" fill="rgb(221,119,1)"/><text x="343.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.16%)</title><rect x="342" y="388" width="2" height="15" fill="rgb(208,156,53)"/><text x="345.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 2.91%)</title><rect x="311" y="260" width="35" height="15" fill="rgb(240,148,22)"/><text x="314.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 2.91%)</title><rect x="311" y="276" width="35" height="15" fill="rgb(228,31,35)"/><text x="314.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 2.75%)</title><rect x="313" y="292" width="33" height="15" fill="rgb(253,229,38)"/><text x="316.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 2.27%)</title><rect x="319" y="308" width="27" height="15" fill="rgb(227,176,31)"/><text x="322.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 2.27%)</title><rect x="319" y="324" width="27" height="15" fill="rgb(232,89,41)"/><text x="322.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 2.27%)</title><rect x="319" y="340" width="27" height="15" fill="rgb(228,218,12)"/><text x="322.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.78%)</title><rect x="325" y="356" width="21" height="15" fill="rgb(254,33,29)"/><text x="328.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.62%)</title><rect x="326" y="372" width="20" height="15" fill="rgb(242,87,15)"/><text x="329.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.16%)</title><rect x="344" y="388" width="2" height="15" fill="rgb(207,111,6)"/><text x="347.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (20 samples, 3.24%)</title><rect x="309" y="244" width="38" height="15" fill="rgb(205,190,13)"/><text x="312.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="346" y="260" width="1" height="15" fill="rgb(242,96,48)"/><text x="349.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="346" y="276" width="1" height="15" fill="rgb(224,223,22)"/><text x="349.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.16%)</title><rect x="346" y="292" width="1" height="15" fill="rgb(254,182,3)"/><text x="349.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="346" y="308" width="1" height="15" fill="rgb(209,22,50)"/><text x="349.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="346" y="324" width="1" height="15" fill="rgb(215,189,25)"/><text x="349.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="346" y="340" width="1" height="15" fill="rgb(237,10,30)"/><text x="349.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="346" y="356" width="1" height="15" fill="rgb(226,147,46)"/><text x="349.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="346" y="372" width="1" height="15" fill="rgb(227,104,21)"/><text x="349.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="346" y="388" width="1" height="15" fill="rgb(226,182,42)"/><text x="349.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.16%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(252,188,42)"/><text x="350.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.16%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(243,198,25)"/><text x="350.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="349" y="308" width="2" height="15" fill="rgb(234,170,16)"/><text x="352.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.16%)</title><rect x="349" y="324" width="2" height="15" fill="rgb(235,7,45)"/><text x="352.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.16%)</title><rect x="349" y="340" width="2" height="15" fill="rgb(208,26,4)"/><text x="352.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.16%)</title><rect x="349" y="356" width="2" height="15" fill="rgb(220,92,18)"/><text x="352.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.16%)</title><rect x="351" y="324" width="2" height="15" fill="rgb(214,12,41)"/><text x="354.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.16%)</title><rect x="351" y="340" width="2" height="15" fill="rgb(248,144,11)"/><text x="354.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.32%)</title><rect x="353" y="356" width="4" height="15" fill="rgb(245,122,3)"/><text x="356.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.16%)</title><rect x="357" y="372" width="2" height="15" fill="rgb(225,168,46)"/><text x="360.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (27 samples, 4.37%)</title><rect x="309" y="196" width="52" height="15" fill="rgb(247,9,38)"/><text x="312.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 4.37%)</title><rect x="309" y="212" width="52" height="15" fill="rgb(214,13,10)"/><text x="312.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (27 samples, 4.37%)</title><rect x="309" y="228" width="52" height="15" fill="rgb(233,199,11)"/><text x="312.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 1.13%)</title><rect x="347" y="244" width="14" height="15" fill="rgb(239,189,18)"/><text x="350.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.13%)</title><rect x="347" y="260" width="14" height="15" fill="rgb(215,63,4)"/><text x="350.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.97%)</title><rect x="349" y="276" width="12" height="15" fill="rgb(212,225,27)"/><text x="352.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.97%)</title><rect x="349" y="292" width="12" height="15" fill="rgb(234,114,44)"/><text x="352.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.81%)</title><rect x="351" y="308" width="10" height="15" fill="rgb(229,182,40)"/><text x="354.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.65%)</title><rect x="353" y="324" width="8" height="15" fill="rgb(218,35,14)"/><text x="356.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.65%)</title><rect x="353" y="340" width="8" height="15" fill="rgb(247,115,21)"/><text x="356.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.32%)</title><rect x="357" y="356" width="4" height="15" fill="rgb(233,116,52)"/><text x="360.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.16%)</title><rect x="359" y="372" width="2" height="15" fill="rgb(221,8,47)"/><text x="362.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.16%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(229,8,21)"/><text x="364.00" y="334.50"></text></g><g><title>0x7f69c4a24103 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="361" y="340" width="2" height="15" fill="rgb(208,9,9)"/><text x="364.00" y="350.50"></text></g><g><title>sgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(231,189,14)"/><text x="368.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.62%)</title><rect x="361" y="276" width="19" height="15" fill="rgb(207,7,35)"/><text x="364.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (10 samples, 1.62%)</title><rect x="361" y="292" width="19" height="15" fill="rgb(208,135,31)"/><text x="364.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (10 samples, 1.62%)</title><rect x="361" y="308" width="19" height="15" fill="rgb(242,69,31)"/><text x="364.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (9 samples, 1.46%)</title><rect x="363" y="324" width="17" height="15" fill="rgb(251,66,11)"/><text x="366.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (9 samples, 1.46%)</title><rect x="363" y="340" width="17" height="15" fill="rgb(235,207,24)"/><text x="366.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.46%)</title><rect x="363" y="356" width="17" height="15" fill="rgb(208,175,41)"/><text x="366.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.46%)</title><rect x="363" y="372" width="17" height="15" fill="rgb(226,66,14)"/><text x="366.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.13%)</title><rect x="367" y="388" width="13" height="15" fill="rgb(222,75,22)"/><text x="370.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.32%)</title><rect x="380" y="276" width="4" height="15" fill="rgb(210,116,26)"/><text x="383.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (46 samples, 7.44%)</title><rect x="361" y="228" width="88" height="15" fill="rgb(232,162,10)"/><text x="364.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (46 samples, 7.44%)</title><rect x="361" y="244" width="88" height="15" fill="rgb(206,198,49)"/><text x="364.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (46 samples, 7.44%)</title><rect x="361" y="260" width="88" height="15" fill="rgb(248,205,20)"/><text x="364.00" y="270.50">dot (&lt;__ar..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (34 samples, 5.50%)</title><rect x="384" y="276" width="65" height="15" fill="rgb(205,148,30)"/><text x="387.00" y="286.50">sgemm_k..</text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="449" y="292" width="2" height="15" fill="rgb(210,51,15)"/><text x="452.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.16%)</title><rect x="449" y="308" width="2" height="15" fill="rgb(235,124,4)"/><text x="452.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.16%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(220,55,7)"/><text x="452.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.16%)</title><rect x="449" y="340" width="2" height="15" fill="rgb(209,22,35)"/><text x="452.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="451" y="292" width="1" height="15" fill="rgb(249,112,52)"/><text x="454.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="451" y="308" width="1" height="15" fill="rgb(235,213,16)"/><text x="454.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="451" y="324" width="1" height="15" fill="rgb(228,169,48)"/><text x="454.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="451" y="340" width="1" height="15" fill="rgb(229,118,54)"/><text x="454.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.49%)</title><rect x="449" y="244" width="5" height="15" fill="rgb(211,52,51)"/><text x="452.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.49%)</title><rect x="449" y="260" width="5" height="15" fill="rgb(223,55,37)"/><text x="452.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.49%)</title><rect x="449" y="276" width="5" height="15" fill="rgb(238,52,23)"/><text x="452.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.16%)</title><rect x="452" y="292" width="2" height="15" fill="rgb(246,163,45)"/><text x="455.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.16%)</title><rect x="452" y="308" width="2" height="15" fill="rgb(215,16,41)"/><text x="455.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 0.65%)</title><rect x="449" y="228" width="7" height="15" fill="rgb(208,158,37)"/><text x="452.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.16%)</title><rect x="454" y="244" width="2" height="15" fill="rgb(243,218,20)"/><text x="457.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.16%)</title><rect x="454" y="260" width="2" height="15" fill="rgb(238,217,8)"/><text x="457.00" y="270.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.16%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(220,85,29)"/><text x="461.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.16%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(250,193,47)"/><text x="461.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.16%)</title><rect x="458" y="324" width="2" height="15" fill="rgb(207,2,36)"/><text x="461.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="458" y="340" width="2" height="15" fill="rgb(218,123,34)"/><text x="461.00" y="350.50"></text></g><g><title>0x7f69c49a5318 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="458" y="356" width="2" height="15" fill="rgb(240,130,16)"/><text x="461.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.32%)</title><rect x="458" y="276" width="4" height="15" fill="rgb(245,68,36)"/><text x="461.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.16%)</title><rect x="460" y="292" width="2" height="15" fill="rgb(221,90,43)"/><text x="463.00" y="302.50"></text></g><g><title>0x7f69c4b4f1a0 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="473" y="356" width="4" height="15" fill="rgb(253,50,14)"/><text x="476.00" y="366.50"></text></g><g><title>0x7f69c4b82e00 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="477" y="356" width="2" height="15" fill="rgb(213,112,31)"/><text x="480.00" y="366.50"></text></g><g><title>0x7f69c4b82e0e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="479" y="356" width="2" height="15" fill="rgb(224,73,18)"/><text x="482.00" y="366.50"></text></g><g><title>0x7f69c4b82e17 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="481" y="356" width="2" height="15" fill="rgb(236,77,5)"/><text x="484.00" y="366.50"></text></g><g><title>0x7f69c4b82e62 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(219,196,41)"/><text x="486.00" y="366.50"></text></g><g><title>0x7f69c4b82e71 (libm-2.29.so) (2 samples, 0.32%)</title><rect x="485" y="356" width="4" height="15" fill="rgb(212,129,20)"/><text x="488.00" y="366.50"></text></g><g><title>0x7f69c4b82e7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="489" y="356" width="2" height="15" fill="rgb(238,112,23)"/><text x="492.00" y="366.50"></text></g><g><title>0x7f69c4b82e96 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="491" y="356" width="2" height="15" fill="rgb(209,69,27)"/><text x="494.00" y="366.50"></text></g><g><title>0x7f69a6e2a214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 2.75%)</title><rect x="462" y="324" width="32" height="15" fill="rgb(248,136,42)"/><text x="465.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (17 samples, 2.75%)</title><rect x="462" y="340" width="32" height="15" fill="rgb(230,25,47)"/><text x="465.00" y="350.50">ex..</text></g><g><title>0x7f69c4b82ea6 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="493" y="356" width="1" height="15" fill="rgb(227,139,49)"/><text x="496.00" y="366.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 3.56%)</title><rect x="462" y="292" width="42" height="15" fill="rgb(218,130,43)"/><text x="465.00" y="302.50">tri..</text></g><g><title>0x7f69a6e0833d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 3.56%)</title><rect x="462" y="308" width="42" height="15" fill="rgb(250,82,16)"/><text x="465.00" y="318.50">0x7..</text></g><g><title>0x7f69a6e2a228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.81%)</title><rect x="494" y="324" width="10" height="15" fill="rgb(217,193,41)"/><text x="497.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (26 samples, 4.21%)</title><rect x="456" y="228" width="50" height="15" fill="rgb(220,172,42)"/><text x="459.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (25 samples, 4.05%)</title><rect x="458" y="244" width="48" height="15" fill="rgb(225,99,28)"/><text x="461.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 4.05%)</title><rect x="458" y="260" width="48" height="15" fill="rgb(249,31,40)"/><text x="461.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (23 samples, 3.72%)</title><rect x="462" y="276" width="44" height="15" fill="rgb(215,43,48)"/><text x="465.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.16%)</title><rect x="504" y="292" width="2" height="15" fill="rgb(214,83,33)"/><text x="507.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="504" y="308" width="2" height="15" fill="rgb(207,147,2)"/><text x="507.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.16%)</title><rect x="506" y="228" width="2" height="15" fill="rgb(249,29,9)"/><text x="509.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.32%)</title><rect x="508" y="292" width="4" height="15" fill="rgb(215,129,5)"/><text x="511.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.16%)</title><rect x="514" y="308" width="1" height="15" fill="rgb(221,166,14)"/><text x="517.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 0.97%)</title><rect x="508" y="228" width="11" height="15" fill="rgb(234,108,39)"/><text x="511.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 0.97%)</title><rect x="508" y="244" width="11" height="15" fill="rgb(214,158,5)"/><text x="511.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.97%)</title><rect x="508" y="260" width="11" height="15" fill="rgb(248,30,21)"/><text x="511.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 0.97%)</title><rect x="508" y="276" width="11" height="15" fill="rgb(217,145,49)"/><text x="511.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.65%)</title><rect x="512" y="292" width="7" height="15" fill="rgb(220,43,46)"/><text x="515.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.32%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(248,112,25)"/><text x="518.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.32%)</title><rect x="515" y="324" width="4" height="15" fill="rgb(248,138,44)"/><text x="518.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.16%)</title><rect x="517" y="340" width="2" height="15" fill="rgb(214,80,54)"/><text x="520.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (84 samples, 13.59%)</title><rect x="361" y="196" width="160" height="15" fill="rgb(228,56,5)"/><text x="364.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (84 samples, 13.59%)</title><rect x="361" y="212" width="160" height="15" fill="rgb(247,91,27)"/><text x="364.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.16%)</title><rect x="519" y="228" width="2" height="15" fill="rgb(220,218,48)"/><text x="522.00" y="238.50"></text></g><g><title>0x7f69c4a24120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="519" y="244" width="2" height="15" fill="rgb(213,153,35)"/><text x="522.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (115 samples, 18.61%)</title><rect x="304" y="180" width="219" height="15" fill="rgb(220,114,5)"/><text x="307.00" y="190.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.16%)</title><rect x="521" y="196" width="2" height="15" fill="rgb(226,40,53)"/><text x="524.00" y="206.50"></text></g><g><title>0x7f69c4ae1154 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="521" y="212" width="2" height="15" fill="rgb(211,78,14)"/><text x="524.00" y="222.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (122 samples, 19.74%)</title><rect x="292" y="164" width="233" height="15" fill="rgb(244,90,43)"/><text x="295.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.16%)</title><rect x="523" y="180" width="2" height="15" fill="rgb(220,17,36)"/><text x="526.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.16%)</title><rect x="525" y="164" width="2" height="15" fill="rgb(213,15,27)"/><text x="528.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.16%)</title><rect x="527" y="164" width="2" height="15" fill="rgb(254,138,20)"/><text x="530.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:45) (129 samples, 20.87%)</title><rect x="284" y="52" width="247" height="15" fill="rgb(212,105,28)"/><text x="287.00" y="62.50">&lt;module&gt; (bench_LogisticRegressi..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:44) (129 samples, 20.87%)</title><rect x="284" y="68" width="247" height="15" fill="rgb(208,125,14)"/><text x="287.00" y="78.50">profile_pyrt (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:29) (129 samples, 20.87%)</title><rect x="284" y="84" width="247" height="15" fill="rgb(254,47,0)"/><text x="287.00" y="94.50">setup_profile (bench_LogisticReg..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:23) (127 samples, 20.55%)</title><rect x="288" y="100" width="243" height="15" fill="rgb(207,160,13)"/><text x="291.00" y="110.50">profile (bench_LogisticRegressio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (127 samples, 20.55%)</title><rect x="288" y="116" width="243" height="15" fill="rgb(240,204,25)"/><text x="291.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (126 samples, 20.39%)</title><rect x="290" y="132" width="241" height="15" fill="rgb(250,161,2)"/><text x="293.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (126 samples, 20.39%)</title><rect x="290" y="148" width="241" height="15" fill="rgb(253,154,7)"/><text x="293.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="529" y="164" width="2" height="15" fill="rgb(230,28,39)"/><text x="532.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="529" y="180" width="2" height="15" fill="rgb(206,202,13)"/><text x="532.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="529" y="196" width="2" height="15" fill="rgb(236,34,35)"/><text x="532.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.16%)</title><rect x="529" y="212" width="2" height="15" fill="rgb(235,150,14)"/><text x="532.00" y="222.50"></text></g><g><title>0x7f69c4a039a8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="529" y="228" width="2" height="15" fill="rgb(212,12,51)"/><text x="532.00" y="238.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.16%)</title><rect x="531" y="196" width="2" height="15" fill="rgb(210,142,0)"/><text x="534.00" y="206.50"></text></g><g><title>0x7f698526cff9 (?) (1 samples, 0.16%)</title><rect x="533" y="212" width="2" height="15" fill="rgb(241,137,9)"/><text x="536.00" y="222.50"></text></g><g><title>0x7f6985267ef6 (?) (1 samples, 0.16%)</title><rect x="533" y="228" width="2" height="15" fill="rgb(254,206,30)"/><text x="536.00" y="238.50"></text></g><g><title>0x7f698525c962 (?) (1 samples, 0.16%)</title><rect x="533" y="244" width="2" height="15" fill="rgb(222,101,33)"/><text x="536.00" y="254.50"></text></g><g><title>0x7f69852907a7 (?) (1 samples, 0.16%)</title><rect x="533" y="260" width="2" height="15" fill="rgb(223,78,47)"/><text x="536.00" y="270.50"></text></g><g><title>0x7f6985290379 (?) (1 samples, 0.16%)</title><rect x="533" y="276" width="2" height="15" fill="rgb(243,98,1)"/><text x="536.00" y="286.50"></text></g><g><title>0x7f69856ee8b8 (?) (1 samples, 0.16%)</title><rect x="533" y="292" width="2" height="15" fill="rgb(229,172,36)"/><text x="536.00" y="302.50"></text></g><g><title>0x7f69856ecc7f (?) (1 samples, 0.16%)</title><rect x="533" y="308" width="2" height="15" fill="rgb(218,73,17)"/><text x="536.00" y="318.50"></text></g><g><title>0x7f69856ff99c (?) (1 samples, 0.16%)</title><rect x="533" y="324" width="2" height="15" fill="rgb(224,112,18)"/><text x="536.00" y="334.50"></text></g><g><title>0x7f69853e4a89 (?) (1 samples, 0.16%)</title><rect x="533" y="340" width="2" height="15" fill="rgb(240,148,28)"/><text x="536.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="535" y="340" width="1" height="15" fill="rgb(210,206,30)"/><text x="538.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="535" y="260" width="3" height="15" fill="rgb(228,94,31)"/><text x="538.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="535" y="276" width="3" height="15" fill="rgb(206,173,12)"/><text x="538.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="535" y="292" width="3" height="15" fill="rgb(227,139,25)"/><text x="538.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="535" y="308" width="3" height="15" fill="rgb(251,112,13)"/><text x="538.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="535" y="324" width="3" height="15" fill="rgb(253,63,15)"/><text x="538.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="536" y="340" width="2" height="15" fill="rgb(249,121,32)"/><text x="539.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="536" y="356" width="2" height="15" fill="rgb(243,132,7)"/><text x="539.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="538" y="260" width="6" height="15" fill="rgb(228,36,14)"/><text x="541.00" y="270.50"></text></g><g><title>0x7f6985234870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="542" y="276" width="2" height="15" fill="rgb(227,96,20)"/><text x="545.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:18) (8 samples, 1.29%)</title><rect x="531" y="100" width="15" height="15" fill="rgb(235,12,34)"/><text x="534.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.29%)</title><rect x="531" y="116" width="15" height="15" fill="rgb(223,86,15)"/><text x="534.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (8 samples, 1.29%)</title><rect x="531" y="132" width="15" height="15" fill="rgb(242,177,15)"/><text x="534.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (8 samples, 1.29%)</title><rect x="531" y="148" width="15" height="15" fill="rgb(205,119,41)"/><text x="534.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (8 samples, 1.29%)</title><rect x="531" y="164" width="15" height="15" fill="rgb(239,224,11)"/><text x="534.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (8 samples, 1.29%)</title><rect x="531" y="180" width="15" height="15" fill="rgb(242,215,12)"/><text x="534.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (7 samples, 1.13%)</title><rect x="533" y="196" width="13" height="15" fill="rgb(216,115,8)"/><text x="536.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="535" y="212" width="11" height="15" fill="rgb(231,62,28)"/><text x="538.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="535" y="228" width="11" height="15" fill="rgb(210,155,36)"/><text x="538.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.97%)</title><rect x="535" y="244" width="11" height="15" fill="rgb(246,34,32)"/><text x="538.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="544" y="260" width="2" height="15" fill="rgb(213,81,5)"/><text x="547.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="544" y="276" width="2" height="15" fill="rgb(220,68,19)"/><text x="547.00" y="286.50"></text></g><g><title>0x7f69c4a03d13 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(242,216,49)"/><text x="547.00" y="302.50"></text></g><g><title>0x7f69c4a02bc6 (libc-2.29.so) (3 samples, 0.49%)</title><rect x="582" y="132" width="6" height="15" fill="rgb(233,69,10)"/><text x="585.00" y="142.50"></text></g><g><title>0x7f69c4a02bdf (libc-2.29.so) (1 samples, 0.16%)</title><rect x="588" y="132" width="2" height="15" fill="rgb(233,209,50)"/><text x="591.00" y="142.50"></text></g><g><title>0x7f69c4a02c19 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="590" y="132" width="2" height="15" fill="rgb(215,174,38)"/><text x="593.00" y="142.50"></text></g><g><title>0x7f69c4a02c2d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="592" y="132" width="2" height="15" fill="rgb(219,118,27)"/><text x="595.00" y="142.50"></text></g><g><title>0x7f69c4a02c49 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="594" y="132" width="2" height="15" fill="rgb(221,145,32)"/><text x="597.00" y="142.50"></text></g><g><title>0x7f69c4a02aa4 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="596" y="148" width="4" height="15" fill="rgb(242,91,13)"/><text x="599.00" y="158.50"></text></g><g><title>0x7f69c4a02c73 (libc-2.29.so) (3 samples, 0.49%)</title><rect x="596" y="132" width="5" height="15" fill="rgb(254,143,15)"/><text x="599.00" y="142.50"></text></g><g><title>0x7f69c4a02aaf (libc-2.29.so) (1 samples, 0.16%)</title><rect x="600" y="148" width="1" height="15" fill="rgb(220,77,40)"/><text x="603.00" y="158.50"></text></g><g><title>0x7f69c4a03eb0 (libc-2.29.so) (11 samples, 1.78%)</title><rect x="582" y="116" width="21" height="15" fill="rgb(239,161,23)"/><text x="585.00" y="126.50"></text></g><g><title>0x7f69c4a02ca7 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="601" y="132" width="2" height="15" fill="rgb(233,5,47)"/><text x="604.00" y="142.50"></text></g><g><title>0x7f69c4a02acd (libc-2.29.so) (1 samples, 0.16%)</title><rect x="601" y="148" width="2" height="15" fill="rgb(221,77,20)"/><text x="604.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.16%)</title><rect x="603" y="148" width="2" height="15" fill="rgb(225,157,20)"/><text x="606.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.49%)</title><rect x="605" y="196" width="6" height="15" fill="rgb(206,203,8)"/><text x="608.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.49%)</title><rect x="605" y="212" width="6" height="15" fill="rgb(241,8,27)"/><text x="608.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="607" y="228" width="4" height="15" fill="rgb(210,186,31)"/><text x="610.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="609" y="244" width="2" height="15" fill="rgb(229,18,8)"/><text x="612.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="609" y="260" width="2" height="15" fill="rgb(233,7,15)"/><text x="612.00" y="270.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceAllocate (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="619" y="452" width="2" height="15" fill="rgb(237,118,9)"/><text x="622.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="340" width="5" height="15" fill="rgb(209,115,12)"/><text x="622.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="356" width="5" height="15" fill="rgb(239,179,2)"/><text x="622.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="372" width="5" height="15" fill="rgb(210,154,47)"/><text x="622.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="388" width="5" height="15" fill="rgb(209,16,40)"/><text x="622.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="404" width="5" height="15" fill="rgb(213,206,0)"/><text x="622.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="420" width="5" height="15" fill="rgb(207,213,24)"/><text x="622.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="619" y="436" width="5" height="15" fill="rgb(214,67,16)"/><text x="622.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="621" y="452" width="3" height="15" fill="rgb(213,146,42)"/><text x="624.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="621" y="468" width="3" height="15" fill="rgb(209,1,54)"/><text x="624.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="621" y="484" width="3" height="15" fill="rgb(252,80,26)"/><text x="624.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="622" y="500" width="2" height="15" fill="rgb(233,149,5)"/><text x="625.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="622" y="516" width="2" height="15" fill="rgb(225,114,23)"/><text x="625.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="622" y="532" width="2" height="15" fill="rgb(212,123,1)"/><text x="625.00" y="542.50"></text></g><g><title>0x7f69c4a23db3 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="790" y="372" width="4" height="15" fill="rgb(234,178,34)"/><text x="793.00" y="382.50"></text></g><g><title>0x7f69c4b82e37 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="794" y="372" width="2" height="15" fill="rgb(243,9,18)"/><text x="797.00" y="382.50"></text></g><g><title>0x7f69c4b82e53 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="796" y="372" width="2" height="15" fill="rgb(213,157,6)"/><text x="799.00" y="382.50"></text></g><g><title>0x7f69c4b82e57 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="798" y="372" width="2" height="15" fill="rgb(221,59,38)"/><text x="801.00" y="382.50"></text></g><g><title>0x7f69c4b82e71 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="800" y="372" width="2" height="15" fill="rgb(217,96,54)"/><text x="803.00" y="382.50"></text></g><g><title>0x7f69c4b82e7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="802" y="372" width="2" height="15" fill="rgb(238,92,50)"/><text x="805.00" y="382.50"></text></g><g><title>0x7f69c4b82e92 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="804" y="372" width="2" height="15" fill="rgb(248,210,11)"/><text x="807.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 15.53%)</title><rect x="624" y="340" width="184" height="15" fill="rgb(230,64,28)"/><text x="627.00" y="350.50">onnxruntime::ml::Linear..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 3.56%)</title><rect x="766" y="356" width="42" height="15" fill="rgb(232,181,11)"/><text x="769.00" y="366.50">onn..</text></g><g><title>0x7f69c4b82ea2 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="806" y="372" width="2" height="15" fill="rgb(226,146,50)"/><text x="809.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.27%)</title><rect x="808" y="340" width="26" height="15" fill="rgb(207,130,53)"/><text x="811.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.27%)</title><rect x="808" y="356" width="26" height="15" fill="rgb(219,103,2)"/><text x="811.00" y="366.50">o..</text></g><g><title>0x7f69b44cfd50 (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="850" y="372" width="3" height="15" fill="rgb(247,24,28)"/><text x="853.00" y="382.50"></text></g><g><title>0x7f69c4a04b12 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="926" y="388" width="2" height="15" fill="rgb(223,128,2)"/><text x="929.00" y="398.50"></text></g><g><title>0x7f69c4a04b39 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="928" y="388" width="2" height="15" fill="rgb(244,114,32)"/><text x="931.00" y="398.50"></text></g><g><title>0x7f69c4a04b49 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="930" y="388" width="2" height="15" fill="rgb(226,101,7)"/><text x="933.00" y="398.50"></text></g><g><title>0x7f69c4a04b61 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="932" y="388" width="2" height="15" fill="rgb(241,143,12)"/><text x="935.00" y="398.50"></text></g><g><title>0x7f69c4a04b76 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="934" y="388" width="2" height="15" fill="rgb(226,18,33)"/><text x="937.00" y="398.50"></text></g><g><title>0x7f69c4a04d9f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="936" y="388" width="1" height="15" fill="rgb(226,229,31)"/><text x="939.00" y="398.50"></text></g><g><title>0x7f69c4a04dd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="937" y="388" width="2" height="15" fill="rgb(250,154,3)"/><text x="940.00" y="398.50"></text></g><g><title>0x7f69c4a04e07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="939" y="388" width="2" height="15" fill="rgb(252,172,19)"/><text x="942.00" y="398.50"></text></g><g><title>0x7f69c4a05033 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(242,48,19)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f69c4a05040 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="943" y="388" width="2" height="15" fill="rgb(245,128,39)"/><text x="946.00" y="398.50"></text></g><g><title>0x7f69c4a0506d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="945" y="388" width="2" height="15" fill="rgb(228,94,15)"/><text x="948.00" y="398.50"></text></g><g><title>0x7f69c4a0507f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="947" y="388" width="2" height="15" fill="rgb(238,119,7)"/><text x="950.00" y="398.50"></text></g><g><title>0x7f69c4a05384 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="949" y="388" width="2" height="15" fill="rgb(234,67,19)"/><text x="952.00" y="398.50"></text></g><g><title>0x7f69c4a05395 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="951" y="388" width="2" height="15" fill="rgb(239,11,48)"/><text x="954.00" y="398.50"></text></g><g><title>0x7f69c4a053ae (libc-2.29.so) (1 samples, 0.16%)</title><rect x="953" y="388" width="2" height="15" fill="rgb(254,128,34)"/><text x="956.00" y="398.50"></text></g><g><title>0x7f69c4a053c4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="955" y="388" width="2" height="15" fill="rgb(233,224,36)"/><text x="958.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (58 samples, 9.39%)</title><rect x="848" y="356" width="110" height="15" fill="rgb(221,221,17)"/><text x="851.00" y="366.50">operator new ..</text></g><g><title>malloc (libc-2.29.so) (55 samples, 8.90%)</title><rect x="853" y="372" width="105" height="15" fill="rgb(243,2,54)"/><text x="856.00" y="382.50">malloc (libc..</text></g><g><title>0x7f69c4a053e0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="957" y="388" width="1" height="15" fill="rgb(235,77,37)"/><text x="960.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="958" y="356" width="4" height="15" fill="rgb(247,160,24)"/><text x="961.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.81%)</title><rect x="962" y="356" width="10" height="15" fill="rgb(229,55,23)"/><text x="965.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="970" y="372" width="2" height="15" fill="rgb(238,78,39)"/><text x="973.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.81%)</title><rect x="972" y="356" width="9" height="15" fill="rgb(247,19,17)"/><text x="975.00" y="366.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (193 samples, 31.23%)</title><rect x="619" y="324" width="368" height="15" fill="rgb(245,55,13)"/><text x="622.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (80 samples, 12.94%)</title><rect x="834" y="340" width="153" height="15" fill="rgb(254,39,49)"/><text x="837.00" y="350.50">onnxruntime::ml::Zi..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="981" y="356" width="6" height="15" fill="rgb(237,50,17)"/><text x="984.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 31.39%)</title><rect x="619" y="260" width="370" height="15" fill="rgb(225,191,44)"/><text x="622.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 31.39%)</title><rect x="619" y="276" width="370" height="15" fill="rgb(252,148,25)"/><text x="622.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 31.39%)</title><rect x="619" y="292" width="370" height="15" fill="rgb(232,118,14)"/><text x="622.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (194 samples, 31.39%)</title><rect x="619" y="308" width="370" height="15" fill="rgb(246,41,31)"/><text x="622.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="987" y="324" width="2" height="15" fill="rgb(247,175,43)"/><text x="990.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="987" y="340" width="2" height="15" fill="rgb(253,146,25)"/><text x="990.00" y="350.50"></text></g><g><title>0x7f69c4a04e07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="987" y="356" width="2" height="15" fill="rgb(221,51,13)"/><text x="990.00" y="366.50"></text></g><g><title>onnxruntime::SequenceType&lt;std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, float, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="989" y="260" width="2" height="15" fill="rgb(207,26,31)"/><text x="992.00" y="270.50"></text></g><g><title>0x7f6985234870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1102" y="276" width="3" height="15" fill="rgb(222,45,43)"/><text x="1105.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.27%)</title><rect x="1105" y="276" width="27" height="15" fill="rgb(216,215,28)"/><text x="1108.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 12.30%)</title><rect x="991" y="260" width="145" height="15" fill="rgb(242,82,25)"/><text x="994.00" y="270.50">pybind11::detail::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="1132" y="276" width="4" height="15" fill="rgb(251,116,46)"/><text x="1135.00" y="286.50"></text></g><g><title>0x7f69c4a03d07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1136" y="276" width="2" height="15" fill="rgb(210,44,5)"/><text x="1139.00" y="286.50"></text></g><g><title>0x7f69c4a0390e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1142" y="292" width="2" height="15" fill="rgb(219,98,10)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f69c4a03982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(254,193,12)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f69c4a039b3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1146" y="292" width="1" height="15" fill="rgb(212,102,21)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f69c4a039d3 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1147" y="292" width="4" height="15" fill="rgb(248,117,6)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7f69c4a039ff (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(232,37,10)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7f69c4a03a4b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(241,84,5)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7f69c4a03a51 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1155" y="292" width="2" height="15" fill="rgb(207,171,43)"/><text x="1158.00" y="302.50"></text></g><g><title>0x7f69c4a03d07 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="1157" y="292" width="8" height="15" fill="rgb(249,172,33)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7f69c4a03d13 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(211,35,21)"/><text x="1168.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1167" y="292" width="1" height="15" fill="rgb(252,163,53)"/><text x="1170.00" y="302.50"></text></g><g><title>0x7f69c4a0390e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(212,63,14)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7f69c4a03a33 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(240,200,26)"/><text x="1175.00" y="318.50"></text></g><g><title>0x7f69c4a03d07 (libc-2.29.so) (4 samples, 0.65%)</title><rect x="1174" y="308" width="8" height="15" fill="rgb(207,45,20)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (300 samples, 48.54%)</title><rect x="613" y="244" width="573" height="15" fill="rgb(239,219,51)"/><text x="616.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 4.21%)</title><rect x="1136" y="260" width="50" height="15" fill="rgb(210,163,5)"/><text x="1139.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.05%)</title><rect x="1138" y="276" width="48" height="15" fill="rgb(220,102,7)"/><text x="1141.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.46%)</title><rect x="1168" y="292" width="18" height="15" fill="rgb(228,197,48)"/><text x="1171.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(232,181,33)"/><text x="1185.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (305 samples, 49.35%)</title><rect x="605" y="164" width="583" height="15" fill="rgb(208,175,22)"/><text x="608.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (305 samples, 49.35%)</title><rect x="605" y="180" width="583" height="15" fill="rgb(219,36,0)"/><text x="608.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (302 samples, 48.87%)</title><rect x="611" y="196" width="577" height="15" fill="rgb(251,138,42)"/><text x="614.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 48.71%)</title><rect x="613" y="212" width="575" height="15" fill="rgb(250,204,50)"/><text x="616.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (301 samples, 48.71%)</title><rect x="613" y="228" width="575" height="15" fill="rgb(212,102,48)"/><text x="616.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(227,62,17)"/><text x="1189.00" y="254.50"></text></g><g><title>all (618 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,140,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:52) (345 samples, 55.83%)</title><rect x="531" y="52" width="659" height="15" fill="rgb(247,113,10)"/><text x="534.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:51) (345 samples, 55.83%)</title><rect x="531" y="68" width="659" height="15" fill="rgb(216,155,15)"/><text x="534.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_flo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:29) (345 samples, 55.83%)</title><rect x="531" y="84" width="659" height="15" fill="rgb(211,188,15)"/><text x="534.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_f..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_.py:23) (337 samples, 54.53%)</title><rect x="546" y="100" width="644" height="15" fill="rgb(254,172,10)"/><text x="549.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (307 samples, 49.68%)</title><rect x="603" y="116" width="587" height="15" fill="rgb(218,213,47)"/><text x="606.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (307 samples, 49.68%)</title><rect x="603" y="132" width="587" height="15" fill="rgb(247,150,10)"/><text x="606.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (306 samples, 49.51%)</title><rect x="605" y="148" width="585" height="15" fill="rgb(206,61,6)"/><text x="608.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.16%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(253,202,26)"/><text x="1191.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.16%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(218,119,21)"/><text x="1191.00" y="190.50"></text></g></g></svg>