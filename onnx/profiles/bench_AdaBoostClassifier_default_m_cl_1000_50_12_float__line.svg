<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.10%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(241,201,44)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.10%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(214,11,35)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.10%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(206,52,39)"/><text x="13.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.10%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(251,225,28)"/><text x="13.00" y="222.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.10%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(228,66,27)"/><text x="13.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.10%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(243,213,46)"/><text x="13.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.10%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(221,156,54)"/><text x="13.00" y="270.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.10%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(240,128,46)"/><text x="13.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.10%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(242,124,48)"/><text x="13.00" y="302.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.10%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(216,191,32)"/><text x="13.00" y="318.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.10%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(209,165,48)"/><text x="13.00" y="334.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.10%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(247,200,20)"/><text x="13.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.10%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(228,220,17)"/><text x="13.00" y="366.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.10%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(241,113,49)"/><text x="13.00" y="382.50"></text></g><g><title>unpack_indices (mapping.c:347) (1 samples, 0.10%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(250,109,20)"/><text x="13.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.10%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(248,220,37)"/><text x="14.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.10%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(241,157,25)"/><text x="14.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.10%)</title><rect x="11" y="260" width="1" height="15" fill="rgb(229,204,11)"/><text x="14.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.10%)</title><rect x="11" y="276" width="1" height="15" fill="rgb(228,48,1)"/><text x="14.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="11" y="292" width="1" height="15" fill="rgb(235,24,52)"/><text x="14.00" y="302.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.10%)</title><rect x="11" y="308" width="1" height="15" fill="rgb(216,223,13)"/><text x="14.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:31) (3 samples, 0.31%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(236,102,14)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:11) (3 samples, 0.31%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(221,19,42)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (3 samples, 0.31%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(216,211,17)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.31%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(230,174,30)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(207,41,35)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(254,110,18)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(235,66,33)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:523) (2 samples, 0.21%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(232,209,22)"/><text x="14.00" y="174.50"></text></g><g><title>average (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(210,167,46)"/><text x="14.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.21%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(231,135,32)"/><text x="14.00" y="206.50"></text></g><g><title>average (numpy/lib/function_base.py:422) (2 samples, 0.21%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(207,87,41)"/><text x="14.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="12" y="228" width="1" height="15" fill="rgb(222,203,16)"/><text x="15.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="12" y="244" width="1" height="15" fill="rgb(222,137,27)"/><text x="15.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.10%)</title><rect x="12" y="260" width="1" height="15" fill="rgb(251,68,50)"/><text x="15.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.10%)</title><rect x="12" y="276" width="1" height="15" fill="rgb(240,18,42)"/><text x="15.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="13" y="292" width="1" height="15" fill="rgb(214,190,25)"/><text x="16.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="13" y="308" width="1" height="15" fill="rgb(235,136,27)"/><text x="16.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="13" y="324" width="1" height="15" fill="rgb(224,132,7)"/><text x="16.00" y="334.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (2 samples, 0.21%)</title><rect x="13" y="100" width="3" height="15" fill="rgb(225,6,13)"/><text x="16.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (2 samples, 0.21%)</title><rect x="13" y="116" width="3" height="15" fill="rgb(254,88,27)"/><text x="16.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (2 samples, 0.21%)</title><rect x="13" y="132" width="3" height="15" fill="rgb(231,158,52)"/><text x="16.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="13" y="148" width="3" height="15" fill="rgb(228,96,30)"/><text x="16.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="13" y="164" width="3" height="15" fill="rgb(236,1,5)"/><text x="16.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="13" y="180" width="3" height="15" fill="rgb(233,225,49)"/><text x="16.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="13" y="196" width="3" height="15" fill="rgb(205,94,46)"/><text x="16.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="13" y="212" width="3" height="15" fill="rgb(242,126,39)"/><text x="16.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (2 samples, 0.21%)</title><rect x="13" y="228" width="3" height="15" fill="rgb(236,34,15)"/><text x="16.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(237,205,20)"/><text x="16.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(235,1,3)"/><text x="16.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(248,181,51)"/><text x="16.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(216,190,50)"/><text x="17.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(245,1,0)"/><text x="17.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:14) (1 samples, 0.10%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(208,140,50)"/><text x="17.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="14" y="340" width="2" height="15" fill="rgb(226,222,3)"/><text x="17.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="14" y="356" width="2" height="15" fill="rgb(243,203,10)"/><text x="17.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="14" y="372" width="2" height="15" fill="rgb(242,208,21)"/><text x="17.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="14" y="388" width="2" height="15" fill="rgb(211,195,25)"/><text x="17.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="404" width="2" height="15" fill="rgb(251,227,31)"/><text x="17.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py:90) (1 samples, 0.10%)</title><rect x="14" y="420" width="2" height="15" fill="rgb(229,131,23)"/><text x="17.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="14" y="436" width="2" height="15" fill="rgb(246,17,26)"/><text x="17.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="14" y="452" width="2" height="15" fill="rgb(212,176,25)"/><text x="17.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="14" y="468" width="2" height="15" fill="rgb(210,32,39)"/><text x="17.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="14" y="484" width="2" height="15" fill="rgb(221,153,44)"/><text x="17.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="500" width="2" height="15" fill="rgb(250,56,54)"/><text x="17.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py:27) (1 samples, 0.10%)</title><rect x="14" y="516" width="2" height="15" fill="rgb(232,196,24)"/><text x="17.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="14" y="532" width="2" height="15" fill="rgb(208,7,44)"/><text x="17.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="14" y="548" width="2" height="15" fill="rgb(215,0,13)"/><text x="17.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="14" y="564" width="2" height="15" fill="rgb(248,25,20)"/><text x="17.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="14" y="580" width="2" height="15" fill="rgb(251,222,12)"/><text x="17.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="596" width="2" height="15" fill="rgb(211,119,44)"/><text x="17.00" y="606.50"></text></g><g><title>&lt;module&gt; (graphviz/dot.py:31) (1 samples, 0.10%)</title><rect x="14" y="612" width="2" height="15" fill="rgb(239,79,14)"/><text x="17.00" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="14" y="628" width="2" height="15" fill="rgb(220,222,5)"/><text x="17.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="644" width="2" height="15" fill="rgb(235,90,16)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="14" y="660" width="2" height="15" fill="rgb(209,105,33)"/><text x="17.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="14" y="676" width="2" height="15" fill="rgb(238,229,49)"/><text x="17.00" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="14" y="692" width="2" height="15" fill="rgb(222,57,20)"/><text x="17.00" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="14" y="708" width="2" height="15" fill="rgb(216,8,37)"/><text x="17.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="14" y="724" width="2" height="15" fill="rgb(224,70,30)"/><text x="17.00" y="734.50"></text></g><g><title>&lt;module&gt; (graphviz/lang.py:20) (1 samples, 0.10%)</title><rect x="14" y="740" width="2" height="15" fill="rgb(213,184,21)"/><text x="17.00" y="750.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="14" y="756" width="2" height="15" fill="rgb(232,6,21)"/><text x="17.00" y="766.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="14" y="772" width="2" height="15" fill="rgb(211,154,10)"/><text x="17.00" y="782.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.10%)</title><rect x="14" y="788" width="2" height="15" fill="rgb(247,140,37)"/><text x="17.00" y="798.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.10%)</title><rect x="14" y="804" width="2" height="15" fill="rgb(231,100,44)"/><text x="17.00" y="814.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.10%)</title><rect x="14" y="820" width="2" height="15" fill="rgb(254,89,1)"/><text x="17.00" y="830.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.10%)</title><rect x="14" y="836" width="2" height="15" fill="rgb(216,104,9)"/><text x="17.00" y="846.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.10%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(231,200,28)"/><text x="17.00" y="862.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.10%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(213,218,32)"/><text x="17.00" y="878.50"></text></g><g><title>_compile (sre_compile.py:158) (1 samples, 0.10%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(252,140,45)"/><text x="17.00" y="894.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.31%)</title><rect x="13" y="84" width="4" height="15" fill="rgb(232,84,49)"/><text x="16.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="16" y="100" width="1" height="15" fill="rgb(249,81,51)"/><text x="19.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.10%)</title><rect x="16" y="116" width="1" height="15" fill="rgb(253,186,34)"/><text x="19.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.10%)</title><rect x="16" y="132" width="1" height="15" fill="rgb(208,23,44)"/><text x="19.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.10%)</title><rect x="16" y="148" width="1" height="15" fill="rgb(246,213,48)"/><text x="19.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.10%)</title><rect x="16" y="164" width="1" height="15" fill="rgb(251,2,20)"/><text x="19.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.10%)</title><rect x="16" y="180" width="1" height="15" fill="rgb(234,95,43)"/><text x="19.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.10%)</title><rect x="16" y="196" width="1" height="15" fill="rgb(224,121,11)"/><text x="19.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.10%)</title><rect x="16" y="212" width="1" height="15" fill="rgb(229,122,13)"/><text x="19.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:118) (1 samples, 0.10%)</title><rect x="16" y="228" width="1" height="15" fill="rgb(225,27,27)"/><text x="19.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.10%)</title><rect x="17" y="196" width="1" height="15" fill="rgb(253,214,7)"/><text x="20.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (2 samples, 0.21%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(209,80,39)"/><text x="20.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (2 samples, 0.21%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(218,59,35)"/><text x="20.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.10%)</title><rect x="18" y="196" width="1" height="15" fill="rgb(218,14,10)"/><text x="21.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.10%)</title><rect x="18" y="212" width="1" height="15" fill="rgb(238,31,22)"/><text x="21.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.10%)</title><rect x="19" y="212" width="1" height="15" fill="rgb(214,2,28)"/><text x="22.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.10%)</title><rect x="19" y="228" width="1" height="15" fill="rgb(252,174,44)"/><text x="22.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.10%)</title><rect x="19" y="244" width="1" height="15" fill="rgb(226,120,21)"/><text x="22.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.10%)</title><rect x="20" y="228" width="2" height="15" fill="rgb(231,121,43)"/><text x="23.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.10%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(239,76,14)"/><text x="23.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.10%)</title><rect x="22" y="228" width="1" height="15" fill="rgb(208,23,2)"/><text x="25.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.51%)</title><rect x="20" y="212" width="7" height="15" fill="rgb(222,24,6)"/><text x="23.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.31%)</title><rect x="23" y="228" width="4" height="15" fill="rgb(222,39,1)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.31%)</title><rect x="23" y="244" width="4" height="15" fill="rgb(209,132,13)"/><text x="26.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.10%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(236,102,36)"/><text x="30.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.10%)</title><rect x="28" y="244" width="1" height="15" fill="rgb(249,133,11)"/><text x="31.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.10%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(220,20,9)"/><text x="31.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.31%)</title><rect x="29" y="276" width="4" height="15" fill="rgb(242,122,23)"/><text x="32.00" y="286.50"></text></g><g><title>0x7fd33248a124 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="31" y="292" width="2" height="15" fill="rgb(254,26,47)"/><text x="34.00" y="302.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.10%)</title><rect x="33" y="276" width="1" height="15" fill="rgb(218,59,37)"/><text x="36.00" y="286.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.10%)</title><rect x="33" y="292" width="1" height="15" fill="rgb(249,2,0)"/><text x="36.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 0.51%)</title><rect x="29" y="244" width="6" height="15" fill="rgb(239,146,33)"/><text x="32.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 0.51%)</title><rect x="29" y="260" width="6" height="15" fill="rgb(209,70,48)"/><text x="32.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.10%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(217,195,32)"/><text x="37.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.31%)</title><rect x="35" y="244" width="4" height="15" fill="rgb(241,87,44)"/><text x="38.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.10%)</title><rect x="39" y="244" width="1" height="15" fill="rgb(216,199,15)"/><text x="42.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="39" y="260" width="1" height="15" fill="rgb(212,107,53)"/><text x="42.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1684) (1 samples, 0.10%)</title><rect x="39" y="276" width="1" height="15" fill="rgb(227,143,49)"/><text x="42.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="40" y="244" width="1" height="15" fill="rgb(231,122,12)"/><text x="43.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.10%)</title><rect x="40" y="260" width="1" height="15" fill="rgb(218,44,25)"/><text x="43.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.10%)</title><rect x="41" y="260" width="1" height="15" fill="rgb(223,123,7)"/><text x="44.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (14 samples, 1.44%)</title><rect x="27" y="212" width="17" height="15" fill="rgb(249,198,32)"/><text x="30.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (14 samples, 1.44%)</title><rect x="27" y="228" width="17" height="15" fill="rgb(239,69,33)"/><text x="30.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.21%)</title><rect x="41" y="244" width="3" height="15" fill="rgb(208,32,35)"/><text x="44.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.10%)</title><rect x="42" y="260" width="2" height="15" fill="rgb(214,77,19)"/><text x="45.00" y="270.50"></text></g><g><title>0x7fd30beacf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="44" y="244" width="1" height="15" fill="rgb(249,149,34)"/><text x="47.00" y="254.50"></text></g><g><title>0x7fd30be9cd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="44" y="260" width="1" height="15" fill="rgb(221,217,15)"/><text x="47.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.10%)</title><rect x="44" y="276" width="1" height="15" fill="rgb(247,43,53)"/><text x="47.00" y="286.50"></text></g><g><title>0x7fd30bebb2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="45" y="276" width="1" height="15" fill="rgb(248,54,13)"/><text x="48.00" y="286.50"></text></g><g><title>0x7fd30be9fd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="45" y="292" width="1" height="15" fill="rgb(253,88,54)"/><text x="48.00" y="302.50"></text></g><g><title>0x7fd30be9f666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="45" y="308" width="1" height="15" fill="rgb(241,29,50)"/><text x="48.00" y="318.50"></text></g><g><title>0x7fd30be950e0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="45" y="324" width="1" height="15" fill="rgb(207,146,26)"/><text x="48.00" y="334.50"></text></g><g><title>0x7fd30bebc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="45" y="260" width="3" height="15" fill="rgb(244,31,15)"/><text x="48.00" y="270.50"></text></g><g><title>0x7fd30bebb6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="46" y="276" width="2" height="15" fill="rgb(220,209,10)"/><text x="49.00" y="286.50"></text></g><g><title>0x7fd30beacfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="45" y="244" width="5" height="15" fill="rgb(238,220,26)"/><text x="48.00" y="254.50"></text></g><g><title>0x7fd30bebc540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="48" y="260" width="2" height="15" fill="rgb(243,19,23)"/><text x="51.00" y="270.50"></text></g><g><title>0x7fd30be912f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(235,127,54)"/><text x="51.00" y="286.50"></text></g><g><title>0x7fd30be904f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="48" y="292" width="2" height="15" fill="rgb(229,76,50)"/><text x="51.00" y="302.50"></text></g><g><title>0x7fd30bead04a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="50" y="244" width="1" height="15" fill="rgb(205,191,6)"/><text x="53.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.21%)</title><rect x="51" y="276" width="2" height="15" fill="rgb(252,30,36)"/><text x="54.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.21%)</title><rect x="51" y="292" width="2" height="15" fill="rgb(206,229,39)"/><text x="54.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.10%)</title><rect x="53" y="276" width="1" height="15" fill="rgb(224,210,13)"/><text x="56.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.10%)</title><rect x="53" y="292" width="1" height="15" fill="rgb(249,195,32)"/><text x="56.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.10%)</title><rect x="53" y="308" width="1" height="15" fill="rgb(232,229,8)"/><text x="56.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.10%)</title><rect x="53" y="324" width="1" height="15" fill="rgb(234,150,17)"/><text x="56.00" y="334.50"></text></g><g><title>0x7fd30bead05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="51" y="244" width="5" height="15" fill="rgb(249,185,6)"/><text x="54.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.41%)</title><rect x="51" y="260" width="5" height="15" fill="rgb(235,173,35)"/><text x="54.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.10%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(222,136,35)"/><text x="57.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(205,220,32)"/><text x="57.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="54" y="308" width="2" height="15" fill="rgb(208,214,39)"/><text x="57.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="54" y="324" width="2" height="15" fill="rgb(236,101,2)"/><text x="57.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.10%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(228,149,51)"/><text x="57.00" y="350.50"></text></g><g><title>0x7fd30bead14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="56" y="244" width="1" height="15" fill="rgb(239,219,1)"/><text x="59.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="56" y="260" width="1" height="15" fill="rgb(233,166,11)"/><text x="59.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="56" y="276" width="1" height="15" fill="rgb(223,6,33)"/><text x="59.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.10%)</title><rect x="56" y="292" width="1" height="15" fill="rgb(250,126,23)"/><text x="59.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (12 samples, 1.24%)</title><rect x="44" y="212" width="14" height="15" fill="rgb(245,130,28)"/><text x="47.00" y="222.50"></text></g><g><title>0x7fd30beadd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.24%)</title><rect x="44" y="228" width="14" height="15" fill="rgb(249,36,29)"/><text x="47.00" y="238.50"></text></g><g><title>0x7fd30bead18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="57" y="244" width="1" height="15" fill="rgb(226,82,20)"/><text x="60.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.10%)</title><rect x="58" y="212" width="1" height="15" fill="rgb(252,8,20)"/><text x="61.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="58" y="228" width="1" height="15" fill="rgb(253,131,27)"/><text x="61.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:411) (1 samples, 0.10%)</title><rect x="58" y="244" width="1" height="15" fill="rgb(244,96,30)"/><text x="61.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="61" y="228" width="1" height="15" fill="rgb(231,120,12)"/><text x="64.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.10%)</title><rect x="61" y="244" width="1" height="15" fill="rgb(227,152,3)"/><text x="64.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="62" y="276" width="1" height="15" fill="rgb(251,193,31)"/><text x="65.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="62" y="292" width="1" height="15" fill="rgb(228,75,37)"/><text x="65.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="62" y="308" width="1" height="15" fill="rgb(251,99,31)"/><text x="65.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="62" y="324" width="1" height="15" fill="rgb(240,225,4)"/><text x="65.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="62" y="340" width="1" height="15" fill="rgb(210,121,29)"/><text x="65.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="62" y="356" width="1" height="15" fill="rgb(208,149,50)"/><text x="65.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="63" y="308" width="1" height="15" fill="rgb(224,109,19)"/><text x="66.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="63" y="324" width="1" height="15" fill="rgb(221,128,13)"/><text x="66.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="63" y="340" width="1" height="15" fill="rgb(238,163,7)"/><text x="66.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.10%)</title><rect x="63" y="356" width="1" height="15" fill="rgb(243,95,6)"/><text x="66.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.10%)</title><rect x="63" y="372" width="1" height="15" fill="rgb(214,173,36)"/><text x="66.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="64" y="340" width="1" height="15" fill="rgb(222,62,35)"/><text x="67.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3071) (1 samples, 0.10%)</title><rect x="64" y="356" width="1" height="15" fill="rgb(238,157,18)"/><text x="67.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="64" y="324" width="3" height="15" fill="rgb(250,108,31)"/><text x="67.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.10%)</title><rect x="65" y="340" width="2" height="15" fill="rgb(246,101,29)"/><text x="68.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="65" y="356" width="2" height="15" fill="rgb(221,106,23)"/><text x="68.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="65" y="372" width="2" height="15" fill="rgb(232,125,1)"/><text x="68.00" y="382.50"></text></g><g><title>0x7fd33246b700 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="65" y="388" width="2" height="15" fill="rgb(248,29,54)"/><text x="68.00" y="398.50"></text></g><g><title>0x7fd332468aa4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="65" y="404" width="2" height="15" fill="rgb(208,105,47)"/><text x="68.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.10%)</title><rect x="69" y="356" width="1" height="15" fill="rgb(234,201,44)"/><text x="72.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="69" y="372" width="1" height="15" fill="rgb(245,148,43)"/><text x="72.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="70" y="356" width="1" height="15" fill="rgb(219,188,37)"/><text x="73.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="71" y="356" width="2" height="15" fill="rgb(227,63,40)"/><text x="74.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.62%)</title><rect x="67" y="324" width="7" height="15" fill="rgb(223,169,52)"/><text x="70.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.62%)</title><rect x="67" y="340" width="7" height="15" fill="rgb(234,123,50)"/><text x="70.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.10%)</title><rect x="73" y="356" width="1" height="15" fill="rgb(230,229,54)"/><text x="76.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.10%)</title><rect x="74" y="324" width="1" height="15" fill="rgb(251,182,5)"/><text x="77.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.10%)</title><rect x="74" y="340" width="1" height="15" fill="rgb(214,159,51)"/><text x="77.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="74" y="356" width="1" height="15" fill="rgb(249,142,20)"/><text x="77.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="74" y="372" width="1" height="15" fill="rgb(242,126,48)"/><text x="77.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (14 samples, 1.44%)</title><rect x="59" y="212" width="17" height="15" fill="rgb(212,170,32)"/><text x="62.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 1.24%)</title><rect x="62" y="228" width="14" height="15" fill="rgb(208,202,51)"/><text x="65.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 1.24%)</title><rect x="62" y="244" width="14" height="15" fill="rgb(254,4,5)"/><text x="65.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 1.24%)</title><rect x="62" y="260" width="14" height="15" fill="rgb(226,43,43)"/><text x="65.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 1.13%)</title><rect x="63" y="276" width="13" height="15" fill="rgb(220,57,17)"/><text x="66.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.13%)</title><rect x="63" y="292" width="13" height="15" fill="rgb(250,164,33)"/><text x="66.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.03%)</title><rect x="64" y="308" width="12" height="15" fill="rgb(243,127,40)"/><text x="67.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="75" y="324" width="1" height="15" fill="rgb(241,129,54)"/><text x="78.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.10%)</title><rect x="75" y="340" width="1" height="15" fill="rgb(241,223,16)"/><text x="78.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="78" y="244" width="1" height="15" fill="rgb(233,64,20)"/><text x="81.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="78" y="260" width="1" height="15" fill="rgb(236,147,42)"/><text x="81.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="78" y="276" width="1" height="15" fill="rgb(241,206,31)"/><text x="81.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.10%)</title><rect x="78" y="292" width="1" height="15" fill="rgb(240,36,26)"/><text x="81.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.31%)</title><rect x="76" y="212" width="4" height="15" fill="rgb(246,24,20)"/><text x="79.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.31%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(218,162,53)"/><text x="79.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="79" y="244" width="1" height="15" fill="rgb(237,169,40)"/><text x="82.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.10%)</title><rect x="79" y="260" width="1" height="15" fill="rgb(215,33,39)"/><text x="82.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="80" y="244" width="1" height="15" fill="rgb(209,143,4)"/><text x="83.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.10%)</title><rect x="80" y="260" width="1" height="15" fill="rgb(235,124,43)"/><text x="83.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="81" y="244" width="3" height="15" fill="rgb(241,176,39)"/><text x="84.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.21%)</title><rect x="81" y="260" width="3" height="15" fill="rgb(234,84,11)"/><text x="84.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.21%)</title><rect x="81" y="276" width="3" height="15" fill="rgb(231,196,53)"/><text x="84.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.21%)</title><rect x="81" y="292" width="3" height="15" fill="rgb(220,137,34)"/><text x="84.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="81" y="308" width="3" height="15" fill="rgb(220,132,40)"/><text x="84.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.21%)</title><rect x="81" y="324" width="3" height="15" fill="rgb(245,52,22)"/><text x="84.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.21%)</title><rect x="81" y="340" width="3" height="15" fill="rgb(218,19,32)"/><text x="84.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (54 samples, 5.56%)</title><rect x="19" y="196" width="66" height="15" fill="rgb(229,121,22)"/><text x="22.00" y="206.50">_samme_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (4 samples, 0.41%)</title><rect x="80" y="212" width="5" height="15" fill="rgb(253,11,23)"/><text x="83.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="80" y="228" width="5" height="15" fill="rgb(224,128,11)"/><text x="83.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.10%)</title><rect x="84" y="244" width="1" height="15" fill="rgb(241,138,2)"/><text x="87.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.10%)</title><rect x="88" y="212" width="2" height="15" fill="rgb(236,18,15)"/><text x="91.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="90" y="212" width="1" height="15" fill="rgb(250,176,45)"/><text x="93.00" y="222.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="91" y="308" width="1" height="15" fill="rgb(212,24,20)"/><text x="94.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.10%)</title><rect x="91" y="324" width="1" height="15" fill="rgb(227,189,33)"/><text x="94.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.31%)</title><rect x="92" y="324" width="4" height="15" fill="rgb(219,97,4)"/><text x="95.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.21%)</title><rect x="93" y="340" width="3" height="15" fill="rgb(246,119,3)"/><text x="96.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="97" y="340" width="1" height="15" fill="rgb(219,57,40)"/><text x="100.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="97" y="356" width="1" height="15" fill="rgb(208,85,27)"/><text x="100.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="97" y="372" width="1" height="15" fill="rgb(214,194,14)"/><text x="100.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.10%)</title><rect x="97" y="388" width="1" height="15" fill="rgb(244,229,52)"/><text x="100.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 0.62%)</title><rect x="92" y="308" width="7" height="15" fill="rgb(251,157,4)"/><text x="95.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.31%)</title><rect x="96" y="324" width="3" height="15" fill="rgb(239,33,9)"/><text x="99.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="98" y="340" width="1" height="15" fill="rgb(249,168,20)"/><text x="101.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="98" y="356" width="1" height="15" fill="rgb(247,139,37)"/><text x="101.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1632) (1 samples, 0.10%)</title><rect x="98" y="372" width="1" height="15" fill="rgb(214,179,14)"/><text x="101.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.21%)</title><rect x="99" y="372" width="3" height="15" fill="rgb(227,41,54)"/><text x="102.00" y="382.50"></text></g><g><title>0x7fd33247fec9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="101" y="388" width="1" height="15" fill="rgb(216,172,6)"/><text x="104.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.41%)</title><rect x="99" y="324" width="5" height="15" fill="rgb(249,226,36)"/><text x="102.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.41%)</title><rect x="99" y="340" width="5" height="15" fill="rgb(251,126,8)"/><text x="102.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.41%)</title><rect x="99" y="356" width="5" height="15" fill="rgb(210,32,9)"/><text x="102.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.21%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(249,51,40)"/><text x="105.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="103" y="388" width="1" height="15" fill="rgb(217,59,41)"/><text x="106.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.10%)</title><rect x="103" y="404" width="1" height="15" fill="rgb(219,90,13)"/><text x="106.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.10%)</title><rect x="103" y="420" width="1" height="15" fill="rgb(217,122,45)"/><text x="106.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="103" y="436" width="1" height="15" fill="rgb(205,87,50)"/><text x="106.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.10%)</title><rect x="103" y="452" width="1" height="15" fill="rgb(245,166,2)"/><text x="106.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="104" y="356" width="2" height="15" fill="rgb(220,224,14)"/><text x="107.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="104" y="372" width="2" height="15" fill="rgb(211,85,49)"/><text x="107.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="104" y="388" width="2" height="15" fill="rgb(239,13,39)"/><text x="107.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.10%)</title><rect x="104" y="404" width="2" height="15" fill="rgb(230,164,11)"/><text x="107.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.21%)</title><rect x="104" y="324" width="3" height="15" fill="rgb(211,184,24)"/><text x="107.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="104" y="340" width="3" height="15" fill="rgb(251,127,19)"/><text x="107.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="106" y="356" width="1" height="15" fill="rgb(234,61,49)"/><text x="109.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="106" y="372" width="1" height="15" fill="rgb(245,0,25)"/><text x="109.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.10%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(209,66,8)"/><text x="109.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.10%)</title><rect x="106" y="404" width="1" height="15" fill="rgb(218,198,38)"/><text x="109.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.10%)</title><rect x="106" y="420" width="1" height="15" fill="rgb(248,58,49)"/><text x="109.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.10%)</title><rect x="106" y="436" width="1" height="15" fill="rgb(248,43,9)"/><text x="109.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.72%)</title><rect x="99" y="308" width="9" height="15" fill="rgb(246,18,10)"/><text x="102.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:71) (1 samples, 0.10%)</title><rect x="107" y="324" width="1" height="15" fill="rgb(249,87,36)"/><text x="110.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:124) (1 samples, 0.10%)</title><rect x="108" y="308" width="1" height="15" fill="rgb(253,97,15)"/><text x="111.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="114" y="340" width="1" height="15" fill="rgb(225,194,12)"/><text x="117.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="114" y="356" width="1" height="15" fill="rgb(225,217,17)"/><text x="117.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="114" y="372" width="1" height="15" fill="rgb(230,210,0)"/><text x="117.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="114" y="388" width="1" height="15" fill="rgb(231,7,19)"/><text x="117.00" y="398.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="114" y="404" width="1" height="15" fill="rgb(241,218,48)"/><text x="117.00" y="414.50"></text></g><g><title>0x7fd332547ff4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="114" y="420" width="1" height="15" fill="rgb(250,192,41)"/><text x="117.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (27 samples, 2.78%)</title><rect x="85" y="196" width="33" height="15" fill="rgb(252,153,54)"/><text x="88.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (22 samples, 2.27%)</title><rect x="91" y="212" width="27" height="15" fill="rgb(231,183,15)"/><text x="94.00" y="222.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 2.27%)</title><rect x="91" y="228" width="27" height="15" fill="rgb(249,118,3)"/><text x="94.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (22 samples, 2.27%)</title><rect x="91" y="244" width="27" height="15" fill="rgb(209,110,4)"/><text x="94.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.27%)</title><rect x="91" y="260" width="27" height="15" fill="rgb(213,100,32)"/><text x="94.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (22 samples, 2.27%)</title><rect x="91" y="276" width="27" height="15" fill="rgb(253,121,12)"/><text x="94.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 2.27%)</title><rect x="91" y="292" width="27" height="15" fill="rgb(236,123,6)"/><text x="94.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 0.72%)</title><rect x="109" y="308" width="9" height="15" fill="rgb(207,111,27)"/><text x="112.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (4 samples, 0.41%)</title><rect x="113" y="324" width="5" height="15" fill="rgb(233,98,48)"/><text x="116.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="115" y="340" width="3" height="15" fill="rgb(236,215,3)"/><text x="118.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="115" y="356" width="3" height="15" fill="rgb(223,224,44)"/><text x="118.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.21%)</title><rect x="115" y="372" width="3" height="15" fill="rgb(241,17,18)"/><text x="118.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="115" y="388" width="3" height="15" fill="rgb(205,192,44)"/><text x="118.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.21%)</title><rect x="115" y="404" width="3" height="15" fill="rgb(235,176,17)"/><text x="118.00" y="414.50"></text></g><g><title>0x7fd33168d0c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="120" y="292" width="3" height="15" fill="rgb(215,55,6)"/><text x="123.00" y="302.50"></text></g><g><title>0x7fd33263bdd0 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="123" y="292" width="2" height="15" fill="rgb(206,224,20)"/><text x="126.00" y="302.50"></text></g><g><title>0x7fd33263be61 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="125" y="292" width="2" height="15" fill="rgb(248,191,49)"/><text x="128.00" y="302.50"></text></g><g><title>0x7fd33263be6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="127" y="292" width="2" height="15" fill="rgb(211,221,36)"/><text x="130.00" y="302.50"></text></g><g><title>0x7fd33263be7e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="129" y="292" width="1" height="15" fill="rgb(249,214,31)"/><text x="132.00" y="302.50"></text></g><g><title>0x7fd33263be8d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="130" y="292" width="1" height="15" fill="rgb(226,225,24)"/><text x="133.00" y="302.50"></text></g><g><title>0x7fd33263beee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="131" y="292" width="1" height="15" fill="rgb(210,198,29)"/><text x="134.00" y="302.50"></text></g><g><title>0x7fd33263bef6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="132" y="292" width="1" height="15" fill="rgb(246,39,9)"/><text x="135.00" y="302.50"></text></g><g><title>0x7fd33263befa (libm-2.29.so) (1 samples, 0.10%)</title><rect x="133" y="292" width="2" height="15" fill="rgb(239,73,3)"/><text x="136.00" y="302.50"></text></g><g><title>0x7fd33263c017 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(240,22,0)"/><text x="138.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (17 samples, 1.75%)</title><rect x="118" y="196" width="20" height="15" fill="rgb(229,72,23)"/><text x="121.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 1.54%)</title><rect x="120" y="212" width="18" height="15" fill="rgb(248,93,26)"/><text x="123.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 1.54%)</title><rect x="120" y="228" width="18" height="15" fill="rgb(249,13,37)"/><text x="123.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 1.54%)</title><rect x="120" y="244" width="18" height="15" fill="rgb(232,105,44)"/><text x="123.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.54%)</title><rect x="120" y="260" width="18" height="15" fill="rgb(236,170,16)"/><text x="123.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (15 samples, 1.54%)</title><rect x="120" y="276" width="18" height="15" fill="rgb(252,79,11)"/><text x="123.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (2 samples, 0.21%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(219,183,7)"/><text x="139.00" y="302.50"></text></g><g><title>array_multiply (number.c:346) (1 samples, 0.10%)</title><rect x="141" y="212" width="1" height="15" fill="rgb(241,172,32)"/><text x="144.00" y="222.50"></text></g><g><title>array_multiply (number.c:350) (1 samples, 0.10%)</title><rect x="142" y="212" width="1" height="15" fill="rgb(232,32,40)"/><text x="145.00" y="222.50"></text></g><g><title>try_binary_elide (temp_elide.c:349) (1 samples, 0.10%)</title><rect x="142" y="228" width="1" height="15" fill="rgb(228,81,10)"/><text x="145.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.10%)</title><rect x="143" y="260" width="1" height="15" fill="rgb(226,155,40)"/><text x="146.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.31%)</title><rect x="143" y="244" width="4" height="15" fill="rgb(250,165,48)"/><text x="146.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.21%)</title><rect x="144" y="260" width="3" height="15" fill="rgb(229,184,27)"/><text x="147.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (2 samples, 0.21%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(250,143,35)"/><text x="147.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (2 samples, 0.21%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(238,81,23)"/><text x="147.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.10%)</title><rect x="146" y="308" width="1" height="15" fill="rgb(205,32,44)"/><text x="149.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="147" y="244" width="1" height="15" fill="rgb(227,214,49)"/><text x="150.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.10%)</title><rect x="148" y="244" width="1" height="15" fill="rgb(215,203,51)"/><text x="151.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.10%)</title><rect x="148" y="260" width="1" height="15" fill="rgb(236,229,45)"/><text x="151.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.10%)</title><rect x="148" y="276" width="1" height="15" fill="rgb(210,156,20)"/><text x="151.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.10%)</title><rect x="148" y="292" width="1" height="15" fill="rgb(227,184,45)"/><text x="151.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="148" y="308" width="1" height="15" fill="rgb(218,88,12)"/><text x="151.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="143" y="228" width="7" height="15" fill="rgb(220,106,19)"/><text x="146.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="149" y="244" width="1" height="15" fill="rgb(221,96,18)"/><text x="152.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="149" y="260" width="1" height="15" fill="rgb(252,76,36)"/><text x="152.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="149" y="276" width="1" height="15" fill="rgb(210,201,2)"/><text x="152.00" y="286.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="149" y="292" width="1" height="15" fill="rgb(236,30,34)"/><text x="152.00" y="302.50"></text></g><g><title>run_binary_simd_multiply_DOUBLE (simd.inc.src:240) (1 samples, 0.10%)</title><rect x="149" y="308" width="1" height="15" fill="rgb(226,14,51)"/><text x="152.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 0.72%)</title><rect x="143" y="212" width="9" height="15" fill="rgb(212,94,0)"/><text x="146.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="150" y="228" width="2" height="15" fill="rgb(214,198,29)"/><text x="153.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="150" y="244" width="2" height="15" fill="rgb(236,131,2)"/><text x="153.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="150" y="260" width="2" height="15" fill="rgb(220,134,46)"/><text x="153.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="150" y="276" width="2" height="15" fill="rgb(216,7,17)"/><text x="153.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="152" y="292" width="1" height="15" fill="rgb(210,77,13)"/><text x="155.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.10%)</title><rect x="152" y="308" width="1" height="15" fill="rgb(236,25,33)"/><text x="155.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="152" y="276" width="2" height="15" fill="rgb(210,127,16)"/><text x="155.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:452) (1 samples, 0.10%)</title><rect x="153" y="292" width="1" height="15" fill="rgb(216,66,17)"/><text x="156.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.21%)</title><rect x="154" y="324" width="3" height="15" fill="rgb(223,129,12)"/><text x="157.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.10%)</title><rect x="158" y="340" width="1" height="15" fill="rgb(221,129,25)"/><text x="161.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.31%)</title><rect x="157" y="324" width="3" height="15" fill="rgb(215,137,32)"/><text x="160.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="159" y="340" width="1" height="15" fill="rgb(211,192,11)"/><text x="162.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.62%)</title><rect x="154" y="276" width="7" height="15" fill="rgb(232,62,16)"/><text x="157.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.62%)</title><rect x="154" y="292" width="7" height="15" fill="rgb(216,85,19)"/><text x="157.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.62%)</title><rect x="154" y="308" width="7" height="15" fill="rgb(225,184,49)"/><text x="157.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:983) (1 samples, 0.10%)</title><rect x="160" y="324" width="1" height="15" fill="rgb(244,22,49)"/><text x="163.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.21%)</title><rect x="161" y="276" width="3" height="15" fill="rgb(226,97,41)"/><text x="164.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (2 samples, 0.21%)</title><rect x="161" y="292" width="3" height="15" fill="rgb(218,189,25)"/><text x="164.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="161" y="308" width="3" height="15" fill="rgb(219,77,50)"/><text x="164.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (2 samples, 0.21%)</title><rect x="161" y="324" width="3" height="15" fill="rgb(219,64,3)"/><text x="164.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.21%)</title><rect x="161" y="340" width="3" height="15" fill="rgb(221,73,45)"/><text x="164.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (11 samples, 1.13%)</title><rect x="152" y="212" width="13" height="15" fill="rgb(247,72,13)"/><text x="155.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.13%)</title><rect x="152" y="228" width="13" height="15" fill="rgb(253,176,10)"/><text x="155.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.13%)</title><rect x="152" y="244" width="13" height="15" fill="rgb(225,201,45)"/><text x="155.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.13%)</title><rect x="152" y="260" width="13" height="15" fill="rgb(240,81,36)"/><text x="155.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="164" y="276" width="1" height="15" fill="rgb(228,109,28)"/><text x="167.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="164" y="292" width="1" height="15" fill="rgb(226,1,12)"/><text x="167.00" y="302.50"></text></g><g><title>0x7fd33168be10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="164" y="308" width="1" height="15" fill="rgb(207,134,44)"/><text x="167.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="166" y="260" width="1" height="15" fill="rgb(217,229,9)"/><text x="169.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="166" y="276" width="1" height="15" fill="rgb(240,23,21)"/><text x="169.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="166" y="292" width="1" height="15" fill="rgb(206,65,53)"/><text x="169.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="166" y="308" width="1" height="15" fill="rgb(215,103,35)"/><text x="169.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="166" y="324" width="1" height="15" fill="rgb(220,219,27)"/><text x="169.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="166" y="340" width="1" height="15" fill="rgb(253,116,26)"/><text x="169.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="167" y="276" width="2" height="15" fill="rgb(227,94,2)"/><text x="170.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="169" y="308" width="1" height="15" fill="rgb(213,150,14)"/><text x="172.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.10%)</title><rect x="169" y="324" width="1" height="15" fill="rgb(237,182,32)"/><text x="172.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="170" y="324" width="1" height="15" fill="rgb(237,20,23)"/><text x="173.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="171" y="324" width="1" height="15" fill="rgb(233,130,36)"/><text x="174.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="172" y="324" width="2" height="15" fill="rgb(246,168,16)"/><text x="175.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.21%)</title><rect x="174" y="340" width="2" height="15" fill="rgb(207,82,6)"/><text x="177.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.10%)</title><rect x="176" y="340" width="1" height="15" fill="rgb(254,140,44)"/><text x="179.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.21%)</title><rect x="177" y="340" width="3" height="15" fill="rgb(238,135,3)"/><text x="180.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="180" y="340" width="1" height="15" fill="rgb(233,187,47)"/><text x="183.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (14 samples, 1.44%)</title><rect x="165" y="212" width="17" height="15" fill="rgb(242,69,26)"/><text x="168.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.44%)</title><rect x="165" y="228" width="17" height="15" fill="rgb(244,89,22)"/><text x="168.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 1.44%)</title><rect x="165" y="244" width="17" height="15" fill="rgb(228,50,18)"/><text x="168.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.24%)</title><rect x="167" y="260" width="15" height="15" fill="rgb(244,49,43)"/><text x="170.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.13%)</title><rect x="169" y="276" width="13" height="15" fill="rgb(242,30,36)"/><text x="172.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.13%)</title><rect x="169" y="292" width="13" height="15" fill="rgb(240,104,40)"/><text x="172.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.03%)</title><rect x="170" y="308" width="12" height="15" fill="rgb(228,150,51)"/><text x="173.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.72%)</title><rect x="174" y="324" width="8" height="15" fill="rgb(218,116,7)"/><text x="177.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.10%)</title><rect x="181" y="340" width="1" height="15" fill="rgb(250,150,22)"/><text x="184.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (135 samples, 13.90%)</title><rect x="19" y="180" width="164" height="15" fill="rgb(229,30,44)"/><text x="22.00" y="190.50">&lt;genexpr&gt; (sklearn/en..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (37 samples, 3.81%)</title><rect x="138" y="196" width="45" height="15" fill="rgb(246,82,17)"/><text x="141.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2216) (1 samples, 0.10%)</title><rect x="182" y="212" width="1" height="15" fill="rgb(228,73,16)"/><text x="185.00" y="222.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:241) (1 samples, 0.10%)</title><rect x="183" y="276" width="1" height="15" fill="rgb(235,44,14)"/><text x="186.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_add_DOUBLE (simd.inc.src:696) (1 samples, 0.10%)</title><rect x="183" y="292" width="1" height="15" fill="rgb(234,63,4)"/><text x="186.00" y="302.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (140 samples, 14.42%)</title><rect x="17" y="148" width="170" height="15" fill="rgb(237,220,32)"/><text x="20.00" y="158.50">predict_proba (sklearn..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (138 samples, 14.21%)</title><rect x="19" y="164" width="168" height="15" fill="rgb(237,112,33)"/><text x="22.00" y="174.50">decision_function (sk..</text></g><g><title>array_add (number.c:330) (3 samples, 0.31%)</title><rect x="183" y="180" width="4" height="15" fill="rgb(218,195,7)"/><text x="186.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="183" y="196" width="4" height="15" fill="rgb(211,67,39)"/><text x="186.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="183" y="212" width="4" height="15" fill="rgb(221,111,22)"/><text x="186.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.31%)</title><rect x="183" y="228" width="4" height="15" fill="rgb(224,51,4)"/><text x="186.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.31%)</title><rect x="183" y="244" width="4" height="15" fill="rgb(232,29,51)"/><text x="186.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.31%)</title><rect x="183" y="260" width="4" height="15" fill="rgb(244,45,5)"/><text x="186.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="184" y="276" width="3" height="15" fill="rgb(253,194,49)"/><text x="187.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.21%)</title><rect x="184" y="292" width="3" height="15" fill="rgb(253,135,50)"/><text x="187.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.21%)</title><rect x="184" y="308" width="3" height="15" fill="rgb(253,38,26)"/><text x="187.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (141 samples, 14.52%)</title><rect x="17" y="100" width="171" height="15" fill="rgb(250,171,47)"/><text x="20.00" y="110.50">profile (bench_AdaBoos..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (141 samples, 14.52%)</title><rect x="17" y="116" width="171" height="15" fill="rgb(235,30,31)"/><text x="20.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (141 samples, 14.52%)</title><rect x="17" y="132" width="171" height="15" fill="rgb(217,140,13)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.10%)</title><rect x="187" y="148" width="1" height="15" fill="rgb(217,112,36)"/><text x="190.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.10%)</title><rect x="187" y="164" width="1" height="15" fill="rgb(236,226,49)"/><text x="190.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.10%)</title><rect x="187" y="180" width="1" height="15" fill="rgb(210,131,51)"/><text x="190.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="187" y="196" width="1" height="15" fill="rgb(249,89,19)"/><text x="190.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="187" y="212" width="1" height="15" fill="rgb(252,221,10)"/><text x="190.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.10%)</title><rect x="187" y="228" width="1" height="15" fill="rgb(235,205,33)"/><text x="190.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.10%)</title><rect x="187" y="244" width="1" height="15" fill="rgb(209,170,30)"/><text x="190.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.10%)</title><rect x="187" y="260" width="1" height="15" fill="rgb(227,58,13)"/><text x="190.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.10%)</title><rect x="187" y="276" width="1" height="15" fill="rgb(246,217,10)"/><text x="190.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.10%)</title><rect x="187" y="292" width="1" height="15" fill="rgb(234,157,14)"/><text x="190.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.10%)</title><rect x="187" y="308" width="1" height="15" fill="rgb(240,57,38)"/><text x="190.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.10%)</title><rect x="187" y="324" width="1" height="15" fill="rgb(215,24,2)"/><text x="190.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.10%)</title><rect x="187" y="340" width="1" height="15" fill="rgb(224,208,29)"/><text x="190.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.10%)</title><rect x="187" y="356" width="1" height="15" fill="rgb(251,29,7)"/><text x="190.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.10%)</title><rect x="187" y="372" width="1" height="15" fill="rgb(209,161,21)"/><text x="190.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="187" y="388" width="1" height="15" fill="rgb(225,152,18)"/><text x="190.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="187" y="404" width="1" height="15" fill="rgb(239,178,44)"/><text x="190.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="187" y="420" width="1" height="15" fill="rgb(212,72,8)"/><text x="190.00" y="430.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.10%)</title><rect x="188" y="148" width="1" height="15" fill="rgb(205,55,21)"/><text x="191.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.10%)</title><rect x="188" y="164" width="1" height="15" fill="rgb(207,227,33)"/><text x="191.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.10%)</title><rect x="188" y="180" width="1" height="15" fill="rgb(241,206,21)"/><text x="191.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.10%)</title><rect x="188" y="196" width="1" height="15" fill="rgb(208,188,46)"/><text x="191.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.10%)</title><rect x="188" y="212" width="1" height="15" fill="rgb(235,114,28)"/><text x="191.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="192" y="212" width="1" height="15" fill="rgb(222,114,6)"/><text x="195.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.10%)</title><rect x="192" y="228" width="1" height="15" fill="rgb(245,228,31)"/><text x="195.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.10%)</title><rect x="193" y="228" width="1" height="15" fill="rgb(250,118,51)"/><text x="196.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.10%)</title><rect x="197" y="244" width="1" height="15" fill="rgb(229,99,9)"/><text x="200.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (9 samples, 0.93%)</title><rect x="193" y="212" width="11" height="15" fill="rgb(217,182,30)"/><text x="196.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 0.82%)</title><rect x="194" y="228" width="10" height="15" fill="rgb(223,193,34)"/><text x="197.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.51%)</title><rect x="198" y="244" width="6" height="15" fill="rgb(230,200,0)"/><text x="201.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.21%)</title><rect x="202" y="260" width="2" height="15" fill="rgb(243,193,10)"/><text x="205.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.10%)</title><rect x="204" y="244" width="1" height="15" fill="rgb(234,147,14)"/><text x="207.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.10%)</title><rect x="205" y="244" width="1" height="15" fill="rgb(231,92,24)"/><text x="208.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.21%)</title><rect x="206" y="244" width="3" height="15" fill="rgb(224,38,54)"/><text x="209.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:483) (1 samples, 0.10%)</title><rect x="208" y="260" width="1" height="15" fill="rgb(242,55,7)"/><text x="211.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.10%)</title><rect x="209" y="260" width="1" height="15" fill="rgb(236,181,0)"/><text x="212.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.10%)</title><rect x="210" y="276" width="1" height="15" fill="rgb(205,106,35)"/><text x="213.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.31%)</title><rect x="209" y="244" width="3" height="15" fill="rgb(247,71,23)"/><text x="212.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.21%)</title><rect x="210" y="260" width="2" height="15" fill="rgb(225,129,22)"/><text x="213.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.10%)</title><rect x="211" y="276" width="1" height="15" fill="rgb(251,221,10)"/><text x="214.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.21%)</title><rect x="212" y="244" width="3" height="15" fill="rgb(230,134,41)"/><text x="215.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="214" y="260" width="1" height="15" fill="rgb(240,166,21)"/><text x="217.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="214" y="276" width="1" height="15" fill="rgb(206,142,39)"/><text x="217.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="215" y="244" width="1" height="15" fill="rgb(242,195,4)"/><text x="218.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(227,119,54)"/><text x="218.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.41%)</title><rect x="216" y="260" width="5" height="15" fill="rgb(229,175,3)"/><text x="219.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.10%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(253,101,24)"/><text x="223.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.51%)</title><rect x="216" y="244" width="6" height="15" fill="rgb(242,143,19)"/><text x="219.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="221" y="260" width="1" height="15" fill="rgb(221,209,31)"/><text x="224.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.31%)</title><rect x="222" y="260" width="4" height="15" fill="rgb(230,70,2)"/><text x="225.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (19 samples, 1.96%)</title><rect x="204" y="212" width="23" height="15" fill="rgb(225,200,29)"/><text x="207.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (19 samples, 1.96%)</title><rect x="204" y="228" width="23" height="15" fill="rgb(233,132,2)"/><text x="207.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.41%)</title><rect x="222" y="244" width="5" height="15" fill="rgb(224,93,40)"/><text x="225.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.10%)</title><rect x="226" y="260" width="1" height="15" fill="rgb(217,69,15)"/><text x="229.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(243,161,13)"/><text x="229.00" y="286.50"></text></g><g><title>0x7fd30beacf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="227" y="244" width="1" height="15" fill="rgb(252,172,48)"/><text x="230.00" y="254.50"></text></g><g><title>0x7fd30bebb225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="228" y="276" width="1" height="15" fill="rgb(249,160,26)"/><text x="231.00" y="286.50"></text></g><g><title>0x7fd30bebb2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="229" y="276" width="2" height="15" fill="rgb(220,199,36)"/><text x="232.00" y="286.50"></text></g><g><title>0x7fd30be9fde2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="229" y="292" width="2" height="15" fill="rgb(214,27,30)"/><text x="232.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="231" y="308" width="1" height="15" fill="rgb(250,153,42)"/><text x="234.00" y="318.50"></text></g><g><title>0x7fd332547dfe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="231" y="324" width="1" height="15" fill="rgb(249,164,5)"/><text x="234.00" y="334.50"></text></g><g><title>0x7fd30bebb592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="231" y="276" width="2" height="15" fill="rgb(215,177,32)"/><text x="234.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.21%)</title><rect x="231" y="292" width="2" height="15" fill="rgb(226,75,41)"/><text x="234.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="232" y="308" width="1" height="15" fill="rgb(244,26,34)"/><text x="235.00" y="318.50"></text></g><g><title>0x7fd30bebb687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="233" y="276" width="1" height="15" fill="rgb(217,64,26)"/><text x="236.00" y="286.50"></text></g><g><title>0x7fd30beacfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="228" y="244" width="8" height="15" fill="rgb(227,7,9)"/><text x="231.00" y="254.50"></text></g><g><title>0x7fd30bebc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="228" y="260" width="8" height="15" fill="rgb(247,205,42)"/><text x="231.00" y="270.50"></text></g><g><title>0x7fd30bebb92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="234" y="276" width="2" height="15" fill="rgb(209,122,40)"/><text x="237.00" y="286.50"></text></g><g><title>0x7fd30be908a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="234" y="292" width="2" height="15" fill="rgb(219,43,14)"/><text x="237.00" y="302.50"></text></g><g><title>0x7fd30bead002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="236" y="244" width="1" height="15" fill="rgb(223,34,16)"/><text x="239.00" y="254.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.10%)</title><rect x="237" y="292" width="1" height="15" fill="rgb(213,157,22)"/><text x="240.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (2 samples, 0.21%)</title><rect x="238" y="292" width="2" height="15" fill="rgb(240,45,31)"/><text x="241.00" y="302.50"></text></g><g><title>0x7fd30bead05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="237" y="244" width="5" height="15" fill="rgb(210,20,35)"/><text x="240.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 0.41%)</title><rect x="237" y="260" width="5" height="15" fill="rgb(224,97,13)"/><text x="240.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (4 samples, 0.41%)</title><rect x="237" y="276" width="5" height="15" fill="rgb(231,162,6)"/><text x="240.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.10%)</title><rect x="240" y="292" width="2" height="15" fill="rgb(239,149,11)"/><text x="243.00" y="302.50"></text></g><g><title>0x7fd30bead14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="242" y="244" width="1" height="15" fill="rgb(205,227,15)"/><text x="245.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="242" y="260" width="1" height="15" fill="rgb(251,199,19)"/><text x="245.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="242" y="276" width="1" height="15" fill="rgb(246,114,48)"/><text x="245.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="242" y="292" width="1" height="15" fill="rgb(253,60,14)"/><text x="245.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="242" y="308" width="1" height="15" fill="rgb(222,165,24)"/><text x="245.00" y="318.50"></text></g><g><title>0x7fd332469e60 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="242" y="324" width="1" height="15" fill="rgb(249,127,44)"/><text x="245.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (14 samples, 1.44%)</title><rect x="227" y="212" width="17" height="15" fill="rgb(237,20,7)"/><text x="230.00" y="222.50"></text></g><g><title>0x7fd30beadd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.44%)</title><rect x="227" y="228" width="17" height="15" fill="rgb(240,212,39)"/><text x="230.00" y="238.50"></text></g><g><title>0x7fd30bead1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="243" y="244" width="1" height="15" fill="rgb(207,225,3)"/><text x="246.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.10%)</title><rect x="243" y="260" width="1" height="15" fill="rgb(240,185,8)"/><text x="246.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.10%)</title><rect x="244" y="212" width="1" height="15" fill="rgb(213,219,14)"/><text x="247.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="248" y="228" width="1" height="15" fill="rgb(214,152,8)"/><text x="251.00" y="238.50"></text></g><g><title>get_view_from_index (ndarraytypes.h:1528) (1 samples, 0.10%)</title><rect x="248" y="244" width="1" height="15" fill="rgb(237,141,48)"/><text x="251.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:59) (1 samples, 0.10%)</title><rect x="250" y="308" width="1" height="15" fill="rgb(228,6,2)"/><text x="253.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="251" y="356" width="2" height="15" fill="rgb(208,135,49)"/><text x="254.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.31%)</title><rect x="250" y="276" width="4" height="15" fill="rgb(229,212,2)"/><text x="253.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.31%)</title><rect x="250" y="292" width="4" height="15" fill="rgb(219,195,20)"/><text x="253.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="251" y="308" width="3" height="15" fill="rgb(226,33,5)"/><text x="254.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.21%)</title><rect x="251" y="324" width="3" height="15" fill="rgb(205,7,50)"/><text x="254.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="251" y="340" width="3" height="15" fill="rgb(210,129,46)"/><text x="254.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="253" y="356" width="1" height="15" fill="rgb(230,126,21)"/><text x="256.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="254" y="292" width="1" height="15" fill="rgb(207,221,31)"/><text x="257.00" y="302.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.10%)</title><rect x="254" y="308" width="1" height="15" fill="rgb(250,0,31)"/><text x="257.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="255" y="324" width="1" height="15" fill="rgb(236,48,9)"/><text x="258.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="255" y="340" width="1" height="15" fill="rgb(220,213,38)"/><text x="258.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="255" y="356" width="1" height="15" fill="rgb(239,39,29)"/><text x="258.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="255" y="372" width="1" height="15" fill="rgb(217,169,3)"/><text x="258.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:983) (1 samples, 0.10%)</title><rect x="255" y="388" width="1" height="15" fill="rgb(220,83,43)"/><text x="258.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(253,124,17)"/><text x="259.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(248,25,6)"/><text x="259.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:199) (1 samples, 0.10%)</title><rect x="256" y="356" width="1" height="15" fill="rgb(230,154,21)"/><text x="259.00" y="366.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.10%)</title><rect x="256" y="372" width="1" height="15" fill="rgb(218,88,15)"/><text x="259.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.10%)</title><rect x="257" y="340" width="2" height="15" fill="rgb(207,206,45)"/><text x="260.00" y="350.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.10%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(237,153,51)"/><text x="260.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.10%)</title><rect x="257" y="372" width="2" height="15" fill="rgb(245,137,28)"/><text x="260.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="257" y="324" width="3" height="15" fill="rgb(243,2,38)"/><text x="260.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.10%)</title><rect x="259" y="340" width="1" height="15" fill="rgb(237,90,32)"/><text x="262.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3482) (1 samples, 0.10%)</title><rect x="260" y="340" width="1" height="15" fill="rgb(253,198,23)"/><text x="263.00" y="350.50"></text></g><g><title>NpyIter_GetNOp (nditer_api.c:847) (1 samples, 0.10%)</title><rect x="260" y="356" width="1" height="15" fill="rgb(215,10,32)"/><text x="263.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.10%)</title><rect x="261" y="340" width="1" height="15" fill="rgb(214,163,51)"/><text x="264.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.10%)</title><rect x="262" y="340" width="1" height="15" fill="rgb(232,137,26)"/><text x="265.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="265" y="356" width="1" height="15" fill="rgb(236,84,23)"/><text x="268.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (3 samples, 0.31%)</title><rect x="266" y="356" width="4" height="15" fill="rgb(208,218,17)"/><text x="269.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.10%)</title><rect x="270" y="372" width="1" height="15" fill="rgb(214,43,22)"/><text x="273.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.21%)</title><rect x="270" y="356" width="2" height="15" fill="rgb(209,93,16)"/><text x="273.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="271" y="372" width="1" height="15" fill="rgb(249,107,32)"/><text x="274.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.10%)</title><rect x="272" y="356" width="1" height="15" fill="rgb(240,71,38)"/><text x="275.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="273" y="356" width="1" height="15" fill="rgb(228,65,26)"/><text x="276.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.10%)</title><rect x="274" y="356" width="2" height="15" fill="rgb(226,165,31)"/><text x="277.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (15 samples, 1.54%)</title><rect x="260" y="324" width="18" height="15" fill="rgb(209,100,46)"/><text x="263.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 1.24%)</title><rect x="263" y="340" width="15" height="15" fill="rgb(243,12,42)"/><text x="266.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.21%)</title><rect x="276" y="356" width="2" height="15" fill="rgb(218,78,17)"/><text x="279.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (28 samples, 2.88%)</title><rect x="245" y="212" width="34" height="15" fill="rgb(205,118,18)"/><text x="248.00" y="222.50">pr..</text></g><g><title>array_sum (methods.c:2215) (25 samples, 2.57%)</title><rect x="249" y="228" width="30" height="15" fill="rgb(245,193,4)"/><text x="252.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.57%)</title><rect x="249" y="244" width="30" height="15" fill="rgb(211,28,15)"/><text x="252.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.47%)</title><rect x="250" y="260" width="29" height="15" fill="rgb(249,118,27)"/><text x="253.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (21 samples, 2.16%)</title><rect x="254" y="276" width="25" height="15" fill="rgb(226,134,54)"/><text x="257.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 2.06%)</title><rect x="255" y="292" width="24" height="15" fill="rgb(229,62,27)"/><text x="258.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.06%)</title><rect x="255" y="308" width="24" height="15" fill="rgb(205,27,10)"/><text x="258.00" y="318.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="278" y="324" width="1" height="15" fill="rgb(217,173,12)"/><text x="281.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="278" y="340" width="1" height="15" fill="rgb(209,178,29)"/><text x="281.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.10%)</title><rect x="279" y="228" width="1" height="15" fill="rgb(248,21,28)"/><text x="282.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.10%)</title><rect x="279" y="244" width="1" height="15" fill="rgb(252,90,22)"/><text x="282.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.10%)</title><rect x="279" y="260" width="1" height="15" fill="rgb(224,140,28)"/><text x="282.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.10%)</title><rect x="279" y="276" width="1" height="15" fill="rgb(254,92,18)"/><text x="282.00" y="286.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.10%)</title><rect x="279" y="292" width="1" height="15" fill="rgb(254,146,37)"/><text x="282.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.10%)</title><rect x="280" y="228" width="2" height="15" fill="rgb(224,91,34)"/><text x="283.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.10%)</title><rect x="280" y="244" width="2" height="15" fill="rgb(214,54,54)"/><text x="283.00" y="254.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.10%)</title><rect x="280" y="260" width="2" height="15" fill="rgb(249,65,40)"/><text x="283.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.10%)</title><rect x="280" y="276" width="2" height="15" fill="rgb(213,80,37)"/><text x="283.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.10%)</title><rect x="282" y="276" width="1" height="15" fill="rgb(247,3,4)"/><text x="285.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.21%)</title><rect x="282" y="260" width="2" height="15" fill="rgb(226,0,13)"/><text x="285.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="283" y="276" width="1" height="15" fill="rgb(243,97,15)"/><text x="286.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.10%)</title><rect x="283" y="292" width="1" height="15" fill="rgb(230,2,1)"/><text x="286.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.10%)</title><rect x="283" y="308" width="1" height="15" fill="rgb(242,123,19)"/><text x="286.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.10%)</title><rect x="283" y="324" width="1" height="15" fill="rgb(233,54,10)"/><text x="286.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.10%)</title><rect x="283" y="340" width="1" height="15" fill="rgb(243,153,31)"/><text x="286.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3214) (1 samples, 0.10%)</title><rect x="284" y="260" width="1" height="15" fill="rgb(216,143,34)"/><text x="287.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.10%)</title><rect x="285" y="276" width="2" height="15" fill="rgb(217,155,54)"/><text x="288.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="285" y="292" width="2" height="15" fill="rgb(220,3,34)"/><text x="288.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="285" y="308" width="2" height="15" fill="rgb(215,227,41)"/><text x="288.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="285" y="324" width="2" height="15" fill="rgb(228,155,7)"/><text x="288.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.10%)</title><rect x="285" y="340" width="2" height="15" fill="rgb(205,217,41)"/><text x="288.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.51%)</title><rect x="282" y="244" width="6" height="15" fill="rgb(214,219,47)"/><text x="285.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="285" y="260" width="3" height="15" fill="rgb(240,144,39)"/><text x="288.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="287" y="276" width="1" height="15" fill="rgb(249,175,24)"/><text x="290.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.10%)</title><rect x="287" y="292" width="1" height="15" fill="rgb(223,146,41)"/><text x="290.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 0.82%)</title><rect x="279" y="212" width="10" height="15" fill="rgb(238,65,49)"/><text x="282.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (6 samples, 0.62%)</title><rect x="282" y="228" width="7" height="15" fill="rgb(234,62,51)"/><text x="285.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="288" y="244" width="1" height="15" fill="rgb(221,31,22)"/><text x="291.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="288" y="260" width="1" height="15" fill="rgb(242,168,42)"/><text x="291.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="289" y="244" width="1" height="15" fill="rgb(245,118,21)"/><text x="292.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="289" y="260" width="1" height="15" fill="rgb(231,108,21)"/><text x="292.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.10%)</title><rect x="289" y="276" width="1" height="15" fill="rgb(216,142,51)"/><text x="292.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.10%)</title><rect x="289" y="292" width="1" height="15" fill="rgb(217,105,44)"/><text x="292.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="290" y="276" width="1" height="15" fill="rgb(242,19,3)"/><text x="293.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.10%)</title><rect x="290" y="292" width="1" height="15" fill="rgb(216,105,30)"/><text x="293.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2306) (1 samples, 0.10%)</title><rect x="290" y="308" width="1" height="15" fill="rgb(209,121,29)"/><text x="293.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.31%)</title><rect x="291" y="324" width="4" height="15" fill="rgb(246,185,42)"/><text x="294.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="295" y="324" width="1" height="15" fill="rgb(227,132,23)"/><text x="298.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.10%)</title><rect x="296" y="324" width="2" height="15" fill="rgb(254,36,26)"/><text x="299.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.21%)</title><rect x="298" y="340" width="2" height="15" fill="rgb(252,36,25)"/><text x="301.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 0.82%)</title><rect x="291" y="276" width="10" height="15" fill="rgb(242,123,26)"/><text x="294.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 0.82%)</title><rect x="291" y="292" width="10" height="15" fill="rgb(251,222,24)"/><text x="294.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 0.82%)</title><rect x="291" y="308" width="10" height="15" fill="rgb(234,46,53)"/><text x="294.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.31%)</title><rect x="298" y="324" width="3" height="15" fill="rgb(216,6,6)"/><text x="301.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="300" y="340" width="1" height="15" fill="rgb(243,93,41)"/><text x="303.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 1.65%)</title><rect x="289" y="228" width="19" height="15" fill="rgb(241,213,41)"/><text x="292.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 1.54%)</title><rect x="290" y="244" width="18" height="15" fill="rgb(209,88,49)"/><text x="293.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 1.54%)</title><rect x="290" y="260" width="18" height="15" fill="rgb(209,32,4)"/><text x="293.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.62%)</title><rect x="301" y="276" width="7" height="15" fill="rgb(210,20,33)"/><text x="304.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (6 samples, 0.62%)</title><rect x="301" y="292" width="7" height="15" fill="rgb(218,131,47)"/><text x="304.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (6 samples, 0.62%)</title><rect x="301" y="308" width="7" height="15" fill="rgb(210,226,1)"/><text x="304.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (6 samples, 0.62%)</title><rect x="301" y="324" width="7" height="15" fill="rgb(236,123,47)"/><text x="304.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (6 samples, 0.62%)</title><rect x="301" y="340" width="7" height="15" fill="rgb(235,14,39)"/><text x="304.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (98 samples, 10.09%)</title><rect x="191" y="196" width="119" height="15" fill="rgb(224,172,16)"/><text x="194.00" y="206.50">_samme_proba (..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (17 samples, 1.75%)</title><rect x="289" y="212" width="21" height="15" fill="rgb(236,99,5)"/><text x="292.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="308" y="228" width="2" height="15" fill="rgb(223,62,5)"/><text x="311.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="308" y="244" width="2" height="15" fill="rgb(236,68,38)"/><text x="311.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.10%)</title><rect x="311" y="212" width="1" height="15" fill="rgb(238,41,44)"/><text x="314.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.10%)</title><rect x="311" y="228" width="1" height="15" fill="rgb(239,55,51)"/><text x="314.00" y="238.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.10%)</title><rect x="312" y="212" width="1" height="15" fill="rgb(218,80,20)"/><text x="315.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.21%)</title><rect x="313" y="212" width="3" height="15" fill="rgb(218,140,13)"/><text x="316.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="313" y="228" width="3" height="15" fill="rgb(248,182,44)"/><text x="316.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (2 samples, 0.21%)</title><rect x="313" y="244" width="3" height="15" fill="rgb(218,211,2)"/><text x="316.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (2 samples, 0.21%)</title><rect x="313" y="260" width="3" height="15" fill="rgb(206,200,0)"/><text x="316.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.21%)</title><rect x="313" y="276" width="3" height="15" fill="rgb(221,166,19)"/><text x="316.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.21%)</title><rect x="313" y="292" width="3" height="15" fill="rgb(211,161,5)"/><text x="316.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (2 samples, 0.21%)</title><rect x="313" y="308" width="3" height="15" fill="rgb(216,36,17)"/><text x="316.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.10%)</title><rect x="315" y="324" width="1" height="15" fill="rgb(246,77,44)"/><text x="318.00" y="334.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="316" y="212" width="1" height="15" fill="rgb(221,79,0)"/><text x="319.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.10%)</title><rect x="316" y="228" width="1" height="15" fill="rgb(225,174,20)"/><text x="319.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.21%)</title><rect x="317" y="228" width="2" height="15" fill="rgb(236,15,13)"/><text x="320.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.21%)</title><rect x="317" y="244" width="2" height="15" fill="rgb(205,159,36)"/><text x="320.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.21%)</title><rect x="317" y="260" width="2" height="15" fill="rgb(249,64,6)"/><text x="320.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="317" y="276" width="2" height="15" fill="rgb(224,16,44)"/><text x="320.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.21%)</title><rect x="317" y="292" width="2" height="15" fill="rgb(208,133,9)"/><text x="320.00" y="302.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.21%)</title><rect x="321" y="324" width="2" height="15" fill="rgb(226,101,3)"/><text x="324.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.10%)</title><rect x="323" y="324" width="1" height="15" fill="rgb(221,177,16)"/><text x="326.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="323" y="340" width="1" height="15" fill="rgb(238,30,5)"/><text x="326.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.10%)</title><rect x="323" y="356" width="1" height="15" fill="rgb(246,76,31)"/><text x="326.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.10%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(218,142,37)"/><text x="326.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.10%)</title><rect x="323" y="388" width="1" height="15" fill="rgb(243,121,21)"/><text x="326.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="323" y="404" width="1" height="15" fill="rgb(226,182,5)"/><text x="326.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="323" y="420" width="1" height="15" fill="rgb(222,170,7)"/><text x="326.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.10%)</title><rect x="324" y="436" width="1" height="15" fill="rgb(244,100,26)"/><text x="327.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.21%)</title><rect x="324" y="356" width="3" height="15" fill="rgb(217,38,47)"/><text x="327.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.21%)</title><rect x="324" y="372" width="3" height="15" fill="rgb(213,27,35)"/><text x="327.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (2 samples, 0.21%)</title><rect x="324" y="388" width="3" height="15" fill="rgb(223,34,34)"/><text x="327.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (2 samples, 0.21%)</title><rect x="324" y="404" width="3" height="15" fill="rgb(244,103,51)"/><text x="327.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.21%)</title><rect x="324" y="420" width="3" height="15" fill="rgb(245,119,50)"/><text x="327.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="325" y="436" width="2" height="15" fill="rgb(205,71,48)"/><text x="328.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="325" y="452" width="2" height="15" fill="rgb(233,88,23)"/><text x="328.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.10%)</title><rect x="325" y="468" width="2" height="15" fill="rgb(206,217,38)"/><text x="328.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="327" y="356" width="1" height="15" fill="rgb(245,40,2)"/><text x="330.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(215,63,50)"/><text x="330.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.10%)</title><rect x="327" y="388" width="1" height="15" fill="rgb(205,107,37)"/><text x="330.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.10%)</title><rect x="327" y="404" width="1" height="15" fill="rgb(221,48,20)"/><text x="330.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.10%)</title><rect x="327" y="420" width="1" height="15" fill="rgb(221,71,28)"/><text x="330.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.10%)</title><rect x="327" y="436" width="1" height="15" fill="rgb(225,151,48)"/><text x="330.00" y="446.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 0.72%)</title><rect x="321" y="308" width="8" height="15" fill="rgb(230,131,7)"/><text x="324.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 0.41%)</title><rect x="324" y="324" width="5" height="15" fill="rgb(214,98,1)"/><text x="327.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="324" y="340" width="5" height="15" fill="rgb(243,74,29)"/><text x="327.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="328" y="356" width="1" height="15" fill="rgb(223,142,1)"/><text x="331.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.10%)</title><rect x="328" y="372" width="1" height="15" fill="rgb(213,174,1)"/><text x="331.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="328" y="388" width="1" height="15" fill="rgb(238,189,49)"/><text x="331.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="328" y="404" width="1" height="15" fill="rgb(238,218,31)"/><text x="331.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.10%)</title><rect x="328" y="420" width="1" height="15" fill="rgb(251,169,6)"/><text x="331.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.31%)</title><rect x="329" y="324" width="4" height="15" fill="rgb(219,63,40)"/><text x="332.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="332" y="340" width="1" height="15" fill="rgb(214,159,45)"/><text x="335.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.10%)</title><rect x="333" y="372" width="1" height="15" fill="rgb(212,86,39)"/><text x="336.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:527) (1 samples, 0.10%)</title><rect x="335" y="388" width="1" height="15" fill="rgb(242,172,17)"/><text x="338.00" y="398.50"></text></g><g><title>PyArray_XDECREF (refcount.c:234) (1 samples, 0.10%)</title><rect x="335" y="404" width="1" height="15" fill="rgb(244,64,26)"/><text x="338.00" y="414.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.10%)</title><rect x="336" y="420" width="2" height="15" fill="rgb(238,22,10)"/><text x="339.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (5 samples, 0.51%)</title><rect x="333" y="324" width="6" height="15" fill="rgb(237,220,32)"/><text x="336.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (5 samples, 0.51%)</title><rect x="333" y="340" width="6" height="15" fill="rgb(250,32,2)"/><text x="336.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.51%)</title><rect x="333" y="356" width="6" height="15" fill="rgb(229,77,7)"/><text x="336.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 0.41%)</title><rect x="334" y="372" width="5" height="15" fill="rgb(213,174,4)"/><text x="337.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.21%)</title><rect x="336" y="388" width="3" height="15" fill="rgb(225,134,5)"/><text x="339.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.21%)</title><rect x="336" y="404" width="3" height="15" fill="rgb(230,10,27)"/><text x="339.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="338" y="420" width="1" height="15" fill="rgb(242,56,44)"/><text x="341.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="339" y="356" width="1" height="15" fill="rgb(248,29,38)"/><text x="342.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="339" y="372" width="1" height="15" fill="rgb(237,43,3)"/><text x="342.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="339" y="388" width="1" height="15" fill="rgb(246,194,10)"/><text x="342.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.10%)</title><rect x="339" y="404" width="1" height="15" fill="rgb(220,89,22)"/><text x="342.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (10 samples, 1.03%)</title><rect x="329" y="308" width="12" height="15" fill="rgb(219,218,16)"/><text x="332.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.21%)</title><rect x="339" y="324" width="2" height="15" fill="rgb(225,108,21)"/><text x="342.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="339" y="340" width="2" height="15" fill="rgb(237,118,49)"/><text x="342.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.10%)</title><rect x="340" y="356" width="1" height="15" fill="rgb(232,116,31)"/><text x="343.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.10%)</title><rect x="340" y="372" width="1" height="15" fill="rgb(207,113,27)"/><text x="343.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="342" y="356" width="2" height="15" fill="rgb(212,25,30)"/><text x="345.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="342" y="372" width="2" height="15" fill="rgb(247,157,9)"/><text x="345.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="342" y="388" width="2" height="15" fill="rgb(233,78,45)"/><text x="345.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.10%)</title><rect x="342" y="404" width="2" height="15" fill="rgb(206,221,42)"/><text x="345.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.10%)</title><rect x="342" y="420" width="2" height="15" fill="rgb(223,144,1)"/><text x="345.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.10%)</title><rect x="344" y="372" width="1" height="15" fill="rgb(210,4,52)"/><text x="347.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="344" y="388" width="1" height="15" fill="rgb(251,222,50)"/><text x="347.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.10%)</title><rect x="344" y="404" width="1" height="15" fill="rgb(242,80,21)"/><text x="347.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.10%)</title><rect x="344" y="420" width="1" height="15" fill="rgb(237,163,12)"/><text x="347.00" y="430.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (3 samples, 0.31%)</title><rect x="345" y="404" width="4" height="15" fill="rgb(214,149,27)"/><text x="348.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (34 samples, 3.50%)</title><rect x="310" y="196" width="41" height="15" fill="rgb(218,11,28)"/><text x="313.00" y="206.50">_sa..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (28 samples, 2.88%)</title><rect x="317" y="212" width="34" height="15" fill="rgb(230,85,36)"/><text x="320.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (26 samples, 2.68%)</title><rect x="319" y="228" width="32" height="15" fill="rgb(242,165,31)"/><text x="322.00" y="238.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (25 samples, 2.57%)</title><rect x="321" y="244" width="30" height="15" fill="rgb(241,203,13)"/><text x="324.00" y="254.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.57%)</title><rect x="321" y="260" width="30" height="15" fill="rgb(215,203,20)"/><text x="324.00" y="270.50">_w..</text></g><g><title>array_clip (methods.c:2381) (25 samples, 2.57%)</title><rect x="321" y="276" width="30" height="15" fill="rgb(232,121,50)"/><text x="324.00" y="286.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.57%)</title><rect x="321" y="292" width="30" height="15" fill="rgb(240,169,15)"/><text x="324.00" y="302.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:129) (8 samples, 0.82%)</title><rect x="341" y="308" width="10" height="15" fill="rgb(223,207,20)"/><text x="344.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 0.82%)</title><rect x="341" y="324" width="10" height="15" fill="rgb(243,36,0)"/><text x="344.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.72%)</title><rect x="342" y="340" width="9" height="15" fill="rgb(238,56,10)"/><text x="345.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.62%)</title><rect x="344" y="356" width="7" height="15" fill="rgb(226,5,15)"/><text x="347.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (5 samples, 0.51%)</title><rect x="345" y="372" width="6" height="15" fill="rgb(214,20,47)"/><text x="348.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (5 samples, 0.51%)</title><rect x="345" y="388" width="6" height="15" fill="rgb(234,43,40)"/><text x="348.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.21%)</title><rect x="349" y="404" width="2" height="15" fill="rgb(209,0,45)"/><text x="352.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="351" y="228" width="1" height="15" fill="rgb(220,134,3)"/><text x="354.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1057) (1 samples, 0.10%)</title><rect x="351" y="244" width="1" height="15" fill="rgb(244,195,8)"/><text x="354.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.10%)</title><rect x="352" y="260" width="1" height="15" fill="rgb(239,58,34)"/><text x="355.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.10%)</title><rect x="352" y="276" width="1" height="15" fill="rgb(226,210,31)"/><text x="355.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.21%)</title><rect x="352" y="228" width="3" height="15" fill="rgb(245,90,8)"/><text x="355.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.21%)</title><rect x="352" y="244" width="3" height="15" fill="rgb(241,109,41)"/><text x="355.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.10%)</title><rect x="353" y="260" width="2" height="15" fill="rgb(235,83,0)"/><text x="356.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.10%)</title><rect x="353" y="276" width="2" height="15" fill="rgb(229,210,5)"/><text x="356.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.10%)</title><rect x="353" y="292" width="2" height="15" fill="rgb(231,65,19)"/><text x="356.00" y="302.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.10%)</title><rect x="356" y="276" width="1" height="15" fill="rgb(242,32,0)"/><text x="359.00" y="286.50"></text></g><g><title>0x7fd33263be25 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="358" y="292" width="1" height="15" fill="rgb(244,57,27)"/><text x="361.00" y="302.50"></text></g><g><title>0x7fd33263be40 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="359" y="292" width="3" height="15" fill="rgb(206,106,50)"/><text x="362.00" y="302.50"></text></g><g><title>0x7fd33263be4d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="362" y="292" width="1" height="15" fill="rgb(210,98,37)"/><text x="365.00" y="302.50"></text></g><g><title>0x7fd33263be61 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="363" y="292" width="1" height="15" fill="rgb(237,177,38)"/><text x="366.00" y="302.50"></text></g><g><title>0x7fd33263be6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="364" y="292" width="2" height="15" fill="rgb(245,153,18)"/><text x="367.00" y="302.50"></text></g><g><title>0x7fd33263bea2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="366" y="292" width="2" height="15" fill="rgb(254,189,33)"/><text x="369.00" y="302.50"></text></g><g><title>0x7fd33263beb6 (libm-2.29.so) (4 samples, 0.41%)</title><rect x="368" y="292" width="5" height="15" fill="rgb(225,145,51)"/><text x="371.00" y="302.50"></text></g><g><title>0x7fd33263bece (libm-2.29.so) (1 samples, 0.10%)</title><rect x="373" y="292" width="1" height="15" fill="rgb(214,59,7)"/><text x="376.00" y="302.50"></text></g><g><title>0x7fd33263bed2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(245,140,11)"/><text x="377.00" y="302.50"></text></g><g><title>0x7fd33263beda (libm-2.29.so) (1 samples, 0.10%)</title><rect x="377" y="292" width="1" height="15" fill="rgb(232,143,40)"/><text x="380.00" y="302.50"></text></g><g><title>0x7fd33263beee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="378" y="292" width="1" height="15" fill="rgb(242,179,48)"/><text x="381.00" y="302.50"></text></g><g><title>0x7fd33263befa (libm-2.29.so) (2 samples, 0.21%)</title><rect x="379" y="292" width="2" height="15" fill="rgb(216,131,18)"/><text x="382.00" y="302.50"></text></g><g><title>0x7fd33263bf0a (libm-2.29.so) (1 samples, 0.10%)</title><rect x="381" y="292" width="2" height="15" fill="rgb(221,95,26)"/><text x="384.00" y="302.50"></text></g><g><title>0x7fd33263bfd3 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="383" y="292" width="1" height="15" fill="rgb(235,208,1)"/><text x="386.00" y="302.50"></text></g><g><title>0x7fd33263c013 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="384" y="292" width="1" height="15" fill="rgb(254,117,8)"/><text x="387.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (31 samples, 3.19%)</title><rect x="351" y="196" width="38" height="15" fill="rgb(205,2,0)"/><text x="354.00" y="206.50">_sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 3.19%)</title><rect x="351" y="212" width="38" height="15" fill="rgb(211,38,50)"/><text x="354.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (28 samples, 2.88%)</title><rect x="355" y="228" width="34" height="15" fill="rgb(240,97,0)"/><text x="358.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (27 samples, 2.78%)</title><rect x="356" y="244" width="33" height="15" fill="rgb(211,189,11)"/><text x="359.00" y="254.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (27 samples, 2.78%)</title><rect x="356" y="260" width="33" height="15" fill="rgb(210,115,6)"/><text x="359.00" y="270.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (26 samples, 2.68%)</title><rect x="357" y="276" width="32" height="15" fill="rgb(223,168,4)"/><text x="360.00" y="286.50">Py..</text></g><g><title>log (libm-2.29.so) (3 samples, 0.31%)</title><rect x="385" y="292" width="4" height="15" fill="rgb(228,167,37)"/><text x="388.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="389" y="228" width="1" height="15" fill="rgb(210,57,42)"/><text x="392.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="389" y="244" width="1" height="15" fill="rgb(253,200,16)"/><text x="392.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.10%)</title><rect x="389" y="260" width="1" height="15" fill="rgb(232,189,26)"/><text x="392.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="390" y="276" width="1" height="15" fill="rgb(239,74,54)"/><text x="393.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.10%)</title><rect x="390" y="292" width="1" height="15" fill="rgb(205,203,34)"/><text x="393.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.10%)</title><rect x="390" y="308" width="1" height="15" fill="rgb(254,164,24)"/><text x="393.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4478) (1 samples, 0.10%)</title><rect x="390" y="324" width="1" height="15" fill="rgb(254,49,4)"/><text x="393.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.21%)</title><rect x="390" y="244" width="2" height="15" fill="rgb(213,119,10)"/><text x="393.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.21%)</title><rect x="390" y="260" width="2" height="15" fill="rgb(251,166,43)"/><text x="393.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="391" y="276" width="1" height="15" fill="rgb(251,45,49)"/><text x="394.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1161) (1 samples, 0.10%)</title><rect x="391" y="292" width="1" height="15" fill="rgb(253,123,15)"/><text x="394.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="392" y="244" width="2" height="15" fill="rgb(214,196,41)"/><text x="395.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.10%)</title><rect x="392" y="260" width="2" height="15" fill="rgb(248,6,10)"/><text x="395.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.10%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(233,55,16)"/><text x="395.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.10%)</title><rect x="392" y="292" width="2" height="15" fill="rgb(230,22,31)"/><text x="395.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:920) (1 samples, 0.10%)</title><rect x="392" y="308" width="2" height="15" fill="rgb(239,142,52)"/><text x="395.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.10%)</title><rect x="394" y="260" width="1" height="15" fill="rgb(224,35,51)"/><text x="397.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (6 samples, 0.62%)</title><rect x="389" y="212" width="7" height="15" fill="rgb(228,143,6)"/><text x="392.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.51%)</title><rect x="390" y="228" width="6" height="15" fill="rgb(232,62,4)"/><text x="393.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.21%)</title><rect x="394" y="244" width="2" height="15" fill="rgb(254,208,1)"/><text x="397.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.10%)</title><rect x="395" y="260" width="1" height="15" fill="rgb(215,148,53)"/><text x="398.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (2 samples, 0.21%)</title><rect x="397" y="292" width="3" height="15" fill="rgb(230,112,14)"/><text x="400.00" y="302.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:778) (1 samples, 0.10%)</title><rect x="398" y="308" width="2" height="15" fill="rgb(242,118,37)"/><text x="401.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.31%)</title><rect x="397" y="276" width="4" height="15" fill="rgb(228,114,41)"/><text x="400.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="400" y="292" width="1" height="15" fill="rgb(241,19,54)"/><text x="403.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.10%)</title><rect x="400" y="308" width="1" height="15" fill="rgb(225,3,20)"/><text x="403.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="401" y="292" width="1" height="15" fill="rgb(211,137,29)"/><text x="404.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="401" y="308" width="1" height="15" fill="rgb(211,8,22)"/><text x="404.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="401" y="324" width="1" height="15" fill="rgb(253,13,6)"/><text x="404.00" y="334.50"></text></g><g><title>0x7fd33246b514 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="401" y="340" width="1" height="15" fill="rgb(218,191,26)"/><text x="404.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2457) (1 samples, 0.10%)</title><rect x="402" y="308" width="1" height="15" fill="rgb(224,186,36)"/><text x="405.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.21%)</title><rect x="403" y="324" width="3" height="15" fill="rgb(252,71,19)"/><text x="406.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="406" y="324" width="1" height="15" fill="rgb(234,24,30)"/><text x="409.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.10%)</title><rect x="407" y="324" width="1" height="15" fill="rgb(240,164,32)"/><text x="410.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 0.82%)</title><rect x="401" y="276" width="10" height="15" fill="rgb(244,71,4)"/><text x="404.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 0.72%)</title><rect x="402" y="292" width="9" height="15" fill="rgb(253,116,19)"/><text x="405.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.62%)</title><rect x="403" y="308" width="8" height="15" fill="rgb(206,148,23)"/><text x="406.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="408" y="324" width="3" height="15" fill="rgb(216,40,19)"/><text x="411.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.10%)</title><rect x="409" y="340" width="2" height="15" fill="rgb(237,121,10)"/><text x="412.00" y="350.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="411" y="292" width="1" height="15" fill="rgb(231,68,6)"/><text x="414.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="411" y="308" width="1" height="15" fill="rgb(243,204,53)"/><text x="414.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.10%)</title><rect x="411" y="324" width="1" height="15" fill="rgb(205,179,14)"/><text x="414.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.10%)</title><rect x="411" y="340" width="1" height="15" fill="rgb(250,210,8)"/><text x="414.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (14 samples, 1.44%)</title><rect x="396" y="212" width="17" height="15" fill="rgb(251,96,21)"/><text x="399.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.34%)</title><rect x="397" y="228" width="16" height="15" fill="rgb(214,214,52)"/><text x="400.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 1.34%)</title><rect x="397" y="244" width="16" height="15" fill="rgb(206,151,42)"/><text x="400.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (13 samples, 1.34%)</title><rect x="397" y="260" width="16" height="15" fill="rgb(241,80,14)"/><text x="400.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.21%)</title><rect x="411" y="276" width="2" height="15" fill="rgb(241,35,9)"/><text x="414.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:310) (1 samples, 0.10%)</title><rect x="412" y="292" width="1" height="15" fill="rgb(213,50,52)"/><text x="415.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="415" y="276" width="2" height="15" fill="rgb(233,178,24)"/><text x="418.00" y="286.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.10%)</title><rect x="415" y="292" width="2" height="15" fill="rgb(229,222,10)"/><text x="418.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="417" y="308" width="1" height="15" fill="rgb(253,35,31)"/><text x="420.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="417" y="324" width="1" height="15" fill="rgb(248,71,7)"/><text x="420.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.10%)</title><rect x="417" y="340" width="1" height="15" fill="rgb(227,88,25)"/><text x="420.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.10%)</title><rect x="417" y="356" width="1" height="15" fill="rgb(224,81,48)"/><text x="420.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.10%)</title><rect x="417" y="372" width="1" height="15" fill="rgb(209,206,1)"/><text x="420.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.10%)</title><rect x="417" y="388" width="1" height="15" fill="rgb(215,211,34)"/><text x="420.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.10%)</title><rect x="418" y="308" width="1" height="15" fill="rgb(222,4,43)"/><text x="421.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="418" y="324" width="1" height="15" fill="rgb(217,189,22)"/><text x="421.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2405) (1 samples, 0.10%)</title><rect x="418" y="340" width="1" height="15" fill="rgb(254,126,42)"/><text x="421.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="419" y="324" width="1" height="15" fill="rgb(220,169,19)"/><text x="422.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="420" y="324" width="1" height="15" fill="rgb(242,71,31)"/><text x="423.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (3 samples, 0.31%)</title><rect x="421" y="340" width="4" height="15" fill="rgb(241,143,32)"/><text x="424.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="425" y="340" width="1" height="15" fill="rgb(209,141,27)"/><text x="428.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.41%)</title><rect x="426" y="340" width="5" height="15" fill="rgb(254,75,32)"/><text x="429.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.31%)</title><rect x="428" y="356" width="3" height="15" fill="rgb(239,158,22)"/><text x="431.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="431" y="340" width="1" height="15" fill="rgb(215,125,45)"/><text x="434.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (201 samples, 20.70%)</title><rect x="189" y="180" width="245" height="15" fill="rgb(217,22,18)"/><text x="192.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_wei..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (37 samples, 3.81%)</title><rect x="389" y="196" width="45" height="15" fill="rgb(226,175,7)"/><text x="392.00" y="206.50">_sam..</text></g><g><title>array_sum (methods.c:2215) (17 samples, 1.75%)</title><rect x="413" y="212" width="21" height="15" fill="rgb(248,72,18)"/><text x="416.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 1.75%)</title><rect x="413" y="228" width="21" height="15" fill="rgb(246,4,11)"/><text x="416.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 1.75%)</title><rect x="413" y="244" width="21" height="15" fill="rgb(237,136,23)"/><text x="416.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 1.54%)</title><rect x="415" y="260" width="19" height="15" fill="rgb(205,153,17)"/><text x="418.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 1.44%)</title><rect x="417" y="276" width="17" height="15" fill="rgb(240,223,53)"/><text x="420.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 1.44%)</title><rect x="417" y="292" width="17" height="15" fill="rgb(235,123,40)"/><text x="420.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (12 samples, 1.24%)</title><rect x="419" y="308" width="15" height="15" fill="rgb(217,91,31)"/><text x="422.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.03%)</title><rect x="421" y="324" width="13" height="15" fill="rgb(235,203,42)"/><text x="424.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="432" y="340" width="2" height="15" fill="rgb(233,165,24)"/><text x="435.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.10%)</title><rect x="434" y="228" width="1" height="15" fill="rgb(251,196,8)"/><text x="437.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="434" y="244" width="1" height="15" fill="rgb(227,151,17)"/><text x="437.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="434" y="260" width="1" height="15" fill="rgb(249,40,14)"/><text x="437.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="434" y="276" width="1" height="15" fill="rgb(253,34,3)"/><text x="437.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="434" y="292" width="1" height="15" fill="rgb(241,108,18)"/><text x="437.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="434" y="308" width="1" height="15" fill="rgb(207,160,13)"/><text x="437.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="434" y="324" width="1" height="15" fill="rgb(240,182,38)"/><text x="437.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.10%)</title><rect x="435" y="244" width="1" height="15" fill="rgb(206,16,52)"/><text x="438.00" y="254.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.10%)</title><rect x="436" y="292" width="1" height="15" fill="rgb(234,58,46)"/><text x="439.00" y="302.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (205 samples, 21.11%)</title><rect x="189" y="164" width="249" height="15" fill="rgb(243,175,54)"/><text x="192.00" y="174.50">decision_function (sklearn/ensemb..</text></g><g><title>array_add (number.c:330) (4 samples, 0.41%)</title><rect x="434" y="180" width="4" height="15" fill="rgb(208,31,24)"/><text x="437.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="434" y="196" width="4" height="15" fill="rgb(249,87,11)"/><text x="437.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.41%)</title><rect x="434" y="212" width="4" height="15" fill="rgb(208,33,3)"/><text x="437.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.31%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(229,215,4)"/><text x="438.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="436" y="244" width="2" height="15" fill="rgb(211,226,31)"/><text x="439.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.21%)</title><rect x="436" y="260" width="2" height="15" fill="rgb(214,151,54)"/><text x="439.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="436" y="276" width="2" height="15" fill="rgb(231,11,27)"/><text x="439.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="437" y="292" width="1" height="15" fill="rgb(223,197,52)"/><text x="440.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.10%)</title><rect x="437" y="308" width="1" height="15" fill="rgb(236,196,19)"/><text x="440.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (206 samples, 21.22%)</title><rect x="189" y="148" width="251" height="15" fill="rgb(227,98,44)"/><text x="192.00" y="158.50">predict_proba (sklearn/ensemble/_..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:703) (1 samples, 0.10%)</title><rect x="438" y="164" width="2" height="15" fill="rgb(241,223,12)"/><text x="441.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.10%)</title><rect x="438" y="180" width="2" height="15" fill="rgb(213,33,10)"/><text x="441.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.10%)</title><rect x="438" y="196" width="2" height="15" fill="rgb(220,191,44)"/><text x="441.00" y="206.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.10%)</title><rect x="440" y="340" width="1" height="15" fill="rgb(253,9,35)"/><text x="443.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.10%)</title><rect x="440" y="356" width="1" height="15" fill="rgb(226,76,49)"/><text x="443.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.10%)</title><rect x="440" y="372" width="1" height="15" fill="rgb(239,112,10)"/><text x="443.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="440" y="388" width="1" height="15" fill="rgb(245,145,11)"/><text x="443.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.10%)</title><rect x="440" y="404" width="1" height="15" fill="rgb(243,166,31)"/><text x="443.00" y="414.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (2 samples, 0.21%)</title><rect x="440" y="180" width="2" height="15" fill="rgb(233,211,20)"/><text x="443.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="440" y="196" width="2" height="15" fill="rgb(212,173,11)"/><text x="443.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.21%)</title><rect x="440" y="212" width="2" height="15" fill="rgb(243,149,34)"/><text x="443.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (2 samples, 0.21%)</title><rect x="440" y="228" width="2" height="15" fill="rgb(249,146,17)"/><text x="443.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.21%)</title><rect x="440" y="244" width="2" height="15" fill="rgb(231,153,39)"/><text x="443.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.21%)</title><rect x="440" y="260" width="2" height="15" fill="rgb(238,44,42)"/><text x="443.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.21%)</title><rect x="440" y="276" width="2" height="15" fill="rgb(247,80,21)"/><text x="443.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.21%)</title><rect x="440" y="292" width="2" height="15" fill="rgb(241,62,22)"/><text x="443.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.21%)</title><rect x="440" y="308" width="2" height="15" fill="rgb(214,130,19)"/><text x="443.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.21%)</title><rect x="440" y="324" width="2" height="15" fill="rgb(234,201,48)"/><text x="443.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (1 samples, 0.10%)</title><rect x="441" y="340" width="1" height="15" fill="rgb(213,157,45)"/><text x="444.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="441" y="356" width="1" height="15" fill="rgb(238,191,19)"/><text x="444.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="441" y="372" width="1" height="15" fill="rgb(236,163,11)"/><text x="444.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="441" y="388" width="1" height="15" fill="rgb(236,96,52)"/><text x="444.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:38) (354 samples, 36.46%)</title><rect x="13" y="52" width="430" height="15" fill="rgb(220,99,14)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:37) (354 samples, 36.46%)</title><rect x="13" y="68" width="430" height="15" fill="rgb(214,148,30)"/><text x="16.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (351 samples, 36.15%)</title><rect x="17" y="84" width="426" height="15" fill="rgb(247,141,34)"/><text x="20.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (210 samples, 21.63%)</title><rect x="188" y="100" width="255" height="15" fill="rgb(222,145,9)"/><text x="191.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (210 samples, 21.63%)</title><rect x="188" y="116" width="255" height="15" fill="rgb(241,29,53)"/><text x="191.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (210 samples, 21.63%)</title><rect x="188" y="132" width="255" height="15" fill="rgb(248,146,38)"/><text x="191.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (3 samples, 0.31%)</title><rect x="440" y="148" width="3" height="15" fill="rgb(214,158,3)"/><text x="443.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (3 samples, 0.31%)</title><rect x="440" y="164" width="3" height="15" fill="rgb(214,131,48)"/><text x="443.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.10%)</title><rect x="442" y="180" width="1" height="15" fill="rgb(222,215,10)"/><text x="445.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="442" y="196" width="1" height="15" fill="rgb(237,64,52)"/><text x="445.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="442" y="212" width="1" height="15" fill="rgb(249,183,14)"/><text x="445.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="442" y="228" width="1" height="15" fill="rgb(238,221,22)"/><text x="445.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.10%)</title><rect x="442" y="244" width="1" height="15" fill="rgb(251,99,14)"/><text x="445.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.10%)</title><rect x="442" y="260" width="1" height="15" fill="rgb(212,3,48)"/><text x="445.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.10%)</title><rect x="442" y="276" width="1" height="15" fill="rgb(248,212,35)"/><text x="445.00" y="286.50"></text></g><g><title>0x7fd33263bc46 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="442" y="292" width="1" height="15" fill="rgb(221,144,29)"/><text x="445.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.10%)</title><rect x="443" y="372" width="2" height="15" fill="rgb(226,154,12)"/><text x="446.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(228,9,37)"/><text x="446.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="443" y="404" width="2" height="15" fill="rgb(227,122,48)"/><text x="446.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="443" y="420" width="2" height="15" fill="rgb(211,169,37)"/><text x="446.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="443" y="436" width="2" height="15" fill="rgb(254,168,40)"/><text x="446.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="443" y="452" width="2" height="15" fill="rgb(244,148,41)"/><text x="446.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="443" y="468" width="2" height="15" fill="rgb(206,13,33)"/><text x="446.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="443" y="484" width="2" height="15" fill="rgb(223,3,50)"/><text x="446.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.10%)</title><rect x="443" y="500" width="2" height="15" fill="rgb(234,23,6)"/><text x="446.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="443" y="516" width="2" height="15" fill="rgb(242,77,29)"/><text x="446.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="443" y="532" width="2" height="15" fill="rgb(211,51,26)"/><text x="446.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="443" y="548" width="2" height="15" fill="rgb(251,84,32)"/><text x="446.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="443" y="564" width="2" height="15" fill="rgb(220,7,47)"/><text x="446.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="443" y="580" width="2" height="15" fill="rgb(248,99,47)"/><text x="446.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.10%)</title><rect x="443" y="596" width="2" height="15" fill="rgb(217,78,49)"/><text x="446.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="443" y="612" width="2" height="15" fill="rgb(221,1,38)"/><text x="446.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="443" y="628" width="2" height="15" fill="rgb(211,150,7)"/><text x="446.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="443" y="644" width="2" height="15" fill="rgb(237,200,39)"/><text x="446.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="443" y="660" width="2" height="15" fill="rgb(207,95,8)"/><text x="446.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="443" y="676" width="2" height="15" fill="rgb(221,101,50)"/><text x="446.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:152) (1 samples, 0.10%)</title><rect x="443" y="692" width="2" height="15" fill="rgb(249,134,50)"/><text x="446.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="443" y="708" width="2" height="15" fill="rgb(250,96,36)"/><text x="446.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="443" y="724" width="2" height="15" fill="rgb(251,212,17)"/><text x="446.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.10%)</title><rect x="443" y="740" width="2" height="15" fill="rgb(216,61,0)"/><text x="446.00" y="750.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.10%)</title><rect x="443" y="756" width="2" height="15" fill="rgb(231,47,48)"/><text x="446.00" y="766.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.10%)</title><rect x="443" y="772" width="2" height="15" fill="rgb(218,116,43)"/><text x="446.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="443" y="788" width="2" height="15" fill="rgb(243,1,11)"/><text x="446.00" y="798.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="804" width="2" height="15" fill="rgb(222,172,41)"/><text x="446.00" y="814.50"></text></g><g><title>0x7fd3326f1995 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="820" width="2" height="15" fill="rgb(217,111,53)"/><text x="446.00" y="830.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="836" width="2" height="15" fill="rgb(244,51,27)"/><text x="446.00" y="846.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="852" width="2" height="15" fill="rgb(252,8,46)"/><text x="446.00" y="862.50"></text></g><g><title>0x7fd3326f1258 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="868" width="2" height="15" fill="rgb(217,81,43)"/><text x="446.00" y="878.50"></text></g><g><title>0x7fd33273ed7a (ld-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="884" width="2" height="15" fill="rgb(249,99,53)"/><text x="446.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="900" width="2" height="15" fill="rgb(218,147,35)"/><text x="446.00" y="910.50"></text></g><g><title>0x7fd33273f18b (ld-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="916" width="2" height="15" fill="rgb(232,39,28)"/><text x="446.00" y="926.50"></text></g><g><title>0x7fd332734bcb (ld-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="932" width="2" height="15" fill="rgb(213,151,7)"/><text x="446.00" y="942.50"></text></g><g><title>0x7fd3327331b6 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="948" width="2" height="15" fill="rgb(234,129,26)"/><text x="446.00" y="958.50"></text></g><g><title>0x7fd332746a04 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="443" y="964" width="2" height="15" fill="rgb(223,39,50)"/><text x="446.00" y="974.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.10%)</title><rect x="445" y="500" width="1" height="15" fill="rgb(218,53,36)"/><text x="448.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="445" y="516" width="1" height="15" fill="rgb(209,157,18)"/><text x="448.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="532" width="1" height="15" fill="rgb(236,42,50)"/><text x="448.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="548" width="1" height="15" fill="rgb(240,156,45)"/><text x="448.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="564" width="1" height="15" fill="rgb(248,126,22)"/><text x="448.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="580" width="1" height="15" fill="rgb(213,185,54)"/><text x="448.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="445" y="596" width="1" height="15" fill="rgb(221,10,7)"/><text x="448.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="612" width="1" height="15" fill="rgb(215,1,17)"/><text x="448.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.10%)</title><rect x="445" y="628" width="1" height="15" fill="rgb(234,219,16)"/><text x="448.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="644" width="1" height="15" fill="rgb(235,202,16)"/><text x="448.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="660" width="1" height="15" fill="rgb(238,75,43)"/><text x="448.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.10%)</title><rect x="445" y="676" width="1" height="15" fill="rgb(218,158,22)"/><text x="448.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.10%)</title><rect x="445" y="692" width="1" height="15" fill="rgb(224,43,32)"/><text x="448.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.10%)</title><rect x="445" y="708" width="1" height="15" fill="rgb(211,203,11)"/><text x="448.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="724" width="1" height="15" fill="rgb(244,15,40)"/><text x="448.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c:4595) (1 samples, 0.10%)</title><rect x="445" y="740" width="1" height="15" fill="rgb(247,44,53)"/><text x="448.00" y="750.50"></text></g><g><title>numpy_pydatetime_import (datetime.c:36) (1 samples, 0.10%)</title><rect x="445" y="756" width="1" height="15" fill="rgb(231,97,14)"/><text x="448.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="772" width="1" height="15" fill="rgb(250,50,11)"/><text x="448.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="788" width="1" height="15" fill="rgb(242,192,29)"/><text x="448.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="804" width="1" height="15" fill="rgb(242,226,27)"/><text x="448.00" y="814.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.10%)</title><rect x="445" y="820" width="1" height="15" fill="rgb(219,164,48)"/><text x="448.00" y="830.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (2 samples, 0.21%)</title><rect x="445" y="372" width="2" height="15" fill="rgb(244,99,6)"/><text x="448.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.21%)</title><rect x="445" y="388" width="2" height="15" fill="rgb(243,0,31)"/><text x="448.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="445" y="404" width="2" height="15" fill="rgb(247,9,44)"/><text x="448.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="445" y="420" width="2" height="15" fill="rgb(246,222,47)"/><text x="448.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="445" y="436" width="2" height="15" fill="rgb(247,226,30)"/><text x="448.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="445" y="452" width="2" height="15" fill="rgb(235,167,25)"/><text x="448.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="445" y="468" width="2" height="15" fill="rgb(232,171,31)"/><text x="448.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="445" y="484" width="2" height="15" fill="rgb(227,65,31)"/><text x="448.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:78) (1 samples, 0.10%)</title><rect x="446" y="500" width="1" height="15" fill="rgb(248,28,36)"/><text x="449.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:203) (1 samples, 0.10%)</title><rect x="446" y="516" width="1" height="15" fill="rgb(210,212,46)"/><text x="449.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.10%)</title><rect x="446" y="532" width="1" height="15" fill="rgb(223,38,38)"/><text x="449.00" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.10%)</title><rect x="447" y="372" width="1" height="15" fill="rgb(214,129,11)"/><text x="450.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="447" y="388" width="1" height="15" fill="rgb(248,28,27)"/><text x="450.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="447" y="404" width="1" height="15" fill="rgb(237,90,36)"/><text x="450.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="447" y="420" width="1" height="15" fill="rgb(223,135,49)"/><text x="450.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="447" y="436" width="1" height="15" fill="rgb(249,190,30)"/><text x="450.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="447" y="452" width="1" height="15" fill="rgb(221,170,38)"/><text x="450.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="447" y="468" width="1" height="15" fill="rgb(252,140,51)"/><text x="450.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="447" y="484" width="1" height="15" fill="rgb(214,171,46)"/><text x="450.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:780) (1 samples, 0.10%)</title><rect x="447" y="500" width="1" height="15" fill="rgb(214,47,45)"/><text x="450.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.10%)</title><rect x="447" y="516" width="1" height="15" fill="rgb(249,186,45)"/><text x="450.00" y="526.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.10%)</title><rect x="447" y="532" width="1" height="15" fill="rgb(216,92,20)"/><text x="450.00" y="542.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.10%)</title><rect x="447" y="548" width="1" height="15" fill="rgb(205,14,17)"/><text x="450.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (5 samples, 0.51%)</title><rect x="443" y="244" width="6" height="15" fill="rgb(223,198,43)"/><text x="446.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 0.51%)</title><rect x="443" y="260" width="6" height="15" fill="rgb(233,104,22)"/><text x="446.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.51%)</title><rect x="443" y="276" width="6" height="15" fill="rgb(247,11,1)"/><text x="446.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.51%)</title><rect x="443" y="292" width="6" height="15" fill="rgb(216,34,1)"/><text x="446.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.51%)</title><rect x="443" y="308" width="6" height="15" fill="rgb(240,86,40)"/><text x="446.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.51%)</title><rect x="443" y="324" width="6" height="15" fill="rgb(228,65,13)"/><text x="446.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.51%)</title><rect x="443" y="340" width="6" height="15" fill="rgb(219,194,16)"/><text x="446.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.51%)</title><rect x="443" y="356" width="6" height="15" fill="rgb(217,125,2)"/><text x="446.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:88) (1 samples, 0.10%)</title><rect x="448" y="372" width="1" height="15" fill="rgb(206,143,6)"/><text x="451.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="448" y="388" width="1" height="15" fill="rgb(209,55,51)"/><text x="451.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="448" y="404" width="1" height="15" fill="rgb(245,75,32)"/><text x="451.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="448" y="420" width="1" height="15" fill="rgb(209,205,38)"/><text x="451.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="448" y="436" width="1" height="15" fill="rgb(221,106,12)"/><text x="451.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="448" y="452" width="1" height="15" fill="rgb(222,166,21)"/><text x="451.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="448" y="468" width="1" height="15" fill="rgb(240,92,2)"/><text x="451.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="448" y="484" width="1" height="15" fill="rgb(236,144,9)"/><text x="451.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/einsumfunc.py:704) (1 samples, 0.10%)</title><rect x="448" y="500" width="1" height="15" fill="rgb(254,222,3)"/><text x="451.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.10%)</title><rect x="448" y="516" width="1" height="15" fill="rgb(208,1,32)"/><text x="451.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (6 samples, 0.62%)</title><rect x="443" y="148" width="8" height="15" fill="rgb(253,34,10)"/><text x="446.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="443" y="164" width="8" height="15" fill="rgb(223,141,48)"/><text x="446.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="443" y="180" width="8" height="15" fill="rgb(249,226,32)"/><text x="446.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="443" y="196" width="8" height="15" fill="rgb(242,33,32)"/><text x="446.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="443" y="212" width="8" height="15" fill="rgb(248,38,50)"/><text x="446.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="443" y="228" width="8" height="15" fill="rgb(232,106,36)"/><text x="446.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.10%)</title><rect x="449" y="244" width="2" height="15" fill="rgb(210,120,26)"/><text x="452.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="449" y="260" width="2" height="15" fill="rgb(251,138,13)"/><text x="452.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="449" y="276" width="2" height="15" fill="rgb(241,12,1)"/><text x="452.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="449" y="292" width="2" height="15" fill="rgb(213,156,28)"/><text x="452.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="449" y="308" width="2" height="15" fill="rgb(210,11,6)"/><text x="452.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(238,191,36)"/><text x="452.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.10%)</title><rect x="449" y="340" width="2" height="15" fill="rgb(250,206,4)"/><text x="452.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="449" y="356" width="2" height="15" fill="rgb(236,11,48)"/><text x="452.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="449" y="372" width="2" height="15" fill="rgb(206,22,41)"/><text x="452.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(226,22,19)"/><text x="452.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="449" y="404" width="2" height="15" fill="rgb(219,74,31)"/><text x="452.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="449" y="420" width="2" height="15" fill="rgb(234,100,10)"/><text x="452.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.10%)</title><rect x="449" y="436" width="2" height="15" fill="rgb(238,224,22)"/><text x="452.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="449" y="452" width="2" height="15" fill="rgb(253,187,39)"/><text x="452.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="449" y="468" width="2" height="15" fill="rgb(226,216,14)"/><text x="452.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="449" y="484" width="2" height="15" fill="rgb(222,74,9)"/><text x="452.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="449" y="500" width="2" height="15" fill="rgb(249,95,19)"/><text x="452.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="449" y="516" width="2" height="15" fill="rgb(214,142,17)"/><text x="452.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="449" y="532" width="2" height="15" fill="rgb(249,142,35)"/><text x="452.00" y="542.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.10%)</title><rect x="451" y="964" width="1" height="15" fill="rgb(223,120,5)"/><text x="454.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.10%)</title><rect x="451" y="980" width="1" height="15" fill="rgb(225,86,20)"/><text x="454.00" y="990.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.10%)</title><rect x="451" y="996" width="1" height="15" fill="rgb(211,98,40)"/><text x="454.00" y="1006.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.10%)</title><rect x="451" y="1012" width="1" height="15" fill="rgb(211,192,41)"/><text x="454.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.21%)</title><rect x="451" y="852" width="2" height="15" fill="rgb(222,170,16)"/><text x="454.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.21%)</title><rect x="451" y="868" width="2" height="15" fill="rgb(241,171,34)"/><text x="454.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.21%)</title><rect x="451" y="884" width="2" height="15" fill="rgb(236,12,35)"/><text x="454.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.21%)</title><rect x="451" y="900" width="2" height="15" fill="rgb(235,222,16)"/><text x="454.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.21%)</title><rect x="451" y="916" width="2" height="15" fill="rgb(210,77,44)"/><text x="454.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.21%)</title><rect x="451" y="932" width="2" height="15" fill="rgb(249,170,40)"/><text x="454.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.21%)</title><rect x="451" y="948" width="2" height="15" fill="rgb(205,34,44)"/><text x="454.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.10%)</title><rect x="452" y="964" width="1" height="15" fill="rgb(209,41,10)"/><text x="455.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.10%)</title><rect x="452" y="980" width="1" height="15" fill="rgb(209,118,17)"/><text x="455.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.10%)</title><rect x="452" y="996" width="1" height="15" fill="rgb(214,172,22)"/><text x="455.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.10%)</title><rect x="452" y="1012" width="1" height="15" fill="rgb(246,65,18)"/><text x="455.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="453" y="852" width="2" height="15" fill="rgb(249,120,39)"/><text x="456.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="453" y="868" width="2" height="15" fill="rgb(231,115,23)"/><text x="456.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.21%)</title><rect x="453" y="884" width="2" height="15" fill="rgb(225,39,39)"/><text x="456.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.21%)</title><rect x="453" y="900" width="2" height="15" fill="rgb(227,94,12)"/><text x="456.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.21%)</title><rect x="453" y="916" width="2" height="15" fill="rgb(240,72,14)"/><text x="456.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.10%)</title><rect x="454" y="932" width="1" height="15" fill="rgb(211,119,4)"/><text x="457.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.10%)</title><rect x="454" y="948" width="1" height="15" fill="rgb(236,204,54)"/><text x="457.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1380) (1 samples, 0.10%)</title><rect x="454" y="964" width="1" height="15" fill="rgb(214,111,21)"/><text x="457.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.51%)</title><rect x="451" y="820" width="6" height="15" fill="rgb(234,5,44)"/><text x="454.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.51%)</title><rect x="451" y="836" width="6" height="15" fill="rgb(230,161,4)"/><text x="454.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.10%)</title><rect x="455" y="852" width="2" height="15" fill="rgb(226,214,26)"/><text x="458.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.10%)</title><rect x="455" y="868" width="2" height="15" fill="rgb(246,12,48)"/><text x="458.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.10%)</title><rect x="455" y="884" width="2" height="15" fill="rgb(240,164,0)"/><text x="458.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.10%)</title><rect x="455" y="900" width="2" height="15" fill="rgb(231,25,27)"/><text x="458.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="455" y="916" width="2" height="15" fill="rgb(212,138,53)"/><text x="458.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="455" y="932" width="2" height="15" fill="rgb(205,124,16)"/><text x="458.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.10%)</title><rect x="455" y="948" width="2" height="15" fill="rgb(238,208,19)"/><text x="458.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.10%)</title><rect x="455" y="964" width="2" height="15" fill="rgb(211,96,14)"/><text x="458.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:149) (1 samples, 0.10%)</title><rect x="455" y="980" width="2" height="15" fill="rgb(220,161,18)"/><text x="458.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (6 samples, 0.62%)</title><rect x="451" y="148" width="7" height="15" fill="rgb(212,142,17)"/><text x="454.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="164" width="7" height="15" fill="rgb(253,80,47)"/><text x="454.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.62%)</title><rect x="451" y="180" width="7" height="15" fill="rgb(232,35,37)"/><text x="454.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="196" width="7" height="15" fill="rgb(219,79,31)"/><text x="454.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="212" width="7" height="15" fill="rgb(235,1,0)"/><text x="454.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="228" width="7" height="15" fill="rgb(250,128,20)"/><text x="454.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="244" width="7" height="15" fill="rgb(218,129,19)"/><text x="454.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="260" width="7" height="15" fill="rgb(208,12,14)"/><text x="454.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="276" width="7" height="15" fill="rgb(248,43,44)"/><text x="454.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.62%)</title><rect x="451" y="292" width="7" height="15" fill="rgb(227,177,0)"/><text x="454.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="308" width="7" height="15" fill="rgb(246,141,10)"/><text x="454.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="324" width="7" height="15" fill="rgb(254,86,35)"/><text x="454.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="340" width="7" height="15" fill="rgb(210,15,45)"/><text x="454.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="356" width="7" height="15" fill="rgb(224,33,46)"/><text x="454.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="372" width="7" height="15" fill="rgb(206,44,22)"/><text x="454.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.62%)</title><rect x="451" y="388" width="7" height="15" fill="rgb(232,34,11)"/><text x="454.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="404" width="7" height="15" fill="rgb(205,35,38)"/><text x="454.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="420" width="7" height="15" fill="rgb(209,132,32)"/><text x="454.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="436" width="7" height="15" fill="rgb(227,65,3)"/><text x="454.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="452" width="7" height="15" fill="rgb(215,67,16)"/><text x="454.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="468" width="7" height="15" fill="rgb(247,219,12)"/><text x="454.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.62%)</title><rect x="451" y="484" width="7" height="15" fill="rgb(254,124,11)"/><text x="454.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="500" width="7" height="15" fill="rgb(253,88,24)"/><text x="454.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="516" width="7" height="15" fill="rgb(205,45,15)"/><text x="454.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="532" width="7" height="15" fill="rgb(226,221,26)"/><text x="454.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="548" width="7" height="15" fill="rgb(215,59,25)"/><text x="454.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="564" width="7" height="15" fill="rgb(251,4,25)"/><text x="454.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 0.62%)</title><rect x="451" y="580" width="7" height="15" fill="rgb(222,227,48)"/><text x="454.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="596" width="7" height="15" fill="rgb(249,5,46)"/><text x="454.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.62%)</title><rect x="451" y="612" width="7" height="15" fill="rgb(206,143,52)"/><text x="454.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="628" width="7" height="15" fill="rgb(236,43,41)"/><text x="454.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="644" width="7" height="15" fill="rgb(206,147,48)"/><text x="454.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="660" width="7" height="15" fill="rgb(242,10,52)"/><text x="454.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="676" width="7" height="15" fill="rgb(230,53,18)"/><text x="454.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="692" width="7" height="15" fill="rgb(229,195,26)"/><text x="454.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="708" width="7" height="15" fill="rgb(225,90,22)"/><text x="454.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 0.62%)</title><rect x="451" y="724" width="7" height="15" fill="rgb(242,16,7)"/><text x="454.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="451" y="740" width="7" height="15" fill="rgb(246,212,34)"/><text x="454.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="451" y="756" width="7" height="15" fill="rgb(220,99,52)"/><text x="454.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="451" y="772" width="7" height="15" fill="rgb(234,223,34)"/><text x="454.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="451" y="788" width="7" height="15" fill="rgb(249,227,44)"/><text x="454.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="451" y="804" width="7" height="15" fill="rgb(249,8,9)"/><text x="454.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.10%)</title><rect x="457" y="820" width="1" height="15" fill="rgb(248,83,47)"/><text x="460.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="457" y="836" width="1" height="15" fill="rgb(253,14,24)"/><text x="460.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="457" y="852" width="1" height="15" fill="rgb(206,169,15)"/><text x="460.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="457" y="868" width="1" height="15" fill="rgb(246,67,21)"/><text x="460.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="457" y="884" width="1" height="15" fill="rgb(236,123,28)"/><text x="460.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="457" y="900" width="1" height="15" fill="rgb(215,142,5)"/><text x="460.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.10%)</title><rect x="457" y="916" width="1" height="15" fill="rgb(244,192,7)"/><text x="460.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="457" y="932" width="1" height="15" fill="rgb(234,112,27)"/><text x="460.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="457" y="948" width="1" height="15" fill="rgb(237,78,37)"/><text x="460.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="457" y="964" width="1" height="15" fill="rgb(219,85,28)"/><text x="460.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="457" y="980" width="1" height="15" fill="rgb(247,16,29)"/><text x="460.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="457" y="996" width="1" height="15" fill="rgb(230,93,22)"/><text x="460.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:31) (1 samples, 0.10%)</title><rect x="457" y="1012" width="1" height="15" fill="rgb(254,137,28)"/><text x="460.00" y="1022.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="457" y="1028" width="1" height="15" fill="rgb(236,1,3)"/><text x="460.00" y="1038.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="457" y="1044" width="1" height="15" fill="rgb(222,149,28)"/><text x="460.00" y="1054.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.10%)</title><rect x="457" y="1060" width="1" height="15" fill="rgb(246,223,21)"/><text x="460.00" y="1070.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.10%)</title><rect x="457" y="1076" width="1" height="15" fill="rgb(224,206,24)"/><text x="460.00" y="1086.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.10%)</title><rect x="457" y="1092" width="1" height="15" fill="rgb(225,165,13)"/><text x="460.00" y="1102.50"></text></g><g><title>_parse (sre_parse.py:835) (1 samples, 0.10%)</title><rect x="457" y="1108" width="1" height="15" fill="rgb(215,159,29)"/><text x="460.00" y="1118.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.10%)</title><rect x="458" y="340" width="1" height="15" fill="rgb(205,121,48)"/><text x="461.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="458" y="356" width="1" height="15" fill="rgb(212,26,25)"/><text x="461.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="458" y="372" width="1" height="15" fill="rgb(228,201,40)"/><text x="461.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="458" y="388" width="1" height="15" fill="rgb(208,25,15)"/><text x="461.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="458" y="404" width="1" height="15" fill="rgb(208,117,39)"/><text x="461.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="458" y="420" width="1" height="15" fill="rgb(244,190,5)"/><text x="461.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:29) (1 samples, 0.10%)</title><rect x="458" y="436" width="1" height="15" fill="rgb(235,115,48)"/><text x="461.00" y="446.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:4) (2 samples, 0.21%)</title><rect x="458" y="148" width="2" height="15" fill="rgb(206,10,52)"/><text x="461.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="458" y="164" width="2" height="15" fill="rgb(236,41,9)"/><text x="461.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="458" y="180" width="2" height="15" fill="rgb(244,38,25)"/><text x="461.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="458" y="196" width="2" height="15" fill="rgb(237,125,6)"/><text x="461.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="458" y="212" width="2" height="15" fill="rgb(214,83,52)"/><text x="461.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="458" y="228" width="2" height="15" fill="rgb(209,170,13)"/><text x="461.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (2 samples, 0.21%)</title><rect x="458" y="244" width="2" height="15" fill="rgb(230,62,8)"/><text x="461.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="458" y="260" width="2" height="15" fill="rgb(207,63,12)"/><text x="461.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="458" y="276" width="2" height="15" fill="rgb(217,3,51)"/><text x="461.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(234,89,45)"/><text x="461.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(208,56,47)"/><text x="461.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="458" y="324" width="2" height="15" fill="rgb(248,96,34)"/><text x="461.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.10%)</title><rect x="459" y="340" width="1" height="15" fill="rgb(232,140,50)"/><text x="462.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="356" width="1" height="15" fill="rgb(230,25,40)"/><text x="462.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="372" width="1" height="15" fill="rgb(253,140,49)"/><text x="462.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="388" width="1" height="15" fill="rgb(206,162,11)"/><text x="462.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="404" width="1" height="15" fill="rgb(239,73,42)"/><text x="462.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="420" width="1" height="15" fill="rgb(234,123,41)"/><text x="462.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.10%)</title><rect x="459" y="436" width="1" height="15" fill="rgb(249,100,49)"/><text x="462.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="452" width="1" height="15" fill="rgb(214,43,49)"/><text x="462.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="468" width="1" height="15" fill="rgb(251,191,31)"/><text x="462.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="484" width="1" height="15" fill="rgb(237,35,28)"/><text x="462.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="500" width="1" height="15" fill="rgb(249,145,11)"/><text x="462.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="516" width="1" height="15" fill="rgb(243,180,32)"/><text x="462.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.10%)</title><rect x="459" y="532" width="1" height="15" fill="rgb(247,73,22)"/><text x="462.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="548" width="1" height="15" fill="rgb(253,160,15)"/><text x="462.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="564" width="1" height="15" fill="rgb(233,29,43)"/><text x="462.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="580" width="1" height="15" fill="rgb(224,85,23)"/><text x="462.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="459" y="596" width="1" height="15" fill="rgb(248,228,24)"/><text x="462.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="612" width="1" height="15" fill="rgb(211,192,52)"/><text x="462.00" y="622.50"></text></g><g><title>0x7fd30c330373 (?) (1 samples, 0.10%)</title><rect x="459" y="628" width="1" height="15" fill="rgb(253,114,20)"/><text x="462.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="644" width="1" height="15" fill="rgb(252,89,15)"/><text x="462.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="660" width="1" height="15" fill="rgb(243,211,33)"/><text x="462.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="676" width="1" height="15" fill="rgb(237,205,18)"/><text x="462.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="459" y="692" width="1" height="15" fill="rgb(225,217,14)"/><text x="462.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="708" width="1" height="15" fill="rgb(236,166,14)"/><text x="462.00" y="718.50"></text></g><g><title>0x7fd30c0f3eea (?) (1 samples, 0.10%)</title><rect x="459" y="724" width="1" height="15" fill="rgb(230,156,26)"/><text x="462.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="740" width="1" height="15" fill="rgb(216,154,21)"/><text x="462.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="756" width="1" height="15" fill="rgb(247,137,4)"/><text x="462.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="772" width="1" height="15" fill="rgb(209,70,13)"/><text x="462.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.10%)</title><rect x="459" y="788" width="1" height="15" fill="rgb(232,160,3)"/><text x="462.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="804" width="1" height="15" fill="rgb(244,130,15)"/><text x="462.00" y="814.50"></text></g><g><title>0x7fd30be8c887 (?) (1 samples, 0.10%)</title><rect x="459" y="820" width="1" height="15" fill="rgb(246,38,30)"/><text x="462.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="836" width="1" height="15" fill="rgb(206,198,29)"/><text x="462.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="459" y="852" width="1" height="15" fill="rgb(247,178,42)"/><text x="462.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="868" width="1" height="15" fill="rgb(230,66,14)"/><text x="462.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="884" width="1" height="15" fill="rgb(220,11,44)"/><text x="462.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="900" width="1" height="15" fill="rgb(247,120,0)"/><text x="462.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="916" width="1" height="15" fill="rgb(230,218,18)"/><text x="462.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="932" width="1" height="15" fill="rgb(241,142,15)"/><text x="462.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="948" width="1" height="15" fill="rgb(249,160,48)"/><text x="462.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.10%)</title><rect x="459" y="964" width="1" height="15" fill="rgb(205,83,17)"/><text x="462.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="980" width="1" height="15" fill="rgb(249,105,5)"/><text x="462.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="996" width="1" height="15" fill="rgb(254,200,16)"/><text x="462.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1012" width="1" height="15" fill="rgb(246,85,4)"/><text x="462.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="1028" width="1" height="15" fill="rgb(235,177,54)"/><text x="462.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="1044" width="1" height="15" fill="rgb(213,223,8)"/><text x="462.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.10%)</title><rect x="459" y="1060" width="1" height="15" fill="rgb(205,78,48)"/><text x="462.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="1076" width="1" height="15" fill="rgb(244,80,26)"/><text x="462.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="1092" width="1" height="15" fill="rgb(217,212,38)"/><text x="462.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1108" width="1" height="15" fill="rgb(250,91,45)"/><text x="462.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="1124" width="1" height="15" fill="rgb(219,198,42)"/><text x="462.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="1140" width="1" height="15" fill="rgb(209,208,18)"/><text x="462.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.10%)</title><rect x="459" y="1156" width="1" height="15" fill="rgb(221,167,12)"/><text x="462.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="1172" width="1" height="15" fill="rgb(208,94,35)"/><text x="462.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="1188" width="1" height="15" fill="rgb(214,151,51)"/><text x="462.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1204" width="1" height="15" fill="rgb(239,42,15)"/><text x="462.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="1220" width="1" height="15" fill="rgb(243,130,10)"/><text x="462.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="1236" width="1" height="15" fill="rgb(232,158,28)"/><text x="462.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.10%)</title><rect x="459" y="1252" width="1" height="15" fill="rgb(216,61,40)"/><text x="462.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="1268" width="1" height="15" fill="rgb(212,99,44)"/><text x="462.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="1284" width="1" height="15" fill="rgb(213,60,21)"/><text x="462.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1300" width="1" height="15" fill="rgb(207,183,24)"/><text x="462.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="1316" width="1" height="15" fill="rgb(227,61,17)"/><text x="462.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="1332" width="1" height="15" fill="rgb(216,61,45)"/><text x="462.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:25) (1 samples, 0.10%)</title><rect x="459" y="1348" width="1" height="15" fill="rgb(216,163,47)"/><text x="462.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="1364" width="1" height="15" fill="rgb(207,110,41)"/><text x="462.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="1380" width="1" height="15" fill="rgb(214,73,38)"/><text x="462.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1396" width="1" height="15" fill="rgb(242,198,16)"/><text x="462.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="459" y="1412" width="1" height="15" fill="rgb(254,207,28)"/><text x="462.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.10%)</title><rect x="459" y="1428" width="1" height="15" fill="rgb(243,55,35)"/><text x="462.00" y="1438.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.10%)</title><rect x="459" y="1444" width="1" height="15" fill="rgb(245,59,50)"/><text x="462.00" y="1454.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="459" y="1460" width="1" height="15" fill="rgb(207,13,26)"/><text x="462.00" y="1470.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:223) (1 samples, 0.10%)</title><rect x="460" y="660" width="2" height="15" fill="rgb(226,167,29)"/><text x="463.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py:219) (1 samples, 0.10%)</title><rect x="460" y="676" width="2" height="15" fill="rgb(206,211,31)"/><text x="463.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="460" y="692" width="2" height="15" fill="rgb(250,127,8)"/><text x="463.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="460" y="708" width="2" height="15" fill="rgb(236,12,7)"/><text x="463.00" y="718.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.10%)</title><rect x="460" y="724" width="2" height="15" fill="rgb(246,126,9)"/><text x="463.00" y="734.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.10%)</title><rect x="460" y="740" width="2" height="15" fill="rgb(248,177,36)"/><text x="463.00" y="750.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.10%)</title><rect x="460" y="756" width="2" height="15" fill="rgb(207,133,44)"/><text x="463.00" y="766.50"></text></g><g><title>_compile (sre_compile.py:184) (1 samples, 0.10%)</title><rect x="460" y="772" width="2" height="15" fill="rgb(206,39,3)"/><text x="463.00" y="782.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.10%)</title><rect x="460" y="788" width="2" height="15" fill="rgb(245,134,22)"/><text x="463.00" y="798.50"></text></g><g><title>_compile (sre_compile.py:124) (1 samples, 0.10%)</title><rect x="460" y="804" width="2" height="15" fill="rgb(210,63,31)"/><text x="463.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (2 samples, 0.21%)</title><rect x="460" y="340" width="3" height="15" fill="rgb(246,15,10)"/><text x="463.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(206,92,5)"/><text x="463.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="460" y="372" width="3" height="15" fill="rgb(245,82,37)"/><text x="463.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="460" y="388" width="3" height="15" fill="rgb(211,99,14)"/><text x="463.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="460" y="404" width="3" height="15" fill="rgb(223,40,6)"/><text x="463.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="460" y="420" width="3" height="15" fill="rgb(226,206,19)"/><text x="463.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (2 samples, 0.21%)</title><rect x="460" y="436" width="3" height="15" fill="rgb(231,73,28)"/><text x="463.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="460" y="452" width="3" height="15" fill="rgb(239,20,6)"/><text x="463.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="460" y="468" width="3" height="15" fill="rgb(231,206,20)"/><text x="463.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="460" y="484" width="3" height="15" fill="rgb(236,22,25)"/><text x="463.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="460" y="500" width="3" height="15" fill="rgb(241,85,9)"/><text x="463.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="460" y="516" width="3" height="15" fill="rgb(209,185,21)"/><text x="463.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (2 samples, 0.21%)</title><rect x="460" y="532" width="3" height="15" fill="rgb(247,196,42)"/><text x="463.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.21%)</title><rect x="460" y="548" width="3" height="15" fill="rgb(254,189,8)"/><text x="463.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="460" y="564" width="3" height="15" fill="rgb(234,71,10)"/><text x="463.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="460" y="580" width="3" height="15" fill="rgb(244,22,1)"/><text x="463.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="460" y="596" width="3" height="15" fill="rgb(229,146,34)"/><text x="463.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="460" y="612" width="3" height="15" fill="rgb(205,24,23)"/><text x="463.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="460" y="628" width="3" height="15" fill="rgb(211,228,39)"/><text x="463.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="460" y="644" width="3" height="15" fill="rgb(224,165,51)"/><text x="463.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:238) (1 samples, 0.10%)</title><rect x="462" y="660" width="1" height="15" fill="rgb(237,30,39)"/><text x="465.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.10%)</title><rect x="463" y="1492" width="1" height="15" fill="rgb(218,8,27)"/><text x="466.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="463" y="1508" width="1" height="15" fill="rgb(226,227,19)"/><text x="466.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="463" y="1524" width="1" height="15" fill="rgb(209,64,17)"/><text x="466.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="463" y="1540" width="1" height="15" fill="rgb(243,218,24)"/><text x="466.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="463" y="1556" width="1" height="15" fill="rgb(230,69,30)"/><text x="466.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="463" y="1572" width="1" height="15" fill="rgb(216,90,40)"/><text x="466.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.10%)</title><rect x="463" y="1588" width="1" height="15" fill="rgb(209,189,40)"/><text x="466.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="463" y="1604" width="1" height="15" fill="rgb(226,107,7)"/><text x="466.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="463" y="1620" width="1" height="15" fill="rgb(232,139,51)"/><text x="466.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="463" y="1636" width="1" height="15" fill="rgb(236,0,35)"/><text x="466.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="463" y="1652" width="1" height="15" fill="rgb(245,93,49)"/><text x="466.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="463" y="1668" width="1" height="15" fill="rgb(247,76,18)"/><text x="466.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.10%)</title><rect x="463" y="1684" width="1" height="15" fill="rgb(252,58,25)"/><text x="466.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="463" y="1700" width="1" height="15" fill="rgb(242,3,54)"/><text x="466.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="463" y="1716" width="1" height="15" fill="rgb(231,8,9)"/><text x="466.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="463" y="1732" width="1" height="15" fill="rgb(229,128,10)"/><text x="466.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="463" y="1748" width="1" height="15" fill="rgb(218,10,12)"/><text x="466.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="463" y="1764" width="1" height="15" fill="rgb(242,144,3)"/><text x="466.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:656) (1 samples, 0.10%)</title><rect x="463" y="1780" width="1" height="15" fill="rgb(221,173,14)"/><text x="466.00" y="1790.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1599) (1 samples, 0.10%)</title><rect x="463" y="1796" width="1" height="15" fill="rgb(245,171,22)"/><text x="466.00" y="1806.50"></text></g><g><title>__init__ (matplotlib/artist.py:1211) (1 samples, 0.10%)</title><rect x="463" y="1812" width="1" height="15" fill="rgb(248,6,47)"/><text x="466.00" y="1822.50"></text></g><g><title>get_aliases (matplotlib/artist.py:1230) (1 samples, 0.10%)</title><rect x="463" y="1828" width="1" height="15" fill="rgb(210,207,30)"/><text x="466.00" y="1838.50"></text></g><g><title>is_alias (matplotlib/artist.py:1321) (1 samples, 0.10%)</title><rect x="463" y="1844" width="1" height="15" fill="rgb(233,180,9)"/><text x="466.00" y="1854.50"></text></g><g><title>getdoc (inspect.py:611) (1 samples, 0.10%)</title><rect x="463" y="1860" width="1" height="15" fill="rgb(238,50,51)"/><text x="466.00" y="1870.50"></text></g><g><title>cleandoc (inspect.py:619) (1 samples, 0.10%)</title><rect x="463" y="1876" width="1" height="15" fill="rgb(222,199,7)"/><text x="466.00" y="1886.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.10%)</title><rect x="463" y="1892" width="1" height="15" fill="rgb(211,140,5)"/><text x="466.00" y="1902.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.21%)</title><rect x="463" y="436" width="2" height="15" fill="rgb(238,129,38)"/><text x="466.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="452" width="2" height="15" fill="rgb(244,183,10)"/><text x="466.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="468" width="2" height="15" fill="rgb(215,117,42)"/><text x="466.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="484" width="2" height="15" fill="rgb(227,47,31)"/><text x="466.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="500" width="2" height="15" fill="rgb(247,75,36)"/><text x="466.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="516" width="2" height="15" fill="rgb(210,117,27)"/><text x="466.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.21%)</title><rect x="463" y="532" width="2" height="15" fill="rgb(209,143,19)"/><text x="466.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="548" width="2" height="15" fill="rgb(240,142,24)"/><text x="466.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="564" width="2" height="15" fill="rgb(205,37,46)"/><text x="466.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="580" width="2" height="15" fill="rgb(237,3,54)"/><text x="466.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="596" width="2" height="15" fill="rgb(254,169,48)"/><text x="466.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="612" width="2" height="15" fill="rgb(237,13,4)"/><text x="466.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.21%)</title><rect x="463" y="628" width="2" height="15" fill="rgb(222,75,34)"/><text x="466.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="644" width="2" height="15" fill="rgb(221,227,35)"/><text x="466.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="660" width="2" height="15" fill="rgb(216,133,39)"/><text x="466.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="676" width="2" height="15" fill="rgb(217,1,42)"/><text x="466.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="692" width="2" height="15" fill="rgb(211,87,41)"/><text x="466.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="708" width="2" height="15" fill="rgb(206,165,17)"/><text x="466.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.21%)</title><rect x="463" y="724" width="2" height="15" fill="rgb(209,21,3)"/><text x="466.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="740" width="2" height="15" fill="rgb(207,80,2)"/><text x="466.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="756" width="2" height="15" fill="rgb(236,54,47)"/><text x="466.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="772" width="2" height="15" fill="rgb(215,139,43)"/><text x="466.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="788" width="2" height="15" fill="rgb(206,185,2)"/><text x="466.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="804" width="2" height="15" fill="rgb(213,196,45)"/><text x="466.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.21%)</title><rect x="463" y="820" width="2" height="15" fill="rgb(210,38,36)"/><text x="466.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="836" width="2" height="15" fill="rgb(219,16,54)"/><text x="466.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="852" width="2" height="15" fill="rgb(224,44,13)"/><text x="466.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="868" width="2" height="15" fill="rgb(219,79,39)"/><text x="466.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="884" width="2" height="15" fill="rgb(220,172,6)"/><text x="466.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="900" width="2" height="15" fill="rgb(226,218,35)"/><text x="466.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.21%)</title><rect x="463" y="916" width="2" height="15" fill="rgb(249,189,7)"/><text x="466.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="932" width="2" height="15" fill="rgb(220,170,31)"/><text x="466.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="948" width="2" height="15" fill="rgb(232,170,7)"/><text x="466.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="964" width="2" height="15" fill="rgb(237,222,36)"/><text x="466.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="980" width="2" height="15" fill="rgb(235,137,32)"/><text x="466.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="996" width="2" height="15" fill="rgb(230,127,43)"/><text x="466.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.21%)</title><rect x="463" y="1012" width="2" height="15" fill="rgb(209,94,42)"/><text x="466.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="1028" width="2" height="15" fill="rgb(227,85,13)"/><text x="466.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="1044" width="2" height="15" fill="rgb(215,223,44)"/><text x="466.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="1060" width="2" height="15" fill="rgb(221,45,6)"/><text x="466.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="1076" width="2" height="15" fill="rgb(222,214,7)"/><text x="466.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="1092" width="2" height="15" fill="rgb(238,94,16)"/><text x="466.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.21%)</title><rect x="463" y="1108" width="2" height="15" fill="rgb(206,212,32)"/><text x="466.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="1124" width="2" height="15" fill="rgb(233,84,30)"/><text x="466.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="1140" width="2" height="15" fill="rgb(217,58,37)"/><text x="466.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="1156" width="2" height="15" fill="rgb(243,96,13)"/><text x="466.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="1172" width="2" height="15" fill="rgb(251,121,3)"/><text x="466.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="1188" width="2" height="15" fill="rgb(223,136,48)"/><text x="466.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.21%)</title><rect x="463" y="1204" width="2" height="15" fill="rgb(222,156,18)"/><text x="466.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="1220" width="2" height="15" fill="rgb(249,174,8)"/><text x="466.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="1236" width="2" height="15" fill="rgb(234,40,11)"/><text x="466.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="1252" width="2" height="15" fill="rgb(217,210,32)"/><text x="466.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="1268" width="2" height="15" fill="rgb(241,158,40)"/><text x="466.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="1284" width="2" height="15" fill="rgb(238,220,53)"/><text x="466.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.21%)</title><rect x="463" y="1300" width="2" height="15" fill="rgb(206,15,28)"/><text x="466.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="1316" width="2" height="15" fill="rgb(251,62,37)"/><text x="466.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="1332" width="2" height="15" fill="rgb(244,213,40)"/><text x="466.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="1348" width="2" height="15" fill="rgb(226,220,50)"/><text x="466.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="1364" width="2" height="15" fill="rgb(233,76,49)"/><text x="466.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="1380" width="2" height="15" fill="rgb(207,88,23)"/><text x="466.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.21%)</title><rect x="463" y="1396" width="2" height="15" fill="rgb(223,165,36)"/><text x="466.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="463" y="1412" width="2" height="15" fill="rgb(225,12,36)"/><text x="466.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="463" y="1428" width="2" height="15" fill="rgb(218,44,34)"/><text x="466.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="463" y="1444" width="2" height="15" fill="rgb(216,10,22)"/><text x="466.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="463" y="1460" width="2" height="15" fill="rgb(218,96,52)"/><text x="466.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="463" y="1476" width="2" height="15" fill="rgb(242,89,14)"/><text x="466.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.10%)</title><rect x="464" y="1492" width="1" height="15" fill="rgb(242,214,47)"/><text x="467.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="464" y="1508" width="1" height="15" fill="rgb(225,221,27)"/><text x="467.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="464" y="1524" width="1" height="15" fill="rgb(215,124,49)"/><text x="467.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="464" y="1540" width="1" height="15" fill="rgb(211,150,54)"/><text x="467.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="464" y="1556" width="1" height="15" fill="rgb(230,167,44)"/><text x="467.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="464" y="1572" width="1" height="15" fill="rgb(246,119,38)"/><text x="467.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="464" y="1588" width="1" height="15" fill="rgb(218,10,41)"/><text x="467.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="464" y="1604" width="1" height="15" fill="rgb(237,82,33)"/><text x="467.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="464" y="1620" width="1" height="15" fill="rgb(236,73,29)"/><text x="467.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.10%)</title><rect x="464" y="1636" width="1" height="15" fill="rgb(220,115,34)"/><text x="467.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="464" y="1652" width="1" height="15" fill="rgb(227,87,44)"/><text x="467.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="464" y="1668" width="1" height="15" fill="rgb(226,65,48)"/><text x="467.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="464" y="1684" width="1" height="15" fill="rgb(216,209,33)"/><text x="467.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="464" y="1700" width="1" height="15" fill="rgb(232,199,28)"/><text x="467.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="464" y="1716" width="1" height="15" fill="rgb(214,220,26)"/><text x="467.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="464" y="1732" width="1" height="15" fill="rgb(252,149,54)"/><text x="467.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="464" y="1748" width="1" height="15" fill="rgb(210,50,30)"/><text x="467.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.10%)</title><rect x="464" y="1764" width="1" height="15" fill="rgb(212,38,37)"/><text x="467.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="464" y="1780" width="1" height="15" fill="rgb(229,89,29)"/><text x="467.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="464" y="1796" width="1" height="15" fill="rgb(235,225,2)"/><text x="467.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="464" y="1812" width="1" height="15" fill="rgb(239,164,21)"/><text x="467.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="464" y="1828" width="1" height="15" fill="rgb(212,12,13)"/><text x="467.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="464" y="1844" width="1" height="15" fill="rgb(222,74,51)"/><text x="467.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py:320) (1 samples, 0.10%)</title><rect x="464" y="1860" width="1" height="15" fill="rgb(254,160,31)"/><text x="467.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.10%)</title><rect x="464" y="1876" width="1" height="15" fill="rgb(222,31,15)"/><text x="467.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.10%)</title><rect x="464" y="1892" width="1" height="15" fill="rgb(251,2,6)"/><text x="467.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.10%)</title><rect x="464" y="1908" width="1" height="15" fill="rgb(216,136,30)"/><text x="467.00" y="1918.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.10%)</title><rect x="464" y="1924" width="1" height="15" fill="rgb(225,67,52)"/><text x="467.00" y="1934.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.10%)</title><rect x="464" y="1940" width="1" height="15" fill="rgb(236,69,34)"/><text x="467.00" y="1950.50"></text></g><g><title>getwidth (sre_parse.py:198) (1 samples, 0.10%)</title><rect x="464" y="1956" width="1" height="15" fill="rgb(249,0,9)"/><text x="467.00" y="1966.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.10%)</title><rect x="464" y="1972" width="1" height="15" fill="rgb(232,48,14)"/><text x="467.00" y="1982.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.10%)</title><rect x="465" y="1572" width="1" height="15" fill="rgb(220,36,39)"/><text x="468.00" y="1582.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.21%)</title><rect x="465" y="1460" width="3" height="15" fill="rgb(242,172,49)"/><text x="468.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.21%)</title><rect x="465" y="1476" width="3" height="15" fill="rgb(233,203,40)"/><text x="468.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.21%)</title><rect x="465" y="1492" width="3" height="15" fill="rgb(253,114,52)"/><text x="468.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.21%)</title><rect x="465" y="1508" width="3" height="15" fill="rgb(224,139,22)"/><text x="468.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.21%)</title><rect x="465" y="1524" width="3" height="15" fill="rgb(250,30,34)"/><text x="468.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.21%)</title><rect x="465" y="1540" width="3" height="15" fill="rgb(215,165,7)"/><text x="468.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.21%)</title><rect x="465" y="1556" width="3" height="15" fill="rgb(216,115,33)"/><text x="468.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:64) (1 samples, 0.10%)</title><rect x="466" y="1572" width="2" height="15" fill="rgb(220,25,5)"/><text x="469.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:254) (1 samples, 0.10%)</title><rect x="466" y="1588" width="2" height="15" fill="rgb(228,138,33)"/><text x="469.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.31%)</title><rect x="465" y="1236" width="4" height="15" fill="rgb(234,96,5)"/><text x="468.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.31%)</title><rect x="465" y="1252" width="4" height="15" fill="rgb(220,13,47)"/><text x="468.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="465" y="1268" width="4" height="15" fill="rgb(225,185,42)"/><text x="468.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="465" y="1284" width="4" height="15" fill="rgb(241,6,51)"/><text x="468.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="465" y="1300" width="4" height="15" fill="rgb(211,71,52)"/><text x="468.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="465" y="1316" width="4" height="15" fill="rgb(206,132,40)"/><text x="468.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="465" y="1332" width="4" height="15" fill="rgb(227,106,24)"/><text x="468.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="465" y="1348" width="4" height="15" fill="rgb(218,105,29)"/><text x="468.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.31%)</title><rect x="465" y="1364" width="4" height="15" fill="rgb(236,28,51)"/><text x="468.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="465" y="1380" width="4" height="15" fill="rgb(209,105,2)"/><text x="468.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="465" y="1396" width="4" height="15" fill="rgb(219,125,26)"/><text x="468.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="465" y="1412" width="4" height="15" fill="rgb(207,146,40)"/><text x="468.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="465" y="1428" width="4" height="15" fill="rgb(219,214,24)"/><text x="468.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="465" y="1444" width="4" height="15" fill="rgb(244,125,38)"/><text x="468.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.10%)</title><rect x="468" y="1460" width="1" height="15" fill="rgb(232,108,7)"/><text x="471.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="1476" width="1" height="15" fill="rgb(227,92,51)"/><text x="471.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="1492" width="1" height="15" fill="rgb(215,177,31)"/><text x="471.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="1508" width="1" height="15" fill="rgb(238,23,45)"/><text x="471.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="468" y="1524" width="1" height="15" fill="rgb(227,226,19)"/><text x="471.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="1540" width="1" height="15" fill="rgb(224,155,16)"/><text x="471.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.10%)</title><rect x="468" y="1556" width="1" height="15" fill="rgb(233,147,12)"/><text x="471.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.10%)</title><rect x="468" y="1572" width="1" height="15" fill="rgb(207,12,17)"/><text x="471.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="1588" width="1" height="15" fill="rgb(243,55,6)"/><text x="471.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="1604" width="1" height="15" fill="rgb(216,204,48)"/><text x="471.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="1620" width="1" height="15" fill="rgb(228,50,51)"/><text x="471.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="468" y="1636" width="1" height="15" fill="rgb(205,61,40)"/><text x="471.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="1652" width="1" height="15" fill="rgb(249,27,11)"/><text x="471.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.10%)</title><rect x="468" y="1668" width="1" height="15" fill="rgb(227,37,33)"/><text x="471.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.10%)</title><rect x="468" y="1684" width="1" height="15" fill="rgb(237,154,35)"/><text x="471.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="1700" width="1" height="15" fill="rgb(207,141,33)"/><text x="471.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="1716" width="1" height="15" fill="rgb(235,127,41)"/><text x="471.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="1732" width="1" height="15" fill="rgb(222,110,39)"/><text x="471.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="468" y="1748" width="1" height="15" fill="rgb(220,64,19)"/><text x="471.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="1764" width="1" height="15" fill="rgb(210,167,43)"/><text x="471.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.10%)</title><rect x="468" y="1780" width="1" height="15" fill="rgb(233,39,1)"/><text x="471.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="1796" width="1" height="15" fill="rgb(209,190,45)"/><text x="471.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="1812" width="1" height="15" fill="rgb(229,146,44)"/><text x="471.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="1828" width="1" height="15" fill="rgb(249,34,17)"/><text x="471.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="468" y="1844" width="1" height="15" fill="rgb(231,80,35)"/><text x="471.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="1860" width="1" height="15" fill="rgb(227,87,49)"/><text x="471.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.10%)</title><rect x="468" y="1876" width="1" height="15" fill="rgb(234,114,10)"/><text x="471.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="1892" width="1" height="15" fill="rgb(224,154,3)"/><text x="471.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="1908" width="1" height="15" fill="rgb(224,12,40)"/><text x="471.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="1924" width="1" height="15" fill="rgb(217,159,32)"/><text x="471.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="468" y="1940" width="1" height="15" fill="rgb(245,198,40)"/><text x="471.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="1956" width="1" height="15" fill="rgb(229,222,29)"/><text x="471.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:42) (1 samples, 0.10%)</title><rect x="468" y="1972" width="1" height="15" fill="rgb(216,185,15)"/><text x="471.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="468" y="1988" width="1" height="15" fill="rgb(222,55,45)"/><text x="471.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="468" y="2004" width="1" height="15" fill="rgb(237,209,20)"/><text x="471.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="468" y="2020" width="1" height="15" fill="rgb(242,189,49)"/><text x="471.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="468" y="2036" width="1" height="15" fill="rgb(224,52,38)"/><text x="471.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="468" y="2052" width="1" height="15" fill="rgb(243,112,7)"/><text x="471.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="468" y="2068" width="1" height="15" fill="rgb(225,6,30)"/><text x="471.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="468" y="2084" width="1" height="15" fill="rgb(253,228,19)"/><text x="471.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="468" y="2100" width="1" height="15" fill="rgb(221,39,31)"/><text x="471.00" y="2110.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:4) (22 samples, 2.27%)</title><rect x="443" y="52" width="27" height="15" fill="rgb(251,145,26)"/><text x="446.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (22 samples, 2.27%)</title><rect x="443" y="68" width="27" height="15" fill="rgb(217,223,50)"/><text x="446.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (22 samples, 2.27%)</title><rect x="443" y="84" width="27" height="15" fill="rgb(236,3,10)"/><text x="446.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (22 samples, 2.27%)</title><rect x="443" y="100" width="27" height="15" fill="rgb(206,207,33)"/><text x="446.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (22 samples, 2.27%)</title><rect x="443" y="116" width="27" height="15" fill="rgb(241,28,50)"/><text x="446.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (22 samples, 2.27%)</title><rect x="443" y="132" width="27" height="15" fill="rgb(250,215,36)"/><text x="446.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (8 samples, 0.82%)</title><rect x="460" y="148" width="10" height="15" fill="rgb(248,3,45)"/><text x="463.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="460" y="164" width="10" height="15" fill="rgb(234,67,26)"/><text x="463.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="460" y="180" width="10" height="15" fill="rgb(218,124,22)"/><text x="463.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="460" y="196" width="10" height="15" fill="rgb(226,14,33)"/><text x="463.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="460" y="212" width="10" height="15" fill="rgb(205,125,26)"/><text x="463.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="460" y="228" width="10" height="15" fill="rgb(226,20,8)"/><text x="463.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 0.82%)</title><rect x="460" y="244" width="10" height="15" fill="rgb(214,5,21)"/><text x="463.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.82%)</title><rect x="460" y="260" width="10" height="15" fill="rgb(233,130,9)"/><text x="463.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.82%)</title><rect x="460" y="276" width="10" height="15" fill="rgb(218,85,18)"/><text x="463.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.82%)</title><rect x="460" y="292" width="10" height="15" fill="rgb(218,25,49)"/><text x="463.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.82%)</title><rect x="460" y="308" width="10" height="15" fill="rgb(238,143,25)"/><text x="463.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.82%)</title><rect x="460" y="324" width="10" height="15" fill="rgb(225,117,32)"/><text x="463.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 0.62%)</title><rect x="463" y="340" width="7" height="15" fill="rgb(222,90,3)"/><text x="466.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="463" y="356" width="7" height="15" fill="rgb(225,123,4)"/><text x="466.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="463" y="372" width="7" height="15" fill="rgb(227,51,39)"/><text x="466.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="463" y="388" width="7" height="15" fill="rgb(218,120,31)"/><text x="466.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="463" y="404" width="7" height="15" fill="rgb(221,226,33)"/><text x="466.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="463" y="420" width="7" height="15" fill="rgb(234,224,18)"/><text x="466.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.41%)</title><rect x="465" y="436" width="5" height="15" fill="rgb(238,76,49)"/><text x="468.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="452" width="5" height="15" fill="rgb(237,178,14)"/><text x="468.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="465" y="468" width="5" height="15" fill="rgb(227,124,21)"/><text x="468.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="484" width="5" height="15" fill="rgb(229,143,17)"/><text x="468.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="500" width="5" height="15" fill="rgb(210,47,35)"/><text x="468.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="516" width="5" height="15" fill="rgb(216,190,1)"/><text x="468.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="532" width="5" height="15" fill="rgb(205,168,29)"/><text x="468.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="548" width="5" height="15" fill="rgb(252,81,5)"/><text x="468.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="564" width="5" height="15" fill="rgb(235,190,11)"/><text x="468.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.41%)</title><rect x="465" y="580" width="5" height="15" fill="rgb(230,66,12)"/><text x="468.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="596" width="5" height="15" fill="rgb(239,124,9)"/><text x="468.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="612" width="5" height="15" fill="rgb(254,95,4)"/><text x="468.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="628" width="5" height="15" fill="rgb(214,60,10)"/><text x="468.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="644" width="5" height="15" fill="rgb(235,222,40)"/><text x="468.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="660" width="5" height="15" fill="rgb(210,79,34)"/><text x="468.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.41%)</title><rect x="465" y="676" width="5" height="15" fill="rgb(247,76,28)"/><text x="468.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="692" width="5" height="15" fill="rgb(217,209,30)"/><text x="468.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="708" width="5" height="15" fill="rgb(225,30,44)"/><text x="468.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="724" width="5" height="15" fill="rgb(228,42,35)"/><text x="468.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="740" width="5" height="15" fill="rgb(245,27,18)"/><text x="468.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="756" width="5" height="15" fill="rgb(252,64,19)"/><text x="468.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.41%)</title><rect x="465" y="772" width="5" height="15" fill="rgb(244,188,0)"/><text x="468.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="788" width="5" height="15" fill="rgb(233,7,15)"/><text x="468.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="804" width="5" height="15" fill="rgb(229,196,2)"/><text x="468.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="820" width="5" height="15" fill="rgb(229,131,33)"/><text x="468.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="836" width="5" height="15" fill="rgb(217,54,51)"/><text x="468.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="852" width="5" height="15" fill="rgb(237,118,52)"/><text x="468.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.41%)</title><rect x="465" y="868" width="5" height="15" fill="rgb(241,26,46)"/><text x="468.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="884" width="5" height="15" fill="rgb(237,21,45)"/><text x="468.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="465" y="900" width="5" height="15" fill="rgb(249,218,31)"/><text x="468.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="916" width="5" height="15" fill="rgb(234,171,31)"/><text x="468.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="932" width="5" height="15" fill="rgb(233,108,13)"/><text x="468.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="948" width="5" height="15" fill="rgb(234,85,19)"/><text x="468.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="964" width="5" height="15" fill="rgb(207,0,17)"/><text x="468.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="980" width="5" height="15" fill="rgb(233,190,47)"/><text x="468.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="996" width="5" height="15" fill="rgb(248,4,39)"/><text x="468.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.41%)</title><rect x="465" y="1012" width="5" height="15" fill="rgb(244,179,43)"/><text x="468.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="1028" width="5" height="15" fill="rgb(217,184,36)"/><text x="468.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="1044" width="5" height="15" fill="rgb(224,131,35)"/><text x="468.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="1060" width="5" height="15" fill="rgb(252,186,44)"/><text x="468.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="1076" width="5" height="15" fill="rgb(227,13,46)"/><text x="468.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="1092" width="5" height="15" fill="rgb(216,40,5)"/><text x="468.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.41%)</title><rect x="465" y="1108" width="5" height="15" fill="rgb(241,63,9)"/><text x="468.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.41%)</title><rect x="465" y="1124" width="5" height="15" fill="rgb(207,82,35)"/><text x="468.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="1140" width="5" height="15" fill="rgb(209,35,35)"/><text x="468.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="465" y="1156" width="5" height="15" fill="rgb(250,78,21)"/><text x="468.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="465" y="1172" width="5" height="15" fill="rgb(213,0,20)"/><text x="468.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="465" y="1188" width="5" height="15" fill="rgb(226,195,5)"/><text x="468.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="465" y="1204" width="5" height="15" fill="rgb(210,188,22)"/><text x="468.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="465" y="1220" width="5" height="15" fill="rgb(249,111,42)"/><text x="468.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:20) (1 samples, 0.10%)</title><rect x="469" y="1236" width="1" height="15" fill="rgb(230,13,16)"/><text x="472.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="469" y="1252" width="1" height="15" fill="rgb(251,204,25)"/><text x="472.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="469" y="1268" width="1" height="15" fill="rgb(227,26,16)"/><text x="472.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="469" y="1284" width="1" height="15" fill="rgb(239,151,28)"/><text x="472.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="469" y="1300" width="1" height="15" fill="rgb(227,152,43)"/><text x="472.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="469" y="1316" width="1" height="15" fill="rgb(247,204,20)"/><text x="472.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="469" y="1332" width="1" height="15" fill="rgb(222,91,32)"/><text x="472.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.10%)</title><rect x="469" y="1348" width="1" height="15" fill="rgb(216,120,29)"/><text x="472.00" y="1358.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:296) (1 samples, 0.10%)</title><rect x="469" y="1364" width="1" height="15" fill="rgb(229,2,5)"/><text x="472.00" y="1374.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.10%)</title><rect x="470" y="116" width="1" height="15" fill="rgb(221,66,7)"/><text x="473.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.10%)</title><rect x="470" y="132" width="1" height="15" fill="rgb(245,24,22)"/><text x="473.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.10%)</title><rect x="470" y="148" width="1" height="15" fill="rgb(228,118,41)"/><text x="473.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.10%)</title><rect x="470" y="164" width="1" height="15" fill="rgb(221,1,45)"/><text x="473.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.10%)</title><rect x="470" y="180" width="1" height="15" fill="rgb(217,143,2)"/><text x="473.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.10%)</title><rect x="470" y="196" width="1" height="15" fill="rgb(243,48,41)"/><text x="473.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:77) (1 samples, 0.10%)</title><rect x="470" y="212" width="1" height="15" fill="rgb(244,77,45)"/><text x="473.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:442) (1 samples, 0.10%)</title><rect x="470" y="228" width="1" height="15" fill="rgb(213,188,34)"/><text x="473.00" y="238.50"></text></g><g><title>parse_unary (jinja2/parser.py:546) (1 samples, 0.10%)</title><rect x="471" y="980" width="2" height="15" fill="rgb(254,19,24)"/><text x="474.00" y="990.50"></text></g><g><title>parse_primary (jinja2/parser.py:562) (1 samples, 0.10%)</title><rect x="471" y="996" width="2" height="15" fill="rgb(219,95,31)"/><text x="474.00" y="1006.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.10%)</title><rect x="471" y="1012" width="2" height="15" fill="rgb(219,166,40)"/><text x="474.00" y="1022.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.10%)</title><rect x="471" y="1028" width="2" height="15" fill="rgb(210,146,50)"/><text x="474.00" y="1038.50"></text></g><g><title>tokeniter (jinja2/lexer.py:642) (1 samples, 0.10%)</title><rect x="471" y="1044" width="2" height="15" fill="rgb(248,214,23)"/><text x="474.00" y="1054.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.31%)</title><rect x="470" y="84" width="4" height="15" fill="rgb(226,211,19)"/><text x="473.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.31%)</title><rect x="470" y="100" width="4" height="15" fill="rgb(246,129,18)"/><text x="473.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.21%)</title><rect x="471" y="116" width="3" height="15" fill="rgb(243,221,10)"/><text x="474.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.21%)</title><rect x="471" y="132" width="3" height="15" fill="rgb(206,227,30)"/><text x="474.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.21%)</title><rect x="471" y="148" width="3" height="15" fill="rgb(219,190,35)"/><text x="474.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.21%)</title><rect x="471" y="164" width="3" height="15" fill="rgb(227,56,45)"/><text x="474.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.21%)</title><rect x="471" y="180" width="3" height="15" fill="rgb(210,172,44)"/><text x="474.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.21%)</title><rect x="471" y="196" width="3" height="15" fill="rgb(241,103,42)"/><text x="474.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="471" y="212" width="3" height="15" fill="rgb(228,21,51)"/><text x="474.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="471" y="228" width="3" height="15" fill="rgb(232,192,30)"/><text x="474.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="471" y="244" width="3" height="15" fill="rgb(238,210,27)"/><text x="474.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="471" y="260" width="3" height="15" fill="rgb(254,13,35)"/><text x="474.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="471" y="276" width="3" height="15" fill="rgb(218,5,24)"/><text x="474.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.21%)</title><rect x="471" y="292" width="3" height="15" fill="rgb(209,114,51)"/><text x="474.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="471" y="308" width="3" height="15" fill="rgb(232,139,32)"/><text x="474.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="471" y="324" width="3" height="15" fill="rgb(247,76,52)"/><text x="474.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="471" y="340" width="3" height="15" fill="rgb(205,210,36)"/><text x="474.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="471" y="356" width="3" height="15" fill="rgb(224,203,27)"/><text x="474.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="471" y="372" width="3" height="15" fill="rgb(240,125,40)"/><text x="474.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (2 samples, 0.21%)</title><rect x="471" y="388" width="3" height="15" fill="rgb(214,124,31)"/><text x="474.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="471" y="404" width="3" height="15" fill="rgb(254,59,9)"/><text x="474.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="471" y="420" width="3" height="15" fill="rgb(211,140,47)"/><text x="474.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="471" y="436" width="3" height="15" fill="rgb(235,58,2)"/><text x="474.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="471" y="452" width="3" height="15" fill="rgb(214,60,45)"/><text x="474.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="471" y="468" width="3" height="15" fill="rgb(244,213,26)"/><text x="474.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (2 samples, 0.21%)</title><rect x="471" y="484" width="3" height="15" fill="rgb(206,218,32)"/><text x="474.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (2 samples, 0.21%)</title><rect x="471" y="500" width="3" height="15" fill="rgb(211,124,32)"/><text x="474.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.21%)</title><rect x="471" y="516" width="3" height="15" fill="rgb(249,22,3)"/><text x="474.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.21%)</title><rect x="471" y="532" width="3" height="15" fill="rgb(229,3,23)"/><text x="474.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (2 samples, 0.21%)</title><rect x="471" y="548" width="3" height="15" fill="rgb(243,94,10)"/><text x="474.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (2 samples, 0.21%)</title><rect x="471" y="564" width="3" height="15" fill="rgb(225,217,46)"/><text x="474.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (2 samples, 0.21%)</title><rect x="471" y="580" width="3" height="15" fill="rgb(225,194,26)"/><text x="474.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.21%)</title><rect x="471" y="596" width="3" height="15" fill="rgb(214,161,42)"/><text x="474.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.21%)</title><rect x="471" y="612" width="3" height="15" fill="rgb(229,64,49)"/><text x="474.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 0.21%)</title><rect x="471" y="628" width="3" height="15" fill="rgb(224,186,0)"/><text x="474.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.21%)</title><rect x="471" y="644" width="3" height="15" fill="rgb(210,101,40)"/><text x="474.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.21%)</title><rect x="471" y="660" width="3" height="15" fill="rgb(254,71,26)"/><text x="474.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.21%)</title><rect x="471" y="676" width="3" height="15" fill="rgb(210,51,35)"/><text x="474.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (2 samples, 0.21%)</title><rect x="471" y="692" width="3" height="15" fill="rgb(246,36,48)"/><text x="474.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.21%)</title><rect x="471" y="708" width="3" height="15" fill="rgb(206,130,8)"/><text x="474.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (2 samples, 0.21%)</title><rect x="471" y="724" width="3" height="15" fill="rgb(236,62,9)"/><text x="474.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (2 samples, 0.21%)</title><rect x="471" y="740" width="3" height="15" fill="rgb(205,127,40)"/><text x="474.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (2 samples, 0.21%)</title><rect x="471" y="756" width="3" height="15" fill="rgb(214,104,36)"/><text x="474.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (2 samples, 0.21%)</title><rect x="471" y="772" width="3" height="15" fill="rgb(224,140,20)"/><text x="474.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py:875) (2 samples, 0.21%)</title><rect x="471" y="788" width="3" height="15" fill="rgb(238,9,44)"/><text x="474.00" y="798.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (2 samples, 0.21%)</title><rect x="471" y="804" width="3" height="15" fill="rgb(235,37,42)"/><text x="474.00" y="814.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (2 samples, 0.21%)</title><rect x="471" y="820" width="3" height="15" fill="rgb(253,124,54)"/><text x="474.00" y="830.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (2 samples, 0.21%)</title><rect x="471" y="836" width="3" height="15" fill="rgb(214,88,20)"/><text x="474.00" y="846.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (2 samples, 0.21%)</title><rect x="471" y="852" width="3" height="15" fill="rgb(205,34,33)"/><text x="474.00" y="862.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (2 samples, 0.21%)</title><rect x="471" y="868" width="3" height="15" fill="rgb(227,182,40)"/><text x="474.00" y="878.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (2 samples, 0.21%)</title><rect x="471" y="884" width="3" height="15" fill="rgb(237,49,40)"/><text x="474.00" y="894.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (2 samples, 0.21%)</title><rect x="471" y="900" width="3" height="15" fill="rgb(230,130,34)"/><text x="474.00" y="910.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (2 samples, 0.21%)</title><rect x="471" y="916" width="3" height="15" fill="rgb(211,101,11)"/><text x="474.00" y="926.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (2 samples, 0.21%)</title><rect x="471" y="932" width="3" height="15" fill="rgb(250,103,24)"/><text x="474.00" y="942.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (2 samples, 0.21%)</title><rect x="471" y="948" width="3" height="15" fill="rgb(221,76,37)"/><text x="474.00" y="958.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (2 samples, 0.21%)</title><rect x="471" y="964" width="3" height="15" fill="rgb(209,223,14)"/><text x="474.00" y="974.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.10%)</title><rect x="473" y="980" width="1" height="15" fill="rgb(211,220,13)"/><text x="476.00" y="990.50"></text></g><g><title>parse_postfix (jinja2/parser.py:676) (1 samples, 0.10%)</title><rect x="473" y="996" width="1" height="15" fill="rgb(254,126,54)"/><text x="476.00" y="1006.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.10%)</title><rect x="474" y="164" width="1" height="15" fill="rgb(208,3,49)"/><text x="477.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.10%)</title><rect x="476" y="180" width="1" height="15" fill="rgb(241,98,48)"/><text x="479.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 0.72%)</title><rect x="477" y="180" width="9" height="15" fill="rgb(220,97,28)"/><text x="480.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.10%)</title><rect x="485" y="196" width="1" height="15" fill="rgb(209,73,51)"/><text x="488.00" y="206.50"></text></g><g><title>discover_dimensions (ctors.c:679) (1 samples, 0.10%)</title><rect x="491" y="308" width="1" height="15" fill="rgb(252,151,30)"/><text x="494.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.21%)</title><rect x="491" y="212" width="2" height="15" fill="rgb(253,88,43)"/><text x="494.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.21%)</title><rect x="491" y="228" width="2" height="15" fill="rgb(209,212,47)"/><text x="494.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.21%)</title><rect x="491" y="244" width="2" height="15" fill="rgb(234,118,28)"/><text x="494.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.21%)</title><rect x="491" y="260" width="2" height="15" fill="rgb(232,32,34)"/><text x="494.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (2 samples, 0.21%)</title><rect x="491" y="276" width="2" height="15" fill="rgb(228,87,11)"/><text x="494.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (2 samples, 0.21%)</title><rect x="491" y="292" width="2" height="15" fill="rgb(225,158,5)"/><text x="494.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.10%)</title><rect x="492" y="308" width="1" height="15" fill="rgb(215,113,15)"/><text x="495.00" y="318.50"></text></g><g><title>0x7fd33168ca40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="492" y="324" width="1" height="15" fill="rgb(238,161,10)"/><text x="495.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.31%)</title><rect x="493" y="212" width="4" height="15" fill="rgb(252,60,30)"/><text x="496.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.21%)</title><rect x="494" y="228" width="3" height="15" fill="rgb(229,117,41)"/><text x="497.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.21%)</title><rect x="494" y="244" width="3" height="15" fill="rgb(243,146,33)"/><text x="497.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (2 samples, 0.21%)</title><rect x="494" y="260" width="3" height="15" fill="rgb(228,171,35)"/><text x="497.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (2 samples, 0.21%)</title><rect x="494" y="276" width="3" height="15" fill="rgb(208,55,25)"/><text x="497.00" y="286.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="497" y="340" width="1" height="15" fill="rgb(215,100,29)"/><text x="500.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.10%)</title><rect x="497" y="356" width="1" height="15" fill="rgb(223,74,47)"/><text x="500.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="497" y="244" width="2" height="15" fill="rgb(252,34,41)"/><text x="500.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="497" y="260" width="2" height="15" fill="rgb(212,35,31)"/><text x="500.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.21%)</title><rect x="497" y="276" width="2" height="15" fill="rgb(236,191,14)"/><text x="500.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="497" y="292" width="2" height="15" fill="rgb(246,52,53)"/><text x="500.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (2 samples, 0.21%)</title><rect x="497" y="308" width="2" height="15" fill="rgb(252,158,4)"/><text x="500.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="497" y="324" width="2" height="15" fill="rgb(234,62,50)"/><text x="500.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.10%)</title><rect x="498" y="340" width="1" height="15" fill="rgb(242,52,52)"/><text x="501.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="498" y="356" width="1" height="15" fill="rgb(234,202,50)"/><text x="501.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 0.93%)</title><rect x="490" y="196" width="10" height="15" fill="rgb(216,39,48)"/><text x="493.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (3 samples, 0.31%)</title><rect x="497" y="212" width="3" height="15" fill="rgb(225,137,51)"/><text x="500.00" y="222.50"></text></g><g><title>array_add (number.c:330) (3 samples, 0.31%)</title><rect x="497" y="228" width="3" height="15" fill="rgb(233,131,17)"/><text x="500.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="499" y="244" width="1" height="15" fill="rgb(223,9,6)"/><text x="502.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.10%)</title><rect x="500" y="196" width="2" height="15" fill="rgb(216,203,52)"/><text x="503.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.10%)</title><rect x="500" y="212" width="2" height="15" fill="rgb(239,40,9)"/><text x="503.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.10%)</title><rect x="502" y="228" width="1" height="15" fill="rgb(222,107,1)"/><text x="505.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="502" y="244" width="1" height="15" fill="rgb(227,121,19)"/><text x="505.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="502" y="260" width="1" height="15" fill="rgb(217,229,54)"/><text x="505.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.10%)</title><rect x="502" y="276" width="1" height="15" fill="rgb(246,203,5)"/><text x="505.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.10%)</title><rect x="502" y="292" width="1" height="15" fill="rgb(218,193,47)"/><text x="505.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.10%)</title><rect x="505" y="308" width="2" height="15" fill="rgb(206,32,30)"/><text x="508.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:620) (1 samples, 0.10%)</title><rect x="505" y="324" width="2" height="15" fill="rgb(247,93,30)"/><text x="508.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.21%)</title><rect x="505" y="276" width="3" height="15" fill="rgb(224,180,36)"/><text x="508.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.21%)</title><rect x="505" y="292" width="3" height="15" fill="rgb(221,215,18)"/><text x="508.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.10%)</title><rect x="507" y="308" width="1" height="15" fill="rgb(249,2,6)"/><text x="510.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.10%)</title><rect x="507" y="324" width="1" height="15" fill="rgb(239,76,23)"/><text x="510.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.10%)</title><rect x="507" y="340" width="1" height="15" fill="rgb(221,58,46)"/><text x="510.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.10%)</title><rect x="507" y="356" width="1" height="15" fill="rgb(227,183,43)"/><text x="510.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.10%)</title><rect x="507" y="372" width="1" height="15" fill="rgb(221,49,23)"/><text x="510.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.10%)</title><rect x="508" y="292" width="1" height="15" fill="rgb(219,93,21)"/><text x="511.00" y="302.50"></text></g><g><title>0x7fd3325eb979 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="511" y="324" width="3" height="15" fill="rgb(239,189,50)"/><text x="514.00" y="334.50"></text></g><g><title>0x7fd3325eb997 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="514" y="324" width="1" height="15" fill="rgb(244,110,29)"/><text x="517.00" y="334.50"></text></g><g><title>0x7fd3325eb9a4 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="515" y="324" width="1" height="15" fill="rgb(217,88,48)"/><text x="518.00" y="334.50"></text></g><g><title>0x7fd3325eb9af (libm-2.29.so) (1 samples, 0.10%)</title><rect x="516" y="324" width="1" height="15" fill="rgb(211,209,25)"/><text x="519.00" y="334.50"></text></g><g><title>0x7fd3325eb9e4 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="517" y="324" width="2" height="15" fill="rgb(226,153,23)"/><text x="520.00" y="334.50"></text></g><g><title>0x7fd3325eba04 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="519" y="324" width="1" height="15" fill="rgb(228,224,30)"/><text x="522.00" y="334.50"></text></g><g><title>0x7fd3325eba21 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="520" y="324" width="2" height="15" fill="rgb(208,118,31)"/><text x="523.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (18 samples, 1.85%)</title><rect x="503" y="228" width="22" height="15" fill="rgb(254,203,51)"/><text x="506.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 1.65%)</title><rect x="505" y="244" width="20" height="15" fill="rgb(253,38,29)"/><text x="508.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 1.65%)</title><rect x="505" y="260" width="20" height="15" fill="rgb(240,20,45)"/><text x="508.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (14 samples, 1.44%)</title><rect x="508" y="276" width="17" height="15" fill="rgb(205,156,29)"/><text x="511.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 1.34%)</title><rect x="509" y="292" width="16" height="15" fill="rgb(240,173,14)"/><text x="512.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (13 samples, 1.34%)</title><rect x="509" y="308" width="16" height="15" fill="rgb(213,174,30)"/><text x="512.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.21%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(220,43,26)"/><text x="525.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="527" y="308" width="1" height="15" fill="rgb(207,88,41)"/><text x="530.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="527" y="324" width="1" height="15" fill="rgb(205,171,11)"/><text x="530.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="527" y="340" width="1" height="15" fill="rgb(241,208,46)"/><text x="530.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="527" y="356" width="1" height="15" fill="rgb(251,146,23)"/><text x="530.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="527" y="372" width="1" height="15" fill="rgb(248,97,21)"/><text x="530.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="527" y="388" width="1" height="15" fill="rgb(231,150,50)"/><text x="530.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="528" y="324" width="2" height="15" fill="rgb(236,195,1)"/><text x="531.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.10%)</title><rect x="528" y="340" width="2" height="15" fill="rgb(246,6,45)"/><text x="531.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.10%)</title><rect x="530" y="340" width="1" height="15" fill="rgb(208,108,35)"/><text x="533.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.10%)</title><rect x="530" y="356" width="1" height="15" fill="rgb(225,217,46)"/><text x="533.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="531" y="340" width="1" height="15" fill="rgb(226,119,10)"/><text x="534.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.10%)</title><rect x="531" y="356" width="1" height="15" fill="rgb(238,161,10)"/><text x="534.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="532" y="356" width="1" height="15" fill="rgb(213,149,15)"/><text x="535.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="532" y="372" width="1" height="15" fill="rgb(225,100,4)"/><text x="535.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.10%)</title><rect x="532" y="388" width="1" height="15" fill="rgb(216,219,42)"/><text x="535.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="532" y="404" width="1" height="15" fill="rgb(230,28,0)"/><text x="535.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.10%)</title><rect x="533" y="356" width="1" height="15" fill="rgb(231,74,19)"/><text x="536.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.10%)</title><rect x="533" y="372" width="1" height="15" fill="rgb(215,183,15)"/><text x="536.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.10%)</title><rect x="533" y="388" width="1" height="15" fill="rgb(221,93,47)"/><text x="536.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.10%)</title><rect x="534" y="372" width="2" height="15" fill="rgb(250,143,53)"/><text x="537.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="536" y="372" width="1" height="15" fill="rgb(219,4,25)"/><text x="539.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="537" y="372" width="1" height="15" fill="rgb(215,8,42)"/><text x="540.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="539" y="388" width="2" height="15" fill="rgb(212,203,52)"/><text x="542.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.21%)</title><rect x="541" y="388" width="2" height="15" fill="rgb(219,124,4)"/><text x="544.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="542" y="404" width="1" height="15" fill="rgb(218,11,11)"/><text x="545.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="543" y="388" width="1" height="15" fill="rgb(218,81,48)"/><text x="546.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.03%)</title><rect x="534" y="356" width="13" height="15" fill="rgb(241,65,36)"/><text x="537.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.72%)</title><rect x="538" y="372" width="9" height="15" fill="rgb(229,143,3)"/><text x="541.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (2 samples, 0.21%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(239,41,43)"/><text x="547.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (39 samples, 4.02%)</title><rect x="502" y="196" width="47" height="15" fill="rgb(227,89,51)"/><text x="505.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (39 samples, 4.02%)</title><rect x="502" y="212" width="47" height="15" fill="rgb(254,221,37)"/><text x="505.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (20 samples, 2.06%)</title><rect x="525" y="228" width="24" height="15" fill="rgb(239,90,28)"/><text x="528.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (18 samples, 1.85%)</title><rect x="527" y="244" width="22" height="15" fill="rgb(207,205,38)"/><text x="530.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 1.85%)</title><rect x="527" y="260" width="22" height="15" fill="rgb(247,229,4)"/><text x="530.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (18 samples, 1.85%)</title><rect x="527" y="276" width="22" height="15" fill="rgb(247,116,6)"/><text x="530.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (18 samples, 1.85%)</title><rect x="527" y="292" width="22" height="15" fill="rgb(231,164,21)"/><text x="530.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 1.75%)</title><rect x="528" y="308" width="21" height="15" fill="rgb(206,14,37)"/><text x="531.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 1.65%)</title><rect x="530" y="324" width="19" height="15" fill="rgb(247,42,9)"/><text x="533.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 1.44%)</title><rect x="532" y="340" width="17" height="15" fill="rgb(227,47,50)"/><text x="535.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.21%)</title><rect x="547" y="356" width="2" height="15" fill="rgb(208,33,35)"/><text x="550.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.21%)</title><rect x="547" y="372" width="2" height="15" fill="rgb(228,18,46)"/><text x="550.00" y="382.50"></text></g><g><title>0x7fd2f2fc7422 (?) (1 samples, 0.10%)</title><rect x="549" y="244" width="1" height="15" fill="rgb(226,105,4)"/><text x="552.00" y="254.50"></text></g><g><title>0x7fd2f2fcd89e (?) (1 samples, 0.10%)</title><rect x="549" y="260" width="1" height="15" fill="rgb(206,47,26)"/><text x="552.00" y="270.50"></text></g><g><title>0x7fd2f2fcd74f (?) (1 samples, 0.10%)</title><rect x="549" y="276" width="1" height="15" fill="rgb(235,140,49)"/><text x="552.00" y="286.50"></text></g><g><title>0x7fd2f2fd3a3a (?) (1 samples, 0.10%)</title><rect x="549" y="292" width="1" height="15" fill="rgb(247,124,29)"/><text x="552.00" y="302.50"></text></g><g><title>0x7fd2fc425cfa (?) (1 samples, 0.10%)</title><rect x="549" y="308" width="1" height="15" fill="rgb(231,144,15)"/><text x="552.00" y="318.50"></text></g><g><title>0x7fd2fc42edaa (?) (1 samples, 0.10%)</title><rect x="549" y="324" width="1" height="15" fill="rgb(216,101,30)"/><text x="552.00" y="334.50"></text></g><g><title>0x7fd2fc430cfb (?) (1 samples, 0.10%)</title><rect x="549" y="340" width="1" height="15" fill="rgb(243,207,3)"/><text x="552.00" y="350.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:389) (1 samples, 0.10%)</title><rect x="550" y="420" width="1" height="15" fill="rgb(239,122,4)"/><text x="553.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h:867) (1 samples, 0.10%)</title><rect x="550" y="436" width="1" height="15" fill="rgb(235,55,23)"/><text x="553.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.10%)</title><rect x="550" y="452" width="1" height="15" fill="rgb(219,40,16)"/><text x="553.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.10%)</title><rect x="550" y="468" width="1" height="15" fill="rgb(233,78,27)"/><text x="553.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h:600) (1 samples, 0.10%)</title><rect x="550" y="484" width="1" height="15" fill="rgb(252,75,30)"/><text x="553.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.10%)</title><rect x="550" y="500" width="1" height="15" fill="rgb(244,187,47)"/><text x="553.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.10%)</title><rect x="550" y="516" width="1" height="15" fill="rgb(220,200,38)"/><text x="553.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.10%)</title><rect x="550" y="532" width="1" height="15" fill="rgb(213,46,3)"/><text x="553.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.10%)</title><rect x="550" y="548" width="1" height="15" fill="rgb(243,96,25)"/><text x="553.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="550" y="564" width="1" height="15" fill="rgb(215,132,39)"/><text x="553.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="550" y="580" width="1" height="15" fill="rgb(250,211,31)"/><text x="553.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="550" y="596" width="1" height="15" fill="rgb(250,9,54)"/><text x="553.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="550" y="612" width="1" height="15" fill="rgb(254,161,16)"/><text x="553.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="550" y="628" width="1" height="15" fill="rgb(236,134,39)"/><text x="553.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="550" y="644" width="1" height="15" fill="rgb(226,83,15)"/><text x="553.00" y="654.50"></text></g><g><title>0x7fd33246b028 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="550" y="660" width="1" height="15" fill="rgb(215,195,36)"/><text x="553.00" y="670.50"></text></g><g><title>0x7fd332468bc6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="550" y="676" width="1" height="15" fill="rgb(232,153,7)"/><text x="553.00" y="686.50"></text></g><g><title>0x7fd2fc430ea0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="551" y="468" width="2" height="15" fill="rgb(217,146,30)"/><text x="554.00" y="478.50"></text></g><g><title>0x7fd2fc430ea9 (libgomp.so.1.0.0) (13 samples, 1.34%)</title><rect x="553" y="468" width="16" height="15" fill="rgb(238,5,48)"/><text x="556.00" y="478.50"></text></g><g><title>0x7fd2fc430eab (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="569" y="468" width="12" height="15" fill="rgb(206,80,32)"/><text x="572.00" y="478.50"></text></g><g><title>0x7fd2fc42fab9 (libgomp.so.1.0.0) (27 samples, 2.78%)</title><rect x="551" y="452" width="33" height="15" fill="rgb(223,73,51)"/><text x="554.00" y="462.50">0x..</text></g><g><title>0x7fd2fc430ead (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="581" y="468" width="3" height="15" fill="rgb(227,200,44)"/><text x="584.00" y="478.50"></text></g><g><title>0x7fd2fc430cf9 (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="584" y="484" width="4" height="15" fill="rgb(208,149,36)"/><text x="587.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (33 samples, 3.40%)</title><rect x="549" y="196" width="40" height="15" fill="rgb(254,5,22)"/><text x="552.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (33 samples, 3.40%)</title><rect x="549" y="212" width="40" height="15" fill="rgb(247,34,12)"/><text x="552.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (33 samples, 3.40%)</title><rect x="549" y="228" width="40" height="15" fill="rgb(246,31,53)"/><text x="552.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (32 samples, 3.30%)</title><rect x="550" y="244" width="39" height="15" fill="rgb(238,100,1)"/><text x="553.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (32 samples, 3.30%)</title><rect x="550" y="260" width="39" height="15" fill="rgb(248,183,44)"/><text x="553.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (32 samples, 3.30%)</title><rect x="550" y="276" width="39" height="15" fill="rgb(239,154,42)"/><text x="553.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (32 samples, 3.30%)</title><rect x="550" y="292" width="39" height="15" fill="rgb(250,96,43)"/><text x="553.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (32 samples, 3.30%)</title><rect x="550" y="308" width="39" height="15" fill="rgb(213,70,1)"/><text x="553.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (32 samples, 3.30%)</title><rect x="550" y="324" width="39" height="15" fill="rgb(218,73,10)"/><text x="553.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (32 samples, 3.30%)</title><rect x="550" y="340" width="39" height="15" fill="rgb(207,63,33)"/><text x="553.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h:538) (32 samples, 3.30%)</title><rect x="550" y="356" width="39" height="15" fill="rgb(209,77,44)"/><text x="553.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (32 samples, 3.30%)</title><rect x="550" y="372" width="39" height="15" fill="rgb(243,160,31)"/><text x="553.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (32 samples, 3.30%)</title><rect x="550" y="388" width="39" height="15" fill="rgb(223,19,8)"/><text x="553.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (32 samples, 3.30%)</title><rect x="550" y="404" width="39" height="15" fill="rgb(207,39,8)"/><text x="553.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (31 samples, 3.19%)</title><rect x="551" y="420" width="38" height="15" fill="rgb(241,126,46)"/><text x="554.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (31 samples, 3.19%)</title><rect x="551" y="436" width="38" height="15" fill="rgb(223,75,26)"/><text x="554.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="584" y="452" width="5" height="15" fill="rgb(241,218,15)"/><text x="587.00" y="462.50"></text></g><g><title>0x7fd2fc42edaa (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="584" y="468" width="5" height="15" fill="rgb(250,193,3)"/><text x="587.00" y="478.50"></text></g><g><title>0x7fd2fc430cfb (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="588" y="484" width="1" height="15" fill="rgb(221,225,36)"/><text x="591.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (3 samples, 0.31%)</title><rect x="592" y="228" width="3" height="15" fill="rgb(206,20,34)"/><text x="595.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="595" y="244" width="1" height="15" fill="rgb(237,229,18)"/><text x="598.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="595" y="260" width="1" height="15" fill="rgb(240,15,17)"/><text x="598.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="595" y="276" width="1" height="15" fill="rgb(213,188,28)"/><text x="598.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="595" y="292" width="1" height="15" fill="rgb(230,124,38)"/><text x="598.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="596" y="260" width="2" height="15" fill="rgb(254,205,17)"/><text x="599.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.10%)</title><rect x="596" y="276" width="2" height="15" fill="rgb(243,215,33)"/><text x="599.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="598" y="292" width="1" height="15" fill="rgb(223,117,18)"/><text x="601.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="598" y="308" width="1" height="15" fill="rgb(236,95,13)"/><text x="601.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.10%)</title><rect x="598" y="324" width="1" height="15" fill="rgb(244,54,13)"/><text x="601.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.10%)</title><rect x="598" y="340" width="1" height="15" fill="rgb(245,75,21)"/><text x="601.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.10%)</title><rect x="598" y="356" width="1" height="15" fill="rgb(234,59,52)"/><text x="601.00" y="366.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.10%)</title><rect x="598" y="372" width="1" height="15" fill="rgb(226,65,32)"/><text x="601.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (4 samples, 0.41%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(226,194,30)"/><text x="598.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="596" y="244" width="4" height="15" fill="rgb(245,170,26)"/><text x="599.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="598" y="260" width="2" height="15" fill="rgb(224,55,44)"/><text x="601.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.21%)</title><rect x="598" y="276" width="2" height="15" fill="rgb(218,106,9)"/><text x="601.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="599" y="292" width="1" height="15" fill="rgb(240,199,14)"/><text x="602.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.10%)</title><rect x="599" y="308" width="1" height="15" fill="rgb(212,85,0)"/><text x="602.00" y="318.50"></text></g><g><title>0x7fd332469a38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="599" y="324" width="1" height="15" fill="rgb(228,197,37)"/><text x="602.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="600" y="292" width="1" height="15" fill="rgb(216,81,50)"/><text x="603.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.10%)</title><rect x="600" y="308" width="1" height="15" fill="rgb(247,114,7)"/><text x="603.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="600" y="324" width="1" height="15" fill="rgb(224,124,48)"/><text x="603.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.10%)</title><rect x="601" y="308" width="2" height="15" fill="rgb(245,193,42)"/><text x="604.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="601" y="292" width="4" height="15" fill="rgb(216,184,28)"/><text x="604.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.21%)</title><rect x="603" y="308" width="2" height="15" fill="rgb(242,59,49)"/><text x="606.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.21%)</title><rect x="603" y="324" width="2" height="15" fill="rgb(222,32,28)"/><text x="606.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.21%)</title><rect x="603" y="340" width="2" height="15" fill="rgb(215,15,31)"/><text x="606.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (14 samples, 1.44%)</title><rect x="589" y="196" width="17" height="15" fill="rgb(232,203,51)"/><text x="592.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (13 samples, 1.34%)</title><rect x="590" y="212" width="16" height="15" fill="rgb(222,135,36)"/><text x="593.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.51%)</title><rect x="600" y="228" width="6" height="15" fill="rgb(243,167,54)"/><text x="603.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.51%)</title><rect x="600" y="244" width="6" height="15" fill="rgb(233,185,25)"/><text x="603.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.51%)</title><rect x="600" y="260" width="6" height="15" fill="rgb(225,30,43)"/><text x="603.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.51%)</title><rect x="600" y="276" width="6" height="15" fill="rgb(217,161,7)"/><text x="603.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="605" y="292" width="1" height="15" fill="rgb(206,201,20)"/><text x="608.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="605" y="308" width="1" height="15" fill="rgb(243,224,23)"/><text x="608.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="605" y="324" width="1" height="15" fill="rgb(246,153,36)"/><text x="608.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="605" y="340" width="1" height="15" fill="rgb(213,82,36)"/><text x="608.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.10%)</title><rect x="605" y="356" width="1" height="15" fill="rgb(226,40,31)"/><text x="608.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.10%)</title><rect x="606" y="196" width="1" height="15" fill="rgb(223,190,4)"/><text x="609.00" y="206.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.10%)</title><rect x="610" y="276" width="1" height="15" fill="rgb(250,90,18)"/><text x="613.00" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.10%)</title><rect x="611" y="324" width="1" height="15" fill="rgb(210,208,53)"/><text x="614.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.10%)</title><rect x="611" y="340" width="1" height="15" fill="rgb(230,130,47)"/><text x="614.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="611" y="356" width="1" height="15" fill="rgb(211,189,42)"/><text x="614.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="611" y="372" width="1" height="15" fill="rgb(227,150,38)"/><text x="614.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.10%)</title><rect x="611" y="388" width="1" height="15" fill="rgb(230,111,7)"/><text x="614.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="612" y="372" width="1" height="15" fill="rgb(251,167,12)"/><text x="615.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.10%)</title><rect x="612" y="388" width="1" height="15" fill="rgb(207,75,2)"/><text x="615.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:919) (1 samples, 0.10%)</title><rect x="612" y="404" width="1" height="15" fill="rgb(226,36,39)"/><text x="615.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.10%)</title><rect x="613" y="436" width="2" height="15" fill="rgb(206,12,36)"/><text x="616.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.21%)</title><rect x="613" y="420" width="3" height="15" fill="rgb(207,38,20)"/><text x="616.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3024) (1 samples, 0.10%)</title><rect x="615" y="436" width="1" height="15" fill="rgb(209,65,24)"/><text x="618.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.31%)</title><rect x="613" y="404" width="4" height="15" fill="rgb(214,174,38)"/><text x="616.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.10%)</title><rect x="616" y="420" width="1" height="15" fill="rgb(216,162,3)"/><text x="619.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.10%)</title><rect x="616" y="436" width="1" height="15" fill="rgb(211,58,41)"/><text x="619.00" y="446.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.10%)</title><rect x="617" y="468" width="1" height="15" fill="rgb(250,85,5)"/><text x="620.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.21%)</title><rect x="617" y="404" width="3" height="15" fill="rgb(254,106,20)"/><text x="620.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.21%)</title><rect x="617" y="420" width="3" height="15" fill="rgb(206,217,4)"/><text x="620.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.21%)</title><rect x="617" y="436" width="3" height="15" fill="rgb(206,53,25)"/><text x="620.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (2 samples, 0.21%)</title><rect x="617" y="452" width="3" height="15" fill="rgb(205,225,40)"/><text x="620.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.10%)</title><rect x="618" y="468" width="2" height="15" fill="rgb(249,68,46)"/><text x="621.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.10%)</title><rect x="620" y="420" width="1" height="15" fill="rgb(205,8,26)"/><text x="623.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.24%)</title><rect x="612" y="356" width="15" height="15" fill="rgb(227,88,18)"/><text x="615.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.13%)</title><rect x="613" y="372" width="14" height="15" fill="rgb(220,182,29)"/><text x="616.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.13%)</title><rect x="613" y="388" width="14" height="15" fill="rgb(219,92,51)"/><text x="616.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.62%)</title><rect x="620" y="404" width="7" height="15" fill="rgb(235,198,22)"/><text x="623.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (5 samples, 0.51%)</title><rect x="621" y="420" width="6" height="15" fill="rgb(254,0,52)"/><text x="624.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (117 samples, 12.05%)</title><rect x="486" y="180" width="142" height="15" fill="rgb(208,190,3)"/><text x="489.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (17 samples, 1.75%)</title><rect x="607" y="196" width="21" height="15" fill="rgb(209,21,31)"/><text x="610.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (17 samples, 1.75%)</title><rect x="607" y="212" width="21" height="15" fill="rgb(253,136,4)"/><text x="610.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (16 samples, 1.65%)</title><rect x="609" y="228" width="19" height="15" fill="rgb(250,166,17)"/><text x="612.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 1.65%)</title><rect x="609" y="244" width="19" height="15" fill="rgb(228,126,52)"/><text x="612.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (16 samples, 1.65%)</title><rect x="609" y="260" width="19" height="15" fill="rgb(235,32,0)"/><text x="612.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 1.44%)</title><rect x="611" y="276" width="17" height="15" fill="rgb(208,199,1)"/><text x="614.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (14 samples, 1.44%)</title><rect x="611" y="292" width="17" height="15" fill="rgb(253,56,54)"/><text x="614.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.44%)</title><rect x="611" y="308" width="17" height="15" fill="rgb(241,143,21)"/><text x="614.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (13 samples, 1.34%)</title><rect x="612" y="324" width="16" height="15" fill="rgb(254,204,18)"/><text x="615.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (13 samples, 1.34%)</title><rect x="612" y="340" width="16" height="15" fill="rgb(230,141,30)"/><text x="615.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="627" y="356" width="1" height="15" fill="rgb(229,84,32)"/><text x="630.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="627" y="372" width="1" height="15" fill="rgb(209,227,37)"/><text x="630.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="627" y="388" width="1" height="15" fill="rgb(251,97,34)"/><text x="630.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.10%)</title><rect x="627" y="404" width="1" height="15" fill="rgb(229,96,51)"/><text x="630.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.21%)</title><rect x="628" y="180" width="2" height="15" fill="rgb(242,101,15)"/><text x="631.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (130 samples, 13.39%)</title><rect x="474" y="100" width="158" height="15" fill="rgb(209,146,43)"/><text x="477.00" y="110.50">profile (bench_AdaBo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (130 samples, 13.39%)</title><rect x="474" y="116" width="158" height="15" fill="rgb(243,105,3)"/><text x="477.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (130 samples, 13.39%)</title><rect x="474" y="132" width="158" height="15" fill="rgb(245,20,6)"/><text x="477.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (130 samples, 13.39%)</title><rect x="474" y="148" width="158" height="15" fill="rgb(246,111,6)"/><text x="477.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (129 samples, 13.29%)</title><rect x="475" y="164" width="157" height="15" fill="rgb(210,166,8)"/><text x="478.00" y="174.50">_run_sequence_runtim..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.10%)</title><rect x="630" y="180" width="2" height="15" fill="rgb(225,227,15)"/><text x="633.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.51%)</title><rect x="632" y="180" width="6" height="15" fill="rgb(219,154,44)"/><text x="635.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.21%)</title><rect x="635" y="196" width="3" height="15" fill="rgb(220,55,38)"/><text x="638.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.10%)</title><rect x="643" y="212" width="1" height="15" fill="rgb(225,132,40)"/><text x="646.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.10%)</title><rect x="643" y="228" width="1" height="15" fill="rgb(232,163,25)"/><text x="646.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.10%)</title><rect x="643" y="244" width="1" height="15" fill="rgb(241,71,16)"/><text x="646.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.10%)</title><rect x="643" y="260" width="1" height="15" fill="rgb(216,49,26)"/><text x="646.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.10%)</title><rect x="644" y="212" width="1" height="15" fill="rgb(253,127,8)"/><text x="647.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="644" y="228" width="1" height="15" fill="rgb(219,33,52)"/><text x="647.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.10%)</title><rect x="644" y="244" width="1" height="15" fill="rgb(246,213,10)"/><text x="647.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="644" y="260" width="1" height="15" fill="rgb(217,201,11)"/><text x="647.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.10%)</title><rect x="644" y="276" width="1" height="15" fill="rgb(219,176,11)"/><text x="647.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:883) (1 samples, 0.10%)</title><rect x="644" y="292" width="1" height="15" fill="rgb(212,101,21)"/><text x="647.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.10%)</title><rect x="645" y="212" width="1" height="15" fill="rgb(248,218,12)"/><text x="648.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.10%)</title><rect x="645" y="228" width="1" height="15" fill="rgb(224,94,42)"/><text x="648.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="645" y="244" width="1" height="15" fill="rgb(240,159,53)"/><text x="648.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.10%)</title><rect x="645" y="260" width="1" height="15" fill="rgb(241,159,9)"/><text x="648.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.10%)</title><rect x="645" y="276" width="1" height="15" fill="rgb(205,27,50)"/><text x="648.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.10%)</title><rect x="645" y="292" width="1" height="15" fill="rgb(211,80,42)"/><text x="648.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(233,210,53)"/><text x="649.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(248,27,13)"/><text x="649.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="646" y="292" width="2" height="15" fill="rgb(222,36,43)"/><text x="649.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="646" y="308" width="2" height="15" fill="rgb(244,69,14)"/><text x="649.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="646" y="324" width="2" height="15" fill="rgb(213,136,53)"/><text x="649.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.10%)</title><rect x="646" y="340" width="2" height="15" fill="rgb(246,182,53)"/><text x="649.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="646" y="356" width="2" height="15" fill="rgb(240,77,8)"/><text x="649.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 0.51%)</title><rect x="643" y="196" width="6" height="15" fill="rgb(229,89,38)"/><text x="646.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (2 samples, 0.21%)</title><rect x="646" y="212" width="3" height="15" fill="rgb(205,94,25)"/><text x="649.00" y="222.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.21%)</title><rect x="646" y="228" width="3" height="15" fill="rgb(218,138,45)"/><text x="649.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="646" y="244" width="3" height="15" fill="rgb(230,137,53)"/><text x="649.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.10%)</title><rect x="648" y="260" width="1" height="15" fill="rgb(252,207,48)"/><text x="651.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.10%)</title><rect x="648" y="276" width="1" height="15" fill="rgb(220,195,4)"/><text x="651.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="648" y="292" width="1" height="15" fill="rgb(218,129,31)"/><text x="651.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="648" y="308" width="1" height="15" fill="rgb(241,6,47)"/><text x="651.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.10%)</title><rect x="649" y="196" width="1" height="15" fill="rgb(242,148,26)"/><text x="652.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.10%)</title><rect x="649" y="212" width="1" height="15" fill="rgb(213,88,2)"/><text x="652.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.10%)</title><rect x="649" y="228" width="1" height="15" fill="rgb(251,11,28)"/><text x="652.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.10%)</title><rect x="649" y="244" width="1" height="15" fill="rgb(231,109,51)"/><text x="652.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (1 samples, 0.10%)</title><rect x="649" y="260" width="1" height="15" fill="rgb(235,162,4)"/><text x="652.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.10%)</title><rect x="649" y="276" width="1" height="15" fill="rgb(247,125,24)"/><text x="652.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.10%)</title><rect x="649" y="292" width="1" height="15" fill="rgb(236,72,1)"/><text x="652.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.10%)</title><rect x="649" y="308" width="1" height="15" fill="rgb(219,225,13)"/><text x="652.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.10%)</title><rect x="649" y="324" width="1" height="15" fill="rgb(236,163,1)"/><text x="652.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.10%)</title><rect x="649" y="340" width="1" height="15" fill="rgb(251,127,52)"/><text x="652.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.10%)</title><rect x="649" y="356" width="1" height="15" fill="rgb(254,175,29)"/><text x="652.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.10%)</title><rect x="649" y="372" width="1" height="15" fill="rgb(234,97,3)"/><text x="652.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (1 samples, 0.10%)</title><rect x="650" y="228" width="1" height="15" fill="rgb(215,211,0)"/><text x="653.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="650" y="244" width="1" height="15" fill="rgb(233,198,51)"/><text x="653.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="650" y="260" width="1" height="15" fill="rgb(249,185,40)"/><text x="653.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="650" y="276" width="1" height="15" fill="rgb(229,0,37)"/><text x="653.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.10%)</title><rect x="650" y="292" width="1" height="15" fill="rgb(217,146,4)"/><text x="653.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (1 samples, 0.10%)</title><rect x="650" y="308" width="1" height="15" fill="rgb(208,96,46)"/><text x="653.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.10%)</title><rect x="650" y="324" width="1" height="15" fill="rgb(245,37,40)"/><text x="653.00" y="334.50"></text></g><g><title>0x7fd3325e8e4e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="650" y="340" width="1" height="15" fill="rgb(233,69,20)"/><text x="653.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (1 samples, 0.10%)</title><rect x="651" y="228" width="1" height="15" fill="rgb(207,224,46)"/><text x="654.00" y="238.50"></text></g><g><title>solve_diophantine (mem_overlap.c:527) (1 samples, 0.10%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(239,55,50)"/><text x="655.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.10%)</title><rect x="654" y="340" width="1" height="15" fill="rgb(246,95,48)"/><text x="657.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:97) (1 samples, 0.10%)</title><rect x="654" y="356" width="1" height="15" fill="rgb(250,141,20)"/><text x="657.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.10%)</title><rect x="654" y="372" width="1" height="15" fill="rgb(209,21,51)"/><text x="657.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.31%)</title><rect x="652" y="276" width="4" height="15" fill="rgb(207,221,0)"/><text x="655.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.31%)</title><rect x="652" y="292" width="4" height="15" fill="rgb(227,34,49)"/><text x="655.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 0.31%)</title><rect x="652" y="308" width="4" height="15" fill="rgb(211,125,22)"/><text x="655.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.21%)</title><rect x="654" y="324" width="2" height="15" fill="rgb(254,27,0)"/><text x="657.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:446) (1 samples, 0.10%)</title><rect x="655" y="340" width="1" height="15" fill="rgb(250,58,14)"/><text x="658.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h:45) (1 samples, 0.10%)</title><rect x="655" y="356" width="1" height="15" fill="rgb(209,26,47)"/><text x="658.00" y="366.50"></text></g><g><title>0x7fd3325eb997 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="656" y="324" width="1" height="15" fill="rgb(246,34,9)"/><text x="659.00" y="334.50"></text></g><g><title>0x7fd3325eb9af (libm-2.29.so) (1 samples, 0.10%)</title><rect x="657" y="324" width="1" height="15" fill="rgb(246,170,1)"/><text x="660.00" y="334.50"></text></g><g><title>0x7fd3325eb9bd (libm-2.29.so) (2 samples, 0.21%)</title><rect x="658" y="324" width="3" height="15" fill="rgb(229,195,30)"/><text x="661.00" y="334.50"></text></g><g><title>0x7fd3325eb9f8 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="661" y="324" width="1" height="15" fill="rgb(209,139,5)"/><text x="664.00" y="334.50"></text></g><g><title>0x7fd3325eba04 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="662" y="324" width="1" height="15" fill="rgb(232,212,43)"/><text x="665.00" y="334.50"></text></g><g><title>0x7fd3325eba19 (libm-2.29.so) (3 samples, 0.31%)</title><rect x="663" y="324" width="4" height="15" fill="rgb(233,77,17)"/><text x="666.00" y="334.50"></text></g><g><title>0x7fd3325eba1d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="667" y="324" width="1" height="15" fill="rgb(241,103,54)"/><text x="670.00" y="334.50"></text></g><g><title>0x7fd3325eba21 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="668" y="324" width="3" height="15" fill="rgb(245,219,37)"/><text x="671.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (14 samples, 1.44%)</title><rect x="656" y="308" width="17" height="15" fill="rgb(244,119,19)"/><text x="659.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.21%)</title><rect x="671" y="324" width="2" height="15" fill="rgb(252,97,22)"/><text x="674.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 1.85%)</title><rect x="652" y="244" width="22" height="15" fill="rgb(214,18,46)"/><text x="655.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (18 samples, 1.85%)</title><rect x="652" y="260" width="22" height="15" fill="rgb(248,88,42)"/><text x="655.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 1.54%)</title><rect x="656" y="276" width="18" height="15" fill="rgb(222,58,10)"/><text x="659.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.54%)</title><rect x="656" y="292" width="18" height="15" fill="rgb(240,206,43)"/><text x="659.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.10%)</title><rect x="673" y="308" width="1" height="15" fill="rgb(249,187,32)"/><text x="676.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.10%)</title><rect x="673" y="324" width="1" height="15" fill="rgb(251,19,10)"/><text x="676.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (19 samples, 1.96%)</title><rect x="652" y="228" width="23" height="15" fill="rgb(244,222,11)"/><text x="655.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="674" y="244" width="1" height="15" fill="rgb(208,174,29)"/><text x="677.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="674" y="260" width="1" height="15" fill="rgb(254,14,23)"/><text x="677.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.10%)</title><rect x="677" y="260" width="1" height="15" fill="rgb(217,165,26)"/><text x="680.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.21%)</title><rect x="678" y="292" width="2" height="15" fill="rgb(220,55,23)"/><text x="681.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (2 samples, 0.21%)</title><rect x="678" y="308" width="2" height="15" fill="rgb(252,209,38)"/><text x="681.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="680" y="340" width="2" height="15" fill="rgb(239,43,35)"/><text x="683.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="680" y="356" width="2" height="15" fill="rgb(254,108,42)"/><text x="683.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="680" y="308" width="3" height="15" fill="rgb(213,181,20)"/><text x="683.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="680" y="324" width="3" height="15" fill="rgb(210,35,15)"/><text x="683.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="682" y="340" width="1" height="15" fill="rgb(254,61,18)"/><text x="685.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="682" y="356" width="1" height="15" fill="rgb(250,197,36)"/><text x="685.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="682" y="372" width="1" height="15" fill="rgb(217,36,38)"/><text x="685.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="682" y="388" width="1" height="15" fill="rgb(242,106,42)"/><text x="685.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="683" y="324" width="1" height="15" fill="rgb(221,47,1)"/><text x="686.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="684" y="340" width="1" height="15" fill="rgb(224,67,38)"/><text x="687.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="684" y="356" width="1" height="15" fill="rgb(208,141,9)"/><text x="687.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="684" y="372" width="1" height="15" fill="rgb(245,14,22)"/><text x="687.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.10%)</title><rect x="684" y="388" width="1" height="15" fill="rgb(213,176,1)"/><text x="687.00" y="398.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.10%)</title><rect x="685" y="388" width="1" height="15" fill="rgb(206,142,29)"/><text x="688.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:777) (1 samples, 0.10%)</title><rect x="685" y="404" width="1" height="15" fill="rgb(253,28,3)"/><text x="688.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (3 samples, 0.31%)</title><rect x="685" y="356" width="4" height="15" fill="rgb(210,45,36)"/><text x="688.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (3 samples, 0.31%)</title><rect x="685" y="372" width="4" height="15" fill="rgb(212,84,16)"/><text x="688.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.21%)</title><rect x="686" y="388" width="3" height="15" fill="rgb(236,50,45)"/><text x="689.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.21%)</title><rect x="686" y="404" width="3" height="15" fill="rgb(223,48,52)"/><text x="689.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.21%)</title><rect x="686" y="420" width="3" height="15" fill="rgb(234,45,11)"/><text x="689.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (2 samples, 0.21%)</title><rect x="686" y="436" width="3" height="15" fill="rgb(224,221,49)"/><text x="689.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (2 samples, 0.21%)</title><rect x="686" y="452" width="3" height="15" fill="rgb(238,105,38)"/><text x="689.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="688" y="468" width="1" height="15" fill="rgb(250,76,32)"/><text x="691.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="689" y="356" width="1" height="15" fill="rgb(221,95,6)"/><text x="692.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:437) (1 samples, 0.10%)</title><rect x="689" y="372" width="1" height="15" fill="rgb(222,109,42)"/><text x="692.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="689" y="388" width="1" height="15" fill="rgb(234,106,9)"/><text x="692.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="690" y="372" width="1" height="15" fill="rgb(235,40,3)"/><text x="693.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.10%)</title><rect x="690" y="388" width="1" height="15" fill="rgb(238,133,25)"/><text x="693.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.10%)</title><rect x="691" y="372" width="1" height="15" fill="rgb(234,93,54)"/><text x="694.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="691" y="388" width="1" height="15" fill="rgb(228,110,20)"/><text x="694.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="691" y="404" width="1" height="15" fill="rgb(227,179,45)"/><text x="694.00" y="414.50"></text></g><g><title>0x7fd33246ad3d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="691" y="420" width="1" height="15" fill="rgb(240,109,26)"/><text x="694.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.10%)</title><rect x="692" y="388" width="2" height="15" fill="rgb(227,228,39)"/><text x="695.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.10%)</title><rect x="692" y="404" width="2" height="15" fill="rgb(205,205,54)"/><text x="695.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 0.41%)</title><rect x="690" y="356" width="5" height="15" fill="rgb(224,127,10)"/><text x="693.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.21%)</title><rect x="692" y="372" width="3" height="15" fill="rgb(249,102,23)"/><text x="695.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.10%)</title><rect x="694" y="388" width="1" height="15" fill="rgb(250,110,54)"/><text x="697.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.10%)</title><rect x="695" y="356" width="1" height="15" fill="rgb(248,190,21)"/><text x="698.00" y="366.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1222) (1 samples, 0.10%)</title><rect x="695" y="372" width="1" height="15" fill="rgb(229,62,44)"/><text x="698.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (3 samples, 0.31%)</title><rect x="696" y="372" width="4" height="15" fill="rgb(226,174,32)"/><text x="699.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="700" y="372" width="1" height="15" fill="rgb(210,0,34)"/><text x="703.00" y="382.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.10%)</title><rect x="703" y="404" width="2" height="15" fill="rgb(212,35,3)"/><text x="706.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 0.51%)</title><rect x="701" y="388" width="6" height="15" fill="rgb(248,190,54)"/><text x="704.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (2 samples, 0.21%)</title><rect x="705" y="404" width="2" height="15" fill="rgb(252,162,19)"/><text x="708.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="707" y="388" width="1" height="15" fill="rgb(215,82,0)"/><text x="710.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.10%)</title><rect x="708" y="388" width="1" height="15" fill="rgb(224,145,6)"/><text x="711.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:248) (1 samples, 0.10%)</title><rect x="709" y="388" width="2" height="15" fill="rgb(221,85,39)"/><text x="712.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (51 samples, 5.25%)</title><rect x="650" y="196" width="62" height="15" fill="rgb(250,164,32)"/><text x="653.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (51 samples, 5.25%)</title><rect x="650" y="212" width="62" height="15" fill="rgb(230,224,33)"/><text x="653.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (30 samples, 3.09%)</title><rect x="675" y="228" width="37" height="15" fill="rgb(242,33,13)"/><text x="678.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (29 samples, 2.99%)</title><rect x="677" y="244" width="35" height="15" fill="rgb(211,186,14)"/><text x="680.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (28 samples, 2.88%)</title><rect x="678" y="260" width="34" height="15" fill="rgb(254,147,50)"/><text x="681.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (28 samples, 2.88%)</title><rect x="678" y="276" width="34" height="15" fill="rgb(215,173,50)"/><text x="681.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (26 samples, 2.68%)</title><rect x="680" y="292" width="32" height="15" fill="rgb(222,103,46)"/><text x="683.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 2.47%)</title><rect x="683" y="308" width="29" height="15" fill="rgb(254,170,38)"/><text x="686.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 2.37%)</title><rect x="684" y="324" width="28" height="15" fill="rgb(229,111,48)"/><text x="687.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (22 samples, 2.27%)</title><rect x="685" y="340" width="27" height="15" fill="rgb(244,148,14)"/><text x="688.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 1.34%)</title><rect x="696" y="356" width="16" height="15" fill="rgb(254,48,32)"/><text x="699.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 0.93%)</title><rect x="701" y="372" width="11" height="15" fill="rgb(241,55,49)"/><text x="704.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.10%)</title><rect x="711" y="388" width="1" height="15" fill="rgb(216,223,28)"/><text x="714.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (3 samples, 0.31%)</title><rect x="712" y="196" width="4" height="15" fill="rgb(237,106,48)"/><text x="715.00" y="206.50"></text></g><g><title>0x7fd2fc430ea0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="716" y="468" width="1" height="15" fill="rgb(244,47,0)"/><text x="719.00" y="478.50"></text></g><g><title>0x7fd2fc430ea9 (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="717" y="468" width="5" height="15" fill="rgb(217,51,38)"/><text x="720.00" y="478.50"></text></g><g><title>0x7fd2fc430eab (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="722" y="468" width="12" height="15" fill="rgb(235,22,33)"/><text x="725.00" y="478.50"></text></g><g><title>0x7fd2fc42fab9 (libgomp.so.1.0.0) (24 samples, 2.47%)</title><rect x="716" y="452" width="29" height="15" fill="rgb(246,146,13)"/><text x="719.00" y="462.50">0x..</text></g><g><title>0x7fd2fc430ead (libgomp.so.1.0.0) (9 samples, 0.93%)</title><rect x="734" y="468" width="11" height="15" fill="rgb(240,150,10)"/><text x="737.00" y="478.50"></text></g><g><title>0x7fd2fc430cf0 (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="745" y="484" width="2" height="15" fill="rgb(249,131,44)"/><text x="748.00" y="494.50"></text></g><g><title>0x7fd2fc430cf9 (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="747" y="484" width="5" height="15" fill="rgb(214,184,43)"/><text x="750.00" y="494.50"></text></g><g><title>0x7fd2fc430cfb (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="752" y="484" width="7" height="15" fill="rgb(234,191,23)"/><text x="755.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (43 samples, 4.43%)</title><rect x="716" y="196" width="52" height="15" fill="rgb(223,95,17)"/><text x="719.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 4.43%)</title><rect x="716" y="212" width="52" height="15" fill="rgb(237,177,50)"/><text x="719.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (43 samples, 4.43%)</title><rect x="716" y="228" width="52" height="15" fill="rgb(240,89,25)"/><text x="719.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (43 samples, 4.43%)</title><rect x="716" y="244" width="52" height="15" fill="rgb(209,194,18)"/><text x="719.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (43 samples, 4.43%)</title><rect x="716" y="260" width="52" height="15" fill="rgb(233,61,28)"/><text x="719.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (43 samples, 4.43%)</title><rect x="716" y="276" width="52" height="15" fill="rgb(249,207,6)"/><text x="719.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (43 samples, 4.43%)</title><rect x="716" y="292" width="52" height="15" fill="rgb(246,90,33)"/><text x="719.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (43 samples, 4.43%)</title><rect x="716" y="308" width="52" height="15" fill="rgb(226,169,50)"/><text x="719.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (43 samples, 4.43%)</title><rect x="716" y="324" width="52" height="15" fill="rgb(251,28,44)"/><text x="719.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (43 samples, 4.43%)</title><rect x="716" y="340" width="52" height="15" fill="rgb(213,31,22)"/><text x="719.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (43 samples, 4.43%)</title><rect x="716" y="356" width="52" height="15" fill="rgb(211,23,16)"/><text x="719.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (43 samples, 4.43%)</title><rect x="716" y="372" width="52" height="15" fill="rgb(225,184,3)"/><text x="719.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (43 samples, 4.43%)</title><rect x="716" y="388" width="52" height="15" fill="rgb(207,199,52)"/><text x="719.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (43 samples, 4.43%)</title><rect x="716" y="404" width="52" height="15" fill="rgb(227,229,23)"/><text x="719.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (43 samples, 4.43%)</title><rect x="716" y="420" width="52" height="15" fill="rgb(229,24,45)"/><text x="719.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (43 samples, 4.43%)</title><rect x="716" y="436" width="52" height="15" fill="rgb(208,195,0)"/><text x="719.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (19 samples, 1.96%)</title><rect x="745" y="452" width="23" height="15" fill="rgb(213,107,43)"/><text x="748.00" y="462.50">G..</text></g><g><title>0x7fd2fc42edaa (libgomp.so.1.0.0) (19 samples, 1.96%)</title><rect x="745" y="468" width="23" height="15" fill="rgb(238,78,27)"/><text x="748.00" y="478.50">0..</text></g><g><title>0x7fd2fc430cfd (libgomp.so.1.0.0) (7 samples, 0.72%)</title><rect x="759" y="484" width="9" height="15" fill="rgb(244,146,28)"/><text x="762.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.10%)</title><rect x="768" y="196" width="1" height="15" fill="rgb(244,76,0)"/><text x="771.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py:17) (1 samples, 0.10%)</title><rect x="768" y="212" width="1" height="15" fill="rgb(216,101,20)"/><text x="771.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="768" y="228" width="1" height="15" fill="rgb(253,36,12)"/><text x="771.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="768" y="244" width="1" height="15" fill="rgb(241,5,35)"/><text x="771.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.10%)</title><rect x="768" y="260" width="1" height="15" fill="rgb(249,76,49)"/><text x="771.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="768" y="276" width="1" height="15" fill="rgb(247,181,19)"/><text x="771.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="768" y="292" width="1" height="15" fill="rgb(244,170,46)"/><text x="771.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.10%)</title><rect x="768" y="308" width="1" height="15" fill="rgb(247,78,23)"/><text x="771.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (4 samples, 0.41%)</title><rect x="769" y="228" width="5" height="15" fill="rgb(231,134,2)"/><text x="772.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (2 samples, 0.21%)</title><rect x="771" y="244" width="3" height="15" fill="rgb(223,37,19)"/><text x="774.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.10%)</title><rect x="774" y="260" width="1" height="15" fill="rgb(215,136,8)"/><text x="777.00" y="270.50"></text></g><g><title>0x7fd33168ac90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="774" y="276" width="1" height="15" fill="rgb(238,70,54)"/><text x="777.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="775" y="260" width="1" height="15" fill="rgb(208,67,15)"/><text x="778.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="775" y="276" width="1" height="15" fill="rgb(218,134,46)"/><text x="778.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.10%)</title><rect x="775" y="292" width="1" height="15" fill="rgb(228,50,13)"/><text x="778.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="776" y="292" width="2" height="15" fill="rgb(244,204,48)"/><text x="779.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.10%)</title><rect x="776" y="308" width="2" height="15" fill="rgb(234,181,53)"/><text x="779.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2147) (1 samples, 0.10%)</title><rect x="776" y="324" width="2" height="15" fill="rgb(251,159,36)"/><text x="779.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1559) (1 samples, 0.10%)</title><rect x="778" y="292" width="1" height="15" fill="rgb(222,94,40)"/><text x="781.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (5 samples, 0.51%)</title><rect x="774" y="228" width="6" height="15" fill="rgb(231,124,17)"/><text x="777.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.51%)</title><rect x="774" y="244" width="6" height="15" fill="rgb(221,40,24)"/><text x="777.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="776" y="260" width="4" height="15" fill="rgb(231,13,47)"/><text x="779.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.31%)</title><rect x="776" y="276" width="4" height="15" fill="rgb(225,90,31)"/><text x="779.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="779" y="292" width="1" height="15" fill="rgb(205,167,54)"/><text x="782.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.10%)</title><rect x="779" y="308" width="1" height="15" fill="rgb(248,189,42)"/><text x="782.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.10%)</title><rect x="780" y="228" width="1" height="15" fill="rgb(240,219,31)"/><text x="783.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.10%)</title><rect x="782" y="308" width="2" height="15" fill="rgb(224,38,31)"/><text x="785.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1170) (1 samples, 0.10%)</title><rect x="782" y="324" width="2" height="15" fill="rgb(247,92,27)"/><text x="785.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="782" y="292" width="3" height="15" fill="rgb(237,88,31)"/><text x="785.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="784" y="308" width="1" height="15" fill="rgb(205,222,39)"/><text x="787.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.10%)</title><rect x="784" y="324" width="1" height="15" fill="rgb(232,52,5)"/><text x="787.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.10%)</title><rect x="784" y="340" width="1" height="15" fill="rgb(250,156,53)"/><text x="787.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="785" y="340" width="1" height="15" fill="rgb(233,129,38)"/><text x="788.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="785" y="292" width="3" height="15" fill="rgb(240,69,7)"/><text x="788.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="785" y="308" width="3" height="15" fill="rgb(205,22,19)"/><text x="788.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="785" y="324" width="3" height="15" fill="rgb(207,184,33)"/><text x="788.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="786" y="340" width="2" height="15" fill="rgb(236,224,17)"/><text x="789.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (2 samples, 0.21%)</title><rect x="786" y="356" width="2" height="15" fill="rgb(244,100,19)"/><text x="789.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (17 samples, 1.75%)</title><rect x="769" y="196" width="21" height="15" fill="rgb(207,193,42)"/><text x="772.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (17 samples, 1.75%)</title><rect x="769" y="212" width="21" height="15" fill="rgb(224,10,24)"/><text x="772.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (7 samples, 0.72%)</title><rect x="781" y="228" width="9" height="15" fill="rgb(240,15,43)"/><text x="784.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="782" y="244" width="8" height="15" fill="rgb(245,162,23)"/><text x="785.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.62%)</title><rect x="782" y="260" width="8" height="15" fill="rgb(243,144,13)"/><text x="785.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.62%)</title><rect x="782" y="276" width="8" height="15" fill="rgb(218,122,48)"/><text x="785.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="788" y="292" width="2" height="15" fill="rgb(233,149,45)"/><text x="791.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(209,46,51)"/><text x="791.00" y="318.50"></text></g><g><title>0x7fd332469900 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(215,28,44)"/><text x="791.00" y="334.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (2 samples, 0.21%)</title><rect x="791" y="228" width="2" height="15" fill="rgb(248,115,23)"/><text x="794.00" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.41%)</title><rect x="795" y="324" width="4" height="15" fill="rgb(211,133,28)"/><text x="798.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.41%)</title><rect x="795" y="340" width="4" height="15" fill="rgb(224,44,21)"/><text x="798.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="798" y="356" width="1" height="15" fill="rgb(228,154,4)"/><text x="801.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="799" y="340" width="2" height="15" fill="rgb(238,53,28)"/><text x="802.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="799" y="356" width="2" height="15" fill="rgb(231,71,34)"/><text x="802.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="801" y="356" width="1" height="15" fill="rgb(230,25,3)"/><text x="804.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.10%)</title><rect x="801" y="372" width="1" height="15" fill="rgb(212,153,24)"/><text x="804.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="804" y="404" width="1" height="15" fill="rgb(205,9,33)"/><text x="807.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="804" y="420" width="1" height="15" fill="rgb(223,64,24)"/><text x="807.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.10%)</title><rect x="804" y="436" width="1" height="15" fill="rgb(221,169,9)"/><text x="807.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="805" y="420" width="2" height="15" fill="rgb(248,29,7)"/><text x="808.00" y="430.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:319) (1 samples, 0.10%)</title><rect x="805" y="436" width="2" height="15" fill="rgb(206,219,1)"/><text x="808.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1134) (1 samples, 0.10%)</title><rect x="807" y="468" width="1" height="15" fill="rgb(240,158,39)"/><text x="810.00" y="478.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (2 samples, 0.21%)</title><rect x="807" y="452" width="2" height="15" fill="rgb(234,61,9)"/><text x="810.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.10%)</title><rect x="808" y="468" width="1" height="15" fill="rgb(238,138,0)"/><text x="811.00" y="478.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 0.82%)</title><rect x="801" y="340" width="9" height="15" fill="rgb(250,168,53)"/><text x="804.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (7 samples, 0.72%)</title><rect x="802" y="356" width="8" height="15" fill="rgb(250,190,45)"/><text x="805.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.62%)</title><rect x="803" y="372" width="7" height="15" fill="rgb(222,93,21)"/><text x="806.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 0.62%)</title><rect x="803" y="388" width="7" height="15" fill="rgb(252,4,13)"/><text x="806.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.41%)</title><rect x="805" y="404" width="5" height="15" fill="rgb(237,62,30)"/><text x="808.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.31%)</title><rect x="807" y="420" width="3" height="15" fill="rgb(235,88,44)"/><text x="810.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.31%)</title><rect x="807" y="436" width="3" height="15" fill="rgb(218,151,35)"/><text x="810.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.10%)</title><rect x="809" y="452" width="1" height="15" fill="rgb(251,191,9)"/><text x="812.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.10%)</title><rect x="809" y="468" width="1" height="15" fill="rgb(220,189,0)"/><text x="812.00" y="478.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:242) (1 samples, 0.10%)</title><rect x="809" y="484" width="1" height="15" fill="rgb(253,84,16)"/><text x="812.00" y="494.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="810" y="356" width="2" height="15" fill="rgb(205,225,46)"/><text x="813.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.10%)</title><rect x="810" y="372" width="2" height="15" fill="rgb(229,87,36)"/><text x="813.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (11 samples, 1.13%)</title><rect x="799" y="324" width="14" height="15" fill="rgb(228,209,15)"/><text x="802.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.21%)</title><rect x="810" y="340" width="3" height="15" fill="rgb(239,98,25)"/><text x="813.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4778) (1 samples, 0.10%)</title><rect x="812" y="356" width="1" height="15" fill="rgb(223,11,27)"/><text x="815.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="813" y="372" width="1" height="15" fill="rgb(233,22,41)"/><text x="816.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="813" y="388" width="1" height="15" fill="rgb(209,168,11)"/><text x="816.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.10%)</title><rect x="813" y="404" width="1" height="15" fill="rgb(214,69,33)"/><text x="816.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="814" y="404" width="1" height="15" fill="rgb(209,24,25)"/><text x="817.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="814" y="420" width="1" height="15" fill="rgb(218,75,31)"/><text x="817.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.10%)</title><rect x="814" y="436" width="1" height="15" fill="rgb(222,133,28)"/><text x="817.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:745) (1 samples, 0.10%)</title><rect x="814" y="452" width="1" height="15" fill="rgb(231,188,48)"/><text x="817.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.10%)</title><rect x="815" y="468" width="1" height="15" fill="rgb(205,100,29)"/><text x="818.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="815" y="404" width="4" height="15" fill="rgb(238,183,32)"/><text x="818.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="815" y="420" width="4" height="15" fill="rgb(241,196,54)"/><text x="818.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="815" y="436" width="4" height="15" fill="rgb(253,176,8)"/><text x="818.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.31%)</title><rect x="815" y="452" width="4" height="15" fill="rgb(240,75,5)"/><text x="818.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.21%)</title><rect x="816" y="468" width="3" height="15" fill="rgb(245,9,36)"/><text x="819.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.10%)</title><rect x="819" y="420" width="1" height="15" fill="rgb(250,144,25)"/><text x="822.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (29 samples, 2.99%)</title><rect x="790" y="212" width="35" height="15" fill="rgb(230,112,32)"/><text x="793.00" y="222.50">_r..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (26 samples, 2.68%)</title><rect x="793" y="228" width="32" height="15" fill="rgb(206,166,8)"/><text x="796.00" y="238.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (26 samples, 2.68%)</title><rect x="793" y="244" width="32" height="15" fill="rgb(209,150,13)"/><text x="796.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (26 samples, 2.68%)</title><rect x="793" y="260" width="32" height="15" fill="rgb(215,185,10)"/><text x="796.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (25 samples, 2.57%)</title><rect x="795" y="276" width="30" height="15" fill="rgb(236,136,40)"/><text x="798.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (25 samples, 2.57%)</title><rect x="795" y="292" width="30" height="15" fill="rgb(210,33,29)"/><text x="798.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (25 samples, 2.57%)</title><rect x="795" y="308" width="30" height="15" fill="rgb(215,96,47)"/><text x="798.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 1.03%)</title><rect x="813" y="324" width="12" height="15" fill="rgb(241,48,19)"/><text x="816.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.03%)</title><rect x="813" y="340" width="12" height="15" fill="rgb(206,87,4)"/><text x="816.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.03%)</title><rect x="813" y="356" width="12" height="15" fill="rgb(228,209,11)"/><text x="816.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 0.93%)</title><rect x="814" y="372" width="11" height="15" fill="rgb(212,43,10)"/><text x="817.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 0.93%)</title><rect x="814" y="388" width="11" height="15" fill="rgb(216,78,46)"/><text x="817.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.51%)</title><rect x="819" y="404" width="6" height="15" fill="rgb(209,155,43)"/><text x="822.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (4 samples, 0.41%)</title><rect x="820" y="420" width="5" height="15" fill="rgb(231,155,47)"/><text x="823.00" y="430.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (155 samples, 15.96%)</title><rect x="638" y="180" width="188" height="15" fill="rgb(205,0,13)"/><text x="641.00" y="190.50">run (mlprodict/onnxrt/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (30 samples, 3.09%)</title><rect x="790" y="196" width="36" height="15" fill="rgb(246,45,29)"/><text x="793.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:67) (1 samples, 0.10%)</title><rect x="825" y="212" width="1" height="15" fill="rgb(233,38,14)"/><text x="828.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3251) (1 samples, 0.10%)</title><rect x="825" y="228" width="1" height="15" fill="rgb(208,61,36)"/><text x="828.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.21%)</title><rect x="826" y="180" width="3" height="15" fill="rgb(224,138,53)"/><text x="829.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.21%)</title><rect x="829" y="180" width="2" height="15" fill="rgb(244,35,4)"/><text x="832.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.31%)</title><rect x="831" y="180" width="4" height="15" fill="rgb(212,181,40)"/><text x="834.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:45) (301 samples, 31.00%)</title><rect x="470" y="52" width="366" height="15" fill="rgb(233,59,33)"/><text x="473.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:44) (301 samples, 31.00%)</title><rect x="470" y="68" width="366" height="15" fill="rgb(215,94,50)"/><text x="473.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (298 samples, 30.69%)</title><rect x="474" y="84" width="362" height="15" fill="rgb(236,96,49)"/><text x="477.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (168 samples, 17.30%)</title><rect x="632" y="100" width="204" height="15" fill="rgb(211,42,43)"/><text x="635.00" y="110.50">profile (bench_AdaBoostCla..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (168 samples, 17.30%)</title><rect x="632" y="116" width="204" height="15" fill="rgb(245,119,25)"/><text x="635.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (168 samples, 17.30%)</title><rect x="632" y="132" width="204" height="15" fill="rgb(252,224,4)"/><text x="635.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (168 samples, 17.30%)</title><rect x="632" y="148" width="204" height="15" fill="rgb(236,221,1)"/><text x="635.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (168 samples, 17.30%)</title><rect x="632" y="164" width="204" height="15" fill="rgb(237,161,9)"/><text x="635.00" y="174.50">_run_sequence_runtime (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.10%)</title><rect x="835" y="180" width="1" height="15" fill="rgb(208,156,30)"/><text x="838.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.10%)</title><rect x="836" y="260" width="1" height="15" fill="rgb(217,25,16)"/><text x="839.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.10%)</title><rect x="836" y="276" width="1" height="15" fill="rgb(235,183,41)"/><text x="839.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.10%)</title><rect x="836" y="292" width="1" height="15" fill="rgb(246,81,5)"/><text x="839.00" y="302.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.21%)</title><rect x="836" y="116" width="2" height="15" fill="rgb(212,191,9)"/><text x="839.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.21%)</title><rect x="836" y="132" width="2" height="15" fill="rgb(208,123,49)"/><text x="839.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.21%)</title><rect x="836" y="148" width="2" height="15" fill="rgb(220,212,15)"/><text x="839.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.21%)</title><rect x="836" y="164" width="2" height="15" fill="rgb(207,94,2)"/><text x="839.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.21%)</title><rect x="836" y="180" width="2" height="15" fill="rgb(252,48,24)"/><text x="839.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:47) (2 samples, 0.21%)</title><rect x="836" y="196" width="2" height="15" fill="rgb(251,159,20)"/><text x="839.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.21%)</title><rect x="836" y="212" width="2" height="15" fill="rgb(240,87,39)"/><text x="839.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.21%)</title><rect x="836" y="228" width="2" height="15" fill="rgb(253,45,35)"/><text x="839.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="836" y="244" width="2" height="15" fill="rgb(208,221,5)"/><text x="839.00" y="254.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Add (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="837" y="260" width="1" height="15" fill="rgb(206,12,8)"/><text x="840.00" y="270.50"></text></g><g><title>google::protobuf::python::CMessage::BuildSubMessageFromPointer (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="837" y="276" width="1" height="15" fill="rgb(231,131,33)"/><text x="840.00" y="286.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.31%)</title><rect x="836" y="84" width="4" height="15" fill="rgb(246,31,48)"/><text x="839.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.31%)</title><rect x="836" y="100" width="4" height="15" fill="rgb(241,75,2)"/><text x="839.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.10%)</title><rect x="838" y="116" width="2" height="15" fill="rgb(222,141,17)"/><text x="841.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.10%)</title><rect x="838" y="132" width="2" height="15" fill="rgb(229,75,19)"/><text x="841.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.10%)</title><rect x="838" y="148" width="2" height="15" fill="rgb(220,218,38)"/><text x="841.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.10%)</title><rect x="838" y="164" width="2" height="15" fill="rgb(223,180,21)"/><text x="841.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:309) (1 samples, 0.10%)</title><rect x="838" y="180" width="2" height="15" fill="rgb(240,171,33)"/><text x="841.00" y="190.50"></text></g><g><title>0x7fd2f2127ff9 (?) (1 samples, 0.10%)</title><rect x="841" y="212" width="1" height="15" fill="rgb(247,191,27)"/><text x="844.00" y="222.50"></text></g><g><title>0x7fd2f2122ef6 (?) (1 samples, 0.10%)</title><rect x="841" y="228" width="1" height="15" fill="rgb(222,119,51)"/><text x="844.00" y="238.50"></text></g><g><title>0x7fd2f2117962 (?) (1 samples, 0.10%)</title><rect x="841" y="244" width="1" height="15" fill="rgb(222,50,6)"/><text x="844.00" y="254.50"></text></g><g><title>0x7fd2f214b7a7 (?) (1 samples, 0.10%)</title><rect x="841" y="260" width="1" height="15" fill="rgb(254,163,25)"/><text x="844.00" y="270.50"></text></g><g><title>0x7fd2f214b379 (?) (1 samples, 0.10%)</title><rect x="841" y="276" width="1" height="15" fill="rgb(234,164,11)"/><text x="844.00" y="286.50"></text></g><g><title>0x7fd2f25a98b8 (?) (1 samples, 0.10%)</title><rect x="841" y="292" width="1" height="15" fill="rgb(224,79,53)"/><text x="844.00" y="302.50"></text></g><g><title>0x7fd2f25a7c7f (?) (1 samples, 0.10%)</title><rect x="841" y="308" width="1" height="15" fill="rgb(216,205,51)"/><text x="844.00" y="318.50"></text></g><g><title>0x7fd2f25ba99c (?) (1 samples, 0.10%)</title><rect x="841" y="324" width="1" height="15" fill="rgb(212,117,2)"/><text x="844.00" y="334.50"></text></g><g><title>0x7fd2f22d836d (?) (1 samples, 0.10%)</title><rect x="841" y="340" width="1" height="15" fill="rgb(223,33,4)"/><text x="844.00" y="350.50"></text></g><g><title>0x7fd2f22bdf90 (?) (1 samples, 0.10%)</title><rect x="841" y="356" width="1" height="15" fill="rgb(209,216,6)"/><text x="844.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="842" y="340" width="1" height="15" fill="rgb(251,210,2)"/><text x="845.00" y="350.50"></text></g><g><title>0x7fd332469d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="842" y="356" width="1" height="15" fill="rgb(210,156,3)"/><text x="845.00" y="366.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="843" y="340" width="7" height="15" fill="rgb(209,133,26)"/><text x="846.00" y="350.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="850" y="340" width="11" height="15" fill="rgb(214,98,50)"/><text x="853.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="850" y="356" width="11" height="15" fill="rgb(251,81,5)"/><text x="853.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="850" y="372" width="11" height="15" fill="rgb(242,77,15)"/><text x="853.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="858" y="388" width="3" height="15" fill="rgb(253,113,46)"/><text x="861.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(213,20,24)"/><text x="864.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(207,205,35)"/><text x="864.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="863" y="340" width="4" height="15" fill="rgb(225,216,46)"/><text x="866.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(217,96,23)"/><text x="870.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(218,131,37)"/><text x="870.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="867" y="372" width="4" height="15" fill="rgb(212,70,29)"/><text x="870.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="869" y="388" width="2" height="15" fill="rgb(249,164,21)"/><text x="872.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="871" y="340" width="1" height="15" fill="rgb(235,29,45)"/><text x="874.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="871" y="356" width="1" height="15" fill="rgb(240,196,7)"/><text x="874.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="871" y="372" width="1" height="15" fill="rgb(247,3,44)"/><text x="874.00" y="382.50"></text></g><g><title>0x7fd2f20ef9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="883" y="356" width="1" height="15" fill="rgb(237,193,19)"/><text x="886.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="884" y="356" width="2" height="15" fill="rgb(231,137,20)"/><text x="887.00" y="366.50"></text></g><g><title>0x7fd2f20ee930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="919" y="388" width="1" height="15" fill="rgb(222,141,44)"/><text x="922.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.13%)</title><rect x="920" y="388" width="13" height="15" fill="rgb(243,130,22)"/><text x="923.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.03%)</title><rect x="921" y="404" width="12" height="15" fill="rgb(225,53,33)"/><text x="924.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 4.33%)</title><rect x="886" y="356" width="51" height="15" fill="rgb(243,131,4)"/><text x="889.00" y="366.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.06%)</title><rect x="912" y="372" width="25" height="15" fill="rgb(247,81,32)"/><text x="915.00" y="382.50">s..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="933" y="388" width="4" height="15" fill="rgb(254,177,37)"/><text x="936.00" y="398.50"></text></g><g><title>0x7fd2f20ee850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="940" y="372" width="2" height="15" fill="rgb(228,59,46)"/><text x="943.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="937" y="356" width="6" height="15" fill="rgb(218,193,54)"/><text x="940.00" y="366.50"></text></g><g><title>0x7fd332489d97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(209,21,21)"/><text x="945.00" y="382.50"></text></g><g><title>0x7fd332469945 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="944" y="372" width="1" height="15" fill="rgb(213,44,42)"/><text x="947.00" y="382.50"></text></g><g><title>0x7fd332469a41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="945" y="372" width="1" height="15" fill="rgb(213,171,14)"/><text x="948.00" y="382.50"></text></g><g><title>0x7fd332469a53 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="946" y="372" width="2" height="15" fill="rgb(210,203,10)"/><text x="949.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.31%)</title><rect x="948" y="372" width="3" height="15" fill="rgb(211,148,21)"/><text x="951.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="951" y="372" width="2" height="15" fill="rgb(210,110,13)"/><text x="954.00" y="382.50"></text></g><g><title>0x7fd332469904 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="954" y="388" width="1" height="15" fill="rgb(229,96,10)"/><text x="957.00" y="398.50"></text></g><g><title>0x7fd332469965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="955" y="388" width="1" height="15" fill="rgb(245,216,11)"/><text x="958.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.24%)</title><rect x="943" y="356" width="14" height="15" fill="rgb(226,10,22)"/><text x="946.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="953" y="372" width="4" height="15" fill="rgb(226,38,31)"/><text x="956.00" y="382.50"></text></g><g><title>0x7fd332469a55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="956" y="388" width="1" height="15" fill="rgb(253,168,48)"/><text x="959.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 7.52%)</title><rect x="872" y="340" width="89" height="15" fill="rgb(220,213,32)"/><text x="875.00" y="350.50">onnxruntim..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="957" y="356" width="4" height="15" fill="rgb(216,160,26)"/><text x="960.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.51%)</title><rect x="961" y="356" width="6" height="15" fill="rgb(243,115,28)"/><text x="964.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.51%)</title><rect x="961" y="372" width="6" height="15" fill="rgb(210,126,8)"/><text x="964.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 10.71%)</title><rect x="842" y="260" width="126" height="15" fill="rgb(243,160,26)"/><text x="845.00" y="270.50">onnxruntime::In..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 10.71%)</title><rect x="842" y="276" width="126" height="15" fill="rgb(228,187,9)"/><text x="845.00" y="286.50">onnxruntime::In..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 10.71%)</title><rect x="842" y="292" width="126" height="15" fill="rgb(238,23,38)"/><text x="845.00" y="302.50">onnxruntime::ut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 10.71%)</title><rect x="842" y="308" width="126" height="15" fill="rgb(218,45,52)"/><text x="845.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 10.71%)</title><rect x="842" y="324" width="126" height="15" fill="rgb(232,24,48)"/><text x="845.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="961" y="340" width="7" height="15" fill="rgb(252,68,34)"/><text x="964.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="967" y="356" width="1" height="15" fill="rgb(251,158,53)"/><text x="970.00" y="366.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (107 samples, 11.02%)</title><rect x="840" y="100" width="130" height="15" fill="rgb(212,1,13)"/><text x="843.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 10.92%)</title><rect x="841" y="116" width="129" height="15" fill="rgb(248,105,36)"/><text x="844.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (106 samples, 10.92%)</title><rect x="841" y="132" width="129" height="15" fill="rgb(240,50,53)"/><text x="844.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (106 samples, 10.92%)</title><rect x="841" y="148" width="129" height="15" fill="rgb(231,61,22)"/><text x="844.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (106 samples, 10.92%)</title><rect x="841" y="164" width="129" height="15" fill="rgb(237,14,30)"/><text x="844.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (106 samples, 10.92%)</title><rect x="841" y="180" width="129" height="15" fill="rgb(249,196,18)"/><text x="844.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (106 samples, 10.92%)</title><rect x="841" y="196" width="129" height="15" fill="rgb(205,38,29)"/><text x="844.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 10.81%)</title><rect x="842" y="212" width="128" height="15" fill="rgb(225,201,8)"/><text x="845.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 10.81%)</title><rect x="842" y="228" width="128" height="15" fill="rgb(231,184,42)"/><text x="845.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 10.81%)</title><rect x="842" y="244" width="128" height="15" fill="rgb(246,136,47)"/><text x="845.00" y="254.50">onnxruntime::pyt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="968" y="260" width="2" height="15" fill="rgb(210,221,15)"/><text x="971.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="968" y="276" width="2" height="15" fill="rgb(234,99,54)"/><text x="971.00" y="286.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="971" y="340" width="1" height="15" fill="rgb(247,175,38)"/><text x="974.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="971" y="356" width="1" height="15" fill="rgb(224,207,4)"/><text x="974.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="971" y="372" width="1" height="15" fill="rgb(206,169,50)"/><text x="974.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="971" y="388" width="1" height="15" fill="rgb(214,67,39)"/><text x="974.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="971" y="404" width="1" height="15" fill="rgb(240,170,54)"/><text x="974.00" y="414.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="972" y="340" width="4" height="15" fill="rgb(254,120,14)"/><text x="975.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.82%)</title><rect x="976" y="372" width="9" height="15" fill="rgb(218,74,27)"/><text x="979.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="980" y="388" width="5" height="15" fill="rgb(253,166,16)"/><text x="983.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="976" y="340" width="11" height="15" fill="rgb(226,61,25)"/><text x="979.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="976" y="356" width="11" height="15" fill="rgb(241,160,35)"/><text x="979.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="985" y="372" width="2" height="15" fill="rgb(249,175,45)"/><text x="988.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="985" y="388" width="2" height="15" fill="rgb(243,196,14)"/><text x="988.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="985" y="404" width="2" height="15" fill="rgb(242,166,48)"/><text x="988.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="985" y="420" width="2" height="15" fill="rgb(213,56,47)"/><text x="988.00" y="430.50"></text></g><g><title>0x7fd332469d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="991" y="372" width="2" height="15" fill="rgb(246,47,23)"/><text x="994.00" y="382.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.62%)</title><rect x="987" y="340" width="7" height="15" fill="rgb(232,184,54)"/><text x="990.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="991" y="356" width="3" height="15" fill="rgb(245,223,12)"/><text x="994.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="993" y="372" width="1" height="15" fill="rgb(234,6,20)"/><text x="996.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="993" y="388" width="1" height="15" fill="rgb(223,19,24)"/><text x="996.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="993" y="404" width="1" height="15" fill="rgb(217,208,43)"/><text x="996.00" y="414.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="994" y="340" width="16" height="15" fill="rgb(250,88,23)"/><text x="997.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="994" y="356" width="16" height="15" fill="rgb(218,207,11)"/><text x="997.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="994" y="372" width="16" height="15" fill="rgb(251,125,0)"/><text x="997.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.82%)</title><rect x="1000" y="388" width="10" height="15" fill="rgb(215,186,19)"/><text x="1003.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1036" y="356" width="3" height="15" fill="rgb(244,78,37)"/><text x="1039.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1038" y="372" width="1" height="15" fill="rgb(247,201,46)"/><text x="1041.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1038" y="388" width="1" height="15" fill="rgb(235,206,18)"/><text x="1041.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1038" y="404" width="1" height="15" fill="rgb(229,192,35)"/><text x="1041.00" y="414.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1039" y="356" width="2" height="15" fill="rgb(207,111,19)"/><text x="1042.00" y="366.50"></text></g><g><title>0x7fd321f35d50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1098" y="404" width="2" height="15" fill="rgb(236,132,34)"/><text x="1101.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (22 samples, 2.27%)</title><rect x="1097" y="388" width="27" height="15" fill="rgb(249,74,27)"/><text x="1100.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (20 samples, 2.06%)</title><rect x="1100" y="404" width="24" height="15" fill="rgb(206,87,12)"/><text x="1103.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 8.03%)</title><rect x="1041" y="356" width="95" height="15" fill="rgb(226,193,0)"/><text x="1044.00" y="366.50">onnxruntime..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 4.53%)</title><rect x="1083" y="372" width="53" height="15" fill="rgb(244,201,37)"/><text x="1086.00" y="382.50">std::..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (10 samples, 1.03%)</title><rect x="1124" y="388" width="12" height="15" fill="rgb(252,44,33)"/><text x="1127.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.51%)</title><rect x="1136" y="356" width="6" height="15" fill="rgb(251,63,38)"/><text x="1139.00" y="366.50"></text></g><g><title>0x7fd332489dae (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1141" y="372" width="1" height="15" fill="rgb(215,214,48)"/><text x="1144.00" y="382.50"></text></g><g><title>0x7fd33246990e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1145" y="372" width="1" height="15" fill="rgb(250,72,46)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7fd33246993b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(247,73,5)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7fd332469957 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(238,71,46)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7fd332469971 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1148" y="372" width="1" height="15" fill="rgb(229,167,3)"/><text x="1151.00" y="382.50"></text></g><g><title>0x7fd332469991 (libc-2.29.so) (4 samples, 0.41%)</title><rect x="1149" y="372" width="5" height="15" fill="rgb(237,21,15)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7fd332469998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1154" y="372" width="1" height="15" fill="rgb(250,179,17)"/><text x="1157.00" y="382.50"></text></g><g><title>0x7fd332469a4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1155" y="372" width="2" height="15" fill="rgb(251,147,48)"/><text x="1158.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.31%)</title><rect x="1157" y="372" width="3" height="15" fill="rgb(210,38,48)"/><text x="1160.00" y="382.50"></text></g><g><title>0x7fd332469902 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1166" y="388" width="2" height="15" fill="rgb(254,140,26)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7fd332469904 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1168" y="388" width="2" height="15" fill="rgb(227,168,3)"/><text x="1171.00" y="398.50"></text></g><g><title>0x7fd332469957 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(247,155,25)"/><text x="1173.00" y="398.50"></text></g><g><title>0x7fd332469991 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1171" y="388" width="3" height="15" fill="rgb(216,129,47)"/><text x="1174.00" y="398.50"></text></g><g><title>0x7fd332469998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1174" y="388" width="1" height="15" fill="rgb(210,10,48)"/><text x="1177.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.99%)</title><rect x="1142" y="356" width="35" height="15" fill="rgb(230,118,9)"/><text x="1145.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.44%)</title><rect x="1160" y="372" width="17" height="15" fill="rgb(207,136,15)"/><text x="1163.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1175" y="388" width="2" height="15" fill="rgb(248,121,3)"/><text x="1178.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 14.83%)</title><rect x="1010" y="340" width="175" height="15" fill="rgb(242,182,24)"/><text x="1013.00" y="350.50">onnxruntime::ml::TreeE..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.62%)</title><rect x="1177" y="356" width="8" height="15" fill="rgb(246,156,5)"/><text x="1180.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1185" y="356" width="1" height="15" fill="rgb(221,54,45)"/><text x="1188.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1185" y="372" width="1" height="15" fill="rgb(210,23,52)"/><text x="1188.00" y="382.50"></text></g><g><title>0x7fd33246ad9f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1185" y="388" width="1" height="15" fill="rgb(248,77,33)"/><text x="1188.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 18.43%)</title><rect x="970" y="260" width="217" height="15" fill="rgb(254,206,0)"/><text x="973.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 18.43%)</title><rect x="970" y="276" width="217" height="15" fill="rgb(234,16,24)"/><text x="973.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 18.43%)</title><rect x="970" y="292" width="217" height="15" fill="rgb(217,197,10)"/><text x="973.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 18.43%)</title><rect x="970" y="308" width="217" height="15" fill="rgb(224,198,3)"/><text x="973.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (179 samples, 18.43%)</title><rect x="970" y="324" width="217" height="15" fill="rgb(253,222,42)"/><text x="973.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(230,177,9)"/><text x="1188.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1186" y="356" width="1" height="15" fill="rgb(210,130,27)"/><text x="1189.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(222,102,34)"/><text x="1190.00" y="270.50"></text></g><g><title>all (971 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,183,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:52) (291 samples, 29.97%)</title><rect x="836" y="52" width="354" height="15" fill="rgb(253,152,16)"/><text x="839.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:51) (291 samples, 29.97%)</title><rect x="836" y="68" width="354" height="15" fill="rgb(224,172,11)"/><text x="839.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (288 samples, 29.66%)</title><rect x="840" y="84" width="350" height="15" fill="rgb(223,138,25)"/><text x="843.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (181 samples, 18.64%)</title><rect x="970" y="100" width="220" height="15" fill="rgb(214,21,38)"/><text x="973.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 18.64%)</title><rect x="970" y="116" width="220" height="15" fill="rgb(251,216,48)"/><text x="973.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (181 samples, 18.64%)</title><rect x="970" y="132" width="220" height="15" fill="rgb(219,53,39)"/><text x="973.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (181 samples, 18.64%)</title><rect x="970" y="148" width="220" height="15" fill="rgb(212,27,32)"/><text x="973.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (181 samples, 18.64%)</title><rect x="970" y="164" width="220" height="15" fill="rgb(230,1,51)"/><text x="973.00" y="174.50">_run_whole_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (181 samples, 18.64%)</title><rect x="970" y="180" width="220" height="15" fill="rgb(210,134,2)"/><text x="973.00" y="190.50">run (mlprodict/onnxrt/ops_who..</text></g><g><title>run (onnxruntime/capi/session.py:136) (181 samples, 18.64%)</title><rect x="970" y="196" width="220" height="15" fill="rgb(235,104,46)"/><text x="973.00" y="206.50">run (onnxruntime/capi/session..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (181 samples, 18.64%)</title><rect x="970" y="212" width="220" height="15" fill="rgb(227,53,0)"/><text x="973.00" y="222.50">pybind11::cpp_function::dispa..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (181 samples, 18.64%)</title><rect x="970" y="228" width="220" height="15" fill="rgb(238,20,29)"/><text x="973.00" y="238.50">void pybind11::cpp_function::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (181 samples, 18.64%)</title><rect x="970" y="244" width="220" height="15" fill="rgb(208,150,40)"/><text x="973.00" y="254.50">onnxruntime::python::addObjec..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(208,24,48)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(213,11,3)"/><text x="1191.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(247,13,39)"/><text x="1191.00" y="302.50"></text></g><g><title>0x7fd332469d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(237,110,2)"/><text x="1191.00" y="318.50"></text></g></g></svg>