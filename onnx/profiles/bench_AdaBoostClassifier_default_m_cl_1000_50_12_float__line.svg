<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2246" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2229.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2229.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:31) (1 samples, 0.10%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(220,196,34)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:11) (1 samples, 0.10%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(224,147,31)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:39) (1 samples, 0.10%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(229,18,19)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.10%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(247,202,32)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (1 samples, 0.10%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(249,176,17)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (1 samples, 0.10%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(209,134,54)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (1 samples, 0.10%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(230,228,0)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (1 samples, 0.10%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(248,198,45)"/><text x="13.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.10%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(239,56,21)"/><text x="13.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:185) (1 samples, 0.10%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(231,72,47)"/><text x="13.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1927) (1 samples, 0.10%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(235,123,22)"/><text x="13.00" y="222.50"></text></g><g><title>PyArray_CopyObject (arrayobject.c:364) (1 samples, 0.10%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(212,155,13)"/><text x="13.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.10%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(253,90,44)"/><text x="13.00" y="254.50"></text></g><g><title>broadcast_strides (array_assign.c:38) (1 samples, 0.10%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(247,21,11)"/><text x="13.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 0.41%)</title><rect x="11" y="212" width="5" height="15" fill="rgb(206,88,20)"/><text x="14.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.41%)</title><rect x="11" y="228" width="5" height="15" fill="rgb(220,34,21)"/><text x="14.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.10%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(231,38,28)"/><text x="17.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.10%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(252,77,10)"/><text x="17.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.10%)</title><rect x="16" y="244" width="1" height="15" fill="rgb(247,187,10)"/><text x="19.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.10%)</title><rect x="17" y="244" width="1" height="15" fill="rgb(233,113,15)"/><text x="20.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.21%)</title><rect x="18" y="244" width="2" height="15" fill="rgb(251,95,4)"/><text x="21.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.10%)</title><rect x="19" y="260" width="1" height="15" fill="rgb(252,147,14)"/><text x="22.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.21%)</title><rect x="20" y="244" width="3" height="15" fill="rgb(215,144,13)"/><text x="23.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.21%)</title><rect x="20" y="260" width="3" height="15" fill="rgb(223,95,38)"/><text x="23.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.21%)</title><rect x="20" y="276" width="3" height="15" fill="rgb(223,144,21)"/><text x="23.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.21%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(230,69,22)"/><text x="26.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.10%)</title><rect x="24" y="260" width="1" height="15" fill="rgb(251,229,30)"/><text x="27.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.10%)</title><rect x="24" y="276" width="1" height="15" fill="rgb(229,47,48)"/><text x="27.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(252,12,35)"/><text x="28.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.41%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(207,101,6)"/><text x="30.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.21%)</title><rect x="29" y="276" width="2" height="15" fill="rgb(220,7,9)"/><text x="32.00" y="286.50"></text></g><g><title>0x7f55f6c47e50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="30" y="292" width="1" height="15" fill="rgb(213,62,11)"/><text x="33.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.52%)</title><rect x="27" y="244" width="6" height="15" fill="rgb(218,4,50)"/><text x="30.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="31" y="260" width="2" height="15" fill="rgb(218,55,44)"/><text x="34.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.31%)</title><rect x="33" y="260" width="3" height="15" fill="rgb(230,114,11)"/><text x="36.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (19 samples, 1.96%)</title><rect x="16" y="212" width="23" height="15" fill="rgb(230,54,20)"/><text x="19.00" y="222.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (19 samples, 1.96%)</title><rect x="16" y="228" width="23" height="15" fill="rgb(227,13,45)"/><text x="19.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.52%)</title><rect x="33" y="244" width="6" height="15" fill="rgb(246,147,29)"/><text x="36.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.21%)</title><rect x="36" y="260" width="3" height="15" fill="rgb(251,18,52)"/><text x="39.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="38" y="276" width="1" height="15" fill="rgb(221,29,10)"/><text x="41.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.10%)</title><rect x="38" y="292" width="1" height="15" fill="rgb(214,166,20)"/><text x="41.00" y="302.50"></text></g><g><title>0x7f55d0683225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="39" y="276" width="1" height="15" fill="rgb(253,175,43)"/><text x="42.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.10%)</title><rect x="39" y="292" width="1" height="15" fill="rgb(232,199,52)"/><text x="42.00" y="302.50"></text></g><g><title>0x7f55d06832df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="40" y="276" width="1" height="15" fill="rgb(250,50,28)"/><text x="43.00" y="286.50"></text></g><g><title>0x7f55d0667d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="40" y="292" width="1" height="15" fill="rgb(224,0,35)"/><text x="43.00" y="302.50"></text></g><g><title>0x7f55d0667666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="40" y="308" width="1" height="15" fill="rgb(236,75,41)"/><text x="43.00" y="318.50"></text></g><g><title>0x7f55d065d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="40" y="324" width="1" height="15" fill="rgb(217,18,2)"/><text x="43.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.10%)</title><rect x="40" y="340" width="1" height="15" fill="rgb(243,169,10)"/><text x="43.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.10%)</title><rect x="40" y="356" width="1" height="15" fill="rgb(233,24,16)"/><text x="43.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c:620) (1 samples, 0.10%)</title><rect x="40" y="372" width="1" height="15" fill="rgb(237,90,53)"/><text x="43.00" y="382.50"></text></g><g><title>0x7f55d0683592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="41" y="276" width="1" height="15" fill="rgb(244,62,45)"/><text x="44.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.10%)</title><rect x="41" y="292" width="1" height="15" fill="rgb(232,166,23)"/><text x="44.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.10%)</title><rect x="41" y="308" width="1" height="15" fill="rgb(210,155,50)"/><text x="44.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.10%)</title><rect x="41" y="324" width="1" height="15" fill="rgb(246,195,36)"/><text x="44.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.10%)</title><rect x="41" y="340" width="1" height="15" fill="rgb(232,96,37)"/><text x="44.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:138) (1 samples, 0.10%)</title><rect x="41" y="356" width="1" height="15" fill="rgb(248,39,24)"/><text x="44.00" y="366.50"></text></g><g><title>0x7f55d06836aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="42" y="276" width="2" height="15" fill="rgb(220,27,42)"/><text x="45.00" y="286.50"></text></g><g><title>0x7f55d06836ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="44" y="276" width="1" height="15" fill="rgb(217,174,42)"/><text x="47.00" y="286.50"></text></g><g><title>0x7f55d0684405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.62%)</title><rect x="39" y="260" width="7" height="15" fill="rgb(215,13,44)"/><text x="42.00" y="270.50"></text></g><g><title>0x7f55d06836b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="45" y="276" width="1" height="15" fill="rgb(249,38,16)"/><text x="48.00" y="286.50"></text></g><g><title>0x7f55d0674fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.72%)</title><rect x="39" y="244" width="8" height="15" fill="rgb(208,91,51)"/><text x="42.00" y="254.50"></text></g><g><title>0x7f55d0684540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="46" y="260" width="1" height="15" fill="rgb(238,1,53)"/><text x="49.00" y="270.50"></text></g><g><title>0x7f55d06592f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="46" y="276" width="1" height="15" fill="rgb(244,153,19)"/><text x="49.00" y="286.50"></text></g><g><title>0x7f55d065855f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="46" y="292" width="1" height="15" fill="rgb(214,167,16)"/><text x="49.00" y="302.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.10%)</title><rect x="47" y="260" width="2" height="15" fill="rgb(232,192,54)"/><text x="50.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.10%)</title><rect x="49" y="292" width="1" height="15" fill="rgb(217,21,21)"/><text x="52.00" y="302.50"></text></g><g><title>0x7f55d067505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="47" y="244" width="4" height="15" fill="rgb(233,22,8)"/><text x="50.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.21%)</title><rect x="49" y="260" width="2" height="15" fill="rgb(241,172,3)"/><text x="52.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.21%)</title><rect x="49" y="276" width="2" height="15" fill="rgb(252,64,34)"/><text x="52.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.10%)</title><rect x="50" y="292" width="1" height="15" fill="rgb(219,17,45)"/><text x="53.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (11 samples, 1.14%)</title><rect x="39" y="212" width="13" height="15" fill="rgb(231,181,16)"/><text x="42.00" y="222.50"></text></g><g><title>0x7f55d0675d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.14%)</title><rect x="39" y="228" width="13" height="15" fill="rgb(253,81,2)"/><text x="42.00" y="238.50"></text></g><g><title>0x7f55d067514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="51" y="244" width="1" height="15" fill="rgb(225,123,24)"/><text x="54.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="51" y="260" width="1" height="15" fill="rgb(248,157,48)"/><text x="54.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="51" y="276" width="1" height="15" fill="rgb(226,207,21)"/><text x="54.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.10%)</title><rect x="51" y="292" width="1" height="15" fill="rgb(250,91,50)"/><text x="54.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="53" y="276" width="2" height="15" fill="rgb(239,211,53)"/><text x="56.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="53" y="292" width="2" height="15" fill="rgb(252,154,3)"/><text x="56.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="53" y="308" width="2" height="15" fill="rgb(234,224,4)"/><text x="56.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="53" y="324" width="2" height="15" fill="rgb(232,179,41)"/><text x="56.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="53" y="340" width="2" height="15" fill="rgb(222,163,41)"/><text x="56.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="53" y="356" width="2" height="15" fill="rgb(250,223,35)"/><text x="56.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="53" y="372" width="2" height="15" fill="rgb(254,56,20)"/><text x="56.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="55" y="292" width="1" height="15" fill="rgb(216,65,35)"/><text x="58.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.10%)</title><rect x="56" y="356" width="1" height="15" fill="rgb(217,11,15)"/><text x="59.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.10%)</title><rect x="56" y="372" width="1" height="15" fill="rgb(239,95,23)"/><text x="59.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.10%)</title><rect x="56" y="388" width="1" height="15" fill="rgb(249,96,2)"/><text x="59.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.10%)</title><rect x="56" y="404" width="1" height="15" fill="rgb(246,176,3)"/><text x="59.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.10%)</title><rect x="56" y="420" width="1" height="15" fill="rgb(219,69,42)"/><text x="59.00" y="430.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="56" y="436" width="1" height="15" fill="rgb(241,212,14)"/><text x="59.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.21%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(247,55,19)"/><text x="59.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.21%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(248,197,1)"/><text x="59.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="57" y="356" width="1" height="15" fill="rgb(229,213,51)"/><text x="60.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.10%)</title><rect x="57" y="372" width="1" height="15" fill="rgb(254,112,34)"/><text x="60.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.10%)</title><rect x="57" y="388" width="1" height="15" fill="rgb(227,203,50)"/><text x="60.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (2 samples, 0.21%)</title><rect x="58" y="340" width="3" height="15" fill="rgb(254,9,27)"/><text x="61.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.41%)</title><rect x="58" y="324" width="5" height="15" fill="rgb(247,137,21)"/><text x="61.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.21%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(213,222,5)"/><text x="64.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.21%)</title><rect x="61" y="356" width="2" height="15" fill="rgb(243,123,11)"/><text x="64.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="62" y="372" width="1" height="15" fill="rgb(223,190,50)"/><text x="65.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (10 samples, 1.03%)</title><rect x="52" y="212" width="12" height="15" fill="rgb(237,100,34)"/><text x="55.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.03%)</title><rect x="52" y="228" width="12" height="15" fill="rgb(205,40,32)"/><text x="55.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.03%)</title><rect x="52" y="244" width="12" height="15" fill="rgb(254,106,52)"/><text x="55.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 0.93%)</title><rect x="53" y="260" width="11" height="15" fill="rgb(244,208,20)"/><text x="56.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 0.83%)</title><rect x="55" y="276" width="9" height="15" fill="rgb(251,117,54)"/><text x="58.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 0.72%)</title><rect x="56" y="292" width="8" height="15" fill="rgb(241,62,13)"/><text x="59.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 0.72%)</title><rect x="56" y="308" width="8" height="15" fill="rgb(222,63,43)"/><text x="59.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="63" y="324" width="1" height="15" fill="rgb(207,164,2)"/><text x="66.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:687) (1 samples, 0.10%)</title><rect x="63" y="340" width="1" height="15" fill="rgb(213,67,22)"/><text x="66.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.10%)</title><rect x="64" y="212" width="2" height="15" fill="rgb(213,198,44)"/><text x="67.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.10%)</title><rect x="64" y="228" width="2" height="15" fill="rgb(218,200,29)"/><text x="67.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="64" y="244" width="2" height="15" fill="rgb(219,16,27)"/><text x="67.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="64" y="260" width="2" height="15" fill="rgb(210,135,6)"/><text x="67.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="64" y="276" width="2" height="15" fill="rgb(224,155,17)"/><text x="67.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.10%)</title><rect x="64" y="292" width="2" height="15" fill="rgb(222,200,30)"/><text x="67.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.10%)</title><rect x="64" y="308" width="2" height="15" fill="rgb(238,147,28)"/><text x="67.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.10%)</title><rect x="64" y="324" width="2" height="15" fill="rgb(220,229,21)"/><text x="67.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.10%)</title><rect x="64" y="340" width="2" height="15" fill="rgb(211,98,35)"/><text x="67.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="67" y="276" width="1" height="15" fill="rgb(206,132,1)"/><text x="70.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="67" y="292" width="1" height="15" fill="rgb(226,61,28)"/><text x="70.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.10%)</title><rect x="67" y="308" width="1" height="15" fill="rgb(217,37,54)"/><text x="70.00" y="318.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (51 samples, 5.27%)</title><rect x="11" y="196" width="62" height="15" fill="rgb(235,168,29)"/><text x="14.00" y="206.50">_samme..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (6 samples, 0.62%)</title><rect x="66" y="212" width="7" height="15" fill="rgb(224,180,39)"/><text x="69.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.52%)</title><rect x="67" y="228" width="6" height="15" fill="rgb(206,20,27)"/><text x="70.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="67" y="244" width="6" height="15" fill="rgb(231,193,29)"/><text x="70.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="67" y="260" width="6" height="15" fill="rgb(247,75,49)"/><text x="70.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.41%)</title><rect x="68" y="276" width="5" height="15" fill="rgb(254,222,39)"/><text x="71.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.41%)</title><rect x="68" y="292" width="5" height="15" fill="rgb(221,126,1)"/><text x="71.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.41%)</title><rect x="68" y="308" width="5" height="15" fill="rgb(245,189,6)"/><text x="71.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.41%)</title><rect x="68" y="324" width="5" height="15" fill="rgb(208,120,21)"/><text x="71.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.41%)</title><rect x="68" y="340" width="5" height="15" fill="rgb(207,213,6)"/><text x="71.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.10%)</title><rect x="74" y="212" width="1" height="15" fill="rgb(232,166,16)"/><text x="77.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.10%)</title><rect x="74" y="228" width="1" height="15" fill="rgb(237,192,0)"/><text x="77.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="75" y="212" width="2" height="15" fill="rgb(253,32,52)"/><text x="78.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="75" y="228" width="2" height="15" fill="rgb(232,62,49)"/><text x="78.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.10%)</title><rect x="75" y="244" width="2" height="15" fill="rgb(228,195,35)"/><text x="78.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.10%)</title><rect x="75" y="260" width="2" height="15" fill="rgb(217,162,19)"/><text x="78.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.10%)</title><rect x="75" y="276" width="2" height="15" fill="rgb(237,209,29)"/><text x="78.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.10%)</title><rect x="75" y="292" width="2" height="15" fill="rgb(205,13,33)"/><text x="78.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.10%)</title><rect x="75" y="308" width="2" height="15" fill="rgb(233,37,39)"/><text x="78.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.10%)</title><rect x="78" y="228" width="1" height="15" fill="rgb(217,185,35)"/><text x="81.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.10%)</title><rect x="78" y="244" width="1" height="15" fill="rgb(207,51,13)"/><text x="81.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.10%)</title><rect x="78" y="260" width="1" height="15" fill="rgb(208,49,6)"/><text x="81.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="78" y="276" width="1" height="15" fill="rgb(220,99,53)"/><text x="81.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="78" y="292" width="1" height="15" fill="rgb(236,6,49)"/><text x="81.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="78" y="308" width="1" height="15" fill="rgb(231,48,31)"/><text x="81.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (3 samples, 0.31%)</title><rect x="80" y="308" width="4" height="15" fill="rgb(212,146,14)"/><text x="83.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.10%)</title><rect x="83" y="324" width="1" height="15" fill="rgb(228,163,6)"/><text x="86.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.21%)</title><rect x="84" y="324" width="2" height="15" fill="rgb(249,122,31)"/><text x="87.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (2 samples, 0.21%)</title><rect x="84" y="340" width="2" height="15" fill="rgb(235,144,3)"/><text x="87.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="88" y="356" width="1" height="15" fill="rgb(247,53,30)"/><text x="91.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="88" y="372" width="1" height="15" fill="rgb(242,54,5)"/><text x="91.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.10%)</title><rect x="88" y="388" width="1" height="15" fill="rgb(221,44,48)"/><text x="91.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.52%)</title><rect x="84" y="308" width="6" height="15" fill="rgb(249,159,40)"/><text x="87.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.31%)</title><rect x="86" y="324" width="4" height="15" fill="rgb(226,148,3)"/><text x="89.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="88" y="340" width="2" height="15" fill="rgb(222,93,37)"/><text x="91.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.10%)</title><rect x="89" y="356" width="1" height="15" fill="rgb(212,213,21)"/><text x="92.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.10%)</title><rect x="89" y="372" width="1" height="15" fill="rgb(219,179,3)"/><text x="92.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.10%)</title><rect x="89" y="388" width="1" height="15" fill="rgb(227,101,5)"/><text x="92.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="90" y="324" width="1" height="15" fill="rgb(209,9,9)"/><text x="93.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.10%)</title><rect x="94" y="356" width="1" height="15" fill="rgb(247,44,19)"/><text x="97.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="95" y="356" width="1" height="15" fill="rgb(234,219,39)"/><text x="98.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.10%)</title><rect x="95" y="372" width="1" height="15" fill="rgb(222,20,9)"/><text x="98.00" y="382.50"></text></g><g><title>0x7f55f6c47e7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="95" y="388" width="1" height="15" fill="rgb(254,97,38)"/><text x="98.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.10%)</title><rect x="96" y="356" width="1" height="15" fill="rgb(239,193,34)"/><text x="99.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="96" y="372" width="1" height="15" fill="rgb(217,28,21)"/><text x="99.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:941) (1 samples, 0.10%)</title><rect x="96" y="388" width="1" height="15" fill="rgb(214,225,51)"/><text x="99.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (7 samples, 0.72%)</title><rect x="90" y="308" width="9" height="15" fill="rgb(252,110,38)"/><text x="93.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 0.62%)</title><rect x="91" y="324" width="8" height="15" fill="rgb(208,47,41)"/><text x="94.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.41%)</title><rect x="94" y="340" width="5" height="15" fill="rgb(249,82,26)"/><text x="97.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3307) (1 samples, 0.10%)</title><rect x="97" y="356" width="2" height="15" fill="rgb(242,119,2)"/><text x="100.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3184) (1 samples, 0.10%)</title><rect x="99" y="356" width="1" height="15" fill="rgb(232,65,50)"/><text x="102.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="101" y="388" width="1" height="15" fill="rgb(227,203,46)"/><text x="104.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.10%)</title><rect x="101" y="404" width="1" height="15" fill="rgb(205,207,39)"/><text x="104.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.10%)</title><rect x="101" y="420" width="1" height="15" fill="rgb(218,72,9)"/><text x="104.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.10%)</title><rect x="101" y="436" width="1" height="15" fill="rgb(224,159,54)"/><text x="104.00" y="446.50"></text></g><g><title>0x7f55f6be97a5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="101" y="452" width="1" height="15" fill="rgb(207,97,46)"/><text x="104.00" y="462.50"></text></g><g><title>0x7f55f6be97c2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="101" y="468" width="1" height="15" fill="rgb(247,49,28)"/><text x="104.00" y="478.50"></text></g><g><title>0x7f55f6be9a19 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="101" y="484" width="1" height="15" fill="rgb(243,144,13)"/><text x="104.00" y="494.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.21%)</title><rect x="101" y="372" width="2" height="15" fill="rgb(239,196,3)"/><text x="104.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.10%)</title><rect x="102" y="388" width="1" height="15" fill="rgb(226,190,52)"/><text x="105.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.10%)</title><rect x="102" y="404" width="1" height="15" fill="rgb(241,123,36)"/><text x="105.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.10%)</title><rect x="103" y="404" width="2" height="15" fill="rgb(208,114,42)"/><text x="106.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (27 samples, 2.79%)</title><rect x="73" y="196" width="33" height="15" fill="rgb(243,8,14)"/><text x="76.00" y="206.50">_s..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (24 samples, 2.48%)</title><rect x="77" y="212" width="29" height="15" fill="rgb(234,151,28)"/><text x="80.00" y="222.50">cl..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 2.28%)</title><rect x="79" y="228" width="27" height="15" fill="rgb(231,165,34)"/><text x="82.00" y="238.50">a..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (22 samples, 2.28%)</title><rect x="79" y="244" width="27" height="15" fill="rgb(212,91,45)"/><text x="82.00" y="254.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.28%)</title><rect x="79" y="260" width="27" height="15" fill="rgb(231,37,32)"/><text x="82.00" y="270.50">_..</text></g><g><title>array_clip (methods.c:2381) (22 samples, 2.28%)</title><rect x="79" y="276" width="27" height="15" fill="rgb(252,221,28)"/><text x="82.00" y="286.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 2.28%)</title><rect x="79" y="292" width="27" height="15" fill="rgb(206,134,9)"/><text x="82.00" y="302.50">f..</text></g><g><title>_clip (numpy/core/_methods.py:129) (6 samples, 0.62%)</title><rect x="99" y="308" width="7" height="15" fill="rgb(211,174,8)"/><text x="102.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (6 samples, 0.62%)</title><rect x="99" y="324" width="7" height="15" fill="rgb(227,47,41)"/><text x="102.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="99" y="340" width="7" height="15" fill="rgb(222,191,4)"/><text x="102.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="100" y="356" width="6" height="15" fill="rgb(230,165,0)"/><text x="103.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.21%)</title><rect x="103" y="372" width="3" height="15" fill="rgb(244,145,31)"/><text x="106.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="103" y="388" width="3" height="15" fill="rgb(218,223,7)"/><text x="106.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.10%)</title><rect x="105" y="404" width="1" height="15" fill="rgb(209,91,1)"/><text x="108.00" y="414.50"></text></g><g><title>0x7f55f6e03e01 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="106" y="292" width="1" height="15" fill="rgb(218,91,14)"/><text x="109.00" y="302.50"></text></g><g><title>0x7f55f6e03e6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="107" y="292" width="1" height="15" fill="rgb(240,158,54)"/><text x="110.00" y="302.50"></text></g><g><title>0x7f55f6e03e8d (libm-2.29.so) (3 samples, 0.31%)</title><rect x="108" y="292" width="4" height="15" fill="rgb(224,8,13)"/><text x="111.00" y="302.50"></text></g><g><title>0x7f55f6e03eb6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="112" y="292" width="1" height="15" fill="rgb(208,78,26)"/><text x="115.00" y="302.50"></text></g><g><title>0x7f55f6e03eca (libm-2.29.so) (1 samples, 0.10%)</title><rect x="113" y="292" width="1" height="15" fill="rgb(240,127,8)"/><text x="116.00" y="302.50"></text></g><g><title>0x7f55f6e03ece (libm-2.29.so) (1 samples, 0.10%)</title><rect x="114" y="292" width="2" height="15" fill="rgb(241,18,20)"/><text x="117.00" y="302.50"></text></g><g><title>0x7f55f6e03efa (libm-2.29.so) (1 samples, 0.10%)</title><rect x="116" y="292" width="1" height="15" fill="rgb(224,72,13)"/><text x="119.00" y="302.50"></text></g><g><title>0x7f55f6e03fab (libm-2.29.so) (1 samples, 0.10%)</title><rect x="117" y="292" width="1" height="15" fill="rgb(238,190,46)"/><text x="120.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.10%)</title><rect x="118" y="292" width="1" height="15" fill="rgb(227,32,46)"/><text x="121.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (12 samples, 1.24%)</title><rect x="106" y="196" width="15" height="15" fill="rgb(248,136,17)"/><text x="109.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.24%)</title><rect x="106" y="212" width="15" height="15" fill="rgb(249,100,6)"/><text x="109.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.24%)</title><rect x="106" y="228" width="15" height="15" fill="rgb(249,29,39)"/><text x="109.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 1.24%)</title><rect x="106" y="244" width="15" height="15" fill="rgb(232,70,46)"/><text x="109.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 1.24%)</title><rect x="106" y="260" width="15" height="15" fill="rgb(212,213,46)"/><text x="109.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 1.24%)</title><rect x="106" y="276" width="15" height="15" fill="rgb(206,174,20)"/><text x="109.00" y="286.50"></text></g><g><title>npy_log (npy_math_internal.h.src:469) (1 samples, 0.10%)</title><rect x="119" y="292" width="2" height="15" fill="rgb(213,143,31)"/><text x="122.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (1 samples, 0.10%)</title><rect x="121" y="196" width="1" height="15" fill="rgb(214,16,13)"/><text x="124.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="123" y="244" width="1" height="15" fill="rgb(207,67,27)"/><text x="126.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="123" y="260" width="1" height="15" fill="rgb(217,0,38)"/><text x="126.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="123" y="276" width="1" height="15" fill="rgb(215,89,36)"/><text x="126.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.10%)</title><rect x="123" y="292" width="1" height="15" fill="rgb(240,192,24)"/><text x="126.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.10%)</title><rect x="123" y="308" width="1" height="15" fill="rgb(216,68,45)"/><text x="126.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.31%)</title><rect x="122" y="212" width="3" height="15" fill="rgb(232,46,18)"/><text x="125.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="123" y="228" width="2" height="15" fill="rgb(210,108,39)"/><text x="126.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="124" y="244" width="1" height="15" fill="rgb(225,17,24)"/><text x="127.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="124" y="260" width="1" height="15" fill="rgb(220,136,48)"/><text x="127.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.10%)</title><rect x="124" y="276" width="1" height="15" fill="rgb(225,116,53)"/><text x="127.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.10%)</title><rect x="124" y="292" width="1" height="15" fill="rgb(253,190,13)"/><text x="127.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.10%)</title><rect x="125" y="308" width="2" height="15" fill="rgb(242,179,45)"/><text x="128.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="125" y="276" width="3" height="15" fill="rgb(219,129,21)"/><text x="128.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (2 samples, 0.21%)</title><rect x="125" y="292" width="3" height="15" fill="rgb(209,48,13)"/><text x="128.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1671) (1 samples, 0.10%)</title><rect x="127" y="308" width="1" height="15" fill="rgb(230,195,52)"/><text x="130.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2246) (1 samples, 0.10%)</title><rect x="128" y="308" width="1" height="15" fill="rgb(210,175,26)"/><text x="131.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.10%)</title><rect x="129" y="340" width="1" height="15" fill="rgb(220,162,11)"/><text x="132.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 0.52%)</title><rect x="125" y="212" width="7" height="15" fill="rgb(218,139,24)"/><text x="128.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.52%)</title><rect x="125" y="228" width="7" height="15" fill="rgb(228,154,44)"/><text x="128.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="125" y="244" width="7" height="15" fill="rgb(224,77,30)"/><text x="128.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="125" y="260" width="7" height="15" fill="rgb(214,148,25)"/><text x="128.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="128" y="276" width="4" height="15" fill="rgb(231,110,34)"/><text x="131.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="128" y="292" width="4" height="15" fill="rgb(222,171,24)"/><text x="131.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.21%)</title><rect x="129" y="308" width="3" height="15" fill="rgb(246,175,37)"/><text x="132.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="129" y="324" width="3" height="15" fill="rgb(230,221,34)"/><text x="132.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="130" y="340" width="2" height="15" fill="rgb(215,30,36)"/><text x="133.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="132" y="260" width="1" height="15" fill="rgb(234,146,21)"/><text x="135.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="132" y="276" width="1" height="15" fill="rgb(214,77,9)"/><text x="135.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="132" y="292" width="1" height="15" fill="rgb(229,189,17)"/><text x="135.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="132" y="308" width="1" height="15" fill="rgb(247,102,52)"/><text x="135.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="132" y="324" width="1" height="15" fill="rgb(215,10,6)"/><text x="135.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="132" y="340" width="1" height="15" fill="rgb(238,207,46)"/><text x="135.00" y="350.50"></text></g><g><title>0x7f55f6c47e7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="132" y="356" width="1" height="15" fill="rgb(245,219,40)"/><text x="135.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="133" y="308" width="1" height="15" fill="rgb(213,115,25)"/><text x="136.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="133" y="324" width="1" height="15" fill="rgb(251,147,4)"/><text x="136.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="133" y="340" width="1" height="15" fill="rgb(241,52,20)"/><text x="136.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="133" y="356" width="1" height="15" fill="rgb(223,37,35)"/><text x="136.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="133" y="372" width="1" height="15" fill="rgb(206,75,37)"/><text x="136.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="133" y="388" width="1" height="15" fill="rgb(216,9,46)"/><text x="136.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="133" y="404" width="1" height="15" fill="rgb(242,80,25)"/><text x="136.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="133" y="420" width="1" height="15" fill="rgb(215,92,10)"/><text x="136.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="133" y="436" width="1" height="15" fill="rgb(208,153,9)"/><text x="136.00" y="446.50"></text></g><g><title>0x7f55f6c33293 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="133" y="452" width="1" height="15" fill="rgb(212,122,27)"/><text x="136.00" y="462.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="134" y="324" width="1" height="15" fill="rgb(214,109,35)"/><text x="137.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="135" y="324" width="1" height="15" fill="rgb(241,164,52)"/><text x="138.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.21%)</title><rect x="136" y="340" width="3" height="15" fill="rgb(214,166,17)"/><text x="139.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.52%)</title><rect x="139" y="340" width="6" height="15" fill="rgb(235,120,27)"/><text x="142.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="144" y="356" width="1" height="15" fill="rgb(230,177,22)"/><text x="147.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.21%)</title><rect x="145" y="340" width="2" height="15" fill="rgb(233,28,12)"/><text x="148.00" y="350.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (113 samples, 11.69%)</title><rect x="11" y="148" width="138" height="15" fill="rgb(245,80,36)"/><text x="14.00" y="158.50">predict_proba (sk..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (113 samples, 11.69%)</title><rect x="11" y="164" width="138" height="15" fill="rgb(244,191,49)"/><text x="14.00" y="174.50">decision_function..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (113 samples, 11.69%)</title><rect x="11" y="180" width="138" height="15" fill="rgb(248,8,43)"/><text x="14.00" y="190.50">&lt;genexpr&gt; (sklear..</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (22 samples, 2.28%)</title><rect x="122" y="196" width="27" height="15" fill="rgb(247,12,54)"/><text x="125.00" y="206.50">_..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 1.45%)</title><rect x="132" y="212" width="17" height="15" fill="rgb(254,194,18)"/><text x="135.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 1.45%)</title><rect x="132" y="228" width="17" height="15" fill="rgb(250,15,6)"/><text x="135.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 1.45%)</title><rect x="132" y="244" width="17" height="15" fill="rgb(226,0,25)"/><text x="135.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 1.34%)</title><rect x="133" y="260" width="16" height="15" fill="rgb(219,151,42)"/><text x="136.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 1.34%)</title><rect x="133" y="276" width="16" height="15" fill="rgb(225,150,26)"/><text x="136.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 1.34%)</title><rect x="133" y="292" width="16" height="15" fill="rgb(239,33,8)"/><text x="136.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (12 samples, 1.24%)</title><rect x="134" y="308" width="15" height="15" fill="rgb(236,119,46)"/><text x="137.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.03%)</title><rect x="136" y="324" width="13" height="15" fill="rgb(209,99,26)"/><text x="139.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="147" y="340" width="2" height="15" fill="rgb(252,32,17)"/><text x="150.00" y="350.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:778) (1 samples, 0.10%)</title><rect x="149" y="164" width="1" height="15" fill="rgb(232,151,54)"/><text x="152.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="149" y="180" width="1" height="15" fill="rgb(216,105,51)"/><text x="152.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="149" y="196" width="1" height="15" fill="rgb(205,181,13)"/><text x="152.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="149" y="212" width="1" height="15" fill="rgb(222,49,14)"/><text x="152.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="149" y="228" width="1" height="15" fill="rgb(207,122,40)"/><text x="152.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.10%)</title><rect x="149" y="244" width="1" height="15" fill="rgb(225,41,43)"/><text x="152.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.10%)</title><rect x="149" y="260" width="1" height="15" fill="rgb(234,18,53)"/><text x="152.00" y="270.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.10%)</title><rect x="150" y="180" width="1" height="15" fill="rgb(213,144,3)"/><text x="153.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="150" y="196" width="1" height="15" fill="rgb(248,145,54)"/><text x="153.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="150" y="212" width="1" height="15" fill="rgb(209,43,47)"/><text x="153.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.10%)</title><rect x="150" y="228" width="1" height="15" fill="rgb(239,68,45)"/><text x="153.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.10%)</title><rect x="150" y="244" width="1" height="15" fill="rgb(243,96,25)"/><text x="153.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.10%)</title><rect x="150" y="260" width="1" height="15" fill="rgb(244,141,9)"/><text x="153.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.10%)</title><rect x="150" y="276" width="1" height="15" fill="rgb(214,229,18)"/><text x="153.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.10%)</title><rect x="150" y="292" width="1" height="15" fill="rgb(247,1,42)"/><text x="153.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.10%)</title><rect x="150" y="308" width="1" height="15" fill="rgb(206,38,35)"/><text x="153.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.10%)</title><rect x="150" y="324" width="1" height="15" fill="rgb(231,218,11)"/><text x="153.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.10%)</title><rect x="150" y="340" width="1" height="15" fill="rgb(223,224,34)"/><text x="153.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.10%)</title><rect x="150" y="356" width="1" height="15" fill="rgb(215,87,15)"/><text x="153.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.10%)</title><rect x="150" y="372" width="1" height="15" fill="rgb(224,100,39)"/><text x="153.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="150" y="388" width="1" height="15" fill="rgb(252,104,16)"/><text x="153.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="150" y="404" width="1" height="15" fill="rgb(207,220,12)"/><text x="153.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="150" y="420" width="1" height="15" fill="rgb(239,68,52)"/><text x="153.00" y="430.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (116 samples, 12.00%)</title><rect x="11" y="100" width="141" height="15" fill="rgb(234,94,5)"/><text x="14.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (116 samples, 12.00%)</title><rect x="11" y="116" width="141" height="15" fill="rgb(231,166,24)"/><text x="14.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (116 samples, 12.00%)</title><rect x="11" y="132" width="141" height="15" fill="rgb(233,114,43)"/><text x="14.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (3 samples, 0.31%)</title><rect x="149" y="148" width="3" height="15" fill="rgb(214,210,39)"/><text x="152.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (2 samples, 0.21%)</title><rect x="150" y="164" width="2" height="15" fill="rgb(239,81,39)"/><text x="153.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:615) (1 samples, 0.10%)</title><rect x="151" y="180" width="1" height="15" fill="rgb(236,157,41)"/><text x="154.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.10%)</title><rect x="152" y="148" width="1" height="15" fill="rgb(217,215,37)"/><text x="155.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.10%)</title><rect x="152" y="164" width="1" height="15" fill="rgb(215,58,8)"/><text x="155.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="152" y="180" width="1" height="15" fill="rgb(234,155,5)"/><text x="155.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="152" y="196" width="1" height="15" fill="rgb(232,49,11)"/><text x="155.00" y="206.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:689) (1 samples, 0.10%)</title><rect x="153" y="164" width="2" height="15" fill="rgb(217,71,17)"/><text x="156.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.10%)</title><rect x="153" y="180" width="2" height="15" fill="rgb(236,116,29)"/><text x="156.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.10%)</title><rect x="153" y="196" width="2" height="15" fill="rgb(224,79,37)"/><text x="156.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.10%)</title><rect x="153" y="212" width="2" height="15" fill="rgb(206,21,26)"/><text x="156.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.10%)</title><rect x="153" y="228" width="2" height="15" fill="rgb(216,15,23)"/><text x="156.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="156" y="212" width="1" height="15" fill="rgb(230,35,29)"/><text x="159.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="156" y="228" width="1" height="15" fill="rgb(223,160,12)"/><text x="159.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="156" y="244" width="1" height="15" fill="rgb(237,60,2)"/><text x="159.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.10%)</title><rect x="157" y="212" width="1" height="15" fill="rgb(250,60,46)"/><text x="160.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="157" y="228" width="1" height="15" fill="rgb(225,134,29)"/><text x="160.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="157" y="244" width="1" height="15" fill="rgb(215,147,42)"/><text x="160.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="157" y="260" width="1" height="15" fill="rgb(245,141,11)"/><text x="160.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="157" y="276" width="1" height="15" fill="rgb(250,208,51)"/><text x="160.00" y="286.50"></text></g><g><title>0x7f55f6c31f71 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="157" y="292" width="1" height="15" fill="rgb(244,29,21)"/><text x="160.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.10%)</title><rect x="158" y="228" width="2" height="15" fill="rgb(235,191,18)"/><text x="161.00" y="238.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.10%)</title><rect x="158" y="244" width="2" height="15" fill="rgb(221,5,35)"/><text x="161.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.21%)</title><rect x="161" y="244" width="2" height="15" fill="rgb(217,126,9)"/><text x="164.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.41%)</title><rect x="164" y="260" width="5" height="15" fill="rgb(225,19,54)"/><text x="167.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.62%)</title><rect x="163" y="244" width="8" height="15" fill="rgb(221,173,14)"/><text x="166.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.10%)</title><rect x="169" y="260" width="2" height="15" fill="rgb(219,57,0)"/><text x="172.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (14 samples, 1.45%)</title><rect x="158" y="212" width="17" height="15" fill="rgb(208,95,30)"/><text x="161.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 1.34%)</title><rect x="160" y="228" width="15" height="15" fill="rgb(237,91,3)"/><text x="163.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 0.41%)</title><rect x="171" y="244" width="4" height="15" fill="rgb(241,113,22)"/><text x="174.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.10%)</title><rect x="175" y="244" width="2" height="15" fill="rgb(213,0,29)"/><text x="178.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.21%)</title><rect x="177" y="244" width="2" height="15" fill="rgb(216,189,12)"/><text x="180.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.10%)</title><rect x="178" y="260" width="1" height="15" fill="rgb(218,21,51)"/><text x="181.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.10%)</title><rect x="179" y="260" width="1" height="15" fill="rgb(243,118,53)"/><text x="182.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.10%)</title><rect x="180" y="260" width="2" height="15" fill="rgb(216,73,53)"/><text x="183.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.31%)</title><rect x="179" y="244" width="4" height="15" fill="rgb(219,92,44)"/><text x="182.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.10%)</title><rect x="182" y="260" width="1" height="15" fill="rgb(236,31,19)"/><text x="185.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.10%)</title><rect x="184" y="260" width="1" height="15" fill="rgb(229,86,33)"/><text x="187.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.41%)</title><rect x="183" y="244" width="5" height="15" fill="rgb(224,0,1)"/><text x="186.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.21%)</title><rect x="185" y="260" width="3" height="15" fill="rgb(239,142,43)"/><text x="188.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.21%)</title><rect x="185" y="276" width="3" height="15" fill="rgb(237,117,25)"/><text x="188.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.10%)</title><rect x="189" y="260" width="1" height="15" fill="rgb(237,46,44)"/><text x="192.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.31%)</title><rect x="188" y="244" width="3" height="15" fill="rgb(251,222,7)"/><text x="191.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.10%)</title><rect x="190" y="260" width="1" height="15" fill="rgb(226,227,52)"/><text x="193.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.10%)</title><rect x="190" y="276" width="1" height="15" fill="rgb(248,181,49)"/><text x="193.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.10%)</title><rect x="190" y="292" width="1" height="15" fill="rgb(234,35,28)"/><text x="193.00" y="302.50"></text></g><g><title>0x7f55f6c5212f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="191" y="276" width="2" height="15" fill="rgb(247,90,24)"/><text x="194.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.21%)</title><rect x="191" y="244" width="3" height="15" fill="rgb(208,43,16)"/><text x="194.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.21%)</title><rect x="191" y="260" width="3" height="15" fill="rgb(217,105,5)"/><text x="194.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="193" y="276" width="1" height="15" fill="rgb(228,164,16)"/><text x="196.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="194" y="244" width="1" height="15" fill="rgb(237,201,51)"/><text x="197.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="194" y="260" width="1" height="15" fill="rgb(235,126,29)"/><text x="197.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.31%)</title><rect x="195" y="260" width="4" height="15" fill="rgb(232,116,1)"/><text x="198.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.10%)</title><rect x="197" y="276" width="2" height="15" fill="rgb(249,95,41)"/><text x="200.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.41%)</title><rect x="195" y="244" width="5" height="15" fill="rgb(250,109,19)"/><text x="198.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="199" y="260" width="1" height="15" fill="rgb(213,88,7)"/><text x="202.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 0.41%)</title><rect x="200" y="260" width="5" height="15" fill="rgb(253,223,37)"/><text x="203.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.10%)</title><rect x="205" y="260" width="1" height="15" fill="rgb(215,212,12)"/><text x="208.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.21%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(211,28,1)"/><text x="209.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (8 samples, 0.83%)</title><rect x="200" y="244" width="10" height="15" fill="rgb(224,68,8)"/><text x="203.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.10%)</title><rect x="208" y="260" width="2" height="15" fill="rgb(239,70,52)"/><text x="211.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="208" y="276" width="2" height="15" fill="rgb(206,129,36)"/><text x="211.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.10%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(213,64,6)"/><text x="211.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (29 samples, 3.00%)</title><rect x="175" y="212" width="36" height="15" fill="rgb(243,63,49)"/><text x="178.00" y="222.50">pre..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (29 samples, 3.00%)</title><rect x="175" y="228" width="36" height="15" fill="rgb(210,37,8)"/><text x="178.00" y="238.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.10%)</title><rect x="210" y="244" width="1" height="15" fill="rgb(222,196,13)"/><text x="213.00" y="254.50"></text></g><g><title>0x7f55d0674f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="212" y="244" width="1" height="15" fill="rgb(223,76,47)"/><text x="215.00" y="254.50"></text></g><g><title>0x7f55d0664cee (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(244,45,53)"/><text x="215.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.10%)</title><rect x="213" y="356" width="2" height="15" fill="rgb(246,8,19)"/><text x="216.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.10%)</title><rect x="213" y="372" width="2" height="15" fill="rgb(253,97,1)"/><text x="216.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.10%)</title><rect x="213" y="388" width="2" height="15" fill="rgb(250,3,10)"/><text x="216.00" y="398.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.10%)</title><rect x="213" y="404" width="2" height="15" fill="rgb(242,220,25)"/><text x="216.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="213" y="420" width="2" height="15" fill="rgb(220,26,23)"/><text x="216.00" y="430.50"></text></g><g><title>0x7f55d06832df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="213" y="276" width="3" height="15" fill="rgb(254,166,6)"/><text x="216.00" y="286.50"></text></g><g><title>0x7f55d0667d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="213" y="292" width="3" height="15" fill="rgb(218,162,4)"/><text x="216.00" y="302.50"></text></g><g><title>0x7f55d0667666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="213" y="308" width="3" height="15" fill="rgb(229,173,4)"/><text x="216.00" y="318.50"></text></g><g><title>0x7f55d065d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="213" y="324" width="3" height="15" fill="rgb(219,15,50)"/><text x="216.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.21%)</title><rect x="213" y="340" width="3" height="15" fill="rgb(248,103,41)"/><text x="216.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.10%)</title><rect x="215" y="356" width="1" height="15" fill="rgb(211,68,40)"/><text x="218.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.10%)</title><rect x="216" y="308" width="1" height="15" fill="rgb(252,112,46)"/><text x="219.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.10%)</title><rect x="217" y="324" width="1" height="15" fill="rgb(220,8,41)"/><text x="220.00" y="334.50"></text></g><g><title>0x7f55f5e53ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="217" y="340" width="1" height="15" fill="rgb(254,226,11)"/><text x="220.00" y="350.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.10%)</title><rect x="218" y="324" width="1" height="15" fill="rgb(221,13,13)"/><text x="221.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.10%)</title><rect x="218" y="340" width="1" height="15" fill="rgb(213,204,27)"/><text x="221.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.10%)</title><rect x="218" y="356" width="1" height="15" fill="rgb(220,132,25)"/><text x="221.00" y="366.50"></text></g><g><title>0x7f55f5e53600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="218" y="372" width="1" height="15" fill="rgb(247,103,4)"/><text x="221.00" y="382.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 0.41%)</title><rect x="216" y="292" width="5" height="15" fill="rgb(227,201,29)"/><text x="219.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 0.31%)</title><rect x="217" y="308" width="4" height="15" fill="rgb(212,167,23)"/><text x="220.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:959) (1 samples, 0.10%)</title><rect x="219" y="324" width="2" height="15" fill="rgb(210,47,8)"/><text x="222.00" y="334.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.10%)</title><rect x="221" y="324" width="1" height="15" fill="rgb(227,0,54)"/><text x="224.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.10%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(224,135,27)"/><text x="225.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.10%)</title><rect x="222" y="372" width="1" height="15" fill="rgb(212,173,53)"/><text x="225.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="222" y="388" width="1" height="15" fill="rgb(245,0,25)"/><text x="225.00" y="398.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:140) (1 samples, 0.10%)</title><rect x="223" y="356" width="1" height="15" fill="rgb(233,88,7)"/><text x="226.00" y="366.50"></text></g><g><title>0x7f55d0683592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.83%)</title><rect x="216" y="276" width="9" height="15" fill="rgb(249,206,36)"/><text x="219.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (4 samples, 0.41%)</title><rect x="221" y="292" width="4" height="15" fill="rgb(210,123,12)"/><text x="224.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (4 samples, 0.41%)</title><rect x="221" y="308" width="4" height="15" fill="rgb(224,154,49)"/><text x="224.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.31%)</title><rect x="222" y="324" width="3" height="15" fill="rgb(242,148,45)"/><text x="225.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.31%)</title><rect x="222" y="340" width="3" height="15" fill="rgb(220,202,46)"/><text x="225.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.10%)</title><rect x="224" y="356" width="1" height="15" fill="rgb(252,20,42)"/><text x="227.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="224" y="372" width="1" height="15" fill="rgb(219,106,39)"/><text x="227.00" y="382.50"></text></g><g><title>0x7f55d06836aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="225" y="276" width="3" height="15" fill="rgb(205,47,1)"/><text x="228.00" y="286.50"></text></g><g><title>0x7f55d0674fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.34%)</title><rect x="213" y="244" width="16" height="15" fill="rgb(238,126,9)"/><text x="216.00" y="254.50"></text></g><g><title>0x7f55d0684405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.34%)</title><rect x="213" y="260" width="16" height="15" fill="rgb(229,135,38)"/><text x="216.00" y="270.50"></text></g><g><title>0x7f55d06836e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="228" y="276" width="1" height="15" fill="rgb(220,168,10)"/><text x="231.00" y="286.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.10%)</title><rect x="229" y="260" width="1" height="15" fill="rgb(234,32,53)"/><text x="232.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="229" y="276" width="1" height="15" fill="rgb(230,51,24)"/><text x="232.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.10%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(234,102,12)"/><text x="233.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.10%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(224,206,39)"/><text x="233.00" y="302.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:255) (1 samples, 0.10%)</title><rect x="232" y="276" width="1" height="15" fill="rgb(235,65,39)"/><text x="235.00" y="286.50"></text></g><g><title>0x7f55d067505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.41%)</title><rect x="229" y="244" width="5" height="15" fill="rgb(226,147,18)"/><text x="232.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.31%)</title><rect x="230" y="260" width="4" height="15" fill="rgb(248,91,41)"/><text x="233.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:36) (1 samples, 0.10%)</title><rect x="233" y="276" width="1" height="15" fill="rgb(213,113,49)"/><text x="236.00" y="286.50"></text></g><g><title>0x7f55d067514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="234" y="244" width="1" height="15" fill="rgb(212,30,10)"/><text x="237.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="234" y="260" width="1" height="15" fill="rgb(251,148,33)"/><text x="237.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="234" y="276" width="1" height="15" fill="rgb(215,80,49)"/><text x="237.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="234" y="292" width="1" height="15" fill="rgb(218,138,2)"/><text x="237.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (21 samples, 2.17%)</title><rect x="211" y="212" width="25" height="15" fill="rgb(226,188,46)"/><text x="214.00" y="222.50">p..</text></g><g><title>0x7f55d0675d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.07%)</title><rect x="212" y="228" width="24" height="15" fill="rgb(210,227,27)"/><text x="215.00" y="238.50">0..</text></g><g><title>0x7f55d06751bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="235" y="244" width="1" height="15" fill="rgb(216,195,49)"/><text x="238.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.10%)</title><rect x="235" y="260" width="1" height="15" fill="rgb(236,121,46)"/><text x="238.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1536) (1 samples, 0.10%)</title><rect x="238" y="228" width="1" height="15" fill="rgb(248,50,3)"/><text x="241.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.31%)</title><rect x="236" y="212" width="4" height="15" fill="rgb(222,201,27)"/><text x="239.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="239" y="228" width="1" height="15" fill="rgb(221,28,9)"/><text x="242.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.10%)</title><rect x="239" y="244" width="1" height="15" fill="rgb(213,149,54)"/><text x="242.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(207,147,32)"/><text x="244.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(251,116,22)"/><text x="244.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="241" y="308" width="2" height="15" fill="rgb(247,88,36)"/><text x="244.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="241" y="324" width="2" height="15" fill="rgb(246,12,10)"/><text x="244.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="241" y="340" width="2" height="15" fill="rgb(224,44,5)"/><text x="244.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="241" y="356" width="2" height="15" fill="rgb(219,170,43)"/><text x="244.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="243" y="292" width="1" height="15" fill="rgb(245,103,51)"/><text x="246.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.10%)</title><rect x="244" y="356" width="1" height="15" fill="rgb(223,209,22)"/><text x="247.00" y="366.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:913) (1 samples, 0.10%)</title><rect x="244" y="372" width="1" height="15" fill="rgb(235,62,41)"/><text x="247.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.21%)</title><rect x="244" y="324" width="2" height="15" fill="rgb(245,82,36)"/><text x="247.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.21%)</title><rect x="244" y="340" width="2" height="15" fill="rgb(247,32,4)"/><text x="247.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="245" y="356" width="1" height="15" fill="rgb(252,164,19)"/><text x="248.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.10%)</title><rect x="245" y="372" width="1" height="15" fill="rgb(236,116,22)"/><text x="248.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="245" y="388" width="1" height="15" fill="rgb(205,227,23)"/><text x="248.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.10%)</title><rect x="246" y="324" width="1" height="15" fill="rgb(235,199,41)"/><text x="249.00" y="334.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.10%)</title><rect x="246" y="340" width="1" height="15" fill="rgb(229,111,27)"/><text x="249.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.10%)</title><rect x="247" y="340" width="2" height="15" fill="rgb(222,70,25)"/><text x="250.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.10%)</title><rect x="249" y="340" width="1" height="15" fill="rgb(212,34,18)"/><text x="252.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="250" y="340" width="1" height="15" fill="rgb(242,60,29)"/><text x="253.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="252" y="356" width="2" height="15" fill="rgb(238,229,45)"/><text x="255.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.21%)</title><rect x="254" y="372" width="2" height="15" fill="rgb(240,125,2)"/><text x="257.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 0.62%)</title><rect x="254" y="356" width="7" height="15" fill="rgb(216,33,13)"/><text x="257.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.41%)</title><rect x="256" y="372" width="5" height="15" fill="rgb(225,203,2)"/><text x="259.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.21%)</title><rect x="261" y="356" width="2" height="15" fill="rgb(211,21,3)"/><text x="264.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.10%)</title><rect x="263" y="356" width="2" height="15" fill="rgb(234,13,35)"/><text x="266.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="265" y="356" width="1" height="15" fill="rgb(225,69,45)"/><text x="268.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 1.65%)</title><rect x="247" y="324" width="20" height="15" fill="rgb(252,215,23)"/><text x="250.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (13 samples, 1.34%)</title><rect x="251" y="340" width="16" height="15" fill="rgb(217,150,9)"/><text x="254.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.10%)</title><rect x="266" y="356" width="1" height="15" fill="rgb(252,108,3)"/><text x="269.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (23 samples, 2.38%)</title><rect x="240" y="212" width="28" height="15" fill="rgb(209,176,28)"/><text x="243.00" y="222.50">p..</text></g><g><title>array_sum (methods.c:2215) (23 samples, 2.38%)</title><rect x="240" y="228" width="28" height="15" fill="rgb(233,107,23)"/><text x="243.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (23 samples, 2.38%)</title><rect x="240" y="244" width="28" height="15" fill="rgb(212,215,26)"/><text x="243.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (22 samples, 2.28%)</title><rect x="241" y="260" width="27" height="15" fill="rgb(234,134,30)"/><text x="244.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (21 samples, 2.17%)</title><rect x="243" y="276" width="25" height="15" fill="rgb(234,83,31)"/><text x="246.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 2.07%)</title><rect x="244" y="292" width="24" height="15" fill="rgb(227,2,39)"/><text x="247.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.07%)</title><rect x="244" y="308" width="24" height="15" fill="rgb(251,157,37)"/><text x="247.00" y="318.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:588) (1 samples, 0.10%)</title><rect x="267" y="324" width="1" height="15" fill="rgb(213,201,29)"/><text x="270.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.10%)</title><rect x="268" y="228" width="1" height="15" fill="rgb(223,107,33)"/><text x="271.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="268" y="244" width="1" height="15" fill="rgb(242,147,10)"/><text x="271.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="268" y="260" width="1" height="15" fill="rgb(221,126,21)"/><text x="271.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.10%)</title><rect x="268" y="276" width="1" height="15" fill="rgb(223,35,28)"/><text x="271.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.10%)</title><rect x="269" y="228" width="2" height="15" fill="rgb(226,9,44)"/><text x="272.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.10%)</title><rect x="269" y="244" width="2" height="15" fill="rgb(244,127,14)"/><text x="272.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2080) (1 samples, 0.10%)</title><rect x="269" y="260" width="2" height="15" fill="rgb(206,87,51)"/><text x="272.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="271" y="260" width="1" height="15" fill="rgb(229,35,25)"/><text x="274.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="271" y="276" width="1" height="15" fill="rgb(226,113,11)"/><text x="274.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.10%)</title><rect x="271" y="292" width="1" height="15" fill="rgb(219,184,51)"/><text x="274.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.10%)</title><rect x="271" y="308" width="1" height="15" fill="rgb(220,186,22)"/><text x="274.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:212) (1 samples, 0.10%)</title><rect x="271" y="324" width="1" height="15" fill="rgb(228,142,45)"/><text x="274.00" y="334.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:336) (1 samples, 0.10%)</title><rect x="272" y="276" width="1" height="15" fill="rgb(237,75,43)"/><text x="275.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.52%)</title><rect x="268" y="212" width="6" height="15" fill="rgb(224,27,30)"/><text x="271.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.31%)</title><rect x="271" y="228" width="3" height="15" fill="rgb(205,40,44)"/><text x="274.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="271" y="244" width="3" height="15" fill="rgb(207,72,7)"/><text x="274.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.21%)</title><rect x="272" y="260" width="2" height="15" fill="rgb(209,186,45)"/><text x="275.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:352) (1 samples, 0.10%)</title><rect x="273" y="276" width="1" height="15" fill="rgb(239,40,32)"/><text x="276.00" y="286.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.10%)</title><rect x="273" y="292" width="1" height="15" fill="rgb(218,117,17)"/><text x="276.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="276" y="244" width="1" height="15" fill="rgb(207,93,17)"/><text x="279.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.10%)</title><rect x="276" y="260" width="1" height="15" fill="rgb(208,223,28)"/><text x="279.00" y="270.50"></text></g><g><title>0x7f55f5e54a80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="276" y="276" width="1" height="15" fill="rgb(250,205,46)"/><text x="279.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="277" y="292" width="1" height="15" fill="rgb(228,166,27)"/><text x="280.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="277" y="308" width="1" height="15" fill="rgb(205,199,31)"/><text x="280.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="277" y="324" width="1" height="15" fill="rgb(226,169,23)"/><text x="280.00" y="334.50"></text></g><g><title>0x7f55f6c32dc9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="277" y="340" width="1" height="15" fill="rgb(222,38,33)"/><text x="280.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.31%)</title><rect x="278" y="324" width="4" height="15" fill="rgb(211,49,21)"/><text x="281.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.10%)</title><rect x="282" y="324" width="1" height="15" fill="rgb(230,64,21)"/><text x="285.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.62%)</title><rect x="277" y="276" width="7" height="15" fill="rgb(224,26,15)"/><text x="280.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.52%)</title><rect x="278" y="292" width="6" height="15" fill="rgb(207,79,8)"/><text x="281.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.52%)</title><rect x="278" y="308" width="6" height="15" fill="rgb(245,46,49)"/><text x="281.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.10%)</title><rect x="283" y="324" width="1" height="15" fill="rgb(245,77,31)"/><text x="286.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.10%)</title><rect x="283" y="340" width="1" height="15" fill="rgb(213,43,43)"/><text x="286.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.14%)</title><rect x="276" y="228" width="13" height="15" fill="rgb(231,14,32)"/><text x="279.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.03%)</title><rect x="277" y="244" width="12" height="15" fill="rgb(250,175,41)"/><text x="280.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.03%)</title><rect x="277" y="260" width="12" height="15" fill="rgb(241,38,6)"/><text x="280.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.41%)</title><rect x="284" y="276" width="5" height="15" fill="rgb(210,79,19)"/><text x="287.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.41%)</title><rect x="284" y="292" width="5" height="15" fill="rgb(247,122,19)"/><text x="287.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.41%)</title><rect x="284" y="308" width="5" height="15" fill="rgb(224,22,14)"/><text x="287.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.41%)</title><rect x="284" y="324" width="5" height="15" fill="rgb(220,154,20)"/><text x="287.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.41%)</title><rect x="284" y="340" width="5" height="15" fill="rgb(232,12,36)"/><text x="287.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (111 samples, 11.48%)</title><rect x="155" y="196" width="135" height="15" fill="rgb(209,74,14)"/><text x="158.00" y="206.50">_samme_proba (skl..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (13 samples, 1.34%)</title><rect x="274" y="212" width="16" height="15" fill="rgb(252,129,15)"/><text x="277.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.10%)</title><rect x="289" y="228" width="1" height="15" fill="rgb(247,139,53)"/><text x="292.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="293" y="212" width="1" height="15" fill="rgb(211,228,0)"/><text x="296.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="293" y="228" width="1" height="15" fill="rgb(243,83,51)"/><text x="296.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.10%)</title><rect x="293" y="244" width="1" height="15" fill="rgb(213,163,6)"/><text x="296.00" y="254.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.10%)</title><rect x="293" y="260" width="1" height="15" fill="rgb(248,28,49)"/><text x="296.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.10%)</title><rect x="293" y="276" width="1" height="15" fill="rgb(217,201,28)"/><text x="296.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.10%)</title><rect x="293" y="292" width="1" height="15" fill="rgb(248,93,15)"/><text x="296.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="293" y="308" width="1" height="15" fill="rgb(213,199,21)"/><text x="296.00" y="318.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="294" y="212" width="1" height="15" fill="rgb(240,52,19)"/><text x="297.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.10%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(233,168,42)"/><text x="300.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.10%)</title><rect x="299" y="260" width="1" height="15" fill="rgb(230,187,44)"/><text x="302.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="301" y="324" width="1" height="15" fill="rgb(250,149,18)"/><text x="304.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="301" y="340" width="1" height="15" fill="rgb(232,217,12)"/><text x="304.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.21%)</title><rect x="302" y="420" width="3" height="15" fill="rgb(235,15,42)"/><text x="305.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="304" y="436" width="1" height="15" fill="rgb(230,126,41)"/><text x="307.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.31%)</title><rect x="302" y="324" width="4" height="15" fill="rgb(219,26,17)"/><text x="305.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="302" y="340" width="4" height="15" fill="rgb(243,200,12)"/><text x="305.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (3 samples, 0.31%)</title><rect x="302" y="356" width="4" height="15" fill="rgb(229,126,5)"/><text x="305.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (3 samples, 0.31%)</title><rect x="302" y="372" width="4" height="15" fill="rgb(206,184,42)"/><text x="305.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (3 samples, 0.31%)</title><rect x="302" y="388" width="4" height="15" fill="rgb(212,8,25)"/><text x="305.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.31%)</title><rect x="302" y="404" width="4" height="15" fill="rgb(215,163,10)"/><text x="305.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="305" y="420" width="1" height="15" fill="rgb(225,171,42)"/><text x="308.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (5 samples, 0.52%)</title><rect x="301" y="308" width="6" height="15" fill="rgb(243,118,36)"/><text x="304.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.10%)</title><rect x="306" y="324" width="1" height="15" fill="rgb(233,136,25)"/><text x="309.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="306" y="340" width="1" height="15" fill="rgb(247,180,43)"/><text x="309.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3141) (1 samples, 0.10%)</title><rect x="306" y="356" width="1" height="15" fill="rgb(218,70,8)"/><text x="309.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.31%)</title><rect x="307" y="324" width="4" height="15" fill="rgb(241,81,34)"/><text x="310.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.21%)</title><rect x="308" y="340" width="3" height="15" fill="rgb(220,127,14)"/><text x="311.00" y="350.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.21%)</title><rect x="311" y="372" width="2" height="15" fill="rgb(209,162,49)"/><text x="314.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3020) (1 samples, 0.10%)</title><rect x="313" y="372" width="2" height="15" fill="rgb(234,104,36)"/><text x="316.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.21%)</title><rect x="318" y="452" width="3" height="15" fill="rgb(209,162,11)"/><text x="321.00" y="462.50"></text></g><g><title>PyArray_FromStructInterface (ctors.c:2243) (1 samples, 0.10%)</title><rect x="321" y="468" width="1" height="15" fill="rgb(243,67,51)"/><text x="324.00" y="478.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (10 samples, 1.03%)</title><rect x="311" y="324" width="12" height="15" fill="rgb(249,115,23)"/><text x="314.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (10 samples, 1.03%)</title><rect x="311" y="340" width="12" height="15" fill="rgb(235,136,38)"/><text x="314.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.03%)</title><rect x="311" y="356" width="12" height="15" fill="rgb(220,105,49)"/><text x="314.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (7 samples, 0.72%)</title><rect x="315" y="372" width="8" height="15" fill="rgb(214,139,22)"/><text x="318.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (5 samples, 0.52%)</title><rect x="317" y="388" width="6" height="15" fill="rgb(249,159,40)"/><text x="320.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 0.41%)</title><rect x="318" y="404" width="5" height="15" fill="rgb(232,217,52)"/><text x="321.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 0.41%)</title><rect x="318" y="420" width="5" height="15" fill="rgb(223,137,1)"/><text x="321.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (4 samples, 0.41%)</title><rect x="318" y="436" width="5" height="15" fill="rgb(232,180,53)"/><text x="321.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1665) (2 samples, 0.21%)</title><rect x="321" y="452" width="2" height="15" fill="rgb(244,161,38)"/><text x="324.00" y="462.50"></text></g><g><title>PyArray_FromStructInterface (ctors.c:2293) (1 samples, 0.10%)</title><rect x="322" y="468" width="1" height="15" fill="rgb(211,33,36)"/><text x="325.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="323" y="356" width="1" height="15" fill="rgb(222,13,35)"/><text x="326.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(214,142,16)"/><text x="326.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.10%)</title><rect x="323" y="388" width="1" height="15" fill="rgb(251,219,34)"/><text x="326.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.10%)</title><rect x="323" y="404" width="1" height="15" fill="rgb(249,197,47)"/><text x="326.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="324" y="356" width="2" height="15" fill="rgb(216,111,49)"/><text x="327.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.10%)</title><rect x="324" y="372" width="2" height="15" fill="rgb(212,83,47)"/><text x="327.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (16 samples, 1.65%)</title><rect x="307" y="308" width="20" height="15" fill="rgb(226,29,0)"/><text x="310.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.31%)</title><rect x="323" y="324" width="4" height="15" fill="rgb(223,99,5)"/><text x="326.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="323" y="340" width="4" height="15" fill="rgb(236,140,38)"/><text x="326.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.10%)</title><rect x="326" y="356" width="1" height="15" fill="rgb(226,180,12)"/><text x="329.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(231,68,45)"/><text x="329.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="326" y="388" width="1" height="15" fill="rgb(230,20,52)"/><text x="329.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="326" y="404" width="1" height="15" fill="rgb(250,47,5)"/><text x="329.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="327" y="340" width="1" height="15" fill="rgb(243,51,52)"/><text x="330.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="327" y="356" width="1" height="15" fill="rgb(223,64,8)"/><text x="330.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(236,27,24)"/><text x="330.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="327" y="388" width="1" height="15" fill="rgb(212,49,33)"/><text x="330.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="327" y="404" width="1" height="15" fill="rgb(216,158,45)"/><text x="330.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="327" y="420" width="1" height="15" fill="rgb(227,158,24)"/><text x="330.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.10%)</title><rect x="328" y="372" width="1" height="15" fill="rgb(246,79,26)"/><text x="331.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="328" y="388" width="1" height="15" fill="rgb(232,148,53)"/><text x="331.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.10%)</title><rect x="328" y="404" width="1" height="15" fill="rgb(219,172,42)"/><text x="331.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.10%)</title><rect x="328" y="420" width="1" height="15" fill="rgb(228,187,53)"/><text x="331.00" y="430.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:284) (1 samples, 0.10%)</title><rect x="328" y="436" width="1" height="15" fill="rgb(213,116,25)"/><text x="331.00" y="446.50"></text></g><g><title>euclid (mem_overlap.c:224) (1 samples, 0.10%)</title><rect x="328" y="452" width="1" height="15" fill="rgb(210,221,30)"/><text x="331.00" y="462.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.10%)</title><rect x="329" y="388" width="1" height="15" fill="rgb(252,107,38)"/><text x="332.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (3 samples, 0.31%)</title><rect x="330" y="404" width="4" height="15" fill="rgb(254,180,11)"/><text x="333.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1869) (1 samples, 0.10%)</title><rect x="334" y="404" width="1" height="15" fill="rgb(248,56,28)"/><text x="337.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.83%)</title><rect x="328" y="356" width="10" height="15" fill="rgb(252,204,26)"/><text x="331.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (7 samples, 0.72%)</title><rect x="329" y="372" width="9" height="15" fill="rgb(231,187,27)"/><text x="332.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (6 samples, 0.62%)</title><rect x="330" y="388" width="8" height="15" fill="rgb(241,102,44)"/><text x="333.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.21%)</title><rect x="335" y="404" width="3" height="15" fill="rgb(222,4,20)"/><text x="338.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (40 samples, 4.14%)</title><rect x="290" y="196" width="49" height="15" fill="rgb(234,117,42)"/><text x="293.00" y="206.50">_sam..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (36 samples, 3.72%)</title><rect x="295" y="212" width="44" height="15" fill="rgb(220,110,22)"/><text x="298.00" y="222.50">clip..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (35 samples, 3.62%)</title><rect x="296" y="228" width="43" height="15" fill="rgb(238,190,9)"/><text x="299.00" y="238.50">arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (35 samples, 3.62%)</title><rect x="296" y="244" width="43" height="15" fill="rgb(233,119,45)"/><text x="299.00" y="254.50">clip..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (32 samples, 3.31%)</title><rect x="300" y="260" width="39" height="15" fill="rgb(252,150,26)"/><text x="303.00" y="270.50">_wr..</text></g><g><title>array_clip (methods.c:2381) (32 samples, 3.31%)</title><rect x="300" y="276" width="39" height="15" fill="rgb(227,171,51)"/><text x="303.00" y="286.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 3.31%)</title><rect x="300" y="292" width="39" height="15" fill="rgb(213,78,7)"/><text x="303.00" y="302.50">for..</text></g><g><title>_clip (numpy/core/_methods.py:129) (10 samples, 1.03%)</title><rect x="327" y="308" width="12" height="15" fill="rgb(213,25,17)"/><text x="330.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.03%)</title><rect x="327" y="324" width="12" height="15" fill="rgb(222,37,29)"/><text x="330.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.93%)</title><rect x="328" y="340" width="11" height="15" fill="rgb(232,137,20)"/><text x="331.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.10%)</title><rect x="338" y="356" width="1" height="15" fill="rgb(225,126,40)"/><text x="341.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="339" y="212" width="1" height="15" fill="rgb(226,12,54)"/><text x="342.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="339" y="228" width="1" height="15" fill="rgb(226,195,46)"/><text x="342.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:71) (1 samples, 0.10%)</title><rect x="339" y="244" width="1" height="15" fill="rgb(249,30,30)"/><text x="342.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="340" y="308" width="1" height="15" fill="rgb(218,222,8)"/><text x="343.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="340" y="324" width="1" height="15" fill="rgb(235,56,18)"/><text x="343.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="340" y="340" width="1" height="15" fill="rgb(248,64,9)"/><text x="343.00" y="350.50"></text></g><g><title>0x7f55f6c32b12 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="340" y="356" width="1" height="15" fill="rgb(232,15,22)"/><text x="343.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.21%)</title><rect x="340" y="244" width="3" height="15" fill="rgb(237,124,1)"/><text x="343.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.21%)</title><rect x="340" y="260" width="3" height="15" fill="rgb(215,114,36)"/><text x="343.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.21%)</title><rect x="340" y="276" width="3" height="15" fill="rgb(234,216,28)"/><text x="343.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.21%)</title><rect x="340" y="292" width="3" height="15" fill="rgb(250,126,16)"/><text x="343.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.10%)</title><rect x="341" y="308" width="2" height="15" fill="rgb(219,105,10)"/><text x="344.00" y="318.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.10%)</title><rect x="343" y="276" width="1" height="15" fill="rgb(211,167,11)"/><text x="346.00" y="286.50"></text></g><g><title>0x7f55f5e550c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="344" y="292" width="2" height="15" fill="rgb(231,122,7)"/><text x="347.00" y="302.50"></text></g><g><title>0x7f55f6e03dd0 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="346" y="292" width="3" height="15" fill="rgb(229,117,51)"/><text x="349.00" y="302.50"></text></g><g><title>0x7f55f6e03dee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="349" y="292" width="1" height="15" fill="rgb(246,72,22)"/><text x="352.00" y="302.50"></text></g><g><title>0x7f55f6e03e40 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="350" y="292" width="2" height="15" fill="rgb(223,97,46)"/><text x="353.00" y="302.50"></text></g><g><title>0x7f55f6e03e4d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="352" y="292" width="2" height="15" fill="rgb(212,24,53)"/><text x="355.00" y="302.50"></text></g><g><title>0x7f55f6e03e6e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="354" y="292" width="1" height="15" fill="rgb(239,7,35)"/><text x="357.00" y="302.50"></text></g><g><title>0x7f55f6e03e7e (libm-2.29.so) (1 samples, 0.10%)</title><rect x="355" y="292" width="1" height="15" fill="rgb(209,149,47)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f55f6e03e8d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="356" y="292" width="1" height="15" fill="rgb(221,31,26)"/><text x="359.00" y="302.50"></text></g><g><title>0x7f55f6e03ea2 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="357" y="292" width="1" height="15" fill="rgb(241,120,16)"/><text x="360.00" y="302.50"></text></g><g><title>0x7f55f6e03eb6 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="358" y="292" width="3" height="15" fill="rgb(254,149,37)"/><text x="361.00" y="302.50"></text></g><g><title>0x7f55f6e03ed2 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(248,168,16)"/><text x="364.00" y="302.50"></text></g><g><title>0x7f55f6e03eee (libm-2.29.so) (3 samples, 0.31%)</title><rect x="363" y="292" width="4" height="15" fill="rgb(232,153,54)"/><text x="366.00" y="302.50"></text></g><g><title>0x7f55f6e03ef6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="367" y="292" width="1" height="15" fill="rgb(236,131,6)"/><text x="370.00" y="302.50"></text></g><g><title>0x7f55f6e03efa (libm-2.29.so) (1 samples, 0.10%)</title><rect x="368" y="292" width="1" height="15" fill="rgb(240,128,16)"/><text x="371.00" y="302.50"></text></g><g><title>0x7f55f6e03fb7 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(249,183,35)"/><text x="372.00" y="302.50"></text></g><g><title>0x7f55f6e03fbf (libm-2.29.so) (1 samples, 0.10%)</title><rect x="371" y="292" width="1" height="15" fill="rgb(211,104,24)"/><text x="374.00" y="302.50"></text></g><g><title>0x7f55f6e04017 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="372" y="292" width="1" height="15" fill="rgb(219,3,53)"/><text x="375.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (29 samples, 3.00%)</title><rect x="340" y="228" width="36" height="15" fill="rgb(246,142,50)"/><text x="343.00" y="238.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (27 samples, 2.79%)</title><rect x="343" y="244" width="33" height="15" fill="rgb(208,161,14)"/><text x="346.00" y="254.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (27 samples, 2.79%)</title><rect x="343" y="260" width="33" height="15" fill="rgb(246,119,19)"/><text x="346.00" y="270.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (26 samples, 2.69%)</title><rect x="344" y="276" width="32" height="15" fill="rgb(234,141,13)"/><text x="347.00" y="286.50">Py..</text></g><g><title>log (libm-2.29.so) (2 samples, 0.21%)</title><rect x="373" y="292" width="3" height="15" fill="rgb(253,200,19)"/><text x="376.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.10%)</title><rect x="376" y="228" width="1" height="15" fill="rgb(206,140,0)"/><text x="379.00" y="238.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (32 samples, 3.31%)</title><rect x="339" y="196" width="39" height="15" fill="rgb(220,130,4)"/><text x="342.00" y="206.50">_sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 3.21%)</title><rect x="340" y="212" width="38" height="15" fill="rgb(237,217,43)"/><text x="343.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3272) (1 samples, 0.10%)</title><rect x="377" y="228" width="1" height="15" fill="rgb(248,8,5)"/><text x="380.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4724) (1 samples, 0.10%)</title><rect x="378" y="228" width="1" height="15" fill="rgb(211,167,31)"/><text x="381.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.10%)</title><rect x="379" y="260" width="1" height="15" fill="rgb(235,40,52)"/><text x="382.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.21%)</title><rect x="379" y="244" width="3" height="15" fill="rgb(252,166,38)"/><text x="382.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.10%)</title><rect x="380" y="260" width="2" height="15" fill="rgb(241,21,1)"/><text x="383.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="382" y="244" width="1" height="15" fill="rgb(228,70,30)"/><text x="385.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="382" y="260" width="1" height="15" fill="rgb(232,190,31)"/><text x="385.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.10%)</title><rect x="382" y="276" width="1" height="15" fill="rgb(244,35,47)"/><text x="385.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1796) (1 samples, 0.10%)</title><rect x="382" y="292" width="1" height="15" fill="rgb(238,74,19)"/><text x="385.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.10%)</title><rect x="382" y="308" width="1" height="15" fill="rgb(237,46,50)"/><text x="385.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.10%)</title><rect x="383" y="244" width="1" height="15" fill="rgb(230,44,11)"/><text x="386.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.10%)</title><rect x="383" y="260" width="1" height="15" fill="rgb(227,8,46)"/><text x="386.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="384" y="244" width="1" height="15" fill="rgb(214,64,50)"/><text x="387.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:282) (1 samples, 0.10%)</title><rect x="384" y="260" width="1" height="15" fill="rgb(218,149,20)"/><text x="387.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.10%)</title><rect x="385" y="244" width="2" height="15" fill="rgb(240,203,11)"/><text x="388.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.10%)</title><rect x="385" y="260" width="2" height="15" fill="rgb(235,117,7)"/><text x="388.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.10%)</title><rect x="385" y="276" width="2" height="15" fill="rgb(217,181,2)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.10%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(212,229,42)"/><text x="388.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="385" y="308" width="2" height="15" fill="rgb(236,85,37)"/><text x="388.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.10%)</title><rect x="385" y="324" width="2" height="15" fill="rgb(223,51,45)"/><text x="388.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.10%)</title><rect x="385" y="340" width="2" height="15" fill="rgb(205,226,50)"/><text x="388.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.10%)</title><rect x="385" y="356" width="2" height="15" fill="rgb(252,105,52)"/><text x="388.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.10%)</title><rect x="387" y="260" width="1" height="15" fill="rgb(245,117,53)"/><text x="390.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.10%)</title><rect x="387" y="276" width="1" height="15" fill="rgb(206,211,27)"/><text x="390.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.10%)</title><rect x="388" y="276" width="1" height="15" fill="rgb(235,28,22)"/><text x="391.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.03%)</title><rect x="379" y="228" width="12" height="15" fill="rgb(246,112,41)"/><text x="382.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.41%)</title><rect x="387" y="244" width="4" height="15" fill="rgb(233,23,21)"/><text x="390.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.31%)</title><rect x="388" y="260" width="3" height="15" fill="rgb(226,26,27)"/><text x="391.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="389" y="276" width="2" height="15" fill="rgb(224,181,42)"/><text x="392.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (2 samples, 0.21%)</title><rect x="389" y="292" width="2" height="15" fill="rgb(246,44,17)"/><text x="392.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (2 samples, 0.21%)</title><rect x="389" y="308" width="2" height="15" fill="rgb(221,223,31)"/><text x="392.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.10%)</title><rect x="391" y="228" width="2" height="15" fill="rgb(252,219,38)"/><text x="394.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="391" y="244" width="2" height="15" fill="rgb(225,147,38)"/><text x="394.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(223,90,2)"/><text x="394.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="391" y="276" width="2" height="15" fill="rgb(209,148,12)"/><text x="394.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (13 samples, 1.34%)</title><rect x="378" y="212" width="16" height="15" fill="rgb(209,159,41)"/><text x="381.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.10%)</title><rect x="393" y="228" width="1" height="15" fill="rgb(221,31,1)"/><text x="396.00" y="238.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.10%)</title><rect x="393" y="244" width="1" height="15" fill="rgb(236,88,30)"/><text x="396.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.10%)</title><rect x="393" y="260" width="1" height="15" fill="rgb(226,69,8)"/><text x="396.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="394" y="356" width="1" height="15" fill="rgb(219,124,18)"/><text x="397.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.10%)</title><rect x="394" y="372" width="1" height="15" fill="rgb(251,78,40)"/><text x="397.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="394" y="276" width="2" height="15" fill="rgb(238,135,48)"/><text x="397.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.21%)</title><rect x="394" y="292" width="2" height="15" fill="rgb(207,98,53)"/><text x="397.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.21%)</title><rect x="394" y="308" width="2" height="15" fill="rgb(243,201,16)"/><text x="397.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.21%)</title><rect x="394" y="324" width="2" height="15" fill="rgb(236,139,11)"/><text x="397.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.21%)</title><rect x="394" y="340" width="2" height="15" fill="rgb(235,121,12)"/><text x="397.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="395" y="356" width="1" height="15" fill="rgb(246,89,27)"/><text x="398.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="395" y="372" width="1" height="15" fill="rgb(238,54,21)"/><text x="398.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="395" y="388" width="1" height="15" fill="rgb(234,59,17)"/><text x="398.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.10%)</title><rect x="395" y="404" width="1" height="15" fill="rgb(247,176,14)"/><text x="398.00" y="414.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.10%)</title><rect x="395" y="420" width="1" height="15" fill="rgb(212,28,52)"/><text x="398.00" y="430.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="396" y="292" width="2" height="15" fill="rgb(231,134,28)"/><text x="399.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="396" y="308" width="2" height="15" fill="rgb(240,134,36)"/><text x="399.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="396" y="324" width="2" height="15" fill="rgb(211,0,21)"/><text x="399.00" y="334.50"></text></g><g><title>0x7f55f6c33700 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="396" y="340" width="2" height="15" fill="rgb(254,115,23)"/><text x="399.00" y="350.50"></text></g><g><title>0x7f55f6c30b0a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="396" y="356" width="2" height="15" fill="rgb(209,58,49)"/><text x="399.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="398" y="324" width="1" height="15" fill="rgb(252,4,24)"/><text x="401.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (6 samples, 0.62%)</title><rect x="394" y="212" width="7" height="15" fill="rgb(218,151,14)"/><text x="397.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.62%)</title><rect x="394" y="228" width="7" height="15" fill="rgb(251,103,22)"/><text x="397.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.62%)</title><rect x="394" y="244" width="7" height="15" fill="rgb(245,101,51)"/><text x="397.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.62%)</title><rect x="394" y="260" width="7" height="15" fill="rgb(246,93,13)"/><text x="397.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.41%)</title><rect x="396" y="276" width="5" height="15" fill="rgb(225,123,28)"/><text x="399.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="398" y="292" width="3" height="15" fill="rgb(238,226,21)"/><text x="401.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="398" y="308" width="3" height="15" fill="rgb(215,187,3)"/><text x="401.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="399" y="324" width="2" height="15" fill="rgb(205,119,15)"/><text x="402.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.10%)</title><rect x="400" y="340" width="1" height="15" fill="rgb(221,12,2)"/><text x="403.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="402" y="260" width="2" height="15" fill="rgb(248,162,36)"/><text x="405.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="402" y="276" width="2" height="15" fill="rgb(218,200,21)"/><text x="405.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="402" y="292" width="2" height="15" fill="rgb(213,129,9)"/><text x="405.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="402" y="308" width="2" height="15" fill="rgb(216,100,22)"/><text x="405.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.10%)</title><rect x="402" y="324" width="2" height="15" fill="rgb(228,101,18)"/><text x="405.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.10%)</title><rect x="402" y="340" width="2" height="15" fill="rgb(223,222,54)"/><text x="405.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="404" y="276" width="1" height="15" fill="rgb(218,202,31)"/><text x="407.00" y="286.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.10%)</title><rect x="404" y="292" width="1" height="15" fill="rgb(220,166,18)"/><text x="407.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.10%)</title><rect x="405" y="324" width="1" height="15" fill="rgb(242,119,24)"/><text x="408.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="405" y="340" width="1" height="15" fill="rgb(243,141,32)"/><text x="408.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="405" y="356" width="1" height="15" fill="rgb(248,31,41)"/><text x="408.00" y="366.50"></text></g><g><title>0x7f55f6c336df (libc-2.29.so) (1 samples, 0.10%)</title><rect x="405" y="372" width="1" height="15" fill="rgb(223,157,21)"/><text x="408.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(247,134,2)"/><text x="408.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="406" y="324" width="1" height="15" fill="rgb(209,35,38)"/><text x="409.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.10%)</title><rect x="406" y="340" width="1" height="15" fill="rgb(239,213,39)"/><text x="409.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2767) (1 samples, 0.10%)</title><rect x="406" y="356" width="1" height="15" fill="rgb(250,86,8)"/><text x="409.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.10%)</title><rect x="407" y="324" width="2" height="15" fill="rgb(225,82,4)"/><text x="410.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.10%)</title><rect x="409" y="324" width="1" height="15" fill="rgb(229,190,3)"/><text x="412.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.10%)</title><rect x="410" y="324" width="1" height="15" fill="rgb(208,208,18)"/><text x="413.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.21%)</title><rect x="411" y="340" width="2" height="15" fill="rgb(211,176,50)"/><text x="414.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="413" y="340" width="2" height="15" fill="rgb(217,7,23)"/><text x="416.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (6 samples, 0.62%)</title><rect x="415" y="356" width="7" height="15" fill="rgb(225,58,33)"/><text x="418.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (8 samples, 0.83%)</title><rect x="415" y="340" width="9" height="15" fill="rgb(206,190,39)"/><text x="418.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (2 samples, 0.21%)</title><rect x="422" y="356" width="2" height="15" fill="rgb(249,5,25)"/><text x="425.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (3 samples, 0.31%)</title><rect x="424" y="340" width="4" height="15" fill="rgb(241,63,49)"/><text x="427.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.21%)</title><rect x="428" y="340" width="2" height="15" fill="rgb(248,204,46)"/><text x="431.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (45 samples, 4.65%)</title><rect x="378" y="196" width="55" height="15" fill="rgb(248,227,20)"/><text x="381.00" y="206.50">_samm..</text></g><g><title>array_sum (methods.c:2215) (26 samples, 2.69%)</title><rect x="401" y="212" width="32" height="15" fill="rgb(226,179,19)"/><text x="404.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 2.69%)</title><rect x="401" y="228" width="32" height="15" fill="rgb(235,31,24)"/><text x="404.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (25 samples, 2.59%)</title><rect x="402" y="244" width="31" height="15" fill="rgb(217,117,37)"/><text x="405.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (24 samples, 2.48%)</title><rect x="404" y="260" width="29" height="15" fill="rgb(236,44,11)"/><text x="407.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (23 samples, 2.38%)</title><rect x="405" y="276" width="28" height="15" fill="rgb(216,215,39)"/><text x="408.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (23 samples, 2.38%)</title><rect x="405" y="292" width="28" height="15" fill="rgb(224,222,30)"/><text x="408.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (21 samples, 2.17%)</title><rect x="407" y="308" width="26" height="15" fill="rgb(225,163,0)"/><text x="410.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (18 samples, 1.86%)</title><rect x="411" y="324" width="22" height="15" fill="rgb(207,84,34)"/><text x="414.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (2 samples, 0.21%)</title><rect x="430" y="340" width="3" height="15" fill="rgb(242,31,0)"/><text x="433.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (229 samples, 23.68%)</title><rect x="155" y="180" width="279" height="15" fill="rgb(240,224,21)"/><text x="158.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_b..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.10%)</title><rect x="433" y="196" width="1" height="15" fill="rgb(209,104,14)"/><text x="436.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.10%)</title><rect x="433" y="212" width="1" height="15" fill="rgb(237,143,2)"/><text x="436.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.10%)</title><rect x="433" y="228" width="1" height="15" fill="rgb(253,111,6)"/><text x="436.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.10%)</title><rect x="433" y="244" width="1" height="15" fill="rgb(239,210,41)"/><text x="436.00" y="254.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.10%)</title><rect x="433" y="260" width="1" height="15" fill="rgb(237,222,31)"/><text x="436.00" y="270.50"></text></g><g><title>0x7f55f6c31f3d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="433" y="276" width="1" height="15" fill="rgb(241,33,35)"/><text x="436.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.10%)</title><rect x="434" y="228" width="1" height="15" fill="rgb(240,160,5)"/><text x="437.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="434" y="244" width="1" height="15" fill="rgb(207,164,1)"/><text x="437.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.10%)</title><rect x="434" y="260" width="1" height="15" fill="rgb(248,26,32)"/><text x="437.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="435" y="292" width="2" height="15" fill="rgb(242,41,2)"/><text x="438.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.10%)</title><rect x="435" y="308" width="2" height="15" fill="rgb(213,123,36)"/><text x="438.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (233 samples, 24.10%)</title><rect x="153" y="148" width="285" height="15" fill="rgb(205,98,7)"/><text x="156.00" y="158.50">predict_proba (sklearn/ensemble/_weigh..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (232 samples, 23.99%)</title><rect x="155" y="164" width="283" height="15" fill="rgb(222,47,40)"/><text x="158.00" y="174.50">decision_function (sklearn/ensemble/_..</text></g><g><title>array_add (number.c:330) (3 samples, 0.31%)</title><rect x="434" y="180" width="4" height="15" fill="rgb(211,34,20)"/><text x="437.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.31%)</title><rect x="434" y="196" width="4" height="15" fill="rgb(240,96,7)"/><text x="437.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="434" y="212" width="4" height="15" fill="rgb(242,124,37)"/><text x="437.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.21%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(230,168,38)"/><text x="438.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.21%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(210,63,38)"/><text x="438.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.21%)</title><rect x="435" y="260" width="3" height="15" fill="rgb(248,66,35)"/><text x="438.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.21%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(220,195,23)"/><text x="438.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.10%)</title><rect x="437" y="292" width="1" height="15" fill="rgb(230,137,7)"/><text x="440.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.10%)</title><rect x="437" y="308" width="1" height="15" fill="rgb(222,152,46)"/><text x="440.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:778) (1 samples, 0.10%)</title><rect x="438" y="164" width="1" height="15" fill="rgb(253,221,35)"/><text x="441.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="438" y="180" width="1" height="15" fill="rgb(248,34,53)"/><text x="441.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="438" y="196" width="1" height="15" fill="rgb(228,157,9)"/><text x="441.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="438" y="212" width="1" height="15" fill="rgb(240,207,23)"/><text x="441.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="438" y="228" width="1" height="15" fill="rgb(205,94,25)"/><text x="441.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.10%)</title><rect x="438" y="244" width="1" height="15" fill="rgb(241,129,54)"/><text x="441.00" y="254.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.10%)</title><rect x="438" y="260" width="1" height="15" fill="rgb(245,105,38)"/><text x="441.00" y="270.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:611) (1 samples, 0.10%)</title><rect x="439" y="180" width="1" height="15" fill="rgb(211,207,3)"/><text x="442.00" y="190.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.10%)</title><rect x="440" y="180" width="1" height="15" fill="rgb(233,203,51)"/><text x="443.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="440" y="196" width="1" height="15" fill="rgb(222,43,23)"/><text x="443.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="440" y="212" width="1" height="15" fill="rgb(206,187,31)"/><text x="443.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.10%)</title><rect x="440" y="228" width="1" height="15" fill="rgb(240,217,25)"/><text x="443.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="440" y="244" width="1" height="15" fill="rgb(226,69,40)"/><text x="443.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.10%)</title><rect x="440" y="260" width="1" height="15" fill="rgb(216,92,23)"/><text x="443.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.10%)</title><rect x="440" y="276" width="1" height="15" fill="rgb(236,128,50)"/><text x="443.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1076) (1 samples, 0.10%)</title><rect x="440" y="292" width="1" height="15" fill="rgb(218,116,44)"/><text x="443.00" y="302.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.10%)</title><rect x="441" y="180" width="2" height="15" fill="rgb(245,188,43)"/><text x="444.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="441" y="196" width="2" height="15" fill="rgb(220,225,6)"/><text x="444.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="441" y="212" width="2" height="15" fill="rgb(219,58,18)"/><text x="444.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="441" y="228" width="2" height="15" fill="rgb(239,216,33)"/><text x="444.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.10%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(253,126,51)"/><text x="444.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.10%)</title><rect x="441" y="260" width="2" height="15" fill="rgb(212,204,18)"/><text x="444.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.10%)</title><rect x="441" y="276" width="2" height="15" fill="rgb(224,92,40)"/><text x="444.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:38) (355 samples, 36.71%)</title><rect x="11" y="52" width="433" height="15" fill="rgb(239,84,10)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_..</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:37) (355 samples, 36.71%)</title><rect x="11" y="68" width="433" height="15" fill="rgb(246,52,17)"/><text x="14.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1000_50_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (355 samples, 36.71%)</title><rect x="11" y="84" width="433" height="15" fill="rgb(206,188,45)"/><text x="14.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_5..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (239 samples, 24.72%)</title><rect x="152" y="100" width="292" height="15" fill="rgb(213,63,43)"/><text x="155.00" y="110.50">profile (bench_AdaBoostClassifier_defau..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (239 samples, 24.72%)</title><rect x="152" y="116" width="292" height="15" fill="rgb(207,63,11)"/><text x="155.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (239 samples, 24.72%)</title><rect x="152" y="132" width="292" height="15" fill="rgb(219,3,12)"/><text x="155.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (5 samples, 0.52%)</title><rect x="438" y="148" width="6" height="15" fill="rgb(233,55,26)"/><text x="441.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (4 samples, 0.41%)</title><rect x="439" y="164" width="5" height="15" fill="rgb(248,132,15)"/><text x="442.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (1 samples, 0.10%)</title><rect x="443" y="180" width="1" height="15" fill="rgb(226,206,37)"/><text x="446.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="443" y="196" width="1" height="15" fill="rgb(249,134,16)"/><text x="446.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="443" y="212" width="1" height="15" fill="rgb(226,176,23)"/><text x="446.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.10%)</title><rect x="443" y="228" width="1" height="15" fill="rgb(239,210,24)"/><text x="446.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.10%)</title><rect x="443" y="244" width="1" height="15" fill="rgb(245,33,14)"/><text x="446.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.10%)</title><rect x="443" y="260" width="1" height="15" fill="rgb(224,135,35)"/><text x="446.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.10%)</title><rect x="443" y="276" width="1" height="15" fill="rgb(226,158,42)"/><text x="446.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.10%)</title><rect x="443" y="292" width="1" height="15" fill="rgb(240,221,24)"/><text x="446.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.10%)</title><rect x="443" y="308" width="1" height="15" fill="rgb(218,130,36)"/><text x="446.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.10%)</title><rect x="443" y="324" width="1" height="15" fill="rgb(211,156,46)"/><text x="446.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.10%)</title><rect x="443" y="340" width="1" height="15" fill="rgb(234,33,35)"/><text x="446.00" y="350.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.10%)</title><rect x="444" y="244" width="1" height="15" fill="rgb(209,172,47)"/><text x="447.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="444" y="260" width="1" height="15" fill="rgb(247,81,50)"/><text x="447.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="276" width="1" height="15" fill="rgb(253,128,27)"/><text x="447.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="292" width="1" height="15" fill="rgb(218,157,51)"/><text x="447.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="308" width="1" height="15" fill="rgb(207,115,0)"/><text x="447.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="324" width="1" height="15" fill="rgb(245,152,5)"/><text x="447.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="340" width="1" height="15" fill="rgb(218,202,14)"/><text x="447.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="356" width="1" height="15" fill="rgb(231,134,9)"/><text x="447.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.10%)</title><rect x="444" y="372" width="1" height="15" fill="rgb(207,161,35)"/><text x="447.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="444" y="388" width="1" height="15" fill="rgb(214,167,34)"/><text x="447.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="404" width="1" height="15" fill="rgb(217,94,23)"/><text x="447.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="420" width="1" height="15" fill="rgb(224,117,11)"/><text x="447.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="436" width="1" height="15" fill="rgb(254,0,53)"/><text x="447.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="452" width="1" height="15" fill="rgb(246,182,49)"/><text x="447.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="468" width="1" height="15" fill="rgb(205,202,4)"/><text x="447.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="484" width="1" height="15" fill="rgb(228,34,41)"/><text x="447.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.10%)</title><rect x="444" y="500" width="1" height="15" fill="rgb(242,217,24)"/><text x="447.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="444" y="516" width="1" height="15" fill="rgb(252,66,1)"/><text x="447.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="532" width="1" height="15" fill="rgb(242,229,24)"/><text x="447.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="548" width="1" height="15" fill="rgb(209,156,33)"/><text x="447.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="564" width="1" height="15" fill="rgb(207,181,2)"/><text x="447.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="580" width="1" height="15" fill="rgb(251,174,48)"/><text x="447.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="596" width="1" height="15" fill="rgb(244,114,16)"/><text x="447.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="612" width="1" height="15" fill="rgb(252,178,36)"/><text x="447.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.10%)</title><rect x="444" y="628" width="1" height="15" fill="rgb(215,132,11)"/><text x="447.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="644" width="1" height="15" fill="rgb(251,143,31)"/><text x="447.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="444" y="660" width="1" height="15" fill="rgb(207,119,40)"/><text x="447.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="676" width="1" height="15" fill="rgb(210,54,9)"/><text x="447.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="692" width="1" height="15" fill="rgb(206,67,33)"/><text x="447.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="708" width="1" height="15" fill="rgb(247,102,52)"/><text x="447.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="724" width="1" height="15" fill="rgb(217,50,17)"/><text x="447.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="740" width="1" height="15" fill="rgb(205,58,49)"/><text x="447.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="756" width="1" height="15" fill="rgb(239,99,50)"/><text x="447.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.10%)</title><rect x="444" y="772" width="1" height="15" fill="rgb(251,157,41)"/><text x="447.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="444" y="788" width="1" height="15" fill="rgb(253,21,2)"/><text x="447.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="804" width="1" height="15" fill="rgb(211,77,54)"/><text x="447.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="820" width="1" height="15" fill="rgb(242,55,35)"/><text x="447.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="836" width="1" height="15" fill="rgb(241,182,0)"/><text x="447.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="852" width="1" height="15" fill="rgb(238,217,1)"/><text x="447.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="868" width="1" height="15" fill="rgb(217,124,38)"/><text x="447.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="884" width="1" height="15" fill="rgb(225,87,22)"/><text x="447.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:16) (1 samples, 0.10%)</title><rect x="444" y="900" width="1" height="15" fill="rgb(226,137,6)"/><text x="447.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="916" width="1" height="15" fill="rgb(227,227,26)"/><text x="447.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="932" width="1" height="15" fill="rgb(221,84,5)"/><text x="447.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="948" width="1" height="15" fill="rgb(212,191,48)"/><text x="447.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="444" y="964" width="1" height="15" fill="rgb(220,41,22)"/><text x="447.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="980" width="1" height="15" fill="rgb(241,29,20)"/><text x="447.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py:13) (1 samples, 0.10%)</title><rect x="444" y="996" width="1" height="15" fill="rgb(249,108,25)"/><text x="447.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="1012" width="1" height="15" fill="rgb(207,217,8)"/><text x="447.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="444" y="1028" width="1" height="15" fill="rgb(237,46,7)"/><text x="447.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="444" y="1044" width="1" height="15" fill="rgb(213,27,8)"/><text x="447.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="444" y="1060" width="1" height="15" fill="rgb(227,82,15)"/><text x="447.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="444" y="1076" width="1" height="15" fill="rgb(214,65,16)"/><text x="447.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="444" y="1092" width="1" height="15" fill="rgb(216,55,50)"/><text x="447.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="444" y="1108" width="1" height="15" fill="rgb(229,0,1)"/><text x="447.00" y="1118.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.10%)</title><rect x="444" y="1124" width="1" height="15" fill="rgb(245,1,38)"/><text x="447.00" y="1134.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.10%)</title><rect x="444" y="1140" width="1" height="15" fill="rgb(233,98,18)"/><text x="447.00" y="1150.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:1) (2 samples, 0.21%)</title><rect x="444" y="148" width="2" height="15" fill="rgb(222,161,25)"/><text x="447.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="444" y="164" width="2" height="15" fill="rgb(231,174,33)"/><text x="447.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="444" y="180" width="2" height="15" fill="rgb(209,151,20)"/><text x="447.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="444" y="196" width="2" height="15" fill="rgb(232,174,25)"/><text x="447.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(229,85,43)"/><text x="447.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(245,197,16)"/><text x="447.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.10%)</title><rect x="445" y="244" width="1" height="15" fill="rgb(235,18,32)"/><text x="448.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="445" y="260" width="1" height="15" fill="rgb(207,62,22)"/><text x="448.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="276" width="1" height="15" fill="rgb(215,221,50)"/><text x="448.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="292" width="1" height="15" fill="rgb(250,82,42)"/><text x="448.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="308" width="1" height="15" fill="rgb(207,225,10)"/><text x="448.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="324" width="1" height="15" fill="rgb(209,24,54)"/><text x="448.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="445" y="340" width="1" height="15" fill="rgb(225,173,21)"/><text x="448.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="356" width="1" height="15" fill="rgb(205,28,6)"/><text x="448.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.10%)</title><rect x="445" y="372" width="1" height="15" fill="rgb(224,14,6)"/><text x="448.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="388" width="1" height="15" fill="rgb(240,205,7)"/><text x="448.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="404" width="1" height="15" fill="rgb(247,143,26)"/><text x="448.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="420" width="1" height="15" fill="rgb(225,113,0)"/><text x="448.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="445" y="436" width="1" height="15" fill="rgb(226,2,53)"/><text x="448.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="452" width="1" height="15" fill="rgb(238,89,26)"/><text x="448.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.10%)</title><rect x="445" y="468" width="1" height="15" fill="rgb(233,166,21)"/><text x="448.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="484" width="1" height="15" fill="rgb(214,219,36)"/><text x="448.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="500" width="1" height="15" fill="rgb(237,190,40)"/><text x="448.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="516" width="1" height="15" fill="rgb(224,41,24)"/><text x="448.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="445" y="532" width="1" height="15" fill="rgb(212,124,45)"/><text x="448.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="548" width="1" height="15" fill="rgb(229,4,3)"/><text x="448.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (1 samples, 0.10%)</title><rect x="445" y="564" width="1" height="15" fill="rgb(240,198,41)"/><text x="448.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="580" width="1" height="15" fill="rgb(226,52,40)"/><text x="448.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="596" width="1" height="15" fill="rgb(247,142,7)"/><text x="448.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="445" y="612" width="1" height="15" fill="rgb(246,40,43)"/><text x="448.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="445" y="628" width="1" height="15" fill="rgb(235,15,45)"/><text x="448.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="644" width="1" height="15" fill="rgb(228,87,49)"/><text x="448.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py:15) (1 samples, 0.10%)</title><rect x="445" y="660" width="1" height="15" fill="rgb(220,57,9)"/><text x="448.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="445" y="676" width="1" height="15" fill="rgb(212,184,43)"/><text x="448.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="445" y="692" width="1" height="15" fill="rgb(212,195,0)"/><text x="448.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.10%)</title><rect x="445" y="708" width="1" height="15" fill="rgb(236,124,30)"/><text x="448.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.10%)</title><rect x="445" y="724" width="1" height="15" fill="rgb(229,153,50)"/><text x="448.00" y="734.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.10%)</title><rect x="445" y="740" width="1" height="15" fill="rgb(226,10,2)"/><text x="448.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="445" y="756" width="1" height="15" fill="rgb(213,157,20)"/><text x="448.00" y="766.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="772" width="1" height="15" fill="rgb(212,221,0)"/><text x="448.00" y="782.50"></text></g><g><title>0x7f55f6eb9995 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="788" width="1" height="15" fill="rgb(243,153,35)"/><text x="448.00" y="798.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="804" width="1" height="15" fill="rgb(205,131,40)"/><text x="448.00" y="814.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="820" width="1" height="15" fill="rgb(240,186,17)"/><text x="448.00" y="830.50"></text></g><g><title>0x7f55f6eb9258 (libdl-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="836" width="1" height="15" fill="rgb(247,142,35)"/><text x="448.00" y="846.50"></text></g><g><title>0x7f55f6f06d7a (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="852" width="1" height="15" fill="rgb(252,81,30)"/><text x="448.00" y="862.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="868" width="1" height="15" fill="rgb(239,41,33)"/><text x="448.00" y="878.50"></text></g><g><title>0x7f55f6f071f0 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="884" width="1" height="15" fill="rgb(248,216,2)"/><text x="448.00" y="894.50"></text></g><g><title>0x7f55f6f01876 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="900" width="1" height="15" fill="rgb(212,9,37)"/><text x="448.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="916" width="1" height="15" fill="rgb(214,178,38)"/><text x="448.00" y="926.50"></text></g><g><title>0x7f55f6f01501 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="932" width="1" height="15" fill="rgb(241,66,40)"/><text x="448.00" y="942.50"></text></g><g><title>0x7f55f6efcf4a (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="948" width="1" height="15" fill="rgb(242,133,31)"/><text x="448.00" y="958.50"></text></g><g><title>0x7f55f6f0a438 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="964" width="1" height="15" fill="rgb(249,53,23)"/><text x="448.00" y="974.50"></text></g><g><title>0x7f55f6f0429d (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="980" width="1" height="15" fill="rgb(217,55,33)"/><text x="448.00" y="990.50"></text></g><g><title>0x7f55f6f0ebd2 (ld-2.29.so) (1 samples, 0.10%)</title><rect x="445" y="996" width="1" height="15" fill="rgb(246,143,38)"/><text x="448.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.10%)</title><rect x="446" y="852" width="2" height="15" fill="rgb(219,163,13)"/><text x="449.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.10%)</title><rect x="446" y="868" width="2" height="15" fill="rgb(239,86,53)"/><text x="449.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.10%)</title><rect x="446" y="884" width="2" height="15" fill="rgb(238,180,49)"/><text x="449.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.10%)</title><rect x="446" y="900" width="2" height="15" fill="rgb(230,188,6)"/><text x="449.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.10%)</title><rect x="446" y="916" width="2" height="15" fill="rgb(250,175,47)"/><text x="449.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.10%)</title><rect x="446" y="932" width="2" height="15" fill="rgb(222,124,2)"/><text x="449.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="446" y="948" width="2" height="15" fill="rgb(244,178,1)"/><text x="449.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.10%)</title><rect x="446" y="964" width="2" height="15" fill="rgb(216,210,36)"/><text x="449.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.10%)</title><rect x="446" y="980" width="2" height="15" fill="rgb(222,189,37)"/><text x="449.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.10%)</title><rect x="446" y="996" width="2" height="15" fill="rgb(252,115,28)"/><text x="449.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:362) (1 samples, 0.10%)</title><rect x="446" y="1012" width="2" height="15" fill="rgb(224,32,2)"/><text x="449.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:227) (1 samples, 0.10%)</title><rect x="448" y="964" width="1" height="15" fill="rgb(206,218,28)"/><text x="451.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.21%)</title><rect x="448" y="948" width="2" height="15" fill="rgb(245,105,0)"/><text x="451.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.10%)</title><rect x="449" y="964" width="1" height="15" fill="rgb(244,49,42)"/><text x="452.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.10%)</title><rect x="449" y="980" width="1" height="15" fill="rgb(246,168,30)"/><text x="452.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.31%)</title><rect x="448" y="884" width="3" height="15" fill="rgb(217,161,1)"/><text x="451.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.31%)</title><rect x="448" y="900" width="3" height="15" fill="rgb(221,4,15)"/><text x="451.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 0.31%)</title><rect x="448" y="916" width="3" height="15" fill="rgb(225,12,20)"/><text x="451.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 0.31%)</title><rect x="448" y="932" width="3" height="15" fill="rgb(210,133,41)"/><text x="451.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.10%)</title><rect x="450" y="948" width="1" height="15" fill="rgb(254,194,27)"/><text x="453.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.10%)</title><rect x="450" y="964" width="1" height="15" fill="rgb(254,11,52)"/><text x="453.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.52%)</title><rect x="446" y="820" width="6" height="15" fill="rgb(238,149,27)"/><text x="449.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.52%)</title><rect x="446" y="836" width="6" height="15" fill="rgb(226,29,16)"/><text x="449.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 0.41%)</title><rect x="448" y="852" width="4" height="15" fill="rgb(230,198,28)"/><text x="451.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.41%)</title><rect x="448" y="868" width="4" height="15" fill="rgb(230,213,17)"/><text x="451.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.10%)</title><rect x="451" y="884" width="1" height="15" fill="rgb(232,2,47)"/><text x="454.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.10%)</title><rect x="451" y="900" width="1" height="15" fill="rgb(238,79,4)"/><text x="454.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.10%)</title><rect x="451" y="916" width="1" height="15" fill="rgb(238,216,10)"/><text x="454.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="451" y="932" width="1" height="15" fill="rgb(235,81,12)"/><text x="454.00" y="942.50"></text></g><g><title>0x7f55f6c71237 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="451" y="948" width="1" height="15" fill="rgb(246,149,0)"/><text x="454.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:2) (6 samples, 0.62%)</title><rect x="446" y="148" width="8" height="15" fill="rgb(239,219,1)"/><text x="449.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="164" width="8" height="15" fill="rgb(237,110,30)"/><text x="449.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.62%)</title><rect x="446" y="180" width="8" height="15" fill="rgb(209,122,19)"/><text x="449.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="196" width="8" height="15" fill="rgb(209,23,22)"/><text x="449.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="212" width="8" height="15" fill="rgb(216,61,29)"/><text x="449.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="228" width="8" height="15" fill="rgb(228,68,6)"/><text x="449.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="244" width="8" height="15" fill="rgb(232,174,21)"/><text x="449.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="260" width="8" height="15" fill="rgb(217,60,38)"/><text x="449.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="276" width="8" height="15" fill="rgb(224,146,53)"/><text x="449.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.62%)</title><rect x="446" y="292" width="8" height="15" fill="rgb(219,121,16)"/><text x="449.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="308" width="8" height="15" fill="rgb(212,152,38)"/><text x="449.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="324" width="8" height="15" fill="rgb(252,202,42)"/><text x="449.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="340" width="8" height="15" fill="rgb(235,172,42)"/><text x="449.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="356" width="8" height="15" fill="rgb(208,73,15)"/><text x="449.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="372" width="8" height="15" fill="rgb(207,160,5)"/><text x="449.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.62%)</title><rect x="446" y="388" width="8" height="15" fill="rgb(232,4,4)"/><text x="449.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="404" width="8" height="15" fill="rgb(217,80,36)"/><text x="449.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="420" width="8" height="15" fill="rgb(213,71,46)"/><text x="449.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="436" width="8" height="15" fill="rgb(224,94,0)"/><text x="449.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="452" width="8" height="15" fill="rgb(230,225,28)"/><text x="449.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="468" width="8" height="15" fill="rgb(235,24,42)"/><text x="449.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.62%)</title><rect x="446" y="484" width="8" height="15" fill="rgb(239,193,20)"/><text x="449.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="500" width="8" height="15" fill="rgb(218,68,23)"/><text x="449.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="516" width="8" height="15" fill="rgb(236,140,20)"/><text x="449.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="532" width="8" height="15" fill="rgb(226,42,5)"/><text x="449.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="548" width="8" height="15" fill="rgb(219,103,43)"/><text x="449.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="564" width="8" height="15" fill="rgb(239,64,4)"/><text x="449.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 0.62%)</title><rect x="446" y="580" width="8" height="15" fill="rgb(209,137,47)"/><text x="449.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="596" width="8" height="15" fill="rgb(233,228,10)"/><text x="449.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.62%)</title><rect x="446" y="612" width="8" height="15" fill="rgb(221,163,25)"/><text x="449.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="628" width="8" height="15" fill="rgb(242,31,24)"/><text x="449.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="644" width="8" height="15" fill="rgb(230,92,34)"/><text x="449.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="660" width="8" height="15" fill="rgb(215,137,41)"/><text x="449.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="676" width="8" height="15" fill="rgb(244,165,2)"/><text x="449.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="692" width="8" height="15" fill="rgb(222,195,37)"/><text x="449.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="708" width="8" height="15" fill="rgb(235,98,35)"/><text x="449.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 0.62%)</title><rect x="446" y="724" width="8" height="15" fill="rgb(248,172,49)"/><text x="449.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.62%)</title><rect x="446" y="740" width="8" height="15" fill="rgb(209,127,27)"/><text x="449.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.62%)</title><rect x="446" y="756" width="8" height="15" fill="rgb(236,198,16)"/><text x="449.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.62%)</title><rect x="446" y="772" width="8" height="15" fill="rgb(206,172,35)"/><text x="449.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.62%)</title><rect x="446" y="788" width="8" height="15" fill="rgb(228,36,20)"/><text x="449.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.62%)</title><rect x="446" y="804" width="8" height="15" fill="rgb(211,187,24)"/><text x="449.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:41) (1 samples, 0.10%)</title><rect x="452" y="820" width="2" height="15" fill="rgb(225,61,4)"/><text x="455.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="452" y="836" width="2" height="15" fill="rgb(247,119,49)"/><text x="455.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="452" y="852" width="2" height="15" fill="rgb(228,55,27)"/><text x="455.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="452" y="868" width="2" height="15" fill="rgb(243,13,6)"/><text x="455.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="452" y="884" width="2" height="15" fill="rgb(227,62,10)"/><text x="455.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.10%)</title><rect x="452" y="900" width="2" height="15" fill="rgb(241,115,17)"/><text x="455.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.10%)</title><rect x="452" y="916" width="2" height="15" fill="rgb(223,140,41)"/><text x="455.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.10%)</title><rect x="454" y="244" width="1" height="15" fill="rgb(238,31,37)"/><text x="457.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="260" width="1" height="15" fill="rgb(219,219,38)"/><text x="457.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="276" width="1" height="15" fill="rgb(233,218,35)"/><text x="457.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="292" width="1" height="15" fill="rgb(238,4,37)"/><text x="457.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="308" width="1" height="15" fill="rgb(212,141,49)"/><text x="457.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="324" width="1" height="15" fill="rgb(218,111,43)"/><text x="457.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.10%)</title><rect x="454" y="340" width="1" height="15" fill="rgb(233,16,43)"/><text x="457.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="356" width="1" height="15" fill="rgb(253,194,9)"/><text x="457.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="454" y="372" width="1" height="15" fill="rgb(209,139,54)"/><text x="457.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="388" width="1" height="15" fill="rgb(246,117,14)"/><text x="457.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="404" width="1" height="15" fill="rgb(215,171,35)"/><text x="457.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="420" width="1" height="15" fill="rgb(241,162,26)"/><text x="457.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="436" width="1" height="15" fill="rgb(240,207,15)"/><text x="457.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="452" width="1" height="15" fill="rgb(243,194,45)"/><text x="457.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="468" width="1" height="15" fill="rgb(207,59,15)"/><text x="457.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.10%)</title><rect x="454" y="484" width="1" height="15" fill="rgb(210,229,28)"/><text x="457.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="500" width="1" height="15" fill="rgb(219,224,11)"/><text x="457.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="516" width="1" height="15" fill="rgb(213,153,43)"/><text x="457.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="532" width="1" height="15" fill="rgb(228,171,52)"/><text x="457.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="548" width="1" height="15" fill="rgb(216,73,25)"/><text x="457.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="564" width="1" height="15" fill="rgb(226,154,46)"/><text x="457.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.10%)</title><rect x="454" y="580" width="1" height="15" fill="rgb(253,198,10)"/><text x="457.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="596" width="1" height="15" fill="rgb(227,193,39)"/><text x="457.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="612" width="1" height="15" fill="rgb(212,215,1)"/><text x="457.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="628" width="1" height="15" fill="rgb(212,200,48)"/><text x="457.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="644" width="1" height="15" fill="rgb(240,58,3)"/><text x="457.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="660" width="1" height="15" fill="rgb(216,33,53)"/><text x="457.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.10%)</title><rect x="454" y="676" width="1" height="15" fill="rgb(214,12,20)"/><text x="457.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="692" width="1" height="15" fill="rgb(207,123,19)"/><text x="457.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="708" width="1" height="15" fill="rgb(233,159,14)"/><text x="457.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="724" width="1" height="15" fill="rgb(236,68,11)"/><text x="457.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="740" width="1" height="15" fill="rgb(216,172,33)"/><text x="457.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="756" width="1" height="15" fill="rgb(214,146,45)"/><text x="457.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.10%)</title><rect x="454" y="772" width="1" height="15" fill="rgb(212,157,43)"/><text x="457.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="454" y="788" width="1" height="15" fill="rgb(215,197,49)"/><text x="457.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="804" width="1" height="15" fill="rgb(217,169,47)"/><text x="457.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="820" width="1" height="15" fill="rgb(253,34,19)"/><text x="457.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="454" y="836" width="1" height="15" fill="rgb(214,13,11)"/><text x="457.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="454" y="852" width="1" height="15" fill="rgb(224,12,5)"/><text x="457.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="454" y="868" width="1" height="15" fill="rgb(217,143,20)"/><text x="457.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="884" width="1" height="15" fill="rgb(253,85,31)"/><text x="457.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:66) (1 samples, 0.10%)</title><rect x="454" y="900" width="1" height="15" fill="rgb(219,154,44)"/><text x="457.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="916" width="1" height="15" fill="rgb(219,101,45)"/><text x="457.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.10%)</title><rect x="454" y="932" width="1" height="15" fill="rgb(226,163,33)"/><text x="457.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="454" y="948" width="1" height="15" fill="rgb(212,18,39)"/><text x="457.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="454" y="964" width="1" height="15" fill="rgb(223,72,43)"/><text x="457.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.10%)</title><rect x="454" y="980" width="1" height="15" fill="rgb(221,142,39)"/><text x="457.00" y="990.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.10%)</title><rect x="454" y="996" width="1" height="15" fill="rgb(245,35,0)"/><text x="457.00" y="1006.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.10%)</title><rect x="454" y="1012" width="1" height="15" fill="rgb(229,51,37)"/><text x="457.00" y="1022.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1247) (1 samples, 0.10%)</title><rect x="454" y="1028" width="1" height="15" fill="rgb(218,7,32)"/><text x="457.00" y="1038.50"></text></g><g><title>root (&lt;template&gt;:28) (1 samples, 0.10%)</title><rect x="456" y="1572" width="1" height="15" fill="rgb(214,176,35)"/><text x="459.00" y="1582.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.31%)</title><rect x="455" y="1460" width="4" height="15" fill="rgb(242,99,35)"/><text x="458.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.31%)</title><rect x="455" y="1476" width="4" height="15" fill="rgb(212,62,34)"/><text x="458.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.31%)</title><rect x="455" y="1492" width="4" height="15" fill="rgb(240,91,16)"/><text x="458.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.31%)</title><rect x="455" y="1508" width="4" height="15" fill="rgb(233,153,25)"/><text x="458.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.31%)</title><rect x="455" y="1524" width="4" height="15" fill="rgb(230,91,21)"/><text x="458.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.21%)</title><rect x="456" y="1540" width="3" height="15" fill="rgb(238,206,16)"/><text x="459.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.21%)</title><rect x="456" y="1556" width="3" height="15" fill="rgb(244,74,31)"/><text x="459.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.10%)</title><rect x="457" y="1572" width="2" height="15" fill="rgb(238,188,36)"/><text x="460.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.10%)</title><rect x="457" y="1588" width="2" height="15" fill="rgb(219,170,37)"/><text x="460.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.10%)</title><rect x="457" y="1604" width="2" height="15" fill="rgb(230,167,20)"/><text x="460.00" y="1614.50"></text></g><g><title>0x7f55e4f7f6b3 (?) (1 samples, 0.10%)</title><rect x="457" y="1620" width="2" height="15" fill="rgb(221,177,10)"/><text x="460.00" y="1630.50"></text></g><g><title>0x7f55e50258e7 (?) (1 samples, 0.10%)</title><rect x="457" y="1636" width="2" height="15" fill="rgb(240,31,3)"/><text x="460.00" y="1646.50"></text></g><g><title>0x7f55e50246ce (?) (1 samples, 0.10%)</title><rect x="457" y="1652" width="2" height="15" fill="rgb(211,163,1)"/><text x="460.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:4) (13 samples, 1.34%)</title><rect x="444" y="52" width="16" height="15" fill="rgb(250,50,41)"/><text x="447.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.34%)</title><rect x="444" y="68" width="16" height="15" fill="rgb(233,54,17)"/><text x="447.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.34%)</title><rect x="444" y="84" width="16" height="15" fill="rgb(212,174,41)"/><text x="447.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.34%)</title><rect x="444" y="100" width="16" height="15" fill="rgb(243,173,2)"/><text x="447.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 1.34%)</title><rect x="444" y="116" width="16" height="15" fill="rgb(208,99,13)"/><text x="447.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 1.34%)</title><rect x="444" y="132" width="16" height="15" fill="rgb(213,55,12)"/><text x="447.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py:7) (5 samples, 0.52%)</title><rect x="454" y="148" width="6" height="15" fill="rgb(252,7,12)"/><text x="457.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.52%)</title><rect x="454" y="164" width="6" height="15" fill="rgb(251,201,41)"/><text x="457.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.52%)</title><rect x="454" y="180" width="6" height="15" fill="rgb(207,9,13)"/><text x="457.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.52%)</title><rect x="454" y="196" width="6" height="15" fill="rgb(251,14,18)"/><text x="457.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.52%)</title><rect x="454" y="212" width="6" height="15" fill="rgb(221,48,42)"/><text x="457.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.52%)</title><rect x="454" y="228" width="6" height="15" fill="rgb(243,194,47)"/><text x="457.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.41%)</title><rect x="455" y="244" width="5" height="15" fill="rgb(213,74,50)"/><text x="458.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="260" width="5" height="15" fill="rgb(222,215,12)"/><text x="458.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="276" width="5" height="15" fill="rgb(248,114,4)"/><text x="458.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="292" width="5" height="15" fill="rgb(230,24,44)"/><text x="458.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="308" width="5" height="15" fill="rgb(243,194,7)"/><text x="458.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="324" width="5" height="15" fill="rgb(226,107,47)"/><text x="458.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.41%)</title><rect x="455" y="340" width="5" height="15" fill="rgb(226,9,49)"/><text x="458.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="356" width="5" height="15" fill="rgb(248,82,22)"/><text x="458.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="372" width="5" height="15" fill="rgb(247,117,43)"/><text x="458.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="388" width="5" height="15" fill="rgb(213,198,28)"/><text x="458.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="404" width="5" height="15" fill="rgb(249,157,35)"/><text x="458.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="420" width="5" height="15" fill="rgb(210,3,7)"/><text x="458.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.41%)</title><rect x="455" y="436" width="5" height="15" fill="rgb(224,53,16)"/><text x="458.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="452" width="5" height="15" fill="rgb(208,31,40)"/><text x="458.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="455" y="468" width="5" height="15" fill="rgb(238,16,37)"/><text x="458.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="484" width="5" height="15" fill="rgb(211,51,13)"/><text x="458.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="500" width="5" height="15" fill="rgb(250,129,9)"/><text x="458.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="516" width="5" height="15" fill="rgb(238,165,30)"/><text x="458.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="532" width="5" height="15" fill="rgb(239,212,46)"/><text x="458.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="548" width="5" height="15" fill="rgb(254,195,51)"/><text x="458.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="564" width="5" height="15" fill="rgb(254,90,35)"/><text x="458.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.41%)</title><rect x="455" y="580" width="5" height="15" fill="rgb(213,204,27)"/><text x="458.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="596" width="5" height="15" fill="rgb(227,112,43)"/><text x="458.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="612" width="5" height="15" fill="rgb(236,137,24)"/><text x="458.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="628" width="5" height="15" fill="rgb(218,13,22)"/><text x="458.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="644" width="5" height="15" fill="rgb(245,209,1)"/><text x="458.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="660" width="5" height="15" fill="rgb(234,203,9)"/><text x="458.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.41%)</title><rect x="455" y="676" width="5" height="15" fill="rgb(214,16,44)"/><text x="458.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="692" width="5" height="15" fill="rgb(210,128,53)"/><text x="458.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="708" width="5" height="15" fill="rgb(210,0,21)"/><text x="458.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="724" width="5" height="15" fill="rgb(228,69,6)"/><text x="458.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="740" width="5" height="15" fill="rgb(250,111,12)"/><text x="458.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="756" width="5" height="15" fill="rgb(248,153,45)"/><text x="458.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.41%)</title><rect x="455" y="772" width="5" height="15" fill="rgb(217,174,47)"/><text x="458.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="788" width="5" height="15" fill="rgb(248,156,17)"/><text x="458.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="804" width="5" height="15" fill="rgb(207,106,28)"/><text x="458.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="820" width="5" height="15" fill="rgb(216,183,39)"/><text x="458.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="836" width="5" height="15" fill="rgb(211,64,33)"/><text x="458.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="852" width="5" height="15" fill="rgb(220,190,15)"/><text x="458.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.41%)</title><rect x="455" y="868" width="5" height="15" fill="rgb(227,132,37)"/><text x="458.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="884" width="5" height="15" fill="rgb(236,11,8)"/><text x="458.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.41%)</title><rect x="455" y="900" width="5" height="15" fill="rgb(233,197,50)"/><text x="458.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="916" width="5" height="15" fill="rgb(210,172,17)"/><text x="458.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="932" width="5" height="15" fill="rgb(205,23,28)"/><text x="458.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="948" width="5" height="15" fill="rgb(229,178,1)"/><text x="458.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="964" width="5" height="15" fill="rgb(209,152,37)"/><text x="458.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="980" width="5" height="15" fill="rgb(229,4,30)"/><text x="458.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="996" width="5" height="15" fill="rgb(214,195,31)"/><text x="458.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.41%)</title><rect x="455" y="1012" width="5" height="15" fill="rgb(252,46,17)"/><text x="458.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="1028" width="5" height="15" fill="rgb(240,211,10)"/><text x="458.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="1044" width="5" height="15" fill="rgb(250,12,38)"/><text x="458.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="1060" width="5" height="15" fill="rgb(244,214,27)"/><text x="458.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="1076" width="5" height="15" fill="rgb(223,106,28)"/><text x="458.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1092" width="5" height="15" fill="rgb(250,53,13)"/><text x="458.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.41%)</title><rect x="455" y="1108" width="5" height="15" fill="rgb(224,117,22)"/><text x="458.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.41%)</title><rect x="455" y="1124" width="5" height="15" fill="rgb(219,53,43)"/><text x="458.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1140" width="5" height="15" fill="rgb(232,181,8)"/><text x="458.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="1156" width="5" height="15" fill="rgb(248,194,33)"/><text x="458.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="1172" width="5" height="15" fill="rgb(242,211,46)"/><text x="458.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="1188" width="5" height="15" fill="rgb(246,163,50)"/><text x="458.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="1204" width="5" height="15" fill="rgb(247,74,16)"/><text x="458.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1220" width="5" height="15" fill="rgb(210,6,33)"/><text x="458.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.41%)</title><rect x="455" y="1236" width="5" height="15" fill="rgb(220,100,8)"/><text x="458.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.41%)</title><rect x="455" y="1252" width="5" height="15" fill="rgb(242,182,8)"/><text x="458.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1268" width="5" height="15" fill="rgb(208,36,1)"/><text x="458.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="1284" width="5" height="15" fill="rgb(208,229,21)"/><text x="458.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="1300" width="5" height="15" fill="rgb(251,77,35)"/><text x="458.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="1316" width="5" height="15" fill="rgb(217,108,3)"/><text x="458.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="1332" width="5" height="15" fill="rgb(249,174,39)"/><text x="458.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1348" width="5" height="15" fill="rgb(213,7,46)"/><text x="458.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.41%)</title><rect x="455" y="1364" width="5" height="15" fill="rgb(234,166,29)"/><text x="458.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.41%)</title><rect x="455" y="1380" width="5" height="15" fill="rgb(207,76,51)"/><text x="458.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.41%)</title><rect x="455" y="1396" width="5" height="15" fill="rgb(233,48,14)"/><text x="458.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.41%)</title><rect x="455" y="1412" width="5" height="15" fill="rgb(241,140,54)"/><text x="458.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.41%)</title><rect x="455" y="1428" width="5" height="15" fill="rgb(233,139,9)"/><text x="458.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.41%)</title><rect x="455" y="1444" width="5" height="15" fill="rgb(209,43,20)"/><text x="458.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.10%)</title><rect x="459" y="1460" width="1" height="15" fill="rgb(214,33,26)"/><text x="462.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="459" y="1476" width="1" height="15" fill="rgb(207,154,41)"/><text x="462.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="459" y="1492" width="1" height="15" fill="rgb(232,0,25)"/><text x="462.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="459" y="1508" width="1" height="15" fill="rgb(235,38,38)"/><text x="462.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="459" y="1524" width="1" height="15" fill="rgb(225,148,25)"/><text x="462.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="459" y="1540" width="1" height="15" fill="rgb(208,154,49)"/><text x="462.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.10%)</title><rect x="459" y="1556" width="1" height="15" fill="rgb(238,201,52)"/><text x="462.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.10%)</title><rect x="459" y="1572" width="1" height="15" fill="rgb(242,197,54)"/><text x="462.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.10%)</title><rect x="459" y="1588" width="1" height="15" fill="rgb(214,59,30)"/><text x="462.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.10%)</title><rect x="459" y="1604" width="1" height="15" fill="rgb(229,217,19)"/><text x="462.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.10%)</title><rect x="459" y="1620" width="1" height="15" fill="rgb(227,212,9)"/><text x="462.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.10%)</title><rect x="459" y="1636" width="1" height="15" fill="rgb(231,224,47)"/><text x="462.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.10%)</title><rect x="459" y="1652" width="1" height="15" fill="rgb(217,195,45)"/><text x="462.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.10%)</title><rect x="459" y="1668" width="1" height="15" fill="rgb(235,79,31)"/><text x="462.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.10%)</title><rect x="459" y="1684" width="1" height="15" fill="rgb(250,0,2)"/><text x="462.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.10%)</title><rect x="459" y="1700" width="1" height="15" fill="rgb(221,41,32)"/><text x="462.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.10%)</title><rect x="459" y="1716" width="1" height="15" fill="rgb(212,117,14)"/><text x="462.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.10%)</title><rect x="459" y="1732" width="1" height="15" fill="rgb(245,86,23)"/><text x="462.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.10%)</title><rect x="459" y="1748" width="1" height="15" fill="rgb(225,164,8)"/><text x="462.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.10%)</title><rect x="459" y="1764" width="1" height="15" fill="rgb(226,154,9)"/><text x="462.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.10%)</title><rect x="459" y="1780" width="1" height="15" fill="rgb(239,186,11)"/><text x="462.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.10%)</title><rect x="459" y="1796" width="1" height="15" fill="rgb(224,216,13)"/><text x="462.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.10%)</title><rect x="459" y="1812" width="1" height="15" fill="rgb(248,214,54)"/><text x="462.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.10%)</title><rect x="459" y="1828" width="1" height="15" fill="rgb(251,110,4)"/><text x="462.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.10%)</title><rect x="459" y="1844" width="1" height="15" fill="rgb(229,69,16)"/><text x="462.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.10%)</title><rect x="459" y="1860" width="1" height="15" fill="rgb(244,89,16)"/><text x="462.00" y="1870.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.10%)</title><rect x="459" y="1876" width="1" height="15" fill="rgb(230,33,48)"/><text x="462.00" y="1886.50"></text></g><g><title>parse_if (jinja2/parser.py:211) (1 samples, 0.10%)</title><rect x="459" y="1892" width="1" height="15" fill="rgb(238,75,47)"/><text x="462.00" y="1902.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.10%)</title><rect x="459" y="1908" width="1" height="15" fill="rgb(213,222,23)"/><text x="462.00" y="1918.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py:612) (1 samples, 0.10%)</title><rect x="459" y="1924" width="1" height="15" fill="rgb(218,156,19)"/><text x="462.00" y="1934.50"></text></g><g><title>parse_expression (jinja2/parser.py:433) (1 samples, 0.10%)</title><rect x="459" y="1940" width="1" height="15" fill="rgb(231,115,6)"/><text x="462.00" y="1950.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.10%)</title><rect x="459" y="1956" width="1" height="15" fill="rgb(230,73,23)"/><text x="462.00" y="1966.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.10%)</title><rect x="459" y="1972" width="1" height="15" fill="rgb(223,162,24)"/><text x="462.00" y="1982.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.10%)</title><rect x="459" y="1988" width="1" height="15" fill="rgb(234,180,0)"/><text x="462.00" y="1998.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.10%)</title><rect x="459" y="2004" width="1" height="15" fill="rgb(210,163,37)"/><text x="462.00" y="2014.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.10%)</title><rect x="459" y="2020" width="1" height="15" fill="rgb(246,37,49)"/><text x="462.00" y="2030.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.10%)</title><rect x="459" y="2036" width="1" height="15" fill="rgb(224,142,39)"/><text x="462.00" y="2046.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.10%)</title><rect x="459" y="2052" width="1" height="15" fill="rgb(215,84,8)"/><text x="462.00" y="2062.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.10%)</title><rect x="459" y="2068" width="1" height="15" fill="rgb(252,22,50)"/><text x="462.00" y="2078.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.10%)</title><rect x="459" y="2084" width="1" height="15" fill="rgb(227,14,49)"/><text x="462.00" y="2094.50"></text></g><g><title>parse_postfix (jinja2/parser.py:672) (1 samples, 0.10%)</title><rect x="459" y="2100" width="1" height="15" fill="rgb(208,142,33)"/><text x="462.00" y="2110.50"></text></g><g><title>parse_subscript (jinja2/parser.py:697) (1 samples, 0.10%)</title><rect x="459" y="2116" width="1" height="15" fill="rgb(218,160,43)"/><text x="462.00" y="2126.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.10%)</title><rect x="459" y="2132" width="1" height="15" fill="rgb(230,85,1)"/><text x="462.00" y="2142.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.10%)</title><rect x="459" y="2148" width="1" height="15" fill="rgb(238,222,42)"/><text x="462.00" y="2158.50"></text></g><g><title>tokeniter (jinja2/lexer.py:694) (1 samples, 0.10%)</title><rect x="459" y="2164" width="1" height="15" fill="rgb(237,165,17)"/><text x="462.00" y="2174.50"></text></g><g><title>unicode_count (python3.7) (1 samples, 0.10%)</title><rect x="459" y="2180" width="1" height="15" fill="rgb(208,131,48)"/><text x="462.00" y="2190.50"></text></g><g><title>0x7f55f6c4d656 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="459" y="2196" width="1" height="15" fill="rgb(212,93,4)"/><text x="462.00" y="2206.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:28) (1 samples, 0.10%)</title><rect x="460" y="84" width="1" height="15" fill="rgb(208,58,9)"/><text x="463.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="460" y="100" width="1" height="15" fill="rgb(223,99,32)"/><text x="463.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.10%)</title><rect x="460" y="116" width="1" height="15" fill="rgb(221,120,31)"/><text x="463.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.10%)</title><rect x="460" y="132" width="1" height="15" fill="rgb(205,197,47)"/><text x="463.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.10%)</title><rect x="460" y="148" width="1" height="15" fill="rgb(216,133,28)"/><text x="463.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:135) (1 samples, 0.10%)</title><rect x="460" y="164" width="1" height="15" fill="rgb(225,14,9)"/><text x="463.00" y="174.50"></text></g><g><title>compile (skl2onnx/common/_topology.py:840) (1 samples, 0.10%)</title><rect x="460" y="180" width="1" height="15" fill="rgb(210,208,48)"/><text x="463.00" y="190.50"></text></g><g><title>_infer_all_types (skl2onnx/common/_topology.py:689) (1 samples, 0.10%)</title><rect x="460" y="196" width="1" height="15" fill="rgb(206,96,2)"/><text x="463.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.41%)</title><rect x="463" y="180" width="5" height="15" fill="rgb(222,59,4)"/><text x="466.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.10%)</title><rect x="467" y="196" width="1" height="15" fill="rgb(227,150,40)"/><text x="470.00" y="206.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.10%)</title><rect x="472" y="276" width="1" height="15" fill="rgb(248,65,11)"/><text x="475.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.10%)</title><rect x="472" y="292" width="1" height="15" fill="rgb(234,31,41)"/><text x="475.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.10%)</title><rect x="472" y="308" width="1" height="15" fill="rgb(210,92,8)"/><text x="475.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.10%)</title><rect x="472" y="324" width="1" height="15" fill="rgb(240,154,26)"/><text x="475.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.10%)</title><rect x="472" y="340" width="1" height="15" fill="rgb(224,17,13)"/><text x="475.00" y="350.50"></text></g><g><title>0x7f55f5e540a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="472" y="356" width="1" height="15" fill="rgb(219,61,38)"/><text x="475.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (2 samples, 0.21%)</title><rect x="472" y="212" width="2" height="15" fill="rgb(252,179,25)"/><text x="475.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.21%)</title><rect x="472" y="228" width="2" height="15" fill="rgb(245,101,12)"/><text x="475.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.21%)</title><rect x="472" y="244" width="2" height="15" fill="rgb(247,126,31)"/><text x="475.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.21%)</title><rect x="472" y="260" width="2" height="15" fill="rgb(221,172,12)"/><text x="475.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.10%)</title><rect x="473" y="276" width="1" height="15" fill="rgb(242,28,46)"/><text x="476.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (1 samples, 0.10%)</title><rect x="473" y="292" width="1" height="15" fill="rgb(216,86,20)"/><text x="476.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.10%)</title><rect x="473" y="308" width="1" height="15" fill="rgb(235,218,3)"/><text x="476.00" y="318.50"></text></g><g><title>0x7f55f5e543f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="473" y="324" width="1" height="15" fill="rgb(218,24,1)"/><text x="476.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.31%)</title><rect x="472" y="196" width="4" height="15" fill="rgb(228,72,47)"/><text x="475.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.10%)</title><rect x="474" y="212" width="2" height="15" fill="rgb(213,223,43)"/><text x="477.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.10%)</title><rect x="474" y="228" width="2" height="15" fill="rgb(205,108,39)"/><text x="477.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="474" y="244" width="2" height="15" fill="rgb(229,102,0)"/><text x="477.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.10%)</title><rect x="474" y="260" width="2" height="15" fill="rgb(235,177,3)"/><text x="477.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.10%)</title><rect x="474" y="276" width="2" height="15" fill="rgb(210,102,52)"/><text x="477.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:633) (1 samples, 0.10%)</title><rect x="474" y="292" width="2" height="15" fill="rgb(215,38,48)"/><text x="477.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="477" y="244" width="1" height="15" fill="rgb(251,30,53)"/><text x="480.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="477" y="260" width="1" height="15" fill="rgb(246,99,40)"/><text x="480.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="477" y="276" width="1" height="15" fill="rgb(242,169,1)"/><text x="480.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="477" y="292" width="1" height="15" fill="rgb(207,215,21)"/><text x="480.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="477" y="308" width="1" height="15" fill="rgb(209,3,1)"/><text x="480.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.10%)</title><rect x="478" y="260" width="1" height="15" fill="rgb(247,180,18)"/><text x="481.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.10%)</title><rect x="478" y="276" width="1" height="15" fill="rgb(251,224,1)"/><text x="481.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.10%)</title><rect x="479" y="276" width="2" height="15" fill="rgb(236,166,36)"/><text x="482.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.10%)</title><rect x="479" y="292" width="2" height="15" fill="rgb(209,64,25)"/><text x="482.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:814) (1 samples, 0.10%)</title><rect x="479" y="308" width="2" height="15" fill="rgb(216,80,20)"/><text x="482.00" y="318.50"></text></g><g><title>strides_to_terms (mem_overlap.c:719) (1 samples, 0.10%)</title><rect x="479" y="324" width="2" height="15" fill="rgb(243,226,9)"/><text x="482.00" y="334.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.10%)</title><rect x="481" y="292" width="1" height="15" fill="rgb(222,152,45)"/><text x="484.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.10%)</title><rect x="481" y="308" width="1" height="15" fill="rgb(213,45,6)"/><text x="484.00" y="318.50"></text></g><g><title>0x7f55f6db39a4 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="482" y="324" width="1" height="15" fill="rgb(219,215,11)"/><text x="485.00" y="334.50"></text></g><g><title>0x7f55f6db39bd (libm-2.29.so) (1 samples, 0.10%)</title><rect x="483" y="324" width="1" height="15" fill="rgb(234,200,16)"/><text x="486.00" y="334.50"></text></g><g><title>0x7f55f6db39f8 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="484" y="324" width="3" height="15" fill="rgb(253,98,5)"/><text x="487.00" y="334.50"></text></g><g><title>0x7f55f6db3a15 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="487" y="324" width="2" height="15" fill="rgb(230,208,39)"/><text x="490.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (13 samples, 1.34%)</title><rect x="477" y="228" width="16" height="15" fill="rgb(205,216,14)"/><text x="480.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.24%)</title><rect x="478" y="244" width="15" height="15" fill="rgb(223,88,9)"/><text x="481.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.14%)</title><rect x="479" y="260" width="14" height="15" fill="rgb(232,101,19)"/><text x="482.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (10 samples, 1.03%)</title><rect x="481" y="276" width="12" height="15" fill="rgb(221,162,50)"/><text x="484.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (9 samples, 0.93%)</title><rect x="482" y="292" width="11" height="15" fill="rgb(238,76,18)"/><text x="485.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (9 samples, 0.93%)</title><rect x="482" y="308" width="11" height="15" fill="rgb(213,16,41)"/><text x="485.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (3 samples, 0.31%)</title><rect x="489" y="324" width="4" height="15" fill="rgb(215,190,27)"/><text x="492.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:27) (1 samples, 0.10%)</title><rect x="493" y="228" width="1" height="15" fill="rgb(205,67,54)"/><text x="496.00" y="238.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="496" y="388" width="2" height="15" fill="rgb(237,8,54)"/><text x="499.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.21%)</title><rect x="496" y="308" width="3" height="15" fill="rgb(231,197,20)"/><text x="499.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.21%)</title><rect x="496" y="324" width="3" height="15" fill="rgb(209,214,20)"/><text x="499.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.21%)</title><rect x="496" y="340" width="3" height="15" fill="rgb(247,197,50)"/><text x="499.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.21%)</title><rect x="496" y="356" width="3" height="15" fill="rgb(214,68,37)"/><text x="499.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.21%)</title><rect x="496" y="372" width="3" height="15" fill="rgb(216,38,42)"/><text x="499.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.10%)</title><rect x="498" y="388" width="1" height="15" fill="rgb(218,114,11)"/><text x="501.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (2 samples, 0.21%)</title><rect x="499" y="324" width="2" height="15" fill="rgb(250,98,51)"/><text x="502.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (2 samples, 0.21%)</title><rect x="499" y="340" width="2" height="15" fill="rgb(227,119,20)"/><text x="502.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (2 samples, 0.21%)</title><rect x="499" y="356" width="2" height="15" fill="rgb(225,108,17)"/><text x="502.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (2 samples, 0.21%)</title><rect x="499" y="372" width="2" height="15" fill="rgb(236,50,47)"/><text x="502.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.10%)</title><rect x="501" y="340" width="1" height="15" fill="rgb(223,149,5)"/><text x="504.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.10%)</title><rect x="501" y="356" width="1" height="15" fill="rgb(224,190,18)"/><text x="504.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="502" y="340" width="2" height="15" fill="rgb(225,108,1)"/><text x="505.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="502" y="356" width="2" height="15" fill="rgb(223,86,13)"/><text x="505.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(241,166,41)"/><text x="505.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.10%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(216,70,30)"/><text x="505.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.10%)</title><rect x="502" y="404" width="2" height="15" fill="rgb(231,17,29)"/><text x="505.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="502" y="420" width="2" height="15" fill="rgb(233,161,11)"/><text x="505.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="504" y="356" width="1" height="15" fill="rgb(251,113,14)"/><text x="507.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.10%)</title><rect x="504" y="372" width="1" height="15" fill="rgb(252,178,54)"/><text x="507.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="505" y="388" width="1" height="15" fill="rgb(231,219,49)"/><text x="508.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (2 samples, 0.21%)</title><rect x="506" y="404" width="3" height="15" fill="rgb(247,62,4)"/><text x="509.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.31%)</title><rect x="506" y="388" width="4" height="15" fill="rgb(224,42,38)"/><text x="509.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="509" y="404" width="1" height="15" fill="rgb(218,85,33)"/><text x="512.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (29 samples, 3.00%)</title><rect x="476" y="196" width="35" height="15" fill="rgb(247,58,7)"/><text x="479.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 3.00%)</title><rect x="476" y="212" width="35" height="15" fill="rgb(225,29,40)"/><text x="479.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (14 samples, 1.45%)</title><rect x="494" y="228" width="17" height="15" fill="rgb(206,190,2)"/><text x="497.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (14 samples, 1.45%)</title><rect x="494" y="244" width="17" height="15" fill="rgb(218,147,15)"/><text x="497.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 1.45%)</title><rect x="494" y="260" width="17" height="15" fill="rgb(247,163,10)"/><text x="497.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (13 samples, 1.34%)</title><rect x="495" y="276" width="16" height="15" fill="rgb(246,76,8)"/><text x="498.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (12 samples, 1.24%)</title><rect x="496" y="292" width="15" height="15" fill="rgb(207,106,33)"/><text x="499.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.03%)</title><rect x="499" y="308" width="12" height="15" fill="rgb(248,91,27)"/><text x="502.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 0.83%)</title><rect x="501" y="324" width="10" height="15" fill="rgb(238,95,35)"/><text x="504.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 0.62%)</title><rect x="504" y="340" width="7" height="15" fill="rgb(209,128,0)"/><text x="507.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.52%)</title><rect x="505" y="356" width="6" height="15" fill="rgb(209,44,14)"/><text x="508.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.52%)</title><rect x="505" y="372" width="6" height="15" fill="rgb(214,88,47)"/><text x="508.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.10%)</title><rect x="510" y="388" width="1" height="15" fill="rgb(247,186,46)"/><text x="513.00" y="398.50"></text></g><g><title>0x7f55b778f422 (?) (1 samples, 0.10%)</title><rect x="511" y="244" width="1" height="15" fill="rgb(251,41,27)"/><text x="514.00" y="254.50"></text></g><g><title>0x7f55b779589e (?) (1 samples, 0.10%)</title><rect x="511" y="260" width="1" height="15" fill="rgb(210,90,41)"/><text x="514.00" y="270.50"></text></g><g><title>0x7f55b779574f (?) (1 samples, 0.10%)</title><rect x="511" y="276" width="1" height="15" fill="rgb(249,37,13)"/><text x="514.00" y="286.50"></text></g><g><title>0x7f55b779ba3a (?) (1 samples, 0.10%)</title><rect x="511" y="292" width="1" height="15" fill="rgb(226,147,6)"/><text x="514.00" y="302.50"></text></g><g><title>0x7f55c0bedcfa (?) (1 samples, 0.10%)</title><rect x="511" y="308" width="1" height="15" fill="rgb(233,62,41)"/><text x="514.00" y="318.50"></text></g><g><title>0x7f55c0bf6daa (?) (1 samples, 0.10%)</title><rect x="511" y="324" width="1" height="15" fill="rgb(251,143,33)"/><text x="514.00" y="334.50"></text></g><g><title>0x7f55c0bf8cfd (?) (1 samples, 0.10%)</title><rect x="511" y="340" width="1" height="15" fill="rgb(237,36,20)"/><text x="514.00" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.10%)</title><rect x="512" y="244" width="1" height="15" fill="rgb(244,44,54)"/><text x="515.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:287) (1 samples, 0.10%)</title><rect x="512" y="260" width="1" height="15" fill="rgb(210,2,1)"/><text x="515.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc:76) (1 samples, 0.10%)</title><rect x="512" y="276" width="1" height="15" fill="rgb(232,222,25)"/><text x="515.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="512" y="292" width="1" height="15" fill="rgb(241,133,6)"/><text x="515.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="512" y="308" width="1" height="15" fill="rgb(244,163,31)"/><text x="515.00" y="318.50"></text></g><g><title>0x7f55f6c3307f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="512" y="324" width="1" height="15" fill="rgb(210,125,2)"/><text x="515.00" y="334.50"></text></g><g><title>pybind11::array::array (numpy.h:558) (1 samples, 0.10%)</title><rect x="513" y="516" width="2" height="15" fill="rgb(254,215,54)"/><text x="516.00" y="526.50"></text></g><g><title>pybind11::array::c_strides (numpy.h:789) (1 samples, 0.10%)</title><rect x="513" y="532" width="2" height="15" fill="rgb(212,93,17)"/><text x="516.00" y="542.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.10%)</title><rect x="513" y="548" width="2" height="15" fill="rgb(209,18,33)"/><text x="516.00" y="558.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.10%)</title><rect x="513" y="564" width="2" height="15" fill="rgb(212,90,41)"/><text x="516.00" y="574.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_create_storage (stl_vector.h:185) (1 samples, 0.10%)</title><rect x="513" y="580" width="2" height="15" fill="rgb(205,64,6)"/><text x="516.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.10%)</title><rect x="513" y="596" width="2" height="15" fill="rgb(250,156,42)"/><text x="516.00" y="606.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.10%)</title><rect x="513" y="612" width="2" height="15" fill="rgb(254,40,53)"/><text x="516.00" y="622.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.10%)</title><rect x="513" y="628" width="2" height="15" fill="rgb(235,46,29)"/><text x="516.00" y="638.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="513" y="644" width="2" height="15" fill="rgb(220,210,52)"/><text x="516.00" y="654.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="513" y="660" width="2" height="15" fill="rgb(248,134,29)"/><text x="516.00" y="670.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (2 samples, 0.21%)</title><rect x="513" y="276" width="3" height="15" fill="rgb(209,14,1)"/><text x="516.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (2 samples, 0.21%)</title><rect x="513" y="292" width="3" height="15" fill="rgb(248,99,25)"/><text x="516.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (2 samples, 0.21%)</title><rect x="513" y="308" width="3" height="15" fill="rgb(231,123,23)"/><text x="516.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (2 samples, 0.21%)</title><rect x="513" y="324" width="3" height="15" fill="rgb(226,66,11)"/><text x="516.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (2 samples, 0.21%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(215,122,43)"/><text x="516.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;::type_caster (cast.h:911) (2 samples, 0.21%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(249,98,48)"/><text x="516.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h:832) (2 samples, 0.21%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(246,27,34)"/><text x="516.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h:833) (2 samples, 0.21%)</title><rect x="513" y="388" width="3" height="15" fill="rgb(246,143,15)"/><text x="516.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (2 samples, 0.21%)</title><rect x="513" y="404" width="3" height="15" fill="rgb(244,210,17)"/><text x="516.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (2 samples, 0.21%)</title><rect x="513" y="420" width="3" height="15" fill="rgb(241,76,23)"/><text x="516.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.21%)</title><rect x="513" y="436" width="3" height="15" fill="rgb(216,19,38)"/><text x="516.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (2 samples, 0.21%)</title><rect x="513" y="452" width="3" height="15" fill="rgb(206,13,3)"/><text x="516.00" y="462.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (2 samples, 0.21%)</title><rect x="513" y="468" width="3" height="15" fill="rgb(226,103,7)"/><text x="516.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (2 samples, 0.21%)</title><rect x="513" y="484" width="3" height="15" fill="rgb(242,134,43)"/><text x="516.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (2 samples, 0.21%)</title><rect x="513" y="500" width="3" height="15" fill="rgb(249,217,30)"/><text x="516.00" y="510.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.10%)</title><rect x="515" y="516" width="1" height="15" fill="rgb(226,38,44)"/><text x="518.00" y="526.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="515" y="532" width="1" height="15" fill="rgb(229,187,12)"/><text x="518.00" y="542.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.10%)</title><rect x="515" y="548" width="1" height="15" fill="rgb(246,55,49)"/><text x="518.00" y="558.50"></text></g><g><title>0x7f55f5e541c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="515" y="564" width="1" height="15" fill="rgb(233,72,40)"/><text x="518.00" y="574.50"></text></g><g><title>0x7f55c0bf8ea0 (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="516" y="468" width="4" height="15" fill="rgb(246,218,13)"/><text x="519.00" y="478.50"></text></g><g><title>0x7f55c0bf8ea9 (libgomp.so.1.0.0) (8 samples, 0.83%)</title><rect x="520" y="468" width="9" height="15" fill="rgb(210,227,29)"/><text x="523.00" y="478.50"></text></g><g><title>0x7f55c0bf8eab (libgomp.so.1.0.0) (8 samples, 0.83%)</title><rect x="529" y="468" width="10" height="15" fill="rgb(216,43,15)"/><text x="532.00" y="478.50"></text></g><g><title>0x7f55c0bf7ab9 (libgomp.so.1.0.0) (25 samples, 2.59%)</title><rect x="516" y="452" width="30" height="15" fill="rgb(234,187,21)"/><text x="519.00" y="462.50">0x..</text></g><g><title>0x7f55c0bf8ead (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="539" y="468" width="7" height="15" fill="rgb(231,95,26)"/><text x="542.00" y="478.50"></text></g><g><title>0x7f55c0bf8cf0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="546" y="484" width="2" height="15" fill="rgb(245,65,19)"/><text x="549.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (31 samples, 3.21%)</title><rect x="511" y="196" width="38" height="15" fill="rgb(243,80,12)"/><text x="514.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (31 samples, 3.21%)</title><rect x="511" y="212" width="38" height="15" fill="rgb(222,177,17)"/><text x="514.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (31 samples, 3.21%)</title><rect x="511" y="228" width="38" height="15" fill="rgb(252,101,38)"/><text x="514.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (29 samples, 3.00%)</title><rect x="513" y="244" width="36" height="15" fill="rgb(248,76,25)"/><text x="516.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (29 samples, 3.00%)</title><rect x="513" y="260" width="36" height="15" fill="rgb(227,43,51)"/><text x="516.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (27 samples, 2.79%)</title><rect x="516" y="276" width="33" height="15" fill="rgb(236,70,24)"/><text x="519.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (27 samples, 2.79%)</title><rect x="516" y="292" width="33" height="15" fill="rgb(245,211,54)"/><text x="519.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (27 samples, 2.79%)</title><rect x="516" y="308" width="33" height="15" fill="rgb(206,226,38)"/><text x="519.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (27 samples, 2.79%)</title><rect x="516" y="324" width="33" height="15" fill="rgb(232,35,21)"/><text x="519.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (27 samples, 2.79%)</title><rect x="516" y="340" width="33" height="15" fill="rgb(234,182,15)"/><text x="519.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (27 samples, 2.79%)</title><rect x="516" y="356" width="33" height="15" fill="rgb(218,24,45)"/><text x="519.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (27 samples, 2.79%)</title><rect x="516" y="372" width="33" height="15" fill="rgb(213,119,21)"/><text x="519.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (27 samples, 2.79%)</title><rect x="516" y="388" width="33" height="15" fill="rgb(247,6,49)"/><text x="519.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (27 samples, 2.79%)</title><rect x="516" y="404" width="33" height="15" fill="rgb(231,86,37)"/><text x="519.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (27 samples, 2.79%)</title><rect x="516" y="420" width="33" height="15" fill="rgb(241,64,52)"/><text x="519.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (27 samples, 2.79%)</title><rect x="516" y="436" width="33" height="15" fill="rgb(235,1,54)"/><text x="519.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="546" y="452" width="3" height="15" fill="rgb(235,33,29)"/><text x="549.00" y="462.50"></text></g><g><title>0x7f55c0bf6daa (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="546" y="468" width="3" height="15" fill="rgb(232,11,16)"/><text x="549.00" y="478.50"></text></g><g><title>0x7f55c0bf8cfb (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="548" y="484" width="1" height="15" fill="rgb(223,42,46)"/><text x="551.00" y="494.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="554" y="244" width="1" height="15" fill="rgb(218,47,20)"/><text x="557.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="554" y="260" width="1" height="15" fill="rgb(245,203,29)"/><text x="557.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="554" y="276" width="1" height="15" fill="rgb(213,150,30)"/><text x="557.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="554" y="292" width="1" height="15" fill="rgb(217,181,18)"/><text x="557.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="554" y="308" width="1" height="15" fill="rgb(224,150,13)"/><text x="557.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.21%)</title><rect x="555" y="260" width="2" height="15" fill="rgb(248,38,25)"/><text x="558.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (2 samples, 0.21%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(232,58,13)"/><text x="558.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.10%)</title><rect x="556" y="292" width="1" height="15" fill="rgb(252,183,7)"/><text x="559.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.10%)</title><rect x="557" y="308" width="2" height="15" fill="rgb(221,68,44)"/><text x="560.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:775) (1 samples, 0.10%)</title><rect x="557" y="324" width="2" height="15" fill="rgb(207,71,18)"/><text x="560.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="557" y="292" width="3" height="15" fill="rgb(234,93,36)"/><text x="560.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:296) (1 samples, 0.10%)</title><rect x="559" y="308" width="1" height="15" fill="rgb(250,95,12)"/><text x="562.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (9 samples, 0.93%)</title><rect x="550" y="228" width="11" height="15" fill="rgb(233,163,27)"/><text x="553.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.52%)</title><rect x="555" y="244" width="6" height="15" fill="rgb(222,147,15)"/><text x="558.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.31%)</title><rect x="557" y="260" width="4" height="15" fill="rgb(208,84,46)"/><text x="560.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.31%)</title><rect x="557" y="276" width="4" height="15" fill="rgb(224,38,23)"/><text x="560.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="560" y="292" width="1" height="15" fill="rgb(234,14,24)"/><text x="563.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:766) (1 samples, 0.10%)</title><rect x="560" y="308" width="1" height="15" fill="rgb(213,104,26)"/><text x="563.00" y="318.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="560" y="324" width="1" height="15" fill="rgb(231,126,22)"/><text x="563.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1527) (1 samples, 0.10%)</title><rect x="561" y="292" width="1" height="15" fill="rgb(246,229,40)"/><text x="564.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.21%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(229,172,47)"/><text x="565.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="562" y="292" width="4" height="15" fill="rgb(209,5,17)"/><text x="565.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="562" y="308" width="4" height="15" fill="rgb(251,97,27)"/><text x="565.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="562" y="324" width="4" height="15" fill="rgb(244,112,40)"/><text x="565.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="565" y="340" width="1" height="15" fill="rgb(245,182,27)"/><text x="568.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (15 samples, 1.55%)</title><rect x="549" y="196" width="18" height="15" fill="rgb(249,32,39)"/><text x="552.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (15 samples, 1.55%)</title><rect x="549" y="212" width="18" height="15" fill="rgb(253,44,6)"/><text x="552.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.52%)</title><rect x="561" y="228" width="6" height="15" fill="rgb(231,160,14)"/><text x="564.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.52%)</title><rect x="561" y="244" width="6" height="15" fill="rgb(213,18,35)"/><text x="564.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="561" y="260" width="6" height="15" fill="rgb(220,53,13)"/><text x="564.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="561" y="276" width="6" height="15" fill="rgb(224,90,37)"/><text x="564.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="566" y="292" width="1" height="15" fill="rgb(220,25,52)"/><text x="569.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="566" y="308" width="1" height="15" fill="rgb(245,126,19)"/><text x="569.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="566" y="324" width="1" height="15" fill="rgb(234,192,33)"/><text x="569.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:603) (1 samples, 0.10%)</title><rect x="566" y="340" width="1" height="15" fill="rgb(250,91,11)"/><text x="569.00" y="350.50"></text></g><g><title>_mm_sub_ps (xmmintrin.h:163) (1 samples, 0.10%)</title><rect x="566" y="356" width="1" height="15" fill="rgb(207,53,11)"/><text x="569.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.10%)</title><rect x="567" y="196" width="1" height="15" fill="rgb(231,22,45)"/><text x="570.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="570" y="228" width="1" height="15" fill="rgb(236,19,8)"/><text x="573.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="570" y="244" width="1" height="15" fill="rgb(237,181,18)"/><text x="573.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.10%)</title><rect x="570" y="260" width="1" height="15" fill="rgb(233,19,22)"/><text x="573.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.10%)</title><rect x="570" y="276" width="1" height="15" fill="rgb(251,96,45)"/><text x="573.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.10%)</title><rect x="570" y="292" width="1" height="15" fill="rgb(209,190,31)"/><text x="573.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.10%)</title><rect x="570" y="308" width="1" height="15" fill="rgb(217,148,15)"/><text x="573.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.10%)</title><rect x="570" y="324" width="1" height="15" fill="rgb(234,14,41)"/><text x="573.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:105) (1 samples, 0.10%)</title><rect x="571" y="324" width="1" height="15" fill="rgb(212,208,11)"/><text x="574.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (1 samples, 0.10%)</title><rect x="572" y="324" width="1" height="15" fill="rgb(221,186,51)"/><text x="575.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.10%)</title><rect x="572" y="340" width="1" height="15" fill="rgb(252,63,31)"/><text x="575.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="572" y="356" width="1" height="15" fill="rgb(225,65,25)"/><text x="575.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.10%)</title><rect x="574" y="388" width="2" height="15" fill="rgb(240,206,15)"/><text x="577.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.10%)</title><rect x="576" y="452" width="1" height="15" fill="rgb(243,51,8)"/><text x="579.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.31%)</title><rect x="574" y="340" width="4" height="15" fill="rgb(240,122,23)"/><text x="577.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="574" y="356" width="4" height="15" fill="rgb(214,101,4)"/><text x="577.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.31%)</title><rect x="574" y="372" width="4" height="15" fill="rgb(254,18,17)"/><text x="577.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (2 samples, 0.21%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(221,110,25)"/><text x="579.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.21%)</title><rect x="576" y="404" width="2" height="15" fill="rgb(246,36,15)"/><text x="579.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.21%)</title><rect x="576" y="420" width="2" height="15" fill="rgb(231,74,19)"/><text x="579.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.21%)</title><rect x="576" y="436" width="2" height="15" fill="rgb(216,15,54)"/><text x="579.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="577" y="452" width="1" height="15" fill="rgb(219,122,52)"/><text x="580.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="577" y="468" width="1" height="15" fill="rgb(223,41,15)"/><text x="580.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="577" y="484" width="1" height="15" fill="rgb(242,95,31)"/><text x="580.00" y="494.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="577" y="500" width="1" height="15" fill="rgb(228,182,11)"/><text x="580.00" y="510.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 0.52%)</title><rect x="573" y="324" width="6" height="15" fill="rgb(208,99,53)"/><text x="576.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.10%)</title><rect x="578" y="340" width="1" height="15" fill="rgb(232,154,13)"/><text x="581.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="578" y="356" width="1" height="15" fill="rgb(251,123,12)"/><text x="581.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="578" y="372" width="1" height="15" fill="rgb(250,155,21)"/><text x="581.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2003) (1 samples, 0.10%)</title><rect x="578" y="388" width="1" height="15" fill="rgb(249,100,11)"/><text x="581.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.10%)</title><rect x="579" y="372" width="2" height="15" fill="rgb(216,76,40)"/><text x="582.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.21%)</title><rect x="581" y="372" width="2" height="15" fill="rgb(222,204,25)"/><text x="584.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (2 samples, 0.21%)</title><rect x="581" y="388" width="2" height="15" fill="rgb(211,94,17)"/><text x="584.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (2 samples, 0.21%)</title><rect x="581" y="404" width="2" height="15" fill="rgb(209,51,40)"/><text x="584.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.10%)</title><rect x="583" y="388" width="1" height="15" fill="rgb(209,41,49)"/><text x="586.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="584" y="420" width="1" height="15" fill="rgb(209,196,47)"/><text x="587.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.10%)</title><rect x="584" y="436" width="1" height="15" fill="rgb(215,126,51)"/><text x="587.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="584" y="404" width="3" height="15" fill="rgb(241,226,44)"/><text x="587.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="585" y="420" width="2" height="15" fill="rgb(226,143,52)"/><text x="588.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.10%)</title><rect x="585" y="436" width="2" height="15" fill="rgb(240,155,16)"/><text x="588.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.10%)</title><rect x="585" y="452" width="2" height="15" fill="rgb(239,135,17)"/><text x="588.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.10%)</title><rect x="585" y="468" width="2" height="15" fill="rgb(251,67,35)"/><text x="588.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="587" y="404" width="1" height="15" fill="rgb(227,90,49)"/><text x="590.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.10%)</title><rect x="587" y="420" width="1" height="15" fill="rgb(245,214,10)"/><text x="590.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.10%)</title><rect x="587" y="436" width="1" height="15" fill="rgb(215,182,20)"/><text x="590.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (1 samples, 0.10%)</title><rect x="587" y="452" width="1" height="15" fill="rgb(251,184,41)"/><text x="590.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.10%)</title><rect x="587" y="468" width="1" height="15" fill="rgb(251,32,21)"/><text x="590.00" y="478.50"></text></g><g><title>DOUBLE_clip (clip.c.src:107) (1 samples, 0.10%)</title><rect x="588" y="420" width="1" height="15" fill="rgb(214,163,30)"/><text x="591.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1882) (1 samples, 0.10%)</title><rect x="589" y="436" width="1" height="15" fill="rgb(246,37,37)"/><text x="592.00" y="446.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (101 samples, 10.44%)</title><rect x="468" y="180" width="124" height="15" fill="rgb(242,60,44)"/><text x="471.00" y="190.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (19 samples, 1.96%)</title><rect x="568" y="196" width="24" height="15" fill="rgb(223,68,35)"/><text x="571.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (18 samples, 1.86%)</title><rect x="570" y="212" width="22" height="15" fill="rgb(231,54,8)"/><text x="573.00" y="222.50">_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 1.76%)</title><rect x="571" y="228" width="21" height="15" fill="rgb(241,100,53)"/><text x="574.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 1.76%)</title><rect x="571" y="244" width="21" height="15" fill="rgb(232,44,47)"/><text x="574.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (17 samples, 1.76%)</title><rect x="571" y="260" width="21" height="15" fill="rgb(208,196,53)"/><text x="574.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (17 samples, 1.76%)</title><rect x="571" y="276" width="21" height="15" fill="rgb(253,155,1)"/><text x="574.00" y="286.50"></text></g><g><title>array_clip (methods.c:2381) (17 samples, 1.76%)</title><rect x="571" y="292" width="21" height="15" fill="rgb(223,225,41)"/><text x="574.00" y="302.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 1.76%)</title><rect x="571" y="308" width="21" height="15" fill="rgb(229,149,46)"/><text x="574.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (10 samples, 1.03%)</title><rect x="579" y="324" width="13" height="15" fill="rgb(241,130,43)"/><text x="582.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (10 samples, 1.03%)</title><rect x="579" y="340" width="13" height="15" fill="rgb(224,12,12)"/><text x="582.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.03%)</title><rect x="579" y="356" width="13" height="15" fill="rgb(251,12,0)"/><text x="582.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.72%)</title><rect x="583" y="372" width="9" height="15" fill="rgb(242,162,48)"/><text x="586.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.62%)</title><rect x="584" y="388" width="8" height="15" fill="rgb(214,64,46)"/><text x="587.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.31%)</title><rect x="588" y="404" width="4" height="15" fill="rgb(216,5,40)"/><text x="591.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (2 samples, 0.21%)</title><rect x="589" y="420" width="3" height="15" fill="rgb(213,27,26)"/><text x="592.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1893) (1 samples, 0.10%)</title><rect x="590" y="436" width="2" height="15" fill="rgb(237,222,11)"/><text x="593.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src:1112) (1 samples, 0.10%)</title><rect x="590" y="452" width="2" height="15" fill="rgb(212,169,43)"/><text x="593.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.10%)</title><rect x="590" y="468" width="2" height="15" fill="rgb(238,179,4)"/><text x="593.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.21%)</title><rect x="592" y="180" width="2" height="15" fill="rgb(248,184,34)"/><text x="595.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.10%)</title><rect x="594" y="180" width="1" height="15" fill="rgb(223,51,15)"/><text x="597.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (115 samples, 11.89%)</title><rect x="461" y="100" width="140" height="15" fill="rgb(250,229,11)"/><text x="464.00" y="110.50">profile (bench_Ad..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (115 samples, 11.89%)</title><rect x="461" y="116" width="140" height="15" fill="rgb(243,17,40)"/><text x="464.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (115 samples, 11.89%)</title><rect x="461" y="132" width="140" height="15" fill="rgb(251,39,50)"/><text x="464.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (115 samples, 11.89%)</title><rect x="461" y="148" width="140" height="15" fill="rgb(214,228,20)"/><text x="464.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (115 samples, 11.89%)</title><rect x="461" y="164" width="140" height="15" fill="rgb(251,93,7)"/><text x="464.00" y="174.50">_run_sequence_run..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.52%)</title><rect x="595" y="180" width="6" height="15" fill="rgb(227,190,28)"/><text x="598.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.10%)</title><rect x="601" y="164" width="2" height="15" fill="rgb(246,148,7)"/><text x="604.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.10%)</title><rect x="605" y="180" width="1" height="15" fill="rgb(217,39,38)"/><text x="608.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 0.72%)</title><rect x="606" y="180" width="9" height="15" fill="rgb(238,151,7)"/><text x="609.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.10%)</title><rect x="622" y="212" width="1" height="15" fill="rgb(218,143,6)"/><text x="625.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.10%)</title><rect x="622" y="228" width="1" height="15" fill="rgb(252,186,52)"/><text x="625.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.10%)</title><rect x="622" y="244" width="1" height="15" fill="rgb(241,163,43)"/><text x="625.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.10%)</title><rect x="622" y="260" width="1" height="15" fill="rgb(206,198,31)"/><text x="625.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.10%)</title><rect x="622" y="276" width="1" height="15" fill="rgb(247,76,24)"/><text x="625.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.10%)</title><rect x="622" y="292" width="1" height="15" fill="rgb(211,8,26)"/><text x="625.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.21%)</title><rect x="623" y="228" width="3" height="15" fill="rgb(214,58,39)"/><text x="626.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.10%)</title><rect x="625" y="244" width="1" height="15" fill="rgb(236,147,13)"/><text x="628.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.31%)</title><rect x="623" y="212" width="4" height="15" fill="rgb(209,16,13)"/><text x="626.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.10%)</title><rect x="626" y="228" width="1" height="15" fill="rgb(220,104,25)"/><text x="629.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.10%)</title><rect x="626" y="244" width="1" height="15" fill="rgb(223,82,50)"/><text x="629.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.10%)</title><rect x="626" y="260" width="1" height="15" fill="rgb(231,57,46)"/><text x="629.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="626" y="276" width="1" height="15" fill="rgb(251,146,43)"/><text x="629.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="626" y="292" width="1" height="15" fill="rgb(236,77,39)"/><text x="629.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.10%)</title><rect x="626" y="308" width="1" height="15" fill="rgb(219,196,50)"/><text x="629.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:117) (1 samples, 0.10%)</title><rect x="626" y="324" width="1" height="15" fill="rgb(218,78,28)"/><text x="629.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 0.52%)</title><rect x="622" y="196" width="6" height="15" fill="rgb(250,114,8)"/><text x="625.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.10%)</title><rect x="627" y="212" width="1" height="15" fill="rgb(234,137,19)"/><text x="630.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.10%)</title><rect x="627" y="228" width="1" height="15" fill="rgb(228,146,17)"/><text x="630.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="627" y="244" width="1" height="15" fill="rgb(233,174,6)"/><text x="630.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="627" y="260" width="1" height="15" fill="rgb(245,173,40)"/><text x="630.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="627" y="276" width="1" height="15" fill="rgb(213,62,44)"/><text x="630.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="627" y="292" width="1" height="15" fill="rgb(238,72,45)"/><text x="630.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.10%)</title><rect x="627" y="308" width="1" height="15" fill="rgb(218,119,46)"/><text x="630.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.10%)</title><rect x="627" y="324" width="1" height="15" fill="rgb(211,17,4)"/><text x="630.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.10%)</title><rect x="627" y="340" width="1" height="15" fill="rgb(248,161,48)"/><text x="630.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="627" y="356" width="1" height="15" fill="rgb(229,207,14)"/><text x="630.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (2 samples, 0.21%)</title><rect x="631" y="228" width="2" height="15" fill="rgb(238,204,37)"/><text x="634.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="631" y="244" width="2" height="15" fill="rgb(254,67,46)"/><text x="634.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(253,48,27)"/><text x="634.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.21%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(250,48,6)"/><text x="634.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.21%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(246,155,39)"/><text x="634.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (2 samples, 0.21%)</title><rect x="631" y="308" width="2" height="15" fill="rgb(207,164,20)"/><text x="634.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (2 samples, 0.21%)</title><rect x="631" y="324" width="2" height="15" fill="rgb(252,183,10)"/><text x="634.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:18) (2 samples, 0.21%)</title><rect x="633" y="228" width="2" height="15" fill="rgb(238,47,41)"/><text x="636.00" y="238.50"></text></g><g><title>0x7f55f6c52124 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="635" y="244" width="2" height="15" fill="rgb(225,72,45)"/><text x="638.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="637" y="244" width="1" height="15" fill="rgb(223,62,8)"/><text x="640.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="637" y="260" width="1" height="15" fill="rgb(223,200,45)"/><text x="640.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="637" y="276" width="1" height="15" fill="rgb(227,147,30)"/><text x="640.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="637" y="292" width="1" height="15" fill="rgb(252,40,23)"/><text x="640.00" y="302.50"></text></g><g><title>0x7f55f6db3960 (libm-2.29.so) (2 samples, 0.21%)</title><rect x="639" y="324" width="3" height="15" fill="rgb(218,9,53)"/><text x="642.00" y="334.50"></text></g><g><title>0x7f55f6db3997 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="642" y="324" width="1" height="15" fill="rgb(221,38,54)"/><text x="645.00" y="334.50"></text></g><g><title>0x7f55f6db39af (libm-2.29.so) (1 samples, 0.10%)</title><rect x="643" y="324" width="1" height="15" fill="rgb(238,192,7)"/><text x="646.00" y="334.50"></text></g><g><title>0x7f55f6db39cc (libm-2.29.so) (2 samples, 0.21%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(226,62,40)"/><text x="647.00" y="334.50"></text></g><g><title>0x7f55f6db3a04 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="646" y="324" width="2" height="15" fill="rgb(226,78,44)"/><text x="649.00" y="334.50"></text></g><g><title>0x7f55f6db3a19 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="648" y="324" width="1" height="15" fill="rgb(221,203,51)"/><text x="651.00" y="334.50"></text></g><g><title>0x7f55f6db3a1d (libm-2.29.so) (1 samples, 0.10%)</title><rect x="649" y="324" width="1" height="15" fill="rgb(253,201,50)"/><text x="652.00" y="334.50"></text></g><g><title>0x7f55f6db3a21 (libm-2.29.so) (3 samples, 0.31%)</title><rect x="650" y="324" width="4" height="15" fill="rgb(224,125,6)"/><text x="653.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (15 samples, 1.55%)</title><rect x="638" y="308" width="18" height="15" fill="rgb(213,3,8)"/><text x="641.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (2 samples, 0.21%)</title><rect x="654" y="324" width="2" height="15" fill="rgb(254,76,39)"/><text x="657.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 1.65%)</title><rect x="638" y="260" width="19" height="15" fill="rgb(249,37,49)"/><text x="641.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 1.65%)</title><rect x="638" y="276" width="19" height="15" fill="rgb(230,203,8)"/><text x="641.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 1.65%)</title><rect x="638" y="292" width="19" height="15" fill="rgb(207,221,34)"/><text x="641.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.10%)</title><rect x="656" y="308" width="1" height="15" fill="rgb(206,107,3)"/><text x="659.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.10%)</title><rect x="656" y="324" width="1" height="15" fill="rgb(252,40,15)"/><text x="659.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 1.76%)</title><rect x="638" y="244" width="21" height="15" fill="rgb(239,95,39)"/><text x="641.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.10%)</title><rect x="657" y="260" width="2" height="15" fill="rgb(248,118,5)"/><text x="660.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (20 samples, 2.07%)</title><rect x="635" y="228" width="25" height="15" fill="rgb(250,206,30)"/><text x="638.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.10%)</title><rect x="659" y="244" width="1" height="15" fill="rgb(235,124,4)"/><text x="662.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.10%)</title><rect x="659" y="260" width="1" height="15" fill="rgb(240,165,5)"/><text x="662.00" y="270.50"></text></g><g><title>0x7f55f6c52120 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="659" y="276" width="1" height="15" fill="rgb(237,199,0)"/><text x="662.00" y="286.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="661" y="244" width="1" height="15" fill="rgb(231,3,35)"/><text x="664.00" y="254.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py:2042) (1 samples, 0.10%)</title><rect x="661" y="260" width="1" height="15" fill="rgb(232,14,37)"/><text x="664.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.10%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(207,190,16)"/><text x="665.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(217,133,40)"/><text x="665.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.10%)</title><rect x="662" y="340" width="2" height="15" fill="rgb(218,144,50)"/><text x="665.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.10%)</title><rect x="662" y="356" width="2" height="15" fill="rgb(215,128,47)"/><text x="665.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.10%)</title><rect x="662" y="372" width="2" height="15" fill="rgb(248,98,10)"/><text x="665.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.10%)</title><rect x="662" y="388" width="2" height="15" fill="rgb(228,168,10)"/><text x="665.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3605) (1 samples, 0.10%)</title><rect x="664" y="340" width="1" height="15" fill="rgb(245,3,49)"/><text x="667.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.10%)</title><rect x="664" y="356" width="1" height="15" fill="rgb(226,228,31)"/><text x="667.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.10%)</title><rect x="665" y="340" width="1" height="15" fill="rgb(227,47,34)"/><text x="668.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.10%)</title><rect x="665" y="356" width="1" height="15" fill="rgb(253,176,48)"/><text x="668.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.10%)</title><rect x="665" y="372" width="1" height="15" fill="rgb(211,78,18)"/><text x="668.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2240) (1 samples, 0.10%)</title><rect x="665" y="388" width="1" height="15" fill="rgb(249,127,37)"/><text x="668.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="666" y="356" width="1" height="15" fill="rgb(232,191,54)"/><text x="669.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="666" y="372" width="1" height="15" fill="rgb(249,159,42)"/><text x="669.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="666" y="388" width="1" height="15" fill="rgb(210,88,29)"/><text x="669.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="666" y="404" width="1" height="15" fill="rgb(211,39,14)"/><text x="669.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.10%)</title><rect x="666" y="420" width="1" height="15" fill="rgb(232,192,11)"/><text x="669.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.10%)</title><rect x="666" y="436" width="1" height="15" fill="rgb(217,111,36)"/><text x="669.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.10%)</title><rect x="666" y="452" width="1" height="15" fill="rgb(231,171,11)"/><text x="669.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="667" y="356" width="1" height="15" fill="rgb(205,229,24)"/><text x="670.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="667" y="372" width="1" height="15" fill="rgb(228,5,54)"/><text x="670.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="667" y="388" width="1" height="15" fill="rgb(230,101,32)"/><text x="670.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.10%)</title><rect x="667" y="404" width="1" height="15" fill="rgb(234,3,7)"/><text x="670.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.10%)</title><rect x="667" y="420" width="1" height="15" fill="rgb(230,203,0)"/><text x="670.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.10%)</title><rect x="668" y="372" width="2" height="15" fill="rgb(209,3,38)"/><text x="671.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.10%)</title><rect x="668" y="388" width="2" height="15" fill="rgb(210,150,34)"/><text x="671.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.21%)</title><rect x="668" y="356" width="3" height="15" fill="rgb(216,85,46)"/><text x="671.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.10%)</title><rect x="670" y="372" width="1" height="15" fill="rgb(254,171,9)"/><text x="673.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.10%)</title><rect x="670" y="388" width="1" height="15" fill="rgb(208,155,40)"/><text x="673.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.10%)</title><rect x="671" y="372" width="1" height="15" fill="rgb(246,38,25)"/><text x="674.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.10%)</title><rect x="672" y="372" width="1" height="15" fill="rgb(217,212,54)"/><text x="675.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.10%)</title><rect x="673" y="372" width="2" height="15" fill="rgb(213,84,18)"/><text x="676.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.10%)</title><rect x="675" y="372" width="1" height="15" fill="rgb(244,209,37)"/><text x="678.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.21%)</title><rect x="677" y="388" width="2" height="15" fill="rgb(246,170,4)"/><text x="680.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="681" y="404" width="1" height="15" fill="rgb(244,51,0)"/><text x="684.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.31%)</title><rect x="679" y="388" width="4" height="15" fill="rgb(205,184,30)"/><text x="682.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.10%)</title><rect x="682" y="404" width="1" height="15" fill="rgb(223,186,20)"/><text x="685.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.10%)</title><rect x="683" y="388" width="1" height="15" fill="rgb(248,100,14)"/><text x="686.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.10%)</title><rect x="684" y="388" width="2" height="15" fill="rgb(218,110,30)"/><text x="687.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.10%)</title><rect x="686" y="388" width="1" height="15" fill="rgb(221,140,23)"/><text x="689.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.10%)</title><rect x="687" y="388" width="1" height="15" fill="rgb(217,116,49)"/><text x="690.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (51 samples, 5.27%)</title><rect x="628" y="196" width="62" height="15" fill="rgb(225,79,52)"/><text x="631.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (49 samples, 5.07%)</title><rect x="631" y="212" width="59" height="15" fill="rgb(226,126,51)"/><text x="634.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (25 samples, 2.59%)</title><rect x="660" y="228" width="30" height="15" fill="rgb(235,188,4)"/><text x="663.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (23 samples, 2.38%)</title><rect x="662" y="244" width="28" height="15" fill="rgb(239,191,52)"/><text x="665.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 2.38%)</title><rect x="662" y="260" width="28" height="15" fill="rgb(213,42,50)"/><text x="665.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (23 samples, 2.38%)</title><rect x="662" y="276" width="28" height="15" fill="rgb(241,168,30)"/><text x="665.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (23 samples, 2.38%)</title><rect x="662" y="292" width="28" height="15" fill="rgb(246,125,21)"/><text x="665.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 2.28%)</title><rect x="664" y="308" width="26" height="15" fill="rgb(215,15,20)"/><text x="667.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (22 samples, 2.28%)</title><rect x="664" y="324" width="26" height="15" fill="rgb(211,63,4)"/><text x="667.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (20 samples, 2.07%)</title><rect x="666" y="340" width="24" height="15" fill="rgb(252,118,27)"/><text x="669.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 1.65%)</title><rect x="671" y="356" width="19" height="15" fill="rgb(227,218,41)"/><text x="674.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 1.24%)</title><rect x="676" y="372" width="14" height="15" fill="rgb(237,88,36)"/><text x="679.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.21%)</title><rect x="688" y="388" width="2" height="15" fill="rgb(247,80,21)"/><text x="691.00" y="398.50"></text></g><g><title>0x7f55c0bf8ea9 (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="690" y="468" width="13" height="15" fill="rgb(207,24,29)"/><text x="693.00" y="478.50"></text></g><g><title>0x7f55c0bf8eab (libgomp.so.1.0.0) (10 samples, 1.03%)</title><rect x="703" y="468" width="12" height="15" fill="rgb(235,192,19)"/><text x="706.00" y="478.50"></text></g><g><title>0x7f55c0bf7ab9 (libgomp.so.1.0.0) (26 samples, 2.69%)</title><rect x="690" y="452" width="32" height="15" fill="rgb(225,101,45)"/><text x="693.00" y="462.50">0x..</text></g><g><title>0x7f55c0bf8ead (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="715" y="468" width="7" height="15" fill="rgb(217,29,21)"/><text x="718.00" y="478.50"></text></g><g><title>0x7f55c0bf8cf0 (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="722" y="484" width="3" height="15" fill="rgb(226,18,29)"/><text x="725.00" y="494.50"></text></g><g><title>0x7f55c0bf8cf9 (libgomp.so.1.0.0) (4 samples, 0.41%)</title><rect x="725" y="484" width="4" height="15" fill="rgb(213,100,32)"/><text x="728.00" y="494.50"></text></g><g><title>0x7f55c0bf8cfb (libgomp.so.1.0.0) (7 samples, 0.72%)</title><rect x="729" y="484" width="9" height="15" fill="rgb(246,90,0)"/><text x="732.00" y="494.50"></text></g><g><title>0x7f55c0bf6daa (libgomp.so.1.0.0) (19 samples, 1.96%)</title><rect x="722" y="468" width="23" height="15" fill="rgb(247,155,5)"/><text x="725.00" y="478.50">0..</text></g><g><title>0x7f55c0bf8cfd (libgomp.so.1.0.0) (6 samples, 0.62%)</title><rect x="738" y="484" width="7" height="15" fill="rgb(249,116,2)"/><text x="741.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:423) (1 samples, 0.10%)</title><rect x="745" y="468" width="2" height="15" fill="rgb(226,50,13)"/><text x="748.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.10%)</title><rect x="745" y="484" width="2" height="15" fill="rgb(219,202,11)"/><text x="748.00" y="494.50"></text></g><g><title>0x7f55f6c31d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="745" y="500" width="2" height="15" fill="rgb(231,178,8)"/><text x="748.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (47 samples, 4.86%)</title><rect x="690" y="196" width="58" height="15" fill="rgb(207,143,35)"/><text x="693.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 4.86%)</title><rect x="690" y="212" width="58" height="15" fill="rgb(240,182,18)"/><text x="693.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (47 samples, 4.86%)</title><rect x="690" y="228" width="58" height="15" fill="rgb(206,77,17)"/><text x="693.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (47 samples, 4.86%)</title><rect x="690" y="244" width="58" height="15" fill="rgb(221,97,46)"/><text x="693.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (47 samples, 4.86%)</title><rect x="690" y="260" width="58" height="15" fill="rgb(248,195,2)"/><text x="693.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (47 samples, 4.86%)</title><rect x="690" y="276" width="58" height="15" fill="rgb(252,58,36)"/><text x="693.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (47 samples, 4.86%)</title><rect x="690" y="292" width="58" height="15" fill="rgb(225,76,19)"/><text x="693.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (47 samples, 4.86%)</title><rect x="690" y="308" width="58" height="15" fill="rgb(243,223,53)"/><text x="693.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (47 samples, 4.86%)</title><rect x="690" y="324" width="58" height="15" fill="rgb(210,39,5)"/><text x="693.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (47 samples, 4.86%)</title><rect x="690" y="340" width="58" height="15" fill="rgb(243,9,50)"/><text x="693.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (47 samples, 4.86%)</title><rect x="690" y="356" width="58" height="15" fill="rgb(241,24,18)"/><text x="693.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (47 samples, 4.86%)</title><rect x="690" y="372" width="58" height="15" fill="rgb(214,218,37)"/><text x="693.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (47 samples, 4.86%)</title><rect x="690" y="388" width="58" height="15" fill="rgb(236,195,33)"/><text x="693.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (47 samples, 4.86%)</title><rect x="690" y="404" width="58" height="15" fill="rgb(216,209,40)"/><text x="693.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (47 samples, 4.86%)</title><rect x="690" y="420" width="58" height="15" fill="rgb(232,126,26)"/><text x="693.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (47 samples, 4.86%)</title><rect x="690" y="436" width="58" height="15" fill="rgb(235,120,2)"/><text x="693.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (21 samples, 2.17%)</title><rect x="722" y="452" width="26" height="15" fill="rgb(234,135,36)"/><text x="725.00" y="462.50">G..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:428) (1 samples, 0.10%)</title><rect x="747" y="468" width="1" height="15" fill="rgb(206,67,44)"/><text x="750.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="750" y="260" width="1" height="15" fill="rgb(247,128,21)"/><text x="753.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.10%)</title><rect x="750" y="276" width="1" height="15" fill="rgb(245,186,24)"/><text x="753.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.10%)</title><rect x="751" y="260" width="2" height="15" fill="rgb(245,117,46)"/><text x="754.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.10%)</title><rect x="751" y="276" width="2" height="15" fill="rgb(208,50,29)"/><text x="754.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="753" y="292" width="1" height="15" fill="rgb(241,212,41)"/><text x="756.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.10%)</title><rect x="753" y="308" width="1" height="15" fill="rgb(226,22,22)"/><text x="756.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="753" y="324" width="1" height="15" fill="rgb(247,213,11)"/><text x="756.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.10%)</title><rect x="754" y="324" width="1" height="15" fill="rgb(224,225,38)"/><text x="757.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.21%)</title><rect x="754" y="292" width="2" height="15" fill="rgb(237,19,3)"/><text x="757.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.21%)</title><rect x="754" y="308" width="2" height="15" fill="rgb(243,42,24)"/><text x="757.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.10%)</title><rect x="755" y="324" width="1" height="15" fill="rgb(220,4,2)"/><text x="758.00" y="334.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.10%)</title><rect x="756" y="308" width="2" height="15" fill="rgb(207,17,36)"/><text x="759.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1924) (1 samples, 0.10%)</title><rect x="756" y="324" width="2" height="15" fill="rgb(212,80,52)"/><text x="759.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.21%)</title><rect x="756" y="292" width="3" height="15" fill="rgb(214,170,9)"/><text x="759.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src:765) (1 samples, 0.10%)</title><rect x="758" y="308" width="1" height="15" fill="rgb(247,61,13)"/><text x="761.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h:169) (1 samples, 0.10%)</title><rect x="758" y="324" width="1" height="15" fill="rgb(238,110,44)"/><text x="761.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (11 samples, 1.14%)</title><rect x="748" y="228" width="13" height="15" fill="rgb(211,47,20)"/><text x="751.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 0.93%)</title><rect x="750" y="244" width="11" height="15" fill="rgb(241,89,20)"/><text x="753.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.72%)</title><rect x="753" y="260" width="8" height="15" fill="rgb(236,186,2)"/><text x="756.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.72%)</title><rect x="753" y="276" width="8" height="15" fill="rgb(227,95,29)"/><text x="756.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.21%)</title><rect x="759" y="292" width="2" height="15" fill="rgb(211,194,44)"/><text x="762.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.21%)</title><rect x="759" y="308" width="2" height="15" fill="rgb(236,0,54)"/><text x="762.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="760" y="324" width="1" height="15" fill="rgb(244,207,3)"/><text x="763.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.10%)</title><rect x="761" y="228" width="1" height="15" fill="rgb(237,131,50)"/><text x="764.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="762" y="308" width="2" height="15" fill="rgb(237,16,16)"/><text x="765.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.10%)</title><rect x="762" y="324" width="2" height="15" fill="rgb(231,116,33)"/><text x="765.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.10%)</title><rect x="762" y="340" width="2" height="15" fill="rgb(228,117,19)"/><text x="765.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.21%)</title><rect x="762" y="292" width="3" height="15" fill="rgb(238,134,35)"/><text x="765.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="764" y="308" width="1" height="15" fill="rgb(215,170,37)"/><text x="767.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.10%)</title><rect x="764" y="324" width="1" height="15" fill="rgb(253,208,9)"/><text x="767.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.10%)</title><rect x="764" y="340" width="1" height="15" fill="rgb(207,104,36)"/><text x="767.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.10%)</title><rect x="765" y="308" width="1" height="15" fill="rgb(231,182,17)"/><text x="768.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.10%)</title><rect x="766" y="340" width="1" height="15" fill="rgb(210,123,7)"/><text x="769.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.31%)</title><rect x="767" y="356" width="4" height="15" fill="rgb(207,211,7)"/><text x="770.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.10%)</title><rect x="771" y="356" width="1" height="15" fill="rgb(246,106,24)"/><text x="774.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 0.72%)</title><rect x="765" y="292" width="8" height="15" fill="rgb(224,19,42)"/><text x="768.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.62%)</title><rect x="766" y="308" width="7" height="15" fill="rgb(251,68,15)"/><text x="769.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.62%)</title><rect x="766" y="324" width="7" height="15" fill="rgb(249,220,29)"/><text x="769.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.52%)</title><rect x="767" y="340" width="6" height="15" fill="rgb(227,90,40)"/><text x="770.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.10%)</title><rect x="772" y="356" width="1" height="15" fill="rgb(239,214,2)"/><text x="775.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (10 samples, 1.03%)</title><rect x="762" y="228" width="13" height="15" fill="rgb(210,5,28)"/><text x="765.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.03%)</title><rect x="762" y="244" width="13" height="15" fill="rgb(229,52,53)"/><text x="765.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.03%)</title><rect x="762" y="260" width="13" height="15" fill="rgb(239,61,37)"/><text x="765.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.03%)</title><rect x="762" y="276" width="13" height="15" fill="rgb(212,79,21)"/><text x="765.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="773" y="292" width="2" height="15" fill="rgb(229,194,40)"/><text x="776.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="773" y="308" width="2" height="15" fill="rgb(209,140,17)"/><text x="776.00" y="318.50"></text></g><g><title>0x7f55f6c31f30 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="773" y="324" width="2" height="15" fill="rgb(211,176,41)"/><text x="776.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (23 samples, 2.38%)</title><rect x="748" y="196" width="28" height="15" fill="rgb(238,51,52)"/><text x="751.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (23 samples, 2.38%)</title><rect x="748" y="212" width="28" height="15" fill="rgb(236,4,21)"/><text x="751.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py:18) (1 samples, 0.10%)</title><rect x="775" y="228" width="1" height="15" fill="rgb(232,118,30)"/><text x="778.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (1 samples, 0.10%)</title><rect x="775" y="244" width="1" height="15" fill="rgb(230,181,44)"/><text x="778.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="775" y="260" width="1" height="15" fill="rgb(212,210,52)"/><text x="778.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="775" y="276" width="1" height="15" fill="rgb(217,69,2)"/><text x="778.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.10%)</title><rect x="775" y="292" width="1" height="15" fill="rgb(237,169,12)"/><text x="778.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="775" y="308" width="1" height="15" fill="rgb(209,116,1)"/><text x="778.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.10%)</title><rect x="775" y="324" width="1" height="15" fill="rgb(233,68,20)"/><text x="778.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.10%)</title><rect x="775" y="340" width="1" height="15" fill="rgb(228,83,0)"/><text x="778.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1008) (1 samples, 0.10%)</title><rect x="775" y="356" width="1" height="15" fill="rgb(239,106,24)"/><text x="778.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.10%)</title><rect x="776" y="196" width="1" height="15" fill="rgb(243,221,26)"/><text x="779.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:63) (1 samples, 0.10%)</title><rect x="778" y="212" width="1" height="15" fill="rgb(205,53,3)"/><text x="781.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.10%)</title><rect x="781" y="244" width="1" height="15" fill="rgb(213,208,17)"/><text x="784.00" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.10%)</title><rect x="786" y="324" width="1" height="15" fill="rgb(243,181,10)"/><text x="789.00" y="334.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.10%)</title><rect x="786" y="340" width="1" height="15" fill="rgb(245,177,25)"/><text x="789.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 0.41%)</title><rect x="787" y="324" width="5" height="15" fill="rgb(249,126,27)"/><text x="790.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 0.41%)</title><rect x="787" y="340" width="5" height="15" fill="rgb(210,148,9)"/><text x="790.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.31%)</title><rect x="788" y="356" width="4" height="15" fill="rgb(220,60,5)"/><text x="791.00" y="366.50"></text></g><g><title>0x7f55f6c47e50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="790" y="372" width="2" height="15" fill="rgb(250,214,41)"/><text x="793.00" y="382.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.10%)</title><rect x="793" y="436" width="1" height="15" fill="rgb(206,204,41)"/><text x="796.00" y="446.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.21%)</title><rect x="793" y="420" width="2" height="15" fill="rgb(207,56,24)"/><text x="796.00" y="430.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.10%)</title><rect x="794" y="436" width="1" height="15" fill="rgb(247,41,49)"/><text x="797.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (4 samples, 0.41%)</title><rect x="792" y="340" width="5" height="15" fill="rgb(207,173,4)"/><text x="795.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (4 samples, 0.41%)</title><rect x="792" y="356" width="5" height="15" fill="rgb(216,142,12)"/><text x="795.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.41%)</title><rect x="792" y="372" width="5" height="15" fill="rgb(208,67,34)"/><text x="795.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 0.41%)</title><rect x="792" y="388" width="5" height="15" fill="rgb(236,74,4)"/><text x="795.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.31%)</title><rect x="793" y="404" width="4" height="15" fill="rgb(245,158,5)"/><text x="796.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.10%)</title><rect x="795" y="420" width="2" height="15" fill="rgb(235,190,5)"/><text x="798.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.10%)</title><rect x="795" y="436" width="2" height="15" fill="rgb(229,36,21)"/><text x="798.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="795" y="452" width="2" height="15" fill="rgb(244,227,7)"/><text x="798.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="795" y="468" width="2" height="15" fill="rgb(248,176,34)"/><text x="798.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="795" y="484" width="2" height="15" fill="rgb(218,20,48)"/><text x="798.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.10%)</title><rect x="795" y="500" width="2" height="15" fill="rgb(231,61,51)"/><text x="798.00" y="510.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (6 samples, 0.62%)</title><rect x="792" y="324" width="7" height="15" fill="rgb(231,212,4)"/><text x="795.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.21%)</title><rect x="797" y="340" width="2" height="15" fill="rgb(235,171,41)"/><text x="800.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="798" y="356" width="1" height="15" fill="rgb(253,110,17)"/><text x="801.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.10%)</title><rect x="798" y="372" width="1" height="15" fill="rgb(213,175,50)"/><text x="801.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.10%)</title><rect x="798" y="388" width="1" height="15" fill="rgb(226,90,27)"/><text x="801.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.10%)</title><rect x="798" y="404" width="1" height="15" fill="rgb(248,67,4)"/><text x="801.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src:1809) (1 samples, 0.10%)</title><rect x="798" y="420" width="1" height="15" fill="rgb(231,80,36)"/><text x="801.00" y="430.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src:323) (1 samples, 0.10%)</title><rect x="798" y="436" width="1" height="15" fill="rgb(239,86,9)"/><text x="801.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="799" y="372" width="1" height="15" fill="rgb(237,166,10)"/><text x="802.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.10%)</title><rect x="799" y="388" width="1" height="15" fill="rgb(218,53,13)"/><text x="802.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.10%)</title><rect x="799" y="404" width="1" height="15" fill="rgb(226,142,9)"/><text x="802.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.10%)</title><rect x="799" y="420" width="1" height="15" fill="rgb(205,61,8)"/><text x="802.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.10%)</title><rect x="799" y="436" width="1" height="15" fill="rgb(228,149,23)"/><text x="802.00" y="446.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:872) (2 samples, 0.21%)</title><rect x="800" y="468" width="3" height="15" fill="rgb(215,154,22)"/><text x="803.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.31%)</title><rect x="800" y="404" width="4" height="15" fill="rgb(252,31,13)"/><text x="803.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.31%)</title><rect x="800" y="420" width="4" height="15" fill="rgb(211,15,15)"/><text x="803.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="800" y="436" width="4" height="15" fill="rgb(205,12,36)"/><text x="803.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:993) (3 samples, 0.31%)</title><rect x="800" y="452" width="4" height="15" fill="rgb(247,140,19)"/><text x="803.00" y="462.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.10%)</title><rect x="803" y="468" width="1" height="15" fill="rgb(207,40,31)"/><text x="806.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 0.93%)</title><rect x="800" y="388" width="11" height="15" fill="rgb(207,112,51)"/><text x="803.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.62%)</title><rect x="804" y="404" width="7" height="15" fill="rgb(250,75,35)"/><text x="807.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src:108) (6 samples, 0.62%)</title><rect x="804" y="420" width="7" height="15" fill="rgb(229,108,11)"/><text x="807.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.14%)</title><rect x="799" y="356" width="13" height="15" fill="rgb(205,187,17)"/><text x="802.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.03%)</title><rect x="800" y="372" width="12" height="15" fill="rgb(249,150,10)"/><text x="803.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1749) (1 samples, 0.10%)</title><rect x="811" y="388" width="1" height="15" fill="rgb(240,88,18)"/><text x="814.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.10%)</title><rect x="812" y="372" width="2" height="15" fill="rgb(217,212,5)"/><text x="815.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (164 samples, 16.96%)</title><rect x="615" y="180" width="200" height="15" fill="rgb(216,14,6)"/><text x="618.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py:53) (31 samples, 3.21%)</title><rect x="777" y="196" width="38" height="15" fill="rgb(236,179,38)"/><text x="780.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py:64) (29 samples, 3.00%)</title><rect x="779" y="212" width="36" height="15" fill="rgb(221,189,26)"/><text x="782.00" y="222.50">_ru..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (29 samples, 3.00%)</title><rect x="779" y="228" width="36" height="15" fill="rgb(239,56,1)"/><text x="782.00" y="238.50">cli..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (27 samples, 2.79%)</title><rect x="782" y="244" width="33" height="15" fill="rgb(252,131,9)"/><text x="785.00" y="254.50">ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (27 samples, 2.79%)</title><rect x="782" y="260" width="33" height="15" fill="rgb(239,50,52)"/><text x="785.00" y="270.50">cl..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (24 samples, 2.48%)</title><rect x="786" y="276" width="29" height="15" fill="rgb(218,150,36)"/><text x="789.00" y="286.50">_w..</text></g><g><title>array_clip (methods.c:2381) (24 samples, 2.48%)</title><rect x="786" y="292" width="29" height="15" fill="rgb(237,156,18)"/><text x="789.00" y="302.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.48%)</title><rect x="786" y="308" width="29" height="15" fill="rgb(226,126,44)"/><text x="789.00" y="318.50">fo..</text></g><g><title>_clip (numpy/core/_methods.py:132) (13 samples, 1.34%)</title><rect x="799" y="324" width="16" height="15" fill="rgb(249,13,44)"/><text x="802.00" y="334.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (13 samples, 1.34%)</title><rect x="799" y="340" width="16" height="15" fill="rgb(238,115,2)"/><text x="802.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.21%)</title><rect x="812" y="356" width="3" height="15" fill="rgb(245,22,47)"/><text x="815.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.10%)</title><rect x="814" y="372" width="1" height="15" fill="rgb(235,113,25)"/><text x="817.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.10%)</title><rect x="815" y="180" width="1" height="15" fill="rgb(232,46,46)"/><text x="818.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.10%)</title><rect x="816" y="180" width="1" height="15" fill="rgb(247,125,42)"/><text x="819.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.21%)</title><rect x="817" y="180" width="3" height="15" fill="rgb(210,87,16)"/><text x="820.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (180 samples, 18.61%)</title><rect x="601" y="132" width="220" height="15" fill="rgb(241,74,36)"/><text x="604.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (180 samples, 18.61%)</title><rect x="601" y="148" width="220" height="15" fill="rgb(229,55,0)"/><text x="604.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (179 samples, 18.51%)</title><rect x="603" y="164" width="218" height="15" fill="rgb(219,207,2)"/><text x="606.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.10%)</title><rect x="820" y="180" width="1" height="15" fill="rgb(219,109,22)"/><text x="823.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:45) (297 samples, 30.71%)</title><rect x="460" y="52" width="362" height="15" fill="rgb(229,173,3)"/><text x="463.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:44) (297 samples, 30.71%)</title><rect x="460" y="68" width="362" height="15" fill="rgb(252,73,54)"/><text x="463.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (296 samples, 30.61%)</title><rect x="461" y="84" width="361" height="15" fill="rgb(211,168,32)"/><text x="464.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (181 samples, 18.72%)</title><rect x="601" y="100" width="221" height="15" fill="rgb(254,170,43)"/><text x="604.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 18.72%)</title><rect x="601" y="116" width="221" height="15" fill="rgb(228,224,53)"/><text x="604.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="821" y="132" width="1" height="15" fill="rgb(206,123,3)"/><text x="824.00" y="142.50"></text></g><g><title>0x7f55f6d0ff7a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="821" y="148" width="1" height="15" fill="rgb(239,162,45)"/><text x="824.00" y="158.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.10%)</title><rect x="822" y="196" width="1" height="15" fill="rgb(211,52,28)"/><text x="825.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:83) (1 samples, 0.10%)</title><rect x="822" y="212" width="1" height="15" fill="rgb(242,213,28)"/><text x="825.00" y="222.50"></text></g><g><title>apply_reshape (onnxconverter_common/onnx_ops.py:569) (1 samples, 0.10%)</title><rect x="822" y="228" width="1" height="15" fill="rgb(218,84,46)"/><text x="825.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.10%)</title><rect x="822" y="244" width="1" height="15" fill="rgb(252,32,39)"/><text x="825.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.10%)</title><rect x="822" y="260" width="1" height="15" fill="rgb(222,148,23)"/><text x="825.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.10%)</title><rect x="822" y="276" width="1" height="15" fill="rgb(221,62,45)"/><text x="825.00" y="286.50"></text></g><g><title>extract (traceback.py:350) (1 samples, 0.10%)</title><rect x="822" y="292" width="1" height="15" fill="rgb(206,108,1)"/><text x="825.00" y="302.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.10%)</title><rect x="823" y="228" width="2" height="15" fill="rgb(249,82,1)"/><text x="826.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.10%)</title><rect x="823" y="244" width="2" height="15" fill="rgb(227,199,2)"/><text x="826.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:975) (1 samples, 0.10%)</title><rect x="823" y="260" width="2" height="15" fill="rgb(206,133,41)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2849) (1 samples, 0.10%)</title><rect x="823" y="276" width="2" height="15" fill="rgb(252,219,11)"/><text x="826.00" y="286.50"></text></g><g><title>NpyIter_New (nditer_constr.c:534) (1 samples, 0.10%)</title><rect x="823" y="292" width="2" height="15" fill="rgb(220,75,53)"/><text x="826.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.10%)</title><rect x="823" y="308" width="2" height="15" fill="rgb(209,101,10)"/><text x="826.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:734) (1 samples, 0.10%)</title><rect x="823" y="324" width="2" height="15" fill="rgb(233,218,9)"/><text x="826.00" y="334.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.31%)</title><rect x="822" y="116" width="4" height="15" fill="rgb(232,50,51)"/><text x="825.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.31%)</title><rect x="822" y="132" width="4" height="15" fill="rgb(217,222,25)"/><text x="825.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.31%)</title><rect x="822" y="148" width="4" height="15" fill="rgb(240,77,18)"/><text x="825.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.31%)</title><rect x="822" y="164" width="4" height="15" fill="rgb(224,132,19)"/><text x="825.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.31%)</title><rect x="822" y="180" width="4" height="15" fill="rgb(205,193,50)"/><text x="825.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (2 samples, 0.21%)</title><rect x="823" y="196" width="3" height="15" fill="rgb(225,177,22)"/><text x="826.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (2 samples, 0.21%)</title><rect x="823" y="212" width="3" height="15" fill="rgb(216,36,52)"/><text x="826.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:138) (1 samples, 0.10%)</title><rect x="825" y="228" width="1" height="15" fill="rgb(250,69,9)"/><text x="828.00" y="238.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:185) (1 samples, 0.10%)</title><rect x="826" y="196" width="1" height="15" fill="rgb(225,13,45)"/><text x="829.00" y="206.50"></text></g><g><title>0x7f55e4f9a61b (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="826" y="212" width="1" height="15" fill="rgb(205,28,47)"/><text x="829.00" y="222.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (2 samples, 0.21%)</title><rect x="826" y="164" width="2" height="15" fill="rgb(254,113,12)"/><text x="829.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (2 samples, 0.21%)</title><rect x="826" y="180" width="2" height="15" fill="rgb(214,21,24)"/><text x="829.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.10%)</title><rect x="827" y="196" width="1" height="15" fill="rgb(242,157,32)"/><text x="830.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:161) (1 samples, 0.10%)</title><rect x="827" y="212" width="1" height="15" fill="rgb(234,84,2)"/><text x="830.00" y="222.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="827" y="228" width="1" height="15" fill="rgb(237,161,6)"/><text x="830.00" y="238.50"></text></g><g><title>google::protobuf::python::cmessage::GetFieldValue (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="827" y="244" width="1" height="15" fill="rgb(239,211,4)"/><text x="830.00" y="254.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::NewContainer (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="827" y="260" width="1" height="15" fill="rgb(216,91,11)"/><text x="830.00" y="270.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:329) (1 samples, 0.10%)</title><rect x="828" y="468" width="2" height="15" fill="rgb(226,83,45)"/><text x="831.00" y="478.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:28) (7 samples, 0.72%)</title><rect x="822" y="84" width="9" height="15" fill="rgb(253,65,3)"/><text x="825.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (7 samples, 0.72%)</title><rect x="822" y="100" width="9" height="15" fill="rgb(226,108,43)"/><text x="825.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (4 samples, 0.41%)</title><rect x="826" y="116" width="5" height="15" fill="rgb(209,226,24)"/><text x="829.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (4 samples, 0.41%)</title><rect x="826" y="132" width="5" height="15" fill="rgb(206,55,11)"/><text x="829.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (4 samples, 0.41%)</title><rect x="826" y="148" width="5" height="15" fill="rgb(234,136,33)"/><text x="829.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.21%)</title><rect x="828" y="164" width="3" height="15" fill="rgb(218,93,51)"/><text x="831.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="828" y="180" width="3" height="15" fill="rgb(231,174,53)"/><text x="831.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="828" y="196" width="3" height="15" fill="rgb(215,194,21)"/><text x="831.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="828" y="212" width="3" height="15" fill="rgb(254,21,2)"/><text x="831.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="828" y="228" width="3" height="15" fill="rgb(231,39,17)"/><text x="831.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="828" y="244" width="3" height="15" fill="rgb(216,228,29)"/><text x="831.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.21%)</title><rect x="828" y="260" width="3" height="15" fill="rgb(219,103,8)"/><text x="831.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="828" y="276" width="3" height="15" fill="rgb(234,109,16)"/><text x="831.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="828" y="292" width="3" height="15" fill="rgb(236,100,38)"/><text x="831.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="828" y="308" width="3" height="15" fill="rgb(219,12,20)"/><text x="831.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="828" y="324" width="3" height="15" fill="rgb(213,75,47)"/><text x="831.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="828" y="340" width="3" height="15" fill="rgb(239,56,25)"/><text x="831.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.21%)</title><rect x="828" y="356" width="3" height="15" fill="rgb(213,63,50)"/><text x="831.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="828" y="372" width="3" height="15" fill="rgb(231,169,43)"/><text x="831.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.21%)</title><rect x="828" y="388" width="3" height="15" fill="rgb(234,110,19)"/><text x="831.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="828" y="404" width="3" height="15" fill="rgb(234,75,9)"/><text x="831.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="828" y="420" width="3" height="15" fill="rgb(214,55,29)"/><text x="831.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="828" y="436" width="3" height="15" fill="rgb(210,201,47)"/><text x="831.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="828" y="452" width="3" height="15" fill="rgb(218,107,10)"/><text x="831.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="830" y="468" width="1" height="15" fill="rgb(215,222,53)"/><text x="833.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.10%)</title><rect x="830" y="484" width="1" height="15" fill="rgb(209,61,36)"/><text x="833.00" y="494.50"></text></g><g><title>0x7f55b68efff9 (?) (1 samples, 0.10%)</title><rect x="831" y="212" width="1" height="15" fill="rgb(232,134,14)"/><text x="834.00" y="222.50"></text></g><g><title>0x7f55b68eaef6 (?) (1 samples, 0.10%)</title><rect x="831" y="228" width="1" height="15" fill="rgb(240,72,1)"/><text x="834.00" y="238.50"></text></g><g><title>0x7f55b68df962 (?) (1 samples, 0.10%)</title><rect x="831" y="244" width="1" height="15" fill="rgb(237,119,27)"/><text x="834.00" y="254.50"></text></g><g><title>0x7f55b69137a7 (?) (1 samples, 0.10%)</title><rect x="831" y="260" width="1" height="15" fill="rgb(249,6,11)"/><text x="834.00" y="270.50"></text></g><g><title>0x7f55b6913379 (?) (1 samples, 0.10%)</title><rect x="831" y="276" width="1" height="15" fill="rgb(227,136,27)"/><text x="834.00" y="286.50"></text></g><g><title>0x7f55b6d718b8 (?) (1 samples, 0.10%)</title><rect x="831" y="292" width="1" height="15" fill="rgb(230,8,33)"/><text x="834.00" y="302.50"></text></g><g><title>0x7f55b6d6fc7f (?) (1 samples, 0.10%)</title><rect x="831" y="308" width="1" height="15" fill="rgb(237,187,34)"/><text x="834.00" y="318.50"></text></g><g><title>0x7f55b6d8299c (?) (1 samples, 0.10%)</title><rect x="831" y="324" width="1" height="15" fill="rgb(232,159,6)"/><text x="834.00" y="334.50"></text></g><g><title>0x7f55b6a00b66 (?) (1 samples, 0.10%)</title><rect x="831" y="340" width="1" height="15" fill="rgb(241,219,4)"/><text x="834.00" y="350.50"></text></g><g><title>0x7f55b6a00b00 (?) (1 samples, 0.10%)</title><rect x="831" y="356" width="1" height="15" fill="rgb(243,210,0)"/><text x="834.00" y="366.50"></text></g><g><title>0x7f55b6a00148 (?) (1 samples, 0.10%)</title><rect x="831" y="372" width="1" height="15" fill="rgb(228,138,19)"/><text x="834.00" y="382.50"></text></g><g><title>0x7f55b69bfaec (?) (1 samples, 0.10%)</title><rect x="831" y="388" width="1" height="15" fill="rgb(251,102,45)"/><text x="834.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="832" y="340" width="6" height="15" fill="rgb(205,3,22)"/><text x="835.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="356" width="1" height="15" fill="rgb(240,47,50)"/><text x="840.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="372" width="1" height="15" fill="rgb(251,42,6)"/><text x="840.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="388" width="1" height="15" fill="rgb(232,90,48)"/><text x="840.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="404" width="1" height="15" fill="rgb(237,19,5)"/><text x="840.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="420" width="1" height="15" fill="rgb(221,192,15)"/><text x="840.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="436" width="1" height="15" fill="rgb(214,122,36)"/><text x="840.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="452" width="1" height="15" fill="rgb(212,13,16)"/><text x="840.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="468" width="1" height="15" fill="rgb(254,197,42)"/><text x="840.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="837" y="484" width="1" height="15" fill="rgb(248,205,30)"/><text x="840.00" y="494.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="838" y="340" width="11" height="15" fill="rgb(217,55,36)"/><text x="841.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="838" y="356" width="11" height="15" fill="rgb(231,88,18)"/><text x="841.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.93%)</title><rect x="838" y="372" width="11" height="15" fill="rgb(239,151,36)"/><text x="841.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="843" y="388" width="6" height="15" fill="rgb(227,52,54)"/><text x="846.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="849" y="340" width="2" height="15" fill="rgb(245,157,11)"/><text x="852.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.72%)</title><rect x="851" y="340" width="9" height="15" fill="rgb(206,198,11)"/><text x="854.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.72%)</title><rect x="851" y="356" width="9" height="15" fill="rgb(248,19,31)"/><text x="854.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.72%)</title><rect x="851" y="372" width="9" height="15" fill="rgb(249,104,46)"/><text x="854.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="855" y="388" width="5" height="15" fill="rgb(210,192,19)"/><text x="858.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="878" y="356" width="2" height="15" fill="rgb(247,67,41)"/><text x="881.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="878" y="372" width="2" height="15" fill="rgb(210,175,23)"/><text x="881.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="878" y="388" width="2" height="15" fill="rgb(247,91,51)"/><text x="881.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="878" y="404" width="2" height="15" fill="rgb(211,131,50)"/><text x="881.00" y="414.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="878" y="420" width="2" height="15" fill="rgb(233,34,54)"/><text x="881.00" y="430.50"></text></g><g><title>0x7f55b68b6930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="904" y="388" width="1" height="15" fill="rgb(234,82,35)"/><text x="907.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.62%)</title><rect x="905" y="388" width="7" height="15" fill="rgb(213,22,33)"/><text x="908.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.62%)</title><rect x="905" y="404" width="7" height="15" fill="rgb(210,229,34)"/><text x="908.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 3.21%)</title><rect x="880" y="356" width="37" height="15" fill="rgb(223,53,16)"/><text x="883.00" y="366.50">onn..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.45%)</title><rect x="900" y="372" width="17" height="15" fill="rgb(249,41,16)"/><text x="903.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.41%)</title><rect x="912" y="388" width="5" height="15" fill="rgb(230,111,12)"/><text x="915.00" y="398.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="917" y="356" width="4" height="15" fill="rgb(232,128,44)"/><text x="920.00" y="366.50"></text></g><g><title>0x7f55f6c3192f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="923" y="372" width="2" height="15" fill="rgb(231,142,20)"/><text x="926.00" y="382.50"></text></g><g><title>0x7f55f6c31965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="925" y="372" width="1" height="15" fill="rgb(215,217,12)"/><text x="928.00" y="382.50"></text></g><g><title>0x7f55f6c3196a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="926" y="372" width="1" height="15" fill="rgb(230,186,15)"/><text x="929.00" y="382.50"></text></g><g><title>0x7f55f6c31998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="927" y="372" width="1" height="15" fill="rgb(224,131,48)"/><text x="930.00" y="382.50"></text></g><g><title>0x7f55f6c31a55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="928" y="372" width="2" height="15" fill="rgb(225,32,14)"/><text x="931.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.52%)</title><rect x="930" y="372" width="6" height="15" fill="rgb(238,110,52)"/><text x="933.00" y="382.50"></text></g><g><title>0x7f55f6c31900 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="942" y="388" width="1" height="15" fill="rgb(242,127,50)"/><text x="945.00" y="398.50"></text></g><g><title>0x7f55f6c3194f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="943" y="388" width="1" height="15" fill="rgb(232,143,27)"/><text x="946.00" y="398.50"></text></g><g><title>0x7f55f6c31965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="944" y="388" width="1" height="15" fill="rgb(234,130,33)"/><text x="947.00" y="398.50"></text></g><g><title>0x7f55f6c31991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="945" y="388" width="2" height="15" fill="rgb(230,127,38)"/><text x="948.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.28%)</title><rect x="921" y="356" width="27" height="15" fill="rgb(209,226,50)"/><text x="924.00" y="366.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.03%)</title><rect x="936" y="372" width="12" height="15" fill="rgb(210,79,27)"/><text x="939.00" y="382.50"></text></g><g><title>0x7f55f6c31a41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="947" y="388" width="1" height="15" fill="rgb(228,171,21)"/><text x="950.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 7.96%)</title><rect x="860" y="340" width="94" height="15" fill="rgb(242,33,2)"/><text x="863.00" y="350.50">onnxruntime..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (5 samples, 0.52%)</title><rect x="948" y="356" width="6" height="15" fill="rgb(239,65,14)"/><text x="951.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.44%)</title><rect x="832" y="260" width="123" height="15" fill="rgb(250,82,1)"/><text x="835.00" y="270.50">onnxruntime::In..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.44%)</title><rect x="832" y="276" width="123" height="15" fill="rgb(224,73,42)"/><text x="835.00" y="286.50">onnxruntime::In..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.44%)</title><rect x="832" y="292" width="123" height="15" fill="rgb(246,134,53)"/><text x="835.00" y="302.50">onnxruntime::ut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.44%)</title><rect x="832" y="308" width="123" height="15" fill="rgb(252,203,49)"/><text x="835.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 10.44%)</title><rect x="832" y="324" width="123" height="15" fill="rgb(206,165,43)"/><text x="835.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="954" y="340" width="1" height="15" fill="rgb(231,61,6)"/><text x="957.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="954" y="356" width="1" height="15" fill="rgb(209,102,10)"/><text x="957.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="954" y="372" width="1" height="15" fill="rgb(211,93,10)"/><text x="957.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="955" y="260" width="1" height="15" fill="rgb(223,67,18)"/><text x="958.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.10%)</title><rect x="955" y="276" width="1" height="15" fill="rgb(225,151,46)"/><text x="958.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="955" y="292" width="1" height="15" fill="rgb(222,24,21)"/><text x="958.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="955" y="308" width="1" height="15" fill="rgb(250,41,16)"/><text x="958.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="955" y="324" width="1" height="15" fill="rgb(234,127,21)"/><text x="958.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="955" y="340" width="1" height="15" fill="rgb(214,182,51)"/><text x="958.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="955" y="356" width="1" height="15" fill="rgb(215,11,50)"/><text x="958.00" y="366.50"></text></g><g><title>0x7f55f6c33028 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="955" y="372" width="1" height="15" fill="rgb(205,71,0)"/><text x="958.00" y="382.50"></text></g><g><title>0x7f55f6c30c9f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="955" y="388" width="1" height="15" fill="rgb(218,215,50)"/><text x="958.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="956" y="260" width="7" height="15" fill="rgb(253,180,46)"/><text x="959.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="959" y="276" width="4" height="15" fill="rgb(212,4,3)"/><text x="962.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:18) (109 samples, 11.27%)</title><rect x="831" y="100" width="133" height="15" fill="rgb(239,225,39)"/><text x="834.00" y="110.50">profile (bench_A..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (109 samples, 11.27%)</title><rect x="831" y="116" width="133" height="15" fill="rgb(220,50,18)"/><text x="834.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (109 samples, 11.27%)</title><rect x="831" y="132" width="133" height="15" fill="rgb(226,24,28)"/><text x="834.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (109 samples, 11.27%)</title><rect x="831" y="148" width="133" height="15" fill="rgb(221,199,17)"/><text x="834.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (109 samples, 11.27%)</title><rect x="831" y="164" width="133" height="15" fill="rgb(210,75,28)"/><text x="834.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (109 samples, 11.27%)</title><rect x="831" y="180" width="133" height="15" fill="rgb(218,16,22)"/><text x="834.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (109 samples, 11.27%)</title><rect x="831" y="196" width="133" height="15" fill="rgb(250,159,3)"/><text x="834.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 11.17%)</title><rect x="832" y="212" width="132" height="15" fill="rgb(215,57,53)"/><text x="835.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 11.17%)</title><rect x="832" y="228" width="132" height="15" fill="rgb(230,121,35)"/><text x="835.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 11.17%)</title><rect x="832" y="244" width="132" height="15" fill="rgb(222,46,29)"/><text x="835.00" y="254.50">onnxruntime::pyt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="963" y="260" width="1" height="15" fill="rgb(208,179,44)"/><text x="966.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="963" y="276" width="1" height="15" fill="rgb(237,85,20)"/><text x="966.00" y="286.50"></text></g><g><title>0x7f55f6c31d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="963" y="292" width="1" height="15" fill="rgb(250,176,5)"/><text x="966.00" y="302.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="964" y="340" width="1" height="15" fill="rgb(206,103,35)"/><text x="967.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="964" y="356" width="1" height="15" fill="rgb(246,83,44)"/><text x="967.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="964" y="372" width="1" height="15" fill="rgb(239,161,17)"/><text x="967.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="964" y="388" width="1" height="15" fill="rgb(211,154,23)"/><text x="967.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="964" y="404" width="1" height="15" fill="rgb(224,181,49)"/><text x="967.00" y="414.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="965" y="340" width="1" height="15" fill="rgb(249,13,43)"/><text x="968.00" y="350.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="966" y="340" width="5" height="15" fill="rgb(251,96,49)"/><text x="969.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.24%)</title><rect x="971" y="372" width="15" height="15" fill="rgb(238,203,54)"/><text x="974.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="982" y="388" width="4" height="15" fill="rgb(243,148,29)"/><text x="985.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="971" y="340" width="16" height="15" fill="rgb(254,180,37)"/><text x="974.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.34%)</title><rect x="971" y="356" width="16" height="15" fill="rgb(241,214,40)"/><text x="974.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="986" y="372" width="1" height="15" fill="rgb(241,221,41)"/><text x="989.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="986" y="388" width="1" height="15" fill="rgb(226,1,7)"/><text x="989.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="987" y="340" width="1" height="15" fill="rgb(242,157,8)"/><text x="990.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.14%)</title><rect x="988" y="340" width="14" height="15" fill="rgb(241,218,1)"/><text x="991.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.14%)</title><rect x="988" y="356" width="14" height="15" fill="rgb(229,49,31)"/><text x="991.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.14%)</title><rect x="988" y="372" width="14" height="15" fill="rgb(234,158,6)"/><text x="991.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1000" y="388" width="2" height="15" fill="rgb(213,66,34)"/><text x="1003.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1002" y="340" width="1" height="15" fill="rgb(248,187,42)"/><text x="1005.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1002" y="356" width="1" height="15" fill="rgb(214,133,48)"/><text x="1005.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1002" y="372" width="1" height="15" fill="rgb(245,47,36)"/><text x="1005.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1002" y="388" width="1" height="15" fill="rgb(215,68,21)"/><text x="1005.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="1030" y="356" width="3" height="15" fill="rgb(243,37,4)"/><text x="1033.00" y="366.50"></text></g><g><title>0x7f55b68b6930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="1085" y="388" width="2" height="15" fill="rgb(236,46,37)"/><text x="1088.00" y="398.50"></text></g><g><title>0x7f55e66fdd50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1091" y="404" width="1" height="15" fill="rgb(219,184,38)"/><text x="1094.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (26 samples, 2.69%)</title><rect x="1087" y="388" width="32" height="15" fill="rgb(228,205,20)"/><text x="1090.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (22 samples, 2.28%)</title><rect x="1092" y="404" width="27" height="15" fill="rgb(231,92,0)"/><text x="1095.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 8.58%)</title><rect x="1033" y="356" width="102" height="15" fill="rgb(238,148,39)"/><text x="1036.00" y="366.50">onnxruntime:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 5.38%)</title><rect x="1071" y="372" width="64" height="15" fill="rgb(224,172,25)"/><text x="1074.00" y="382.50">std::_R..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (13 samples, 1.34%)</title><rect x="1119" y="388" width="16" height="15" fill="rgb(224,145,42)"/><text x="1122.00" y="398.50"></text></g><g><title>0x7f55f6c51d97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1137" y="372" width="1" height="15" fill="rgb(229,152,9)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.41%)</title><rect x="1135" y="356" width="4" height="15" fill="rgb(236,69,38)"/><text x="1138.00" y="366.50"></text></g><g><title>0x7f55f6c51dbe (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1138" y="372" width="1" height="15" fill="rgb(205,13,27)"/><text x="1141.00" y="382.50"></text></g><g><title>0x7f55f6c31900 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1142" y="372" width="2" height="15" fill="rgb(212,0,51)"/><text x="1145.00" y="382.50"></text></g><g><title>0x7f55f6c3192f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1144" y="372" width="2" height="15" fill="rgb(225,75,49)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7f55f6c3194f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1146" y="372" width="1" height="15" fill="rgb(212,99,49)"/><text x="1149.00" y="382.50"></text></g><g><title>0x7f55f6c31998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(216,86,26)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7f55f6c31a38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1148" y="372" width="1" height="15" fill="rgb(209,131,27)"/><text x="1151.00" y="382.50"></text></g><g><title>0x7f55f6c31bd8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1149" y="372" width="1" height="15" fill="rgb(236,163,16)"/><text x="1152.00" y="382.50"></text></g><g><title>0x7f55f6c31be8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1150" y="372" width="2" height="15" fill="rgb(228,204,43)"/><text x="1153.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.31%)</title><rect x="1152" y="372" width="3" height="15" fill="rgb(217,100,25)"/><text x="1155.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="1155" y="372" width="4" height="15" fill="rgb(229,21,52)"/><text x="1158.00" y="382.50"></text></g><g><title>0x7f55e66fe7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1163" y="388" width="1" height="15" fill="rgb(234,166,53)"/><text x="1166.00" y="398.50"></text></g><g><title>0x7f55f6c31900 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1164" y="388" width="1" height="15" fill="rgb(208,215,32)"/><text x="1167.00" y="398.50"></text></g><g><title>0x7f55f6c31965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1165" y="388" width="1" height="15" fill="rgb(248,63,42)"/><text x="1168.00" y="398.50"></text></g><g><title>0x7f55f6c31991 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1166" y="388" width="3" height="15" fill="rgb(252,157,30)"/><text x="1169.00" y="398.50"></text></g><g><title>0x7f55f6c31a4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1169" y="388" width="1" height="15" fill="rgb(243,164,4)"/><text x="1172.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1170" y="388" width="1" height="15" fill="rgb(229,218,2)"/><text x="1173.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 2.79%)</title><rect x="1139" y="356" width="33" height="15" fill="rgb(211,124,8)"/><text x="1142.00" y="366.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.14%)</title><rect x="1159" y="372" width="13" height="15" fill="rgb(235,0,22)"/><text x="1162.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1171" y="388" width="1" height="15" fill="rgb(210,213,31)"/><text x="1174.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 18.30%)</title><rect x="964" y="260" width="216" height="15" fill="rgb(254,130,27)"/><text x="967.00" y="270.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 18.30%)</title><rect x="964" y="276" width="216" height="15" fill="rgb(221,83,0)"/><text x="967.00" y="286.50">onnxruntime::InferenceSessio..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 18.30%)</title><rect x="964" y="292" width="216" height="15" fill="rgb(207,38,14)"/><text x="967.00" y="302.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 18.30%)</title><rect x="964" y="308" width="216" height="15" fill="rgb(244,169,49)"/><text x="967.00" y="318.50">onnxruntime::utils::ExecuteG..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 18.30%)</title><rect x="964" y="324" width="216" height="15" fill="rgb(226,199,16)"/><text x="967.00" y="334.50">onnxruntime::SequentialExecu..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 14.99%)</title><rect x="1003" y="340" width="177" height="15" fill="rgb(231,179,54)"/><text x="1006.00" y="350.50">onnxruntime::ml::TreeEn..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.62%)</title><rect x="1172" y="356" width="8" height="15" fill="rgb(217,154,10)"/><text x="1175.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="1180" y="260" width="6" height="15" fill="rgb(216,28,11)"/><text x="1183.00" y="270.50"></text></g><g><title>0x7f55e66fe7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(206,152,17)"/><text x="1189.00" y="302.50"></text></g><g><title>0x7f55f6c3191e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(205,204,22)"/><text x="1190.00" y="302.50"></text></g><g><title>all (967 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(236,147,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:52) (301 samples, 31.13%)</title><rect x="822" y="52" width="368" height="15" fill="rgb(211,122,24)"/><text x="825.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1..</text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:51) (301 samples, 31.13%)</title><rect x="822" y="68" width="368" height="15" fill="rgb(211,191,24)"/><text x="825.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_m_c..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:29) (294 samples, 30.40%)</title><rect x="831" y="84" width="359" height="15" fill="rgb(251,122,22)"/><text x="834.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1000_50_12_float_.py:23) (185 samples, 19.13%)</title><rect x="964" y="100" width="226" height="15" fill="rgb(208,61,8)"/><text x="967.00" y="110.50">profile (bench_AdaBoostClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (185 samples, 19.13%)</title><rect x="964" y="116" width="226" height="15" fill="rgb(237,101,18)"/><text x="967.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (185 samples, 19.13%)</title><rect x="964" y="132" width="226" height="15" fill="rgb(227,164,8)"/><text x="967.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (185 samples, 19.13%)</title><rect x="964" y="148" width="226" height="15" fill="rgb(248,169,7)"/><text x="967.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (185 samples, 19.13%)</title><rect x="964" y="164" width="226" height="15" fill="rgb(250,56,23)"/><text x="967.00" y="174.50">_run_whole_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (185 samples, 19.13%)</title><rect x="964" y="180" width="226" height="15" fill="rgb(212,42,9)"/><text x="967.00" y="190.50">run (mlprodict/onnxrt/ops_who..</text></g><g><title>run (onnxruntime/capi/session.py:136) (185 samples, 19.13%)</title><rect x="964" y="196" width="226" height="15" fill="rgb(245,219,38)"/><text x="967.00" y="206.50">run (onnxruntime/capi/session..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 19.13%)</title><rect x="964" y="212" width="226" height="15" fill="rgb(247,60,3)"/><text x="967.00" y="222.50">pybind11::cpp_function::dispa..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 19.13%)</title><rect x="964" y="228" width="226" height="15" fill="rgb(217,50,5)"/><text x="967.00" y="238.50">void pybind11::cpp_function::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (185 samples, 19.13%)</title><rect x="964" y="244" width="226" height="15" fill="rgb(229,15,32)"/><text x="967.00" y="254.50">onnxruntime::python::addObjec..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(219,174,36)"/><text x="1189.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(220,197,40)"/><text x="1189.00" y="286.50"></text></g><g><title>0x7f55f6c31d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(246,149,44)"/><text x="1191.00" y="302.50"></text></g></g></svg>