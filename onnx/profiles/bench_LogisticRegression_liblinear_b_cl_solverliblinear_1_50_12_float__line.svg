<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.29%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(226,160,27)"/><text x="13.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(206,110,26)"/><text x="13.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.29%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(212,79,40)"/><text x="13.00" y="190.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.29%)</title><rect x="13" y="164" width="3" height="15" fill="rgb(252,115,13)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.29%)</title><rect x="13" y="180" width="3" height="15" fill="rgb(232,173,43)"/><text x="16.00" y="190.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.29%)</title><rect x="13" y="196" width="3" height="15" fill="rgb(225,90,50)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="13" y="212" width="3" height="15" fill="rgb(241,225,23)"/><text x="16.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="13" y="228" width="3" height="15" fill="rgb(235,62,28)"/><text x="16.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.29%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(235,122,26)"/><text x="16.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.29%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(224,46,27)"/><text x="16.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:18) (3 samples, 0.86%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(248,48,30)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.86%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(231,46,21)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.86%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(215,215,17)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.58%)</title><rect x="13" y="148" width="7" height="15" fill="rgb(238,40,38)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.29%)</title><rect x="16" y="164" width="4" height="15" fill="rgb(253,117,49)"/><text x="19.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.29%)</title><rect x="16" y="180" width="4" height="15" fill="rgb(240,48,11)"/><text x="19.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.29%)</title><rect x="16" y="196" width="4" height="15" fill="rgb(213,156,3)"/><text x="19.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="23" y="116" width="4" height="15" fill="rgb(246,58,54)"/><text x="26.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="23" y="132" width="4" height="15" fill="rgb(243,15,9)"/><text x="26.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="23" y="148" width="4" height="15" fill="rgb(237,97,47)"/><text x="26.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.29%)</title><rect x="30" y="164" width="3" height="15" fill="rgb(233,40,19)"/><text x="33.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.29%)</title><rect x="30" y="180" width="3" height="15" fill="rgb(241,114,28)"/><text x="33.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="64" y="196" width="3" height="15" fill="rgb(225,166,49)"/><text x="67.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 2.02%)</title><rect x="47" y="180" width="24" height="15" fill="rgb(229,22,36)"/><text x="50.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(209,224,50)"/><text x="70.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (13 samples, 3.75%)</title><rect x="30" y="148" width="44" height="15" fill="rgb(253,167,18)"/><text x="33.00" y="158.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 3.46%)</title><rect x="33" y="164" width="41" height="15" fill="rgb(243,176,44)"/><text x="36.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.29%)</title><rect x="71" y="180" width="3" height="15" fill="rgb(206,120,15)"/><text x="74.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.29%)</title><rect x="74" y="148" width="4" height="15" fill="rgb(226,180,15)"/><text x="77.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (2 samples, 0.58%)</title><rect x="78" y="148" width="6" height="15" fill="rgb(244,143,23)"/><text x="81.00" y="158.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.29%)</title><rect x="81" y="164" width="3" height="15" fill="rgb(243,193,2)"/><text x="84.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.29%)</title><rect x="81" y="180" width="3" height="15" fill="rgb(250,159,24)"/><text x="84.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.29%)</title><rect x="88" y="196" width="3" height="15" fill="rgb(238,48,13)"/><text x="91.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(219,101,6)"/><text x="98.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.58%)</title><rect x="125" y="228" width="7" height="15" fill="rgb(240,158,36)"/><text x="128.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 3.17%)</title><rect x="98" y="212" width="37" height="15" fill="rgb(232,66,6)"/><text x="101.00" y="222.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="132" y="228" width="3" height="15" fill="rgb(228,115,21)"/><text x="135.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (17 samples, 4.90%)</title><rect x="84" y="180" width="58" height="15" fill="rgb(225,56,41)"/><text x="87.00" y="190.50">decisi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 4.32%)</title><rect x="91" y="196" width="51" height="15" fill="rgb(206,33,16)"/><text x="94.00" y="206.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.58%)</title><rect x="135" y="212" width="7" height="15" fill="rgb(230,62,26)"/><text x="138.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.58%)</title><rect x="146" y="196" width="6" height="15" fill="rgb(249,124,18)"/><text x="149.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.29%)</title><rect x="156" y="212" width="3" height="15" fill="rgb(223,91,29)"/><text x="159.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.29%)</title><rect x="159" y="212" width="4" height="15" fill="rgb(236,196,35)"/><text x="162.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.58%)</title><rect x="163" y="212" width="6" height="15" fill="rgb(247,69,18)"/><text x="166.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 2.02%)</title><rect x="152" y="196" width="24" height="15" fill="rgb(231,13,5)"/><text x="155.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.58%)</title><rect x="169" y="212" width="7" height="15" fill="rgb(215,100,21)"/><text x="172.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.29%)</title><rect x="176" y="212" width="4" height="15" fill="rgb(244,151,39)"/><text x="179.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (8 samples, 2.31%)</title><rect x="180" y="228" width="27" height="15" fill="rgb(224,1,31)"/><text x="183.00" y="238.50">_..</text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.58%)</title><rect x="207" y="228" width="7" height="15" fill="rgb(206,6,9)"/><text x="210.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (12 samples, 3.46%)</title><rect x="176" y="196" width="41" height="15" fill="rgb(237,164,25)"/><text x="179.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py:179) (11 samples, 3.17%)</title><rect x="180" y="212" width="37" height="15" fill="rgb(220,123,49)"/><text x="183.00" y="222.50">sim..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.29%)</title><rect x="214" y="228" width="3" height="15" fill="rgb(227,36,53)"/><text x="217.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.58%)</title><rect x="217" y="196" width="7" height="15" fill="rgb(208,19,22)"/><text x="220.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.58%)</title><rect x="217" y="212" width="7" height="15" fill="rgb(227,68,45)"/><text x="220.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.29%)</title><rect x="220" y="228" width="4" height="15" fill="rgb(250,148,13)"/><text x="223.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.29%)</title><rect x="224" y="196" width="3" height="15" fill="rgb(225,102,38)"/><text x="227.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.29%)</title><rect x="224" y="212" width="3" height="15" fill="rgb(212,158,14)"/><text x="227.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.29%)</title><rect x="227" y="196" width="4" height="15" fill="rgb(241,159,50)"/><text x="230.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.29%)</title><rect x="231" y="196" width="3" height="15" fill="rgb(211,78,10)"/><text x="234.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.86%)</title><rect x="234" y="228" width="10" height="15" fill="rgb(216,92,10)"/><text x="237.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.15%)</title><rect x="234" y="212" width="14" height="15" fill="rgb(205,28,1)"/><text x="237.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.29%)</title><rect x="244" y="228" width="4" height="15" fill="rgb(243,189,30)"/><text x="247.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.29%)</title><rect x="248" y="212" width="3" height="15" fill="rgb(235,228,54)"/><text x="251.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (6 samples, 1.73%)</title><rect x="234" y="196" width="20" height="15" fill="rgb(236,170,42)"/><text x="237.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.29%)</title><rect x="251" y="212" width="3" height="15" fill="rgb(251,90,49)"/><text x="254.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.29%)</title><rect x="254" y="196" width="4" height="15" fill="rgb(205,161,23)"/><text x="257.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.29%)</title><rect x="258" y="196" width="3" height="15" fill="rgb(246,137,24)"/><text x="261.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.58%)</title><rect x="282" y="228" width="6" height="15" fill="rgb(239,57,29)"/><text x="285.00" y="238.50"></text></g><g><title>0x7efd28a4beaa (libc-2.29.so) (1 samples, 0.29%)</title><rect x="285" y="244" width="3" height="15" fill="rgb(233,225,52)"/><text x="288.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.29%)</title><rect x="288" y="228" width="4" height="15" fill="rgb(237,168,14)"/><text x="291.00" y="238.50"></text></g><g><title>0x7efd28a466d0 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="292" y="244" width="3" height="15" fill="rgb(247,44,28)"/><text x="295.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.58%)</title><rect x="292" y="228" width="7" height="15" fill="rgb(225,183,45)"/><text x="295.00" y="238.50"></text></g><g><title>0x7efd28a466d4 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="295" y="244" width="4" height="15" fill="rgb(242,88,32)"/><text x="298.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 3.46%)</title><rect x="261" y="196" width="41" height="15" fill="rgb(228,167,34)"/><text x="264.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 3.46%)</title><rect x="261" y="212" width="41" height="15" fill="rgb(237,38,2)"/><text x="264.00" y="222.50">_as..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="299" y="228" width="3" height="15" fill="rgb(227,126,15)"/><text x="302.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.29%)</title><rect x="302" y="212" width="3" height="15" fill="rgb(239,158,13)"/><text x="305.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.58%)</title><rect x="305" y="212" width="7" height="15" fill="rgb(241,220,26)"/><text x="308.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.73%)</title><rect x="302" y="196" width="20" height="15" fill="rgb(227,201,15)"/><text x="305.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.86%)</title><rect x="312" y="212" width="10" height="15" fill="rgb(208,169,42)"/><text x="315.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.29%)</title><rect x="319" y="228" width="3" height="15" fill="rgb(240,39,5)"/><text x="322.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.29%)</title><rect x="319" y="244" width="3" height="15" fill="rgb(215,87,27)"/><text x="322.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (54 samples, 15.56%)</title><rect x="142" y="180" width="184" height="15" fill="rgb(236,172,47)"/><text x="145.00" y="190.50">decision_function (skle..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.29%)</title><rect x="322" y="196" width="4" height="15" fill="rgb(241,26,8)"/><text x="325.00" y="206.50"></text></g><g><title>array_add (number.c:329) (1 samples, 0.29%)</title><rect x="329" y="196" width="4" height="15" fill="rgb(223,36,49)"/><text x="332.00" y="206.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.29%)</title><rect x="329" y="212" width="4" height="15" fill="rgb(244,194,9)"/><text x="332.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.29%)</title><rect x="333" y="228" width="3" height="15" fill="rgb(227,127,13)"/><text x="336.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.29%)</title><rect x="333" y="244" width="3" height="15" fill="rgb(216,68,13)"/><text x="336.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.29%)</title><rect x="333" y="260" width="3" height="15" fill="rgb(243,165,17)"/><text x="336.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="336" y="276" width="3" height="15" fill="rgb(209,222,37)"/><text x="339.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.29%)</title><rect x="336" y="292" width="3" height="15" fill="rgb(208,228,17)"/><text x="339.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.29%)</title><rect x="336" y="308" width="3" height="15" fill="rgb(209,24,49)"/><text x="339.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="336" y="324" width="3" height="15" fill="rgb(231,103,48)"/><text x="339.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.29%)</title><rect x="336" y="340" width="3" height="15" fill="rgb(223,6,9)"/><text x="339.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.29%)</title><rect x="336" y="356" width="3" height="15" fill="rgb(232,18,36)"/><text x="339.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.29%)</title><rect x="336" y="372" width="3" height="15" fill="rgb(254,113,33)"/><text x="339.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.58%)</title><rect x="336" y="260" width="7" height="15" fill="rgb(236,175,35)"/><text x="339.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.29%)</title><rect x="339" y="276" width="4" height="15" fill="rgb(232,71,14)"/><text x="342.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.29%)</title><rect x="339" y="292" width="4" height="15" fill="rgb(250,162,43)"/><text x="342.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.29%)</title><rect x="343" y="260" width="3" height="15" fill="rgb(233,55,19)"/><text x="346.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.29%)</title><rect x="343" y="276" width="3" height="15" fill="rgb(221,77,40)"/><text x="346.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.29%)</title><rect x="343" y="292" width="3" height="15" fill="rgb(238,129,2)"/><text x="346.00" y="302.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.44%)</title><rect x="333" y="196" width="17" height="15" fill="rgb(241,212,43)"/><text x="336.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.44%)</title><rect x="333" y="212" width="17" height="15" fill="rgb(236,11,28)"/><text x="336.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.15%)</title><rect x="336" y="228" width="14" height="15" fill="rgb(221,152,24)"/><text x="339.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.15%)</title><rect x="336" y="244" width="14" height="15" fill="rgb(222,41,22)"/><text x="339.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.29%)</title><rect x="346" y="260" width="4" height="15" fill="rgb(249,75,6)"/><text x="349.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.29%)</title><rect x="346" y="276" width="4" height="15" fill="rgb(232,228,14)"/><text x="349.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="346" y="292" width="4" height="15" fill="rgb(206,82,22)"/><text x="349.00" y="302.50"></text></g><g><title>0x7fffffffffffffff (?) (1 samples, 0.29%)</title><rect x="350" y="212" width="3" height="15" fill="rgb(222,188,8)"/><text x="353.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.29%)</title><rect x="350" y="228" width="3" height="15" fill="rgb(254,83,31)"/><text x="353.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.29%)</title><rect x="350" y="244" width="3" height="15" fill="rgb(251,94,21)"/><text x="353.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="350" y="260" width="3" height="15" fill="rgb(210,72,25)"/><text x="353.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.29%)</title><rect x="353" y="228" width="3" height="15" fill="rgb(239,107,48)"/><text x="356.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.29%)</title><rect x="356" y="244" width="4" height="15" fill="rgb(251,187,47)"/><text x="359.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.29%)</title><rect x="356" y="260" width="4" height="15" fill="rgb(253,210,18)"/><text x="359.00" y="270.50"></text></g><g><title>0x7efd28a5612f (libc-2.29.so) (1 samples, 0.29%)</title><rect x="356" y="276" width="4" height="15" fill="rgb(233,112,3)"/><text x="359.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2621) (1 samples, 0.29%)</title><rect x="360" y="244" width="3" height="15" fill="rgb(253,87,26)"/><text x="363.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="363" y="260" width="4" height="15" fill="rgb(216,5,22)"/><text x="366.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.29%)</title><rect x="363" y="276" width="4" height="15" fill="rgb(249,220,4)"/><text x="366.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:910) (1 samples, 0.29%)</title><rect x="363" y="292" width="4" height="15" fill="rgb(213,35,31)"/><text x="366.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.29%)</title><rect x="367" y="292" width="3" height="15" fill="rgb(222,219,16)"/><text x="370.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.58%)</title><rect x="367" y="276" width="6" height="15" fill="rgb(245,174,3)"/><text x="370.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.29%)</title><rect x="370" y="292" width="3" height="15" fill="rgb(235,224,46)"/><text x="373.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="370" y="308" width="3" height="15" fill="rgb(229,88,52)"/><text x="373.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.29%)</title><rect x="370" y="324" width="3" height="15" fill="rgb(223,90,16)"/><text x="373.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.29%)</title><rect x="370" y="340" width="3" height="15" fill="rgb(225,175,27)"/><text x="373.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.29%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(226,187,52)"/><text x="373.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="370" y="372" width="3" height="15" fill="rgb(222,133,40)"/><text x="373.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.29%)</title><rect x="373" y="276" width="4" height="15" fill="rgb(227,40,6)"/><text x="376.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2642) (1 samples, 0.29%)</title><rect x="373" y="292" width="4" height="15" fill="rgb(252,213,7)"/><text x="376.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.29%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(222,187,39)"/><text x="380.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="377" y="324" width="3" height="15" fill="rgb(218,187,4)"/><text x="380.00" y="334.50"></text></g><g><title>0x7efd289eda19 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="380" y="356" width="4" height="15" fill="rgb(249,123,4)"/><text x="383.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.29%)</title><rect x="380" y="372" width="4" height="15" fill="rgb(226,21,12)"/><text x="383.00" y="382.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 2.02%)</title><rect x="363" y="244" width="24" height="15" fill="rgb(249,82,20)"/><text x="366.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 1.73%)</title><rect x="367" y="260" width="20" height="15" fill="rgb(227,53,33)"/><text x="370.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.86%)</title><rect x="377" y="276" width="10" height="15" fill="rgb(243,197,1)"/><text x="380.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.86%)</title><rect x="377" y="292" width="10" height="15" fill="rgb(212,58,13)"/><text x="380.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.58%)</title><rect x="380" y="308" width="7" height="15" fill="rgb(215,168,52)"/><text x="383.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.58%)</title><rect x="380" y="324" width="7" height="15" fill="rgb(217,76,22)"/><text x="383.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.58%)</title><rect x="380" y="340" width="7" height="15" fill="rgb(233,190,11)"/><text x="383.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="384" y="356" width="3" height="15" fill="rgb(254,134,7)"/><text x="387.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.29%)</title><rect x="387" y="244" width="3" height="15" fill="rgb(229,70,37)"/><text x="390.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:112) (1 samples, 0.29%)</title><rect x="387" y="260" width="3" height="15" fill="rgb(250,93,21)"/><text x="390.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (20 samples, 5.76%)</title><rect x="326" y="180" width="68" height="15" fill="rgb(239,58,27)"/><text x="329.00" y="190.50">decisio..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (13 samples, 3.75%)</title><rect x="350" y="196" width="44" height="15" fill="rgb(241,39,30)"/><text x="353.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.46%)</title><rect x="353" y="212" width="41" height="15" fill="rgb(208,103,37)"/><text x="356.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (11 samples, 3.17%)</title><rect x="356" y="228" width="38" height="15" fill="rgb(233,224,54)"/><text x="359.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3085) (1 samples, 0.29%)</title><rect x="390" y="244" width="4" height="15" fill="rgb(238,133,20)"/><text x="393.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (92 samples, 26.51%)</title><rect x="84" y="164" width="313" height="15" fill="rgb(248,10,12)"/><text x="87.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_b..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.29%)</title><rect x="394" y="180" width="3" height="15" fill="rgb(244,32,36)"/><text x="397.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.58%)</title><rect x="401" y="180" width="6" height="15" fill="rgb(229,71,10)"/><text x="404.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.58%)</title><rect x="401" y="196" width="6" height="15" fill="rgb(250,67,42)"/><text x="404.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.58%)</title><rect x="401" y="212" width="6" height="15" fill="rgb(223,179,26)"/><text x="404.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.58%)</title><rect x="401" y="228" width="6" height="15" fill="rgb(251,72,27)"/><text x="404.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.29%)</title><rect x="404" y="244" width="3" height="15" fill="rgb(247,64,8)"/><text x="407.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="407" y="196" width="4" height="15" fill="rgb(252,140,21)"/><text x="410.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.29%)</title><rect x="407" y="212" width="4" height="15" fill="rgb(254,17,15)"/><text x="410.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="411" y="196" width="3" height="15" fill="rgb(248,110,38)"/><text x="414.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="411" y="212" width="3" height="15" fill="rgb(209,148,44)"/><text x="414.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1693) (1 samples, 0.29%)</title><rect x="411" y="228" width="3" height="15" fill="rgb(232,103,27)"/><text x="414.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.29%)</title><rect x="414" y="196" width="4" height="15" fill="rgb(206,134,22)"/><text x="417.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.29%)</title><rect x="414" y="212" width="4" height="15" fill="rgb(227,127,40)"/><text x="417.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.29%)</title><rect x="418" y="212" width="3" height="15" fill="rgb(253,102,9)"/><text x="421.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.29%)</title><rect x="418" y="228" width="3" height="15" fill="rgb(208,15,16)"/><text x="421.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 2.31%)</title><rect x="397" y="164" width="27" height="15" fill="rgb(208,179,15)"/><text x="400.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.44%)</title><rect x="407" y="180" width="17" height="15" fill="rgb(248,163,54)"/><text x="410.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.58%)</title><rect x="418" y="196" width="6" height="15" fill="rgb(249,175,14)"/><text x="421.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.29%)</title><rect x="421" y="212" width="3" height="15" fill="rgb(248,106,3)"/><text x="424.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.29%)</title><rect x="421" y="228" width="3" height="15" fill="rgb(232,188,15)"/><text x="424.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="421" y="244" width="3" height="15" fill="rgb(218,9,44)"/><text x="424.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.29%)</title><rect x="421" y="260" width="3" height="15" fill="rgb(224,63,47)"/><text x="424.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:398) (1 samples, 0.29%)</title><rect x="421" y="276" width="3" height="15" fill="rgb(249,73,29)"/><text x="424.00" y="286.50"></text></g><g><title>add_128 (npy_extint128.h:139) (1 samples, 0.29%)</title><rect x="421" y="292" width="3" height="15" fill="rgb(252,160,28)"/><text x="424.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.29%)</title><rect x="435" y="180" width="3" height="15" fill="rgb(220,109,35)"/><text x="438.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="435" y="196" width="3" height="15" fill="rgb(230,103,51)"/><text x="438.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.29%)</title><rect x="435" y="212" width="3" height="15" fill="rgb(240,97,34)"/><text x="438.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.29%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(220,170,37)"/><text x="438.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:191) (1 samples, 0.29%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(254,93,50)"/><text x="438.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.29%)</title><rect x="445" y="260" width="3" height="15" fill="rgb(212,129,46)"/><text x="448.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.58%)</title><rect x="448" y="308" width="7" height="15" fill="rgb(246,174,38)"/><text x="451.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(216,182,2)"/><text x="455.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.15%)</title><rect x="445" y="228" width="13" height="15" fill="rgb(245,58,51)"/><text x="448.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.15%)</title><rect x="445" y="244" width="13" height="15" fill="rgb(212,108,39)"/><text x="448.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.86%)</title><rect x="448" y="260" width="10" height="15" fill="rgb(240,180,51)"/><text x="451.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.86%)</title><rect x="448" y="276" width="10" height="15" fill="rgb(216,192,23)"/><text x="451.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.86%)</title><rect x="448" y="292" width="10" height="15" fill="rgb(224,222,49)"/><text x="451.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.29%)</title><rect x="455" y="308" width="3" height="15" fill="rgb(213,204,48)"/><text x="458.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.58%)</title><rect x="458" y="244" width="7" height="15" fill="rgb(227,161,0)"/><text x="461.00" y="254.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.29%)</title><rect x="462" y="260" width="3" height="15" fill="rgb(209,168,46)"/><text x="465.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.29%)</title><rect x="465" y="244" width="4" height="15" fill="rgb(227,117,19)"/><text x="468.00" y="254.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.29%)</title><rect x="465" y="260" width="4" height="15" fill="rgb(236,115,29)"/><text x="468.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.29%)</title><rect x="465" y="276" width="4" height="15" fill="rgb(208,175,42)"/><text x="468.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.29%)</title><rect x="465" y="292" width="4" height="15" fill="rgb(229,12,47)"/><text x="468.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.29%)</title><rect x="469" y="260" width="3" height="15" fill="rgb(210,169,14)"/><text x="472.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.29%)</title><rect x="469" y="276" width="3" height="15" fill="rgb(229,103,17)"/><text x="472.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.29%)</title><rect x="469" y="292" width="3" height="15" fill="rgb(234,149,14)"/><text x="472.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.29%)</title><rect x="469" y="308" width="3" height="15" fill="rgb(216,133,47)"/><text x="472.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.29%)</title><rect x="472" y="276" width="3" height="15" fill="rgb(232,100,0)"/><text x="475.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.29%)</title><rect x="472" y="292" width="3" height="15" fill="rgb(250,52,5)"/><text x="475.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.29%)</title><rect x="472" y="308" width="3" height="15" fill="rgb(208,4,11)"/><text x="475.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="472" y="324" width="3" height="15" fill="rgb(205,192,50)"/><text x="475.00" y="334.50"></text></g><g><title>0x7efd28a55d50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="472" y="340" width="3" height="15" fill="rgb(207,156,37)"/><text x="475.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="475" y="276" width="4" height="15" fill="rgb(221,94,34)"/><text x="478.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="475" y="292" width="4" height="15" fill="rgb(250,212,1)"/><text x="478.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.29%)</title><rect x="475" y="308" width="4" height="15" fill="rgb(247,140,0)"/><text x="478.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.29%)</title><rect x="475" y="324" width="4" height="15" fill="rgb(252,49,54)"/><text x="478.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.29%)</title><rect x="475" y="340" width="4" height="15" fill="rgb(251,149,37)"/><text x="478.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.29%)</title><rect x="475" y="356" width="4" height="15" fill="rgb(231,13,20)"/><text x="478.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.29%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(240,227,27)"/><text x="482.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.58%)</title><rect x="479" y="276" width="7" height="15" fill="rgb(231,13,43)"/><text x="482.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.29%)</title><rect x="482" y="292" width="4" height="15" fill="rgb(240,24,35)"/><text x="485.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.29%)</title><rect x="482" y="308" width="4" height="15" fill="rgb(229,180,36)"/><text x="485.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (15 samples, 4.32%)</title><rect x="438" y="180" width="51" height="15" fill="rgb(244,187,3)"/><text x="441.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 4.32%)</title><rect x="438" y="196" width="51" height="15" fill="rgb(240,187,44)"/><text x="441.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.03%)</title><rect x="441" y="212" width="48" height="15" fill="rgb(210,57,26)"/><text x="444.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 2.59%)</title><rect x="458" y="228" width="31" height="15" fill="rgb(222,221,45)"/><text x="461.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.73%)</title><rect x="469" y="244" width="20" height="15" fill="rgb(211,58,14)"/><text x="472.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.44%)</title><rect x="472" y="260" width="17" height="15" fill="rgb(240,191,4)"/><text x="475.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:584) (1 samples, 0.29%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(233,136,15)"/><text x="489.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="489" y="196" width="3" height="15" fill="rgb(214,134,14)"/><text x="492.00" y="206.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.29%)</title><rect x="489" y="212" width="3" height="15" fill="rgb(254,160,49)"/><text x="492.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.29%)</title><rect x="489" y="228" width="3" height="15" fill="rgb(205,221,46)"/><text x="492.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.29%)</title><rect x="489" y="244" width="3" height="15" fill="rgb(219,89,2)"/><text x="492.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.29%)</title><rect x="492" y="196" width="4" height="15" fill="rgb(251,161,14)"/><text x="495.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.29%)</title><rect x="492" y="212" width="4" height="15" fill="rgb(251,46,16)"/><text x="495.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (138 samples, 39.77%)</title><rect x="30" y="132" width="469" height="15" fill="rgb(234,168,3)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (122 samples, 35.16%)</title><rect x="84" y="148" width="415" height="15" fill="rgb(221,74,18)"/><text x="87.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (22 samples, 6.34%)</title><rect x="424" y="164" width="75" height="15" fill="rgb(237,205,35)"/><text x="427.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="489" y="180" width="10" height="15" fill="rgb(245,36,33)"/><text x="492.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="496" y="196" width="3" height="15" fill="rgb(242,35,13)"/><text x="499.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.29%)</title><rect x="496" y="212" width="3" height="15" fill="rgb(226,147,2)"/><text x="499.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="496" y="228" width="3" height="15" fill="rgb(245,200,24)"/><text x="499.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.29%)</title><rect x="496" y="244" width="3" height="15" fill="rgb(225,34,39)"/><text x="499.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.29%)</title><rect x="496" y="260" width="3" height="15" fill="rgb(221,52,17)"/><text x="499.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:38) (145 samples, 41.79%)</title><rect x="10" y="52" width="493" height="15" fill="rgb(242,103,19)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:37) (145 samples, 41.79%)</title><rect x="10" y="68" width="493" height="15" fill="rgb(206,212,21)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:29) (145 samples, 41.79%)</title><rect x="10" y="84" width="493" height="15" fill="rgb(227,203,13)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:23) (142 samples, 40.92%)</title><rect x="20" y="100" width="483" height="15" fill="rgb(252,222,30)"/><text x="23.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (140 samples, 40.35%)</title><rect x="27" y="116" width="476" height="15" fill="rgb(233,192,1)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.29%)</title><rect x="499" y="132" width="4" height="15" fill="rgb(213,60,36)"/><text x="502.00" y="142.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.29%)</title><rect x="503" y="244" width="3" height="15" fill="rgb(211,126,0)"/><text x="506.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="503" y="260" width="3" height="15" fill="rgb(218,134,0)"/><text x="506.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="503" y="276" width="3" height="15" fill="rgb(228,94,54)"/><text x="506.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="503" y="292" width="3" height="15" fill="rgb(229,80,15)"/><text x="506.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="503" y="308" width="3" height="15" fill="rgb(237,218,24)"/><text x="506.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="503" y="324" width="3" height="15" fill="rgb(246,48,3)"/><text x="506.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="503" y="340" width="3" height="15" fill="rgb(254,43,19)"/><text x="506.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="503" y="356" width="3" height="15" fill="rgb(205,134,37)"/><text x="506.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.29%)</title><rect x="503" y="372" width="3" height="15" fill="rgb(213,140,25)"/><text x="506.00" y="382.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.29%)</title><rect x="506" y="244" width="3" height="15" fill="rgb(207,10,1)"/><text x="509.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="506" y="260" width="3" height="15" fill="rgb(229,224,23)"/><text x="509.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="506" y="276" width="3" height="15" fill="rgb(234,112,9)"/><text x="509.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="506" y="292" width="3" height="15" fill="rgb(206,227,22)"/><text x="509.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="506" y="308" width="3" height="15" fill="rgb(241,121,18)"/><text x="509.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="506" y="324" width="3" height="15" fill="rgb(224,221,25)"/><text x="509.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="506" y="340" width="3" height="15" fill="rgb(237,91,54)"/><text x="509.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="506" y="356" width="3" height="15" fill="rgb(215,180,52)"/><text x="509.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:19) (1 samples, 0.29%)</title><rect x="506" y="372" width="3" height="15" fill="rgb(221,111,17)"/><text x="509.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="506" y="388" width="3" height="15" fill="rgb(234,84,51)"/><text x="509.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="506" y="404" width="3" height="15" fill="rgb(245,212,3)"/><text x="509.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="506" y="420" width="3" height="15" fill="rgb(220,140,11)"/><text x="509.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="506" y="436" width="3" height="15" fill="rgb(205,190,1)"/><text x="509.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="506" y="452" width="3" height="15" fill="rgb(246,208,10)"/><text x="509.00" y="462.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="506" y="468" width="3" height="15" fill="rgb(211,124,19)"/><text x="509.00" y="478.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="506" y="484" width="3" height="15" fill="rgb(247,217,9)"/><text x="509.00" y="494.50"></text></g><g><title>0x7efd28a38276 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="506" y="500" width="3" height="15" fill="rgb(236,139,22)"/><text x="509.00" y="510.50"></text></g><g><title>0x7efd28a55f3e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="506" y="516" width="3" height="15" fill="rgb(213,42,41)"/><text x="509.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:1) (3 samples, 0.86%)</title><rect x="503" y="148" width="10" height="15" fill="rgb(245,179,2)"/><text x="506.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="503" y="164" width="10" height="15" fill="rgb(221,69,49)"/><text x="506.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="503" y="180" width="10" height="15" fill="rgb(231,103,39)"/><text x="506.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="503" y="196" width="10" height="15" fill="rgb(208,223,7)"/><text x="506.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="503" y="212" width="10" height="15" fill="rgb(212,84,4)"/><text x="506.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="503" y="228" width="10" height="15" fill="rgb(223,118,41)"/><text x="506.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.29%)</title><rect x="509" y="244" width="4" height="15" fill="rgb(229,135,35)"/><text x="512.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="509" y="260" width="4" height="15" fill="rgb(248,72,6)"/><text x="512.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="509" y="276" width="4" height="15" fill="rgb(225,191,53)"/><text x="512.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="509" y="292" width="4" height="15" fill="rgb(237,203,10)"/><text x="512.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="509" y="308" width="4" height="15" fill="rgb(241,216,52)"/><text x="512.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="509" y="324" width="4" height="15" fill="rgb(232,125,8)"/><text x="512.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.29%)</title><rect x="509" y="340" width="4" height="15" fill="rgb(247,88,47)"/><text x="512.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="509" y="356" width="4" height="15" fill="rgb(242,220,53)"/><text x="512.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="509" y="372" width="4" height="15" fill="rgb(206,98,18)"/><text x="512.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="509" y="388" width="4" height="15" fill="rgb(231,13,36)"/><text x="512.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="509" y="404" width="4" height="15" fill="rgb(241,120,49)"/><text x="512.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="509" y="420" width="4" height="15" fill="rgb(243,189,44)"/><text x="512.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:61) (1 samples, 0.29%)</title><rect x="509" y="436" width="4" height="15" fill="rgb(243,15,36)"/><text x="512.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="509" y="452" width="4" height="15" fill="rgb(251,125,16)"/><text x="512.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="509" y="468" width="4" height="15" fill="rgb(223,152,29)"/><text x="512.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="509" y="484" width="4" height="15" fill="rgb(253,97,43)"/><text x="512.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="509" y="500" width="4" height="15" fill="rgb(254,177,12)"/><text x="512.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="509" y="516" width="4" height="15" fill="rgb(240,115,22)"/><text x="512.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/suite.py:92) (1 samples, 0.29%)</title><rect x="509" y="532" width="4" height="15" fill="rgb(245,77,12)"/><text x="512.00" y="542.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:214) (1 samples, 0.29%)</title><rect x="513" y="996" width="3" height="15" fill="rgb(237,202,50)"/><text x="516.00" y="1006.50"></text></g><g><title>_parse_letter_version (pkg_resources/_vendor/packaging/version.py:321) (1 samples, 0.29%)</title><rect x="513" y="1012" width="3" height="15" fill="rgb(218,209,28)"/><text x="516.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.58%)</title><rect x="513" y="852" width="7" height="15" fill="rgb(244,214,6)"/><text x="516.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.58%)</title><rect x="513" y="868" width="7" height="15" fill="rgb(224,95,27)"/><text x="516.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.58%)</title><rect x="513" y="884" width="7" height="15" fill="rgb(229,187,21)"/><text x="516.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.58%)</title><rect x="513" y="900" width="7" height="15" fill="rgb(211,43,10)"/><text x="516.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.58%)</title><rect x="513" y="916" width="7" height="15" fill="rgb(221,10,13)"/><text x="516.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.58%)</title><rect x="513" y="932" width="7" height="15" fill="rgb(226,75,13)"/><text x="516.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.58%)</title><rect x="513" y="948" width="7" height="15" fill="rgb(242,147,22)"/><text x="516.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.58%)</title><rect x="513" y="964" width="7" height="15" fill="rgb(207,213,20)"/><text x="516.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.58%)</title><rect x="513" y="980" width="7" height="15" fill="rgb(228,169,34)"/><text x="516.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.29%)</title><rect x="516" y="996" width="4" height="15" fill="rgb(243,229,30)"/><text x="519.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="520" y="852" width="3" height="15" fill="rgb(253,169,30)"/><text x="523.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="520" y="868" width="3" height="15" fill="rgb(235,161,21)"/><text x="523.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.29%)</title><rect x="520" y="884" width="3" height="15" fill="rgb(226,152,24)"/><text x="523.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.29%)</title><rect x="520" y="900" width="3" height="15" fill="rgb(208,217,20)"/><text x="523.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.29%)</title><rect x="520" y="916" width="3" height="15" fill="rgb(252,35,49)"/><text x="523.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.29%)</title><rect x="520" y="932" width="3" height="15" fill="rgb(208,97,49)"/><text x="523.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.29%)</title><rect x="520" y="948" width="3" height="15" fill="rgb(245,206,24)"/><text x="523.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (4 samples, 1.15%)</title><rect x="513" y="148" width="13" height="15" fill="rgb(235,52,31)"/><text x="516.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="164" width="13" height="15" fill="rgb(216,162,34)"/><text x="516.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.15%)</title><rect x="513" y="180" width="13" height="15" fill="rgb(249,180,28)"/><text x="516.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="196" width="13" height="15" fill="rgb(238,205,9)"/><text x="516.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="212" width="13" height="15" fill="rgb(214,69,22)"/><text x="516.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="228" width="13" height="15" fill="rgb(241,125,30)"/><text x="516.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="244" width="13" height="15" fill="rgb(232,176,17)"/><text x="516.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="260" width="13" height="15" fill="rgb(245,71,22)"/><text x="516.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="276" width="13" height="15" fill="rgb(244,220,48)"/><text x="516.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.15%)</title><rect x="513" y="292" width="13" height="15" fill="rgb(214,129,23)"/><text x="516.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="308" width="13" height="15" fill="rgb(214,2,1)"/><text x="516.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="324" width="13" height="15" fill="rgb(217,48,39)"/><text x="516.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="340" width="13" height="15" fill="rgb(238,152,50)"/><text x="516.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="356" width="13" height="15" fill="rgb(224,81,44)"/><text x="516.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="372" width="13" height="15" fill="rgb(253,187,27)"/><text x="516.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.15%)</title><rect x="513" y="388" width="13" height="15" fill="rgb(241,116,3)"/><text x="516.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="404" width="13" height="15" fill="rgb(222,222,7)"/><text x="516.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="420" width="13" height="15" fill="rgb(221,39,42)"/><text x="516.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="436" width="13" height="15" fill="rgb(221,174,36)"/><text x="516.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="452" width="13" height="15" fill="rgb(236,58,42)"/><text x="516.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="468" width="13" height="15" fill="rgb(250,200,16)"/><text x="516.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.15%)</title><rect x="513" y="484" width="13" height="15" fill="rgb(205,46,10)"/><text x="516.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="500" width="13" height="15" fill="rgb(228,136,38)"/><text x="516.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="516" width="13" height="15" fill="rgb(233,153,26)"/><text x="516.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="532" width="13" height="15" fill="rgb(234,164,29)"/><text x="516.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="548" width="13" height="15" fill="rgb(225,223,40)"/><text x="516.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="564" width="13" height="15" fill="rgb(223,160,47)"/><text x="516.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.15%)</title><rect x="513" y="580" width="13" height="15" fill="rgb(229,172,26)"/><text x="516.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="596" width="13" height="15" fill="rgb(219,97,28)"/><text x="516.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.15%)</title><rect x="513" y="612" width="13" height="15" fill="rgb(209,77,14)"/><text x="516.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="628" width="13" height="15" fill="rgb(236,177,46)"/><text x="516.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="644" width="13" height="15" fill="rgb(233,146,30)"/><text x="516.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="660" width="13" height="15" fill="rgb(228,109,42)"/><text x="516.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="676" width="13" height="15" fill="rgb(206,13,20)"/><text x="516.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="692" width="13" height="15" fill="rgb(217,206,13)"/><text x="516.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="708" width="13" height="15" fill="rgb(241,122,38)"/><text x="516.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.15%)</title><rect x="513" y="724" width="13" height="15" fill="rgb(237,187,44)"/><text x="516.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="513" y="740" width="13" height="15" fill="rgb(215,48,0)"/><text x="516.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="513" y="756" width="13" height="15" fill="rgb(226,214,11)"/><text x="516.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="513" y="772" width="13" height="15" fill="rgb(240,86,9)"/><text x="516.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="513" y="788" width="13" height="15" fill="rgb(250,40,45)"/><text x="516.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="513" y="804" width="13" height="15" fill="rgb(253,29,1)"/><text x="516.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.15%)</title><rect x="513" y="820" width="13" height="15" fill="rgb(209,72,33)"/><text x="516.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.15%)</title><rect x="513" y="836" width="13" height="15" fill="rgb(242,31,1)"/><text x="516.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.29%)</title><rect x="523" y="852" width="3" height="15" fill="rgb(233,54,19)"/><text x="526.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.29%)</title><rect x="523" y="868" width="3" height="15" fill="rgb(209,20,29)"/><text x="526.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.29%)</title><rect x="523" y="884" width="3" height="15" fill="rgb(205,8,5)"/><text x="526.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.29%)</title><rect x="523" y="900" width="3" height="15" fill="rgb(239,157,23)"/><text x="526.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.29%)</title><rect x="523" y="916" width="3" height="15" fill="rgb(245,124,19)"/><text x="526.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.29%)</title><rect x="523" y="932" width="3" height="15" fill="rgb(250,25,17)"/><text x="526.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.29%)</title><rect x="523" y="948" width="3" height="15" fill="rgb(232,124,27)"/><text x="526.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.29%)</title><rect x="523" y="964" width="3" height="15" fill="rgb(219,97,30)"/><text x="526.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="523" y="980" width="3" height="15" fill="rgb(254,93,6)"/><text x="526.00" y="990.50"></text></g><g><title>0x7efd28a35902 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="523" y="996" width="3" height="15" fill="rgb(249,125,39)"/><text x="526.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.29%)</title><rect x="526" y="772" width="4" height="15" fill="rgb(229,95,19)"/><text x="529.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="526" y="788" width="4" height="15" fill="rgb(238,40,0)"/><text x="529.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="526" y="804" width="4" height="15" fill="rgb(226,49,20)"/><text x="529.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="526" y="820" width="4" height="15" fill="rgb(227,66,51)"/><text x="529.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="526" y="836" width="4" height="15" fill="rgb(218,95,24)"/><text x="529.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="526" y="852" width="4" height="15" fill="rgb(215,48,53)"/><text x="529.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.29%)</title><rect x="526" y="868" width="4" height="15" fill="rgb(247,36,9)"/><text x="529.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="526" y="884" width="4" height="15" fill="rgb(244,145,17)"/><text x="529.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="526" y="900" width="4" height="15" fill="rgb(250,198,21)"/><text x="529.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="526" y="916" width="4" height="15" fill="rgb(231,92,1)"/><text x="529.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="526" y="932" width="4" height="15" fill="rgb(222,71,33)"/><text x="529.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="526" y="948" width="4" height="15" fill="rgb(241,15,54)"/><text x="529.00" y="958.50"></text></g><g><title>0x7efd13cff933 (?) (1 samples, 0.29%)</title><rect x="526" y="964" width="4" height="15" fill="rgb(251,221,36)"/><text x="529.00" y="974.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.29%)</title><rect x="530" y="900" width="3" height="15" fill="rgb(238,147,39)"/><text x="533.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="530" y="916" width="3" height="15" fill="rgb(245,131,33)"/><text x="533.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="530" y="932" width="3" height="15" fill="rgb(229,77,19)"/><text x="533.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="530" y="948" width="3" height="15" fill="rgb(237,118,13)"/><text x="533.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="530" y="964" width="3" height="15" fill="rgb(234,186,51)"/><text x="533.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="530" y="980" width="3" height="15" fill="rgb(246,30,0)"/><text x="533.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:30) (1 samples, 0.29%)</title><rect x="530" y="996" width="3" height="15" fill="rgb(227,176,5)"/><text x="533.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="530" y="1012" width="3" height="15" fill="rgb(247,227,23)"/><text x="533.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.29%)</title><rect x="530" y="1028" width="3" height="15" fill="rgb(222,64,19)"/><text x="533.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.29%)</title><rect x="530" y="1044" width="3" height="15" fill="rgb(233,155,36)"/><text x="533.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.29%)</title><rect x="530" y="1060" width="3" height="15" fill="rgb(221,211,3)"/><text x="533.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.29%)</title><rect x="530" y="1076" width="3" height="15" fill="rgb(218,128,12)"/><text x="533.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.29%)</title><rect x="530" y="1092" width="3" height="15" fill="rgb(251,191,52)"/><text x="533.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1641) (1 samples, 0.29%)</title><rect x="533" y="1028" width="4" height="15" fill="rgb(252,166,0)"/><text x="536.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.29%)</title><rect x="533" y="1044" width="4" height="15" fill="rgb(216,29,21)"/><text x="536.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.29%)</title><rect x="533" y="1060" width="4" height="15" fill="rgb(207,98,31)"/><text x="536.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.29%)</title><rect x="533" y="1076" width="4" height="15" fill="rgb(209,41,42)"/><text x="536.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.29%)</title><rect x="533" y="1092" width="4" height="15" fill="rgb(233,206,30)"/><text x="536.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.29%)</title><rect x="533" y="1108" width="4" height="15" fill="rgb(229,50,19)"/><text x="536.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.29%)</title><rect x="533" y="1124" width="4" height="15" fill="rgb(222,30,44)"/><text x="536.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.29%)</title><rect x="533" y="1140" width="4" height="15" fill="rgb(219,7,20)"/><text x="536.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.29%)</title><rect x="533" y="1156" width="4" height="15" fill="rgb(248,193,24)"/><text x="536.00" y="1166.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.29%)</title><rect x="533" y="1172" width="4" height="15" fill="rgb(242,183,36)"/><text x="536.00" y="1182.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (4 samples, 1.15%)</title><rect x="526" y="148" width="14" height="15" fill="rgb(233,212,14)"/><text x="529.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="164" width="14" height="15" fill="rgb(212,70,40)"/><text x="529.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.15%)</title><rect x="526" y="180" width="14" height="15" fill="rgb(228,36,53)"/><text x="529.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="196" width="14" height="15" fill="rgb(224,57,22)"/><text x="529.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="212" width="14" height="15" fill="rgb(251,31,52)"/><text x="529.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="228" width="14" height="15" fill="rgb(208,87,33)"/><text x="529.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="244" width="14" height="15" fill="rgb(215,73,5)"/><text x="529.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="260" width="14" height="15" fill="rgb(221,127,37)"/><text x="529.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="276" width="14" height="15" fill="rgb(225,45,25)"/><text x="529.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.15%)</title><rect x="526" y="292" width="14" height="15" fill="rgb(225,22,13)"/><text x="529.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="308" width="14" height="15" fill="rgb(253,75,24)"/><text x="529.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="324" width="14" height="15" fill="rgb(253,58,39)"/><text x="529.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="340" width="14" height="15" fill="rgb(249,58,48)"/><text x="529.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="356" width="14" height="15" fill="rgb(227,28,13)"/><text x="529.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="372" width="14" height="15" fill="rgb(215,163,54)"/><text x="529.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.15%)</title><rect x="526" y="388" width="14" height="15" fill="rgb(242,47,11)"/><text x="529.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="404" width="14" height="15" fill="rgb(205,228,10)"/><text x="529.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="420" width="14" height="15" fill="rgb(230,119,31)"/><text x="529.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="436" width="14" height="15" fill="rgb(251,134,50)"/><text x="529.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="452" width="14" height="15" fill="rgb(216,86,21)"/><text x="529.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="468" width="14" height="15" fill="rgb(244,60,25)"/><text x="529.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 1.15%)</title><rect x="526" y="484" width="14" height="15" fill="rgb(244,200,46)"/><text x="529.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="500" width="14" height="15" fill="rgb(209,146,18)"/><text x="529.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="516" width="14" height="15" fill="rgb(232,25,40)"/><text x="529.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="532" width="14" height="15" fill="rgb(225,115,33)"/><text x="529.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="548" width="14" height="15" fill="rgb(254,56,47)"/><text x="529.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="564" width="14" height="15" fill="rgb(242,47,31)"/><text x="529.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 1.15%)</title><rect x="526" y="580" width="14" height="15" fill="rgb(210,6,26)"/><text x="529.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="596" width="14" height="15" fill="rgb(219,28,54)"/><text x="529.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="612" width="14" height="15" fill="rgb(252,57,2)"/><text x="529.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="628" width="14" height="15" fill="rgb(216,90,8)"/><text x="529.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="644" width="14" height="15" fill="rgb(211,205,48)"/><text x="529.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="660" width="14" height="15" fill="rgb(253,155,37)"/><text x="529.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (4 samples, 1.15%)</title><rect x="526" y="676" width="14" height="15" fill="rgb(249,223,4)"/><text x="529.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="526" y="692" width="14" height="15" fill="rgb(223,178,15)"/><text x="529.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="526" y="708" width="14" height="15" fill="rgb(225,162,5)"/><text x="529.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="526" y="724" width="14" height="15" fill="rgb(232,213,10)"/><text x="529.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="526" y="740" width="14" height="15" fill="rgb(222,207,51)"/><text x="529.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="526" y="756" width="14" height="15" fill="rgb(243,177,21)"/><text x="529.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.86%)</title><rect x="530" y="772" width="10" height="15" fill="rgb(205,20,24)"/><text x="533.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.86%)</title><rect x="530" y="788" width="10" height="15" fill="rgb(236,127,9)"/><text x="533.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="530" y="804" width="10" height="15" fill="rgb(234,73,54)"/><text x="533.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="530" y="820" width="10" height="15" fill="rgb(229,70,32)"/><text x="533.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="530" y="836" width="10" height="15" fill="rgb(210,37,7)"/><text x="533.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="530" y="852" width="10" height="15" fill="rgb(223,128,36)"/><text x="533.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="530" y="868" width="10" height="15" fill="rgb(213,133,31)"/><text x="533.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="530" y="884" width="10" height="15" fill="rgb(213,98,21)"/><text x="533.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.58%)</title><rect x="533" y="900" width="7" height="15" fill="rgb(216,17,37)"/><text x="536.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.58%)</title><rect x="533" y="916" width="7" height="15" fill="rgb(215,148,46)"/><text x="536.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="533" y="932" width="7" height="15" fill="rgb(232,111,37)"/><text x="536.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="533" y="948" width="7" height="15" fill="rgb(245,144,19)"/><text x="536.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="533" y="964" width="7" height="15" fill="rgb(211,185,9)"/><text x="536.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="533" y="980" width="7" height="15" fill="rgb(206,142,5)"/><text x="536.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="533" y="996" width="7" height="15" fill="rgb(245,166,11)"/><text x="536.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="533" y="1012" width="7" height="15" fill="rgb(221,166,15)"/><text x="536.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2717) (1 samples, 0.29%)</title><rect x="537" y="1028" width="3" height="15" fill="rgb(219,9,13)"/><text x="540.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.29%)</title><rect x="537" y="1044" width="3" height="15" fill="rgb(247,110,52)"/><text x="540.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.29%)</title><rect x="537" y="1060" width="3" height="15" fill="rgb(235,57,22)"/><text x="540.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.29%)</title><rect x="540" y="724" width="3" height="15" fill="rgb(218,24,16)"/><text x="543.00" y="734.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.29%)</title><rect x="540" y="740" width="3" height="15" fill="rgb(216,2,27)"/><text x="543.00" y="750.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:554) (1 samples, 0.29%)</title><rect x="540" y="756" width="3" height="15" fill="rgb(224,130,7)"/><text x="543.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.29%)</title><rect x="543" y="772" width="4" height="15" fill="rgb(249,119,45)"/><text x="546.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="543" y="788" width="4" height="15" fill="rgb(245,158,41)"/><text x="546.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="543" y="804" width="4" height="15" fill="rgb(234,151,49)"/><text x="546.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="543" y="820" width="4" height="15" fill="rgb(226,123,44)"/><text x="546.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="543" y="836" width="4" height="15" fill="rgb(240,104,19)"/><text x="546.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="543" y="852" width="4" height="15" fill="rgb(254,71,38)"/><text x="546.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:73) (1 samples, 0.29%)</title><rect x="543" y="868" width="4" height="15" fill="rgb(237,69,8)"/><text x="546.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.86%)</title><rect x="540" y="244" width="10" height="15" fill="rgb(210,171,4)"/><text x="543.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="260" width="10" height="15" fill="rgb(218,183,33)"/><text x="543.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="540" y="276" width="10" height="15" fill="rgb(250,227,38)"/><text x="543.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="540" y="292" width="10" height="15" fill="rgb(234,76,37)"/><text x="543.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="540" y="308" width="10" height="15" fill="rgb(251,126,24)"/><text x="543.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="540" y="324" width="10" height="15" fill="rgb(245,141,33)"/><text x="543.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.86%)</title><rect x="540" y="340" width="10" height="15" fill="rgb(228,84,20)"/><text x="543.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="356" width="10" height="15" fill="rgb(210,67,2)"/><text x="543.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.86%)</title><rect x="540" y="372" width="10" height="15" fill="rgb(214,175,29)"/><text x="543.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="540" y="388" width="10" height="15" fill="rgb(227,168,10)"/><text x="543.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="404" width="10" height="15" fill="rgb(215,216,25)"/><text x="543.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="540" y="420" width="10" height="15" fill="rgb(223,181,43)"/><text x="543.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="540" y="436" width="10" height="15" fill="rgb(229,201,15)"/><text x="543.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="540" y="452" width="10" height="15" fill="rgb(211,207,16)"/><text x="543.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="540" y="468" width="10" height="15" fill="rgb(241,139,17)"/><text x="543.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 0.86%)</title><rect x="540" y="484" width="10" height="15" fill="rgb(211,174,47)"/><text x="543.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="500" width="10" height="15" fill="rgb(209,37,36)"/><text x="543.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="540" y="516" width="10" height="15" fill="rgb(210,35,51)"/><text x="543.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="540" y="532" width="10" height="15" fill="rgb(211,0,20)"/><text x="543.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="540" y="548" width="10" height="15" fill="rgb(208,102,6)"/><text x="543.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="540" y="564" width="10" height="15" fill="rgb(216,218,54)"/><text x="543.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 0.86%)</title><rect x="540" y="580" width="10" height="15" fill="rgb(226,52,52)"/><text x="543.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="596" width="10" height="15" fill="rgb(224,44,26)"/><text x="543.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="540" y="612" width="10" height="15" fill="rgb(249,141,21)"/><text x="543.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="540" y="628" width="10" height="15" fill="rgb(212,187,5)"/><text x="543.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="540" y="644" width="10" height="15" fill="rgb(209,31,30)"/><text x="543.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="540" y="660" width="10" height="15" fill="rgb(253,187,45)"/><text x="543.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 0.86%)</title><rect x="540" y="676" width="10" height="15" fill="rgb(246,93,19)"/><text x="543.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="540" y="692" width="10" height="15" fill="rgb(205,93,7)"/><text x="543.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="540" y="708" width="10" height="15" fill="rgb(231,102,6)"/><text x="543.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="543" y="724" width="7" height="15" fill="rgb(241,171,5)"/><text x="546.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="543" y="740" width="7" height="15" fill="rgb(213,166,38)"/><text x="546.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="543" y="756" width="7" height="15" fill="rgb(225,36,7)"/><text x="546.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.29%)</title><rect x="547" y="772" width="3" height="15" fill="rgb(241,189,9)"/><text x="550.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="547" y="788" width="3" height="15" fill="rgb(225,158,49)"/><text x="550.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="547" y="804" width="3" height="15" fill="rgb(210,32,10)"/><text x="550.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="547" y="820" width="3" height="15" fill="rgb(206,156,5)"/><text x="550.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="547" y="836" width="3" height="15" fill="rgb(228,139,21)"/><text x="550.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="547" y="852" width="3" height="15" fill="rgb(246,119,4)"/><text x="550.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.29%)</title><rect x="547" y="868" width="3" height="15" fill="rgb(225,14,27)"/><text x="550.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="547" y="884" width="3" height="15" fill="rgb(247,138,48)"/><text x="550.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="547" y="900" width="3" height="15" fill="rgb(229,91,47)"/><text x="550.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="547" y="916" width="3" height="15" fill="rgb(217,148,15)"/><text x="550.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="547" y="932" width="3" height="15" fill="rgb(244,98,40)"/><text x="550.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="547" y="948" width="3" height="15" fill="rgb(228,152,39)"/><text x="550.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.29%)</title><rect x="547" y="964" width="3" height="15" fill="rgb(246,95,31)"/><text x="550.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="547" y="980" width="3" height="15" fill="rgb(207,212,18)"/><text x="550.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="547" y="996" width="3" height="15" fill="rgb(225,30,8)"/><text x="550.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="547" y="1012" width="3" height="15" fill="rgb(219,81,38)"/><text x="550.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="547" y="1028" width="3" height="15" fill="rgb(205,49,37)"/><text x="550.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="547" y="1044" width="3" height="15" fill="rgb(220,15,52)"/><text x="550.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:31) (1 samples, 0.29%)</title><rect x="547" y="1060" width="3" height="15" fill="rgb(232,40,23)"/><text x="550.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="547" y="1076" width="3" height="15" fill="rgb(236,58,23)"/><text x="550.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="547" y="1092" width="3" height="15" fill="rgb(213,5,1)"/><text x="550.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="547" y="1108" width="3" height="15" fill="rgb(206,174,42)"/><text x="550.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="547" y="1124" width="3" height="15" fill="rgb(242,163,11)"/><text x="550.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="547" y="1140" width="3" height="15" fill="rgb(229,223,41)"/><text x="550.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/utf8prober.py:31) (1 samples, 0.29%)</title><rect x="547" y="1156" width="3" height="15" fill="rgb(208,91,40)"/><text x="550.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="547" y="1172" width="3" height="15" fill="rgb(239,184,42)"/><text x="550.00" y="1182.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;:182) (1 samples, 0.29%)</title><rect x="547" y="1188" width="3" height="15" fill="rgb(210,52,37)"/><text x="550.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.29%)</title><rect x="550" y="340" width="4" height="15" fill="rgb(227,11,45)"/><text x="553.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="550" y="356" width="4" height="15" fill="rgb(209,20,46)"/><text x="553.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="550" y="372" width="4" height="15" fill="rgb(242,175,42)"/><text x="553.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="550" y="388" width="4" height="15" fill="rgb(220,222,22)"/><text x="553.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="550" y="404" width="4" height="15" fill="rgb(217,109,41)"/><text x="553.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="550" y="420" width="4" height="15" fill="rgb(246,92,38)"/><text x="553.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.29%)</title><rect x="550" y="436" width="4" height="15" fill="rgb(248,76,50)"/><text x="553.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="550" y="452" width="4" height="15" fill="rgb(248,18,16)"/><text x="553.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="550" y="468" width="4" height="15" fill="rgb(248,47,46)"/><text x="553.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="550" y="484" width="4" height="15" fill="rgb(209,225,46)"/><text x="553.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="550" y="500" width="4" height="15" fill="rgb(229,155,0)"/><text x="553.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="550" y="516" width="4" height="15" fill="rgb(250,99,32)"/><text x="553.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.29%)</title><rect x="550" y="532" width="4" height="15" fill="rgb(205,220,2)"/><text x="553.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="550" y="548" width="4" height="15" fill="rgb(242,51,16)"/><text x="553.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="550" y="564" width="4" height="15" fill="rgb(233,121,14)"/><text x="553.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="550" y="580" width="4" height="15" fill="rgb(228,125,6)"/><text x="553.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="550" y="596" width="4" height="15" fill="rgb(237,145,50)"/><text x="553.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="550" y="612" width="4" height="15" fill="rgb(214,178,22)"/><text x="553.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.29%)</title><rect x="550" y="628" width="4" height="15" fill="rgb(212,225,18)"/><text x="553.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="550" y="644" width="4" height="15" fill="rgb(210,43,9)"/><text x="553.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="550" y="660" width="4" height="15" fill="rgb(249,180,13)"/><text x="553.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="550" y="676" width="4" height="15" fill="rgb(222,94,17)"/><text x="553.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="550" y="692" width="4" height="15" fill="rgb(234,120,27)"/><text x="553.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="550" y="708" width="4" height="15" fill="rgb(242,152,13)"/><text x="553.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:72) (1 samples, 0.29%)</title><rect x="550" y="724" width="4" height="15" fill="rgb(238,116,50)"/><text x="553.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="550" y="740" width="4" height="15" fill="rgb(215,208,27)"/><text x="553.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="550" y="756" width="4" height="15" fill="rgb(242,169,47)"/><text x="553.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="550" y="772" width="4" height="15" fill="rgb(250,111,41)"/><text x="553.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="550" y="788" width="4" height="15" fill="rgb(227,90,39)"/><text x="553.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="550" y="804" width="4" height="15" fill="rgb(245,77,18)"/><text x="553.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="550" y="820" width="4" height="15" fill="rgb(213,211,14)"/><text x="553.00" y="830.50"></text></g><g><title>0x7efcfdf4d179 (?) (1 samples, 0.29%)</title><rect x="554" y="916" width="3" height="15" fill="rgb(208,126,4)"/><text x="557.00" y="926.50"></text></g><g><title>0x7efcfdf51d4a (?) (1 samples, 0.29%)</title><rect x="554" y="932" width="3" height="15" fill="rgb(241,66,28)"/><text x="557.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="554" y="948" width="3" height="15" fill="rgb(214,151,16)"/><text x="557.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="554" y="964" width="3" height="15" fill="rgb(245,160,26)"/><text x="557.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.29%)</title><rect x="554" y="980" width="3" height="15" fill="rgb(244,100,15)"/><text x="557.00" y="990.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.29%)</title><rect x="554" y="996" width="3" height="15" fill="rgb(222,206,19)"/><text x="557.00" y="1006.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.29%)</title><rect x="554" y="1012" width="3" height="15" fill="rgb(251,11,42)"/><text x="557.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="554" y="1028" width="3" height="15" fill="rgb(251,126,21)"/><text x="557.00" y="1038.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1044" width="3" height="15" fill="rgb(224,8,42)"/><text x="557.00" y="1054.50"></text></g><g><title>0x7efd28cbd995 (libdl-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1060" width="3" height="15" fill="rgb(232,41,7)"/><text x="557.00" y="1070.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1076" width="3" height="15" fill="rgb(207,56,21)"/><text x="557.00" y="1086.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1092" width="3" height="15" fill="rgb(239,107,5)"/><text x="557.00" y="1102.50"></text></g><g><title>0x7efd28cbd258 (libdl-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1108" width="3" height="15" fill="rgb(215,17,20)"/><text x="557.00" y="1118.50"></text></g><g><title>0x7efd28d0ad7a (ld-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1124" width="3" height="15" fill="rgb(225,86,14)"/><text x="557.00" y="1134.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1140" width="3" height="15" fill="rgb(226,146,44)"/><text x="557.00" y="1150.50"></text></g><g><title>0x7efd28d0b345 (ld-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1156" width="3" height="15" fill="rgb(232,223,48)"/><text x="557.00" y="1166.50"></text></g><g><title>0x7efd28d03fec (ld-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1172" width="3" height="15" fill="rgb(224,221,41)"/><text x="557.00" y="1182.50"></text></g><g><title>0x7efd28d02491 (ld-2.29.so) (1 samples, 0.29%)</title><rect x="554" y="1188" width="3" height="15" fill="rgb(221,20,24)"/><text x="557.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.58%)</title><rect x="554" y="628" width="6" height="15" fill="rgb(230,46,27)"/><text x="557.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="554" y="644" width="6" height="15" fill="rgb(224,208,29)"/><text x="557.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="554" y="660" width="6" height="15" fill="rgb(214,38,38)"/><text x="557.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="554" y="676" width="6" height="15" fill="rgb(230,37,7)"/><text x="557.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="554" y="692" width="6" height="15" fill="rgb(253,82,24)"/><text x="557.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="554" y="708" width="6" height="15" fill="rgb(206,34,39)"/><text x="557.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.58%)</title><rect x="554" y="724" width="6" height="15" fill="rgb(234,200,49)"/><text x="557.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="554" y="740" width="6" height="15" fill="rgb(251,96,35)"/><text x="557.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="554" y="756" width="6" height="15" fill="rgb(212,58,37)"/><text x="557.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="554" y="772" width="6" height="15" fill="rgb(205,8,38)"/><text x="557.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="554" y="788" width="6" height="15" fill="rgb(249,74,44)"/><text x="557.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="554" y="804" width="6" height="15" fill="rgb(206,211,34)"/><text x="557.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:6) (2 samples, 0.58%)</title><rect x="554" y="820" width="6" height="15" fill="rgb(236,225,41)"/><text x="557.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="554" y="836" width="6" height="15" fill="rgb(234,5,37)"/><text x="557.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="554" y="852" width="6" height="15" fill="rgb(208,74,25)"/><text x="557.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="554" y="868" width="6" height="15" fill="rgb(230,35,47)"/><text x="557.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.58%)</title><rect x="554" y="884" width="6" height="15" fill="rgb(224,152,8)"/><text x="557.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="554" y="900" width="6" height="15" fill="rgb(237,210,42)"/><text x="557.00" y="910.50"></text></g><g><title>0x7efcfdf4d179 (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="557" y="916" width="3" height="15" fill="rgb(207,153,43)"/><text x="560.00" y="926.50"></text></g><g><title>0x7efcfdf51d4a (pandas/_libs/tslibs/period.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="557" y="932" width="3" height="15" fill="rgb(239,91,44)"/><text x="560.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="557" y="948" width="3" height="15" fill="rgb(218,207,6)"/><text x="560.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="557" y="964" width="3" height="15" fill="rgb(239,24,35)"/><text x="560.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="557" y="980" width="3" height="15" fill="rgb(218,137,27)"/><text x="560.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="557" y="996" width="3" height="15" fill="rgb(246,175,34)"/><text x="560.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="557" y="1012" width="3" height="15" fill="rgb(244,186,47)"/><text x="560.00" y="1022.50"></text></g><g><title>0x7efcfdad1b02 (pandas/_libs/tslibs/timestamps.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="557" y="1028" width="3" height="15" fill="rgb(242,131,23)"/><text x="560.00" y="1038.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:327) (1 samples, 0.29%)</title><rect x="560" y="1268" width="4" height="15" fill="rgb(229,126,50)"/><text x="563.00" y="1278.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.29%)</title><rect x="560" y="1284" width="4" height="15" fill="rgb(226,110,23)"/><text x="563.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.15%)</title><rect x="554" y="436" width="13" height="15" fill="rgb(215,163,17)"/><text x="557.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="554" y="452" width="13" height="15" fill="rgb(242,74,52)"/><text x="557.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="554" y="468" width="13" height="15" fill="rgb(253,48,26)"/><text x="557.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="554" y="484" width="13" height="15" fill="rgb(218,64,50)"/><text x="557.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="554" y="500" width="13" height="15" fill="rgb(241,103,18)"/><text x="557.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="554" y="516" width="13" height="15" fill="rgb(216,186,0)"/><text x="557.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.15%)</title><rect x="554" y="532" width="13" height="15" fill="rgb(242,208,47)"/><text x="557.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.15%)</title><rect x="554" y="548" width="13" height="15" fill="rgb(238,216,27)"/><text x="557.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.15%)</title><rect x="554" y="564" width="13" height="15" fill="rgb(206,146,48)"/><text x="557.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.15%)</title><rect x="554" y="580" width="13" height="15" fill="rgb(235,155,50)"/><text x="557.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.15%)</title><rect x="554" y="596" width="13" height="15" fill="rgb(239,171,20)"/><text x="557.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.15%)</title><rect x="554" y="612" width="13" height="15" fill="rgb(253,224,32)"/><text x="557.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.58%)</title><rect x="560" y="628" width="7" height="15" fill="rgb(236,171,51)"/><text x="563.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="644" width="7" height="15" fill="rgb(253,200,35)"/><text x="563.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="660" width="7" height="15" fill="rgb(251,61,20)"/><text x="563.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="676" width="7" height="15" fill="rgb(232,68,23)"/><text x="563.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="560" y="692" width="7" height="15" fill="rgb(249,167,1)"/><text x="563.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="708" width="7" height="15" fill="rgb(213,209,40)"/><text x="563.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (2 samples, 0.58%)</title><rect x="560" y="724" width="7" height="15" fill="rgb(246,101,8)"/><text x="563.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="740" width="7" height="15" fill="rgb(220,175,40)"/><text x="563.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.58%)</title><rect x="560" y="756" width="7" height="15" fill="rgb(228,206,42)"/><text x="563.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="772" width="7" height="15" fill="rgb(235,64,29)"/><text x="563.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="788" width="7" height="15" fill="rgb(250,44,54)"/><text x="563.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="804" width="7" height="15" fill="rgb(220,172,10)"/><text x="563.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="820" width="7" height="15" fill="rgb(247,130,15)"/><text x="563.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="560" y="836" width="7" height="15" fill="rgb(238,100,51)"/><text x="563.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="852" width="7" height="15" fill="rgb(246,202,4)"/><text x="563.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (2 samples, 0.58%)</title><rect x="560" y="868" width="7" height="15" fill="rgb(245,152,5)"/><text x="563.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="884" width="7" height="15" fill="rgb(235,45,51)"/><text x="563.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="900" width="7" height="15" fill="rgb(238,146,38)"/><text x="563.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="916" width="7" height="15" fill="rgb(212,151,9)"/><text x="563.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="560" y="932" width="7" height="15" fill="rgb(239,219,25)"/><text x="563.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="948" width="7" height="15" fill="rgb(234,181,20)"/><text x="563.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (2 samples, 0.58%)</title><rect x="560" y="964" width="7" height="15" fill="rgb(224,183,16)"/><text x="563.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="980" width="7" height="15" fill="rgb(221,85,17)"/><text x="563.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="996" width="7" height="15" fill="rgb(237,64,52)"/><text x="563.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="1012" width="7" height="15" fill="rgb(240,55,16)"/><text x="563.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="560" y="1028" width="7" height="15" fill="rgb(254,45,34)"/><text x="563.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="1044" width="7" height="15" fill="rgb(219,140,19)"/><text x="563.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:36) (2 samples, 0.58%)</title><rect x="560" y="1060" width="7" height="15" fill="rgb(232,79,22)"/><text x="563.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="1076" width="7" height="15" fill="rgb(242,127,44)"/><text x="563.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="1092" width="7" height="15" fill="rgb(228,91,29)"/><text x="563.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="1108" width="7" height="15" fill="rgb(226,82,53)"/><text x="563.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="560" y="1124" width="7" height="15" fill="rgb(251,126,41)"/><text x="563.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="560" y="1140" width="7" height="15" fill="rgb(212,157,35)"/><text x="563.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py:38) (2 samples, 0.58%)</title><rect x="560" y="1156" width="7" height="15" fill="rgb(217,91,11)"/><text x="563.00" y="1166.50"></text></g><g><title>import_optional_dependency (pandas/compat/_optional.py:90) (2 samples, 0.58%)</title><rect x="560" y="1172" width="7" height="15" fill="rgb(206,39,10)"/><text x="563.00" y="1182.50"></text></g><g><title>import_module (importlib/__init__.py:127) (2 samples, 0.58%)</title><rect x="560" y="1188" width="7" height="15" fill="rgb(241,85,28)"/><text x="563.00" y="1198.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.58%)</title><rect x="560" y="1204" width="7" height="15" fill="rgb(254,205,45)"/><text x="563.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="560" y="1220" width="7" height="15" fill="rgb(207,201,21)"/><text x="563.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="560" y="1236" width="7" height="15" fill="rgb(221,22,54)"/><text x="563.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="560" y="1252" width="7" height="15" fill="rgb(205,160,9)"/><text x="563.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="564" y="1268" width="3" height="15" fill="rgb(248,55,11)"/><text x="567.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="564" y="1284" width="3" height="15" fill="rgb(250,129,6)"/><text x="567.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bottleneck/__init__.py:36) (1 samples, 0.29%)</title><rect x="564" y="1300" width="3" height="15" fill="rgb(249,51,29)"/><text x="567.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="564" y="1316" width="3" height="15" fill="rgb(244,172,8)"/><text x="567.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="564" y="1332" width="3" height="15" fill="rgb(240,133,18)"/><text x="567.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="564" y="1348" width="3" height="15" fill="rgb(236,150,32)"/><text x="567.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="564" y="1364" width="3" height="15" fill="rgb(246,125,39)"/><text x="567.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="564" y="1380" width="3" height="15" fill="rgb(250,20,25)"/><text x="567.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="564" y="1396" width="3" height="15" fill="rgb(228,186,27)"/><text x="567.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.29%)</title><rect x="567" y="1108" width="4" height="15" fill="rgb(229,173,22)"/><text x="570.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="567" y="1124" width="4" height="15" fill="rgb(205,5,19)"/><text x="570.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="567" y="1140" width="4" height="15" fill="rgb(240,73,0)"/><text x="570.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="567" y="1156" width="4" height="15" fill="rgb(250,41,39)"/><text x="570.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="567" y="1172" width="4" height="15" fill="rgb(223,159,25)"/><text x="570.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="567" y="1188" width="4" height="15" fill="rgb(230,228,22)"/><text x="570.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.29%)</title><rect x="567" y="1204" width="4" height="15" fill="rgb(254,207,10)"/><text x="570.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="567" y="1220" width="4" height="15" fill="rgb(229,26,29)"/><text x="570.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="567" y="1236" width="4" height="15" fill="rgb(221,30,26)"/><text x="570.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="567" y="1252" width="4" height="15" fill="rgb(225,102,45)"/><text x="570.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="567" y="1268" width="4" height="15" fill="rgb(247,80,16)"/><text x="570.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="567" y="1284" width="4" height="15" fill="rgb(235,224,53)"/><text x="570.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.29%)</title><rect x="567" y="1300" width="4" height="15" fill="rgb(208,59,18)"/><text x="570.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.29%)</title><rect x="567" y="1316" width="4" height="15" fill="rgb(216,162,31)"/><text x="570.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.29%)</title><rect x="567" y="1332" width="4" height="15" fill="rgb(232,16,31)"/><text x="570.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.29%)</title><rect x="567" y="1348" width="4" height="15" fill="rgb(247,64,39)"/><text x="570.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.29%)</title><rect x="567" y="1364" width="4" height="15" fill="rgb(229,205,38)"/><text x="570.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.29%)</title><rect x="567" y="1380" width="4" height="15" fill="rgb(241,57,2)"/><text x="570.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.29%)</title><rect x="567" y="1396" width="4" height="15" fill="rgb(253,54,29)"/><text x="570.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="567" y="1412" width="4" height="15" fill="rgb(237,132,8)"/><text x="570.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.29%)</title><rect x="567" y="1428" width="4" height="15" fill="rgb(225,127,26)"/><text x="570.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.29%)</title><rect x="571" y="1460" width="3" height="15" fill="rgb(224,209,14)"/><text x="574.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.29%)</title><rect x="571" y="1476" width="3" height="15" fill="rgb(239,72,14)"/><text x="574.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.29%)</title><rect x="571" y="1492" width="3" height="15" fill="rgb(229,25,16)"/><text x="574.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.29%)</title><rect x="571" y="1508" width="3" height="15" fill="rgb(237,163,14)"/><text x="574.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.29%)</title><rect x="571" y="1524" width="3" height="15" fill="rgb(243,141,29)"/><text x="574.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.29%)</title><rect x="571" y="1540" width="3" height="15" fill="rgb(225,143,46)"/><text x="574.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.29%)</title><rect x="571" y="1556" width="3" height="15" fill="rgb(247,168,9)"/><text x="574.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:23) (1 samples, 0.29%)</title><rect x="571" y="1572" width="3" height="15" fill="rgb(221,11,2)"/><text x="574.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.29%)</title><rect x="571" y="1588" width="3" height="15" fill="rgb(246,227,24)"/><text x="574.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:4) (22 samples, 6.34%)</title><rect x="503" y="52" width="74" height="15" fill="rgb(219,213,32)"/><text x="506.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (22 samples, 6.34%)</title><rect x="503" y="68" width="74" height="15" fill="rgb(231,123,51)"/><text x="506.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (22 samples, 6.34%)</title><rect x="503" y="84" width="74" height="15" fill="rgb(211,221,0)"/><text x="506.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (22 samples, 6.34%)</title><rect x="503" y="100" width="74" height="15" fill="rgb(248,198,39)"/><text x="506.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (22 samples, 6.34%)</title><rect x="503" y="116" width="74" height="15" fill="rgb(238,33,26)"/><text x="506.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (22 samples, 6.34%)</title><rect x="503" y="132" width="74" height="15" fill="rgb(253,174,31)"/><text x="506.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (11 samples, 3.17%)</title><rect x="540" y="148" width="37" height="15" fill="rgb(236,87,14)"/><text x="543.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.17%)</title><rect x="540" y="164" width="37" height="15" fill="rgb(227,149,38)"/><text x="543.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.17%)</title><rect x="540" y="180" width="37" height="15" fill="rgb(244,26,25)"/><text x="543.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.17%)</title><rect x="540" y="196" width="37" height="15" fill="rgb(205,22,21)"/><text x="543.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.17%)</title><rect x="540" y="212" width="37" height="15" fill="rgb(215,14,7)"/><text x="543.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.17%)</title><rect x="540" y="228" width="37" height="15" fill="rgb(208,153,5)"/><text x="543.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.31%)</title><rect x="550" y="244" width="27" height="15" fill="rgb(254,129,35)"/><text x="553.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.31%)</title><rect x="550" y="260" width="27" height="15" fill="rgb(247,138,13)"/><text x="553.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.31%)</title><rect x="550" y="276" width="27" height="15" fill="rgb(229,156,51)"/><text x="553.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.31%)</title><rect x="550" y="292" width="27" height="15" fill="rgb(215,106,8)"/><text x="553.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.31%)</title><rect x="550" y="308" width="27" height="15" fill="rgb(233,144,33)"/><text x="553.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.31%)</title><rect x="550" y="324" width="27" height="15" fill="rgb(248,127,20)"/><text x="553.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 2.02%)</title><rect x="554" y="340" width="23" height="15" fill="rgb(245,167,10)"/><text x="557.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="554" y="356" width="23" height="15" fill="rgb(225,74,33)"/><text x="557.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="554" y="372" width="23" height="15" fill="rgb(251,18,48)"/><text x="557.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="554" y="388" width="23" height="15" fill="rgb(242,90,4)"/><text x="557.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="554" y="404" width="23" height="15" fill="rgb(236,182,50)"/><text x="557.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="554" y="420" width="23" height="15" fill="rgb(232,59,53)"/><text x="557.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.86%)</title><rect x="567" y="436" width="10" height="15" fill="rgb(209,155,52)"/><text x="570.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="452" width="10" height="15" fill="rgb(254,124,30)"/><text x="570.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.86%)</title><rect x="567" y="468" width="10" height="15" fill="rgb(243,154,16)"/><text x="570.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="484" width="10" height="15" fill="rgb(244,198,27)"/><text x="570.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="500" width="10" height="15" fill="rgb(252,148,38)"/><text x="570.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="516" width="10" height="15" fill="rgb(240,172,2)"/><text x="570.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="532" width="10" height="15" fill="rgb(241,95,21)"/><text x="570.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="548" width="10" height="15" fill="rgb(245,58,0)"/><text x="570.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="564" width="10" height="15" fill="rgb(216,24,27)"/><text x="570.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.86%)</title><rect x="567" y="580" width="10" height="15" fill="rgb(221,26,52)"/><text x="570.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="596" width="10" height="15" fill="rgb(229,92,8)"/><text x="570.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="612" width="10" height="15" fill="rgb(241,30,41)"/><text x="570.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="628" width="10" height="15" fill="rgb(247,132,4)"/><text x="570.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="644" width="10" height="15" fill="rgb(225,57,44)"/><text x="570.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="660" width="10" height="15" fill="rgb(245,41,35)"/><text x="570.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.86%)</title><rect x="567" y="676" width="10" height="15" fill="rgb(217,192,24)"/><text x="570.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="692" width="10" height="15" fill="rgb(215,143,38)"/><text x="570.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="708" width="10" height="15" fill="rgb(226,106,25)"/><text x="570.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="724" width="10" height="15" fill="rgb(229,22,19)"/><text x="570.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="740" width="10" height="15" fill="rgb(231,67,24)"/><text x="570.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="756" width="10" height="15" fill="rgb(205,172,37)"/><text x="570.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.86%)</title><rect x="567" y="772" width="10" height="15" fill="rgb(229,109,51)"/><text x="570.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="788" width="10" height="15" fill="rgb(218,185,18)"/><text x="570.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="804" width="10" height="15" fill="rgb(254,30,17)"/><text x="570.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="820" width="10" height="15" fill="rgb(220,15,47)"/><text x="570.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="836" width="10" height="15" fill="rgb(230,109,9)"/><text x="570.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="852" width="10" height="15" fill="rgb(254,58,12)"/><text x="570.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.86%)</title><rect x="567" y="868" width="10" height="15" fill="rgb(220,162,27)"/><text x="570.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="884" width="10" height="15" fill="rgb(234,10,20)"/><text x="570.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.86%)</title><rect x="567" y="900" width="10" height="15" fill="rgb(228,43,28)"/><text x="570.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="916" width="10" height="15" fill="rgb(209,106,26)"/><text x="570.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="932" width="10" height="15" fill="rgb(212,133,35)"/><text x="570.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="948" width="10" height="15" fill="rgb(228,31,13)"/><text x="570.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="964" width="10" height="15" fill="rgb(244,110,28)"/><text x="570.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="980" width="10" height="15" fill="rgb(220,35,12)"/><text x="570.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="996" width="10" height="15" fill="rgb(241,163,22)"/><text x="570.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.86%)</title><rect x="567" y="1012" width="10" height="15" fill="rgb(226,61,1)"/><text x="570.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="567" y="1028" width="10" height="15" fill="rgb(236,168,32)"/><text x="570.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="567" y="1044" width="10" height="15" fill="rgb(223,128,46)"/><text x="570.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="567" y="1060" width="10" height="15" fill="rgb(211,73,24)"/><text x="570.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="567" y="1076" width="10" height="15" fill="rgb(236,227,34)"/><text x="570.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="567" y="1092" width="10" height="15" fill="rgb(227,98,13)"/><text x="570.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.58%)</title><rect x="571" y="1108" width="6" height="15" fill="rgb(222,61,11)"/><text x="574.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.58%)</title><rect x="571" y="1124" width="6" height="15" fill="rgb(244,143,40)"/><text x="574.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="571" y="1140" width="6" height="15" fill="rgb(209,98,36)"/><text x="574.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="571" y="1156" width="6" height="15" fill="rgb(241,164,6)"/><text x="574.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="571" y="1172" width="6" height="15" fill="rgb(226,119,14)"/><text x="574.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="571" y="1188" width="6" height="15" fill="rgb(229,126,33)"/><text x="574.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="571" y="1204" width="6" height="15" fill="rgb(231,207,51)"/><text x="574.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="571" y="1220" width="6" height="15" fill="rgb(234,108,39)"/><text x="574.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.58%)</title><rect x="571" y="1236" width="6" height="15" fill="rgb(236,171,24)"/><text x="574.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.58%)</title><rect x="571" y="1252" width="6" height="15" fill="rgb(253,196,34)"/><text x="574.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="571" y="1268" width="6" height="15" fill="rgb(225,74,52)"/><text x="574.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="571" y="1284" width="6" height="15" fill="rgb(222,17,42)"/><text x="574.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="571" y="1300" width="6" height="15" fill="rgb(249,93,53)"/><text x="574.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="571" y="1316" width="6" height="15" fill="rgb(223,70,44)"/><text x="574.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="571" y="1332" width="6" height="15" fill="rgb(207,145,15)"/><text x="574.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="571" y="1348" width="6" height="15" fill="rgb(207,65,28)"/><text x="574.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.58%)</title><rect x="571" y="1364" width="6" height="15" fill="rgb(207,13,31)"/><text x="574.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="571" y="1380" width="6" height="15" fill="rgb(228,26,52)"/><text x="574.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="571" y="1396" width="6" height="15" fill="rgb(216,205,34)"/><text x="574.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="571" y="1412" width="6" height="15" fill="rgb(218,213,47)"/><text x="574.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="571" y="1428" width="6" height="15" fill="rgb(231,157,26)"/><text x="574.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="571" y="1444" width="6" height="15" fill="rgb(212,87,37)"/><text x="574.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.29%)</title><rect x="574" y="1460" width="3" height="15" fill="rgb(246,68,8)"/><text x="577.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="574" y="1476" width="3" height="15" fill="rgb(247,98,1)"/><text x="577.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="574" y="1492" width="3" height="15" fill="rgb(227,23,19)"/><text x="577.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="574" y="1508" width="3" height="15" fill="rgb(251,28,23)"/><text x="577.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="574" y="1524" width="3" height="15" fill="rgb(248,124,29)"/><text x="577.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="574" y="1540" width="3" height="15" fill="rgb(215,196,29)"/><text x="577.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.29%)</title><rect x="574" y="1556" width="3" height="15" fill="rgb(232,106,14)"/><text x="577.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.29%)</title><rect x="574" y="1572" width="3" height="15" fill="rgb(213,197,39)"/><text x="577.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="574" y="1588" width="3" height="15" fill="rgb(236,101,34)"/><text x="577.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="574" y="1604" width="3" height="15" fill="rgb(209,129,43)"/><text x="577.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="574" y="1620" width="3" height="15" fill="rgb(230,72,47)"/><text x="577.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="574" y="1636" width="3" height="15" fill="rgb(235,39,4)"/><text x="577.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="574" y="1652" width="3" height="15" fill="rgb(250,52,7)"/><text x="577.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.29%)</title><rect x="574" y="1668" width="3" height="15" fill="rgb(247,183,54)"/><text x="577.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="574" y="1684" width="3" height="15" fill="rgb(210,108,8)"/><text x="577.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="574" y="1700" width="3" height="15" fill="rgb(227,186,19)"/><text x="577.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="574" y="1716" width="3" height="15" fill="rgb(254,8,16)"/><text x="577.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="574" y="1732" width="3" height="15" fill="rgb(218,39,38)"/><text x="577.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="574" y="1748" width="3" height="15" fill="rgb(232,146,43)"/><text x="577.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.29%)</title><rect x="574" y="1764" width="3" height="15" fill="rgb(245,229,0)"/><text x="577.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="574" y="1780" width="3" height="15" fill="rgb(225,13,49)"/><text x="577.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="574" y="1796" width="3" height="15" fill="rgb(246,71,33)"/><text x="577.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="574" y="1812" width="3" height="15" fill="rgb(211,11,52)"/><text x="577.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="574" y="1828" width="3" height="15" fill="rgb(232,125,41)"/><text x="577.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="574" y="1844" width="3" height="15" fill="rgb(207,208,32)"/><text x="577.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:46) (1 samples, 0.29%)</title><rect x="574" y="1860" width="3" height="15" fill="rgb(232,225,44)"/><text x="577.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="574" y="1876" width="3" height="15" fill="rgb(214,191,31)"/><text x="577.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.29%)</title><rect x="574" y="1892" width="3" height="15" fill="rgb(234,38,11)"/><text x="577.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.29%)</title><rect x="574" y="1908" width="3" height="15" fill="rgb(239,105,32)"/><text x="577.00" y="1918.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.29%)</title><rect x="574" y="1924" width="3" height="15" fill="rgb(238,35,6)"/><text x="577.00" y="1934.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.29%)</title><rect x="574" y="1940" width="3" height="15" fill="rgb(237,91,10)"/><text x="577.00" y="1950.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.29%)</title><rect x="574" y="1956" width="3" height="15" fill="rgb(246,130,0)"/><text x="577.00" y="1966.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.29%)</title><rect x="574" y="1972" width="3" height="15" fill="rgb(217,115,22)"/><text x="577.00" y="1982.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.29%)</title><rect x="581" y="116" width="3" height="15" fill="rgb(211,107,7)"/><text x="584.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:148) (1 samples, 0.29%)</title><rect x="581" y="132" width="3" height="15" fill="rgb(234,184,37)"/><text x="584.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.29%)</title><rect x="584" y="116" width="4" height="15" fill="rgb(236,142,12)"/><text x="587.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.58%)</title><rect x="594" y="148" width="7" height="15" fill="rgb(250,21,32)"/><text x="597.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.29%)</title><rect x="605" y="164" width="3" height="15" fill="rgb(224,92,13)"/><text x="608.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.29%)</title><rect x="615" y="180" width="3" height="15" fill="rgb(238,56,0)"/><text x="618.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 2.02%)</title><rect x="618" y="180" width="24" height="15" fill="rgb(222,10,34)"/><text x="621.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.29%)</title><rect x="639" y="196" width="3" height="15" fill="rgb(216,143,25)"/><text x="642.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.29%)</title><rect x="673" y="244" width="3" height="15" fill="rgb(229,110,25)"/><text x="676.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.29%)</title><rect x="673" y="260" width="3" height="15" fill="rgb(249,34,39)"/><text x="676.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.58%)</title><rect x="673" y="212" width="6" height="15" fill="rgb(234,136,7)"/><text x="676.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.58%)</title><rect x="673" y="228" width="6" height="15" fill="rgb(236,81,38)"/><text x="676.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.29%)</title><rect x="676" y="244" width="3" height="15" fill="rgb(220,15,35)"/><text x="679.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.29%)</title><rect x="676" y="260" width="3" height="15" fill="rgb(225,41,16)"/><text x="679.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.29%)</title><rect x="676" y="276" width="3" height="15" fill="rgb(254,117,46)"/><text x="679.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.29%)</title><rect x="676" y="292" width="3" height="15" fill="rgb(252,219,49)"/><text x="679.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.29%)</title><rect x="676" y="308" width="3" height="15" fill="rgb(219,224,47)"/><text x="679.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.29%)</title><rect x="676" y="324" width="3" height="15" fill="rgb(254,71,46)"/><text x="679.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.29%)</title><rect x="676" y="340" width="3" height="15" fill="rgb(249,85,51)"/><text x="679.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.29%)</title><rect x="676" y="356" width="3" height="15" fill="rgb(236,107,7)"/><text x="679.00" y="366.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:100) (1 samples, 0.29%)</title><rect x="690" y="228" width="3" height="15" fill="rgb(210,0,52)"/><text x="693.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.29%)</title><rect x="693" y="228" width="3" height="15" fill="rgb(245,221,2)"/><text x="696.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 2.59%)</title><rect x="669" y="196" width="31" height="15" fill="rgb(237,127,37)"/><text x="672.00" y="206.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (6 samples, 1.73%)</title><rect x="679" y="212" width="21" height="15" fill="rgb(214,109,25)"/><text x="682.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.29%)</title><rect x="696" y="228" width="4" height="15" fill="rgb(223,42,41)"/><text x="699.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:41) (1 samples, 0.29%)</title><rect x="707" y="244" width="3" height="15" fill="rgb(246,78,9)"/><text x="710.00" y="254.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.29%)</title><rect x="717" y="260" width="3" height="15" fill="rgb(245,180,15)"/><text x="720.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.29%)</title><rect x="730" y="308" width="4" height="15" fill="rgb(207,193,35)"/><text x="733.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="730" y="324" width="4" height="15" fill="rgb(250,164,43)"/><text x="733.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="730" y="340" width="4" height="15" fill="rgb(225,208,41)"/><text x="733.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.29%)</title><rect x="730" y="356" width="4" height="15" fill="rgb(207,28,41)"/><text x="733.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="730" y="372" width="4" height="15" fill="rgb(207,111,22)"/><text x="733.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.29%)</title><rect x="730" y="388" width="4" height="15" fill="rgb(235,200,38)"/><text x="733.00" y="398.50"></text></g><g><title>0x7efd28b13fa0 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="730" y="404" width="4" height="15" fill="rgb(215,166,1)"/><text x="733.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.29%)</title><rect x="734" y="324" width="3" height="15" fill="rgb(229,229,50)"/><text x="737.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.29%)</title><rect x="737" y="324" width="4" height="15" fill="rgb(217,47,24)"/><text x="740.00" y="334.50"></text></g><g><title>0x7efd28a4b730 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="737" y="340" width="4" height="15" fill="rgb(207,166,35)"/><text x="740.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.29%)</title><rect x="741" y="340" width="3" height="15" fill="rgb(212,202,16)"/><text x="744.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.29%)</title><rect x="741" y="356" width="3" height="15" fill="rgb(206,181,36)"/><text x="744.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.29%)</title><rect x="744" y="388" width="3" height="15" fill="rgb(211,193,53)"/><text x="747.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="744" y="404" width="3" height="15" fill="rgb(225,96,4)"/><text x="747.00" y="414.50"></text></g><g><title>0x7efd289eda74 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="744" y="420" width="3" height="15" fill="rgb(253,198,9)"/><text x="747.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.58%)</title><rect x="744" y="356" width="7" height="15" fill="rgb(220,156,22)"/><text x="747.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.58%)</title><rect x="744" y="372" width="7" height="15" fill="rgb(206,56,45)"/><text x="747.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.29%)</title><rect x="747" y="388" width="4" height="15" fill="rgb(248,87,54)"/><text x="750.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="747" y="404" width="4" height="15" fill="rgb(227,161,19)"/><text x="750.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="747" y="420" width="4" height="15" fill="rgb(233,131,40)"/><text x="750.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.29%)</title><rect x="747" y="436" width="4" height="15" fill="rgb(221,10,41)"/><text x="750.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.29%)</title><rect x="751" y="372" width="3" height="15" fill="rgb(232,171,30)"/><text x="754.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.29%)</title><rect x="754" y="388" width="4" height="15" fill="rgb(213,192,53)"/><text x="757.00" y="398.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:913) (1 samples, 0.29%)</title><rect x="754" y="404" width="4" height="15" fill="rgb(238,123,41)"/><text x="757.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.29%)</title><rect x="758" y="404" width="3" height="15" fill="rgb(206,136,17)"/><text x="761.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.29%)</title><rect x="758" y="420" width="3" height="15" fill="rgb(218,123,6)"/><text x="761.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 1.15%)</title><rect x="751" y="356" width="13" height="15" fill="rgb(251,24,29)"/><text x="754.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.86%)</title><rect x="754" y="372" width="10" height="15" fill="rgb(232,173,24)"/><text x="757.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.58%)</title><rect x="758" y="388" width="6" height="15" fill="rgb(252,148,53)"/><text x="761.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.29%)</title><rect x="761" y="404" width="3" height="15" fill="rgb(243,131,35)"/><text x="764.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="764" y="372" width="4" height="15" fill="rgb(238,192,50)"/><text x="767.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.29%)</title><rect x="764" y="388" width="4" height="15" fill="rgb(221,61,50)"/><text x="767.00" y="398.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.29%)</title><rect x="764" y="404" width="4" height="15" fill="rgb(222,31,35)"/><text x="767.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.58%)</title><rect x="764" y="356" width="7" height="15" fill="rgb(232,99,5)"/><text x="767.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="768" y="372" width="3" height="15" fill="rgb(235,175,28)"/><text x="771.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2996) (1 samples, 0.29%)</title><rect x="768" y="388" width="3" height="15" fill="rgb(216,141,12)"/><text x="771.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.29%)</title><rect x="771" y="356" width="4" height="15" fill="rgb(223,153,7)"/><text x="774.00" y="366.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.29%)</title><rect x="771" y="372" width="4" height="15" fill="rgb(207,217,43)"/><text x="774.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.29%)</title><rect x="775" y="356" width="3" height="15" fill="rgb(224,151,26)"/><text x="778.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.29%)</title><rect x="775" y="372" width="3" height="15" fill="rgb(239,94,35)"/><text x="778.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.29%)</title><rect x="775" y="388" width="3" height="15" fill="rgb(235,31,13)"/><text x="778.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1877) (1 samples, 0.29%)</title><rect x="775" y="404" width="3" height="15" fill="rgb(246,164,29)"/><text x="778.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.29%)</title><rect x="778" y="372" width="3" height="15" fill="rgb(251,3,30)"/><text x="781.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.29%)</title><rect x="781" y="372" width="4" height="15" fill="rgb(234,188,39)"/><text x="784.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="781" y="388" width="4" height="15" fill="rgb(253,150,48)"/><text x="784.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:685) (1 samples, 0.29%)</title><rect x="785" y="372" width="3" height="15" fill="rgb(246,84,48)"/><text x="788.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (21 samples, 6.05%)</title><rect x="720" y="260" width="72" height="15" fill="rgb(228,106,45)"/><text x="723.00" y="270.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (21 samples, 6.05%)</title><rect x="720" y="276" width="72" height="15" fill="rgb(216,180,9)"/><text x="723.00" y="286.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 5.19%)</title><rect x="730" y="292" width="62" height="15" fill="rgb(210,161,27)"/><text x="733.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 4.90%)</title><rect x="734" y="308" width="58" height="15" fill="rgb(209,194,47)"/><text x="737.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 4.32%)</title><rect x="741" y="324" width="51" height="15" fill="rgb(236,143,44)"/><text x="744.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 4.03%)</title><rect x="744" y="340" width="48" height="15" fill="rgb(239,0,14)"/><text x="747.00" y="350.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (4 samples, 1.15%)</title><rect x="778" y="356" width="14" height="15" fill="rgb(225,53,34)"/><text x="781.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.29%)</title><rect x="788" y="372" width="4" height="15" fill="rgb(239,142,12)"/><text x="791.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.29%)</title><rect x="792" y="292" width="3" height="15" fill="rgb(229,115,23)"/><text x="795.00" y="302.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.29%)</title><rect x="792" y="308" width="3" height="15" fill="rgb(250,119,7)"/><text x="795.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.58%)</title><rect x="792" y="276" width="6" height="15" fill="rgb(223,83,31)"/><text x="795.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.29%)</title><rect x="795" y="292" width="3" height="15" fill="rgb(245,115,25)"/><text x="798.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (27 samples, 7.78%)</title><rect x="710" y="244" width="92" height="15" fill="rgb(216,228,34)"/><text x="713.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="792" y="260" width="10" height="15" fill="rgb(244,105,34)"/><text x="795.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="798" y="276" width="4" height="15" fill="rgb(248,28,46)"/><text x="801.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.29%)</title><rect x="798" y="292" width="4" height="15" fill="rgb(230,217,44)"/><text x="801.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="798" y="308" width="4" height="15" fill="rgb(206,66,2)"/><text x="801.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.29%)</title><rect x="798" y="324" width="4" height="15" fill="rgb(239,24,49)"/><text x="801.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.29%)</title><rect x="798" y="340" width="4" height="15" fill="rgb(210,122,46)"/><text x="801.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.29%)</title><rect x="805" y="276" width="4" height="15" fill="rgb(221,108,13)"/><text x="808.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.86%)</title><rect x="805" y="260" width="10" height="15" fill="rgb(212,62,37)"/><text x="808.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.58%)</title><rect x="809" y="276" width="6" height="15" fill="rgb(232,125,3)"/><text x="812.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.58%)</title><rect x="809" y="292" width="6" height="15" fill="rgb(241,159,7)"/><text x="812.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.29%)</title><rect x="815" y="260" width="4" height="15" fill="rgb(223,131,22)"/><text x="818.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.29%)</title><rect x="819" y="324" width="3" height="15" fill="rgb(229,12,37)"/><text x="822.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="819" y="340" width="3" height="15" fill="rgb(228,108,20)"/><text x="822.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="822" y="324" width="4" height="15" fill="rgb(249,113,2)"/><text x="825.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2714) (1 samples, 0.29%)</title><rect x="822" y="340" width="4" height="15" fill="rgb(240,49,46)"/><text x="825.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.86%)</title><rect x="819" y="308" width="10" height="15" fill="rgb(244,193,51)"/><text x="822.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.29%)</title><rect x="826" y="324" width="3" height="15" fill="rgb(206,163,27)"/><text x="829.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (39 samples, 11.24%)</title><rect x="700" y="196" width="132" height="15" fill="rgb(224,36,14)"/><text x="703.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (39 samples, 11.24%)</title><rect x="700" y="212" width="132" height="15" fill="rgb(207,134,19)"/><text x="703.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (38 samples, 10.95%)</title><rect x="703" y="228" width="129" height="15" fill="rgb(226,128,26)"/><text x="706.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (9 samples, 2.59%)</title><rect x="802" y="244" width="30" height="15" fill="rgb(243,14,50)"/><text x="805.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.15%)</title><rect x="819" y="260" width="13" height="15" fill="rgb(220,71,0)"/><text x="822.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.15%)</title><rect x="819" y="276" width="13" height="15" fill="rgb(215,94,3)"/><text x="822.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.15%)</title><rect x="819" y="292" width="13" height="15" fill="rgb(227,202,22)"/><text x="822.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.29%)</title><rect x="829" y="308" width="3" height="15" fill="rgb(229,147,52)"/><text x="832.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.29%)</title><rect x="829" y="324" width="3" height="15" fill="rgb(229,173,42)"/><text x="832.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.29%)</title><rect x="832" y="196" width="4" height="15" fill="rgb(251,204,2)"/><text x="835.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.29%)</title><rect x="839" y="244" width="4" height="15" fill="rgb(217,100,10)"/><text x="842.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.29%)</title><rect x="843" y="276" width="3" height="15" fill="rgb(223,225,29)"/><text x="846.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.29%)</title><rect x="846" y="308" width="3" height="15" fill="rgb(245,60,48)"/><text x="849.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.29%)</title><rect x="846" y="324" width="3" height="15" fill="rgb(219,47,16)"/><text x="849.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.29%)</title><rect x="846" y="340" width="3" height="15" fill="rgb(216,8,13)"/><text x="849.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.29%)</title><rect x="849" y="324" width="4" height="15" fill="rgb(222,99,29)"/><text x="852.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.29%)</title><rect x="849" y="340" width="4" height="15" fill="rgb(242,126,35)"/><text x="852.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="849" y="356" width="4" height="15" fill="rgb(225,143,20)"/><text x="852.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="849" y="372" width="4" height="15" fill="rgb(210,73,17)"/><text x="852.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.29%)</title><rect x="849" y="388" width="4" height="15" fill="rgb(228,198,46)"/><text x="852.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (5 samples, 1.44%)</title><rect x="839" y="228" width="17" height="15" fill="rgb(248,10,1)"/><text x="842.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (4 samples, 1.15%)</title><rect x="843" y="244" width="13" height="15" fill="rgb(210,74,10)"/><text x="846.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 1.15%)</title><rect x="843" y="260" width="13" height="15" fill="rgb(253,229,42)"/><text x="846.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.86%)</title><rect x="846" y="276" width="10" height="15" fill="rgb(223,172,35)"/><text x="849.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.86%)</title><rect x="846" y="292" width="10" height="15" fill="rgb(211,101,24)"/><text x="849.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.58%)</title><rect x="849" y="308" width="7" height="15" fill="rgb(223,57,14)"/><text x="852.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:696) (1 samples, 0.29%)</title><rect x="853" y="324" width="3" height="15" fill="rgb(216,142,25)"/><text x="856.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="856" y="244" width="4" height="15" fill="rgb(221,167,16)"/><text x="859.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="856" y="260" width="4" height="15" fill="rgb(206,95,8)"/><text x="859.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="856" y="276" width="4" height="15" fill="rgb(209,23,40)"/><text x="859.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:39) (1 samples, 0.29%)</title><rect x="856" y="292" width="4" height="15" fill="rgb(216,123,7)"/><text x="859.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.29%)</title><rect x="860" y="260" width="3" height="15" fill="rgb(224,215,12)"/><text x="863.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.29%)</title><rect x="860" y="276" width="3" height="15" fill="rgb(228,31,52)"/><text x="863.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.29%)</title><rect x="860" y="292" width="3" height="15" fill="rgb(216,38,13)"/><text x="863.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.29%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(215,30,48)"/><text x="866.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:232) (1 samples, 0.29%)</title><rect x="866" y="308" width="4" height="15" fill="rgb(230,203,52)"/><text x="869.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="870" y="308" width="3" height="15" fill="rgb(206,177,2)"/><text x="873.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.29%)</title><rect x="870" y="324" width="3" height="15" fill="rgb(233,92,53)"/><text x="873.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.29%)</title><rect x="873" y="308" width="4" height="15" fill="rgb(252,87,12)"/><text x="876.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.29%)</title><rect x="873" y="324" width="4" height="15" fill="rgb(254,169,28)"/><text x="876.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.15%)</title><rect x="866" y="292" width="14" height="15" fill="rgb(237,114,40)"/><text x="869.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="877" y="308" width="3" height="15" fill="rgb(216,81,33)"/><text x="880.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.29%)</title><rect x="877" y="324" width="3" height="15" fill="rgb(238,218,17)"/><text x="880.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.29%)</title><rect x="880" y="308" width="3" height="15" fill="rgb(210,218,16)"/><text x="883.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2156) (1 samples, 0.29%)</title><rect x="883" y="324" width="4" height="15" fill="rgb(220,38,6)"/><text x="886.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.59%)</title><rect x="860" y="244" width="30" height="15" fill="rgb(233,17,30)"/><text x="863.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.02%)</title><rect x="866" y="260" width="24" height="15" fill="rgb(209,229,35)"/><text x="869.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.02%)</title><rect x="866" y="276" width="24" height="15" fill="rgb(210,24,25)"/><text x="869.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.86%)</title><rect x="880" y="292" width="10" height="15" fill="rgb(211,214,40)"/><text x="883.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.58%)</title><rect x="883" y="308" width="7" height="15" fill="rgb(237,69,21)"/><text x="886.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.29%)</title><rect x="887" y="324" width="3" height="15" fill="rgb(241,7,26)"/><text x="890.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (11 samples, 3.17%)</title><rect x="856" y="228" width="38" height="15" fill="rgb(214,95,17)"/><text x="859.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.29%)</title><rect x="890" y="244" width="4" height="15" fill="rgb(207,33,9)"/><text x="893.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.29%)</title><rect x="890" y="260" width="4" height="15" fill="rgb(231,117,29)"/><text x="893.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (2 samples, 0.58%)</title><rect x="894" y="228" width="6" height="15" fill="rgb(222,223,47)"/><text x="897.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="900" y="260" width="4" height="15" fill="rgb(251,188,30)"/><text x="903.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.29%)</title><rect x="900" y="276" width="4" height="15" fill="rgb(238,9,25)"/><text x="903.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:919) (1 samples, 0.29%)</title><rect x="900" y="292" width="4" height="15" fill="rgb(253,167,1)"/><text x="903.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="904" y="260" width="3" height="15" fill="rgb(216,192,43)"/><text x="907.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.29%)</title><rect x="904" y="276" width="3" height="15" fill="rgb(252,167,44)"/><text x="907.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (3 samples, 0.86%)</title><rect x="900" y="228" width="11" height="15" fill="rgb(253,126,9)"/><text x="903.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="900" y="244" width="11" height="15" fill="rgb(239,137,40)"/><text x="903.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3214) (1 samples, 0.29%)</title><rect x="907" y="260" width="4" height="15" fill="rgb(222,200,3)"/><text x="910.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.58%)</title><rect x="911" y="244" width="6" height="15" fill="rgb(250,155,23)"/><text x="914.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.29%)</title><rect x="921" y="292" width="3" height="15" fill="rgb(244,193,49)"/><text x="924.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.58%)</title><rect x="924" y="308" width="7" height="15" fill="rgb(205,83,27)"/><text x="927.00" y="318.50"></text></g><g><title>0x7efd28a4b730 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="928" y="324" width="3" height="15" fill="rgb(251,118,35)"/><text x="931.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.29%)</title><rect x="931" y="324" width="3" height="15" fill="rgb(219,197,18)"/><text x="934.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="931" y="340" width="3" height="15" fill="rgb(247,128,24)"/><text x="934.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1020) (1 samples, 0.29%)</title><rect x="931" y="356" width="3" height="15" fill="rgb(212,147,28)"/><text x="934.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (30 samples, 8.65%)</title><rect x="836" y="196" width="102" height="15" fill="rgb(211,76,12)"/><text x="839.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 8.65%)</title><rect x="836" y="212" width="102" height="15" fill="rgb(246,183,38)"/><text x="839.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (8 samples, 2.31%)</title><rect x="911" y="228" width="27" height="15" fill="rgb(249,109,16)"/><text x="914.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.73%)</title><rect x="917" y="244" width="21" height="15" fill="rgb(205,102,21)"/><text x="920.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.73%)</title><rect x="917" y="260" width="21" height="15" fill="rgb(221,182,7)"/><text x="920.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.73%)</title><rect x="917" y="276" width="21" height="15" fill="rgb(224,186,27)"/><text x="920.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.15%)</title><rect x="924" y="292" width="14" height="15" fill="rgb(248,94,30)"/><text x="927.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.58%)</title><rect x="931" y="308" width="7" height="15" fill="rgb(227,39,49)"/><text x="934.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.29%)</title><rect x="934" y="324" width="4" height="15" fill="rgb(244,72,53)"/><text x="937.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="934" y="340" width="4" height="15" fill="rgb(247,224,54)"/><text x="937.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (88 samples, 25.36%)</title><rect x="642" y="180" width="299" height="15" fill="rgb(211,2,28)"/><text x="645.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.29%)</title><rect x="938" y="196" width="3" height="15" fill="rgb(212,107,41)"/><text x="941.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.58%)</title><rect x="941" y="180" width="7" height="15" fill="rgb(254,188,22)"/><text x="944.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.58%)</title><rect x="948" y="180" width="7" height="15" fill="rgb(247,144,51)"/><text x="951.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.29%)</title><rect x="955" y="180" width="3" height="15" fill="rgb(217,157,54)"/><text x="958.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (111 samples, 31.99%)</title><rect x="608" y="164" width="377" height="15" fill="rgb(207,106,8)"/><text x="611.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 2.31%)</title><rect x="958" y="180" width="27" height="15" fill="rgb(216,78,26)"/><text x="961.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (5 samples, 1.44%)</title><rect x="985" y="164" width="17" height="15" fill="rgb(228,155,36)"/><text x="988.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.15%)</title><rect x="989" y="180" width="13" height="15" fill="rgb(249,117,19)"/><text x="992.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:45) (126 samples, 36.31%)</title><rect x="577" y="52" width="429" height="15" fill="rgb(220,133,10)"/><text x="580.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:44) (126 samples, 36.31%)</title><rect x="577" y="68" width="429" height="15" fill="rgb(214,116,53)"/><text x="580.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:29) (126 samples, 36.31%)</title><rect x="577" y="84" width="429" height="15" fill="rgb(231,48,2)"/><text x="580.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:23) (126 samples, 36.31%)</title><rect x="577" y="100" width="429" height="15" fill="rgb(239,87,15)"/><text x="580.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (123 samples, 35.45%)</title><rect x="588" y="116" width="418" height="15" fill="rgb(213,111,51)"/><text x="591.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (123 samples, 35.45%)</title><rect x="588" y="132" width="418" height="15" fill="rgb(244,85,47)"/><text x="591.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (119 samples, 34.29%)</title><rect x="601" y="148" width="405" height="15" fill="rgb(243,83,0)"/><text x="604.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="1002" y="164" width="4" height="15" fill="rgb(232,23,46)"/><text x="1005.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="1002" y="180" width="4" height="15" fill="rgb(216,128,26)"/><text x="1005.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.29%)</title><rect x="1002" y="196" width="4" height="15" fill="rgb(225,86,27)"/><text x="1005.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.29%)</title><rect x="1019" y="148" width="4" height="15" fill="rgb(247,39,5)"/><text x="1022.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.58%)</title><rect x="1023" y="148" width="7" height="15" fill="rgb(253,174,13)"/><text x="1026.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.29%)</title><rect x="1036" y="164" width="4" height="15" fill="rgb(240,36,3)"/><text x="1039.00" y="174.50"></text></g><g><title>0x7efce8a65ff9 (?) (1 samples, 0.29%)</title><rect x="1050" y="228" width="3" height="15" fill="rgb(247,45,28)"/><text x="1053.00" y="238.50"></text></g><g><title>0x7efce8a5f99b (?) (1 samples, 0.29%)</title><rect x="1050" y="244" width="3" height="15" fill="rgb(238,0,4)"/><text x="1053.00" y="254.50"></text></g><g><title>0x7efce8a5ee24 (?) (1 samples, 0.29%)</title><rect x="1050" y="260" width="3" height="15" fill="rgb(250,129,34)"/><text x="1053.00" y="270.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1053" y="260" width="4" height="15" fill="rgb(205,218,0)"/><text x="1056.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1053" y="276" width="4" height="15" fill="rgb(209,148,6)"/><text x="1056.00" y="286.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 1.73%)</title><rect x="1040" y="196" width="20" height="15" fill="rgb(230,157,32)"/><text x="1043.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.15%)</title><rect x="1047" y="212" width="13" height="15" fill="rgb(226,65,39)"/><text x="1050.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1053" y="228" width="7" height="15" fill="rgb(242,27,3)"/><text x="1056.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1053" y="244" width="7" height="15" fill="rgb(254,144,46)"/><text x="1056.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1057" y="260" width="3" height="15" fill="rgb(234,79,41)"/><text x="1060.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1057" y="276" width="3" height="15" fill="rgb(247,32,30)"/><text x="1060.00" y="286.50"></text></g><g><title>0x7efd28a4be98 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1057" y="292" width="3" height="15" fill="rgb(250,176,4)"/><text x="1060.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1067" y="228" width="3" height="15" fill="rgb(208,179,28)"/><text x="1070.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1070" y="260" width="4" height="15" fill="rgb(212,189,38)"/><text x="1073.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1074" y="308" width="7" height="15" fill="rgb(233,200,48)"/><text x="1077.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1074" y="324" width="7" height="15" fill="rgb(248,218,12)"/><text x="1077.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.86%)</title><rect x="1074" y="292" width="10" height="15" fill="rgb(230,139,8)"/><text x="1077.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1081" y="308" width="3" height="15" fill="rgb(251,121,17)"/><text x="1084.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1081" y="324" width="3" height="15" fill="rgb(241,84,25)"/><text x="1084.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1081" y="340" width="3" height="15" fill="rgb(241,49,18)"/><text x="1084.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1081" y="356" width="3" height="15" fill="rgb(209,188,45)"/><text x="1084.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1084" y="292" width="7" height="15" fill="rgb(246,220,52)"/><text x="1087.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1084" y="308" width="7" height="15" fill="rgb(223,63,40)"/><text x="1087.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1091" y="292" width="3" height="15" fill="rgb(237,89,8)"/><text x="1094.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1104" y="340" width="4" height="15" fill="rgb(244,113,11)"/><text x="1107.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1104" y="356" width="4" height="15" fill="rgb(212,145,30)"/><text x="1107.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1104" y="372" width="4" height="15" fill="rgb(232,212,20)"/><text x="1107.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1104" y="388" width="4" height="15" fill="rgb(241,127,41)"/><text x="1107.00" y="398.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1108" y="340" width="3" height="15" fill="rgb(243,132,21)"/><text x="1111.00" y="350.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1111" y="388" width="4" height="15" fill="rgb(219,43,27)"/><text x="1114.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1111" y="404" width="4" height="15" fill="rgb(211,141,15)"/><text x="1114.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1111" y="340" width="7" height="15" fill="rgb(212,180,43)"/><text x="1114.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1111" y="356" width="7" height="15" fill="rgb(244,224,16)"/><text x="1114.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1111" y="372" width="7" height="15" fill="rgb(213,8,38)"/><text x="1114.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1115" y="388" width="3" height="15" fill="rgb(232,51,17)"/><text x="1118.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="340" width="3" height="15" fill="rgb(209,87,47)"/><text x="1121.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1118" y="356" width="3" height="15" fill="rgb(224,22,16)"/><text x="1121.00" y="366.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="340" width="4" height="15" fill="rgb(218,49,2)"/><text x="1124.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="356" width="4" height="15" fill="rgb(247,114,50)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="372" width="4" height="15" fill="rgb(224,100,32)"/><text x="1124.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="388" width="4" height="15" fill="rgb(213,197,23)"/><text x="1124.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="404" width="4" height="15" fill="rgb(252,46,23)"/><text x="1124.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="420" width="4" height="15" fill="rgb(238,131,10)"/><text x="1124.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="436" width="4" height="15" fill="rgb(245,219,36)"/><text x="1124.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="452" width="4" height="15" fill="rgb(209,187,38)"/><text x="1124.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="468" width="4" height="15" fill="rgb(242,9,10)"/><text x="1124.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="484" width="4" height="15" fill="rgb(208,149,2)"/><text x="1124.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1121" y="500" width="4" height="15" fill="rgb(223,220,13)"/><text x="1124.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.29%)</title><rect x="1121" y="516" width="4" height="15" fill="rgb(242,40,13)"/><text x="1124.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1121" y="532" width="4" height="15" fill="rgb(232,20,11)"/><text x="1124.00" y="542.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.59%)</title><rect x="1101" y="324" width="31" height="15" fill="rgb(239,197,16)"/><text x="1104.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1125" y="340" width="7" height="15" fill="rgb(207,84,25)"/><text x="1128.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1125" y="356" width="7" height="15" fill="rgb(251,96,28)"/><text x="1128.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1128" y="372" width="4" height="15" fill="rgb(237,188,14)"/><text x="1131.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1128" y="388" width="4" height="15" fill="rgb(225,126,19)"/><text x="1131.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1128" y="404" width="4" height="15" fill="rgb(214,184,18)"/><text x="1131.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1128" y="420" width="4" height="15" fill="rgb(241,51,19)"/><text x="1131.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.19%)</title><rect x="1074" y="260" width="61" height="15" fill="rgb(224,53,10)"/><text x="1077.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 5.19%)</title><rect x="1074" y="276" width="61" height="15" fill="rgb(238,172,19)"/><text x="1077.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.46%)</title><rect x="1094" y="292" width="41" height="15" fill="rgb(209,162,10)"/><text x="1097.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.17%)</title><rect x="1098" y="308" width="37" height="15" fill="rgb(221,163,10)"/><text x="1101.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::~SequentialExecutor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1132" y="324" width="3" height="15" fill="rgb(222,0,22)"/><text x="1135.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.44%)</title><rect x="1135" y="260" width="17" height="15" fill="rgb(235,214,39)"/><text x="1138.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1149" y="276" width="3" height="15" fill="rgb(219,11,44)"/><text x="1152.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.29%)</title><rect x="1152" y="292" width="3" height="15" fill="rgb(220,138,28)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1152" y="260" width="7" height="15" fill="rgb(231,151,26)"/><text x="1155.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.58%)</title><rect x="1152" y="276" width="7" height="15" fill="rgb(250,122,6)"/><text x="1155.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.29%)</title><rect x="1155" y="292" width="4" height="15" fill="rgb(234,152,35)"/><text x="1158.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.29%)</title><rect x="1155" y="308" width="4" height="15" fill="rgb(207,62,51)"/><text x="1158.00" y="318.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1159" y="260" width="3" height="15" fill="rgb(220,20,10)"/><text x="1162.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 8.07%)</title><rect x="1070" y="244" width="96" height="15" fill="rgb(236,29,41)"/><text x="1073.00" y="254.50">onnxruntime..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1162" y="260" width="4" height="15" fill="rgb(243,192,13)"/><text x="1165.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (38 samples, 10.95%)</title><rect x="1040" y="164" width="129" height="15" fill="rgb(241,165,37)"/><text x="1043.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (38 samples, 10.95%)</title><rect x="1040" y="180" width="129" height="15" fill="rgb(230,67,39)"/><text x="1043.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (32 samples, 9.22%)</title><rect x="1060" y="196" width="109" height="15" fill="rgb(231,7,33)"/><text x="1063.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 8.65%)</title><rect x="1067" y="212" width="102" height="15" fill="rgb(206,50,28)"/><text x="1070.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.36%)</title><rect x="1070" y="228" width="99" height="15" fill="rgb(240,95,41)"/><text x="1073.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1166" y="244" width="3" height="15" fill="rgb(231,130,43)"/><text x="1169.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(247,227,48)"/><text x="1169.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1166" y="276" width="3" height="15" fill="rgb(225,1,53)"/><text x="1169.00" y="286.50"></text></g><g><title>all (347 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,214,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:52) (54 samples, 15.56%)</title><rect x="1006" y="52" width="184" height="15" fill="rgb(254,205,33)"/><text x="1009.00" y="62.50">&lt;module&gt; (bench_Logisti..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:51) (54 samples, 15.56%)</title><rect x="1006" y="68" width="184" height="15" fill="rgb(251,223,49)"/><text x="1009.00" y="78.50">profile_ort (bench_Logi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:29) (54 samples, 15.56%)</title><rect x="1006" y="84" width="184" height="15" fill="rgb(227,40,22)"/><text x="1009.00" y="94.50">setup_profile (bench_Lo..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py:23) (54 samples, 15.56%)</title><rect x="1006" y="100" width="184" height="15" fill="rgb(229,159,35)"/><text x="1009.00" y="110.50">profile (bench_Logistic..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 14.99%)</title><rect x="1013" y="116" width="177" height="15" fill="rgb(250,112,42)"/><text x="1016.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (52 samples, 14.99%)</title><rect x="1013" y="132" width="177" height="15" fill="rgb(237,143,1)"/><text x="1016.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (47 samples, 13.54%)</title><rect x="1030" y="148" width="160" height="15" fill="rgb(253,19,24)"/><text x="1033.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 1.73%)</title><rect x="1169" y="164" width="21" height="15" fill="rgb(218,58,15)"/><text x="1172.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.29%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(223,66,54)"/><text x="1189.00" y="190.50"></text></g></g></svg>