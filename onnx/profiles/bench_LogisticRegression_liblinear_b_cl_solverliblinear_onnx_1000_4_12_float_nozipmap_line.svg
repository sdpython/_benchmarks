<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:22) (1 samples, 0.19%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(228,148,8)"/><text x="13.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.19%)</title><rect x="18" y="164" width="3" height="15" fill="rgb(241,188,29)"/><text x="21.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.19%)</title><rect x="18" y="180" width="3" height="15" fill="rgb(209,221,11)"/><text x="21.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="25" y="180" width="2" height="15" fill="rgb(250,86,5)"/><text x="28.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.38%)</title><rect x="34" y="196" width="4" height="15" fill="rgb(208,228,21)"/><text x="37.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (11 samples, 2.07%)</title><rect x="18" y="148" width="25" height="15" fill="rgb(217,204,50)"/><text x="21.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 1.88%)</title><rect x="21" y="164" width="22" height="15" fill="rgb(231,16,38)"/><text x="24.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.32%)</title><rect x="27" y="180" width="16" height="15" fill="rgb(238,167,26)"/><text x="30.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.38%)</title><rect x="38" y="196" width="5" height="15" fill="rgb(250,123,50)"/><text x="41.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.19%)</title><rect x="43" y="148" width="2" height="15" fill="rgb(251,67,18)"/><text x="46.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 1.13%)</title><rect x="47" y="180" width="14" height="15" fill="rgb(205,171,54)"/><text x="50.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.13%)</title><rect x="47" y="196" width="14" height="15" fill="rgb(225,191,29)"/><text x="50.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.13%)</title><rect x="47" y="212" width="14" height="15" fill="rgb(243,105,38)"/><text x="50.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.56%)</title><rect x="54" y="228" width="7" height="15" fill="rgb(247,37,19)"/><text x="57.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.19%)</title><rect x="61" y="196" width="2" height="15" fill="rgb(220,85,40)"/><text x="64.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.19%)</title><rect x="63" y="196" width="2" height="15" fill="rgb(250,149,18)"/><text x="66.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.38%)</title><rect x="65" y="196" width="4" height="15" fill="rgb(213,124,32)"/><text x="68.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.19%)</title><rect x="72" y="212" width="2" height="15" fill="rgb(225,148,14)"/><text x="75.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.19%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(243,133,25)"/><text x="77.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.75%)</title><rect x="69" y="196" width="9" height="15" fill="rgb(249,19,32)"/><text x="72.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.19%)</title><rect x="76" y="212" width="2" height="15" fill="rgb(221,21,37)"/><text x="79.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="78" y="212" width="2" height="15" fill="rgb(205,121,0)"/><text x="81.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:184) (1 samples, 0.19%)</title><rect x="87" y="228" width="2" height="15" fill="rgb(224,109,0)"/><text x="90.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.38%)</title><rect x="89" y="228" width="5" height="15" fill="rgb(247,172,27)"/><text x="92.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.38%)</title><rect x="94" y="228" width="4" height="15" fill="rgb(239,25,9)"/><text x="97.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (10 samples, 1.88%)</title><rect x="78" y="196" width="22" height="15" fill="rgb(225,121,48)"/><text x="81.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (9 samples, 1.69%)</title><rect x="80" y="212" width="20" height="15" fill="rgb(212,92,44)"/><text x="83.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.19%)</title><rect x="98" y="228" width="2" height="15" fill="rgb(225,115,44)"/><text x="101.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.38%)</title><rect x="100" y="196" width="5" height="15" fill="rgb(254,194,14)"/><text x="103.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="103" y="212" width="2" height="15" fill="rgb(250,5,8)"/><text x="106.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.56%)</title><rect x="105" y="196" width="7" height="15" fill="rgb(234,78,49)"/><text x="108.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.38%)</title><rect x="107" y="212" width="5" height="15" fill="rgb(230,76,18)"/><text x="110.00" y="222.50"></text></g><g><title>0x7fb85907e130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="109" y="228" width="3" height="15" fill="rgb(242,221,16)"/><text x="112.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.56%)</title><rect x="112" y="196" width="6" height="15" fill="rgb(240,41,5)"/><text x="115.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.56%)</title><rect x="112" y="212" width="6" height="15" fill="rgb(250,196,22)"/><text x="115.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (2 samples, 0.38%)</title><rect x="114" y="228" width="4" height="15" fill="rgb(245,109,41)"/><text x="117.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.56%)</title><rect x="118" y="212" width="7" height="15" fill="rgb(236,75,18)"/><text x="121.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="123" y="228" width="2" height="15" fill="rgb(224,184,47)"/><text x="126.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.75%)</title><rect x="118" y="196" width="9" height="15" fill="rgb(253,10,53)"/><text x="121.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.19%)</title><rect x="125" y="212" width="2" height="15" fill="rgb(251,168,3)"/><text x="128.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (31 samples, 5.83%)</title><rect x="61" y="180" width="68" height="15" fill="rgb(241,169,23)"/><text x="64.00" y="190.50">decisio..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="127" y="196" width="2" height="15" fill="rgb(227,193,43)"/><text x="130.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="127" y="212" width="2" height="15" fill="rgb(240,228,24)"/><text x="130.00" y="222.50"></text></g><g><title>0x7fb858fb6e50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="127" y="228" width="2" height="15" fill="rgb(215,178,30)"/><text x="130.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.19%)</title><rect x="129" y="180" width="2" height="15" fill="rgb(212,34,53)"/><text x="132.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.19%)</title><rect x="129" y="196" width="2" height="15" fill="rgb(245,158,20)"/><text x="132.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.19%)</title><rect x="129" y="212" width="2" height="15" fill="rgb(213,119,52)"/><text x="132.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="129" y="228" width="2" height="15" fill="rgb(239,42,28)"/><text x="132.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.19%)</title><rect x="129" y="244" width="2" height="15" fill="rgb(250,50,8)"/><text x="132.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.19%)</title><rect x="129" y="260" width="2" height="15" fill="rgb(219,137,7)"/><text x="132.00" y="270.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.19%)</title><rect x="136" y="196" width="2" height="15" fill="rgb(217,107,24)"/><text x="139.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:348) (1 samples, 0.19%)</title><rect x="136" y="212" width="2" height="15" fill="rgb(207,28,40)"/><text x="139.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="138" y="228" width="2" height="15" fill="rgb(208,189,49)"/><text x="141.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="138" y="244" width="2" height="15" fill="rgb(222,53,41)"/><text x="141.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.19%)</title><rect x="140" y="244" width="3" height="15" fill="rgb(218,61,51)"/><text x="143.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="143" y="260" width="2" height="15" fill="rgb(234,61,28)"/><text x="146.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="143" y="276" width="2" height="15" fill="rgb(207,85,6)"/><text x="146.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.19%)</title><rect x="143" y="292" width="2" height="15" fill="rgb(236,149,31)"/><text x="146.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="145" y="308" width="2" height="15" fill="rgb(205,12,54)"/><text x="148.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.38%)</title><rect x="147" y="308" width="4" height="15" fill="rgb(250,94,43)"/><text x="150.00" y="318.50"></text></g><g><title>0x7fb858fc0d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="151" y="324" width="3" height="15" fill="rgb(237,194,43)"/><text x="154.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.94%)</title><rect x="151" y="308" width="12" height="15" fill="rgb(206,2,11)"/><text x="154.00" y="318.50"></text></g><g><title>0x7fb858fc0d6f (libc-2.29.so) (4 samples, 0.75%)</title><rect x="154" y="324" width="9" height="15" fill="rgb(253,150,15)"/><text x="157.00" y="334.50"></text></g><g><title>0x7fb858fc0d62 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="163" y="324" width="2" height="15" fill="rgb(245,73,40)"/><text x="166.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (10 samples, 1.88%)</title><rect x="145" y="260" width="22" height="15" fill="rgb(235,96,28)"/><text x="148.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (10 samples, 1.88%)</title><rect x="145" y="276" width="22" height="15" fill="rgb(233,137,2)"/><text x="148.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (10 samples, 1.88%)</title><rect x="145" y="292" width="22" height="15" fill="rgb(250,70,13)"/><text x="148.00" y="302.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (2 samples, 0.38%)</title><rect x="163" y="308" width="4" height="15" fill="rgb(248,5,42)"/><text x="166.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.19%)</title><rect x="165" y="324" width="2" height="15" fill="rgb(206,158,32)"/><text x="168.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="167" y="260" width="2" height="15" fill="rgb(247,218,28)"/><text x="170.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="167" y="276" width="2" height="15" fill="rgb(217,81,0)"/><text x="170.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="167" y="292" width="2" height="15" fill="rgb(233,159,18)"/><text x="170.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="167" y="308" width="2" height="15" fill="rgb(251,13,12)"/><text x="170.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.19%)</title><rect x="167" y="324" width="2" height="15" fill="rgb(240,46,10)"/><text x="170.00" y="334.50"></text></g><g><title>0x7fb858fa0b63 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="169" y="292" width="2" height="15" fill="rgb(221,48,18)"/><text x="172.00" y="302.50"></text></g><g><title>array_add (number.c:330) (16 samples, 3.01%)</title><rect x="138" y="196" width="36" height="15" fill="rgb(215,1,21)"/><text x="141.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 3.01%)</title><rect x="138" y="212" width="36" height="15" fill="rgb(233,41,28)"/><text x="141.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 2.82%)</title><rect x="140" y="228" width="34" height="15" fill="rgb(218,93,35)"/><text x="143.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.63%)</title><rect x="143" y="244" width="31" height="15" fill="rgb(225,185,4)"/><text x="146.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.38%)</title><rect x="169" y="260" width="5" height="15" fill="rgb(222,134,22)"/><text x="172.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.38%)</title><rect x="169" y="276" width="5" height="15" fill="rgb(241,83,17)"/><text x="172.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="171" y="292" width="3" height="15" fill="rgb(232,71,15)"/><text x="174.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.19%)</title><rect x="174" y="196" width="2" height="15" fill="rgb(207,63,27)"/><text x="177.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="176" y="212" width="4" height="15" fill="rgb(230,157,42)"/><text x="179.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (9 samples, 1.69%)</title><rect x="180" y="212" width="20" height="15" fill="rgb(247,181,0)"/><text x="183.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.19%)</title><rect x="200" y="244" width="2" height="15" fill="rgb(224,176,28)"/><text x="203.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(210,112,30)"/><text x="203.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.19%)</title><rect x="200" y="276" width="2" height="15" fill="rgb(232,97,50)"/><text x="203.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="200" y="292" width="2" height="15" fill="rgb(228,29,49)"/><text x="203.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.19%)</title><rect x="200" y="308" width="2" height="15" fill="rgb(235,57,18)"/><text x="203.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.19%)</title><rect x="200" y="324" width="2" height="15" fill="rgb(221,86,36)"/><text x="203.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.19%)</title><rect x="200" y="340" width="2" height="15" fill="rgb(207,53,45)"/><text x="203.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.19%)</title><rect x="202" y="244" width="3" height="15" fill="rgb(217,134,7)"/><text x="205.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:169) (1 samples, 0.19%)</title><rect x="202" y="260" width="3" height="15" fill="rgb(250,30,34)"/><text x="205.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.19%)</title><rect x="202" y="276" width="3" height="15" fill="rgb(212,115,25)"/><text x="205.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.19%)</title><rect x="202" y="292" width="3" height="15" fill="rgb(227,208,15)"/><text x="205.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3003) (1 samples, 0.19%)</title><rect x="205" y="244" width="2" height="15" fill="rgb(242,10,3)"/><text x="208.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="205" y="260" width="2" height="15" fill="rgb(217,28,33)"/><text x="208.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:412) (1 samples, 0.19%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(237,148,7)"/><text x="210.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.19%)</title><rect x="207" y="276" width="2" height="15" fill="rgb(217,50,48)"/><text x="210.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (76 samples, 14.29%)</title><rect x="45" y="164" width="169" height="15" fill="rgb(212,175,40)"/><text x="48.00" y="174.50">_predict_proba_lr (sk..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (37 samples, 6.95%)</title><rect x="131" y="180" width="83" height="15" fill="rgb(231,175,53)"/><text x="134.00" y="190.50">decision_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (17 samples, 3.20%)</title><rect x="176" y="196" width="38" height="15" fill="rgb(230,5,18)"/><text x="179.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.13%)</title><rect x="200" y="212" width="14" height="15" fill="rgb(211,46,5)"/><text x="203.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (6 samples, 1.13%)</title><rect x="200" y="228" width="14" height="15" fill="rgb(245,28,12)"/><text x="203.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.56%)</title><rect x="207" y="244" width="7" height="15" fill="rgb(233,48,36)"/><text x="210.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.38%)</title><rect x="209" y="260" width="5" height="15" fill="rgb(229,140,19)"/><text x="212.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="209" y="276" width="5" height="15" fill="rgb(254,185,19)"/><text x="212.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="209" y="292" width="5" height="15" fill="rgb(205,175,24)"/><text x="212.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="211" y="308" width="3" height="15" fill="rgb(251,198,10)"/><text x="214.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="218" y="196" width="2" height="15" fill="rgb(211,224,0)"/><text x="221.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.19%)</title><rect x="218" y="212" width="2" height="15" fill="rgb(221,121,10)"/><text x="221.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.19%)</title><rect x="222" y="244" width="3" height="15" fill="rgb(214,183,11)"/><text x="225.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.19%)</title><rect x="222" y="260" width="3" height="15" fill="rgb(210,31,47)"/><text x="225.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="222" y="276" width="3" height="15" fill="rgb(248,188,34)"/><text x="225.00" y="286.50"></text></g><g><title>0x7fb858f587a5 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="222" y="292" width="3" height="15" fill="rgb(248,161,37)"/><text x="225.00" y="302.50"></text></g><g><title>0x7fb858fc0d6f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="222" y="308" width="3" height="15" fill="rgb(215,21,41)"/><text x="225.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.56%)</title><rect x="220" y="212" width="7" height="15" fill="rgb(225,168,41)"/><text x="223.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.38%)</title><rect x="222" y="228" width="5" height="15" fill="rgb(214,6,27)"/><text x="225.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="225" y="244" width="2" height="15" fill="rgb(208,12,48)"/><text x="228.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.19%)</title><rect x="225" y="260" width="2" height="15" fill="rgb(221,30,45)"/><text x="228.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:321) (1 samples, 0.19%)</title><rect x="225" y="276" width="2" height="15" fill="rgb(224,67,18)"/><text x="228.00" y="286.50"></text></g><g><title>0x7fb83b3a69da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="227" y="244" width="2" height="15" fill="rgb(252,63,20)"/><text x="230.00" y="254.50"></text></g><g><title>0x7fb83b3c7254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="229" y="260" width="7" height="15" fill="rgb(240,175,10)"/><text x="232.00" y="270.50"></text></g><g><title>0x7fb859172ba0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="247" y="292" width="2" height="15" fill="rgb(213,42,23)"/><text x="250.00" y="302.50"></text></g><g><title>0x7fb859172bb4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="249" y="292" width="2" height="15" fill="rgb(223,184,31)"/><text x="252.00" y="302.50"></text></g><g><title>0x7fb859172bd3 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="251" y="292" width="5" height="15" fill="rgb(209,212,45)"/><text x="254.00" y="302.50"></text></g><g><title>0x7fb859172be7 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(252,69,45)"/><text x="259.00" y="302.50"></text></g><g><title>0x7fb859172c07 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="258" y="292" width="4" height="15" fill="rgb(228,128,16)"/><text x="261.00" y="302.50"></text></g><g><title>0x7fb859172c18 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="262" y="292" width="5" height="15" fill="rgb(219,66,2)"/><text x="265.00" y="302.50"></text></g><g><title>0x7fb859172c2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="267" y="292" width="2" height="15" fill="rgb(252,189,36)"/><text x="270.00" y="302.50"></text></g><g><title>0x7fb859172c3e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="269" y="292" width="2" height="15" fill="rgb(214,221,28)"/><text x="272.00" y="302.50"></text></g><g><title>0x7fb859172c6a (libm-2.29.so) (4 samples, 0.75%)</title><rect x="271" y="292" width="9" height="15" fill="rgb(227,45,17)"/><text x="274.00" y="302.50"></text></g><g><title>0x7fb83b3c7265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 4.14%)</title><rect x="236" y="260" width="49" height="15" fill="rgb(254,191,26)"/><text x="239.00" y="270.50">0x7f..</text></g><g><title>exp (libm-2.29.so) (21 samples, 3.95%)</title><rect x="238" y="276" width="47" height="15" fill="rgb(214,68,27)"/><text x="241.00" y="286.50">exp ..</text></g><g><title>0x7fb859172c7b (libm-2.29.so) (2 samples, 0.38%)</title><rect x="280" y="292" width="5" height="15" fill="rgb(248,217,47)"/><text x="283.00" y="302.50"></text></g><g><title>0x7fb83b3c7275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="285" y="260" width="4" height="15" fill="rgb(228,147,20)"/><text x="288.00" y="270.50"></text></g><g><title>0x7fb83b3a69dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (41 samples, 7.71%)</title><rect x="229" y="244" width="91" height="15" fill="rgb(235,100,52)"/><text x="232.00" y="254.50">0x7fb83b3a..</text></g><g><title>0x7fb83b3c7279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.63%)</title><rect x="289" y="260" width="31" height="15" fill="rgb(222,171,26)"/><text x="292.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (49 samples, 9.21%)</title><rect x="214" y="164" width="108" height="15" fill="rgb(209,3,24)"/><text x="217.00" y="174.50">_predict_prob..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (47 samples, 8.83%)</title><rect x="218" y="180" width="104" height="15" fill="rgb(211,56,38)"/><text x="221.00" y="190.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (46 samples, 8.65%)</title><rect x="220" y="196" width="102" height="15" fill="rgb(254,9,45)"/><text x="223.00" y="206.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (43 samples, 8.08%)</title><rect x="227" y="212" width="95" height="15" fill="rgb(211,175,0)"/><text x="230.00" y="222.50">execute_leg..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (43 samples, 8.08%)</title><rect x="227" y="228" width="95" height="15" fill="rgb(250,200,54)"/><text x="230.00" y="238.50">trivial_two..</text></g><g><title>0x7fb83b3c713e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="320" y="244" width="2" height="15" fill="rgb(235,114,25)"/><text x="323.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c:104) (1 samples, 0.19%)</title><rect x="320" y="260" width="2" height="15" fill="rgb(230,7,11)"/><text x="323.00" y="270.50"></text></g><g><title>0x7fb858fc114e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="327" y="212" width="2" height="15" fill="rgb(221,33,3)"/><text x="330.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="329" y="244" width="2" height="15" fill="rgb(243,131,19)"/><text x="332.00" y="254.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:777) (1 samples, 0.19%)</title><rect x="331" y="324" width="2" height="15" fill="rgb(224,177,39)"/><text x="334.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.38%)</title><rect x="331" y="276" width="5" height="15" fill="rgb(238,79,24)"/><text x="334.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.38%)</title><rect x="331" y="292" width="5" height="15" fill="rgb(216,39,26)"/><text x="334.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.38%)</title><rect x="331" y="308" width="5" height="15" fill="rgb(233,17,32)"/><text x="334.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="333" y="324" width="3" height="15" fill="rgb(228,13,6)"/><text x="336.00" y="334.50"></text></g><g><title>0x7fb858fc0d62 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="333" y="340" width="3" height="15" fill="rgb(231,48,52)"/><text x="336.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.19%)</title><rect x="336" y="292" width="2" height="15" fill="rgb(224,49,15)"/><text x="339.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="338" y="308" width="2" height="15" fill="rgb(206,172,3)"/><text x="341.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="340" y="308" width="2" height="15" fill="rgb(240,195,48)"/><text x="343.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.19%)</title><rect x="342" y="324" width="2" height="15" fill="rgb(241,52,28)"/><text x="345.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (5 samples, 0.94%)</title><rect x="344" y="324" width="12" height="15" fill="rgb(242,111,0)"/><text x="347.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.19%)</title><rect x="356" y="324" width="2" height="15" fill="rgb(219,148,26)"/><text x="359.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (8 samples, 1.50%)</title><rect x="342" y="308" width="18" height="15" fill="rgb(248,165,39)"/><text x="345.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.19%)</title><rect x="358" y="324" width="2" height="15" fill="rgb(220,179,0)"/><text x="361.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.19%)</title><rect x="360" y="308" width="2" height="15" fill="rgb(223,2,42)"/><text x="363.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.19%)</title><rect x="362" y="308" width="2" height="15" fill="rgb(228,216,7)"/><text x="365.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.38%)</title><rect x="364" y="308" width="5" height="15" fill="rgb(240,189,27)"/><text x="367.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (18 samples, 3.38%)</title><rect x="331" y="244" width="40" height="15" fill="rgb(234,212,7)"/><text x="334.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (18 samples, 3.38%)</title><rect x="331" y="260" width="40" height="15" fill="rgb(224,89,49)"/><text x="334.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 3.01%)</title><rect x="336" y="276" width="35" height="15" fill="rgb(233,15,39)"/><text x="339.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 2.82%)</title><rect x="338" y="292" width="33" height="15" fill="rgb(250,216,28)"/><text x="341.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:244) (1 samples, 0.19%)</title><rect x="369" y="308" width="2" height="15" fill="rgb(253,188,45)"/><text x="372.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (21 samples, 3.95%)</title><rect x="327" y="180" width="46" height="15" fill="rgb(220,19,7)"/><text x="330.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (21 samples, 3.95%)</title><rect x="327" y="196" width="46" height="15" fill="rgb(235,163,40)"/><text x="330.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (20 samples, 3.76%)</title><rect x="329" y="212" width="44" height="15" fill="rgb(236,165,0)"/><text x="332.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (20 samples, 3.76%)</title><rect x="329" y="228" width="44" height="15" fill="rgb(250,223,49)"/><text x="332.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.19%)</title><rect x="371" y="244" width="2" height="15" fill="rgb(222,197,16)"/><text x="374.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.19%)</title><rect x="371" y="260" width="2" height="15" fill="rgb(227,125,5)"/><text x="374.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="373" y="196" width="2" height="15" fill="rgb(235,159,52)"/><text x="376.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="373" y="212" width="2" height="15" fill="rgb(222,24,35)"/><text x="376.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="375" y="196" width="3" height="15" fill="rgb(231,198,9)"/><text x="378.00" y="206.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="378" y="276" width="2" height="15" fill="rgb(249,34,39)"/><text x="381.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.19%)</title><rect x="380" y="276" width="2" height="15" fill="rgb(248,87,29)"/><text x="383.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.75%)</title><rect x="378" y="228" width="9" height="15" fill="rgb(212,40,20)"/><text x="381.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.75%)</title><rect x="378" y="244" width="9" height="15" fill="rgb(222,2,23)"/><text x="381.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.75%)</title><rect x="378" y="260" width="9" height="15" fill="rgb(240,44,6)"/><text x="381.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.38%)</title><rect x="382" y="276" width="5" height="15" fill="rgb(247,207,43)"/><text x="385.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="384" y="292" width="3" height="15" fill="rgb(213,160,50)"/><text x="387.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.63%)</title><rect x="378" y="196" width="31" height="15" fill="rgb(231,110,34)"/><text x="381.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.63%)</title><rect x="378" y="212" width="31" height="15" fill="rgb(209,161,0)"/><text x="381.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (10 samples, 1.88%)</title><rect x="387" y="228" width="22" height="15" fill="rgb(212,46,35)"/><text x="390.00" y="238.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (10 samples, 1.88%)</title><rect x="387" y="244" width="22" height="15" fill="rgb(220,205,32)"/><text x="390.00" y="254.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (10 samples, 1.88%)</title><rect x="387" y="260" width="22" height="15" fill="rgb(226,42,33)"/><text x="390.00" y="270.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (10 samples, 1.88%)</title><rect x="387" y="276" width="22" height="15" fill="rgb(211,23,22)"/><text x="390.00" y="286.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (10 samples, 1.88%)</title><rect x="387" y="292" width="22" height="15" fill="rgb(229,97,25)"/><text x="390.00" y="302.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (178 samples, 33.46%)</title><rect x="16" y="132" width="395" height="15" fill="rgb(222,75,11)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (165 samples, 31.02%)</title><rect x="45" y="148" width="366" height="15" fill="rgb(220,151,29)"/><text x="48.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (40 samples, 7.52%)</title><rect x="322" y="164" width="89" height="15" fill="rgb(224,186,4)"/><text x="325.00" y="174.50">_predict_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 3.20%)</title><rect x="373" y="180" width="38" height="15" fill="rgb(248,228,19)"/><text x="376.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.19%)</title><rect x="409" y="196" width="2" height="15" fill="rgb(248,192,54)"/><text x="412.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:38) (182 samples, 34.21%)</title><rect x="10" y="52" width="403" height="15" fill="rgb(211,177,24)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:37) (182 samples, 34.21%)</title><rect x="10" y="68" width="403" height="15" fill="rgb(212,143,12)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_s..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (182 samples, 34.21%)</title><rect x="10" y="84" width="403" height="15" fill="rgb(249,119,53)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (181 samples, 34.02%)</title><rect x="12" y="100" width="401" height="15" fill="rgb(208,228,46)"/><text x="15.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (180 samples, 33.83%)</title><rect x="14" y="116" width="399" height="15" fill="rgb(231,142,29)"/><text x="17.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="411" y="132" width="2" height="15" fill="rgb(208,154,45)"/><text x="414.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:1) (1 samples, 0.19%)</title><rect x="413" y="148" width="2" height="15" fill="rgb(245,102,24)"/><text x="416.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="413" y="164" width="2" height="15" fill="rgb(240,180,29)"/><text x="416.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="413" y="180" width="2" height="15" fill="rgb(247,108,15)"/><text x="416.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="413" y="196" width="2" height="15" fill="rgb(205,19,42)"/><text x="416.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="413" y="212" width="2" height="15" fill="rgb(254,29,52)"/><text x="416.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="413" y="228" width="2" height="15" fill="rgb(219,25,24)"/><text x="416.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.19%)</title><rect x="413" y="244" width="2" height="15" fill="rgb(236,169,53)"/><text x="416.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="413" y="260" width="2" height="15" fill="rgb(230,20,25)"/><text x="416.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="413" y="276" width="2" height="15" fill="rgb(230,94,31)"/><text x="416.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="413" y="292" width="2" height="15" fill="rgb(242,146,27)"/><text x="416.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="413" y="308" width="2" height="15" fill="rgb(222,80,28)"/><text x="416.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="413" y="324" width="2" height="15" fill="rgb(221,48,49)"/><text x="416.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="413" y="340" width="2" height="15" fill="rgb(205,145,15)"/><text x="416.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="413" y="356" width="2" height="15" fill="rgb(251,75,27)"/><text x="416.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:22) (1 samples, 0.19%)</title><rect x="413" y="372" width="2" height="15" fill="rgb(231,55,54)"/><text x="416.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="413" y="388" width="2" height="15" fill="rgb(231,10,7)"/><text x="416.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="413" y="404" width="2" height="15" fill="rgb(217,71,35)"/><text x="416.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="413" y="420" width="2" height="15" fill="rgb(225,122,25)"/><text x="416.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="413" y="436" width="2" height="15" fill="rgb(252,104,37)"/><text x="416.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="413" y="452" width="2" height="15" fill="rgb(235,188,0)"/><text x="416.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/hermite_e.py:1621) (1 samples, 0.19%)</title><rect x="413" y="468" width="2" height="15" fill="rgb(216,14,8)"/><text x="416.00" y="478.50"></text></g><g><title>HermiteE (numpy/polynomial/hermite_e.py:1646) (1 samples, 0.19%)</title><rect x="413" y="484" width="2" height="15" fill="rgb(246,191,3)"/><text x="416.00" y="494.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.19%)</title><rect x="415" y="980" width="3" height="15" fill="rgb(221,220,24)"/><text x="418.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.19%)</title><rect x="415" y="996" width="3" height="15" fill="rgb(252,175,6)"/><text x="418.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.38%)</title><rect x="415" y="852" width="5" height="15" fill="rgb(214,29,47)"/><text x="418.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.38%)</title><rect x="415" y="868" width="5" height="15" fill="rgb(231,138,30)"/><text x="418.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.38%)</title><rect x="415" y="884" width="5" height="15" fill="rgb(231,98,20)"/><text x="418.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.38%)</title><rect x="415" y="900" width="5" height="15" fill="rgb(210,111,1)"/><text x="418.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.38%)</title><rect x="415" y="916" width="5" height="15" fill="rgb(251,98,49)"/><text x="418.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.38%)</title><rect x="415" y="932" width="5" height="15" fill="rgb(246,39,37)"/><text x="418.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.38%)</title><rect x="415" y="948" width="5" height="15" fill="rgb(252,89,31)"/><text x="418.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.38%)</title><rect x="415" y="964" width="5" height="15" fill="rgb(230,3,30)"/><text x="418.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.19%)</title><rect x="418" y="980" width="2" height="15" fill="rgb(214,109,20)"/><text x="421.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.19%)</title><rect x="418" y="996" width="2" height="15" fill="rgb(215,4,3)"/><text x="421.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.19%)</title><rect x="418" y="1012" width="2" height="15" fill="rgb(250,133,51)"/><text x="421.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="420" y="852" width="2" height="15" fill="rgb(220,229,42)"/><text x="423.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.19%)</title><rect x="420" y="868" width="2" height="15" fill="rgb(248,66,50)"/><text x="423.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.19%)</title><rect x="420" y="884" width="2" height="15" fill="rgb(232,83,45)"/><text x="423.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.19%)</title><rect x="420" y="900" width="2" height="15" fill="rgb(212,179,25)"/><text x="423.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.19%)</title><rect x="420" y="916" width="2" height="15" fill="rgb(244,199,49)"/><text x="423.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.19%)</title><rect x="420" y="932" width="2" height="15" fill="rgb(210,218,20)"/><text x="423.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.19%)</title><rect x="420" y="948" width="2" height="15" fill="rgb(205,16,9)"/><text x="423.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.19%)</title><rect x="420" y="964" width="2" height="15" fill="rgb(208,162,41)"/><text x="423.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="420" y="980" width="2" height="15" fill="rgb(251,54,25)"/><text x="423.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.19%)</title><rect x="422" y="884" width="2" height="15" fill="rgb(250,225,26)"/><text x="425.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.19%)</title><rect x="422" y="900" width="2" height="15" fill="rgb(205,121,15)"/><text x="425.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="422" y="916" width="2" height="15" fill="rgb(242,41,42)"/><text x="425.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.19%)</title><rect x="422" y="932" width="2" height="15" fill="rgb(217,65,22)"/><text x="425.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.19%)</title><rect x="422" y="948" width="2" height="15" fill="rgb(253,130,15)"/><text x="425.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.19%)</title><rect x="422" y="964" width="2" height="15" fill="rgb(248,59,37)"/><text x="425.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.94%)</title><rect x="415" y="820" width="11" height="15" fill="rgb(228,39,5)"/><text x="418.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.94%)</title><rect x="415" y="836" width="11" height="15" fill="rgb(248,130,40)"/><text x="418.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.38%)</title><rect x="422" y="852" width="4" height="15" fill="rgb(243,65,52)"/><text x="425.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.38%)</title><rect x="422" y="868" width="4" height="15" fill="rgb(247,1,24)"/><text x="425.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.19%)</title><rect x="424" y="884" width="2" height="15" fill="rgb(247,120,47)"/><text x="427.00" y="894.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.19%)</title><rect x="426" y="820" width="3" height="15" fill="rgb(208,3,2)"/><text x="429.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="426" y="836" width="3" height="15" fill="rgb(242,228,51)"/><text x="429.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="426" y="852" width="3" height="15" fill="rgb(205,192,36)"/><text x="429.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="426" y="868" width="3" height="15" fill="rgb(248,135,32)"/><text x="429.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="426" y="884" width="3" height="15" fill="rgb(249,104,19)"/><text x="429.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="426" y="900" width="3" height="15" fill="rgb(226,47,44)"/><text x="429.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.19%)</title><rect x="426" y="916" width="3" height="15" fill="rgb(217,50,8)"/><text x="429.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="426" y="932" width="3" height="15" fill="rgb(248,152,33)"/><text x="429.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="426" y="948" width="3" height="15" fill="rgb(211,38,31)"/><text x="429.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="426" y="964" width="3" height="15" fill="rgb(231,130,20)"/><text x="429.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="426" y="980" width="3" height="15" fill="rgb(230,97,39)"/><text x="429.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="426" y="996" width="3" height="15" fill="rgb(230,157,28)"/><text x="429.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:26) (1 samples, 0.19%)</title><rect x="426" y="1012" width="3" height="15" fill="rgb(217,18,17)"/><text x="429.00" y="1022.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="426" y="1028" width="3" height="15" fill="rgb(233,196,44)"/><text x="429.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="426" y="1044" width="3" height="15" fill="rgb(248,222,23)"/><text x="429.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="426" y="1060" width="3" height="15" fill="rgb(253,50,11)"/><text x="429.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="426" y="1076" width="3" height="15" fill="rgb(248,34,7)"/><text x="429.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="426" y="1092" width="3" height="15" fill="rgb(227,58,53)"/><text x="429.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="426" y="1108" width="3" height="15" fill="rgb(254,91,5)"/><text x="429.00" y="1118.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.19%)</title><rect x="426" y="1124" width="3" height="15" fill="rgb(248,208,28)"/><text x="429.00" y="1134.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.19%)</title><rect x="426" y="1140" width="3" height="15" fill="rgb(210,229,24)"/><text x="429.00" y="1150.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="426" y="1156" width="3" height="15" fill="rgb(248,108,7)"/><text x="429.00" y="1166.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (7 samples, 1.32%)</title><rect x="415" y="148" width="16" height="15" fill="rgb(249,132,10)"/><text x="418.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="164" width="16" height="15" fill="rgb(229,112,38)"/><text x="418.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.32%)</title><rect x="415" y="180" width="16" height="15" fill="rgb(240,134,10)"/><text x="418.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="196" width="16" height="15" fill="rgb(240,129,4)"/><text x="418.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="212" width="16" height="15" fill="rgb(225,27,37)"/><text x="418.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="228" width="16" height="15" fill="rgb(230,138,38)"/><text x="418.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="244" width="16" height="15" fill="rgb(224,4,28)"/><text x="418.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="260" width="16" height="15" fill="rgb(215,176,8)"/><text x="418.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="276" width="16" height="15" fill="rgb(253,47,15)"/><text x="418.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.32%)</title><rect x="415" y="292" width="16" height="15" fill="rgb(210,102,23)"/><text x="418.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="308" width="16" height="15" fill="rgb(233,67,32)"/><text x="418.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="324" width="16" height="15" fill="rgb(225,61,17)"/><text x="418.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="340" width="16" height="15" fill="rgb(245,174,5)"/><text x="418.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="356" width="16" height="15" fill="rgb(245,35,2)"/><text x="418.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="372" width="16" height="15" fill="rgb(221,133,0)"/><text x="418.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 1.32%)</title><rect x="415" y="388" width="16" height="15" fill="rgb(254,81,54)"/><text x="418.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="404" width="16" height="15" fill="rgb(220,69,31)"/><text x="418.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="420" width="16" height="15" fill="rgb(253,81,48)"/><text x="418.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="436" width="16" height="15" fill="rgb(223,184,38)"/><text x="418.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="452" width="16" height="15" fill="rgb(242,214,28)"/><text x="418.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="468" width="16" height="15" fill="rgb(211,63,1)"/><text x="418.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 1.32%)</title><rect x="415" y="484" width="16" height="15" fill="rgb(223,148,24)"/><text x="418.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="500" width="16" height="15" fill="rgb(253,178,46)"/><text x="418.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="516" width="16" height="15" fill="rgb(223,30,1)"/><text x="418.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="532" width="16" height="15" fill="rgb(213,208,16)"/><text x="418.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="548" width="16" height="15" fill="rgb(219,225,54)"/><text x="418.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="564" width="16" height="15" fill="rgb(205,44,42)"/><text x="418.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 1.32%)</title><rect x="415" y="580" width="16" height="15" fill="rgb(223,47,0)"/><text x="418.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="596" width="16" height="15" fill="rgb(225,202,17)"/><text x="418.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.32%)</title><rect x="415" y="612" width="16" height="15" fill="rgb(235,123,38)"/><text x="418.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="628" width="16" height="15" fill="rgb(254,219,53)"/><text x="418.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="644" width="16" height="15" fill="rgb(207,76,0)"/><text x="418.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="660" width="16" height="15" fill="rgb(240,69,35)"/><text x="418.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="676" width="16" height="15" fill="rgb(216,142,1)"/><text x="418.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="692" width="16" height="15" fill="rgb(239,21,54)"/><text x="418.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="708" width="16" height="15" fill="rgb(216,31,24)"/><text x="418.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 1.32%)</title><rect x="415" y="724" width="16" height="15" fill="rgb(234,103,26)"/><text x="418.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.32%)</title><rect x="415" y="740" width="16" height="15" fill="rgb(250,131,54)"/><text x="418.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.32%)</title><rect x="415" y="756" width="16" height="15" fill="rgb(244,88,36)"/><text x="418.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.32%)</title><rect x="415" y="772" width="16" height="15" fill="rgb(241,70,19)"/><text x="418.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.32%)</title><rect x="415" y="788" width="16" height="15" fill="rgb(207,224,2)"/><text x="418.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.32%)</title><rect x="415" y="804" width="16" height="15" fill="rgb(227,91,1)"/><text x="418.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.19%)</title><rect x="429" y="820" width="2" height="15" fill="rgb(219,69,0)"/><text x="432.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="429" y="836" width="2" height="15" fill="rgb(253,222,28)"/><text x="432.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="429" y="852" width="2" height="15" fill="rgb(229,219,39)"/><text x="432.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="429" y="868" width="2" height="15" fill="rgb(254,191,39)"/><text x="432.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="429" y="884" width="2" height="15" fill="rgb(222,152,4)"/><text x="432.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="429" y="900" width="2" height="15" fill="rgb(214,153,16)"/><text x="432.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.19%)</title><rect x="429" y="916" width="2" height="15" fill="rgb(224,82,45)"/><text x="432.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.19%)</title><rect x="429" y="932" width="2" height="15" fill="rgb(209,147,0)"/><text x="432.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="429" y="948" width="2" height="15" fill="rgb(234,106,4)"/><text x="432.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="429" y="964" width="2" height="15" fill="rgb(212,176,6)"/><text x="432.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="429" y="980" width="2" height="15" fill="rgb(247,183,6)"/><text x="432.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="429" y="996" width="2" height="15" fill="rgb(254,109,0)"/><text x="432.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="429" y="1012" width="2" height="15" fill="rgb(238,5,7)"/><text x="432.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="429" y="1028" width="2" height="15" fill="rgb(216,108,9)"/><text x="432.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="429" y="1044" width="2" height="15" fill="rgb(235,137,33)"/><text x="432.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="429" y="1060" width="2" height="15" fill="rgb(245,86,8)"/><text x="432.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="429" y="1076" width="2" height="15" fill="rgb(254,40,38)"/><text x="432.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="429" y="1092" width="2" height="15" fill="rgb(234,162,32)"/><text x="432.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="429" y="1108" width="2" height="15" fill="rgb(223,169,17)"/><text x="432.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.19%)</title><rect x="429" y="1124" width="2" height="15" fill="rgb(237,176,9)"/><text x="432.00" y="1134.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.19%)</title><rect x="429" y="1140" width="2" height="15" fill="rgb(253,123,51)"/><text x="432.00" y="1150.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.19%)</title><rect x="429" y="1156" width="2" height="15" fill="rgb(248,85,31)"/><text x="432.00" y="1166.50"></text></g><g><title>getwidth (sre_parse.py:201) (1 samples, 0.19%)</title><rect x="429" y="1172" width="2" height="15" fill="rgb(228,61,2)"/><text x="432.00" y="1182.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.19%)</title><rect x="431" y="1348" width="2" height="15" fill="rgb(242,112,48)"/><text x="434.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="431" y="1364" width="2" height="15" fill="rgb(251,138,45)"/><text x="434.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="431" y="1380" width="2" height="15" fill="rgb(232,148,31)"/><text x="434.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="431" y="1396" width="2" height="15" fill="rgb(213,94,27)"/><text x="434.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="431" y="1412" width="2" height="15" fill="rgb(214,229,51)"/><text x="434.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="431" y="1428" width="2" height="15" fill="rgb(205,128,53)"/><text x="434.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.19%)</title><rect x="431" y="1444" width="2" height="15" fill="rgb(253,14,27)"/><text x="434.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="431" y="1460" width="2" height="15" fill="rgb(236,163,26)"/><text x="434.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="431" y="1476" width="2" height="15" fill="rgb(217,44,4)"/><text x="434.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="431" y="1492" width="2" height="15" fill="rgb(232,200,19)"/><text x="434.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="431" y="1508" width="2" height="15" fill="rgb(245,43,40)"/><text x="434.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="431" y="1524" width="2" height="15" fill="rgb(231,225,38)"/><text x="434.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.19%)</title><rect x="431" y="1540" width="2" height="15" fill="rgb(231,204,39)"/><text x="434.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="431" y="1556" width="2" height="15" fill="rgb(240,197,44)"/><text x="434.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="431" y="1572" width="2" height="15" fill="rgb(228,88,11)"/><text x="434.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="431" y="1588" width="2" height="15" fill="rgb(248,121,32)"/><text x="434.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="431" y="1604" width="2" height="15" fill="rgb(222,12,0)"/><text x="434.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="431" y="1620" width="2" height="15" fill="rgb(219,171,12)"/><text x="434.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.19%)</title><rect x="431" y="1636" width="2" height="15" fill="rgb(244,59,16)"/><text x="434.00" y="1646.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.19%)</title><rect x="431" y="1652" width="2" height="15" fill="rgb(210,215,17)"/><text x="434.00" y="1662.50"></text></g><g><title>from_list (matplotlib/colors.py:751) (1 samples, 0.19%)</title><rect x="431" y="1668" width="2" height="15" fill="rgb(233,73,23)"/><text x="434.00" y="1678.50"></text></g><g><title>array_item (mapping.c:1379) (1 samples, 0.19%)</title><rect x="431" y="1684" width="2" height="15" fill="rgb(224,165,8)"/><text x="434.00" y="1694.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.19%)</title><rect x="431" y="1700" width="2" height="15" fill="rgb(250,143,41)"/><text x="434.00" y="1710.50"></text></g><g><title>0x7fb858f91ab0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="431" y="1716" width="2" height="15" fill="rgb(250,83,30)"/><text x="434.00" y="1726.50"></text></g><g><title>0x7fb858f86603 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="431" y="1732" width="2" height="15" fill="rgb(239,228,46)"/><text x="434.00" y="1742.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.38%)</title><rect x="431" y="580" width="4" height="15" fill="rgb(254,83,53)"/><text x="434.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="596" width="4" height="15" fill="rgb(207,55,39)"/><text x="434.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="612" width="4" height="15" fill="rgb(247,196,31)"/><text x="434.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="628" width="4" height="15" fill="rgb(249,105,39)"/><text x="434.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="644" width="4" height="15" fill="rgb(215,166,35)"/><text x="434.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="660" width="4" height="15" fill="rgb(238,218,38)"/><text x="434.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.38%)</title><rect x="431" y="676" width="4" height="15" fill="rgb(211,62,20)"/><text x="434.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="692" width="4" height="15" fill="rgb(209,113,34)"/><text x="434.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="708" width="4" height="15" fill="rgb(244,194,20)"/><text x="434.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="724" width="4" height="15" fill="rgb(237,223,26)"/><text x="434.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="740" width="4" height="15" fill="rgb(254,151,40)"/><text x="434.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="756" width="4" height="15" fill="rgb(221,58,7)"/><text x="434.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.38%)</title><rect x="431" y="772" width="4" height="15" fill="rgb(224,2,3)"/><text x="434.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="788" width="4" height="15" fill="rgb(213,184,18)"/><text x="434.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="804" width="4" height="15" fill="rgb(232,53,48)"/><text x="434.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="820" width="4" height="15" fill="rgb(221,99,48)"/><text x="434.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="836" width="4" height="15" fill="rgb(219,181,31)"/><text x="434.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="852" width="4" height="15" fill="rgb(213,14,47)"/><text x="434.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.38%)</title><rect x="431" y="868" width="4" height="15" fill="rgb(205,62,29)"/><text x="434.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="884" width="4" height="15" fill="rgb(244,78,37)"/><text x="434.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="900" width="4" height="15" fill="rgb(238,0,35)"/><text x="434.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="916" width="4" height="15" fill="rgb(253,228,12)"/><text x="434.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="932" width="4" height="15" fill="rgb(208,114,24)"/><text x="434.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="948" width="4" height="15" fill="rgb(232,229,21)"/><text x="434.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.38%)</title><rect x="431" y="964" width="4" height="15" fill="rgb(209,163,12)"/><text x="434.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="980" width="4" height="15" fill="rgb(207,177,5)"/><text x="434.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="996" width="4" height="15" fill="rgb(216,160,50)"/><text x="434.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="1012" width="4" height="15" fill="rgb(226,10,25)"/><text x="434.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="1028" width="4" height="15" fill="rgb(231,202,15)"/><text x="434.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="1044" width="4" height="15" fill="rgb(234,111,24)"/><text x="434.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.38%)</title><rect x="431" y="1060" width="4" height="15" fill="rgb(233,24,7)"/><text x="434.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="1076" width="4" height="15" fill="rgb(229,196,39)"/><text x="434.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="1092" width="4" height="15" fill="rgb(215,32,12)"/><text x="434.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="1108" width="4" height="15" fill="rgb(235,224,2)"/><text x="434.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="1124" width="4" height="15" fill="rgb(206,150,32)"/><text x="434.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="1140" width="4" height="15" fill="rgb(222,144,24)"/><text x="434.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.38%)</title><rect x="431" y="1156" width="4" height="15" fill="rgb(248,217,53)"/><text x="434.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="1172" width="4" height="15" fill="rgb(254,73,27)"/><text x="434.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="1188" width="4" height="15" fill="rgb(237,94,52)"/><text x="434.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="1204" width="4" height="15" fill="rgb(235,148,43)"/><text x="434.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="1220" width="4" height="15" fill="rgb(217,42,11)"/><text x="434.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="1236" width="4" height="15" fill="rgb(233,180,13)"/><text x="434.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.38%)</title><rect x="431" y="1252" width="4" height="15" fill="rgb(222,94,24)"/><text x="434.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="431" y="1268" width="4" height="15" fill="rgb(228,125,52)"/><text x="434.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="431" y="1284" width="4" height="15" fill="rgb(228,0,41)"/><text x="434.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="431" y="1300" width="4" height="15" fill="rgb(222,159,50)"/><text x="434.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="431" y="1316" width="4" height="15" fill="rgb(244,59,28)"/><text x="434.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="431" y="1332" width="4" height="15" fill="rgb(243,211,2)"/><text x="434.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.19%)</title><rect x="433" y="1348" width="2" height="15" fill="rgb(254,201,29)"/><text x="436.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="433" y="1364" width="2" height="15" fill="rgb(252,57,14)"/><text x="436.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="433" y="1380" width="2" height="15" fill="rgb(216,149,31)"/><text x="436.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1396" width="2" height="15" fill="rgb(206,108,44)"/><text x="436.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="433" y="1412" width="2" height="15" fill="rgb(234,47,14)"/><text x="436.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="433" y="1428" width="2" height="15" fill="rgb(223,209,37)"/><text x="436.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="433" y="1444" width="2" height="15" fill="rgb(215,58,21)"/><text x="436.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="433" y="1460" width="2" height="15" fill="rgb(237,66,53)"/><text x="436.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1476" width="2" height="15" fill="rgb(245,48,52)"/><text x="436.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.19%)</title><rect x="433" y="1492" width="2" height="15" fill="rgb(228,183,24)"/><text x="436.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="433" y="1508" width="2" height="15" fill="rgb(253,99,41)"/><text x="436.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1524" width="2" height="15" fill="rgb(214,175,0)"/><text x="436.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="433" y="1540" width="2" height="15" fill="rgb(227,206,45)"/><text x="436.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="433" y="1556" width="2" height="15" fill="rgb(226,32,24)"/><text x="436.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="433" y="1572" width="2" height="15" fill="rgb(221,133,45)"/><text x="436.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="433" y="1588" width="2" height="15" fill="rgb(240,68,16)"/><text x="436.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1604" width="2" height="15" fill="rgb(221,111,51)"/><text x="436.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.19%)</title><rect x="433" y="1620" width="2" height="15" fill="rgb(215,173,8)"/><text x="436.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="433" y="1636" width="2" height="15" fill="rgb(235,135,29)"/><text x="436.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="433" y="1652" width="2" height="15" fill="rgb(242,174,24)"/><text x="436.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="433" y="1668" width="2" height="15" fill="rgb(242,132,46)"/><text x="436.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="433" y="1684" width="2" height="15" fill="rgb(253,28,25)"/><text x="436.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1700" width="2" height="15" fill="rgb(209,9,39)"/><text x="436.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.19%)</title><rect x="433" y="1716" width="2" height="15" fill="rgb(225,18,25)"/><text x="436.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="433" y="1732" width="2" height="15" fill="rgb(219,104,15)"/><text x="436.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="433" y="1748" width="2" height="15" fill="rgb(245,28,47)"/><text x="436.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="433" y="1764" width="2" height="15" fill="rgb(230,136,49)"/><text x="436.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="433" y="1780" width="2" height="15" fill="rgb(249,87,48)"/><text x="436.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="433" y="1796" width="2" height="15" fill="rgb(226,3,8)"/><text x="436.00" y="1806.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6341) (1 samples, 0.19%)</title><rect x="433" y="1812" width="2" height="15" fill="rgb(245,215,27)"/><text x="436.00" y="1822.50"></text></g><g><title>makeHTMLTags (pyparsing.py:5846) (1 samples, 0.19%)</title><rect x="433" y="1828" width="2" height="15" fill="rgb(215,57,22)"/><text x="436.00" y="1838.50"></text></g><g><title>_makeTags (pyparsing.py:5817) (1 samples, 0.19%)</title><rect x="433" y="1844" width="2" height="15" fill="rgb(254,38,11)"/><text x="436.00" y="1854.50"></text></g><g><title>addParseAction (pyparsing.py:1565) (1 samples, 0.19%)</title><rect x="433" y="1860" width="2" height="15" fill="rgb(205,149,1)"/><text x="436.00" y="1870.50"></text></g><g><title>_trim_arity (pyparsing.py:1308) (1 samples, 0.19%)</title><rect x="433" y="1876" width="2" height="15" fill="rgb(253,87,32)"/><text x="436.00" y="1886.50"></text></g><g><title>extract_stack (pyparsing.py:1292) (1 samples, 0.19%)</title><rect x="433" y="1892" width="2" height="15" fill="rgb(243,38,14)"/><text x="436.00" y="1902.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.19%)</title><rect x="433" y="1908" width="2" height="15" fill="rgb(231,62,49)"/><text x="436.00" y="1918.50"></text></g><g><title>extract (traceback.py:350) (1 samples, 0.19%)</title><rect x="433" y="1924" width="2" height="15" fill="rgb(225,75,47)"/><text x="436.00" y="1934.50"></text></g><g><title>lazycache (linecache.py:161) (1 samples, 0.19%)</title><rect x="433" y="1940" width="2" height="15" fill="rgb(229,110,51)"/><text x="436.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.56%)</title><rect x="431" y="292" width="7" height="15" fill="rgb(211,112,42)"/><text x="434.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="431" y="308" width="7" height="15" fill="rgb(230,49,6)"/><text x="434.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="431" y="324" width="7" height="15" fill="rgb(209,66,34)"/><text x="434.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="431" y="340" width="7" height="15" fill="rgb(247,28,30)"/><text x="434.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="431" y="356" width="7" height="15" fill="rgb(231,160,21)"/><text x="434.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="431" y="372" width="7" height="15" fill="rgb(244,172,7)"/><text x="434.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.56%)</title><rect x="431" y="388" width="7" height="15" fill="rgb(228,45,49)"/><text x="434.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="431" y="404" width="7" height="15" fill="rgb(242,177,33)"/><text x="434.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="431" y="420" width="7" height="15" fill="rgb(229,24,9)"/><text x="434.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="431" y="436" width="7" height="15" fill="rgb(223,202,5)"/><text x="434.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="431" y="452" width="7" height="15" fill="rgb(235,165,32)"/><text x="434.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="431" y="468" width="7" height="15" fill="rgb(253,79,47)"/><text x="434.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.56%)</title><rect x="431" y="484" width="7" height="15" fill="rgb(245,29,26)"/><text x="434.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="431" y="500" width="7" height="15" fill="rgb(244,132,43)"/><text x="434.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="431" y="516" width="7" height="15" fill="rgb(244,29,13)"/><text x="434.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="431" y="532" width="7" height="15" fill="rgb(243,1,39)"/><text x="434.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="431" y="548" width="7" height="15" fill="rgb(210,14,30)"/><text x="434.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="431" y="564" width="7" height="15" fill="rgb(229,224,17)"/><text x="434.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.19%)</title><rect x="435" y="580" width="3" height="15" fill="rgb(215,12,25)"/><text x="438.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="435" y="596" width="3" height="15" fill="rgb(225,17,11)"/><text x="438.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="435" y="612" width="3" height="15" fill="rgb(223,27,36)"/><text x="438.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="435" y="628" width="3" height="15" fill="rgb(233,46,41)"/><text x="438.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="435" y="644" width="3" height="15" fill="rgb(249,163,7)"/><text x="438.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="435" y="660" width="3" height="15" fill="rgb(222,43,52)"/><text x="438.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="435" y="676" width="3" height="15" fill="rgb(232,123,7)"/><text x="438.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="435" y="692" width="3" height="15" fill="rgb(247,168,14)"/><text x="438.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="435" y="708" width="3" height="15" fill="rgb(232,163,35)"/><text x="438.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.19%)</title><rect x="435" y="724" width="3" height="15" fill="rgb(244,113,19)"/><text x="438.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="435" y="740" width="3" height="15" fill="rgb(239,194,38)"/><text x="438.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="435" y="756" width="3" height="15" fill="rgb(246,61,29)"/><text x="438.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="435" y="772" width="3" height="15" fill="rgb(207,101,18)"/><text x="438.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="435" y="788" width="3" height="15" fill="rgb(236,41,27)"/><text x="438.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="435" y="804" width="3" height="15" fill="rgb(250,119,3)"/><text x="438.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="435" y="820" width="3" height="15" fill="rgb(231,218,33)"/><text x="438.00" y="830.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.19%)</title><rect x="438" y="1348" width="2" height="15" fill="rgb(224,45,52)"/><text x="441.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.19%)</title><rect x="438" y="1364" width="2" height="15" fill="rgb(254,129,29)"/><text x="441.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="438" y="1380" width="2" height="15" fill="rgb(238,102,30)"/><text x="441.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="438" y="1396" width="2" height="15" fill="rgb(247,182,51)"/><text x="441.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="438" y="1412" width="2" height="15" fill="rgb(227,155,17)"/><text x="441.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.19%)</title><rect x="438" y="1428" width="2" height="15" fill="rgb(225,224,40)"/><text x="441.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="438" y="1444" width="2" height="15" fill="rgb(241,210,12)"/><text x="441.00" y="1454.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.19%)</title><rect x="438" y="1460" width="2" height="15" fill="rgb(250,159,34)"/><text x="441.00" y="1470.50"></text></g><g><title>0x7fb84905cfe6 (?) (1 samples, 0.19%)</title><rect x="438" y="1476" width="2" height="15" fill="rgb(210,41,45)"/><text x="441.00" y="1486.50"></text></g><g><title>0x7fb848a7ab20 (?) (1 samples, 0.19%)</title><rect x="438" y="1492" width="2" height="15" fill="rgb(250,154,12)"/><text x="441.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.38%)</title><rect x="438" y="1316" width="4" height="15" fill="rgb(238,81,52)"/><text x="441.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.38%)</title><rect x="438" y="1332" width="4" height="15" fill="rgb(234,217,47)"/><text x="441.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.19%)</title><rect x="440" y="1348" width="2" height="15" fill="rgb(241,46,42)"/><text x="443.00" y="1358.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.19%)</title><rect x="440" y="1364" width="2" height="15" fill="rgb(223,183,4)"/><text x="443.00" y="1374.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (6 samples, 1.13%)</title><rect x="431" y="148" width="13" height="15" fill="rgb(222,208,35)"/><text x="434.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.13%)</title><rect x="431" y="164" width="13" height="15" fill="rgb(233,81,39)"/><text x="434.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.13%)</title><rect x="431" y="180" width="13" height="15" fill="rgb(241,107,45)"/><text x="434.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.13%)</title><rect x="431" y="196" width="13" height="15" fill="rgb(245,200,28)"/><text x="434.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.13%)</title><rect x="431" y="212" width="13" height="15" fill="rgb(234,4,18)"/><text x="434.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.13%)</title><rect x="431" y="228" width="13" height="15" fill="rgb(252,53,29)"/><text x="434.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.13%)</title><rect x="431" y="244" width="13" height="15" fill="rgb(209,82,3)"/><text x="434.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.13%)</title><rect x="431" y="260" width="13" height="15" fill="rgb(217,83,52)"/><text x="434.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.13%)</title><rect x="431" y="276" width="13" height="15" fill="rgb(215,212,8)"/><text x="434.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.56%)</title><rect x="438" y="292" width="6" height="15" fill="rgb(238,29,21)"/><text x="441.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="308" width="6" height="15" fill="rgb(250,50,10)"/><text x="441.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.56%)</title><rect x="438" y="324" width="6" height="15" fill="rgb(237,71,49)"/><text x="441.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="340" width="6" height="15" fill="rgb(230,221,21)"/><text x="441.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="356" width="6" height="15" fill="rgb(217,183,8)"/><text x="441.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="372" width="6" height="15" fill="rgb(219,121,9)"/><text x="441.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="388" width="6" height="15" fill="rgb(216,116,26)"/><text x="441.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="404" width="6" height="15" fill="rgb(218,52,34)"/><text x="441.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="420" width="6" height="15" fill="rgb(251,54,18)"/><text x="441.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.56%)</title><rect x="438" y="436" width="6" height="15" fill="rgb(254,68,9)"/><text x="441.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="452" width="6" height="15" fill="rgb(240,185,39)"/><text x="441.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="468" width="6" height="15" fill="rgb(227,0,49)"/><text x="441.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="484" width="6" height="15" fill="rgb(242,102,47)"/><text x="441.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="500" width="6" height="15" fill="rgb(210,183,2)"/><text x="441.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="516" width="6" height="15" fill="rgb(229,122,35)"/><text x="441.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.56%)</title><rect x="438" y="532" width="6" height="15" fill="rgb(214,108,22)"/><text x="441.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="548" width="6" height="15" fill="rgb(250,121,41)"/><text x="441.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="564" width="6" height="15" fill="rgb(243,34,25)"/><text x="441.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="580" width="6" height="15" fill="rgb(230,13,53)"/><text x="441.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="596" width="6" height="15" fill="rgb(209,20,17)"/><text x="441.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="612" width="6" height="15" fill="rgb(244,207,34)"/><text x="441.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.56%)</title><rect x="438" y="628" width="6" height="15" fill="rgb(246,118,32)"/><text x="441.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="644" width="6" height="15" fill="rgb(210,146,33)"/><text x="441.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="660" width="6" height="15" fill="rgb(219,61,12)"/><text x="441.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="676" width="6" height="15" fill="rgb(254,222,50)"/><text x="441.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="692" width="6" height="15" fill="rgb(228,33,11)"/><text x="441.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="708" width="6" height="15" fill="rgb(231,142,53)"/><text x="441.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.56%)</title><rect x="438" y="724" width="6" height="15" fill="rgb(228,152,19)"/><text x="441.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="740" width="6" height="15" fill="rgb(216,163,49)"/><text x="441.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.56%)</title><rect x="438" y="756" width="6" height="15" fill="rgb(245,58,51)"/><text x="441.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="772" width="6" height="15" fill="rgb(245,122,9)"/><text x="441.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="788" width="6" height="15" fill="rgb(233,182,34)"/><text x="441.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="804" width="6" height="15" fill="rgb(226,40,24)"/><text x="441.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="820" width="6" height="15" fill="rgb(211,58,48)"/><text x="441.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="836" width="6" height="15" fill="rgb(243,181,33)"/><text x="441.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="852" width="6" height="15" fill="rgb(240,215,16)"/><text x="441.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.56%)</title><rect x="438" y="868" width="6" height="15" fill="rgb(229,81,45)"/><text x="441.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="884" width="6" height="15" fill="rgb(244,2,18)"/><text x="441.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="900" width="6" height="15" fill="rgb(239,48,2)"/><text x="441.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="916" width="6" height="15" fill="rgb(249,45,4)"/><text x="441.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="932" width="6" height="15" fill="rgb(219,215,37)"/><text x="441.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="948" width="6" height="15" fill="rgb(247,79,8)"/><text x="441.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.56%)</title><rect x="438" y="964" width="6" height="15" fill="rgb(234,34,47)"/><text x="441.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.56%)</title><rect x="438" y="980" width="6" height="15" fill="rgb(226,126,48)"/><text x="441.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="996" width="6" height="15" fill="rgb(227,221,48)"/><text x="441.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="1012" width="6" height="15" fill="rgb(217,63,10)"/><text x="441.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="1028" width="6" height="15" fill="rgb(219,191,6)"/><text x="441.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="1044" width="6" height="15" fill="rgb(251,159,6)"/><text x="441.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="1060" width="6" height="15" fill="rgb(223,144,29)"/><text x="441.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="1076" width="6" height="15" fill="rgb(226,99,1)"/><text x="441.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.56%)</title><rect x="438" y="1092" width="6" height="15" fill="rgb(216,120,43)"/><text x="441.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.56%)</title><rect x="438" y="1108" width="6" height="15" fill="rgb(216,167,25)"/><text x="441.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="1124" width="6" height="15" fill="rgb(237,160,36)"/><text x="441.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="1140" width="6" height="15" fill="rgb(245,70,35)"/><text x="441.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="1156" width="6" height="15" fill="rgb(239,141,20)"/><text x="441.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="1172" width="6" height="15" fill="rgb(210,181,41)"/><text x="441.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="1188" width="6" height="15" fill="rgb(228,59,48)"/><text x="441.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="1204" width="6" height="15" fill="rgb(212,204,41)"/><text x="441.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.56%)</title><rect x="438" y="1220" width="6" height="15" fill="rgb(238,224,49)"/><text x="441.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="438" y="1236" width="6" height="15" fill="rgb(230,220,48)"/><text x="441.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="438" y="1252" width="6" height="15" fill="rgb(229,215,7)"/><text x="441.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="438" y="1268" width="6" height="15" fill="rgb(217,153,26)"/><text x="441.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="438" y="1284" width="6" height="15" fill="rgb(217,95,52)"/><text x="441.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="438" y="1300" width="6" height="15" fill="rgb(250,106,48)"/><text x="441.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.19%)</title><rect x="442" y="1316" width="2" height="15" fill="rgb(227,126,12)"/><text x="445.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1332" width="2" height="15" fill="rgb(249,165,10)"/><text x="445.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1348" width="2" height="15" fill="rgb(222,195,7)"/><text x="445.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1364" width="2" height="15" fill="rgb(205,34,51)"/><text x="445.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1380" width="2" height="15" fill="rgb(239,52,1)"/><text x="445.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1396" width="2" height="15" fill="rgb(233,43,5)"/><text x="445.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.19%)</title><rect x="442" y="1412" width="2" height="15" fill="rgb(252,162,53)"/><text x="445.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.19%)</title><rect x="442" y="1428" width="2" height="15" fill="rgb(237,190,41)"/><text x="445.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1444" width="2" height="15" fill="rgb(225,50,28)"/><text x="445.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1460" width="2" height="15" fill="rgb(222,175,50)"/><text x="445.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1476" width="2" height="15" fill="rgb(234,156,50)"/><text x="445.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1492" width="2" height="15" fill="rgb(236,225,49)"/><text x="445.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1508" width="2" height="15" fill="rgb(250,182,15)"/><text x="445.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.19%)</title><rect x="442" y="1524" width="2" height="15" fill="rgb(245,212,14)"/><text x="445.00" y="1534.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.19%)</title><rect x="442" y="1540" width="2" height="15" fill="rgb(243,114,28)"/><text x="445.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1556" width="2" height="15" fill="rgb(210,10,2)"/><text x="445.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1572" width="2" height="15" fill="rgb(235,152,33)"/><text x="445.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1588" width="2" height="15" fill="rgb(207,32,0)"/><text x="445.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1604" width="2" height="15" fill="rgb(234,69,47)"/><text x="445.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1620" width="2" height="15" fill="rgb(219,217,51)"/><text x="445.00" y="1630.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.19%)</title><rect x="442" y="1636" width="2" height="15" fill="rgb(216,123,9)"/><text x="445.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1652" width="2" height="15" fill="rgb(232,144,28)"/><text x="445.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1668" width="2" height="15" fill="rgb(248,107,52)"/><text x="445.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1684" width="2" height="15" fill="rgb(223,139,35)"/><text x="445.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1700" width="2" height="15" fill="rgb(214,175,53)"/><text x="445.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1716" width="2" height="15" fill="rgb(233,106,11)"/><text x="445.00" y="1726.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:42) (1 samples, 0.19%)</title><rect x="442" y="1732" width="2" height="15" fill="rgb(235,139,19)"/><text x="445.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1748" width="2" height="15" fill="rgb(240,109,4)"/><text x="445.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1764" width="2" height="15" fill="rgb(225,8,15)"/><text x="445.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1780" width="2" height="15" fill="rgb(252,202,22)"/><text x="445.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1796" width="2" height="15" fill="rgb(254,91,21)"/><text x="445.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1812" width="2" height="15" fill="rgb(238,165,8)"/><text x="445.00" y="1822.50"></text></g><g><title>&lt;module&gt; (asyncio/unix_events.py:22) (1 samples, 0.19%)</title><rect x="442" y="1828" width="2" height="15" fill="rgb(214,165,36)"/><text x="445.00" y="1838.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="442" y="1844" width="2" height="15" fill="rgb(245,219,49)"/><text x="445.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1860" width="2" height="15" fill="rgb(220,117,43)"/><text x="445.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="442" y="1876" width="2" height="15" fill="rgb(254,81,16)"/><text x="445.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="442" y="1892" width="2" height="15" fill="rgb(209,219,29)"/><text x="445.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="442" y="1908" width="2" height="15" fill="rgb(248,100,21)"/><text x="445.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="442" y="1924" width="2" height="15" fill="rgb(221,212,7)"/><text x="445.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="442" y="1940" width="2" height="15" fill="rgb(205,182,52)"/><text x="445.00" y="1950.50"></text></g><g><title>&lt;module&gt; (asyncio/selector_events.py:567) (1 samples, 0.19%)</title><rect x="442" y="1956" width="2" height="15" fill="rgb(226,25,4)"/><text x="445.00" y="1966.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:11) (1 samples, 0.19%)</title><rect x="444" y="964" width="2" height="15" fill="rgb(241,5,34)"/><text x="447.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="444" y="980" width="2" height="15" fill="rgb(226,66,27)"/><text x="447.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="444" y="996" width="2" height="15" fill="rgb(246,198,13)"/><text x="447.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="444" y="1012" width="2" height="15" fill="rgb(220,8,14)"/><text x="447.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="444" y="1028" width="2" height="15" fill="rgb(248,6,37)"/><text x="447.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="444" y="1044" width="2" height="15" fill="rgb(225,214,4)"/><text x="447.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/exceptions.py:2) (1 samples, 0.19%)</title><rect x="444" y="1060" width="2" height="15" fill="rgb(220,120,48)"/><text x="447.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="444" y="1076" width="2" height="15" fill="rgb(219,120,7)"/><text x="447.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="444" y="1092" width="2" height="15" fill="rgb(236,133,8)"/><text x="447.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="444" y="1108" width="2" height="15" fill="rgb(253,23,18)"/><text x="447.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="444" y="1124" width="2" height="15" fill="rgb(252,144,35)"/><text x="447.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="444" y="1140" width="2" height="15" fill="rgb(232,127,15)"/><text x="447.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="444" y="1156" width="2" height="15" fill="rgb(210,219,2)"/><text x="447.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="444" y="1172" width="2" height="15" fill="rgb(207,151,5)"/><text x="447.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="444" y="1188" width="2" height="15" fill="rgb(249,55,27)"/><text x="447.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="444" y="1204" width="2" height="15" fill="rgb(210,15,4)"/><text x="447.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="444" y="1220" width="2" height="15" fill="rgb(206,27,30)"/><text x="447.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="444" y="1236" width="2" height="15" fill="rgb(207,65,1)"/><text x="447.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="444" y="1252" width="2" height="15" fill="rgb(232,106,12)"/><text x="447.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="444" y="1268" width="2" height="15" fill="rgb(215,59,5)"/><text x="447.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.19%)</title><rect x="444" y="1284" width="2" height="15" fill="rgb(212,83,29)"/><text x="447.00" y="1294.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.19%)</title><rect x="444" y="1300" width="2" height="15" fill="rgb(240,50,28)"/><text x="447.00" y="1310.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="444" y="1316" width="2" height="15" fill="rgb(225,57,44)"/><text x="447.00" y="1326.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (2 samples, 0.38%)</title><rect x="444" y="772" width="5" height="15" fill="rgb(209,224,33)"/><text x="447.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="444" y="788" width="5" height="15" fill="rgb(244,61,3)"/><text x="447.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="444" y="804" width="5" height="15" fill="rgb(253,39,27)"/><text x="447.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="444" y="820" width="5" height="15" fill="rgb(251,163,21)"/><text x="447.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="444" y="836" width="5" height="15" fill="rgb(226,52,34)"/><text x="447.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="444" y="852" width="5" height="15" fill="rgb(234,73,0)"/><text x="447.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (2 samples, 0.38%)</title><rect x="444" y="868" width="5" height="15" fill="rgb(216,223,17)"/><text x="447.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="444" y="884" width="5" height="15" fill="rgb(220,176,53)"/><text x="447.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="444" y="900" width="5" height="15" fill="rgb(237,192,46)"/><text x="447.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="444" y="916" width="5" height="15" fill="rgb(214,86,40)"/><text x="447.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="444" y="932" width="5" height="15" fill="rgb(251,163,35)"/><text x="447.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="444" y="948" width="5" height="15" fill="rgb(247,221,7)"/><text x="447.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.19%)</title><rect x="446" y="964" width="3" height="15" fill="rgb(217,107,29)"/><text x="449.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="446" y="980" width="3" height="15" fill="rgb(207,91,41)"/><text x="449.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="446" y="996" width="3" height="15" fill="rgb(208,182,30)"/><text x="449.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="446" y="1012" width="3" height="15" fill="rgb(209,202,38)"/><text x="449.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="446" y="1028" width="3" height="15" fill="rgb(215,14,51)"/><text x="449.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="446" y="1044" width="3" height="15" fill="rgb(223,48,25)"/><text x="449.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.19%)</title><rect x="446" y="1060" width="3" height="15" fill="rgb(219,43,44)"/><text x="449.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="446" y="1076" width="3" height="15" fill="rgb(218,9,9)"/><text x="449.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="446" y="1092" width="3" height="15" fill="rgb(205,155,28)"/><text x="449.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="446" y="1108" width="3" height="15" fill="rgb(251,206,27)"/><text x="449.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="446" y="1124" width="3" height="15" fill="rgb(242,154,12)"/><text x="449.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="446" y="1140" width="3" height="15" fill="rgb(205,135,43)"/><text x="449.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="446" y="1156" width="3" height="15" fill="rgb(229,55,37)"/><text x="449.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="446" y="1172" width="3" height="15" fill="rgb(244,19,25)"/><text x="449.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="446" y="1188" width="3" height="15" fill="rgb(237,185,35)"/><text x="449.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.19%)</title><rect x="446" y="1204" width="3" height="15" fill="rgb(236,133,10)"/><text x="449.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="446" y="1220" width="3" height="15" fill="rgb(235,208,42)"/><text x="449.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="446" y="1236" width="3" height="15" fill="rgb(221,106,4)"/><text x="449.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="446" y="1252" width="3" height="15" fill="rgb(231,169,30)"/><text x="449.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="446" y="1268" width="3" height="15" fill="rgb(224,35,11)"/><text x="449.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="446" y="1284" width="3" height="15" fill="rgb(240,7,6)"/><text x="449.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.19%)</title><rect x="446" y="1300" width="3" height="15" fill="rgb(245,49,22)"/><text x="449.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="446" y="1316" width="3" height="15" fill="rgb(252,156,18)"/><text x="449.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="446" y="1332" width="3" height="15" fill="rgb(234,193,23)"/><text x="449.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="446" y="1348" width="3" height="15" fill="rgb(240,173,10)"/><text x="449.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="446" y="1364" width="3" height="15" fill="rgb(208,36,26)"/><text x="449.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="446" y="1380" width="3" height="15" fill="rgb(243,104,28)"/><text x="449.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.19%)</title><rect x="446" y="1396" width="3" height="15" fill="rgb(206,130,31)"/><text x="449.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.19%)</title><rect x="446" y="1412" width="3" height="15" fill="rgb(254,165,44)"/><text x="449.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.19%)</title><rect x="446" y="1428" width="3" height="15" fill="rgb(228,195,25)"/><text x="449.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.19%)</title><rect x="446" y="1444" width="3" height="15" fill="rgb(207,182,37)"/><text x="449.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.19%)</title><rect x="446" y="1460" width="3" height="15" fill="rgb(254,186,48)"/><text x="449.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="446" y="1476" width="3" height="15" fill="rgb(246,15,47)"/><text x="449.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.19%)</title><rect x="446" y="1492" width="3" height="15" fill="rgb(251,178,44)"/><text x="449.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.19%)</title><rect x="446" y="1508" width="3" height="15" fill="rgb(251,119,27)"/><text x="449.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:607) (1 samples, 0.19%)</title><rect x="446" y="1524" width="3" height="15" fill="rgb(219,198,41)"/><text x="449.00" y="1534.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:4) (17 samples, 3.20%)</title><rect x="413" y="52" width="38" height="15" fill="rgb(220,207,23)"/><text x="416.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 3.20%)</title><rect x="413" y="68" width="38" height="15" fill="rgb(248,35,21)"/><text x="416.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 3.20%)</title><rect x="413" y="84" width="38" height="15" fill="rgb(242,100,6)"/><text x="416.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 3.20%)</title><rect x="413" y="100" width="38" height="15" fill="rgb(209,160,17)"/><text x="416.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 3.20%)</title><rect x="413" y="116" width="38" height="15" fill="rgb(218,160,32)"/><text x="416.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 3.20%)</title><rect x="413" y="132" width="38" height="15" fill="rgb(220,5,12)"/><text x="416.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:8) (3 samples, 0.56%)</title><rect x="444" y="148" width="7" height="15" fill="rgb(221,195,2)"/><text x="447.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="164" width="7" height="15" fill="rgb(241,14,29)"/><text x="447.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="180" width="7" height="15" fill="rgb(227,24,21)"/><text x="447.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="196" width="7" height="15" fill="rgb(248,14,27)"/><text x="447.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="212" width="7" height="15" fill="rgb(254,52,49)"/><text x="447.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="228" width="7" height="15" fill="rgb(212,20,3)"/><text x="447.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.56%)</title><rect x="444" y="244" width="7" height="15" fill="rgb(245,141,10)"/><text x="447.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="260" width="7" height="15" fill="rgb(246,179,46)"/><text x="447.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="276" width="7" height="15" fill="rgb(208,81,27)"/><text x="447.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="292" width="7" height="15" fill="rgb(251,80,20)"/><text x="447.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="308" width="7" height="15" fill="rgb(220,44,29)"/><text x="447.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="324" width="7" height="15" fill="rgb(248,184,39)"/><text x="447.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.56%)</title><rect x="444" y="340" width="7" height="15" fill="rgb(254,205,50)"/><text x="447.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="356" width="7" height="15" fill="rgb(223,58,13)"/><text x="447.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.56%)</title><rect x="444" y="372" width="7" height="15" fill="rgb(234,181,34)"/><text x="447.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="388" width="7" height="15" fill="rgb(254,156,2)"/><text x="447.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="404" width="7" height="15" fill="rgb(212,141,32)"/><text x="447.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="420" width="7" height="15" fill="rgb(210,188,7)"/><text x="447.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="436" width="7" height="15" fill="rgb(221,56,49)"/><text x="447.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="452" width="7" height="15" fill="rgb(223,1,30)"/><text x="447.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="468" width="7" height="15" fill="rgb(253,179,53)"/><text x="447.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 0.56%)</title><rect x="444" y="484" width="7" height="15" fill="rgb(225,224,20)"/><text x="447.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="500" width="7" height="15" fill="rgb(237,46,12)"/><text x="447.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="516" width="7" height="15" fill="rgb(242,79,50)"/><text x="447.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="532" width="7" height="15" fill="rgb(244,94,42)"/><text x="447.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="548" width="7" height="15" fill="rgb(246,36,1)"/><text x="447.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="564" width="7" height="15" fill="rgb(217,188,54)"/><text x="447.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 0.56%)</title><rect x="444" y="580" width="7" height="15" fill="rgb(210,139,31)"/><text x="447.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="596" width="7" height="15" fill="rgb(245,140,3)"/><text x="447.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="612" width="7" height="15" fill="rgb(248,158,22)"/><text x="447.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="628" width="7" height="15" fill="rgb(225,61,37)"/><text x="447.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="644" width="7" height="15" fill="rgb(234,223,31)"/><text x="447.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="660" width="7" height="15" fill="rgb(254,3,21)"/><text x="447.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 0.56%)</title><rect x="444" y="676" width="7" height="15" fill="rgb(214,152,42)"/><text x="447.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.56%)</title><rect x="444" y="692" width="7" height="15" fill="rgb(239,121,35)"/><text x="447.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.56%)</title><rect x="444" y="708" width="7" height="15" fill="rgb(238,218,43)"/><text x="447.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.56%)</title><rect x="444" y="724" width="7" height="15" fill="rgb(210,72,23)"/><text x="447.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.56%)</title><rect x="444" y="740" width="7" height="15" fill="rgb(253,167,47)"/><text x="447.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.56%)</title><rect x="444" y="756" width="7" height="15" fill="rgb(253,221,17)"/><text x="447.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.19%)</title><rect x="449" y="772" width="2" height="15" fill="rgb(233,47,26)"/><text x="452.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="449" y="788" width="2" height="15" fill="rgb(209,86,26)"/><text x="452.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="449" y="804" width="2" height="15" fill="rgb(216,224,8)"/><text x="452.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="449" y="820" width="2" height="15" fill="rgb(222,60,53)"/><text x="452.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="449" y="836" width="2" height="15" fill="rgb(229,165,16)"/><text x="452.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="449" y="852" width="2" height="15" fill="rgb(219,141,49)"/><text x="452.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="449" y="868" width="2" height="15" fill="rgb(211,136,12)"/><text x="452.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="449" y="884" width="2" height="15" fill="rgb(231,54,51)"/><text x="452.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.19%)</title><rect x="449" y="900" width="2" height="15" fill="rgb(222,40,44)"/><text x="452.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="449" y="916" width="2" height="15" fill="rgb(226,132,48)"/><text x="452.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="449" y="932" width="2" height="15" fill="rgb(219,95,4)"/><text x="452.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="449" y="948" width="2" height="15" fill="rgb(226,159,1)"/><text x="452.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="449" y="964" width="2" height="15" fill="rgb(254,96,11)"/><text x="452.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="449" y="980" width="2" height="15" fill="rgb(253,45,46)"/><text x="452.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.19%)</title><rect x="449" y="996" width="2" height="15" fill="rgb(242,2,17)"/><text x="452.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="449" y="1012" width="2" height="15" fill="rgb(208,72,16)"/><text x="452.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="449" y="1028" width="2" height="15" fill="rgb(227,131,1)"/><text x="452.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="449" y="1044" width="2" height="15" fill="rgb(245,111,5)"/><text x="452.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="449" y="1060" width="2" height="15" fill="rgb(233,161,41)"/><text x="452.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="449" y="1076" width="2" height="15" fill="rgb(225,3,46)"/><text x="452.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:47) (1 samples, 0.19%)</title><rect x="449" y="1092" width="2" height="15" fill="rgb(237,13,19)"/><text x="452.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="449" y="1108" width="2" height="15" fill="rgb(253,24,47)"/><text x="452.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="449" y="1124" width="2" height="15" fill="rgb(214,7,21)"/><text x="452.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="449" y="1140" width="2" height="15" fill="rgb(250,202,38)"/><text x="452.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="449" y="1156" width="2" height="15" fill="rgb(218,38,44)"/><text x="452.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="449" y="1172" width="2" height="15" fill="rgb(229,49,2)"/><text x="452.00" y="1182.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="449" y="1188" width="2" height="15" fill="rgb(221,6,35)"/><text x="452.00" y="1198.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:28) (1 samples, 0.19%)</title><rect x="451" y="84" width="2" height="15" fill="rgb(217,183,20)"/><text x="454.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="451" y="100" width="2" height="15" fill="rgb(233,55,14)"/><text x="454.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="451" y="116" width="2" height="15" fill="rgb(245,195,20)"/><text x="454.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="451" y="132" width="2" height="15" fill="rgb(245,72,16)"/><text x="454.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="451" y="148" width="2" height="15" fill="rgb(249,186,32)"/><text x="454.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.19%)</title><rect x="451" y="164" width="2" height="15" fill="rgb(242,196,11)"/><text x="454.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.19%)</title><rect x="451" y="180" width="2" height="15" fill="rgb(214,224,0)"/><text x="454.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.19%)</title><rect x="451" y="196" width="2" height="15" fill="rgb(248,74,34)"/><text x="454.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="451" y="212" width="2" height="15" fill="rgb(229,198,48)"/><text x="454.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="451" y="228" width="2" height="15" fill="rgb(212,36,15)"/><text x="454.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(226,7,1)"/><text x="454.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="451" y="260" width="2" height="15" fill="rgb(217,221,52)"/><text x="454.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="451" y="276" width="2" height="15" fill="rgb(224,89,18)"/><text x="454.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.19%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(251,83,10)"/><text x="454.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="451" y="308" width="2" height="15" fill="rgb(213,6,49)"/><text x="454.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="451" y="324" width="2" height="15" fill="rgb(227,149,8)"/><text x="454.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="451" y="340" width="2" height="15" fill="rgb(245,79,17)"/><text x="454.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="451" y="356" width="2" height="15" fill="rgb(232,24,35)"/><text x="454.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="451" y="372" width="2" height="15" fill="rgb(248,18,5)"/><text x="454.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.19%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(248,203,37)"/><text x="454.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.19%)</title><rect x="451" y="404" width="2" height="15" fill="rgb(246,226,2)"/><text x="454.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="451" y="420" width="2" height="15" fill="rgb(229,176,19)"/><text x="454.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="451" y="436" width="2" height="15" fill="rgb(251,101,23)"/><text x="454.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="451" y="452" width="2" height="15" fill="rgb(212,117,3)"/><text x="454.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:70) (1 samples, 0.19%)</title><rect x="451" y="468" width="2" height="15" fill="rgb(239,113,22)"/><text x="454.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.19%)</title><rect x="451" y="484" width="2" height="15" fill="rgb(238,212,29)"/><text x="454.00" y="494.50"></text></g><g><title>format_option (mlprodict/onnxrt/doc/doc_helper.py:153) (1 samples, 0.19%)</title><rect x="451" y="500" width="2" height="15" fill="rgb(221,110,20)"/><text x="454.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="451" y="516" width="2" height="15" fill="rgb(220,205,39)"/><text x="454.00" y="526.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.19%)</title><rect x="462" y="164" width="2" height="15" fill="rgb(231,87,41)"/><text x="465.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.56%)</title><rect x="466" y="180" width="7" height="15" fill="rgb(236,225,45)"/><text x="469.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="484" y="260" width="2" height="15" fill="rgb(235,218,51)"/><text x="487.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="484" y="276" width="2" height="15" fill="rgb(210,201,45)"/><text x="487.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="484" y="292" width="2" height="15" fill="rgb(228,27,48)"/><text x="487.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.19%)</title><rect x="486" y="260" width="3" height="15" fill="rgb(246,153,9)"/><text x="489.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.19%)</title><rect x="486" y="276" width="3" height="15" fill="rgb(225,87,24)"/><text x="489.00" y="286.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="489" y="260" width="2" height="15" fill="rgb(241,24,44)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.19%)</title><rect x="489" y="276" width="2" height="15" fill="rgb(214,16,20)"/><text x="492.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.19%)</title><rect x="491" y="388" width="2" height="15" fill="rgb(230,93,48)"/><text x="494.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.38%)</title><rect x="491" y="308" width="4" height="15" fill="rgb(234,16,10)"/><text x="494.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.38%)</title><rect x="491" y="324" width="4" height="15" fill="rgb(248,96,33)"/><text x="494.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.38%)</title><rect x="491" y="340" width="4" height="15" fill="rgb(224,157,40)"/><text x="494.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.38%)</title><rect x="491" y="356" width="4" height="15" fill="rgb(217,100,46)"/><text x="494.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.38%)</title><rect x="491" y="372" width="4" height="15" fill="rgb(218,99,7)"/><text x="494.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="493" y="388" width="2" height="15" fill="rgb(230,131,41)"/><text x="496.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="495" y="356" width="2" height="15" fill="rgb(249,210,31)"/><text x="498.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="495" y="372" width="2" height="15" fill="rgb(247,204,48)"/><text x="498.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="495" y="388" width="2" height="15" fill="rgb(216,59,36)"/><text x="498.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="495" y="404" width="2" height="15" fill="rgb(241,108,18)"/><text x="498.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.19%)</title><rect x="495" y="420" width="2" height="15" fill="rgb(251,58,45)"/><text x="498.00" y="430.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3794) (1 samples, 0.19%)</title><rect x="497" y="404" width="3" height="15" fill="rgb(229,68,0)"/><text x="500.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.19%)</title><rect x="497" y="420" width="3" height="15" fill="rgb(222,90,31)"/><text x="500.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.38%)</title><rect x="497" y="356" width="5" height="15" fill="rgb(251,175,37)"/><text x="500.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.38%)</title><rect x="497" y="372" width="5" height="15" fill="rgb(228,155,25)"/><text x="500.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.38%)</title><rect x="497" y="388" width="5" height="15" fill="rgb(222,152,0)"/><text x="500.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.19%)</title><rect x="500" y="404" width="2" height="15" fill="rgb(224,108,3)"/><text x="503.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.19%)</title><rect x="500" y="420" width="2" height="15" fill="rgb(234,68,23)"/><text x="503.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.19%)</title><rect x="500" y="436" width="2" height="15" fill="rgb(215,42,41)"/><text x="503.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.19%)</title><rect x="500" y="452" width="2" height="15" fill="rgb(238,174,6)"/><text x="503.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.19%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(217,224,6)"/><text x="505.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.19%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(245,50,9)"/><text x="505.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1064) (1 samples, 0.19%)</title><rect x="502" y="404" width="2" height="15" fill="rgb(227,161,20)"/><text x="505.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="504" y="372" width="2" height="15" fill="rgb(217,173,47)"/><text x="507.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="504" y="388" width="2" height="15" fill="rgb(243,69,10)"/><text x="507.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="504" y="404" width="2" height="15" fill="rgb(217,126,24)"/><text x="507.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="504" y="420" width="2" height="15" fill="rgb(239,38,21)"/><text x="507.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.19%)</title><rect x="506" y="372" width="3" height="15" fill="rgb(243,72,27)"/><text x="509.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.19%)</title><rect x="506" y="388" width="3" height="15" fill="rgb(245,93,17)"/><text x="509.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 0.75%)</title><rect x="502" y="356" width="9" height="15" fill="rgb(238,100,46)"/><text x="505.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.19%)</title><rect x="509" y="372" width="2" height="15" fill="rgb(246,208,40)"/><text x="512.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="509" y="388" width="2" height="15" fill="rgb(249,78,48)"/><text x="512.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="509" y="404" width="2" height="15" fill="rgb(210,25,28)"/><text x="512.00" y="414.50"></text></g><g><title>0x7fb858fa26df (libc-2.29.so) (1 samples, 0.19%)</title><rect x="509" y="420" width="2" height="15" fill="rgb(233,167,12)"/><text x="512.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.19%)</title><rect x="511" y="372" width="2" height="15" fill="rgb(248,13,48)"/><text x="514.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (2 samples, 0.38%)</title><rect x="513" y="372" width="4" height="15" fill="rgb(215,187,8)"/><text x="516.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.19%)</title><rect x="517" y="372" width="3" height="15" fill="rgb(233,190,36)"/><text x="520.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.19%)</title><rect x="520" y="372" width="2" height="15" fill="rgb(207,136,50)"/><text x="523.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (2 samples, 0.38%)</title><rect x="522" y="388" width="4" height="15" fill="rgb(229,171,18)"/><text x="525.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="526" y="388" width="3" height="15" fill="rgb(249,186,35)"/><text x="529.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.19%)</title><rect x="535" y="404" width="2" height="15" fill="rgb(228,188,26)"/><text x="538.00" y="414.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1663) (1 samples, 0.19%)</title><rect x="537" y="404" width="3" height="15" fill="rgb(252,217,3)"/><text x="540.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (6 samples, 1.13%)</title><rect x="529" y="388" width="13" height="15" fill="rgb(213,84,1)"/><text x="532.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="540" y="404" width="2" height="15" fill="rgb(235,19,29)"/><text x="543.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.38%)</title><rect x="542" y="388" width="4" height="15" fill="rgb(238,13,53)"/><text x="545.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="546" y="388" width="2" height="15" fill="rgb(205,1,10)"/><text x="549.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.19%)</title><rect x="548" y="388" width="3" height="15" fill="rgb(208,118,27)"/><text x="551.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 3.76%)</title><rect x="511" y="356" width="44" height="15" fill="rgb(229,67,27)"/><text x="514.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 2.82%)</title><rect x="522" y="372" width="33" height="15" fill="rgb(215,180,37)"/><text x="525.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.38%)</title><rect x="551" y="388" width="4" height="15" fill="rgb(252,57,42)"/><text x="554.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:584) (1 samples, 0.19%)</title><rect x="555" y="356" width="2" height="15" fill="rgb(241,55,4)"/><text x="558.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:675) (1 samples, 0.19%)</title><rect x="557" y="372" width="3" height="15" fill="rgb(219,168,15)"/><text x="560.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (32 samples, 6.02%)</title><rect x="491" y="260" width="71" height="15" fill="rgb(230,210,1)"/><text x="494.00" y="270.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (32 samples, 6.02%)</title><rect x="491" y="276" width="71" height="15" fill="rgb(252,78,28)"/><text x="494.00" y="286.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (32 samples, 6.02%)</title><rect x="491" y="292" width="71" height="15" fill="rgb(210,83,4)"/><text x="494.00" y="302.50">_sum (nu..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (30 samples, 5.64%)</title><rect x="495" y="308" width="67" height="15" fill="rgb(212,25,48)"/><text x="498.00" y="318.50">ufunc_r..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (30 samples, 5.64%)</title><rect x="495" y="324" width="67" height="15" fill="rgb(232,35,29)"/><text x="498.00" y="334.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (30 samples, 5.64%)</title><rect x="495" y="340" width="67" height="15" fill="rgb(239,156,8)"/><text x="498.00" y="350.50">PyUFunc..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.38%)</title><rect x="557" y="356" width="5" height="15" fill="rgb(235,53,34)"/><text x="560.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.19%)</title><rect x="560" y="372" width="2" height="15" fill="rgb(230,55,42)"/><text x="563.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="562" y="276" width="2" height="15" fill="rgb(207,90,23)"/><text x="565.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.19%)</title><rect x="562" y="292" width="2" height="15" fill="rgb(206,114,26)"/><text x="565.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.19%)</title><rect x="562" y="308" width="2" height="15" fill="rgb(217,208,20)"/><text x="565.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="564" y="276" width="2" height="15" fill="rgb(228,11,42)"/><text x="567.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="564" y="292" width="2" height="15" fill="rgb(230,197,51)"/><text x="567.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.56%)</title><rect x="562" y="260" width="6" height="15" fill="rgb(253,222,42)"/><text x="565.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="566" y="276" width="2" height="15" fill="rgb(219,78,20)"/><text x="569.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="566" y="292" width="2" height="15" fill="rgb(235,26,17)"/><text x="569.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="566" y="308" width="2" height="15" fill="rgb(207,184,2)"/><text x="569.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="566" y="324" width="2" height="15" fill="rgb(241,22,37)"/><text x="569.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="566" y="340" width="2" height="15" fill="rgb(209,184,39)"/><text x="569.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="566" y="356" width="2" height="15" fill="rgb(241,228,46)"/><text x="569.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="566" y="372" width="2" height="15" fill="rgb(242,12,44)"/><text x="569.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="566" y="388" width="2" height="15" fill="rgb(236,228,21)"/><text x="569.00" y="398.50"></text></g><g><title>0x7fb858fa22a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="566" y="404" width="2" height="15" fill="rgb(237,195,14)"/><text x="569.00" y="414.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (41 samples, 7.71%)</title><rect x="480" y="244" width="91" height="15" fill="rgb(211,96,38)"/><text x="483.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.19%)</title><rect x="568" y="260" width="3" height="15" fill="rgb(216,211,49)"/><text x="571.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.19%)</title><rect x="571" y="260" width="2" height="15" fill="rgb(223,45,31)"/><text x="574.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="571" y="276" width="2" height="15" fill="rgb(210,183,7)"/><text x="574.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="571" y="292" width="2" height="15" fill="rgb(242,123,3)"/><text x="574.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="571" y="308" width="2" height="15" fill="rgb(236,13,1)"/><text x="574.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="573" y="260" width="2" height="15" fill="rgb(242,24,43)"/><text x="576.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="573" y="276" width="2" height="15" fill="rgb(209,8,54)"/><text x="576.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="573" y="292" width="2" height="15" fill="rgb(251,161,13)"/><text x="576.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="573" y="308" width="2" height="15" fill="rgb(210,204,39)"/><text x="576.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="575" y="276" width="2" height="15" fill="rgb(252,216,33)"/><text x="578.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="575" y="292" width="2" height="15" fill="rgb(207,25,11)"/><text x="578.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.19%)</title><rect x="575" y="308" width="2" height="15" fill="rgb(244,9,54)"/><text x="578.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.19%)</title><rect x="577" y="356" width="3" height="15" fill="rgb(253,33,29)"/><text x="580.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.38%)</title><rect x="577" y="324" width="5" height="15" fill="rgb(210,162,30)"/><text x="580.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (2 samples, 0.38%)</title><rect x="577" y="340" width="5" height="15" fill="rgb(242,100,18)"/><text x="580.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.19%)</title><rect x="580" y="356" width="2" height="15" fill="rgb(206,122,42)"/><text x="583.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.56%)</title><rect x="577" y="308" width="7" height="15" fill="rgb(229,48,23)"/><text x="580.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="582" y="324" width="2" height="15" fill="rgb(223,51,31)"/><text x="585.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2034) (1 samples, 0.19%)</title><rect x="584" y="340" width="2" height="15" fill="rgb(221,7,35)"/><text x="587.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="586" y="356" width="2" height="15" fill="rgb(249,182,37)"/><text x="589.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="588" y="356" width="3" height="15" fill="rgb(206,82,35)"/><text x="591.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.19%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(218,38,9)"/><text x="594.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.75%)</title><rect x="591" y="356" width="9" height="15" fill="rgb(222,224,29)"/><text x="594.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (3 samples, 0.56%)</title><rect x="593" y="372" width="7" height="15" fill="rgb(235,68,14)"/><text x="596.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 1.50%)</title><rect x="584" y="308" width="18" height="15" fill="rgb(247,166,0)"/><text x="587.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.50%)</title><rect x="584" y="324" width="18" height="15" fill="rgb(225,211,17)"/><text x="587.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.32%)</title><rect x="586" y="340" width="16" height="15" fill="rgb(229,7,7)"/><text x="589.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1076) (1 samples, 0.19%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(229,121,27)"/><text x="603.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.19%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(225,5,23)"/><text x="605.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 3.01%)</title><rect x="575" y="260" width="36" height="15" fill="rgb(220,18,25)"/><text x="578.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 2.82%)</title><rect x="577" y="276" width="34" height="15" fill="rgb(205,189,51)"/><text x="580.00" y="286.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 2.82%)</title><rect x="577" y="292" width="34" height="15" fill="rgb(221,36,48)"/><text x="580.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.56%)</title><rect x="604" y="308" width="7" height="15" fill="rgb(223,185,27)"/><text x="607.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (3 samples, 0.56%)</title><rect x="604" y="324" width="7" height="15" fill="rgb(252,126,7)"/><text x="607.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (3 samples, 0.56%)</title><rect x="604" y="340" width="7" height="15" fill="rgb(233,42,38)"/><text x="607.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (3 samples, 0.56%)</title><rect x="604" y="356" width="7" height="15" fill="rgb(245,47,8)"/><text x="607.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.56%)</title><rect x="604" y="372" width="7" height="15" fill="rgb(250,39,24)"/><text x="607.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (62 samples, 11.65%)</title><rect x="475" y="196" width="138" height="15" fill="rgb(214,167,3)"/><text x="478.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (62 samples, 11.65%)</title><rect x="475" y="212" width="138" height="15" fill="rgb(248,223,29)"/><text x="478.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (62 samples, 11.65%)</title><rect x="475" y="228" width="138" height="15" fill="rgb(244,224,5)"/><text x="478.00" y="238.50">_run (mlprodict/o..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (19 samples, 3.57%)</title><rect x="571" y="244" width="42" height="15" fill="rgb(227,66,34)"/><text x="574.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="611" y="260" width="2" height="15" fill="rgb(230,21,45)"/><text x="614.00" y="270.50"></text></g><g><title>0x7fb858fc10f9 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="617" y="340" width="2" height="15" fill="rgb(205,35,8)"/><text x="620.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (2 samples, 0.38%)</title><rect x="617" y="324" width="5" height="15" fill="rgb(235,208,53)"/><text x="620.00" y="334.50"></text></g><g><title>0x7fb858fc1103 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="619" y="340" width="3" height="15" fill="rgb(221,208,22)"/><text x="622.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.56%)</title><rect x="617" y="276" width="7" height="15" fill="rgb(243,133,42)"/><text x="620.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.56%)</title><rect x="617" y="292" width="7" height="15" fill="rgb(220,1,40)"/><text x="620.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.56%)</title><rect x="617" y="308" width="7" height="15" fill="rgb(241,118,10)"/><text x="620.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (1 samples, 0.19%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(217,55,46)"/><text x="625.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (1 samples, 0.19%)</title><rect x="622" y="340" width="2" height="15" fill="rgb(214,15,29)"/><text x="625.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(221,37,32)"/><text x="625.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="622" y="372" width="2" height="15" fill="rgb(254,26,41)"/><text x="625.00" y="382.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="624" y="276" width="4" height="15" fill="rgb(250,198,44)"/><text x="627.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (18 samples, 3.38%)</title><rect x="613" y="228" width="40" height="15" fill="rgb(250,54,52)"/><text x="616.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (18 samples, 3.38%)</title><rect x="613" y="244" width="40" height="15" fill="rgb(233,95,23)"/><text x="616.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (16 samples, 3.01%)</title><rect x="617" y="260" width="36" height="15" fill="rgb(219,162,14)"/><text x="620.00" y="270.50">dot..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.07%)</title><rect x="628" y="276" width="25" height="15" fill="rgb(217,48,1)"/><text x="631.00" y="286.50">s..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(233,157,51)"/><text x="656.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.19%)</title><rect x="653" y="276" width="2" height="15" fill="rgb(205,103,35)"/><text x="656.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="655" y="260" width="2" height="15" fill="rgb(244,132,12)"/><text x="658.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.19%)</title><rect x="655" y="276" width="2" height="15" fill="rgb(239,94,2)"/><text x="658.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="657" y="260" width="2" height="15" fill="rgb(214,87,23)"/><text x="660.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.19%)</title><rect x="657" y="276" width="2" height="15" fill="rgb(214,206,26)"/><text x="660.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.19%)</title><rect x="659" y="260" width="3" height="15" fill="rgb(223,168,5)"/><text x="662.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="662" y="292" width="2" height="15" fill="rgb(248,137,47)"/><text x="665.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(232,153,25)"/><text x="665.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(248,189,32)"/><text x="665.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.19%)</title><rect x="664" y="308" width="2" height="15" fill="rgb(207,145,15)"/><text x="667.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.19%)</title><rect x="664" y="324" width="2" height="15" fill="rgb(210,201,50)"/><text x="667.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="664" y="340" width="2" height="15" fill="rgb(236,101,19)"/><text x="667.00" y="350.50"></text></g><g><title>0x7fb858fa1d0d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="664" y="356" width="2" height="15" fill="rgb(222,8,12)"/><text x="667.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.19%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(210,118,24)"/><text x="669.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2230) (1 samples, 0.19%)</title><rect x="668" y="324" width="2" height="15" fill="rgb(231,79,7)"/><text x="671.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.38%)</title><rect x="670" y="340" width="5" height="15" fill="rgb(240,74,25)"/><text x="673.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.56%)</title><rect x="675" y="340" width="7" height="15" fill="rgb(217,174,20)"/><text x="678.00" y="350.50"></text></g><g><title>0x7fb858fc0d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="682" y="356" width="2" height="15" fill="rgb(232,116,17)"/><text x="685.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (10 samples, 1.88%)</title><rect x="664" y="292" width="22" height="15" fill="rgb(232,146,41)"/><text x="667.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 1.69%)</title><rect x="666" y="308" width="20" height="15" fill="rgb(235,31,4)"/><text x="669.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.32%)</title><rect x="670" y="324" width="16" height="15" fill="rgb(217,59,25)"/><text x="673.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.38%)</title><rect x="682" y="340" width="4" height="15" fill="rgb(230,81,28)"/><text x="685.00" y="350.50"></text></g><g><title>0x7fb858fc0dae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="684" y="356" width="2" height="15" fill="rgb(236,61,13)"/><text x="687.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="686" y="308" width="2" height="15" fill="rgb(253,169,39)"/><text x="689.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="686" y="324" width="2" height="15" fill="rgb(238,140,32)"/><text x="689.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:600) (1 samples, 0.19%)</title><rect x="686" y="340" width="2" height="15" fill="rgb(226,167,43)"/><text x="689.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.38%)</title><rect x="686" y="292" width="4" height="15" fill="rgb(211,53,10)"/><text x="689.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="688" y="308" width="2" height="15" fill="rgb(210,10,41)"/><text x="691.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.19%)</title><rect x="688" y="324" width="2" height="15" fill="rgb(237,206,29)"/><text x="691.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (18 samples, 3.38%)</title><rect x="653" y="228" width="40" height="15" fill="rgb(244,54,1)"/><text x="656.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 3.38%)</title><rect x="653" y="244" width="40" height="15" fill="rgb(249,156,31)"/><text x="656.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.63%)</title><rect x="662" y="260" width="31" height="15" fill="rgb(232,34,50)"/><text x="665.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.63%)</title><rect x="662" y="276" width="31" height="15" fill="rgb(214,227,25)"/><text x="665.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(215,101,27)"/><text x="693.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="690" y="308" width="3" height="15" fill="rgb(215,39,11)"/><text x="693.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (1 samples, 0.19%)</title><rect x="693" y="228" width="2" height="15" fill="rgb(219,5,25)"/><text x="696.00" y="238.50"></text></g><g><title>0x7fb85907e151 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="693" y="244" width="2" height="15" fill="rgb(224,83,39)"/><text x="696.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="695" y="260" width="2" height="15" fill="rgb(235,200,11)"/><text x="698.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1245) (1 samples, 0.19%)</title><rect x="695" y="276" width="2" height="15" fill="rgb(213,1,29)"/><text x="698.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="697" y="260" width="2" height="15" fill="rgb(249,64,18)"/><text x="700.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.19%)</title><rect x="697" y="276" width="2" height="15" fill="rgb(241,119,11)"/><text x="700.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.19%)</title><rect x="697" y="292" width="2" height="15" fill="rgb(213,187,38)"/><text x="700.00" y="302.50"></text></g><g><title>solve_diophantine (mem_overlap.c:513) (1 samples, 0.19%)</title><rect x="699" y="324" width="3" height="15" fill="rgb(219,227,28)"/><text x="702.00" y="334.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.19%)</title><rect x="702" y="324" width="2" height="15" fill="rgb(238,96,50)"/><text x="705.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.19%)</title><rect x="702" y="340" width="2" height="15" fill="rgb(219,103,19)"/><text x="705.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:351) (1 samples, 0.19%)</title><rect x="702" y="356" width="2" height="15" fill="rgb(246,164,12)"/><text x="705.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.56%)</title><rect x="699" y="276" width="7" height="15" fill="rgb(212,101,50)"/><text x="702.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.56%)</title><rect x="699" y="292" width="7" height="15" fill="rgb(246,175,41)"/><text x="702.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 0.56%)</title><rect x="699" y="308" width="7" height="15" fill="rgb(220,182,11)"/><text x="702.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.19%)</title><rect x="704" y="324" width="2" height="15" fill="rgb(253,144,38)"/><text x="707.00" y="334.50"></text></g><g><title>0x7fb858fa0902 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="704" y="340" width="2" height="15" fill="rgb(234,177,11)"/><text x="707.00" y="350.50"></text></g><g><title>0x7fb83b3a533a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="706" y="308" width="2" height="15" fill="rgb(231,177,6)"/><text x="709.00" y="318.50"></text></g><g><title>0x7fb83b3c7204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="708" y="324" width="2" height="15" fill="rgb(209,114,37)"/><text x="711.00" y="334.50"></text></g><g><title>0x7fb83b385890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.56%)</title><rect x="713" y="340" width="6" height="15" fill="rgb(209,21,46)"/><text x="716.00" y="350.50"></text></g><g><title>0x7fb83b4d0c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="719" y="340" width="2" height="15" fill="rgb(241,161,49)"/><text x="722.00" y="350.50"></text></g><g><title>0x7fb8590ec1a0 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="746" y="356" width="4" height="15" fill="rgb(230,168,9)"/><text x="749.00" y="366.50"></text></g><g><title>0x7fb85911fe00 (libm-2.29.so) (5 samples, 0.94%)</title><rect x="750" y="356" width="11" height="15" fill="rgb(240,46,3)"/><text x="753.00" y="366.50"></text></g><g><title>0x7fb85911fe4e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="761" y="356" width="3" height="15" fill="rgb(242,157,42)"/><text x="764.00" y="366.50"></text></g><g><title>0x7fb85911fe7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="764" y="356" width="2" height="15" fill="rgb(238,78,27)"/><text x="767.00" y="366.50"></text></g><g><title>0x7fb85911fe96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="766" y="356" width="2" height="15" fill="rgb(213,107,28)"/><text x="769.00" y="366.50"></text></g><g><title>0x7fb83b3c7214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 5.26%)</title><rect x="710" y="324" width="63" height="15" fill="rgb(254,95,10)"/><text x="713.00" y="334.50">0x7fb8..</text></g><g><title>expf (libm-2.29.so) (23 samples, 4.32%)</title><rect x="721" y="340" width="52" height="15" fill="rgb(234,142,17)"/><text x="724.00" y="350.50">expf ..</text></g><g><title>0x7fb85911fea6 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="768" y="356" width="5" height="15" fill="rgb(223,83,1)"/><text x="771.00" y="366.50"></text></g><g><title>0x7fb83b3a533d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (37 samples, 6.95%)</title><rect x="708" y="308" width="82" height="15" fill="rgb(224,157,0)"/><text x="711.00" y="318.50">0x7fb83b3..</text></g><g><title>0x7fb83b3c7228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.50%)</title><rect x="773" y="324" width="17" height="15" fill="rgb(238,76,15)"/><text x="776.00" y="334.50"></text></g><g><title>0x7fb83b3a5345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="790" y="308" width="5" height="15" fill="rgb(240,48,37)"/><text x="793.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (46 samples, 8.65%)</title><rect x="695" y="244" width="102" height="15" fill="rgb(235,63,49)"/><text x="698.00" y="254.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (44 samples, 8.27%)</title><rect x="699" y="260" width="98" height="15" fill="rgb(231,141,1)"/><text x="702.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (41 samples, 7.71%)</title><rect x="706" y="276" width="91" height="15" fill="rgb(223,83,40)"/><text x="709.00" y="286.50">execute_le..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (41 samples, 7.71%)</title><rect x="706" y="292" width="91" height="15" fill="rgb(219,172,31)"/><text x="709.00" y="302.50">trivial_tw..</text></g><g><title>0x7fb83b3c713e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="795" y="308" width="2" height="15" fill="rgb(215,68,46)"/><text x="798.00" y="318.50"></text></g><g><title>0x7fb83b3c6ef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="795" y="324" width="2" height="15" fill="rgb(249,153,50)"/><text x="798.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (47 samples, 8.83%)</title><rect x="695" y="228" width="104" height="15" fill="rgb(249,188,42)"/><text x="698.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="797" y="244" width="2" height="15" fill="rgb(234,196,9)"/><text x="800.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.19%)</title><rect x="797" y="260" width="2" height="15" fill="rgb(243,92,54)"/><text x="800.00" y="270.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.19%)</title><rect x="806" y="340" width="2" height="15" fill="rgb(220,112,13)"/><text x="809.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.19%)</title><rect x="808" y="340" width="2" height="15" fill="rgb(233,100,43)"/><text x="811.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (4 samples, 0.75%)</title><rect x="806" y="324" width="9" height="15" fill="rgb(234,1,11)"/><text x="809.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (2 samples, 0.38%)</title><rect x="810" y="340" width="5" height="15" fill="rgb(249,108,3)"/><text x="813.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (3 samples, 0.56%)</title><rect x="815" y="324" width="6" height="15" fill="rgb(211,204,3)"/><text x="818.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.88%)</title><rect x="801" y="260" width="23" height="15" fill="rgb(249,110,43)"/><text x="804.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (10 samples, 1.88%)</title><rect x="801" y="276" width="23" height="15" fill="rgb(221,10,17)"/><text x="804.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.69%)</title><rect x="804" y="292" width="20" height="15" fill="rgb(253,98,34)"/><text x="807.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (8 samples, 1.50%)</title><rect x="806" y="308" width="18" height="15" fill="rgb(205,154,16)"/><text x="809.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:42) (1 samples, 0.19%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(229,91,15)"/><text x="824.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (96 samples, 18.05%)</title><rect x="613" y="196" width="213" height="15" fill="rgb(251,56,33)"/><text x="616.00" y="206.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (96 samples, 18.05%)</title><rect x="613" y="212" width="213" height="15" fill="rgb(241,177,1)"/><text x="616.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (12 samples, 2.26%)</title><rect x="799" y="228" width="27" height="15" fill="rgb(221,144,32)"/><text x="802.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (12 samples, 2.26%)</title><rect x="799" y="244" width="27" height="15" fill="rgb(205,87,37)"/><text x="802.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:317) (1 samples, 0.19%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(215,97,11)"/><text x="827.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (161 samples, 30.26%)</title><rect x="473" y="180" width="357" height="15" fill="rgb(206,61,29)"/><text x="476.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.38%)</title><rect x="826" y="196" width="4" height="15" fill="rgb(244,140,26)"/><text x="829.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.38%)</title><rect x="830" y="180" width="5" height="15" fill="rgb(209,168,1)"/><text x="833.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.19%)</title><rect x="835" y="180" width="2" height="15" fill="rgb(246,120,46)"/><text x="838.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.38%)</title><rect x="837" y="180" width="4" height="15" fill="rgb(221,39,19)"/><text x="840.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (171 samples, 32.14%)</title><rect x="464" y="164" width="379" height="15" fill="rgb(214,6,8)"/><text x="467.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="841" y="180" width="2" height="15" fill="rgb(242,57,20)"/><text x="844.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.19%)</title><rect x="843" y="164" width="3" height="15" fill="rgb(243,76,26)"/><text x="846.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:45) (179 samples, 33.65%)</title><rect x="451" y="52" width="397" height="15" fill="rgb(222,30,4)"/><text x="454.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:44) (179 samples, 33.65%)</title><rect x="451" y="68" width="397" height="15" fill="rgb(215,170,3)"/><text x="454.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (178 samples, 33.46%)</title><rect x="453" y="84" width="395" height="15" fill="rgb(211,174,12)"/><text x="456.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (178 samples, 33.46%)</title><rect x="453" y="100" width="395" height="15" fill="rgb(240,173,14)"/><text x="456.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (178 samples, 33.46%)</title><rect x="453" y="116" width="395" height="15" fill="rgb(240,50,4)"/><text x="456.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (176 samples, 33.08%)</title><rect x="458" y="132" width="390" height="15" fill="rgb(246,93,6)"/><text x="461.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (175 samples, 32.89%)</title><rect x="460" y="148" width="388" height="15" fill="rgb(227,108,34)"/><text x="463.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.19%)</title><rect x="846" y="164" width="2" height="15" fill="rgb(236,194,1)"/><text x="849.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="852" y="116" width="3" height="15" fill="rgb(234,142,43)"/><text x="855.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.19%)</title><rect x="852" y="132" width="3" height="15" fill="rgb(220,203,25)"/><text x="855.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.19%)</title><rect x="861" y="148" width="2" height="15" fill="rgb(230,139,11)"/><text x="864.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.19%)</title><rect x="863" y="196" width="3" height="15" fill="rgb(252,91,47)"/><text x="866.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.56%)</title><rect x="866" y="196" width="6" height="15" fill="rgb(237,180,22)"/><text x="869.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.38%)</title><rect x="868" y="212" width="4" height="15" fill="rgb(241,229,0)"/><text x="871.00" y="222.50"></text></g><g><title>0x7fb819849ff9 (?) (1 samples, 0.19%)</title><rect x="872" y="212" width="3" height="15" fill="rgb(232,171,31)"/><text x="875.00" y="222.50"></text></g><g><title>0x7fb819844ef6 (?) (1 samples, 0.19%)</title><rect x="872" y="228" width="3" height="15" fill="rgb(229,114,16)"/><text x="875.00" y="238.50"></text></g><g><title>0x7fb819839962 (?) (1 samples, 0.19%)</title><rect x="872" y="244" width="3" height="15" fill="rgb(252,30,32)"/><text x="875.00" y="254.50"></text></g><g><title>0x7fb81986d7a7 (?) (1 samples, 0.19%)</title><rect x="872" y="260" width="3" height="15" fill="rgb(226,84,26)"/><text x="875.00" y="270.50"></text></g><g><title>0x7fb81986d379 (?) (1 samples, 0.19%)</title><rect x="872" y="276" width="3" height="15" fill="rgb(228,213,31)"/><text x="875.00" y="286.50"></text></g><g><title>0x7fb819ccb8b8 (?) (1 samples, 0.19%)</title><rect x="872" y="292" width="3" height="15" fill="rgb(221,71,17)"/><text x="875.00" y="302.50"></text></g><g><title>0x7fb819cc9c7f (?) (1 samples, 0.19%)</title><rect x="872" y="308" width="3" height="15" fill="rgb(222,151,13)"/><text x="875.00" y="318.50"></text></g><g><title>0x7fb819cdc99c (?) (1 samples, 0.19%)</title><rect x="872" y="324" width="3" height="15" fill="rgb(233,185,23)"/><text x="875.00" y="334.50"></text></g><g><title>0x7fb8199c1866 (?) (1 samples, 0.19%)</title><rect x="872" y="340" width="3" height="15" fill="rgb(214,129,17)"/><text x="875.00" y="350.50"></text></g><g><title>0x7fb8198f3e44 (?) (1 samples, 0.19%)</title><rect x="872" y="356" width="3" height="15" fill="rgb(241,75,6)"/><text x="875.00" y="366.50"></text></g><g><title>0x7ffe2c5e4a01 ([vdso]) (1 samples, 0.19%)</title><rect x="875" y="212" width="2" height="15" fill="rgb(208,44,52)"/><text x="878.00" y="222.50"></text></g><g><title>0x7fb858fa0a4c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="877" y="260" width="2" height="15" fill="rgb(231,102,11)"/><text x="880.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="881" y="308" width="2" height="15" fill="rgb(254,90,50)"/><text x="884.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="881" y="324" width="2" height="15" fill="rgb(227,39,1)"/><text x="884.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="881" y="292" width="5" height="15" fill="rgb(240,201,20)"/><text x="884.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="883" y="308" width="3" height="15" fill="rgb(248,198,8)"/><text x="886.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="886" y="292" width="2" height="15" fill="rgb(219,32,32)"/><text x="889.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="888" y="340" width="2" height="15" fill="rgb(251,229,48)"/><text x="891.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="888" y="356" width="2" height="15" fill="rgb(250,27,36)"/><text x="891.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="888" y="372" width="2" height="15" fill="rgb(209,225,13)"/><text x="891.00" y="382.50"></text></g><g><title>0x7fb858fa22bd (libc-2.29.so) (1 samples, 0.19%)</title><rect x="888" y="388" width="2" height="15" fill="rgb(242,75,28)"/><text x="891.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="890" y="340" width="2" height="15" fill="rgb(248,150,15)"/><text x="893.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="890" y="356" width="2" height="15" fill="rgb(214,133,34)"/><text x="893.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="992" y="452" width="2" height="15" fill="rgb(231,53,46)"/><text x="995.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="992" y="468" width="2" height="15" fill="rgb(216,210,47)"/><text x="995.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="992" y="484" width="2" height="15" fill="rgb(252,204,23)"/><text x="995.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="992" y="500" width="2" height="15" fill="rgb(230,212,38)"/><text x="995.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="992" y="516" width="2" height="15" fill="rgb(210,96,50)"/><text x="995.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="992" y="532" width="2" height="15" fill="rgb(208,132,24)"/><text x="995.00" y="542.50"></text></g><g><title>0x7fb858fa1e5e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="992" y="548" width="2" height="15" fill="rgb(222,179,44)"/><text x="995.00" y="558.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="356" width="5" height="15" fill="rgb(214,81,33)"/><text x="995.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="372" width="5" height="15" fill="rgb(234,157,51)"/><text x="995.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="388" width="5" height="15" fill="rgb(219,45,20)"/><text x="995.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="404" width="5" height="15" fill="rgb(248,199,26)"/><text x="995.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="420" width="5" height="15" fill="rgb(209,100,43)"/><text x="995.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="992" y="436" width="5" height="15" fill="rgb(222,215,6)"/><text x="995.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="994" y="452" width="3" height="15" fill="rgb(218,19,20)"/><text x="997.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="994" y="468" width="3" height="15" fill="rgb(227,228,34)"/><text x="997.00" y="478.50"></text></g><g><title>0x7fb858fc0db3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1059" y="372" width="2" height="15" fill="rgb(242,1,4)"/><text x="1062.00" y="382.50"></text></g><g><title>0x7fb85911fe00 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1061" y="372" width="4" height="15" fill="rgb(245,28,17)"/><text x="1064.00" y="382.50"></text></g><g><title>0x7fb85911fe0a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1065" y="372" width="3" height="15" fill="rgb(220,32,28)"/><text x="1068.00" y="382.50"></text></g><g><title>0x7fb85911fe14 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1068" y="372" width="2" height="15" fill="rgb(251,144,42)"/><text x="1071.00" y="382.50"></text></g><g><title>0x7fb85911fe53 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1070" y="372" width="2" height="15" fill="rgb(238,199,50)"/><text x="1073.00" y="382.50"></text></g><g><title>0x7fb85911fe5f (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1072" y="372" width="2" height="15" fill="rgb(238,173,2)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7fb85911fe62 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1074" y="372" width="2" height="15" fill="rgb(254,181,48)"/><text x="1077.00" y="382.50"></text></g><g><title>0x7fb85911fe69 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1076" y="372" width="3" height="15" fill="rgb(216,83,28)"/><text x="1079.00" y="382.50"></text></g><g><title>0x7fb85911fe6d (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1079" y="372" width="4" height="15" fill="rgb(251,168,49)"/><text x="1082.00" y="382.50"></text></g><g><title>0x7fb85911fe71 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1083" y="372" width="4" height="15" fill="rgb(224,117,8)"/><text x="1086.00" y="382.50"></text></g><g><title>0x7fb85911fe7a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1087" y="372" width="3" height="15" fill="rgb(214,109,0)"/><text x="1090.00" y="382.50"></text></g><g><title>0x7fb85911fe92 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1090" y="372" width="2" height="15" fill="rgb(229,182,4)"/><text x="1093.00" y="382.50"></text></g><g><title>0x7fb85911fe96 (libm-2.29.so) (3 samples, 0.56%)</title><rect x="1092" y="372" width="7" height="15" fill="rgb(224,24,44)"/><text x="1095.00" y="382.50"></text></g><g><title>0x7fb85911fe9e (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1099" y="372" width="4" height="15" fill="rgb(224,155,41)"/><text x="1102.00" y="382.50"></text></g><g><title>0x7fb85911fea2 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1103" y="372" width="4" height="15" fill="rgb(210,45,34)"/><text x="1106.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 9.77%)</title><rect x="997" y="356" width="115" height="15" fill="rgb(220,82,42)"/><text x="1000.00" y="366.50">onnxruntime::m..</text></g><g><title>0x7fb85911fea6 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="1107" y="372" width="5" height="15" fill="rgb(228,61,53)"/><text x="1110.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 18.80%)</title><rect x="892" y="340" width="222" height="15" fill="rgb(237,35,26)"/><text x="895.00" y="350.50">onnxruntime::ml::LinearClassi..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1112" y="356" width="2" height="15" fill="rgb(214,200,14)"/><text x="1115.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1112" y="372" width="2" height="15" fill="rgb(233,139,2)"/><text x="1115.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 24.25%)</title><rect x="879" y="260" width="286" height="15" fill="rgb(234,74,2)"/><text x="882.00" y="270.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 24.25%)</title><rect x="879" y="276" width="286" height="15" fill="rgb(223,154,44)"/><text x="882.00" y="286.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 23.50%)</title><rect x="888" y="292" width="277" height="15" fill="rgb(254,127,19)"/><text x="891.00" y="302.50">onnxruntime::utils::ExecuteGraph (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 23.50%)</title><rect x="888" y="308" width="277" height="15" fill="rgb(221,95,13)"/><text x="891.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl ..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 23.50%)</title><rect x="888" y="324" width="277" height="15" fill="rgb(239,159,7)"/><text x="891.00" y="334.50">onnxruntime::SequentialExecutor::Exec..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.32%)</title><rect x="1114" y="340" width="51" height="15" fill="rgb(222,69,21)"/><text x="1117.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.32%)</title><rect x="1114" y="356" width="51" height="15" fill="rgb(234,117,44)"/><text x="1117.00" y="366.50">onnxr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="372" width="2" height="15" fill="rgb(236,170,40)"/><text x="1166.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="388" width="2" height="15" fill="rgb(222,148,51)"/><text x="1166.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="404" width="2" height="15" fill="rgb(240,169,7)"/><text x="1166.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="420" width="2" height="15" fill="rgb(208,186,28)"/><text x="1166.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="436" width="2" height="15" fill="rgb(226,125,25)"/><text x="1166.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="452" width="2" height="15" fill="rgb(247,217,32)"/><text x="1166.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="468" width="2" height="15" fill="rgb(213,155,48)"/><text x="1166.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="484" width="2" height="15" fill="rgb(223,85,6)"/><text x="1166.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="500" width="2" height="15" fill="rgb(225,33,7)"/><text x="1166.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1163" y="516" width="2" height="15" fill="rgb(251,144,43)"/><text x="1166.00" y="526.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1165" y="276" width="2" height="15" fill="rgb(222,68,39)"/><text x="1168.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="1165" y="260" width="5" height="15" fill="rgb(228,80,28)"/><text x="1168.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1167" y="276" width="3" height="15" fill="rgb(249,149,44)"/><text x="1170.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(227,117,4)"/><text x="1173.00" y="270.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(251,152,24)"/><text x="1173.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 25.19%)</title><rect x="877" y="244" width="297" height="15" fill="rgb(217,195,46)"/><text x="880.00" y="254.50">onnxruntime::python::addObjectMethods(p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="260" width="2" height="15" fill="rgb(232,197,23)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="276" width="2" height="15" fill="rgb(239,176,53)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="292" width="2" height="15" fill="rgb(238,84,27)"/><text x="1175.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(233,132,10)"/><text x="1175.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="324" width="2" height="15" fill="rgb(222,51,42)"/><text x="1175.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="340" width="2" height="15" fill="rgb(252,68,20)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="356" width="2" height="15" fill="rgb(237,122,10)"/><text x="1175.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1172" y="372" width="2" height="15" fill="rgb(229,218,12)"/><text x="1175.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(217,193,10)"/><text x="1177.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(245,80,4)"/><text x="1177.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(249,32,1)"/><text x="1179.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(245,106,14)"/><text x="1179.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (143 samples, 26.88%)</title><rect x="863" y="164" width="318" height="15" fill="rgb(216,146,11)"/><text x="866.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (143 samples, 26.88%)</title><rect x="863" y="180" width="318" height="15" fill="rgb(224,52,54)"/><text x="866.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py..</text></g><g><title>run (onnxruntime/capi/session.py:136) (139 samples, 26.13%)</title><rect x="872" y="196" width="309" height="15" fill="rgb(238,196,49)"/><text x="875.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 25.75%)</title><rect x="877" y="212" width="304" height="15" fill="rgb(246,5,14)"/><text x="880.00" y="222.50">pybind11::cpp_function::dispatcher (onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 25.75%)</title><rect x="877" y="228" width="304" height="15" fill="rgb(210,29,48)"/><text x="880.00" y="238.50">void pybind11::cpp_function::initialize&lt;..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="244" width="3" height="15" fill="rgb(210,144,49)"/><text x="1181.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="260" width="3" height="15" fill="rgb(245,189,25)"/><text x="1181.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1178" y="276" width="3" height="15" fill="rgb(216,46,45)"/><text x="1181.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (149 samples, 28.01%)</title><rect x="857" y="132" width="330" height="15" fill="rgb(233,222,40)"/><text x="860.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (146 samples, 27.44%)</title><rect x="863" y="148" width="324" height="15" fill="rgb(247,87,26)"/><text x="866.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.56%)</title><rect x="1181" y="164" width="6" height="15" fill="rgb(253,216,51)"/><text x="1184.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.19%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(237,104,0)"/><text x="1188.00" y="190.50"></text></g><g><title>all (532 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,191,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:52) (154 samples, 28.95%)</title><rect x="848" y="52" width="342" height="15" fill="rgb(206,63,2)"/><text x="851.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:51) (154 samples, 28.95%)</title><rect x="848" y="68" width="342" height="15" fill="rgb(241,207,53)"/><text x="851.00" y="78.50">profile_ort (bench_LogisticRegression_liblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (154 samples, 28.95%)</title><rect x="848" y="84" width="342" height="15" fill="rgb(207,177,6)"/><text x="851.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (154 samples, 28.95%)</title><rect x="848" y="100" width="342" height="15" fill="rgb(235,128,33)"/><text x="851.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (151 samples, 28.38%)</title><rect x="855" y="116" width="335" height="15" fill="rgb(212,95,35)"/><text x="858.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(240,66,39)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7fb85907e130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(242,50,5)"/><text x="1190.00" y="158.50"></text></g></g></svg>