<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:31) (2 samples, 0.27%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(251,20,28)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:11) (2 samples, 0.27%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(232,33,53)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:39) (2 samples, 0.27%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(233,62,53)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (2 samples, 0.27%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(209,209,43)"/><text x="13.00" y="110.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="116" width="2" height="15" fill="rgb(253,100,10)"/><text x="14.00" y="126.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.13%)</title><rect x="13" y="148" width="1" height="15" fill="rgb(225,29,47)"/><text x="16.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.13%)</title><rect x="13" y="164" width="1" height="15" fill="rgb(218,54,14)"/><text x="16.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.13%)</title><rect x="13" y="180" width="1" height="15" fill="rgb(252,135,11)"/><text x="16.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.13%)</title><rect x="13" y="196" width="1" height="15" fill="rgb(236,90,12)"/><text x="16.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.13%)</title><rect x="13" y="212" width="1" height="15" fill="rgb(218,130,16)"/><text x="16.00" y="222.50"></text></g><g><title>0x7f022b263a51 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="19" y="244" width="2" height="15" fill="rgb(215,4,16)"/><text x="22.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="21" y="244" width="1" height="15" fill="rgb(217,4,37)"/><text x="24.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="244" width="2" height="15" fill="rgb(254,86,17)"/><text x="25.00" y="254.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="25" y="260" width="3" height="15" fill="rgb(209,61,20)"/><text x="28.00" y="270.50"></text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (11 samples, 1.47%)</title><rect x="13" y="100" width="17" height="15" fill="rgb(210,73,5)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (11 samples, 1.47%)</title><rect x="13" y="116" width="17" height="15" fill="rgb(236,143,28)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (11 samples, 1.47%)</title><rect x="13" y="132" width="17" height="15" fill="rgb(238,104,0)"/><text x="16.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (10 samples, 1.34%)</title><rect x="14" y="148" width="16" height="15" fill="rgb(238,144,43)"/><text x="17.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (10 samples, 1.34%)</title><rect x="14" y="164" width="16" height="15" fill="rgb(223,161,32)"/><text x="17.00" y="174.50"></text></g><g><title>0x7f0205d543fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.34%)</title><rect x="14" y="180" width="16" height="15" fill="rgb(249,32,14)"/><text x="17.00" y="190.50"></text></g><g><title>0x7f0205d52553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.34%)</title><rect x="14" y="196" width="16" height="15" fill="rgb(235,72,27)"/><text x="17.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.34%)</title><rect x="14" y="212" width="16" height="15" fill="rgb(238,193,32)"/><text x="17.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.34%)</title><rect x="14" y="228" width="16" height="15" fill="rgb(229,201,5)"/><text x="17.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="24" y="244" width="6" height="15" fill="rgb(218,217,36)"/><text x="27.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(220,13,40)"/><text x="31.00" y="270.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.13%)</title><rect x="30" y="164" width="2" height="15" fill="rgb(242,59,45)"/><text x="33.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.13%)</title><rect x="30" y="180" width="2" height="15" fill="rgb(250,156,45)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.13%)</title><rect x="30" y="196" width="2" height="15" fill="rgb(235,13,18)"/><text x="33.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="30" y="212" width="2" height="15" fill="rgb(245,108,48)"/><text x="33.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.13%)</title><rect x="33" y="180" width="2" height="15" fill="rgb(235,75,8)"/><text x="36.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.13%)</title><rect x="33" y="196" width="2" height="15" fill="rgb(251,219,26)"/><text x="36.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.13%)</title><rect x="33" y="212" width="2" height="15" fill="rgb(216,123,37)"/><text x="36.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.13%)</title><rect x="35" y="180" width="1" height="15" fill="rgb(213,109,18)"/><text x="38.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.13%)</title><rect x="35" y="196" width="1" height="15" fill="rgb(237,220,29)"/><text x="38.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.13%)</title><rect x="35" y="212" width="1" height="15" fill="rgb(206,66,33)"/><text x="38.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.13%)</title><rect x="35" y="228" width="1" height="15" fill="rgb(240,186,13)"/><text x="38.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.13%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(215,224,40)"/><text x="38.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.13%)</title><rect x="35" y="260" width="1" height="15" fill="rgb(211,187,9)"/><text x="38.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.13%)</title><rect x="35" y="276" width="1" height="15" fill="rgb(230,160,0)"/><text x="38.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.13%)</title><rect x="35" y="292" width="1" height="15" fill="rgb(232,56,11)"/><text x="38.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.13%)</title><rect x="35" y="308" width="1" height="15" fill="rgb(215,195,21)"/><text x="38.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.13%)</title><rect x="35" y="324" width="1" height="15" fill="rgb(225,69,33)"/><text x="38.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.13%)</title><rect x="36" y="180" width="2" height="15" fill="rgb(207,161,34)"/><text x="39.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.13%)</title><rect x="36" y="196" width="2" height="15" fill="rgb(245,221,17)"/><text x="39.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.27%)</title><rect x="38" y="180" width="3" height="15" fill="rgb(206,131,7)"/><text x="41.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.27%)</title><rect x="38" y="196" width="3" height="15" fill="rgb(245,199,12)"/><text x="41.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.13%)</title><rect x="39" y="212" width="2" height="15" fill="rgb(231,77,51)"/><text x="42.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (8 samples, 1.07%)</title><rect x="30" y="148" width="13" height="15" fill="rgb(235,181,24)"/><text x="33.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (7 samples, 0.93%)</title><rect x="32" y="164" width="11" height="15" fill="rgb(239,112,13)"/><text x="35.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.13%)</title><rect x="41" y="180" width="2" height="15" fill="rgb(249,196,31)"/><text x="44.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.13%)</title><rect x="41" y="196" width="2" height="15" fill="rgb(251,131,37)"/><text x="44.00" y="206.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="43" y="228" width="1" height="15" fill="rgb(211,27,29)"/><text x="46.00" y="238.50"></text></g><g><title>0x7f022b263908 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="145" y="244" width="2" height="15" fill="rgb(210,81,12)"/><text x="148.00" y="254.50"></text></g><g><title>0x7f022b26394f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="147" y="244" width="1" height="15" fill="rgb(244,215,50)"/><text x="150.00" y="254.50"></text></g><g><title>0x7f022b263971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="148" y="244" width="2" height="15" fill="rgb(210,12,44)"/><text x="151.00" y="254.50"></text></g><g><title>0x7f022b263982 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="150" y="244" width="3" height="15" fill="rgb(223,129,17)"/><text x="153.00" y="254.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="153" y="244" width="1" height="15" fill="rgb(213,174,37)"/><text x="156.00" y="254.50"></text></g><g><title>0x7f022b26399b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="154" y="244" width="2" height="15" fill="rgb(239,9,40)"/><text x="157.00" y="254.50"></text></g><g><title>0x7f022b2639ed (libc-2.29.so) (1 samples, 0.13%)</title><rect x="156" y="244" width="2" height="15" fill="rgb(246,102,7)"/><text x="159.00" y="254.50"></text></g><g><title>0x7f022b263a33 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="158" y="244" width="1" height="15" fill="rgb(248,31,22)"/><text x="161.00" y="254.50"></text></g><g><title>0x7f022b263a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="159" y="244" width="2" height="15" fill="rgb(223,96,47)"/><text x="162.00" y="254.50"></text></g><g><title>0x7f022b263be4 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="161" y="244" width="3" height="15" fill="rgb(206,58,27)"/><text x="164.00" y="254.50"></text></g><g><title>0x7f022b263d07 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="164" y="244" width="6" height="15" fill="rgb(254,79,7)"/><text x="167.00" y="254.50"></text></g><g><title>0x7f022b435c07 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="170" y="260" width="2" height="15" fill="rgb(216,89,8)"/><text x="173.00" y="270.50"></text></g><g><title>0x7f022b435c3a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="172" y="260" width="1" height="15" fill="rgb(214,228,6)"/><text x="175.00" y="270.50"></text></g><g><title>0x7f022b435c6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="173" y="260" width="2" height="15" fill="rgb(254,9,42)"/><text x="176.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (4 samples, 0.53%)</title><rect x="170" y="244" width="6" height="15" fill="rgb(234,86,39)"/><text x="173.00" y="254.50"></text></g><g><title>0x7f022b435c7b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="175" y="260" width="1" height="15" fill="rgb(205,190,49)"/><text x="178.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.40%)</title><rect x="176" y="244" width="5" height="15" fill="rgb(239,157,49)"/><text x="179.00" y="254.50"></text></g><g><title>0x7f022b264b10 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="197" y="260" width="2" height="15" fill="rgb(225,101,12)"/><text x="200.00" y="270.50"></text></g><g><title>0x7f022b264b39 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="199" y="260" width="1" height="15" fill="rgb(242,151,17)"/><text x="202.00" y="270.50"></text></g><g><title>0x7f022b264c38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(212,115,37)"/><text x="203.00" y="270.50"></text></g><g><title>0x7f022b264c41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="202" y="260" width="1" height="15" fill="rgb(244,214,33)"/><text x="205.00" y="270.50"></text></g><g><title>0x7f022b264c48 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="203" y="260" width="3" height="15" fill="rgb(208,154,47)"/><text x="206.00" y="270.50"></text></g><g><title>0x7f022b264f0a (libc-2.29.so) (2 samples, 0.27%)</title><rect x="206" y="260" width="4" height="15" fill="rgb(228,20,38)"/><text x="209.00" y="270.50"></text></g><g><title>0x7f022b265003 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="210" y="260" width="1" height="15" fill="rgb(254,144,38)"/><text x="213.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (20 samples, 2.67%)</title><rect x="181" y="244" width="32" height="15" fill="rgb(233,169,12)"/><text x="184.00" y="254.50">ma..</text></g><g><title>0x7f022b26500a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="211" y="260" width="2" height="15" fill="rgb(248,59,19)"/><text x="214.00" y="270.50"></text></g><g><title>0x7f022b26396a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="249" y="260" width="2" height="15" fill="rgb(236,161,18)"/><text x="252.00" y="270.50"></text></g><g><title>0x7f022b263982 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="251" y="260" width="3" height="15" fill="rgb(242,65,42)"/><text x="254.00" y="270.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="254" y="260" width="1" height="15" fill="rgb(230,131,36)"/><text x="257.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="255" y="260" width="3" height="15" fill="rgb(244,78,52)"/><text x="258.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.53%)</title><rect x="258" y="260" width="7" height="15" fill="rgb(235,58,12)"/><text x="261.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (29 samples, 3.87%)</title><rect x="265" y="260" width="45" height="15" fill="rgb(212,203,3)"/><text x="268.00" y="270.50">svm:..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (174 samples, 23.23%)</title><rect x="43" y="164" width="274" height="15" fill="rgb(209,104,39)"/><text x="46.00" y="174.50">_dense_predict_proba (sklearn/svm/_b..</text></g><g><title>0x7f0205d543fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 23.23%)</title><rect x="43" y="180" width="274" height="15" fill="rgb(242,56,47)"/><text x="46.00" y="190.50">0x7f0205d543fd (sklearn/svm/_libsvm...</text></g><g><title>0x7f0205d52553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 23.23%)</title><rect x="43" y="196" width="274" height="15" fill="rgb(233,48,50)"/><text x="46.00" y="206.50">0x7f0205d52553 (sklearn/svm/_libsvm...</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 23.23%)</title><rect x="43" y="212" width="274" height="15" fill="rgb(221,202,27)"/><text x="46.00" y="222.50">copy_predict_proba (sklearn/svm/_lib..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (173 samples, 23.10%)</title><rect x="44" y="228" width="273" height="15" fill="rgb(209,130,23)"/><text x="47.00" y="238.50">svm_predict_probability (sklearn/svm..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (66 samples, 8.81%)</title><rect x="213" y="244" width="104" height="15" fill="rgb(237,31,42)"/><text x="216.00" y="254.50">svm_predict_..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="310" y="260" width="7" height="15" fill="rgb(248,136,34)"/><text x="313.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:38) (194 samples, 25.90%)</title><rect x="13" y="52" width="305" height="15" fill="rgb(244,99,3)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabili..</text></g><g><title>profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:37) (194 samples, 25.90%)</title><rect x="13" y="68" width="305" height="15" fill="rgb(216,81,51)"/><text x="16.00" y="78.50">profile_skl (bench_SVC_linear_m_cl_probab..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (194 samples, 25.90%)</title><rect x="13" y="84" width="305" height="15" fill="rgb(225,90,13)"/><text x="16.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_prob..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (183 samples, 24.43%)</title><rect x="30" y="100" width="288" height="15" fill="rgb(224,142,42)"/><text x="33.00" y="110.50">profile (bench_SVC_linear_m_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (183 samples, 24.43%)</title><rect x="30" y="116" width="288" height="15" fill="rgb(234,146,31)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (183 samples, 24.43%)</title><rect x="30" y="132" width="288" height="15" fill="rgb(230,88,26)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (175 samples, 23.36%)</title><rect x="43" y="148" width="275" height="15" fill="rgb(216,63,7)"/><text x="46.00" y="158.50">_predict_proba (sklearn/svm/_base.py..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:696) (1 samples, 0.13%)</title><rect x="317" y="164" width="1" height="15" fill="rgb(209,215,53)"/><text x="320.00" y="174.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2588) (1 samples, 0.13%)</title><rect x="318" y="948" width="2" height="15" fill="rgb(216,175,44)"/><text x="321.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.13%)</title><rect x="320" y="996" width="1" height="15" fill="rgb(236,99,41)"/><text x="323.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.13%)</title><rect x="320" y="1012" width="1" height="15" fill="rgb(235,199,34)"/><text x="323.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.40%)</title><rect x="318" y="852" width="5" height="15" fill="rgb(229,69,50)"/><text x="321.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.40%)</title><rect x="318" y="868" width="5" height="15" fill="rgb(249,71,54)"/><text x="321.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.40%)</title><rect x="318" y="884" width="5" height="15" fill="rgb(240,115,31)"/><text x="321.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.40%)</title><rect x="318" y="900" width="5" height="15" fill="rgb(225,226,7)"/><text x="321.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.40%)</title><rect x="318" y="916" width="5" height="15" fill="rgb(240,128,36)"/><text x="321.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (3 samples, 0.40%)</title><rect x="318" y="932" width="5" height="15" fill="rgb(251,57,9)"/><text x="321.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.27%)</title><rect x="320" y="948" width="3" height="15" fill="rgb(220,195,31)"/><text x="323.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (2 samples, 0.27%)</title><rect x="320" y="964" width="3" height="15" fill="rgb(208,76,6)"/><text x="323.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (2 samples, 0.27%)</title><rect x="320" y="980" width="3" height="15" fill="rgb(254,213,46)"/><text x="323.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.13%)</title><rect x="321" y="996" width="2" height="15" fill="rgb(221,45,6)"/><text x="324.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.13%)</title><rect x="321" y="1012" width="2" height="15" fill="rgb(234,133,49)"/><text x="324.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.13%)</title><rect x="323" y="852" width="2" height="15" fill="rgb(206,145,50)"/><text x="326.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.13%)</title><rect x="323" y="868" width="2" height="15" fill="rgb(224,78,40)"/><text x="326.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.13%)</title><rect x="323" y="884" width="2" height="15" fill="rgb(244,113,21)"/><text x="326.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.13%)</title><rect x="323" y="900" width="2" height="15" fill="rgb(227,219,31)"/><text x="326.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.13%)</title><rect x="323" y="916" width="2" height="15" fill="rgb(216,85,1)"/><text x="326.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.13%)</title><rect x="323" y="932" width="2" height="15" fill="rgb(227,143,40)"/><text x="326.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.13%)</title><rect x="323" y="948" width="2" height="15" fill="rgb(224,88,30)"/><text x="326.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.13%)</title><rect x="323" y="964" width="2" height="15" fill="rgb(220,103,14)"/><text x="326.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.13%)</title><rect x="323" y="980" width="2" height="15" fill="rgb(221,146,17)"/><text x="326.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.13%)</title><rect x="323" y="996" width="2" height="15" fill="rgb(254,17,20)"/><text x="326.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:2) (5 samples, 0.67%)</title><rect x="318" y="148" width="8" height="15" fill="rgb(209,60,0)"/><text x="321.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="164" width="8" height="15" fill="rgb(234,101,9)"/><text x="321.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.67%)</title><rect x="318" y="180" width="8" height="15" fill="rgb(234,227,12)"/><text x="321.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="196" width="8" height="15" fill="rgb(251,197,42)"/><text x="321.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="212" width="8" height="15" fill="rgb(206,125,30)"/><text x="321.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="228" width="8" height="15" fill="rgb(242,194,11)"/><text x="321.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="244" width="8" height="15" fill="rgb(222,150,43)"/><text x="321.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="260" width="8" height="15" fill="rgb(230,203,31)"/><text x="321.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="276" width="8" height="15" fill="rgb(227,104,48)"/><text x="321.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.67%)</title><rect x="318" y="292" width="8" height="15" fill="rgb(205,118,40)"/><text x="321.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="308" width="8" height="15" fill="rgb(240,139,18)"/><text x="321.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="324" width="8" height="15" fill="rgb(253,77,31)"/><text x="321.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="340" width="8" height="15" fill="rgb(211,187,35)"/><text x="321.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="356" width="8" height="15" fill="rgb(225,189,44)"/><text x="321.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="372" width="8" height="15" fill="rgb(243,186,1)"/><text x="321.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.67%)</title><rect x="318" y="388" width="8" height="15" fill="rgb(215,170,50)"/><text x="321.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="404" width="8" height="15" fill="rgb(210,39,40)"/><text x="321.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="420" width="8" height="15" fill="rgb(246,78,0)"/><text x="321.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="436" width="8" height="15" fill="rgb(246,51,5)"/><text x="321.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="452" width="8" height="15" fill="rgb(248,141,12)"/><text x="321.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="468" width="8" height="15" fill="rgb(228,215,26)"/><text x="321.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.67%)</title><rect x="318" y="484" width="8" height="15" fill="rgb(213,181,33)"/><text x="321.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="500" width="8" height="15" fill="rgb(213,29,15)"/><text x="321.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="516" width="8" height="15" fill="rgb(220,111,32)"/><text x="321.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="532" width="8" height="15" fill="rgb(225,204,7)"/><text x="321.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="548" width="8" height="15" fill="rgb(236,228,42)"/><text x="321.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="564" width="8" height="15" fill="rgb(224,55,41)"/><text x="321.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.67%)</title><rect x="318" y="580" width="8" height="15" fill="rgb(210,125,34)"/><text x="321.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="596" width="8" height="15" fill="rgb(211,28,40)"/><text x="321.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.67%)</title><rect x="318" y="612" width="8" height="15" fill="rgb(206,181,13)"/><text x="321.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="628" width="8" height="15" fill="rgb(240,78,37)"/><text x="321.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="644" width="8" height="15" fill="rgb(236,191,31)"/><text x="321.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="660" width="8" height="15" fill="rgb(253,84,42)"/><text x="321.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="676" width="8" height="15" fill="rgb(225,7,15)"/><text x="321.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="692" width="8" height="15" fill="rgb(209,140,4)"/><text x="321.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="708" width="8" height="15" fill="rgb(209,64,35)"/><text x="321.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.67%)</title><rect x="318" y="724" width="8" height="15" fill="rgb(217,216,13)"/><text x="321.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="318" y="740" width="8" height="15" fill="rgb(240,193,52)"/><text x="321.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="318" y="756" width="8" height="15" fill="rgb(247,37,42)"/><text x="321.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="318" y="772" width="8" height="15" fill="rgb(248,94,7)"/><text x="321.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="318" y="788" width="8" height="15" fill="rgb(222,100,53)"/><text x="321.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="318" y="804" width="8" height="15" fill="rgb(206,145,13)"/><text x="321.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.67%)</title><rect x="318" y="820" width="8" height="15" fill="rgb(217,160,14)"/><text x="321.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.67%)</title><rect x="318" y="836" width="8" height="15" fill="rgb(233,210,27)"/><text x="321.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.13%)</title><rect x="325" y="852" width="1" height="15" fill="rgb(245,74,50)"/><text x="328.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.13%)</title><rect x="325" y="868" width="1" height="15" fill="rgb(211,140,47)"/><text x="328.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.13%)</title><rect x="325" y="884" width="1" height="15" fill="rgb(248,60,41)"/><text x="328.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.13%)</title><rect x="325" y="900" width="1" height="15" fill="rgb(225,163,44)"/><text x="328.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.13%)</title><rect x="325" y="916" width="1" height="15" fill="rgb(209,68,10)"/><text x="328.00" y="926.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.13%)</title><rect x="326" y="484" width="2" height="15" fill="rgb(252,83,44)"/><text x="329.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="326" y="500" width="2" height="15" fill="rgb(237,194,8)"/><text x="329.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="516" width="2" height="15" fill="rgb(232,176,31)"/><text x="329.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="532" width="2" height="15" fill="rgb(230,57,54)"/><text x="329.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="548" width="2" height="15" fill="rgb(206,148,2)"/><text x="329.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="564" width="2" height="15" fill="rgb(215,150,46)"/><text x="329.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="580" width="2" height="15" fill="rgb(209,167,49)"/><text x="329.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="596" width="2" height="15" fill="rgb(242,204,38)"/><text x="329.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.13%)</title><rect x="326" y="612" width="2" height="15" fill="rgb(244,179,46)"/><text x="329.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="628" width="2" height="15" fill="rgb(230,111,40)"/><text x="329.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="644" width="2" height="15" fill="rgb(225,15,40)"/><text x="329.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="660" width="2" height="15" fill="rgb(216,81,24)"/><text x="329.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="676" width="2" height="15" fill="rgb(211,162,49)"/><text x="329.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="692" width="2" height="15" fill="rgb(220,34,31)"/><text x="329.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.13%)</title><rect x="326" y="708" width="2" height="15" fill="rgb(207,199,30)"/><text x="329.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="724" width="2" height="15" fill="rgb(231,123,54)"/><text x="329.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="740" width="2" height="15" fill="rgb(241,76,27)"/><text x="329.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="756" width="2" height="15" fill="rgb(212,122,10)"/><text x="329.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="772" width="2" height="15" fill="rgb(245,71,4)"/><text x="329.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="788" width="2" height="15" fill="rgb(231,20,34)"/><text x="329.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.13%)</title><rect x="326" y="804" width="2" height="15" fill="rgb(214,107,51)"/><text x="329.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="820" width="2" height="15" fill="rgb(213,28,49)"/><text x="329.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="836" width="2" height="15" fill="rgb(254,107,0)"/><text x="329.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="852" width="2" height="15" fill="rgb(205,112,5)"/><text x="329.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="868" width="2" height="15" fill="rgb(240,94,12)"/><text x="329.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="884" width="2" height="15" fill="rgb(220,153,43)"/><text x="329.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.13%)</title><rect x="326" y="900" width="2" height="15" fill="rgb(215,136,26)"/><text x="329.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="916" width="2" height="15" fill="rgb(220,128,54)"/><text x="329.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="932" width="2" height="15" fill="rgb(223,61,6)"/><text x="329.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="948" width="2" height="15" fill="rgb(238,150,15)"/><text x="329.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="964" width="2" height="15" fill="rgb(225,186,28)"/><text x="329.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="980" width="2" height="15" fill="rgb(247,200,33)"/><text x="329.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.13%)</title><rect x="326" y="996" width="2" height="15" fill="rgb(211,2,53)"/><text x="329.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="1012" width="2" height="15" fill="rgb(239,140,52)"/><text x="329.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="326" y="1028" width="2" height="15" fill="rgb(216,229,4)"/><text x="329.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="1044" width="2" height="15" fill="rgb(249,138,17)"/><text x="329.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="1060" width="2" height="15" fill="rgb(206,25,12)"/><text x="329.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="1076" width="2" height="15" fill="rgb(208,83,15)"/><text x="329.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="1092" width="2" height="15" fill="rgb(239,134,32)"/><text x="329.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="1108" width="2" height="15" fill="rgb(244,47,40)"/><text x="329.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="1124" width="2" height="15" fill="rgb(211,181,40)"/><text x="329.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (1 samples, 0.13%)</title><rect x="326" y="1140" width="2" height="15" fill="rgb(227,219,16)"/><text x="329.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="1156" width="2" height="15" fill="rgb(226,55,36)"/><text x="329.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="1172" width="2" height="15" fill="rgb(248,197,21)"/><text x="329.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="1188" width="2" height="15" fill="rgb(247,228,28)"/><text x="329.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="1204" width="2" height="15" fill="rgb(245,172,6)"/><text x="329.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="1220" width="2" height="15" fill="rgb(238,3,5)"/><text x="329.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/_base.py:22) (1 samples, 0.13%)</title><rect x="326" y="1236" width="2" height="15" fill="rgb(209,80,16)"/><text x="329.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="1252" width="2" height="15" fill="rgb(236,107,12)"/><text x="329.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="1268" width="2" height="15" fill="rgb(220,169,9)"/><text x="329.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="1284" width="2" height="15" fill="rgb(214,16,1)"/><text x="329.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="1300" width="2" height="15" fill="rgb(205,93,51)"/><text x="329.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="1316" width="2" height="15" fill="rgb(232,14,21)"/><text x="329.00" y="1326.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/__init__.py:8) (1 samples, 0.13%)</title><rect x="326" y="1332" width="2" height="15" fill="rgb(237,132,32)"/><text x="329.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="326" y="1348" width="2" height="15" fill="rgb(252,66,19)"/><text x="329.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="326" y="1364" width="2" height="15" fill="rgb(254,69,17)"/><text x="329.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="326" y="1380" width="2" height="15" fill="rgb(220,154,16)"/><text x="329.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="326" y="1396" width="2" height="15" fill="rgb(220,30,36)"/><text x="329.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="326" y="1412" width="2" height="15" fill="rgb(247,162,21)"/><text x="329.00" y="1422.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/_base.py:259) (1 samples, 0.13%)</title><rect x="326" y="1428" width="2" height="15" fill="rgb(238,139,17)"/><text x="329.00" y="1438.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.13%)</title><rect x="326" y="1444" width="2" height="15" fill="rgb(225,211,49)"/><text x="329.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.13%)</title><rect x="328" y="900" width="1" height="15" fill="rgb(232,43,34)"/><text x="331.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="916" width="1" height="15" fill="rgb(231,65,36)"/><text x="331.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="932" width="1" height="15" fill="rgb(229,54,2)"/><text x="331.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="948" width="1" height="15" fill="rgb(249,220,6)"/><text x="331.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="964" width="1" height="15" fill="rgb(223,186,11)"/><text x="331.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="980" width="1" height="15" fill="rgb(236,216,48)"/><text x="331.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.13%)</title><rect x="328" y="996" width="1" height="15" fill="rgb(207,144,46)"/><text x="331.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="328" y="1012" width="1" height="15" fill="rgb(213,93,42)"/><text x="331.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1028" width="1" height="15" fill="rgb(219,30,37)"/><text x="331.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1044" width="1" height="15" fill="rgb(217,94,28)"/><text x="331.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1060" width="1" height="15" fill="rgb(244,220,53)"/><text x="331.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1076" width="1" height="15" fill="rgb(208,3,32)"/><text x="331.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="1092" width="1" height="15" fill="rgb(223,219,13)"/><text x="331.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1108" width="1" height="15" fill="rgb(247,147,50)"/><text x="331.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.13%)</title><rect x="328" y="1124" width="1" height="15" fill="rgb(252,124,13)"/><text x="331.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1140" width="1" height="15" fill="rgb(223,40,14)"/><text x="331.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1156" width="1" height="15" fill="rgb(240,182,21)"/><text x="331.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1172" width="1" height="15" fill="rgb(242,128,23)"/><text x="331.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="1188" width="1" height="15" fill="rgb(239,90,45)"/><text x="331.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1204" width="1" height="15" fill="rgb(254,53,5)"/><text x="331.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.13%)</title><rect x="328" y="1220" width="1" height="15" fill="rgb(216,40,13)"/><text x="331.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1236" width="1" height="15" fill="rgb(207,46,19)"/><text x="331.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1252" width="1" height="15" fill="rgb(232,0,26)"/><text x="331.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1268" width="1" height="15" fill="rgb(238,56,4)"/><text x="331.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="1284" width="1" height="15" fill="rgb(224,161,36)"/><text x="331.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1300" width="1" height="15" fill="rgb(237,225,47)"/><text x="331.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.13%)</title><rect x="328" y="1316" width="1" height="15" fill="rgb(248,204,37)"/><text x="331.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1332" width="1" height="15" fill="rgb(224,29,16)"/><text x="331.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1348" width="1" height="15" fill="rgb(212,214,28)"/><text x="331.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1364" width="1" height="15" fill="rgb(209,85,31)"/><text x="331.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="1380" width="1" height="15" fill="rgb(212,143,1)"/><text x="331.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1396" width="1" height="15" fill="rgb(249,95,6)"/><text x="331.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.13%)</title><rect x="328" y="1412" width="1" height="15" fill="rgb(243,12,6)"/><text x="331.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1428" width="1" height="15" fill="rgb(233,144,32)"/><text x="331.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1444" width="1" height="15" fill="rgb(211,58,45)"/><text x="331.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1460" width="1" height="15" fill="rgb(243,139,22)"/><text x="331.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="328" y="1476" width="1" height="15" fill="rgb(245,80,17)"/><text x="331.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="328" y="1492" width="1" height="15" fill="rgb(205,144,12)"/><text x="331.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:117) (1 samples, 0.13%)</title><rect x="328" y="1508" width="1" height="15" fill="rgb(239,201,14)"/><text x="331.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="328" y="1524" width="1" height="15" fill="rgb(243,104,27)"/><text x="331.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="328" y="1540" width="1" height="15" fill="rgb(214,44,8)"/><text x="331.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="328" y="1556" width="1" height="15" fill="rgb(251,111,26)"/><text x="331.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="328" y="1572" width="1" height="15" fill="rgb(234,193,32)"/><text x="331.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.13%)</title><rect x="328" y="1588" width="1" height="15" fill="rgb(229,154,50)"/><text x="331.00" y="1598.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.13%)</title><rect x="328" y="1604" width="1" height="15" fill="rgb(232,150,43)"/><text x="331.00" y="1614.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.13%)</title><rect x="329" y="1028" width="2" height="15" fill="rgb(252,143,8)"/><text x="332.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="329" y="1044" width="2" height="15" fill="rgb(212,39,47)"/><text x="332.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="329" y="1060" width="2" height="15" fill="rgb(215,81,16)"/><text x="332.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="329" y="1076" width="2" height="15" fill="rgb(208,10,13)"/><text x="332.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="329" y="1092" width="2" height="15" fill="rgb(215,172,41)"/><text x="332.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="329" y="1108" width="2" height="15" fill="rgb(248,136,14)"/><text x="332.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="329" y="1124" width="2" height="15" fill="rgb(239,188,46)"/><text x="332.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="329" y="1140" width="2" height="15" fill="rgb(217,111,26)"/><text x="332.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.13%)</title><rect x="329" y="1156" width="2" height="15" fill="rgb(233,70,25)"/><text x="332.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="329" y="1172" width="2" height="15" fill="rgb(235,192,25)"/><text x="332.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="329" y="1188" width="2" height="15" fill="rgb(250,77,53)"/><text x="332.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="329" y="1204" width="2" height="15" fill="rgb(220,125,21)"/><text x="332.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="329" y="1220" width="2" height="15" fill="rgb(241,90,9)"/><text x="332.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="329" y="1236" width="2" height="15" fill="rgb(230,25,14)"/><text x="332.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:23) (1 samples, 0.13%)</title><rect x="329" y="1252" width="2" height="15" fill="rgb(224,140,53)"/><text x="332.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="329" y="1268" width="2" height="15" fill="rgb(231,77,24)"/><text x="332.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="329" y="1284" width="2" height="15" fill="rgb(226,60,34)"/><text x="332.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="329" y="1300" width="2" height="15" fill="rgb(228,141,3)"/><text x="332.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="329" y="1316" width="2" height="15" fill="rgb(243,219,34)"/><text x="332.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.13%)</title><rect x="329" y="1332" width="2" height="15" fill="rgb(211,170,42)"/><text x="332.00" y="1342.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:953) (1 samples, 0.13%)</title><rect x="329" y="1348" width="2" height="15" fill="rgb(246,60,16)"/><text x="332.00" y="1358.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.13%)</title><rect x="329" y="1364" width="2" height="15" fill="rgb(252,207,53)"/><text x="332.00" y="1374.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.13%)</title><rect x="329" y="1380" width="2" height="15" fill="rgb(232,225,44)"/><text x="332.00" y="1390.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.27%)</title><rect x="329" y="900" width="3" height="15" fill="rgb(241,115,28)"/><text x="332.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.27%)</title><rect x="329" y="916" width="3" height="15" fill="rgb(250,160,23)"/><text x="332.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="329" y="932" width="3" height="15" fill="rgb(226,143,36)"/><text x="332.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="329" y="948" width="3" height="15" fill="rgb(241,88,33)"/><text x="332.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="329" y="964" width="3" height="15" fill="rgb(228,20,44)"/><text x="332.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="329" y="980" width="3" height="15" fill="rgb(235,118,39)"/><text x="332.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="329" y="996" width="3" height="15" fill="rgb(252,114,45)"/><text x="332.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="329" y="1012" width="3" height="15" fill="rgb(207,129,7)"/><text x="332.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3347) (1 samples, 0.13%)</title><rect x="331" y="1028" width="1" height="15" fill="rgb(248,72,31)"/><text x="334.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.13%)</title><rect x="331" y="1044" width="1" height="15" fill="rgb(217,30,31)"/><text x="334.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.13%)</title><rect x="331" y="1060" width="1" height="15" fill="rgb(238,12,44)"/><text x="334.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.67%)</title><rect x="326" y="180" width="8" height="15" fill="rgb(243,191,9)"/><text x="329.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="326" y="196" width="8" height="15" fill="rgb(227,189,31)"/><text x="329.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="326" y="212" width="8" height="15" fill="rgb(236,108,14)"/><text x="329.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="326" y="228" width="8" height="15" fill="rgb(213,182,46)"/><text x="329.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="326" y="244" width="8" height="15" fill="rgb(239,67,41)"/><text x="329.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="326" y="260" width="8" height="15" fill="rgb(242,131,32)"/><text x="329.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="326" y="276" width="8" height="15" fill="rgb(250,8,19)"/><text x="329.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 0.67%)</title><rect x="326" y="292" width="8" height="15" fill="rgb(235,22,50)"/><text x="329.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="326" y="308" width="8" height="15" fill="rgb(210,108,2)"/><text x="329.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="326" y="324" width="8" height="15" fill="rgb(233,179,29)"/><text x="329.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="326" y="340" width="8" height="15" fill="rgb(251,200,30)"/><text x="329.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="326" y="356" width="8" height="15" fill="rgb(222,83,14)"/><text x="329.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="326" y="372" width="8" height="15" fill="rgb(216,145,28)"/><text x="329.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 0.67%)</title><rect x="326" y="388" width="8" height="15" fill="rgb(230,186,4)"/><text x="329.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.67%)</title><rect x="326" y="404" width="8" height="15" fill="rgb(240,207,7)"/><text x="329.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.67%)</title><rect x="326" y="420" width="8" height="15" fill="rgb(217,19,7)"/><text x="329.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.67%)</title><rect x="326" y="436" width="8" height="15" fill="rgb(230,5,44)"/><text x="329.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.67%)</title><rect x="326" y="452" width="8" height="15" fill="rgb(209,2,54)"/><text x="329.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.67%)</title><rect x="326" y="468" width="8" height="15" fill="rgb(218,99,53)"/><text x="329.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (4 samples, 0.53%)</title><rect x="328" y="484" width="6" height="15" fill="rgb(225,132,38)"/><text x="331.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="328" y="500" width="6" height="15" fill="rgb(248,162,35)"/><text x="331.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="328" y="516" width="6" height="15" fill="rgb(212,204,33)"/><text x="331.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="328" y="532" width="6" height="15" fill="rgb(248,127,31)"/><text x="331.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="328" y="548" width="6" height="15" fill="rgb(254,136,48)"/><text x="331.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="328" y="564" width="6" height="15" fill="rgb(221,118,50)"/><text x="331.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (4 samples, 0.53%)</title><rect x="328" y="580" width="6" height="15" fill="rgb(227,141,38)"/><text x="331.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="328" y="596" width="6" height="15" fill="rgb(253,147,3)"/><text x="331.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="328" y="612" width="6" height="15" fill="rgb(237,200,18)"/><text x="331.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="328" y="628" width="6" height="15" fill="rgb(240,211,17)"/><text x="331.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="328" y="644" width="6" height="15" fill="rgb(214,202,26)"/><text x="331.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="328" y="660" width="6" height="15" fill="rgb(222,110,20)"/><text x="331.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (4 samples, 0.53%)</title><rect x="328" y="676" width="6" height="15" fill="rgb(209,197,30)"/><text x="331.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="328" y="692" width="6" height="15" fill="rgb(219,135,7)"/><text x="331.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="328" y="708" width="6" height="15" fill="rgb(253,175,38)"/><text x="331.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="328" y="724" width="6" height="15" fill="rgb(240,129,30)"/><text x="331.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="328" y="740" width="6" height="15" fill="rgb(215,187,27)"/><text x="331.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="328" y="756" width="6" height="15" fill="rgb(250,27,45)"/><text x="331.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (4 samples, 0.53%)</title><rect x="328" y="772" width="6" height="15" fill="rgb(216,167,39)"/><text x="331.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.53%)</title><rect x="328" y="788" width="6" height="15" fill="rgb(210,3,20)"/><text x="331.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="328" y="804" width="6" height="15" fill="rgb(226,136,33)"/><text x="331.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="328" y="820" width="6" height="15" fill="rgb(252,127,13)"/><text x="331.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="328" y="836" width="6" height="15" fill="rgb(254,103,38)"/><text x="331.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="328" y="852" width="6" height="15" fill="rgb(222,223,3)"/><text x="331.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="328" y="868" width="6" height="15" fill="rgb(213,122,0)"/><text x="331.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="328" y="884" width="6" height="15" fill="rgb(219,113,8)"/><text x="331.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.13%)</title><rect x="332" y="900" width="2" height="15" fill="rgb(207,177,10)"/><text x="335.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="332" y="916" width="2" height="15" fill="rgb(205,223,22)"/><text x="335.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="332" y="932" width="2" height="15" fill="rgb(221,228,14)"/><text x="335.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="332" y="948" width="2" height="15" fill="rgb(224,204,6)"/><text x="335.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="332" y="964" width="2" height="15" fill="rgb(233,11,45)"/><text x="335.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="332" y="980" width="2" height="15" fill="rgb(217,104,53)"/><text x="335.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="332" y="996" width="2" height="15" fill="rgb(216,67,24)"/><text x="335.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="332" y="1012" width="2" height="15" fill="rgb(215,91,22)"/><text x="335.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:758) (1 samples, 0.13%)</title><rect x="332" y="1028" width="2" height="15" fill="rgb(244,153,13)"/><text x="335.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2806) (1 samples, 0.13%)</title><rect x="332" y="1044" width="2" height="15" fill="rgb(243,61,48)"/><text x="335.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.13%)</title><rect x="332" y="1060" width="2" height="15" fill="rgb(233,29,33)"/><text x="335.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.13%)</title><rect x="332" y="1076" width="2" height="15" fill="rgb(230,10,27)"/><text x="335.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.13%)</title><rect x="332" y="1092" width="2" height="15" fill="rgb(247,121,48)"/><text x="335.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.13%)</title><rect x="332" y="1108" width="2" height="15" fill="rgb(252,97,22)"/><text x="335.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.13%)</title><rect x="332" y="1124" width="2" height="15" fill="rgb(214,218,46)"/><text x="335.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.13%)</title><rect x="332" y="1140" width="2" height="15" fill="rgb(243,77,5)"/><text x="335.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.13%)</title><rect x="332" y="1156" width="2" height="15" fill="rgb(243,201,16)"/><text x="335.00" y="1166.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:4) (6 samples, 0.80%)</title><rect x="326" y="148" width="10" height="15" fill="rgb(221,139,39)"/><text x="329.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.80%)</title><rect x="326" y="164" width="10" height="15" fill="rgb(239,40,15)"/><text x="329.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="180" width="2" height="15" fill="rgb(239,0,51)"/><text x="337.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="196" width="2" height="15" fill="rgb(222,142,30)"/><text x="337.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="334" y="212" width="2" height="15" fill="rgb(224,201,39)"/><text x="337.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="228" width="2" height="15" fill="rgb(215,151,28)"/><text x="337.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py:13) (1 samples, 0.13%)</title><rect x="334" y="244" width="2" height="15" fill="rgb(253,111,23)"/><text x="337.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="260" width="2" height="15" fill="rgb(246,150,4)"/><text x="337.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="276" width="2" height="15" fill="rgb(227,28,20)"/><text x="337.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(213,212,6)"/><text x="337.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="334" y="308" width="2" height="15" fill="rgb(238,191,3)"/><text x="337.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="324" width="2" height="15" fill="rgb(208,101,15)"/><text x="337.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py:6) (1 samples, 0.13%)</title><rect x="334" y="340" width="2" height="15" fill="rgb(217,126,19)"/><text x="337.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="356" width="2" height="15" fill="rgb(230,78,25)"/><text x="337.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="334" y="372" width="2" height="15" fill="rgb(234,164,39)"/><text x="337.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(223,141,48)"/><text x="337.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="404" width="2" height="15" fill="rgb(236,193,2)"/><text x="337.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="420" width="2" height="15" fill="rgb(250,188,29)"/><text x="337.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="436" width="2" height="15" fill="rgb(210,115,43)"/><text x="337.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="334" y="452" width="2" height="15" fill="rgb(252,177,34)"/><text x="337.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="468" width="2" height="15" fill="rgb(248,95,36)"/><text x="337.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.13%)</title><rect x="334" y="484" width="2" height="15" fill="rgb(229,185,23)"/><text x="337.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="500" width="2" height="15" fill="rgb(207,178,16)"/><text x="337.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="516" width="2" height="15" fill="rgb(242,61,10)"/><text x="337.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="532" width="2" height="15" fill="rgb(210,214,24)"/><text x="337.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="334" y="548" width="2" height="15" fill="rgb(212,104,25)"/><text x="337.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="564" width="2" height="15" fill="rgb(239,154,18)"/><text x="337.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:23) (1 samples, 0.13%)</title><rect x="334" y="580" width="2" height="15" fill="rgb(253,126,8)"/><text x="337.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="596" width="2" height="15" fill="rgb(214,62,0)"/><text x="337.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="612" width="2" height="15" fill="rgb(232,35,36)"/><text x="337.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="628" width="2" height="15" fill="rgb(247,155,34)"/><text x="337.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="334" y="644" width="2" height="15" fill="rgb(239,190,33)"/><text x="337.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="334" y="660" width="2" height="15" fill="rgb(241,15,32)"/><text x="337.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:19) (1 samples, 0.13%)</title><rect x="334" y="676" width="2" height="15" fill="rgb(236,223,28)"/><text x="337.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="334" y="692" width="2" height="15" fill="rgb(210,115,13)"/><text x="337.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="334" y="708" width="2" height="15" fill="rgb(226,114,50)"/><text x="337.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="334" y="724" width="2" height="15" fill="rgb(246,125,49)"/><text x="337.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="334" y="740" width="2" height="15" fill="rgb(236,181,15)"/><text x="337.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.13%)</title><rect x="334" y="756" width="2" height="15" fill="rgb(212,196,20)"/><text x="337.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.13%)</title><rect x="334" y="772" width="2" height="15" fill="rgb(207,43,39)"/><text x="337.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.13%)</title><rect x="336" y="244" width="1" height="15" fill="rgb(221,107,30)"/><text x="339.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="260" width="1" height="15" fill="rgb(252,18,42)"/><text x="339.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="276" width="1" height="15" fill="rgb(230,36,17)"/><text x="339.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="292" width="1" height="15" fill="rgb(248,130,1)"/><text x="339.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="308" width="1" height="15" fill="rgb(219,172,47)"/><text x="339.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="324" width="1" height="15" fill="rgb(210,185,0)"/><text x="339.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.13%)</title><rect x="336" y="340" width="1" height="15" fill="rgb(211,71,40)"/><text x="339.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="356" width="1" height="15" fill="rgb(227,51,49)"/><text x="339.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="336" y="372" width="1" height="15" fill="rgb(244,47,43)"/><text x="339.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="388" width="1" height="15" fill="rgb(234,23,43)"/><text x="339.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="404" width="1" height="15" fill="rgb(224,17,22)"/><text x="339.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="420" width="1" height="15" fill="rgb(222,121,47)"/><text x="339.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="436" width="1" height="15" fill="rgb(213,6,23)"/><text x="339.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="452" width="1" height="15" fill="rgb(210,144,31)"/><text x="339.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="468" width="1" height="15" fill="rgb(229,36,38)"/><text x="339.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.13%)</title><rect x="336" y="484" width="1" height="15" fill="rgb(232,198,52)"/><text x="339.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="500" width="1" height="15" fill="rgb(225,223,3)"/><text x="339.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="516" width="1" height="15" fill="rgb(235,57,50)"/><text x="339.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="532" width="1" height="15" fill="rgb(232,205,14)"/><text x="339.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="548" width="1" height="15" fill="rgb(252,199,41)"/><text x="339.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="564" width="1" height="15" fill="rgb(247,81,38)"/><text x="339.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.13%)</title><rect x="336" y="580" width="1" height="15" fill="rgb(206,224,39)"/><text x="339.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="596" width="1" height="15" fill="rgb(216,113,18)"/><text x="339.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="612" width="1" height="15" fill="rgb(246,67,19)"/><text x="339.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="628" width="1" height="15" fill="rgb(217,226,49)"/><text x="339.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="644" width="1" height="15" fill="rgb(222,10,16)"/><text x="339.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="660" width="1" height="15" fill="rgb(237,78,50)"/><text x="339.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.13%)</title><rect x="336" y="676" width="1" height="15" fill="rgb(236,53,20)"/><text x="339.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="692" width="1" height="15" fill="rgb(227,8,34)"/><text x="339.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="708" width="1" height="15" fill="rgb(216,180,15)"/><text x="339.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="724" width="1" height="15" fill="rgb(232,2,40)"/><text x="339.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="740" width="1" height="15" fill="rgb(206,25,4)"/><text x="339.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="756" width="1" height="15" fill="rgb(211,210,19)"/><text x="339.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.13%)</title><rect x="336" y="772" width="1" height="15" fill="rgb(233,155,36)"/><text x="339.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="788" width="1" height="15" fill="rgb(220,48,49)"/><text x="339.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="804" width="1" height="15" fill="rgb(224,167,48)"/><text x="339.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="820" width="1" height="15" fill="rgb(226,109,39)"/><text x="339.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="836" width="1" height="15" fill="rgb(249,176,13)"/><text x="339.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="852" width="1" height="15" fill="rgb(245,178,27)"/><text x="339.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.13%)</title><rect x="336" y="868" width="1" height="15" fill="rgb(208,162,6)"/><text x="339.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="884" width="1" height="15" fill="rgb(240,53,53)"/><text x="339.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="900" width="1" height="15" fill="rgb(232,218,22)"/><text x="339.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="916" width="1" height="15" fill="rgb(240,103,48)"/><text x="339.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="932" width="1" height="15" fill="rgb(211,133,39)"/><text x="339.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="948" width="1" height="15" fill="rgb(251,99,6)"/><text x="339.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.13%)</title><rect x="336" y="964" width="1" height="15" fill="rgb(210,200,32)"/><text x="339.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="980" width="1" height="15" fill="rgb(246,66,53)"/><text x="339.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="996" width="1" height="15" fill="rgb(231,224,37)"/><text x="339.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="1012" width="1" height="15" fill="rgb(252,229,33)"/><text x="339.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="1028" width="1" height="15" fill="rgb(233,190,1)"/><text x="339.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="1044" width="1" height="15" fill="rgb(233,164,36)"/><text x="339.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py:34) (1 samples, 0.13%)</title><rect x="336" y="1060" width="1" height="15" fill="rgb(224,152,30)"/><text x="339.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="1076" width="1" height="15" fill="rgb(223,174,36)"/><text x="339.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="1092" width="1" height="15" fill="rgb(236,223,9)"/><text x="339.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="1108" width="1" height="15" fill="rgb(234,12,18)"/><text x="339.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="336" y="1124" width="1" height="15" fill="rgb(222,100,21)"/><text x="339.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.13%)</title><rect x="336" y="1140" width="1" height="15" fill="rgb(214,4,38)"/><text x="339.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.13%)</title><rect x="336" y="1156" width="1" height="15" fill="rgb(218,12,32)"/><text x="339.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:72) (1 samples, 0.13%)</title><rect x="337" y="1108" width="2" height="15" fill="rgb(214,177,49)"/><text x="340.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="337" y="1124" width="2" height="15" fill="rgb(208,13,51)"/><text x="340.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="337" y="1140" width="2" height="15" fill="rgb(223,171,14)"/><text x="340.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="337" y="1156" width="2" height="15" fill="rgb(219,175,42)"/><text x="340.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="337" y="1172" width="2" height="15" fill="rgb(225,179,47)"/><text x="340.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="337" y="1188" width="2" height="15" fill="rgb(244,225,40)"/><text x="340.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/accessors.py:132) (1 samples, 0.13%)</title><rect x="337" y="1204" width="2" height="15" fill="rgb(236,68,11)"/><text x="340.00" y="1214.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py:141) (1 samples, 0.13%)</title><rect x="337" y="1220" width="2" height="15" fill="rgb(232,94,41)"/><text x="340.00" y="1230.50"></text></g><g><title>_add_delegate_accessors (pandas/core/accessor.py:105) (1 samples, 0.13%)</title><rect x="337" y="1236" width="2" height="15" fill="rgb(229,196,37)"/><text x="340.00" y="1246.50"></text></g><g><title>_create_delegator_method (pandas/core/accessor.py:96) (1 samples, 0.13%)</title><rect x="337" y="1252" width="2" height="15" fill="rgb(206,18,0)"/><text x="340.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.27%)</title><rect x="337" y="916" width="3" height="15" fill="rgb(212,184,36)"/><text x="340.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="337" y="932" width="3" height="15" fill="rgb(220,220,15)"/><text x="340.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="337" y="948" width="3" height="15" fill="rgb(219,197,28)"/><text x="340.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="337" y="964" width="3" height="15" fill="rgb(210,36,26)"/><text x="340.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="337" y="980" width="3" height="15" fill="rgb(206,147,5)"/><text x="340.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="337" y="996" width="3" height="15" fill="rgb(228,124,8)"/><text x="340.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.27%)</title><rect x="337" y="1012" width="3" height="15" fill="rgb(254,165,30)"/><text x="340.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="337" y="1028" width="3" height="15" fill="rgb(233,13,52)"/><text x="340.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="337" y="1044" width="3" height="15" fill="rgb(254,144,54)"/><text x="340.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="337" y="1060" width="3" height="15" fill="rgb(250,49,4)"/><text x="340.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="337" y="1076" width="3" height="15" fill="rgb(219,34,27)"/><text x="340.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="337" y="1092" width="3" height="15" fill="rgb(234,66,18)"/><text x="340.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.13%)</title><rect x="339" y="1108" width="1" height="15" fill="rgb(234,41,11)"/><text x="342.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1124" width="1" height="15" fill="rgb(206,63,46)"/><text x="342.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1140" width="1" height="15" fill="rgb(249,11,12)"/><text x="342.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1156" width="1" height="15" fill="rgb(222,34,31)"/><text x="342.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1172" width="1" height="15" fill="rgb(247,88,10)"/><text x="342.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1188" width="1" height="15" fill="rgb(237,194,2)"/><text x="342.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.13%)</title><rect x="339" y="1204" width="1" height="15" fill="rgb(221,158,20)"/><text x="342.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1220" width="1" height="15" fill="rgb(228,33,24)"/><text x="342.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1236" width="1" height="15" fill="rgb(214,82,30)"/><text x="342.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1252" width="1" height="15" fill="rgb(205,38,4)"/><text x="342.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1268" width="1" height="15" fill="rgb(251,50,25)"/><text x="342.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1284" width="1" height="15" fill="rgb(212,75,45)"/><text x="342.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.13%)</title><rect x="339" y="1300" width="1" height="15" fill="rgb(229,195,38)"/><text x="342.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1316" width="1" height="15" fill="rgb(217,65,0)"/><text x="342.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1332" width="1" height="15" fill="rgb(224,159,10)"/><text x="342.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1348" width="1" height="15" fill="rgb(228,114,18)"/><text x="342.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1364" width="1" height="15" fill="rgb(249,52,0)"/><text x="342.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1380" width="1" height="15" fill="rgb(240,160,6)"/><text x="342.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.13%)</title><rect x="339" y="1396" width="1" height="15" fill="rgb(224,2,29)"/><text x="342.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1412" width="1" height="15" fill="rgb(245,189,16)"/><text x="342.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1428" width="1" height="15" fill="rgb(216,161,39)"/><text x="342.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1444" width="1" height="15" fill="rgb(233,160,40)"/><text x="342.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1460" width="1" height="15" fill="rgb(248,46,29)"/><text x="342.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1476" width="1" height="15" fill="rgb(252,44,44)"/><text x="342.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.13%)</title><rect x="339" y="1492" width="1" height="15" fill="rgb(231,206,21)"/><text x="342.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="1508" width="1" height="15" fill="rgb(247,95,30)"/><text x="342.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="1524" width="1" height="15" fill="rgb(242,68,4)"/><text x="342.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="1540" width="1" height="15" fill="rgb(223,1,37)"/><text x="342.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="1556" width="1" height="15" fill="rgb(223,3,17)"/><text x="342.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="1572" width="1" height="15" fill="rgb(208,36,24)"/><text x="342.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.13%)</title><rect x="339" y="1588" width="1" height="15" fill="rgb(244,134,41)"/><text x="342.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.13%)</title><rect x="339" y="1604" width="1" height="15" fill="rgb(253,194,13)"/><text x="342.00" y="1614.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:144) (1 samples, 0.13%)</title><rect x="339" y="1620" width="1" height="15" fill="rgb(241,151,8)"/><text x="342.00" y="1630.50"></text></g><g><title>0x7f022b284167 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="339" y="1636" width="1" height="15" fill="rgb(247,135,47)"/><text x="342.00" y="1646.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.40%)</title><rect x="337" y="436" width="5" height="15" fill="rgb(213,44,50)"/><text x="340.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="337" y="452" width="5" height="15" fill="rgb(236,217,52)"/><text x="340.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="337" y="468" width="5" height="15" fill="rgb(217,105,54)"/><text x="340.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="337" y="484" width="5" height="15" fill="rgb(250,102,36)"/><text x="340.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="337" y="500" width="5" height="15" fill="rgb(236,39,9)"/><text x="340.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="337" y="516" width="5" height="15" fill="rgb(251,49,48)"/><text x="340.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.40%)</title><rect x="337" y="532" width="5" height="15" fill="rgb(245,72,50)"/><text x="340.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="337" y="548" width="5" height="15" fill="rgb(254,189,25)"/><text x="340.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="337" y="564" width="5" height="15" fill="rgb(242,153,6)"/><text x="340.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="337" y="580" width="5" height="15" fill="rgb(237,7,14)"/><text x="340.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="337" y="596" width="5" height="15" fill="rgb(225,6,45)"/><text x="340.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="337" y="612" width="5" height="15" fill="rgb(226,167,16)"/><text x="340.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.40%)</title><rect x="337" y="628" width="5" height="15" fill="rgb(226,99,19)"/><text x="340.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="337" y="644" width="5" height="15" fill="rgb(230,132,32)"/><text x="340.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="337" y="660" width="5" height="15" fill="rgb(207,179,10)"/><text x="340.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="337" y="676" width="5" height="15" fill="rgb(213,221,13)"/><text x="340.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="337" y="692" width="5" height="15" fill="rgb(209,208,40)"/><text x="340.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="337" y="708" width="5" height="15" fill="rgb(213,199,50)"/><text x="340.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.40%)</title><rect x="337" y="724" width="5" height="15" fill="rgb(213,8,36)"/><text x="340.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="337" y="740" width="5" height="15" fill="rgb(207,57,20)"/><text x="340.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="337" y="756" width="5" height="15" fill="rgb(208,36,21)"/><text x="340.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="337" y="772" width="5" height="15" fill="rgb(228,2,52)"/><text x="340.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="337" y="788" width="5" height="15" fill="rgb(238,185,14)"/><text x="340.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="337" y="804" width="5" height="15" fill="rgb(238,122,17)"/><text x="340.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.40%)</title><rect x="337" y="820" width="5" height="15" fill="rgb(220,162,16)"/><text x="340.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="337" y="836" width="5" height="15" fill="rgb(251,116,22)"/><text x="340.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="337" y="852" width="5" height="15" fill="rgb(214,20,42)"/><text x="340.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="337" y="868" width="5" height="15" fill="rgb(231,212,36)"/><text x="340.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="337" y="884" width="5" height="15" fill="rgb(206,59,21)"/><text x="340.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="337" y="900" width="5" height="15" fill="rgb(240,19,49)"/><text x="340.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:47) (1 samples, 0.13%)</title><rect x="340" y="916" width="2" height="15" fill="rgb(229,166,36)"/><text x="343.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="340" y="932" width="2" height="15" fill="rgb(217,60,42)"/><text x="343.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="340" y="948" width="2" height="15" fill="rgb(210,199,52)"/><text x="343.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="340" y="964" width="2" height="15" fill="rgb(215,62,23)"/><text x="343.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="340" y="980" width="2" height="15" fill="rgb(214,112,28)"/><text x="343.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="340" y="996" width="2" height="15" fill="rgb(228,10,3)"/><text x="343.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py:1011) (1 samples, 0.13%)</title><rect x="340" y="1012" width="2" height="15" fill="rgb(247,101,20)"/><text x="343.00" y="1022.50"></text></g><g><title>GroupBy (pandas/core/groupby/groupby.py:1144) (1 samples, 0.13%)</title><rect x="340" y="1028" width="2" height="15" fill="rgb(221,213,23)"/><text x="343.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:326) (1 samples, 0.13%)</title><rect x="340" y="1044" width="2" height="15" fill="rgb(209,133,50)"/><text x="343.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.13%)</title><rect x="342" y="1460" width="1" height="15" fill="rgb(240,145,52)"/><text x="345.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.13%)</title><rect x="342" y="1476" width="1" height="15" fill="rgb(209,192,37)"/><text x="345.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.13%)</title><rect x="342" y="1492" width="1" height="15" fill="rgb(254,98,9)"/><text x="345.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.13%)</title><rect x="342" y="1508" width="1" height="15" fill="rgb(236,43,29)"/><text x="345.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.13%)</title><rect x="342" y="1524" width="1" height="15" fill="rgb(206,190,24)"/><text x="345.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.13%)</title><rect x="342" y="1540" width="1" height="15" fill="rgb(241,79,45)"/><text x="345.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="342" y="1556" width="1" height="15" fill="rgb(210,67,25)"/><text x="345.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:133) (1 samples, 0.13%)</title><rect x="342" y="1572" width="1" height="15" fill="rgb(236,45,47)"/><text x="345.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.13%)</title><rect x="342" y="1588" width="1" height="15" fill="rgb(239,180,4)"/><text x="345.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.13%)</title><rect x="343" y="1556" width="2" height="15" fill="rgb(216,53,41)"/><text x="346.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.13%)</title><rect x="343" y="1572" width="2" height="15" fill="rgb(223,62,35)"/><text x="346.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="343" y="1588" width="2" height="15" fill="rgb(229,194,25)"/><text x="346.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="343" y="1604" width="2" height="15" fill="rgb(213,55,54)"/><text x="346.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="343" y="1620" width="2" height="15" fill="rgb(206,177,10)"/><text x="346.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="343" y="1636" width="2" height="15" fill="rgb(221,196,34)"/><text x="346.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="343" y="1652" width="2" height="15" fill="rgb(211,225,37)"/><text x="346.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:41) (1 samples, 0.13%)</title><rect x="343" y="1668" width="2" height="15" fill="rgb(232,181,16)"/><text x="346.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="343" y="1684" width="2" height="15" fill="rgb(229,50,26)"/><text x="346.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="343" y="1700" width="2" height="15" fill="rgb(226,8,40)"/><text x="346.00" y="1710.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="343" y="1716" width="2" height="15" fill="rgb(208,219,34)"/><text x="346.00" y="1726.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.13%)</title><rect x="343" y="1732" width="2" height="15" fill="rgb(249,152,41)"/><text x="346.00" y="1742.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.13%)</title><rect x="343" y="1748" width="2" height="15" fill="rgb(244,146,10)"/><text x="346.00" y="1758.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.13%)</title><rect x="343" y="1764" width="2" height="15" fill="rgb(230,114,3)"/><text x="346.00" y="1774.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1352) (1 samples, 0.13%)</title><rect x="343" y="1780" width="2" height="15" fill="rgb(228,151,31)"/><text x="346.00" y="1790.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:4) (18 samples, 2.40%)</title><rect x="318" y="52" width="29" height="15" fill="rgb(253,73,12)"/><text x="321.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 2.40%)</title><rect x="318" y="68" width="29" height="15" fill="rgb(215,38,18)"/><text x="321.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 2.40%)</title><rect x="318" y="84" width="29" height="15" fill="rgb(246,132,40)"/><text x="321.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 2.40%)</title><rect x="318" y="100" width="29" height="15" fill="rgb(225,118,46)"/><text x="321.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 2.40%)</title><rect x="318" y="116" width="29" height="15" fill="rgb(235,145,23)"/><text x="321.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 2.40%)</title><rect x="318" y="132" width="29" height="15" fill="rgb(213,195,14)"/><text x="321.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py:7) (7 samples, 0.93%)</title><rect x="336" y="148" width="11" height="15" fill="rgb(216,192,41)"/><text x="339.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.93%)</title><rect x="336" y="164" width="11" height="15" fill="rgb(222,16,14)"/><text x="339.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.93%)</title><rect x="336" y="180" width="11" height="15" fill="rgb(239,22,16)"/><text x="339.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.93%)</title><rect x="336" y="196" width="11" height="15" fill="rgb(227,157,26)"/><text x="339.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.93%)</title><rect x="336" y="212" width="11" height="15" fill="rgb(242,225,23)"/><text x="339.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.93%)</title><rect x="336" y="228" width="11" height="15" fill="rgb(240,25,7)"/><text x="339.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 0.80%)</title><rect x="337" y="244" width="10" height="15" fill="rgb(227,159,30)"/><text x="340.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.80%)</title><rect x="337" y="260" width="10" height="15" fill="rgb(235,138,5)"/><text x="340.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.80%)</title><rect x="337" y="276" width="10" height="15" fill="rgb(234,224,33)"/><text x="340.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.80%)</title><rect x="337" y="292" width="10" height="15" fill="rgb(210,175,33)"/><text x="340.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.80%)</title><rect x="337" y="308" width="10" height="15" fill="rgb(237,216,16)"/><text x="340.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.80%)</title><rect x="337" y="324" width="10" height="15" fill="rgb(231,153,0)"/><text x="340.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 0.80%)</title><rect x="337" y="340" width="10" height="15" fill="rgb(210,15,37)"/><text x="340.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.80%)</title><rect x="337" y="356" width="10" height="15" fill="rgb(226,186,28)"/><text x="340.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.80%)</title><rect x="337" y="372" width="10" height="15" fill="rgb(243,172,53)"/><text x="340.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.80%)</title><rect x="337" y="388" width="10" height="15" fill="rgb(227,22,47)"/><text x="340.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.80%)</title><rect x="337" y="404" width="10" height="15" fill="rgb(205,62,53)"/><text x="340.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.80%)</title><rect x="337" y="420" width="10" height="15" fill="rgb(244,118,50)"/><text x="340.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.40%)</title><rect x="342" y="436" width="5" height="15" fill="rgb(249,219,45)"/><text x="345.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="452" width="5" height="15" fill="rgb(222,178,26)"/><text x="345.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.40%)</title><rect x="342" y="468" width="5" height="15" fill="rgb(221,81,21)"/><text x="345.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="484" width="5" height="15" fill="rgb(229,144,34)"/><text x="345.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="500" width="5" height="15" fill="rgb(211,207,17)"/><text x="345.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="516" width="5" height="15" fill="rgb(241,64,0)"/><text x="345.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="532" width="5" height="15" fill="rgb(238,3,31)"/><text x="345.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="548" width="5" height="15" fill="rgb(245,9,32)"/><text x="345.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="564" width="5" height="15" fill="rgb(246,124,18)"/><text x="345.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.40%)</title><rect x="342" y="580" width="5" height="15" fill="rgb(208,150,12)"/><text x="345.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="596" width="5" height="15" fill="rgb(216,195,46)"/><text x="345.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="612" width="5" height="15" fill="rgb(232,52,30)"/><text x="345.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="628" width="5" height="15" fill="rgb(224,182,22)"/><text x="345.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="644" width="5" height="15" fill="rgb(210,221,4)"/><text x="345.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="660" width="5" height="15" fill="rgb(231,221,44)"/><text x="345.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.40%)</title><rect x="342" y="676" width="5" height="15" fill="rgb(253,222,3)"/><text x="345.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="692" width="5" height="15" fill="rgb(220,70,18)"/><text x="345.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="708" width="5" height="15" fill="rgb(229,166,1)"/><text x="345.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="724" width="5" height="15" fill="rgb(207,202,25)"/><text x="345.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="740" width="5" height="15" fill="rgb(243,10,5)"/><text x="345.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="756" width="5" height="15" fill="rgb(228,152,13)"/><text x="345.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.40%)</title><rect x="342" y="772" width="5" height="15" fill="rgb(213,35,52)"/><text x="345.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="788" width="5" height="15" fill="rgb(236,48,3)"/><text x="345.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="804" width="5" height="15" fill="rgb(236,65,45)"/><text x="345.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="820" width="5" height="15" fill="rgb(228,91,48)"/><text x="345.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="836" width="5" height="15" fill="rgb(240,0,17)"/><text x="345.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="852" width="5" height="15" fill="rgb(227,219,41)"/><text x="345.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.40%)</title><rect x="342" y="868" width="5" height="15" fill="rgb(238,197,28)"/><text x="345.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="884" width="5" height="15" fill="rgb(207,196,20)"/><text x="345.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.40%)</title><rect x="342" y="900" width="5" height="15" fill="rgb(212,195,15)"/><text x="345.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="916" width="5" height="15" fill="rgb(246,53,13)"/><text x="345.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="932" width="5" height="15" fill="rgb(233,14,12)"/><text x="345.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="948" width="5" height="15" fill="rgb(253,168,10)"/><text x="345.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="964" width="5" height="15" fill="rgb(207,57,27)"/><text x="345.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="980" width="5" height="15" fill="rgb(211,188,5)"/><text x="345.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="996" width="5" height="15" fill="rgb(253,215,13)"/><text x="345.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.40%)</title><rect x="342" y="1012" width="5" height="15" fill="rgb(222,103,6)"/><text x="345.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="1028" width="5" height="15" fill="rgb(240,148,21)"/><text x="345.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="1044" width="5" height="15" fill="rgb(206,147,38)"/><text x="345.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="1060" width="5" height="15" fill="rgb(220,63,2)"/><text x="345.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="1076" width="5" height="15" fill="rgb(231,40,27)"/><text x="345.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1092" width="5" height="15" fill="rgb(207,92,47)"/><text x="345.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.40%)</title><rect x="342" y="1108" width="5" height="15" fill="rgb(225,145,28)"/><text x="345.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.40%)</title><rect x="342" y="1124" width="5" height="15" fill="rgb(242,194,28)"/><text x="345.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1140" width="5" height="15" fill="rgb(214,9,9)"/><text x="345.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="1156" width="5" height="15" fill="rgb(230,55,52)"/><text x="345.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="1172" width="5" height="15" fill="rgb(249,222,26)"/><text x="345.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="1188" width="5" height="15" fill="rgb(253,196,51)"/><text x="345.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="1204" width="5" height="15" fill="rgb(236,78,6)"/><text x="345.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1220" width="5" height="15" fill="rgb(251,55,27)"/><text x="345.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.40%)</title><rect x="342" y="1236" width="5" height="15" fill="rgb(209,223,54)"/><text x="345.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.40%)</title><rect x="342" y="1252" width="5" height="15" fill="rgb(216,42,29)"/><text x="345.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1268" width="5" height="15" fill="rgb(218,90,43)"/><text x="345.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="1284" width="5" height="15" fill="rgb(216,0,49)"/><text x="345.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="1300" width="5" height="15" fill="rgb(228,100,39)"/><text x="345.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="1316" width="5" height="15" fill="rgb(248,126,53)"/><text x="345.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="1332" width="5" height="15" fill="rgb(217,54,49)"/><text x="345.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1348" width="5" height="15" fill="rgb(230,221,53)"/><text x="345.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.40%)</title><rect x="342" y="1364" width="5" height="15" fill="rgb(230,40,41)"/><text x="345.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="342" y="1380" width="5" height="15" fill="rgb(220,18,45)"/><text x="345.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="342" y="1396" width="5" height="15" fill="rgb(219,113,43)"/><text x="345.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="342" y="1412" width="5" height="15" fill="rgb(225,158,14)"/><text x="345.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="342" y="1428" width="5" height="15" fill="rgb(232,111,42)"/><text x="345.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="342" y="1444" width="5" height="15" fill="rgb(230,42,22)"/><text x="345.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.27%)</title><rect x="343" y="1460" width="4" height="15" fill="rgb(250,35,9)"/><text x="346.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.27%)</title><rect x="343" y="1476" width="4" height="15" fill="rgb(241,6,1)"/><text x="346.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.27%)</title><rect x="343" y="1492" width="4" height="15" fill="rgb(232,135,45)"/><text x="346.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.27%)</title><rect x="343" y="1508" width="4" height="15" fill="rgb(213,226,6)"/><text x="346.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.27%)</title><rect x="343" y="1524" width="4" height="15" fill="rgb(225,155,1)"/><text x="346.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.27%)</title><rect x="343" y="1540" width="4" height="15" fill="rgb(212,56,8)"/><text x="346.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:281) (1 samples, 0.13%)</title><rect x="345" y="1556" width="2" height="15" fill="rgb(205,201,10)"/><text x="348.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py:278) (1 samples, 0.13%)</title><rect x="345" y="1572" width="2" height="15" fill="rgb(224,197,41)"/><text x="348.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.13%)</title><rect x="345" y="1588" width="2" height="15" fill="rgb(226,79,43)"/><text x="348.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.13%)</title><rect x="345" y="1604" width="2" height="15" fill="rgb(236,13,41)"/><text x="348.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.13%)</title><rect x="345" y="1620" width="2" height="15" fill="rgb(226,14,18)"/><text x="348.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.13%)</title><rect x="345" y="1636" width="2" height="15" fill="rgb(246,60,26)"/><text x="348.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.13%)</title><rect x="345" y="1652" width="2" height="15" fill="rgb(254,66,1)"/><text x="348.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="345" y="1668" width="2" height="15" fill="rgb(229,97,11)"/><text x="348.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.13%)</title><rect x="345" y="1684" width="2" height="15" fill="rgb(224,93,5)"/><text x="348.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="345" y="1700" width="2" height="15" fill="rgb(230,112,39)"/><text x="348.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="345" y="1716" width="2" height="15" fill="rgb(244,124,20)"/><text x="348.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.13%)</title><rect x="345" y="1732" width="2" height="15" fill="rgb(210,141,8)"/><text x="348.00" y="1742.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.13%)</title><rect x="345" y="1748" width="2" height="15" fill="rgb(214,222,5)"/><text x="348.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.13%)</title><rect x="345" y="1764" width="2" height="15" fill="rgb(214,113,32)"/><text x="348.00" y="1774.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.13%)</title><rect x="345" y="1780" width="2" height="15" fill="rgb(253,29,17)"/><text x="348.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.13%)</title><rect x="345" y="1796" width="2" height="15" fill="rgb(210,17,15)"/><text x="348.00" y="1806.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.13%)</title><rect x="345" y="1812" width="2" height="15" fill="rgb(213,148,47)"/><text x="348.00" y="1822.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.13%)</title><rect x="345" y="1828" width="2" height="15" fill="rgb(222,161,39)"/><text x="348.00" y="1838.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.13%)</title><rect x="345" y="1844" width="2" height="15" fill="rgb(228,65,54)"/><text x="348.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.13%)</title><rect x="345" y="1860" width="2" height="15" fill="rgb(231,71,34)"/><text x="348.00" y="1870.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.13%)</title><rect x="345" y="1876" width="2" height="15" fill="rgb(214,158,39)"/><text x="348.00" y="1886.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:170) (1 samples, 0.13%)</title><rect x="345" y="1892" width="2" height="15" fill="rgb(219,131,53)"/><text x="348.00" y="1902.50"></text></g><g><title>0x7f01ec3d2c29 (?) (1 samples, 0.13%)</title><rect x="347" y="244" width="1" height="15" fill="rgb(208,84,26)"/><text x="350.00" y="254.50"></text></g><g><title>0x7f01ec3d9d9e (?) (1 samples, 0.13%)</title><rect x="347" y="260" width="1" height="15" fill="rgb(243,8,20)"/><text x="350.00" y="270.50"></text></g><g><title>0x7f01ec3d9c56 (?) (1 samples, 0.13%)</title><rect x="347" y="276" width="1" height="15" fill="rgb(241,158,23)"/><text x="350.00" y="286.50"></text></g><g><title>0x7f01ec3dfac7 (?) (1 samples, 0.13%)</title><rect x="347" y="292" width="1" height="15" fill="rgb(226,68,14)"/><text x="350.00" y="302.50"></text></g><g><title>0x7f01ec3dec81 (?) (1 samples, 0.13%)</title><rect x="347" y="308" width="1" height="15" fill="rgb(217,77,51)"/><text x="350.00" y="318.50"></text></g><g><title>0x7f01ec3d7036 (?) (1 samples, 0.13%)</title><rect x="347" y="324" width="1" height="15" fill="rgb(239,7,14)"/><text x="350.00" y="334.50"></text></g><g><title>0x7f022b283e2c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="347" y="340" width="1" height="15" fill="rgb(218,124,23)"/><text x="350.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.13%)</title><rect x="348" y="468" width="2" height="15" fill="rgb(213,199,23)"/><text x="351.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="348" y="484" width="2" height="15" fill="rgb(236,70,40)"/><text x="351.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="348" y="500" width="2" height="15" fill="rgb(241,180,27)"/><text x="351.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.13%)</title><rect x="348" y="516" width="2" height="15" fill="rgb(215,7,44)"/><text x="351.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="348" y="532" width="2" height="15" fill="rgb(207,116,31)"/><text x="351.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="348" y="548" width="2" height="15" fill="rgb(226,136,22)"/><text x="351.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.13%)</title><rect x="350" y="468" width="1" height="15" fill="rgb(217,156,34)"/><text x="353.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.13%)</title><rect x="350" y="484" width="1" height="15" fill="rgb(226,156,36)"/><text x="353.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.13%)</title><rect x="350" y="500" width="1" height="15" fill="rgb(249,193,5)"/><text x="353.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.13%)</title><rect x="350" y="516" width="1" height="15" fill="rgb(251,135,40)"/><text x="353.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.13%)</title><rect x="350" y="532" width="1" height="15" fill="rgb(207,50,13)"/><text x="353.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.13%)</title><rect x="350" y="548" width="1" height="15" fill="rgb(209,46,10)"/><text x="353.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.13%)</title><rect x="350" y="564" width="1" height="15" fill="rgb(232,11,33)"/><text x="353.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.13%)</title><rect x="350" y="580" width="1" height="15" fill="rgb(217,80,39)"/><text x="353.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.13%)</title><rect x="350" y="596" width="1" height="15" fill="rgb(218,138,21)"/><text x="353.00" y="606.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (3 samples, 0.40%)</title><rect x="348" y="452" width="5" height="15" fill="rgb(245,75,8)"/><text x="351.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="351" y="468" width="2" height="15" fill="rgb(211,201,12)"/><text x="354.00" y="478.50"></text></g><g><title>0x7f022b283d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="351" y="484" width="2" height="15" fill="rgb(212,95,6)"/><text x="354.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (2 samples, 0.27%)</title><rect x="353" y="452" width="3" height="15" fill="rgb(233,120,39)"/><text x="356.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (1 samples, 0.13%)</title><rect x="355" y="468" width="1" height="15" fill="rgb(217,93,32)"/><text x="358.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (1 samples, 0.13%)</title><rect x="355" y="484" width="1" height="15" fill="rgb(243,124,52)"/><text x="358.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.13%)</title><rect x="356" y="452" width="2" height="15" fill="rgb(226,156,13)"/><text x="359.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.13%)</title><rect x="356" y="468" width="2" height="15" fill="rgb(231,33,24)"/><text x="359.00" y="478.50"></text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (8 samples, 1.07%)</title><rect x="347" y="100" width="12" height="15" fill="rgb(216,52,9)"/><text x="350.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.07%)</title><rect x="347" y="116" width="12" height="15" fill="rgb(248,176,22)"/><text x="350.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (8 samples, 1.07%)</title><rect x="347" y="132" width="12" height="15" fill="rgb(246,14,42)"/><text x="350.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (8 samples, 1.07%)</title><rect x="347" y="148" width="12" height="15" fill="rgb(217,86,18)"/><text x="350.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (8 samples, 1.07%)</title><rect x="347" y="164" width="12" height="15" fill="rgb(249,221,16)"/><text x="350.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (8 samples, 1.07%)</title><rect x="347" y="180" width="12" height="15" fill="rgb(233,41,26)"/><text x="350.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (8 samples, 1.07%)</title><rect x="347" y="196" width="12" height="15" fill="rgb(248,191,25)"/><text x="350.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 1.07%)</title><rect x="347" y="212" width="12" height="15" fill="rgb(242,34,10)"/><text x="350.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (8 samples, 1.07%)</title><rect x="347" y="228" width="12" height="15" fill="rgb(226,156,53)"/><text x="350.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (7 samples, 0.93%)</title><rect x="348" y="244" width="11" height="15" fill="rgb(233,81,19)"/><text x="351.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (7 samples, 0.93%)</title><rect x="348" y="260" width="11" height="15" fill="rgb(223,173,25)"/><text x="351.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (7 samples, 0.93%)</title><rect x="348" y="276" width="11" height="15" fill="rgb(233,152,3)"/><text x="351.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (7 samples, 0.93%)</title><rect x="348" y="292" width="11" height="15" fill="rgb(231,114,15)"/><text x="351.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (7 samples, 0.93%)</title><rect x="348" y="308" width="11" height="15" fill="rgb(247,0,46)"/><text x="351.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (7 samples, 0.93%)</title><rect x="348" y="324" width="11" height="15" fill="rgb(226,161,30)"/><text x="351.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (7 samples, 0.93%)</title><rect x="348" y="340" width="11" height="15" fill="rgb(213,149,41)"/><text x="351.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (7 samples, 0.93%)</title><rect x="348" y="356" width="11" height="15" fill="rgb(249,111,13)"/><text x="351.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (7 samples, 0.93%)</title><rect x="348" y="372" width="11" height="15" fill="rgb(209,48,31)"/><text x="351.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (7 samples, 0.93%)</title><rect x="348" y="388" width="11" height="15" fill="rgb(220,80,21)"/><text x="351.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (7 samples, 0.93%)</title><rect x="348" y="404" width="11" height="15" fill="rgb(218,203,20)"/><text x="351.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (7 samples, 0.93%)</title><rect x="348" y="420" width="11" height="15" fill="rgb(223,213,12)"/><text x="351.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (7 samples, 0.93%)</title><rect x="348" y="436" width="11" height="15" fill="rgb(229,186,27)"/><text x="351.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.13%)</title><rect x="358" y="452" width="1" height="15" fill="rgb(213,18,22)"/><text x="361.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.13%)</title><rect x="358" y="468" width="1" height="15" fill="rgb(226,95,7)"/><text x="361.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.13%)</title><rect x="358" y="484" width="1" height="15" fill="rgb(231,110,8)"/><text x="361.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.27%)</title><rect x="359" y="180" width="3" height="15" fill="rgb(205,194,8)"/><text x="362.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.13%)</title><rect x="361" y="196" width="1" height="15" fill="rgb(215,100,28)"/><text x="364.00" y="206.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.13%)</title><rect x="364" y="276" width="2" height="15" fill="rgb(222,139,28)"/><text x="367.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.13%)</title><rect x="364" y="292" width="2" height="15" fill="rgb(211,161,54)"/><text x="367.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.13%)</title><rect x="364" y="308" width="2" height="15" fill="rgb(236,75,45)"/><text x="367.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.13%)</title><rect x="364" y="324" width="2" height="15" fill="rgb(242,214,21)"/><text x="367.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.13%)</title><rect x="364" y="340" width="2" height="15" fill="rgb(236,32,43)"/><text x="367.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.13%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(231,223,21)"/><text x="367.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.13%)</title><rect x="364" y="372" width="2" height="15" fill="rgb(206,128,13)"/><text x="367.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.13%)</title><rect x="364" y="388" width="2" height="15" fill="rgb(210,25,2)"/><text x="367.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.13%)</title><rect x="364" y="404" width="2" height="15" fill="rgb(253,94,29)"/><text x="367.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.13%)</title><rect x="364" y="420" width="2" height="15" fill="rgb(254,25,47)"/><text x="367.00" y="430.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.13%)</title><rect x="364" y="436" width="2" height="15" fill="rgb(228,124,49)"/><text x="367.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="364" y="452" width="2" height="15" fill="rgb(254,58,19)"/><text x="367.00" y="462.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.13%)</title><rect x="366" y="276" width="1" height="15" fill="rgb(249,27,32)"/><text x="369.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.13%)</title><rect x="366" y="292" width="1" height="15" fill="rgb(231,60,11)"/><text x="369.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.13%)</title><rect x="366" y="308" width="1" height="15" fill="rgb(231,200,49)"/><text x="369.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.13%)</title><rect x="366" y="324" width="1" height="15" fill="rgb(242,193,2)"/><text x="369.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.13%)</title><rect x="366" y="340" width="1" height="15" fill="rgb(236,133,6)"/><text x="369.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.13%)</title><rect x="366" y="356" width="1" height="15" fill="rgb(251,227,51)"/><text x="369.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.13%)</title><rect x="366" y="372" width="1" height="15" fill="rgb(208,227,26)"/><text x="369.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.13%)</title><rect x="366" y="388" width="1" height="15" fill="rgb(253,225,3)"/><text x="369.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.13%)</title><rect x="366" y="404" width="1" height="15" fill="rgb(250,78,44)"/><text x="369.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="366" y="420" width="1" height="15" fill="rgb(237,214,42)"/><text x="369.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.13%)</title><rect x="366" y="436" width="1" height="15" fill="rgb(249,125,31)"/><text x="369.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:257) (1 samples, 0.13%)</title><rect x="367" y="420" width="2" height="15" fill="rgb(231,206,44)"/><text x="370.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h:867) (1 samples, 0.13%)</title><rect x="367" y="436" width="2" height="15" fill="rgb(208,114,17)"/><text x="370.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.13%)</title><rect x="367" y="452" width="2" height="15" fill="rgb(251,24,31)"/><text x="370.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="367" y="468" width="2" height="15" fill="rgb(208,196,4)"/><text x="370.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h:600) (1 samples, 0.13%)</title><rect x="367" y="484" width="2" height="15" fill="rgb(230,54,24)"/><text x="370.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.13%)</title><rect x="367" y="500" width="2" height="15" fill="rgb(242,184,4)"/><text x="370.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.13%)</title><rect x="367" y="516" width="2" height="15" fill="rgb(243,82,53)"/><text x="370.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.13%)</title><rect x="367" y="532" width="2" height="15" fill="rgb(216,187,8)"/><text x="370.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.13%)</title><rect x="367" y="548" width="2" height="15" fill="rgb(236,175,5)"/><text x="370.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.13%)</title><rect x="367" y="564" width="2" height="15" fill="rgb(205,51,21)"/><text x="370.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.13%)</title><rect x="367" y="580" width="2" height="15" fill="rgb(225,99,41)"/><text x="370.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.13%)</title><rect x="367" y="596" width="2" height="15" fill="rgb(232,125,20)"/><text x="370.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.13%)</title><rect x="367" y="612" width="2" height="15" fill="rgb(206,101,54)"/><text x="370.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.13%)</title><rect x="367" y="628" width="2" height="15" fill="rgb(223,47,52)"/><text x="370.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="367" y="644" width="2" height="15" fill="rgb(248,75,18)"/><text x="370.00" y="654.50"></text></g><g><title>0x7f022b265703 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="367" y="660" width="2" height="15" fill="rgb(227,15,53)"/><text x="370.00" y="670.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="370" y="468" width="2" height="15" fill="rgb(239,77,11)"/><text x="373.00" y="478.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="372" y="468" width="1" height="15" fill="rgb(223,30,20)"/><text x="375.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (4 samples, 0.53%)</title><rect x="369" y="452" width="6" height="15" fill="rgb(247,51,43)"/><text x="372.00" y="462.50"></text></g><g><title>0x7f022b263bc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="373" y="468" width="2" height="15" fill="rgb(225,199,1)"/><text x="376.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:389) (1 samples, 0.13%)</title><rect x="375" y="452" width="2" height="15" fill="rgb(230,137,14)"/><text x="378.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="375" y="468" width="2" height="15" fill="rgb(214,34,40)"/><text x="378.00" y="478.50"></text></g><g><title>0x7f022b26394f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="375" y="484" width="2" height="15" fill="rgb(246,58,16)"/><text x="378.00" y="494.50"></text></g><g><title>0x7f022b263a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="377" y="484" width="1" height="15" fill="rgb(215,9,41)"/><text x="380.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (2 samples, 0.27%)</title><rect x="377" y="452" width="3" height="15" fill="rgb(247,173,33)"/><text x="380.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.27%)</title><rect x="377" y="468" width="3" height="15" fill="rgb(208,195,14)"/><text x="380.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="378" y="484" width="2" height="15" fill="rgb(212,109,43)"/><text x="381.00" y="494.50"></text></g><g><title>0x7f01ec3c2810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="384" y="468" width="2" height="15" fill="rgb(220,61,42)"/><text x="387.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (5 samples, 0.67%)</title><rect x="386" y="468" width="8" height="15" fill="rgb(250,120,0)"/><text x="389.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (17 samples, 2.27%)</title><rect x="394" y="468" width="27" height="15" fill="rgb(208,125,16)"/><text x="397.00" y="478.50">s..</text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (17 samples, 2.27%)</title><rect x="394" y="484" width="27" height="15" fill="rgb(233,33,3)"/><text x="397.00" y="494.50">s..</text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (17 samples, 2.27%)</title><rect x="394" y="500" width="27" height="15" fill="rgb(226,119,22)"/><text x="397.00" y="510.50">s..</text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (17 samples, 2.27%)</title><rect x="394" y="516" width="27" height="15" fill="rgb(228,90,31)"/><text x="397.00" y="526.50">_..</text></g><g><title>operator new (libstdc++.so.6.0.28) (17 samples, 2.27%)</title><rect x="394" y="532" width="27" height="15" fill="rgb(236,172,52)"/><text x="397.00" y="542.50">o..</text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.87%)</title><rect x="399" y="548" width="22" height="15" fill="rgb(248,141,34)"/><text x="402.00" y="558.50">m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.13%)</title><rect x="421" y="468" width="1" height="15" fill="rgb(214,85,21)"/><text x="424.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.13%)</title><rect x="421" y="484" width="1" height="15" fill="rgb(218,177,7)"/><text x="424.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.13%)</title><rect x="422" y="468" width="2" height="15" fill="rgb(210,86,21)"/><text x="425.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.13%)</title><rect x="422" y="484" width="2" height="15" fill="rgb(224,19,47)"/><text x="425.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.13%)</title><rect x="422" y="500" width="2" height="15" fill="rgb(253,78,15)"/><text x="425.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.13%)</title><rect x="422" y="516" width="2" height="15" fill="rgb(254,207,30)"/><text x="425.00" y="526.50"></text></g><g><title>0x7f021ad307a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="424" y="484" width="1" height="15" fill="rgb(217,1,50)"/><text x="427.00" y="494.50"></text></g><g><title>0x7f022b263908 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="425" y="484" width="2" height="15" fill="rgb(218,157,1)"/><text x="428.00" y="494.50"></text></g><g><title>0x7f022b263922 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="427" y="484" width="2" height="15" fill="rgb(249,18,9)"/><text x="430.00" y="494.50"></text></g><g><title>0x7f022b26395e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="429" y="484" width="1" height="15" fill="rgb(222,79,6)"/><text x="432.00" y="494.50"></text></g><g><title>0x7f022b263a41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="430" y="484" width="2" height="15" fill="rgb(247,114,34)"/><text x="433.00" y="494.50"></text></g><g><title>0x7f022b263a53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="432" y="484" width="1" height="15" fill="rgb(215,189,7)"/><text x="435.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (36 samples, 4.81%)</title><rect x="380" y="452" width="56" height="15" fill="rgb(248,58,29)"/><text x="383.00" y="462.50">Runti..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 1.07%)</title><rect x="424" y="468" width="12" height="15" fill="rgb(248,100,29)"/><text x="427.00" y="478.50"></text></g><g><title>0x7f022b263bd8 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="433" y="484" width="3" height="15" fill="rgb(212,94,31)"/><text x="436.00" y="494.50"></text></g><g><title>0x7f01ec3c2440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="444" y="468" width="3" height="15" fill="rgb(222,205,54)"/><text x="447.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.13%)</title><rect x="447" y="468" width="2" height="15" fill="rgb(224,185,17)"/><text x="450.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:273) (1 samples, 0.13%)</title><rect x="449" y="468" width="2" height="15" fill="rgb(250,205,9)"/><text x="452.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.13%)</title><rect x="451" y="468" width="1" height="15" fill="rgb(230,87,2)"/><text x="454.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:297) (4 samples, 0.53%)</title><rect x="452" y="468" width="6" height="15" fill="rgb(218,124,42)"/><text x="455.00" y="478.50"></text></g><g><title>0x7f01ec3c1e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="458" y="484" width="4" height="15" fill="rgb(237,184,27)"/><text x="461.00" y="494.50"></text></g><g><title>0x7f01ec3c22b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="462" y="484" width="1" height="15" fill="rgb(247,150,20)"/><text x="465.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (7 samples, 0.93%)</title><rect x="463" y="484" width="11" height="15" fill="rgb(227,109,46)"/><text x="466.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:49) (1 samples, 0.13%)</title><rect x="474" y="484" width="2" height="15" fill="rgb(206,129,33)"/><text x="477.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:50) (2 samples, 0.27%)</title><rect x="476" y="484" width="3" height="15" fill="rgb(247,140,13)"/><text x="479.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (17 samples, 2.27%)</title><rect x="479" y="484" width="27" height="15" fill="rgb(213,172,30)"/><text x="482.00" y="494.50">v..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (12 samples, 1.60%)</title><rect x="506" y="484" width="19" height="15" fill="rgb(219,224,47)"/><text x="509.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (2 samples, 0.27%)</title><rect x="525" y="484" width="3" height="15" fill="rgb(221,92,48)"/><text x="528.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (61 samples, 8.14%)</title><rect x="436" y="452" width="97" height="15" fill="rgb(239,58,40)"/><text x="439.00" y="462.50">RuntimeSVMC..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (47 samples, 6.28%)</title><rect x="458" y="468" width="75" height="15" fill="rgb(240,170,28)"/><text x="461.00" y="478.50">RuntimeS..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:116) (3 samples, 0.40%)</title><rect x="528" y="484" width="5" height="15" fill="rgb(205,4,19)"/><text x="531.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:455) (1 samples, 0.13%)</title><rect x="533" y="500" width="1" height="15" fill="rgb(238,92,10)"/><text x="536.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (4 samples, 0.53%)</title><rect x="533" y="452" width="6" height="15" fill="rgb(220,0,42)"/><text x="536.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (4 samples, 0.53%)</title><rect x="533" y="468" width="6" height="15" fill="rgb(248,115,14)"/><text x="536.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (4 samples, 0.53%)</title><rect x="533" y="484" width="6" height="15" fill="rgb(230,25,34)"/><text x="536.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (3 samples, 0.40%)</title><rect x="534" y="500" width="5" height="15" fill="rgb(238,4,34)"/><text x="537.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.40%)</title><rect x="534" y="516" width="5" height="15" fill="rgb(238,25,50)"/><text x="537.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.40%)</title><rect x="534" y="532" width="5" height="15" fill="rgb(232,94,31)"/><text x="537.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (3 samples, 0.40%)</title><rect x="534" y="548" width="5" height="15" fill="rgb(246,107,24)"/><text x="537.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="534" y="564" width="5" height="15" fill="rgb(225,133,14)"/><text x="537.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.40%)</title><rect x="534" y="580" width="5" height="15" fill="rgb(218,112,4)"/><text x="537.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:420) (1 samples, 0.13%)</title><rect x="539" y="452" width="1" height="15" fill="rgb(254,131,42)"/><text x="542.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (6 samples, 0.80%)</title><rect x="540" y="452" width="10" height="15" fill="rgb(254,224,4)"/><text x="543.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (5 samples, 0.67%)</title><rect x="550" y="452" width="8" height="15" fill="rgb(235,211,27)"/><text x="553.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.13%)</title><rect x="558" y="500" width="1" height="15" fill="rgb(241,189,14)"/><text x="561.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.13%)</title><rect x="558" y="516" width="1" height="15" fill="rgb(234,208,15)"/><text x="561.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.13%)</title><rect x="558" y="532" width="1" height="15" fill="rgb(237,226,29)"/><text x="561.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (3 samples, 0.40%)</title><rect x="559" y="500" width="5" height="15" fill="rgb(239,5,30)"/><text x="562.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.40%)</title><rect x="559" y="516" width="5" height="15" fill="rgb(239,129,9)"/><text x="562.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.40%)</title><rect x="559" y="532" width="5" height="15" fill="rgb(254,186,23)"/><text x="562.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.40%)</title><rect x="559" y="548" width="5" height="15" fill="rgb(211,187,14)"/><text x="562.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="559" y="564" width="5" height="15" fill="rgb(240,40,5)"/><text x="562.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="561" y="580" width="3" height="15" fill="rgb(220,119,34)"/><text x="564.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="564" y="500" width="2" height="15" fill="rgb(236,93,36)"/><text x="567.00" y="510.50"></text></g><g><title>0x7f022b283d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="564" y="516" width="2" height="15" fill="rgb(212,8,29)"/><text x="567.00" y="526.50"></text></g><g><title>0x7f022b26396a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="566" y="516" width="1" height="15" fill="rgb(241,30,1)"/><text x="569.00" y="526.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="567" y="516" width="2" height="15" fill="rgb(250,40,2)"/><text x="570.00" y="526.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="569" y="516" width="1" height="15" fill="rgb(235,25,23)"/><text x="572.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (9 samples, 1.20%)</title><rect x="558" y="452" width="14" height="15" fill="rgb(222,212,54)"/><text x="561.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (9 samples, 1.20%)</title><rect x="558" y="468" width="14" height="15" fill="rgb(237,122,5)"/><text x="561.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (9 samples, 1.20%)</title><rect x="558" y="484" width="14" height="15" fill="rgb(211,130,16)"/><text x="561.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (4 samples, 0.53%)</title><rect x="566" y="500" width="6" height="15" fill="rgb(237,9,26)"/><text x="569.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="570" y="516" width="2" height="15" fill="rgb(254,146,31)"/><text x="573.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.13%)</title><rect x="572" y="452" width="2" height="15" fill="rgb(211,92,50)"/><text x="575.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:781) (1 samples, 0.13%)</title><rect x="572" y="468" width="2" height="15" fill="rgb(211,85,46)"/><text x="575.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (2 samples, 0.27%)</title><rect x="574" y="468" width="3" height="15" fill="rgb(217,127,11)"/><text x="577.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (2 samples, 0.27%)</title><rect x="574" y="484" width="3" height="15" fill="rgb(247,57,6)"/><text x="577.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (2 samples, 0.27%)</title><rect x="574" y="500" width="3" height="15" fill="rgb(253,72,24)"/><text x="577.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="574" y="516" width="3" height="15" fill="rgb(222,147,25)"/><text x="577.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="574" y="532" width="3" height="15" fill="rgb(216,155,53)"/><text x="577.00" y="542.50"></text></g><g><title>0x7f021ad307a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="577" y="548" width="1" height="15" fill="rgb(230,118,47)"/><text x="580.00" y="558.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="578" y="548" width="2" height="15" fill="rgb(233,88,32)"/><text x="581.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (5 samples, 0.67%)</title><rect x="574" y="452" width="7" height="15" fill="rgb(220,81,34)"/><text x="577.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (3 samples, 0.40%)</title><rect x="577" y="468" width="4" height="15" fill="rgb(211,142,33)"/><text x="580.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (3 samples, 0.40%)</title><rect x="577" y="484" width="4" height="15" fill="rgb(237,204,24)"/><text x="580.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (3 samples, 0.40%)</title><rect x="577" y="500" width="4" height="15" fill="rgb(237,222,41)"/><text x="580.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (3 samples, 0.40%)</title><rect x="577" y="516" width="4" height="15" fill="rgb(219,106,16)"/><text x="580.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (3 samples, 0.40%)</title><rect x="577" y="532" width="4" height="15" fill="rgb(245,2,46)"/><text x="580.00" y="542.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="580" y="548" width="1" height="15" fill="rgb(217,140,46)"/><text x="583.00" y="558.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:185) (1 samples, 0.13%)</title><rect x="581" y="500" width="2" height="15" fill="rgb(219,201,20)"/><text x="584.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="581" y="516" width="2" height="15" fill="rgb(234,90,32)"/><text x="584.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="581" y="532" width="2" height="15" fill="rgb(205,1,44)"/><text x="584.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:101) (1 samples, 0.13%)</title><rect x="581" y="548" width="2" height="15" fill="rgb(228,79,14)"/><text x="584.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (2 samples, 0.27%)</title><rect x="581" y="452" width="4" height="15" fill="rgb(228,105,4)"/><text x="584.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (2 samples, 0.27%)</title><rect x="581" y="468" width="4" height="15" fill="rgb(252,44,17)"/><text x="584.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (2 samples, 0.27%)</title><rect x="581" y="484" width="4" height="15" fill="rgb(226,21,54)"/><text x="584.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.13%)</title><rect x="583" y="500" width="2" height="15" fill="rgb(236,140,10)"/><text x="586.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="583" y="516" width="2" height="15" fill="rgb(215,36,33)"/><text x="586.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="583" y="532" width="2" height="15" fill="rgb(229,51,34)"/><text x="586.00" y="542.50"></text></g><g><title>0x7f022b3e2e96 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="592" y="500" width="2" height="15" fill="rgb(240,181,39)"/><text x="595.00" y="510.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (8 samples, 1.07%)</title><rect x="586" y="484" width="13" height="15" fill="rgb(212,97,3)"/><text x="589.00" y="494.50"></text></g><g><title>0x7f022b3e2ea6 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="594" y="500" width="5" height="15" fill="rgb(233,161,46)"/><text x="597.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (11 samples, 1.47%)</title><rect x="585" y="452" width="17" height="15" fill="rgb(252,70,31)"/><text x="588.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (11 samples, 1.47%)</title><rect x="585" y="468" width="17" height="15" fill="rgb(247,136,50)"/><text x="588.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:81) (2 samples, 0.27%)</title><rect x="599" y="484" width="3" height="15" fill="rgb(226,37,35)"/><text x="602.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.13%)</title><rect x="602" y="452" width="1" height="15" fill="rgb(208,150,42)"/><text x="605.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.13%)</title><rect x="602" y="468" width="1" height="15" fill="rgb(213,160,21)"/><text x="605.00" y="478.50"></text></g><g><title>0x7f022b26392c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="605" y="516" width="2" height="15" fill="rgb(251,140,28)"/><text x="608.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:308) (2 samples, 0.27%)</title><rect x="605" y="484" width="3" height="15" fill="rgb(254,4,13)"/><text x="608.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.27%)</title><rect x="605" y="500" width="3" height="15" fill="rgb(245,35,47)"/><text x="608.00" y="510.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="607" y="516" width="1" height="15" fill="rgb(236,160,13)"/><text x="610.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.13%)</title><rect x="610" y="500" width="1" height="15" fill="rgb(232,108,25)"/><text x="613.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.13%)</title><rect x="611" y="500" width="2" height="15" fill="rgb(245,164,0)"/><text x="614.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.13%)</title><rect x="611" y="516" width="2" height="15" fill="rgb(220,199,24)"/><text x="614.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (10 samples, 1.34%)</title><rect x="613" y="500" width="16" height="15" fill="rgb(233,217,23)"/><text x="616.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (10 samples, 1.34%)</title><rect x="613" y="516" width="16" height="15" fill="rgb(248,48,37)"/><text x="616.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (9 samples, 1.20%)</title><rect x="614" y="532" width="15" height="15" fill="rgb(214,169,54)"/><text x="617.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (9 samples, 1.20%)</title><rect x="614" y="548" width="15" height="15" fill="rgb(226,225,26)"/><text x="617.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.20%)</title><rect x="614" y="564" width="15" height="15" fill="rgb(225,161,12)"/><text x="617.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.07%)</title><rect x="616" y="580" width="13" height="15" fill="rgb(244,199,2)"/><text x="619.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.13%)</title><rect x="629" y="500" width="1" height="15" fill="rgb(246,116,25)"/><text x="632.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.13%)</title><rect x="629" y="516" width="1" height="15" fill="rgb(252,186,12)"/><text x="632.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.13%)</title><rect x="629" y="532" width="1" height="15" fill="rgb(237,193,14)"/><text x="632.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (2 samples, 0.27%)</title><rect x="630" y="500" width="3" height="15" fill="rgb(206,112,26)"/><text x="633.00" y="510.50"></text></g><g><title>0x7f01ec3c26c0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="632" y="516" width="1" height="15" fill="rgb(230,158,5)"/><text x="635.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.13%)</title><rect x="633" y="500" width="2" height="15" fill="rgb(243,173,25)"/><text x="636.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:177) (1 samples, 0.13%)</title><rect x="633" y="516" width="2" height="15" fill="rgb(220,124,37)"/><text x="636.00" y="526.50"></text></g><g><title>0x7f022b263929 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="635" y="516" width="2" height="15" fill="rgb(254,159,43)"/><text x="638.00" y="526.50"></text></g><g><title>0x7f022b263965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="637" y="516" width="1" height="15" fill="rgb(213,5,37)"/><text x="640.00" y="526.50"></text></g><g><title>0x7f022b263982 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="638" y="516" width="2" height="15" fill="rgb(224,117,11)"/><text x="641.00" y="526.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="640" y="516" width="3" height="15" fill="rgb(218,193,10)"/><text x="643.00" y="526.50"></text></g><g><title>0x7f022b263a53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="643" y="516" width="1" height="15" fill="rgb(249,224,45)"/><text x="646.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="644" y="516" width="2" height="15" fill="rgb(238,24,38)"/><text x="647.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 1.07%)</title><rect x="635" y="500" width="13" height="15" fill="rgb(211,81,31)"/><text x="638.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="646" y="516" width="2" height="15" fill="rgb(247,203,47)"/><text x="649.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (28 samples, 3.74%)</title><rect x="608" y="484" width="44" height="15" fill="rgb(245,170,47)"/><text x="611.00" y="494.50">mult..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (3 samples, 0.40%)</title><rect x="648" y="500" width="4" height="15" fill="rgb(212,196,8)"/><text x="651.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:311) (1 samples, 0.13%)</title><rect x="652" y="484" width="2" height="15" fill="rgb(237,28,31)"/><text x="655.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.13%)</title><rect x="652" y="500" width="2" height="15" fill="rgb(218,147,18)"/><text x="655.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (1 samples, 0.13%)</title><rect x="652" y="516" width="2" height="15" fill="rgb(240,0,1)"/><text x="655.00" y="526.50"></text></g><g><title>0x7f021ad2fd50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="654" y="580" width="1" height="15" fill="rgb(219,103,32)"/><text x="657.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (4 samples, 0.53%)</title><rect x="654" y="500" width="6" height="15" fill="rgb(220,67,50)"/><text x="657.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (4 samples, 0.53%)</title><rect x="654" y="516" width="6" height="15" fill="rgb(245,223,12)"/><text x="657.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (4 samples, 0.53%)</title><rect x="654" y="532" width="6" height="15" fill="rgb(248,7,14)"/><text x="657.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (4 samples, 0.53%)</title><rect x="654" y="548" width="6" height="15" fill="rgb(228,122,28)"/><text x="657.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.53%)</title><rect x="654" y="564" width="6" height="15" fill="rgb(206,216,21)"/><text x="657.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.40%)</title><rect x="655" y="580" width="5" height="15" fill="rgb(254,124,33)"/><text x="658.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="660" y="500" width="2" height="15" fill="rgb(229,32,10)"/><text x="663.00" y="510.50"></text></g><g><title>0x7f022b283dc9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="660" y="516" width="2" height="15" fill="rgb(210,214,2)"/><text x="663.00" y="526.50"></text></g><g><title>0x7f021ad307a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="662" y="516" width="1" height="15" fill="rgb(247,38,18)"/><text x="665.00" y="526.50"></text></g><g><title>0x7f022b263906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="663" y="516" width="2" height="15" fill="rgb(251,201,28)"/><text x="666.00" y="526.50"></text></g><g><title>0x7f022b26395e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="665" y="516" width="1" height="15" fill="rgb(245,111,30)"/><text x="668.00" y="526.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="666" y="516" width="2" height="15" fill="rgb(216,161,2)"/><text x="669.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.40%)</title><rect x="668" y="516" width="5" height="15" fill="rgb(235,16,17)"/><text x="671.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (13 samples, 1.74%)</title><rect x="654" y="484" width="20" height="15" fill="rgb(228,168,47)"/><text x="657.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 1.07%)</title><rect x="662" y="500" width="12" height="15" fill="rgb(216,73,42)"/><text x="665.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="673" y="516" width="1" height="15" fill="rgb(252,94,52)"/><text x="676.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:314) (1 samples, 0.13%)</title><rect x="674" y="484" width="2" height="15" fill="rgb(253,168,30)"/><text x="677.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:316) (2 samples, 0.27%)</title><rect x="676" y="484" width="3" height="15" fill="rgb(249,77,35)"/><text x="679.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:323) (1 samples, 0.13%)</title><rect x="679" y="484" width="2" height="15" fill="rgb(212,116,42)"/><text x="682.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (1 samples, 0.13%)</title><rect x="681" y="484" width="1" height="15" fill="rgb(214,131,0)"/><text x="684.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (2 samples, 0.27%)</title><rect x="682" y="484" width="3" height="15" fill="rgb(219,115,16)"/><text x="685.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:334) (2 samples, 0.27%)</title><rect x="685" y="484" width="4" height="15" fill="rgb(251,13,50)"/><text x="688.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:340) (1 samples, 0.13%)</title><rect x="689" y="484" width="1" height="15" fill="rgb(252,200,19)"/><text x="692.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (1 samples, 0.13%)</title><rect x="690" y="484" width="2" height="15" fill="rgb(215,147,42)"/><text x="693.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:350) (2 samples, 0.27%)</title><rect x="692" y="484" width="3" height="15" fill="rgb(247,9,9)"/><text x="695.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (20 samples, 2.67%)</title><rect x="695" y="484" width="31" height="15" fill="rgb(219,218,13)"/><text x="698.00" y="494.50">mu..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:352) (1 samples, 0.13%)</title><rect x="726" y="484" width="2" height="15" fill="rgb(222,168,22)"/><text x="729.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (6 samples, 0.80%)</title><rect x="728" y="484" width="9" height="15" fill="rgb(215,102,49)"/><text x="731.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (3 samples, 0.40%)</title><rect x="737" y="484" width="5" height="15" fill="rgb(240,165,18)"/><text x="740.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (89 samples, 11.88%)</title><rect x="603" y="452" width="141" height="15" fill="rgb(208,19,49)"/><text x="606.00" y="462.50">RuntimeSVMClassif..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (89 samples, 11.88%)</title><rect x="603" y="468" width="141" height="15" fill="rgb(232,205,0)"/><text x="606.00" y="478.50">std::vector&lt;float..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:358) (1 samples, 0.13%)</title><rect x="742" y="484" width="2" height="15" fill="rgb(225,184,35)"/><text x="745.00" y="494.50"></text></g><g><title>0x7f022b263be8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="742" y="500" width="2" height="15" fill="rgb(235,157,0)"/><text x="745.00" y="510.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (242 samples, 32.31%)</title><rect x="364" y="228" width="381" height="15" fill="rgb(220,95,41)"/><text x="367.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (242 samples, 32.31%)</title><rect x="364" y="244" width="381" height="15" fill="rgb(212,43,9)"/><text x="367.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h:623)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (242 samples, 32.31%)</title><rect x="364" y="260" width="381" height="15" fill="rgb(218,110,17)"/><text x="367.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (240 samples, 32.04%)</title><rect x="367" y="276" width="378" height="15" fill="rgb(231,59,4)"/><text x="370.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::c..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (240 samples, 32.04%)</title><rect x="367" y="292" width="378" height="15" fill="rgb(223,143,49)"/><text x="370.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassif..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (240 samples, 32.04%)</title><rect x="367" y="308" width="378" height="15" fill="rgb(248,85,34)"/><text x="370.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassif..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (240 samples, 32.04%)</title><rect x="367" y="324" width="378" height="15" fill="rgb(246,187,14)"/><text x="370.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tupl..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (240 samples, 32.04%)</title><rect x="367" y="340" width="378" height="15" fill="rgb(226,51,45)"/><text x="370.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831)</text></g><g><title>pybind11::array::~array (numpy.h:538) (240 samples, 32.04%)</title><rect x="367" y="356" width="378" height="15" fill="rgb(228,161,38)"/><text x="370.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (240 samples, 32.04%)</title><rect x="367" y="372" width="378" height="15" fill="rgb(213,143,27)"/><text x="370.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (240 samples, 32.04%)</title><rect x="367" y="388" width="378" height="15" fill="rgb(216,128,43)"/><text x="370.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (240 samples, 32.04%)</title><rect x="367" y="404" width="378" height="15" fill="rgb(231,83,32)"/><text x="370.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (239 samples, 31.91%)</title><rect x="369" y="420" width="376" height="15" fill="rgb(216,227,51)"/><text x="372.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onn..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (239 samples, 31.91%)</title><rect x="369" y="436" width="376" height="15" fill="rgb(216,108,49)"/><text x="372.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:491) (1 samples, 0.13%)</title><rect x="744" y="452" width="1" height="15" fill="rgb(216,67,18)"/><text x="747.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.13%)</title><rect x="744" y="468" width="1" height="15" fill="rgb(216,17,16)"/><text x="747.00" y="478.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:206) (1 samples, 0.13%)</title><rect x="744" y="484" width="1" height="15" fill="rgb(246,118,0)"/><text x="747.00" y="494.50"></text></g><g><title>0x7f022b283dbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="744" y="500" width="1" height="15" fill="rgb(221,75,46)"/><text x="747.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:45) (255 samples, 34.05%)</title><rect x="347" y="52" width="401" height="15" fill="rgb(235,96,48)"/><text x="350.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernel..</text></g><g><title>profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:44) (255 samples, 34.05%)</title><rect x="347" y="68" width="401" height="15" fill="rgb(237,26,29)"/><text x="350.00" y="78.50">profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_ke..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (255 samples, 34.05%)</title><rect x="347" y="84" width="401" height="15" fill="rgb(213,148,54)"/><text x="350.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_k..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (247 samples, 32.98%)</title><rect x="359" y="100" width="389" height="15" fill="rgb(251,59,15)"/><text x="362.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kerne..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (247 samples, 32.98%)</title><rect x="359" y="116" width="389" height="15" fill="rgb(209,72,9)"/><text x="362.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (247 samples, 32.98%)</title><rect x="359" y="132" width="389" height="15" fill="rgb(206,65,33)"/><text x="362.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (247 samples, 32.98%)</title><rect x="359" y="148" width="389" height="15" fill="rgb(213,216,42)"/><text x="362.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (247 samples, 32.98%)</title><rect x="359" y="164" width="389" height="15" fill="rgb(227,76,37)"/><text x="362.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (245 samples, 32.71%)</title><rect x="362" y="180" width="386" height="15" fill="rgb(252,13,35)"/><text x="365.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (244 samples, 32.58%)</title><rect x="364" y="196" width="384" height="15" fill="rgb(229,156,37)"/><text x="367.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (244 samples, 32.58%)</title><rect x="364" y="212" width="384" height="15" fill="rgb(237,154,33)"/><text x="367.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (2 samples, 0.27%)</title><rect x="745" y="228" width="3" height="15" fill="rgb(241,180,2)"/><text x="748.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.13%)</title><rect x="747" y="244" width="1" height="15" fill="rgb(212,131,18)"/><text x="750.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.13%)</title><rect x="747" y="260" width="1" height="15" fill="rgb(234,206,37)"/><text x="750.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.13%)</title><rect x="747" y="276" width="1" height="15" fill="rgb(236,24,30)"/><text x="750.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.13%)</title><rect x="747" y="292" width="1" height="15" fill="rgb(214,117,43)"/><text x="750.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.13%)</title><rect x="747" y="308" width="1" height="15" fill="rgb(224,225,50)"/><text x="750.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:168) (1 samples, 0.13%)</title><rect x="747" y="324" width="1" height="15" fill="rgb(253,164,48)"/><text x="750.00" y="334.50"></text></g><g><title>0x7f01eb2d3ff9 (?) (1 samples, 0.13%)</title><rect x="748" y="212" width="2" height="15" fill="rgb(246,1,7)"/><text x="751.00" y="222.50"></text></g><g><title>0x7f01eb2ceef6 (?) (1 samples, 0.13%)</title><rect x="748" y="228" width="2" height="15" fill="rgb(236,136,49)"/><text x="751.00" y="238.50"></text></g><g><title>0x7f01eb2c3c99 (?) (1 samples, 0.13%)</title><rect x="748" y="244" width="2" height="15" fill="rgb(254,93,22)"/><text x="751.00" y="254.50"></text></g><g><title>0x7f01eb2e1c7b (?) (1 samples, 0.13%)</title><rect x="748" y="260" width="2" height="15" fill="rgb(222,188,41)"/><text x="751.00" y="270.50"></text></g><g><title>0x7f01eb2b954e (?) (1 samples, 0.13%)</title><rect x="748" y="276" width="2" height="15" fill="rgb(242,105,29)"/><text x="751.00" y="286.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="750" y="340" width="2" height="15" fill="rgb(240,40,44)"/><text x="753.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="750" y="356" width="2" height="15" fill="rgb(242,51,14)"/><text x="753.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(248,187,26)"/><text x="753.00" y="382.50"></text></g><g><title>0x7f022b263965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="763" y="388" width="1" height="15" fill="rgb(224,99,6)"/><text x="766.00" y="398.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="764" y="388" width="2" height="15" fill="rgb(209,30,30)"/><text x="767.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="761" y="356" width="6" height="15" fill="rgb(215,28,5)"/><text x="764.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="763" y="372" width="4" height="15" fill="rgb(225,192,36)"/><text x="766.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="766" y="388" width="1" height="15" fill="rgb(211,143,20)"/><text x="769.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="766" y="404" width="1" height="15" fill="rgb(232,44,3)"/><text x="769.00" y="414.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.74%)</title><rect x="752" y="340" width="20" height="15" fill="rgb(210,102,33)"/><text x="755.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="767" y="356" width="5" height="15" fill="rgb(228,16,54)"/><text x="770.00" y="366.50"></text></g><g><title>0x7f022b283d62 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="770" y="372" width="2" height="15" fill="rgb(218,225,47)"/><text x="773.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.14%)</title><rect x="750" y="260" width="25" height="15" fill="rgb(207,212,3)"/><text x="753.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.14%)</title><rect x="750" y="276" width="25" height="15" fill="rgb(211,91,41)"/><text x="753.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.14%)</title><rect x="750" y="292" width="25" height="15" fill="rgb(218,31,35)"/><text x="753.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.14%)</title><rect x="750" y="308" width="25" height="15" fill="rgb(249,136,49)"/><text x="753.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.14%)</title><rect x="750" y="324" width="25" height="15" fill="rgb(242,178,25)"/><text x="753.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="772" y="340" width="3" height="15" fill="rgb(247,136,32)"/><text x="775.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="774" y="356" width="1" height="15" fill="rgb(223,58,53)"/><text x="777.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="774" y="372" width="1" height="15" fill="rgb(244,118,36)"/><text x="777.00" y="382.50"></text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:18) (18 samples, 2.40%)</title><rect x="748" y="100" width="29" height="15" fill="rgb(238,154,43)"/><text x="751.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (18 samples, 2.40%)</title><rect x="748" y="116" width="29" height="15" fill="rgb(248,207,15)"/><text x="751.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (18 samples, 2.40%)</title><rect x="748" y="132" width="29" height="15" fill="rgb(248,13,19)"/><text x="751.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (18 samples, 2.40%)</title><rect x="748" y="148" width="29" height="15" fill="rgb(206,177,20)"/><text x="751.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (18 samples, 2.40%)</title><rect x="748" y="164" width="29" height="15" fill="rgb(216,117,54)"/><text x="751.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (18 samples, 2.40%)</title><rect x="748" y="180" width="29" height="15" fill="rgb(230,137,27)"/><text x="751.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py:136) (18 samples, 2.40%)</title><rect x="748" y="196" width="29" height="15" fill="rgb(240,201,11)"/><text x="751.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.27%)</title><rect x="750" y="212" width="27" height="15" fill="rgb(226,13,54)"/><text x="753.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.27%)</title><rect x="750" y="228" width="27" height="15" fill="rgb(244,182,21)"/><text x="753.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.27%)</title><rect x="750" y="244" width="27" height="15" fill="rgb(219,32,25)"/><text x="753.00" y="254.50">o..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="775" y="260" width="2" height="15" fill="rgb(254,205,19)"/><text x="778.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="775" y="276" width="2" height="15" fill="rgb(208,57,41)"/><text x="778.00" y="286.50"></text></g><g><title>0x7f022b262bc6 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="789" y="132" width="3" height="15" fill="rgb(232,3,22)"/><text x="792.00" y="142.50"></text></g><g><title>0x7f022b262bdb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="792" y="132" width="2" height="15" fill="rgb(245,121,33)"/><text x="795.00" y="142.50"></text></g><g><title>0x7f022b263eb0 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="789" y="116" width="7" height="15" fill="rgb(207,41,19)"/><text x="792.00" y="126.50"></text></g><g><title>0x7f022b262c49 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="794" y="132" width="2" height="15" fill="rgb(246,54,40)"/><text x="797.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.13%)</title><rect x="796" y="148" width="1" height="15" fill="rgb(235,9,15)"/><text x="799.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.13%)</title><rect x="799" y="196" width="1" height="15" fill="rgb(222,79,19)"/><text x="802.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:135) (1 samples, 0.13%)</title><rect x="800" y="196" width="2" height="15" fill="rgb(228,119,6)"/><text x="803.00" y="206.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.13%)</title><rect x="804" y="212" width="1" height="15" fill="rgb(207,122,5)"/><text x="807.00" y="222.50"></text></g><g><title>0x7ffca755ab28 ([vdso]) (1 samples, 0.13%)</title><rect x="804" y="228" width="1" height="15" fill="rgb(241,107,7)"/><text x="807.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="805" y="260" width="2" height="15" fill="rgb(208,160,35)"/><text x="808.00" y="270.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="807" y="340" width="1" height="15" fill="rgb(216,155,51)"/><text x="810.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="807" y="356" width="1" height="15" fill="rgb(221,148,15)"/><text x="810.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="807" y="372" width="1" height="15" fill="rgb(212,177,11)"/><text x="810.00" y="382.50"></text></g><g><title>0x7f021ad307a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="912" y="356" width="2" height="15" fill="rgb(223,142,44)"/><text x="915.00" y="366.50"></text></g><g><title>0x7f022b26395e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="914" y="356" width="1" height="15" fill="rgb(211,220,27)"/><text x="917.00" y="366.50"></text></g><g><title>0x7f022b263965 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="915" y="356" width="4" height="15" fill="rgb(229,209,1)"/><text x="918.00" y="366.50"></text></g><g><title>0x7f022b263998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="919" y="356" width="1" height="15" fill="rgb(242,51,40)"/><text x="922.00" y="366.50"></text></g><g><title>0x7f022b263be4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="920" y="356" width="2" height="15" fill="rgb(232,155,49)"/><text x="923.00" y="366.50"></text></g><g><title>0x7f022b3e2e71 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="922" y="356" width="1" height="15" fill="rgb(216,83,34)"/><text x="925.00" y="366.50"></text></g><g><title>0x7f022b3e2e86 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="923" y="356" width="2" height="15" fill="rgb(241,155,9)"/><text x="926.00" y="366.50"></text></g><g><title>0x7f022b3e2e96 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="925" y="356" width="1" height="15" fill="rgb(231,1,30)"/><text x="928.00" y="366.50"></text></g><g><title>0x7f022b3e2ea6 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="926" y="356" width="4" height="15" fill="rgb(219,9,12)"/><text x="929.00" y="366.50"></text></g><g><title>0x7f022b263a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="978" y="372" width="2" height="15" fill="rgb(215,224,24)"/><text x="981.00" y="382.50"></text></g><g><title>0x7f022b26391c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="989" y="388" width="2" height="15" fill="rgb(251,32,40)"/><text x="992.00" y="398.50"></text></g><g><title>0x7f022b26391e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="991" y="388" width="2" height="15" fill="rgb(242,181,9)"/><text x="994.00" y="398.50"></text></g><g><title>0x7f022b26392c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="993" y="388" width="1" height="15" fill="rgb(240,225,27)"/><text x="996.00" y="398.50"></text></g><g><title>0x7f022b26395e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(213,214,35)"/><text x="997.00" y="398.50"></text></g><g><title>0x7f022b263965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="996" y="388" width="1" height="15" fill="rgb(231,122,17)"/><text x="999.00" y="398.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="997" y="388" width="2" height="15" fill="rgb(215,178,5)"/><text x="1000.00" y="398.50"></text></g><g><title>0x7f022b263a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="999" y="388" width="1" height="15" fill="rgb(243,150,19)"/><text x="1002.00" y="398.50"></text></g><g><title>0x7f022b263bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1000" y="388" width="2" height="15" fill="rgb(216,132,13)"/><text x="1003.00" y="398.50"></text></g><g><title>0x7f022b263be8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1002" y="388" width="2" height="15" fill="rgb(217,46,13)"/><text x="1005.00" y="398.50"></text></g><g><title>0x7f022b283d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1004" y="388" width="1" height="15" fill="rgb(213,65,15)"/><text x="1007.00" y="398.50"></text></g><g><title>0x7f022b283dae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1005" y="388" width="2" height="15" fill="rgb(227,189,50)"/><text x="1008.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1007" y="388" width="3" height="15" fill="rgb(219,99,41)"/><text x="1010.00" y="398.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1010" y="388" width="1" height="15" fill="rgb(214,136,39)"/><text x="1013.00" y="398.50"></text></g><g><title>0x7f021ad2fd50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1011" y="404" width="2" height="15" fill="rgb(231,198,14)"/><text x="1014.00" y="414.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (67 samples, 8.95%)</title><rect x="930" y="356" width="105" height="15" fill="rgb(236,173,40)"/><text x="933.00" y="366.50">onnxruntime:..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 4.67%)</title><rect x="980" y="372" width="55" height="15" fill="rgb(214,186,19)"/><text x="983.00" y="382.50">std::..</text></g><g><title>operator new (libstdc++.so.6.0.28) (15 samples, 2.00%)</title><rect x="1011" y="388" width="24" height="15" fill="rgb(235,154,27)"/><text x="1014.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.87%)</title><rect x="1013" y="404" width="22" height="15" fill="rgb(211,127,43)"/><text x="1016.00" y="414.50">m..</text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="1035" y="356" width="5" height="15" fill="rgb(248,83,23)"/><text x="1038.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.40%)</title><rect x="1035" y="372" width="5" height="15" fill="rgb(210,213,21)"/><text x="1038.00" y="382.50"></text></g><g><title>0x7f022b263961 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1048" y="372" width="3" height="15" fill="rgb(246,74,23)"/><text x="1051.00" y="382.50"></text></g><g><title>0x7f022b26397c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1051" y="372" width="1" height="15" fill="rgb(243,82,6)"/><text x="1054.00" y="382.50"></text></g><g><title>0x7f022b263991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1052" y="372" width="2" height="15" fill="rgb(215,66,0)"/><text x="1055.00" y="382.50"></text></g><g><title>0x7f022b26399b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1054" y="372" width="2" height="15" fill="rgb(238,107,12)"/><text x="1057.00" y="382.50"></text></g><g><title>0x7f022b263a4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1056" y="372" width="1" height="15" fill="rgb(237,156,38)"/><text x="1059.00" y="382.50"></text></g><g><title>0x7f022b263bc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1057" y="372" width="2" height="15" fill="rgb(254,113,11)"/><text x="1060.00" y="382.50"></text></g><g><title>0x7f022b263bd4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1059" y="372" width="1" height="15" fill="rgb(241,27,21)"/><text x="1062.00" y="382.50"></text></g><g><title>0x7f022b263bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1060" y="372" width="2" height="15" fill="rgb(250,12,42)"/><text x="1063.00" y="382.50"></text></g><g><title>0x7f022b283d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1062" y="372" width="1" height="15" fill="rgb(244,73,50)"/><text x="1065.00" y="382.50"></text></g><g><title>0x7f022b283d97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1063" y="372" width="2" height="15" fill="rgb(228,8,40)"/><text x="1066.00" y="382.50"></text></g><g><title>0x7f022b283dc9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1065" y="372" width="2" height="15" fill="rgb(206,138,17)"/><text x="1068.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1067" y="372" width="3" height="15" fill="rgb(245,158,8)"/><text x="1070.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.60%)</title><rect x="1040" y="356" width="42" height="15" fill="rgb(248,8,46)"/><text x="1043.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.07%)</title><rect x="1070" y="372" width="12" height="15" fill="rgb(232,206,47)"/><text x="1073.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.93%)</title><rect x="1071" y="388" width="11" height="15" fill="rgb(212,186,4)"/><text x="1074.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (176 samples, 23.50%)</title><rect x="808" y="340" width="278" height="15" fill="rgb(222,79,45)"/><text x="811.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="1082" y="356" width="4" height="15" fill="rgb(235,153,43)"/><text x="1085.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1084" y="372" width="2" height="15" fill="rgb(227,211,4)"/><text x="1087.00" y="382.50"></text></g><g><title>0x7f021ad2fd50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1092" y="372" width="1" height="15" fill="rgb(253,174,21)"/><text x="1095.00" y="382.50"></text></g><g><title>0x7f022b264d9f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1117" y="388" width="2" height="15" fill="rgb(233,197,15)"/><text x="1120.00" y="398.50"></text></g><g><title>0x7f022b264f2a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1119" y="388" width="1" height="15" fill="rgb(232,73,42)"/><text x="1122.00" y="398.50"></text></g><g><title>0x7f022b264fde (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1120" y="388" width="2" height="15" fill="rgb(240,63,30)"/><text x="1123.00" y="398.50"></text></g><g><title>0x7f022b265033 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1122" y="388" width="1" height="15" fill="rgb(251,201,5)"/><text x="1125.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (21 samples, 2.80%)</title><rect x="1092" y="356" width="33" height="15" fill="rgb(215,100,37)"/><text x="1095.00" y="366.50">op..</text></g><g><title>malloc (libc-2.29.so) (20 samples, 2.67%)</title><rect x="1093" y="372" width="32" height="15" fill="rgb(231,43,4)"/><text x="1096.00" y="382.50">ma..</text></g><g><title>0x7f022b2653ae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1123" y="388" width="2" height="15" fill="rgb(254,148,0)"/><text x="1126.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1125" y="356" width="1" height="15" fill="rgb(224,124,21)"/><text x="1128.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 27.24%)</title><rect x="807" y="260" width="321" height="15" fill="rgb(208,8,14)"/><text x="810.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 27.24%)</title><rect x="807" y="276" width="321" height="15" fill="rgb(244,79,31)"/><text x="810.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 27.24%)</title><rect x="807" y="292" width="321" height="15" fill="rgb(220,198,33)"/><text x="810.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 27.24%)</title><rect x="807" y="308" width="321" height="15" fill="rgb(219,161,31)"/><text x="810.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 27.24%)</title><rect x="807" y="324" width="321" height="15" fill="rgb(239,225,37)"/><text x="810.00" y="334.50">onnxruntime::SequentialExecutor::Execute (o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.60%)</title><rect x="1086" y="340" width="42" height="15" fill="rgb(229,49,30)"/><text x="1089.00" y="350.50">onn..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1126" y="356" width="2" height="15" fill="rgb(217,92,43)"/><text x="1129.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1128" y="260" width="2" height="15" fill="rgb(245,222,10)"/><text x="1131.00" y="270.50"></text></g><g><title>0x7f022b279e9d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1128" y="276" width="2" height="15" fill="rgb(240,226,18)"/><text x="1131.00" y="286.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1130" y="260" width="1" height="15" fill="rgb(235,173,43)"/><text x="1133.00" y="270.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.74%)</title><rect x="1131" y="260" width="44" height="15" fill="rgb(231,170,30)"/><text x="1134.00" y="270.50">pybi..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.74%)</title><rect x="1155" y="276" width="20" height="15" fill="rgb(210,129,1)"/><text x="1158.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(221,191,34)"/><text x="1178.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(220,159,13)"/><text x="1178.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="276" width="1" height="15" fill="rgb(250,197,48)"/><text x="1180.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="292" width="1" height="15" fill="rgb(243,96,10)"/><text x="1180.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="308" width="1" height="15" fill="rgb(232,136,30)"/><text x="1180.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="324" width="1" height="15" fill="rgb(248,175,25)"/><text x="1180.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="340" width="1" height="15" fill="rgb(207,176,45)"/><text x="1180.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="356" width="1" height="15" fill="rgb(209,95,46)"/><text x="1180.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="372" width="1" height="15" fill="rgb(206,15,26)"/><text x="1180.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1177" y="388" width="1" height="15" fill="rgb(247,48,30)"/><text x="1180.00" y="398.50"></text></g><g><title>0x7f022b26392c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1178" y="292" width="2" height="15" fill="rgb(226,46,14)"/><text x="1181.00" y="302.50"></text></g><g><title>0x7f022b263945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(247,172,1)"/><text x="1183.00" y="302.50"></text></g><g><title>0x7f022b263971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(239,112,40)"/><text x="1185.00" y="302.50"></text></g><g><title>0x7f022b263a33 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(227,26,53)"/><text x="1186.00" y="302.50"></text></g><g><title>all (749 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,208,35)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:52) (280 samples, 37.38%)</title><rect x="748" y="52" width="442" height="15" fill="rgb(228,126,33)"/><text x="751.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear..</text></g><g><title>profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:51) (280 samples, 37.38%)</title><rect x="748" y="68" width="442" height="15" fill="rgb(210,111,24)"/><text x="751.00" y="78.50">profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellin..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:29) (280 samples, 37.38%)</title><rect x="748" y="84" width="442" height="15" fill="rgb(215,149,41)"/><text x="751.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernell..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py:23) (262 samples, 34.98%)</title><rect x="777" y="100" width="413" height="15" fill="rgb(246,121,27)"/><text x="780.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kernellin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (250 samples, 33.38%)</title><rect x="796" y="116" width="394" height="15" fill="rgb(254,134,0)"/><text x="799.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (250 samples, 33.38%)</title><rect x="796" y="132" width="394" height="15" fill="rgb(219,11,25)"/><text x="799.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (249 samples, 33.24%)</title><rect x="797" y="148" width="393" height="15" fill="rgb(209,167,6)"/><text x="800.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (249 samples, 33.24%)</title><rect x="797" y="164" width="393" height="15" fill="rgb(225,44,40)"/><text x="800.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (249 samples, 33.24%)</title><rect x="797" y="180" width="393" height="15" fill="rgb(249,102,9)"/><text x="800.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (246 samples, 32.84%)</title><rect x="802" y="196" width="388" height="15" fill="rgb(247,104,17)"/><text x="805.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (244 samples, 32.58%)</title><rect x="805" y="212" width="385" height="15" fill="rgb(227,116,13)"/><text x="808.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (244 samples, 32.58%)</title><rect x="805" y="228" width="385" height="15" fill="rgb(209,208,46)"/><text x="808.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (244 samples, 32.58%)</title><rect x="805" y="244" width="385" height="15" fill="rgb(212,149,10)"/><text x="808.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.07%)</title><rect x="1177" y="260" width="13" height="15" fill="rgb(206,193,49)"/><text x="1180.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.93%)</title><rect x="1178" y="276" width="12" height="15" fill="rgb(242,55,31)"/><text x="1181.00" y="286.50"></text></g><g><title>0x7f022b263d07 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(216,90,34)"/><text x="1188.00" y="302.50"></text></g></g></svg>