<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(231,60,9)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(237,179,28)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(207,138,37)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(216,43,24)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(221,162,6)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.34%)</title><rect x="10" y="1060" width="4" height="15" fill="rgb(209,144,1)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1076" width="4" height="15" fill="rgb(218,112,47)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1092" width="4" height="15" fill="rgb(223,108,54)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1108" width="4" height="15" fill="rgb(241,154,35)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1124" width="4" height="15" fill="rgb(241,165,47)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1140" width="4" height="15" fill="rgb(215,166,36)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.34%)</title><rect x="10" y="1156" width="4" height="15" fill="rgb(239,109,23)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1172" width="4" height="15" fill="rgb(227,16,0)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1188" width="4" height="15" fill="rgb(215,52,24)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1204" width="4" height="15" fill="rgb(211,166,54)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1220" width="4" height="15" fill="rgb(252,224,16)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1236" width="4" height="15" fill="rgb(249,88,36)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="1252" width="4" height="15" fill="rgb(232,117,17)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1268" width="4" height="15" fill="rgb(250,18,26)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1284" width="4" height="15" fill="rgb(230,155,13)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1300" width="4" height="15" fill="rgb(246,35,38)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="10" y="1316" width="4" height="15" fill="rgb(208,194,16)"/><text x="13.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="10" y="1332" width="4" height="15" fill="rgb(233,3,54)"/><text x="13.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.34%)</title><rect x="10" y="1348" width="4" height="15" fill="rgb(241,68,25)"/><text x="13.00" y="1358.50"></text></g><g><title>LeastSquaresError (sklearn/ensemble/_gb.py) (1 samples, 0.34%)</title><rect x="10" y="1364" width="4" height="15" fill="rgb(224,53,0)"/><text x="13.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::FormalParameterOption, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, onnx::OpSchema::FormalParameterOption (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="18" y="1492" width="4" height="15" fill="rgb(245,76,31)"/><text x="21.00" y="1502.50"></text></g><g><title>pybind11::detail::type_caster_generic::src_and_type (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="18" y="1508" width="4" height="15" fill="rgb(222,218,12)"/><text x="21.00" y="1518.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="18" y="1524" width="4" height="15" fill="rgb(250,38,21)"/><text x="21.00" y="1534.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.994] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="18" y="1540" width="4" height="15" fill="rgb(221,83,11)"/><text x="21.00" y="1550.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (2 samples, 0.69%)</title><rect x="18" y="1460" width="8" height="15" fill="rgb(238,161,0)"/><text x="21.00" y="1470.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="18" y="1476" width="8" height="15" fill="rgb(231,74,29)"/><text x="21.00" y="1486.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="22" y="1492" width="4" height="15" fill="rgb(217,103,24)"/><text x="25.00" y="1502.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="22" y="1508" width="4" height="15" fill="rgb(250,80,0)"/><text x="25.00" y="1518.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="22" y="1524" width="4" height="15" fill="rgb(248,47,7)"/><text x="25.00" y="1534.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="22" y="1540" width="4" height="15" fill="rgb(225,158,33)"/><text x="25.00" y="1550.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="22" y="1556" width="4" height="15" fill="rgb(252,28,19)"/><text x="25.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.72%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(228,87,45)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(216,218,4)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(223,166,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(242,34,31)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.72%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(236,155,26)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(218,177,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.72%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(235,50,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(251,136,13)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(238,228,36)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(211,228,0)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(254,82,2)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(237,45,2)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(220,159,40)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.72%)</title><rect x="10" y="836" width="20" height="15" fill="rgb(214,0,24)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="852" width="20" height="15" fill="rgb(214,199,28)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.72%)</title><rect x="10" y="868" width="20" height="15" fill="rgb(223,167,11)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="884" width="20" height="15" fill="rgb(211,41,33)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="900" width="20" height="15" fill="rgb(244,127,0)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="916" width="20" height="15" fill="rgb(240,166,3)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.72%)</title><rect x="10" y="932" width="20" height="15" fill="rgb(210,101,4)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.72%)</title><rect x="10" y="948" width="20" height="15" fill="rgb(239,191,7)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.72%)</title><rect x="10" y="964" width="20" height="15" fill="rgb(253,121,23)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="980" width="16" height="15" fill="rgb(214,94,9)"/><text x="17.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="996" width="16" height="15" fill="rgb(246,207,24)"/><text x="17.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1012" width="16" height="15" fill="rgb(222,120,9)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1028" width="16" height="15" fill="rgb(252,45,48)"/><text x="17.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1044" width="16" height="15" fill="rgb(215,178,9)"/><text x="17.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="14" y="1060" width="16" height="15" fill="rgb(211,125,31)"/><text x="17.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1076" width="16" height="15" fill="rgb(250,70,31)"/><text x="17.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.38%)</title><rect x="14" y="1092" width="16" height="15" fill="rgb(227,135,29)"/><text x="17.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1108" width="16" height="15" fill="rgb(227,31,18)"/><text x="17.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1124" width="16" height="15" fill="rgb(215,100,18)"/><text x="17.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1140" width="16" height="15" fill="rgb(216,105,40)"/><text x="17.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1156" width="16" height="15" fill="rgb(233,163,6)"/><text x="17.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1172" width="16" height="15" fill="rgb(213,173,21)"/><text x="17.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="14" y="1188" width="16" height="15" fill="rgb(229,149,36)"/><text x="17.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1204" width="16" height="15" fill="rgb(207,43,21)"/><text x="17.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.38%)</title><rect x="14" y="1220" width="16" height="15" fill="rgb(233,89,20)"/><text x="17.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1236" width="16" height="15" fill="rgb(209,30,18)"/><text x="17.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1252" width="16" height="15" fill="rgb(230,1,26)"/><text x="17.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1268" width="16" height="15" fill="rgb(251,200,17)"/><text x="17.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="14" y="1284" width="16" height="15" fill="rgb(213,221,27)"/><text x="17.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="14" y="1300" width="16" height="15" fill="rgb(227,116,30)"/><text x="17.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.38%)</title><rect x="14" y="1316" width="16" height="15" fill="rgb(240,24,8)"/><text x="17.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.38%)</title><rect x="14" y="1332" width="16" height="15" fill="rgb(240,153,34)"/><text x="17.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.38%)</title><rect x="14" y="1348" width="16" height="15" fill="rgb(227,196,19)"/><text x="17.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.38%)</title><rect x="14" y="1364" width="16" height="15" fill="rgb(253,20,45)"/><text x="17.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 1.03%)</title><rect x="18" y="1380" width="12" height="15" fill="rgb(206,186,7)"/><text x="21.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.03%)</title><rect x="18" y="1396" width="12" height="15" fill="rgb(209,68,32)"/><text x="21.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.03%)</title><rect x="18" y="1412" width="12" height="15" fill="rgb(251,99,20)"/><text x="21.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.03%)</title><rect x="18" y="1428" width="12" height="15" fill="rgb(209,87,48)"/><text x="21.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (3 samples, 1.03%)</title><rect x="18" y="1444" width="12" height="15" fill="rgb(249,61,8)"/><text x="21.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.34%)</title><rect x="26" y="1460" width="4" height="15" fill="rgb(240,85,53)"/><text x="29.00" y="1470.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.34%)</title><rect x="26" y="1476" width="4" height="15" fill="rgb(233,196,6)"/><text x="29.00" y="1486.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.34%)</title><rect x="26" y="1492" width="4" height="15" fill="rgb(250,187,10)"/><text x="29.00" y="1502.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.34%)</title><rect x="26" y="1508" width="4" height="15" fill="rgb(225,91,25)"/><text x="29.00" y="1518.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="26" y="1524" width="4" height="15" fill="rgb(248,142,15)"/><text x="29.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1124" width="4" height="15" fill="rgb(251,103,16)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1140" width="4" height="15" fill="rgb(235,107,38)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1156" width="4" height="15" fill="rgb(244,204,28)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1172" width="4" height="15" fill="rgb(217,105,38)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1188" width="4" height="15" fill="rgb(229,185,35)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="1204" width="4" height="15" fill="rgb(250,120,54)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1220" width="4" height="15" fill="rgb(245,155,5)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1236" width="4" height="15" fill="rgb(233,142,2)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1252" width="4" height="15" fill="rgb(239,216,8)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1268" width="4" height="15" fill="rgb(217,221,48)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1284" width="4" height="15" fill="rgb(240,25,22)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.34%)</title><rect x="30" y="1300" width="4" height="15" fill="rgb(233,87,26)"/><text x="33.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1316" width="4" height="15" fill="rgb(206,156,31)"/><text x="33.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1332" width="4" height="15" fill="rgb(241,63,4)"/><text x="33.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1348" width="4" height="15" fill="rgb(210,195,15)"/><text x="33.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1364" width="4" height="15" fill="rgb(242,127,45)"/><text x="33.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1380" width="4" height="15" fill="rgb(221,198,54)"/><text x="33.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1396" width="4" height="15" fill="rgb(226,127,4)"/><text x="33.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1412" width="4" height="15" fill="rgb(250,196,7)"/><text x="33.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.34%)</title><rect x="30" y="1428" width="4" height="15" fill="rgb(215,65,15)"/><text x="33.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1444" width="4" height="15" fill="rgb(236,51,11)"/><text x="33.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1460" width="4" height="15" fill="rgb(230,148,52)"/><text x="33.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1476" width="4" height="15" fill="rgb(238,135,21)"/><text x="33.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1492" width="4" height="15" fill="rgb(226,59,14)"/><text x="33.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1508" width="4" height="15" fill="rgb(227,197,0)"/><text x="33.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1524" width="4" height="15" fill="rgb(227,221,18)"/><text x="33.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1540" width="4" height="15" fill="rgb(242,190,54)"/><text x="33.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="1556" width="4" height="15" fill="rgb(229,44,18)"/><text x="33.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1572" width="4" height="15" fill="rgb(237,14,42)"/><text x="33.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1588" width="4" height="15" fill="rgb(238,45,51)"/><text x="33.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1604" width="4" height="15" fill="rgb(233,203,33)"/><text x="33.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1620" width="4" height="15" fill="rgb(249,63,10)"/><text x="33.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1636" width="4" height="15" fill="rgb(215,75,21)"/><text x="33.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/misc.py) (1 samples, 0.34%)</title><rect x="30" y="1652" width="4" height="15" fill="rgb(208,129,24)"/><text x="33.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1668" width="4" height="15" fill="rgb(245,1,27)"/><text x="33.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1684" width="4" height="15" fill="rgb(217,160,6)"/><text x="33.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1700" width="4" height="15" fill="rgb(219,65,22)"/><text x="33.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1716" width="4" height="15" fill="rgb(239,43,53)"/><text x="33.00" y="1726.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1732" width="4" height="15" fill="rgb(245,204,39)"/><text x="33.00" y="1742.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1748" width="4" height="15" fill="rgb(254,41,19)"/><text x="33.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1252" width="4" height="15" fill="rgb(226,111,47)"/><text x="37.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1268" width="4" height="15" fill="rgb(238,53,47)"/><text x="37.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1284" width="4" height="15" fill="rgb(205,173,50)"/><text x="37.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1300" width="4" height="15" fill="rgb(239,40,46)"/><text x="37.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1316" width="4" height="15" fill="rgb(227,107,15)"/><text x="37.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="34" y="1332" width="4" height="15" fill="rgb(252,174,18)"/><text x="37.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1348" width="4" height="15" fill="rgb(231,81,14)"/><text x="37.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1364" width="4" height="15" fill="rgb(217,93,1)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1380" width="4" height="15" fill="rgb(247,85,14)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1396" width="4" height="15" fill="rgb(226,113,41)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1412" width="4" height="15" fill="rgb(226,2,0)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1428" width="4" height="15" fill="rgb(231,171,38)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1444" width="4" height="15" fill="rgb(232,115,52)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.34%)</title><rect x="34" y="1460" width="4" height="15" fill="rgb(215,136,13)"/><text x="37.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1476" width="4" height="15" fill="rgb(245,196,25)"/><text x="37.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1492" width="4" height="15" fill="rgb(216,83,46)"/><text x="37.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1508" width="4" height="15" fill="rgb(236,163,17)"/><text x="37.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1524" width="4" height="15" fill="rgb(229,15,13)"/><text x="37.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1540" width="4" height="15" fill="rgb(210,168,34)"/><text x="37.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.34%)</title><rect x="34" y="1556" width="4" height="15" fill="rgb(221,44,1)"/><text x="37.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1572" width="4" height="15" fill="rgb(231,167,3)"/><text x="37.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1588" width="4" height="15" fill="rgb(248,95,28)"/><text x="37.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1604" width="4" height="15" fill="rgb(222,18,25)"/><text x="37.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1620" width="4" height="15" fill="rgb(207,80,39)"/><text x="37.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1636" width="4" height="15" fill="rgb(215,53,34)"/><text x="37.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py) (1 samples, 0.34%)</title><rect x="34" y="1652" width="4" height="15" fill="rgb(205,71,0)"/><text x="37.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1668" width="4" height="15" fill="rgb(233,33,7)"/><text x="37.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1684" width="4" height="15" fill="rgb(237,95,49)"/><text x="37.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1700" width="4" height="15" fill="rgb(228,2,24)"/><text x="37.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1716" width="4" height="15" fill="rgb(248,176,7)"/><text x="37.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1732" width="4" height="15" fill="rgb(221,32,30)"/><text x="37.00" y="1742.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py) (1 samples, 0.34%)</title><rect x="34" y="1748" width="4" height="15" fill="rgb(231,174,16)"/><text x="37.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1764" width="4" height="15" fill="rgb(214,216,19)"/><text x="37.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1780" width="4" height="15" fill="rgb(235,8,36)"/><text x="37.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1796" width="4" height="15" fill="rgb(243,192,16)"/><text x="37.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1812" width="4" height="15" fill="rgb(231,188,40)"/><text x="37.00" y="1822.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1828" width="4" height="15" fill="rgb(224,69,44)"/><text x="37.00" y="1838.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="1844" width="4" height="15" fill="rgb(250,25,23)"/><text x="37.00" y="1854.50"></text></g><g><title>0x7f20aa56eb35 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="34" y="1860" width="4" height="15" fill="rgb(210,68,11)"/><text x="37.00" y="1870.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1124" width="8" height="15" fill="rgb(236,42,32)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1140" width="8" height="15" fill="rgb(249,124,52)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1156" width="8" height="15" fill="rgb(232,221,18)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1172" width="8" height="15" fill="rgb(240,57,30)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1188" width="8" height="15" fill="rgb(236,14,3)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="34" y="1204" width="8" height="15" fill="rgb(248,59,20)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="34" y="1220" width="8" height="15" fill="rgb(217,220,54)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.69%)</title><rect x="34" y="1236" width="8" height="15" fill="rgb(242,94,16)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(227,8,20)"/><text x="41.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(229,149,48)"/><text x="41.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(216,101,19)"/><text x="41.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(226,30,7)"/><text x="41.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(220,146,15)"/><text x="41.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(235,196,22)"/><text x="41.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(226,196,46)"/><text x="41.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.34%)</title><rect x="38" y="1364" width="4" height="15" fill="rgb(252,95,36)"/><text x="41.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="38" y="1380" width="4" height="15" fill="rgb(247,60,39)"/><text x="41.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="340" width="36" height="15" fill="rgb(246,156,53)"/><text x="13.00" y="350.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="356" width="36" height="15" fill="rgb(225,65,13)"/><text x="13.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="372" width="36" height="15" fill="rgb(244,168,28)"/><text x="13.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="388" width="36" height="15" fill="rgb(244,76,15)"/><text x="13.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.10%)</title><rect x="10" y="404" width="36" height="15" fill="rgb(244,215,48)"/><text x="13.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="420" width="36" height="15" fill="rgb(214,15,40)"/><text x="13.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (9 samples, 3.10%)</title><rect x="10" y="436" width="36" height="15" fill="rgb(235,126,39)"/><text x="13.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="452" width="36" height="15" fill="rgb(252,119,20)"/><text x="13.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="468" width="36" height="15" fill="rgb(212,209,22)"/><text x="13.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="484" width="36" height="15" fill="rgb(207,129,18)"/><text x="13.00" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.10%)</title><rect x="10" y="500" width="36" height="15" fill="rgb(245,94,21)"/><text x="13.00" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="516" width="36" height="15" fill="rgb(231,178,36)"/><text x="13.00" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (9 samples, 3.10%)</title><rect x="10" y="532" width="36" height="15" fill="rgb(211,80,10)"/><text x="13.00" y="542.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="548" width="36" height="15" fill="rgb(213,23,20)"/><text x="13.00" y="558.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="564" width="36" height="15" fill="rgb(239,175,6)"/><text x="13.00" y="574.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="580" width="36" height="15" fill="rgb(213,213,40)"/><text x="13.00" y="590.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.10%)</title><rect x="10" y="596" width="36" height="15" fill="rgb(240,41,6)"/><text x="13.00" y="606.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.10%)</title><rect x="10" y="612" width="36" height="15" fill="rgb(228,226,6)"/><text x="13.00" y="622.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.38%)</title><rect x="30" y="628" width="16" height="15" fill="rgb(221,150,8)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="644" width="16" height="15" fill="rgb(221,40,45)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="660" width="16" height="15" fill="rgb(253,100,25)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="676" width="16" height="15" fill="rgb(223,151,41)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="30" y="692" width="16" height="15" fill="rgb(228,149,14)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="708" width="16" height="15" fill="rgb(208,141,10)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.38%)</title><rect x="30" y="724" width="16" height="15" fill="rgb(226,65,4)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="740" width="16" height="15" fill="rgb(216,162,42)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="756" width="16" height="15" fill="rgb(243,116,10)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="772" width="16" height="15" fill="rgb(225,12,6)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="30" y="788" width="16" height="15" fill="rgb(223,15,27)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="804" width="16" height="15" fill="rgb(246,223,11)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.38%)</title><rect x="30" y="820" width="16" height="15" fill="rgb(240,228,34)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="836" width="16" height="15" fill="rgb(213,25,43)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="852" width="16" height="15" fill="rgb(205,9,47)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="868" width="16" height="15" fill="rgb(234,156,19)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="30" y="884" width="16" height="15" fill="rgb(245,74,31)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="900" width="16" height="15" fill="rgb(222,62,19)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.38%)</title><rect x="30" y="916" width="16" height="15" fill="rgb(246,10,5)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="932" width="16" height="15" fill="rgb(224,63,20)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="948" width="16" height="15" fill="rgb(221,150,5)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="964" width="16" height="15" fill="rgb(226,78,30)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="30" y="980" width="16" height="15" fill="rgb(210,15,54)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="996" width="16" height="15" fill="rgb(240,229,33)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 1.38%)</title><rect x="30" y="1012" width="16" height="15" fill="rgb(241,26,27)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="1028" width="16" height="15" fill="rgb(240,101,43)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="1044" width="16" height="15" fill="rgb(231,228,18)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="1060" width="16" height="15" fill="rgb(254,227,19)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="30" y="1076" width="16" height="15" fill="rgb(215,224,26)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="30" y="1092" width="16" height="15" fill="rgb(253,192,11)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 1.38%)</title><rect x="30" y="1108" width="16" height="15" fill="rgb(244,144,7)"/><text x="33.00" y="1118.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.34%)</title><rect x="42" y="1124" width="4" height="15" fill="rgb(250,88,1)"/><text x="45.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="580" width="4" height="15" fill="rgb(232,1,10)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="596" width="4" height="15" fill="rgb(250,64,20)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="612" width="4" height="15" fill="rgb(251,190,23)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="628" width="4" height="15" fill="rgb(253,100,51)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="644" width="4" height="15" fill="rgb(252,124,42)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="660" width="4" height="15" fill="rgb(228,86,37)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="676" width="4" height="15" fill="rgb(235,212,39)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="692" width="4" height="15" fill="rgb(209,226,11)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="708" width="4" height="15" fill="rgb(249,88,21)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="724" width="4" height="15" fill="rgb(217,191,44)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="740" width="4" height="15" fill="rgb(205,47,12)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="756" width="4" height="15" fill="rgb(239,181,16)"/><text x="49.00" y="766.50"></text></g><g><title>0x7f2096db440e (?) (1 samples, 0.34%)</title><rect x="46" y="772" width="4" height="15" fill="rgb(216,225,8)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="788" width="4" height="15" fill="rgb(205,179,7)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="804" width="4" height="15" fill="rgb(242,162,39)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="820" width="4" height="15" fill="rgb(239,42,14)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="836" width="4" height="15" fill="rgb(210,145,23)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="852" width="4" height="15" fill="rgb(247,79,45)"/><text x="49.00" y="862.50"></text></g><g><title>0x7f2096b6dcd2 (?) (1 samples, 0.34%)</title><rect x="46" y="868" width="4" height="15" fill="rgb(245,182,29)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="884" width="4" height="15" fill="rgb(228,226,23)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="900" width="4" height="15" fill="rgb(240,11,36)"/><text x="49.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="916" width="4" height="15" fill="rgb(225,5,23)"/><text x="49.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="932" width="4" height="15" fill="rgb(205,156,6)"/><text x="49.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="948" width="4" height="15" fill="rgb(213,176,46)"/><text x="49.00" y="958.50"></text></g><g><title>0x7f20962630e5 (?) (1 samples, 0.34%)</title><rect x="46" y="964" width="4" height="15" fill="rgb(234,130,49)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="980" width="4" height="15" fill="rgb(253,137,34)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="996" width="4" height="15" fill="rgb(245,10,33)"/><text x="49.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1012" width="4" height="15" fill="rgb(227,39,42)"/><text x="49.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1028" width="4" height="15" fill="rgb(238,192,8)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1044" width="4" height="15" fill="rgb(223,56,1)"/><text x="49.00" y="1054.50"></text></g><g><title>0x7f2095fe7e68 (?) (1 samples, 0.34%)</title><rect x="46" y="1060" width="4" height="15" fill="rgb(208,7,1)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1076" width="4" height="15" fill="rgb(221,114,15)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1092" width="4" height="15" fill="rgb(247,126,20)"/><text x="49.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(232,107,11)"/><text x="49.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(252,192,50)"/><text x="49.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(223,95,39)"/><text x="49.00" y="1150.50"></text></g><g><title>0x7f2095d782fb (?) (1 samples, 0.34%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(221,174,33)"/><text x="49.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(250,143,47)"/><text x="49.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(239,19,43)"/><text x="49.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1204" width="4" height="15" fill="rgb(230,122,1)"/><text x="49.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1220" width="4" height="15" fill="rgb(208,207,12)"/><text x="49.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1236" width="4" height="15" fill="rgb(215,55,50)"/><text x="49.00" y="1246.50"></text></g><g><title>0x7f2095b5c153 (?) (1 samples, 0.34%)</title><rect x="46" y="1252" width="4" height="15" fill="rgb(227,25,54)"/><text x="49.00" y="1262.50"></text></g><g><title>0x7f2095b5ac13 (?) (1 samples, 0.34%)</title><rect x="46" y="1268" width="4" height="15" fill="rgb(210,154,3)"/><text x="49.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1284" width="4" height="15" fill="rgb(233,214,34)"/><text x="49.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1300" width="4" height="15" fill="rgb(240,62,6)"/><text x="49.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1316" width="4" height="15" fill="rgb(236,188,29)"/><text x="49.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1332" width="4" height="15" fill="rgb(218,197,23)"/><text x="49.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1348" width="4" height="15" fill="rgb(240,100,34)"/><text x="49.00" y="1358.50"></text></g><g><title>0x7f20958f7181 (?) (1 samples, 0.34%)</title><rect x="46" y="1364" width="4" height="15" fill="rgb(224,194,18)"/><text x="49.00" y="1374.50"></text></g><g><title>0x7f20958fa1c9 (?) (1 samples, 0.34%)</title><rect x="46" y="1380" width="4" height="15" fill="rgb(212,155,22)"/><text x="49.00" y="1390.50"></text></g><g><title>0x7f2095926167 (?) (1 samples, 0.34%)</title><rect x="46" y="1396" width="4" height="15" fill="rgb(233,110,39)"/><text x="49.00" y="1406.50"></text></g><g><title>0x7f2095921b64 (?) (1 samples, 0.34%)</title><rect x="46" y="1412" width="4" height="15" fill="rgb(216,218,7)"/><text x="49.00" y="1422.50"></text></g><g><title>0x7f209590507b (?) (1 samples, 0.34%)</title><rect x="46" y="1428" width="4" height="15" fill="rgb(244,45,32)"/><text x="49.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.34%)</title><rect x="46" y="1444" width="4" height="15" fill="rgb(250,93,3)"/><text x="49.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="1460" width="4" height="15" fill="rgb(238,192,6)"/><text x="49.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="1476" width="4" height="15" fill="rgb(223,182,4)"/><text x="49.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="1492" width="4" height="15" fill="rgb(209,61,30)"/><text x="49.00" y="1502.50"></text></g><g><title>get (_collections_abc.py) (1 samples, 0.34%)</title><rect x="46" y="1508" width="4" height="15" fill="rgb(226,39,22)"/><text x="49.00" y="1518.50"></text></g><g><title>__getitem__ (os.py) (1 samples, 0.34%)</title><rect x="46" y="1524" width="4" height="15" fill="rgb(245,41,15)"/><text x="49.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1396" width="4" height="15" fill="rgb(226,142,38)"/><text x="53.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1412" width="4" height="15" fill="rgb(207,18,20)"/><text x="53.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1428" width="4" height="15" fill="rgb(234,116,53)"/><text x="53.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1444" width="4" height="15" fill="rgb(239,30,13)"/><text x="53.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1460" width="4" height="15" fill="rgb(252,191,39)"/><text x="53.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1476" width="4" height="15" fill="rgb(228,199,48)"/><text x="53.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="50" y="1492" width="4" height="15" fill="rgb(249,35,20)"/><text x="53.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1508" width="4" height="15" fill="rgb(229,144,41)"/><text x="53.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1524" width="4" height="15" fill="rgb(213,212,27)"/><text x="53.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1540" width="4" height="15" fill="rgb(232,43,33)"/><text x="53.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1556" width="4" height="15" fill="rgb(223,227,38)"/><text x="53.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1572" width="4" height="15" fill="rgb(225,64,33)"/><text x="53.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1588" width="4" height="15" fill="rgb(241,37,21)"/><text x="53.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1604" width="4" height="15" fill="rgb(228,64,44)"/><text x="53.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py) (1 samples, 0.34%)</title><rect x="50" y="1620" width="4" height="15" fill="rgb(226,167,18)"/><text x="53.00" y="1630.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="50" y="1636" width="4" height="15" fill="rgb(232,141,28)"/><text x="53.00" y="1646.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="50" y="1652" width="4" height="15" fill="rgb(218,150,26)"/><text x="53.00" y="1662.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="50" y="1668" width="4" height="15" fill="rgb(219,108,35)"/><text x="53.00" y="1678.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="50" y="1684" width="4" height="15" fill="rgb(239,124,16)"/><text x="53.00" y="1694.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="50" y="1700" width="4" height="15" fill="rgb(215,138,0)"/><text x="53.00" y="1710.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="50" y="1716" width="4" height="15" fill="rgb(231,148,39)"/><text x="53.00" y="1726.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="50" y="1732" width="4" height="15" fill="rgb(234,152,8)"/><text x="53.00" y="1742.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.69%)</title><rect x="50" y="580" width="8" height="15" fill="rgb(218,76,48)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="596" width="8" height="15" fill="rgb(241,156,8)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="612" width="8" height="15" fill="rgb(222,66,22)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="628" width="8" height="15" fill="rgb(214,22,52)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="644" width="8" height="15" fill="rgb(236,184,3)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="660" width="8" height="15" fill="rgb(254,96,37)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.69%)</title><rect x="50" y="676" width="8" height="15" fill="rgb(229,106,20)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="692" width="8" height="15" fill="rgb(240,184,44)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="708" width="8" height="15" fill="rgb(226,2,29)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="724" width="8" height="15" fill="rgb(221,224,5)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="740" width="8" height="15" fill="rgb(219,211,47)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="756" width="8" height="15" fill="rgb(219,128,34)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.69%)</title><rect x="50" y="772" width="8" height="15" fill="rgb(226,79,34)"/><text x="53.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="788" width="8" height="15" fill="rgb(210,124,42)"/><text x="53.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="804" width="8" height="15" fill="rgb(209,108,50)"/><text x="53.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="820" width="8" height="15" fill="rgb(247,20,5)"/><text x="53.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="836" width="8" height="15" fill="rgb(221,17,20)"/><text x="53.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="852" width="8" height="15" fill="rgb(243,104,22)"/><text x="53.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.69%)</title><rect x="50" y="868" width="8" height="15" fill="rgb(236,35,29)"/><text x="53.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="884" width="8" height="15" fill="rgb(241,225,40)"/><text x="53.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="900" width="8" height="15" fill="rgb(222,218,45)"/><text x="53.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="916" width="8" height="15" fill="rgb(248,204,16)"/><text x="53.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="932" width="8" height="15" fill="rgb(252,198,23)"/><text x="53.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="948" width="8" height="15" fill="rgb(206,216,42)"/><text x="53.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.69%)</title><rect x="50" y="964" width="8" height="15" fill="rgb(247,117,37)"/><text x="53.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="980" width="8" height="15" fill="rgb(217,128,28)"/><text x="53.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="996" width="8" height="15" fill="rgb(233,27,14)"/><text x="53.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1012" width="8" height="15" fill="rgb(210,29,7)"/><text x="53.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="1028" width="8" height="15" fill="rgb(211,50,31)"/><text x="53.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1044" width="8" height="15" fill="rgb(238,129,49)"/><text x="53.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.69%)</title><rect x="50" y="1060" width="8" height="15" fill="rgb(210,206,8)"/><text x="53.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1076" width="8" height="15" fill="rgb(233,72,54)"/><text x="53.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1092" width="8" height="15" fill="rgb(223,32,12)"/><text x="53.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1108" width="8" height="15" fill="rgb(223,152,17)"/><text x="53.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="1124" width="8" height="15" fill="rgb(213,104,11)"/><text x="53.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1140" width="8" height="15" fill="rgb(236,122,2)"/><text x="53.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.69%)</title><rect x="50" y="1156" width="8" height="15" fill="rgb(233,102,31)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1172" width="8" height="15" fill="rgb(232,150,38)"/><text x="53.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1188" width="8" height="15" fill="rgb(234,98,49)"/><text x="53.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1204" width="8" height="15" fill="rgb(219,69,35)"/><text x="53.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="1220" width="8" height="15" fill="rgb(253,118,35)"/><text x="53.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1236" width="8" height="15" fill="rgb(242,72,38)"/><text x="53.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.69%)</title><rect x="50" y="1252" width="8" height="15" fill="rgb(250,77,1)"/><text x="53.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1268" width="8" height="15" fill="rgb(218,60,45)"/><text x="53.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1284" width="8" height="15" fill="rgb(235,202,30)"/><text x="53.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1300" width="8" height="15" fill="rgb(251,2,34)"/><text x="53.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="50" y="1316" width="8" height="15" fill="rgb(236,84,51)"/><text x="53.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1332" width="8" height="15" fill="rgb(231,57,54)"/><text x="53.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.69%)</title><rect x="50" y="1348" width="8" height="15" fill="rgb(208,66,40)"/><text x="53.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1364" width="8" height="15" fill="rgb(219,116,45)"/><text x="53.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="50" y="1380" width="8" height="15" fill="rgb(240,90,8)"/><text x="53.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="54" y="1396" width="4" height="15" fill="rgb(235,91,2)"/><text x="57.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="54" y="1412" width="4" height="15" fill="rgb(222,60,17)"/><text x="57.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="54" y="1428" width="4" height="15" fill="rgb(217,82,54)"/><text x="57.00" y="1438.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.34%)</title><rect x="54" y="1444" width="4" height="15" fill="rgb(209,76,1)"/><text x="57.00" y="1454.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.34%)</title><rect x="54" y="1460" width="4" height="15" fill="rgb(223,4,37)"/><text x="57.00" y="1470.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.34%)</title><rect x="54" y="1476" width="4" height="15" fill="rgb(240,169,22)"/><text x="57.00" y="1486.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.34%)</title><rect x="54" y="1492" width="4" height="15" fill="rgb(205,103,2)"/><text x="57.00" y="1502.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.34%)</title><rect x="54" y="1508" width="4" height="15" fill="rgb(214,165,41)"/><text x="57.00" y="1518.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.34%)</title><rect x="54" y="1524" width="4" height="15" fill="rgb(245,221,39)"/><text x="57.00" y="1534.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.34%)</title><rect x="54" y="1540" width="4" height="15" fill="rgb(230,105,4)"/><text x="57.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (13 samples, 4.48%)</title><rect x="10" y="292" width="52" height="15" fill="rgb(243,169,37)"/><text x="13.00" y="302.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.48%)</title><rect x="10" y="308" width="52" height="15" fill="rgb(234,31,26)"/><text x="13.00" y="318.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.48%)</title><rect x="10" y="324" width="52" height="15" fill="rgb(225,19,54)"/><text x="13.00" y="334.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="340" width="16" height="15" fill="rgb(221,181,25)"/><text x="49.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="46" y="356" width="16" height="15" fill="rgb(245,21,14)"/><text x="49.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="372" width="16" height="15" fill="rgb(212,163,9)"/><text x="49.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.38%)</title><rect x="46" y="388" width="16" height="15" fill="rgb(236,117,6)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="404" width="16" height="15" fill="rgb(208,23,13)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="420" width="16" height="15" fill="rgb(221,38,19)"/><text x="49.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="436" width="16" height="15" fill="rgb(226,168,50)"/><text x="49.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="46" y="452" width="16" height="15" fill="rgb(226,106,27)"/><text x="49.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="468" width="16" height="15" fill="rgb(231,168,41)"/><text x="49.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.38%)</title><rect x="46" y="484" width="16" height="15" fill="rgb(219,155,44)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="500" width="16" height="15" fill="rgb(220,188,31)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="516" width="16" height="15" fill="rgb(207,220,37)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="532" width="16" height="15" fill="rgb(238,228,24)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="46" y="548" width="16" height="15" fill="rgb(223,218,11)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="46" y="564" width="16" height="15" fill="rgb(209,48,2)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/api.py) (1 samples, 0.34%)</title><rect x="58" y="580" width="4" height="15" fill="rgb(238,217,51)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="58" y="596" width="4" height="15" fill="rgb(209,77,17)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="58" y="612" width="4" height="15" fill="rgb(231,138,51)"/><text x="61.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="58" y="628" width="4" height="15" fill="rgb(216,60,49)"/><text x="61.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="58" y="644" width="4" height="15" fill="rgb(216,68,22)"/><text x="61.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="58" y="660" width="4" height="15" fill="rgb(209,52,4)"/><text x="61.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/merge.py) (1 samples, 0.34%)</title><rect x="58" y="676" width="4" height="15" fill="rgb(243,97,4)"/><text x="61.00" y="686.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="62" y="900" width="4" height="15" fill="rgb(237,88,50)"/><text x="65.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="62" y="916" width="4" height="15" fill="rgb(219,142,48)"/><text x="65.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="62" y="932" width="4" height="15" fill="rgb(218,146,52)"/><text x="65.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.17%)</title><rect x="10" y="196" width="61" height="15" fill="rgb(224,157,8)"/><text x="13.00" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.17%)</title><rect x="10" y="212" width="61" height="15" fill="rgb(237,62,15)"/><text x="13.00" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.17%)</title><rect x="10" y="228" width="61" height="15" fill="rgb(209,153,25)"/><text x="13.00" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.17%)</title><rect x="10" y="244" width="61" height="15" fill="rgb(230,209,45)"/><text x="13.00" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 5.17%)</title><rect x="10" y="260" width="61" height="15" fill="rgb(252,178,42)"/><text x="13.00" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.17%)</title><rect x="10" y="276" width="61" height="15" fill="rgb(228,92,45)"/><text x="13.00" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="292" width="9" height="15" fill="rgb(223,103,5)"/><text x="65.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="308" width="9" height="15" fill="rgb(245,92,48)"/><text x="65.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="324" width="9" height="15" fill="rgb(234,93,41)"/><text x="65.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="340" width="9" height="15" fill="rgb(253,171,5)"/><text x="65.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="356" width="9" height="15" fill="rgb(206,66,8)"/><text x="65.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="372" width="9" height="15" fill="rgb(214,101,49)"/><text x="65.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.69%)</title><rect x="62" y="388" width="9" height="15" fill="rgb(217,68,9)"/><text x="65.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="404" width="9" height="15" fill="rgb(249,111,32)"/><text x="65.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="420" width="9" height="15" fill="rgb(205,212,41)"/><text x="65.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="436" width="9" height="15" fill="rgb(248,41,32)"/><text x="65.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="452" width="9" height="15" fill="rgb(237,168,38)"/><text x="65.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="468" width="9" height="15" fill="rgb(232,197,27)"/><text x="65.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.69%)</title><rect x="62" y="484" width="9" height="15" fill="rgb(211,204,3)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="500" width="9" height="15" fill="rgb(226,169,21)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="516" width="9" height="15" fill="rgb(207,83,44)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="532" width="9" height="15" fill="rgb(229,75,45)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="548" width="9" height="15" fill="rgb(237,154,35)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="564" width="9" height="15" fill="rgb(248,148,18)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.69%)</title><rect x="62" y="580" width="9" height="15" fill="rgb(251,13,35)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="596" width="9" height="15" fill="rgb(225,136,19)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="612" width="9" height="15" fill="rgb(237,29,41)"/><text x="65.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="628" width="9" height="15" fill="rgb(214,216,30)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="644" width="9" height="15" fill="rgb(215,133,16)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="660" width="9" height="15" fill="rgb(207,152,50)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="676" width="9" height="15" fill="rgb(235,43,16)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="692" width="9" height="15" fill="rgb(245,24,5)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="708" width="9" height="15" fill="rgb(207,60,10)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="724" width="9" height="15" fill="rgb(228,139,7)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="740" width="9" height="15" fill="rgb(238,184,35)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="756" width="9" height="15" fill="rgb(230,163,23)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="772" width="9" height="15" fill="rgb(251,87,38)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="62" y="788" width="9" height="15" fill="rgb(209,51,24)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="62" y="804" width="9" height="15" fill="rgb(212,143,5)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="820" width="9" height="15" fill="rgb(253,184,8)"/><text x="65.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="836" width="9" height="15" fill="rgb(252,69,31)"/><text x="65.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="852" width="9" height="15" fill="rgb(205,72,28)"/><text x="65.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="868" width="9" height="15" fill="rgb(220,155,27)"/><text x="65.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="62" y="884" width="9" height="15" fill="rgb(207,196,42)"/><text x="65.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="66" y="900" width="5" height="15" fill="rgb(239,202,12)"/><text x="69.00" y="910.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.34%)</title><rect x="66" y="916" width="5" height="15" fill="rgb(231,16,51)"/><text x="69.00" y="926.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.34%)</title><rect x="66" y="932" width="5" height="15" fill="rgb(213,3,33)"/><text x="69.00" y="942.50"></text></g><g><title>0x7f20aa57f6d4 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="66" y="948" width="5" height="15" fill="rgb(228,52,51)"/><text x="69.00" y="958.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.34%)</title><rect x="71" y="580" width="4" height="15" fill="rgb(249,78,54)"/><text x="74.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="596" width="4" height="15" fill="rgb(220,226,6)"/><text x="74.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="612" width="4" height="15" fill="rgb(251,16,22)"/><text x="74.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="628" width="4" height="15" fill="rgb(234,97,2)"/><text x="74.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="71" y="644" width="4" height="15" fill="rgb(236,118,29)"/><text x="74.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="660" width="4" height="15" fill="rgb(240,121,31)"/><text x="74.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.34%)</title><rect x="71" y="676" width="4" height="15" fill="rgb(205,140,21)"/><text x="74.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="692" width="4" height="15" fill="rgb(217,111,33)"/><text x="74.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="708" width="4" height="15" fill="rgb(251,153,12)"/><text x="74.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="724" width="4" height="15" fill="rgb(205,189,7)"/><text x="74.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="71" y="740" width="4" height="15" fill="rgb(237,0,3)"/><text x="74.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="71" y="756" width="4" height="15" fill="rgb(231,220,5)"/><text x="74.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.34%)</title><rect x="71" y="772" width="4" height="15" fill="rgb(220,214,15)"/><text x="74.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="71" y="788" width="4" height="15" fill="rgb(234,213,37)"/><text x="74.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="71" y="804" width="4" height="15" fill="rgb(227,152,31)"/><text x="74.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="71" y="820" width="4" height="15" fill="rgb(225,161,11)"/><text x="74.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="836" width="4" height="15" fill="rgb(236,165,53)"/><text x="74.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="852" width="4" height="15" fill="rgb(229,137,37)"/><text x="74.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="868" width="4" height="15" fill="rgb(206,211,38)"/><text x="74.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="884" width="4" height="15" fill="rgb(250,55,20)"/><text x="74.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="900" width="4" height="15" fill="rgb(253,71,18)"/><text x="74.00" y="910.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.34%)</title><rect x="71" y="916" width="4" height="15" fill="rgb(243,66,39)"/><text x="74.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="788" width="4" height="15" fill="rgb(213,29,42)"/><text x="78.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="804" width="4" height="15" fill="rgb(253,17,25)"/><text x="78.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="820" width="4" height="15" fill="rgb(240,175,49)"/><text x="78.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="75" y="836" width="4" height="15" fill="rgb(229,199,5)"/><text x="78.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="852" width="4" height="15" fill="rgb(245,193,17)"/><text x="78.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.34%)</title><rect x="75" y="868" width="4" height="15" fill="rgb(253,81,2)"/><text x="78.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="884" width="4" height="15" fill="rgb(205,11,30)"/><text x="78.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="900" width="4" height="15" fill="rgb(217,161,45)"/><text x="78.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="916" width="4" height="15" fill="rgb(253,24,41)"/><text x="78.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="75" y="932" width="4" height="15" fill="rgb(248,88,54)"/><text x="78.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="948" width="4" height="15" fill="rgb(235,120,25)"/><text x="78.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.34%)</title><rect x="75" y="964" width="4" height="15" fill="rgb(240,136,45)"/><text x="78.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="980" width="4" height="15" fill="rgb(232,26,45)"/><text x="78.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="996" width="4" height="15" fill="rgb(222,2,26)"/><text x="78.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1012" width="4" height="15" fill="rgb(238,79,53)"/><text x="78.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="75" y="1028" width="4" height="15" fill="rgb(206,38,14)"/><text x="78.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1044" width="4" height="15" fill="rgb(206,188,36)"/><text x="78.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py) (1 samples, 0.34%)</title><rect x="75" y="1060" width="4" height="15" fill="rgb(205,13,18)"/><text x="78.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1076" width="4" height="15" fill="rgb(214,69,22)"/><text x="78.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1092" width="4" height="15" fill="rgb(241,114,13)"/><text x="78.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1108" width="4" height="15" fill="rgb(208,227,15)"/><text x="78.00" y="1118.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="75" y="1124" width="4" height="15" fill="rgb(210,183,26)"/><text x="78.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (3 samples, 1.03%)</title><rect x="71" y="244" width="12" height="15" fill="rgb(240,114,46)"/><text x="74.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="260" width="12" height="15" fill="rgb(214,85,37)"/><text x="74.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="276" width="12" height="15" fill="rgb(225,32,48)"/><text x="74.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="292" width="12" height="15" fill="rgb(214,202,14)"/><text x="74.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="71" y="308" width="12" height="15" fill="rgb(236,123,40)"/><text x="74.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="324" width="12" height="15" fill="rgb(221,186,33)"/><text x="74.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.03%)</title><rect x="71" y="340" width="12" height="15" fill="rgb(250,121,47)"/><text x="74.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="356" width="12" height="15" fill="rgb(245,215,33)"/><text x="74.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="372" width="12" height="15" fill="rgb(220,117,35)"/><text x="74.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="388" width="12" height="15" fill="rgb(236,45,3)"/><text x="74.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="404" width="12" height="15" fill="rgb(252,138,50)"/><text x="74.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="420" width="12" height="15" fill="rgb(231,76,52)"/><text x="74.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="436" width="12" height="15" fill="rgb(222,91,1)"/><text x="74.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="71" y="452" width="12" height="15" fill="rgb(218,67,37)"/><text x="74.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="468" width="12" height="15" fill="rgb(232,29,30)"/><text x="74.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.03%)</title><rect x="71" y="484" width="12" height="15" fill="rgb(211,122,7)"/><text x="74.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="500" width="12" height="15" fill="rgb(222,90,11)"/><text x="74.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="516" width="12" height="15" fill="rgb(232,23,44)"/><text x="74.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="532" width="12" height="15" fill="rgb(211,55,1)"/><text x="74.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.03%)</title><rect x="71" y="548" width="12" height="15" fill="rgb(223,65,23)"/><text x="74.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.03%)</title><rect x="71" y="564" width="12" height="15" fill="rgb(230,117,19)"/><text x="74.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.69%)</title><rect x="75" y="580" width="8" height="15" fill="rgb(227,170,51)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="596" width="8" height="15" fill="rgb(214,229,50)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="612" width="8" height="15" fill="rgb(214,191,35)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="628" width="8" height="15" fill="rgb(248,6,39)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="75" y="644" width="8" height="15" fill="rgb(245,15,51)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="660" width="8" height="15" fill="rgb(239,113,0)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.69%)</title><rect x="75" y="676" width="8" height="15" fill="rgb(250,147,42)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="692" width="8" height="15" fill="rgb(220,90,11)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="708" width="8" height="15" fill="rgb(230,129,45)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="724" width="8" height="15" fill="rgb(216,5,54)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="75" y="740" width="8" height="15" fill="rgb(234,144,43)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="75" y="756" width="8" height="15" fill="rgb(213,141,38)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.69%)</title><rect x="75" y="772" width="8" height="15" fill="rgb(233,195,28)"/><text x="78.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="788" width="4" height="15" fill="rgb(209,10,24)"/><text x="82.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="804" width="4" height="15" fill="rgb(217,167,25)"/><text x="82.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="820" width="4" height="15" fill="rgb(215,213,18)"/><text x="82.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="836" width="4" height="15" fill="rgb(217,57,53)"/><text x="82.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="852" width="4" height="15" fill="rgb(252,196,51)"/><text x="82.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="79" y="868" width="4" height="15" fill="rgb(224,129,9)"/><text x="82.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="884" width="4" height="15" fill="rgb(235,48,13)"/><text x="82.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.34%)</title><rect x="79" y="900" width="4" height="15" fill="rgb(228,149,52)"/><text x="82.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="916" width="4" height="15" fill="rgb(243,43,15)"/><text x="82.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="932" width="4" height="15" fill="rgb(209,150,28)"/><text x="82.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="948" width="4" height="15" fill="rgb(244,167,22)"/><text x="82.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="79" y="964" width="4" height="15" fill="rgb(229,87,1)"/><text x="82.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="980" width="4" height="15" fill="rgb(217,151,28)"/><text x="82.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.34%)</title><rect x="79" y="996" width="4" height="15" fill="rgb(217,160,0)"/><text x="82.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1012" width="4" height="15" fill="rgb(235,177,50)"/><text x="82.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1028" width="4" height="15" fill="rgb(216,99,15)"/><text x="82.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1044" width="4" height="15" fill="rgb(214,33,42)"/><text x="82.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="79" y="1060" width="4" height="15" fill="rgb(213,189,11)"/><text x="82.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1076" width="4" height="15" fill="rgb(236,31,27)"/><text x="82.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.34%)</title><rect x="79" y="1092" width="4" height="15" fill="rgb(249,20,18)"/><text x="82.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1108" width="4" height="15" fill="rgb(208,130,48)"/><text x="82.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1124" width="4" height="15" fill="rgb(252,3,2)"/><text x="82.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1140" width="4" height="15" fill="rgb(244,185,1)"/><text x="82.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="79" y="1156" width="4" height="15" fill="rgb(236,200,3)"/><text x="82.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1172" width="4" height="15" fill="rgb(230,108,5)"/><text x="82.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x448.py) (1 samples, 0.34%)</title><rect x="79" y="1188" width="4" height="15" fill="rgb(216,146,10)"/><text x="82.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1204" width="4" height="15" fill="rgb(237,89,50)"/><text x="82.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1220" width="4" height="15" fill="rgb(240,135,28)"/><text x="82.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1236" width="4" height="15" fill="rgb(248,0,15)"/><text x="82.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="79" y="1252" width="4" height="15" fill="rgb(250,221,39)"/><text x="82.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="79" y="1268" width="4" height="15" fill="rgb(246,118,0)"/><text x="82.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/x448.py) (1 samples, 0.34%)</title><rect x="79" y="1284" width="4" height="15" fill="rgb(210,21,48)"/><text x="82.00" y="1294.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="79" y="1300" width="4" height="15" fill="rgb(247,72,9)"/><text x="82.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="260" width="4" height="15" fill="rgb(205,72,12)"/><text x="86.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="276" width="4" height="15" fill="rgb(213,149,53)"/><text x="86.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="292" width="4" height="15" fill="rgb(226,3,12)"/><text x="86.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="83" y="308" width="4" height="15" fill="rgb(253,97,35)"/><text x="86.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="324" width="4" height="15" fill="rgb(244,1,30)"/><text x="86.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.34%)</title><rect x="83" y="340" width="4" height="15" fill="rgb(209,221,38)"/><text x="86.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="356" width="4" height="15" fill="rgb(223,20,17)"/><text x="86.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="372" width="4" height="15" fill="rgb(232,197,21)"/><text x="86.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="388" width="4" height="15" fill="rgb(216,163,17)"/><text x="86.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="83" y="404" width="4" height="15" fill="rgb(211,18,51)"/><text x="86.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="420" width="4" height="15" fill="rgb(208,216,52)"/><text x="86.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.34%)</title><rect x="83" y="436" width="4" height="15" fill="rgb(235,36,4)"/><text x="86.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="452" width="4" height="15" fill="rgb(211,133,30)"/><text x="86.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="468" width="4" height="15" fill="rgb(240,101,4)"/><text x="86.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="484" width="4" height="15" fill="rgb(247,115,8)"/><text x="86.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="83" y="500" width="4" height="15" fill="rgb(234,10,34)"/><text x="86.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="83" y="516" width="4" height="15" fill="rgb(238,82,10)"/><text x="86.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.34%)</title><rect x="83" y="532" width="4" height="15" fill="rgb(220,200,25)"/><text x="86.00" y="542.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.34%)</title><rect x="87" y="372" width="4" height="15" fill="rgb(205,188,51)"/><text x="90.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="388" width="4" height="15" fill="rgb(232,109,2)"/><text x="90.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="404" width="4" height="15" fill="rgb(226,155,38)"/><text x="90.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="420" width="4" height="15" fill="rgb(205,186,3)"/><text x="90.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="436" width="4" height="15" fill="rgb(247,202,9)"/><text x="90.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="452" width="4" height="15" fill="rgb(252,182,12)"/><text x="90.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="87" y="468" width="4" height="15" fill="rgb(212,227,24)"/><text x="90.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="87" y="484" width="4" height="15" fill="rgb(221,104,8)"/><text x="90.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.34%)</title><rect x="87" y="500" width="4" height="15" fill="rgb(228,219,10)"/><text x="90.00" y="510.50"></text></g><g><title>add_newdoc_for_scalar_type (numpy/core/_add_newdocs.py) (1 samples, 0.34%)</title><rect x="87" y="516" width="4" height="15" fill="rgb(225,140,7)"/><text x="90.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="68" width="85" height="15" fill="rgb(233,19,27)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="84" width="85" height="15" fill="rgb(225,72,18)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="100" width="85" height="15" fill="rgb(233,58,4)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 7.24%)</title><rect x="10" y="116" width="85" height="15" fill="rgb(228,40,28)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="132" width="85" height="15" fill="rgb(248,129,26)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (21 samples, 7.24%)</title><rect x="10" y="148" width="85" height="15" fill="rgb(218,114,8)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="164" width="85" height="15" fill="rgb(228,52,27)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 7.24%)</title><rect x="10" y="180" width="85" height="15" fill="rgb(225,0,16)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.07%)</title><rect x="71" y="196" width="24" height="15" fill="rgb(216,152,24)"/><text x="74.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.07%)</title><rect x="71" y="212" width="24" height="15" fill="rgb(248,62,17)"/><text x="74.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.07%)</title><rect x="71" y="228" width="24" height="15" fill="rgb(232,154,28)"/><text x="74.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 1.03%)</title><rect x="83" y="244" width="12" height="15" fill="rgb(207,87,17)"/><text x="86.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="260" width="8" height="15" fill="rgb(219,199,1)"/><text x="90.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="276" width="8" height="15" fill="rgb(234,92,5)"/><text x="90.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="292" width="8" height="15" fill="rgb(246,10,23)"/><text x="90.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="308" width="8" height="15" fill="rgb(229,88,53)"/><text x="90.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="324" width="8" height="15" fill="rgb(205,199,45)"/><text x="90.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="87" y="340" width="8" height="15" fill="rgb(234,136,11)"/><text x="90.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="87" y="356" width="8" height="15" fill="rgb(212,169,26)"/><text x="90.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.34%)</title><rect x="91" y="372" width="4" height="15" fill="rgb(222,167,2)"/><text x="94.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="388" width="4" height="15" fill="rgb(206,17,36)"/><text x="94.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="404" width="4" height="15" fill="rgb(234,151,5)"/><text x="94.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="420" width="4" height="15" fill="rgb(244,43,44)"/><text x="94.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="91" y="436" width="4" height="15" fill="rgb(249,160,52)"/><text x="94.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="452" width="4" height="15" fill="rgb(222,85,24)"/><text x="94.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.34%)</title><rect x="91" y="468" width="4" height="15" fill="rgb(243,160,7)"/><text x="94.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="484" width="4" height="15" fill="rgb(225,58,2)"/><text x="94.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="500" width="4" height="15" fill="rgb(220,132,22)"/><text x="94.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="516" width="4" height="15" fill="rgb(234,111,22)"/><text x="94.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="91" y="532" width="4" height="15" fill="rgb(216,157,44)"/><text x="94.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="548" width="4" height="15" fill="rgb(220,16,5)"/><text x="94.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.34%)</title><rect x="91" y="564" width="4" height="15" fill="rgb(209,226,49)"/><text x="94.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="580" width="4" height="15" fill="rgb(211,155,49)"/><text x="94.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="596" width="4" height="15" fill="rgb(245,59,27)"/><text x="94.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="612" width="4" height="15" fill="rgb(205,214,5)"/><text x="94.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="91" y="628" width="4" height="15" fill="rgb(231,39,9)"/><text x="94.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="644" width="4" height="15" fill="rgb(208,159,22)"/><text x="94.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.34%)</title><rect x="91" y="660" width="4" height="15" fill="rgb(248,212,41)"/><text x="94.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="676" width="4" height="15" fill="rgb(205,82,33)"/><text x="94.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="692" width="4" height="15" fill="rgb(207,130,53)"/><text x="94.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="708" width="4" height="15" fill="rgb(213,14,46)"/><text x="94.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="91" y="724" width="4" height="15" fill="rgb(209,61,23)"/><text x="94.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="740" width="4" height="15" fill="rgb(246,125,50)"/><text x="94.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.34%)</title><rect x="91" y="756" width="4" height="15" fill="rgb(241,122,30)"/><text x="94.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="772" width="4" height="15" fill="rgb(220,113,6)"/><text x="94.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="788" width="4" height="15" fill="rgb(233,179,47)"/><text x="94.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="804" width="4" height="15" fill="rgb(250,179,35)"/><text x="94.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="91" y="820" width="4" height="15" fill="rgb(215,72,16)"/><text x="94.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="91" y="836" width="4" height="15" fill="rgb(245,184,6)"/><text x="94.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.34%)</title><rect x="91" y="852" width="4" height="15" fill="rgb(231,211,3)"/><text x="94.00" y="862.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.34%)</title><rect x="91" y="868" width="4" height="15" fill="rgb(221,104,41)"/><text x="94.00" y="878.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="95" y="116" width="4" height="15" fill="rgb(220,176,34)"/><text x="98.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="95" y="132" width="4" height="15" fill="rgb(241,227,14)"/><text x="98.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="95" y="148" width="4" height="15" fill="rgb(224,134,36)"/><text x="98.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="132" y="180" width="4" height="15" fill="rgb(222,22,41)"/><text x="135.00" y="190.50"></text></g><g><title>0x7f206ae17ff9 (?) (1 samples, 0.34%)</title><rect x="152" y="212" width="4" height="15" fill="rgb(211,204,42)"/><text x="155.00" y="222.50"></text></g><g><title>0x7f206ae12ef6 (?) (1 samples, 0.34%)</title><rect x="152" y="228" width="4" height="15" fill="rgb(252,115,33)"/><text x="155.00" y="238.50"></text></g><g><title>0x7f206ae082cc (?) (1 samples, 0.34%)</title><rect x="152" y="244" width="4" height="15" fill="rgb(205,211,24)"/><text x="155.00" y="254.50"></text></g><g><title>0x7f206ae25274 (?) (1 samples, 0.34%)</title><rect x="152" y="260" width="4" height="15" fill="rgb(236,102,36)"/><text x="155.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.34%)</title><rect x="152" y="276" width="4" height="15" fill="rgb(220,128,24)"/><text x="155.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="152" y="292" width="4" height="15" fill="rgb(248,92,34)"/><text x="155.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.03%)</title><rect x="156" y="212" width="12" height="15" fill="rgb(220,109,15)"/><text x="159.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="228" width="4" height="15" fill="rgb(228,164,16)"/><text x="167.00" y="238.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="164" y="244" width="4" height="15" fill="rgb(221,32,10)"/><text x="167.00" y="254.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="168" y="260" width="4" height="15" fill="rgb(222,180,16)"/><text x="171.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="172" y="260" width="4" height="15" fill="rgb(217,175,15)"/><text x="175.00" y="270.50"></text></g><g><title>0x7f20aa56ebe8 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="176" y="292" width="4" height="15" fill="rgb(216,132,36)"/><text x="179.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="180" y="292" width="4" height="15" fill="rgb(220,42,33)"/><text x="183.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="180" y="308" width="4" height="15" fill="rgb(218,163,41)"/><text x="183.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="180" y="324" width="4" height="15" fill="rgb(238,45,30)"/><text x="183.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="184" y="292" width="5" height="15" fill="rgb(246,132,42)"/><text x="187.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="197" y="356" width="8" height="15" fill="rgb(217,83,43)"/><text x="200.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="201" y="372" width="4" height="15" fill="rgb(205,146,50)"/><text x="204.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="201" y="388" width="4" height="15" fill="rgb(212,47,50)"/><text x="204.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="201" y="404" width="4" height="15" fill="rgb(238,47,29)"/><text x="204.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="201" y="420" width="4" height="15" fill="rgb(229,204,28)"/><text x="204.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="193" y="340" width="16" height="15" fill="rgb(208,208,45)"/><text x="196.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="205" y="356" width="4" height="15" fill="rgb(237,90,17)"/><text x="208.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="205" y="372" width="4" height="15" fill="rgb(244,77,23)"/><text x="208.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="205" y="388" width="4" height="15" fill="rgb(216,5,47)"/><text x="208.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="205" y="404" width="4" height="15" fill="rgb(235,70,8)"/><text x="208.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="205" y="420" width="4" height="15" fill="rgb(208,19,44)"/><text x="208.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="209" y="340" width="4" height="15" fill="rgb(217,37,24)"/><text x="212.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="209" y="356" width="4" height="15" fill="rgb(247,83,37)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="209" y="372" width="4" height="15" fill="rgb(230,8,46)"/><text x="212.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="217" y="356" width="4" height="15" fill="rgb(236,84,25)"/><text x="220.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="452" width="4" height="15" fill="rgb(213,44,26)"/><text x="224.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="468" width="4" height="15" fill="rgb(215,133,25)"/><text x="224.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="484" width="4" height="15" fill="rgb(244,223,50)"/><text x="224.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="500" width="4" height="15" fill="rgb(232,24,19)"/><text x="224.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="516" width="4" height="15" fill="rgb(216,55,23)"/><text x="224.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="221" y="532" width="4" height="15" fill="rgb(229,134,4)"/><text x="224.00" y="542.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.38%)</title><rect x="213" y="340" width="16" height="15" fill="rgb(234,192,51)"/><text x="216.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="356" width="8" height="15" fill="rgb(232,26,17)"/><text x="224.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="372" width="8" height="15" fill="rgb(227,41,13)"/><text x="224.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="388" width="8" height="15" fill="rgb(208,148,46)"/><text x="224.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="404" width="8" height="15" fill="rgb(211,76,50)"/><text x="224.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="420" width="8" height="15" fill="rgb(254,112,13)"/><text x="224.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="221" y="436" width="8" height="15" fill="rgb(224,40,48)"/><text x="224.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="225" y="452" width="4" height="15" fill="rgb(206,57,50)"/><text x="228.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="225" y="468" width="4" height="15" fill="rgb(225,139,25)"/><text x="228.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.83%)</title><rect x="176" y="260" width="57" height="15" fill="rgb(229,184,46)"/><text x="179.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.83%)</title><rect x="176" y="276" width="57" height="15" fill="rgb(221,154,53)"/><text x="179.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.79%)</title><rect x="189" y="292" width="44" height="15" fill="rgb(230,36,13)"/><text x="192.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.79%)</title><rect x="189" y="308" width="44" height="15" fill="rgb(240,151,17)"/><text x="192.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.79%)</title><rect x="189" y="324" width="44" height="15" fill="rgb(246,14,44)"/><text x="192.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="340" width="4" height="15" fill="rgb(222,225,23)"/><text x="232.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="356" width="4" height="15" fill="rgb(253,98,38)"/><text x="232.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="372" width="4" height="15" fill="rgb(250,151,38)"/><text x="232.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="388" width="4" height="15" fill="rgb(224,135,29)"/><text x="232.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="404" width="4" height="15" fill="rgb(236,10,29)"/><text x="232.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="420" width="4" height="15" fill="rgb(209,203,11)"/><text x="232.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="436" width="4" height="15" fill="rgb(209,215,25)"/><text x="232.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="452" width="4" height="15" fill="rgb(219,71,8)"/><text x="232.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="468" width="4" height="15" fill="rgb(225,208,7)"/><text x="232.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="484" width="4" height="15" fill="rgb(217,67,7)"/><text x="232.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="229" y="500" width="4" height="15" fill="rgb(222,6,24)"/><text x="232.00" y="510.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="233" y="260" width="4" height="15" fill="rgb(254,94,22)"/><text x="236.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="233" y="276" width="4" height="15" fill="rgb(246,93,21)"/><text x="236.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="237" y="260" width="4" height="15" fill="rgb(229,9,29)"/><text x="240.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="241" y="260" width="4" height="15" fill="rgb(224,152,33)"/><text x="244.00" y="270.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="245" y="260" width="5" height="15" fill="rgb(208,142,16)"/><text x="248.00" y="270.50"></text></g><g><title>0x7f20aa58f120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="245" y="276" width="5" height="15" fill="rgb(254,35,49)"/><text x="248.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="250" y="372" width="4" height="15" fill="rgb(221,129,25)"/><text x="253.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.59%)</title><rect x="168" y="244" width="90" height="15" fill="rgb(234,212,20)"/><text x="171.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="260" width="8" height="15" fill="rgb(243,182,9)"/><text x="253.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="276" width="8" height="15" fill="rgb(252,76,32)"/><text x="253.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="292" width="8" height="15" fill="rgb(225,122,35)"/><text x="253.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="308" width="8" height="15" fill="rgb(225,75,17)"/><text x="253.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="324" width="8" height="15" fill="rgb(247,182,22)"/><text x="253.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="340" width="8" height="15" fill="rgb(213,160,24)"/><text x="253.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.69%)</title><rect x="250" y="356" width="8" height="15" fill="rgb(214,77,16)"/><text x="253.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="254" y="372" width="4" height="15" fill="rgb(226,161,37)"/><text x="257.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="254" y="388" width="4" height="15" fill="rgb(217,88,31)"/><text x="257.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="258" y="244" width="4" height="15" fill="rgb(253,224,14)"/><text x="261.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="258" y="260" width="4" height="15" fill="rgb(254,161,13)"/><text x="261.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (41 samples, 14.14%)</title><rect x="99" y="132" width="167" height="15" fill="rgb(252,71,0)"/><text x="102.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (39 samples, 13.45%)</title><rect x="107" y="148" width="159" height="15" fill="rgb(223,168,4)"/><text x="110.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (37 samples, 12.76%)</title><rect x="115" y="164" width="151" height="15" fill="rgb(215,8,48)"/><text x="118.00" y="174.50">_run_whole_runtime ..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (32 samples, 11.03%)</title><rect x="136" y="180" width="130" height="15" fill="rgb(244,63,42)"/><text x="139.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 10.69%)</title><rect x="140" y="196" width="126" height="15" fill="rgb(254,99,29)"/><text x="143.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 8.28%)</title><rect x="168" y="212" width="98" height="15" fill="rgb(225,91,41)"/><text x="171.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 8.28%)</title><rect x="168" y="228" width="98" height="15" fill="rgb(217,59,4)"/><text x="171.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="262" y="244" width="4" height="15" fill="rgb(228,90,5)"/><text x="265.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (43 samples, 14.83%)</title><rect x="95" y="68" width="175" height="15" fill="rgb(215,190,47)"/><text x="98.00" y="78.50">profile_ort (bench_Log..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (43 samples, 14.83%)</title><rect x="95" y="84" width="175" height="15" fill="rgb(219,85,33)"/><text x="98.00" y="94.50">setup_profile (bench_L..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (43 samples, 14.83%)</title><rect x="95" y="100" width="175" height="15" fill="rgb(213,60,11)"/><text x="98.00" y="110.50">profile (bench_Logisti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (42 samples, 14.48%)</title><rect x="99" y="116" width="171" height="15" fill="rgb(210,180,49)"/><text x="102.00" y="126.50">time_predict (mlprodic..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="266" y="132" width="4" height="15" fill="rgb(236,228,54)"/><text x="269.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="274" y="116" width="4" height="15" fill="rgb(210,38,7)"/><text x="277.00" y="126.50"></text></g><g><title>0x7f20aa56e998 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="274" y="132" width="4" height="15" fill="rgb(210,181,19)"/><text x="277.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="327" y="180" width="4" height="15" fill="rgb(231,112,35)"/><text x="330.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="376" y="196" width="4" height="15" fill="rgb(231,72,16)"/><text x="379.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.34%)</title><rect x="388" y="212" width="4" height="15" fill="rgb(222,40,25)"/><text x="391.00" y="222.50"></text></g><g><title>0x7f20aa64c130 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="420" y="244" width="5" height="15" fill="rgb(245,67,24)"/><text x="423.00" y="254.50"></text></g><g><title>0x7f20a97911c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="437" y="372" width="4" height="15" fill="rgb(218,59,25)"/><text x="440.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="441" y="372" width="4" height="15" fill="rgb(208,61,39)"/><text x="444.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="441" y="388" width="4" height="15" fill="rgb(217,196,6)"/><text x="444.00" y="398.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="441" y="404" width="4" height="15" fill="rgb(227,28,39)"/><text x="444.00" y="414.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 2.07%)</title><rect x="425" y="244" width="24" height="15" fill="rgb(218,72,20)"/><text x="428.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.72%)</title><rect x="429" y="260" width="20" height="15" fill="rgb(211,182,44)"/><text x="432.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 1.38%)</title><rect x="433" y="276" width="16" height="15" fill="rgb(227,47,28)"/><text x="436.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.38%)</title><rect x="433" y="292" width="16" height="15" fill="rgb(217,141,32)"/><text x="436.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 1.03%)</title><rect x="437" y="308" width="12" height="15" fill="rgb(218,137,41)"/><text x="440.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 1.03%)</title><rect x="437" y="324" width="12" height="15" fill="rgb(253,83,45)"/><text x="440.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 1.03%)</title><rect x="437" y="340" width="12" height="15" fill="rgb(252,217,47)"/><text x="440.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.03%)</title><rect x="437" y="356" width="12" height="15" fill="rgb(243,23,10)"/><text x="440.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="445" y="372" width="4" height="15" fill="rgb(206,22,33)"/><text x="448.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="469" y="340" width="4" height="15" fill="rgb(242,98,12)"/><text x="472.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.34%)</title><rect x="473" y="340" width="4" height="15" fill="rgb(215,127,26)"/><text x="476.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.72%)</title><rect x="461" y="308" width="20" height="15" fill="rgb(236,129,7)"/><text x="464.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.38%)</title><rect x="465" y="324" width="16" height="15" fill="rgb(212,166,13)"/><text x="468.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.34%)</title><rect x="477" y="340" width="4" height="15" fill="rgb(246,69,5)"/><text x="480.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="477" y="356" width="4" height="15" fill="rgb(214,112,48)"/><text x="480.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="477" y="372" width="4" height="15" fill="rgb(225,59,18)"/><text x="480.00" y="382.50"></text></g><g><title>sgemv_kernel_4x2 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.34%)</title><rect x="477" y="388" width="4" height="15" fill="rgb(221,83,42)"/><text x="480.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.07%)</title><rect x="461" y="276" width="25" height="15" fill="rgb(238,120,33)"/><text x="464.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 2.07%)</title><rect x="461" y="292" width="25" height="15" fill="rgb(227,84,33)"/><text x="464.00" y="302.50">a..</text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.34%)</title><rect x="481" y="308" width="5" height="15" fill="rgb(240,178,53)"/><text x="484.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 3.45%)</title><rect x="449" y="244" width="41" height="15" fill="rgb(249,57,31)"/><text x="452.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 2.41%)</title><rect x="461" y="260" width="29" height="15" fill="rgb(226,140,42)"/><text x="464.00" y="270.50">do..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.34%)</title><rect x="486" y="276" width="4" height="15" fill="rgb(216,193,35)"/><text x="489.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.69%)</title><rect x="490" y="260" width="8" height="15" fill="rgb(219,110,7)"/><text x="493.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.69%)</title><rect x="490" y="276" width="8" height="15" fill="rgb(227,197,33)"/><text x="493.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.69%)</title><rect x="490" y="292" width="8" height="15" fill="rgb(212,68,26)"/><text x="493.00" y="302.50"></text></g><g><title>0x7f20aa584e54 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="494" y="308" width="4" height="15" fill="rgb(220,35,43)"/><text x="497.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.34%)</title><rect x="502" y="324" width="4" height="15" fill="rgb(252,222,45)"/><text x="505.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="502" y="340" width="4" height="15" fill="rgb(241,2,33)"/><text x="505.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="506" y="356" width="4" height="15" fill="rgb(232,182,28)"/><text x="509.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="506" y="372" width="4" height="15" fill="rgb(254,33,3)"/><text x="509.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.03%)</title><rect x="502" y="292" width="12" height="15" fill="rgb(232,127,3)"/><text x="505.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.03%)</title><rect x="502" y="308" width="12" height="15" fill="rgb(209,89,49)"/><text x="505.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.69%)</title><rect x="506" y="324" width="8" height="15" fill="rgb(224,92,3)"/><text x="509.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.69%)</title><rect x="506" y="340" width="8" height="15" fill="rgb(251,149,1)"/><text x="509.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="510" y="356" width="4" height="15" fill="rgb(211,23,48)"/><text x="513.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.34%)</title><rect x="514" y="324" width="4" height="15" fill="rgb(236,48,26)"/><text x="517.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="518" y="324" width="4" height="15" fill="rgb(210,145,50)"/><text x="521.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.03%)</title><rect x="514" y="308" width="12" height="15" fill="rgb(219,185,51)"/><text x="517.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="522" y="324" width="4" height="15" fill="rgb(222,36,35)"/><text x="525.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.38%)</title><rect x="514" y="292" width="16" height="15" fill="rgb(239,117,24)"/><text x="517.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.34%)</title><rect x="526" y="308" width="4" height="15" fill="rgb(233,2,44)"/><text x="529.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="526" y="324" width="4" height="15" fill="rgb(211,83,15)"/><text x="529.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.76%)</title><rect x="502" y="276" width="32" height="15" fill="rgb(235,77,50)"/><text x="505.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="530" y="292" width="4" height="15" fill="rgb(251,122,29)"/><text x="533.00" y="302.50"></text></g><g><title>0x7f208c97333d (?) (1 samples, 0.34%)</title><rect x="530" y="308" width="4" height="15" fill="rgb(226,204,27)"/><text x="533.00" y="318.50"></text></g><g><title>0x7f208c995214 (?) (1 samples, 0.34%)</title><rect x="530" y="324" width="4" height="15" fill="rgb(247,153,24)"/><text x="533.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.34%)</title><rect x="530" y="340" width="4" height="15" fill="rgb(234,185,44)"/><text x="533.00" y="350.50"></text></g><g><title>0x7f20aa6ede00 (libm-2.29.so) (1 samples, 0.34%)</title><rect x="530" y="356" width="4" height="15" fill="rgb(216,28,54)"/><text x="533.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (36 samples, 12.41%)</title><rect x="392" y="228" width="146" height="15" fill="rgb(220,22,54)"/><text x="395.00" y="238.50">_run (mlprodict/on..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 4.14%)</title><rect x="490" y="244" width="48" height="15" fill="rgb(223,66,53)"/><text x="493.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 3.45%)</title><rect x="498" y="260" width="40" height="15" fill="rgb(239,186,54)"/><text x="501.00" y="270.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="534" y="276" width="4" height="15" fill="rgb(210,216,46)"/><text x="537.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.03%)</title><rect x="559" y="324" width="12" height="15" fill="rgb(232,58,39)"/><text x="562.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.03%)</title><rect x="559" y="340" width="12" height="15" fill="rgb(209,129,13)"/><text x="562.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 1.03%)</title><rect x="559" y="356" width="12" height="15" fill="rgb(248,217,19)"/><text x="562.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 1.03%)</title><rect x="559" y="372" width="12" height="15" fill="rgb(218,32,51)"/><text x="562.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 1.03%)</title><rect x="559" y="388" width="12" height="15" fill="rgb(205,60,34)"/><text x="562.00" y="398.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.34%)</title><rect x="575" y="388" width="4" height="15" fill="rgb(217,160,14)"/><text x="578.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.69%)</title><rect x="575" y="372" width="8" height="15" fill="rgb(231,116,36)"/><text x="578.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="579" y="388" width="4" height="15" fill="rgb(218,115,53)"/><text x="582.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.34%)</title><rect x="583" y="404" width="4" height="15" fill="rgb(207,148,48)"/><text x="586.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="587" y="436" width="4" height="15" fill="rgb(254,105,35)"/><text x="590.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.69%)</title><rect x="587" y="404" width="8" height="15" fill="rgb(221,113,39)"/><text x="590.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="587" y="420" width="8" height="15" fill="rgb(221,4,22)"/><text x="590.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="591" y="436" width="4" height="15" fill="rgb(215,151,27)"/><text x="594.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.34%)</title><rect x="591" y="452" width="4" height="15" fill="rgb(247,225,35)"/><text x="594.00" y="462.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 1.38%)</title><rect x="583" y="372" width="17" height="15" fill="rgb(218,6,35)"/><text x="586.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 1.38%)</title><rect x="583" y="388" width="17" height="15" fill="rgb(253,71,28)"/><text x="586.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="595" y="404" width="5" height="15" fill="rgb(227,89,4)"/><text x="598.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="595" y="420" width="5" height="15" fill="rgb(216,223,0)"/><text x="598.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.41%)</title><rect x="575" y="356" width="29" height="15" fill="rgb(216,76,19)"/><text x="578.00" y="366.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="600" y="372" width="4" height="15" fill="rgb(225,92,19)"/><text x="603.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="600" y="388" width="4" height="15" fill="rgb(208,82,51)"/><text x="603.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="600" y="404" width="4" height="15" fill="rgb(236,128,32)"/><text x="603.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="600" y="420" width="4" height="15" fill="rgb(235,118,37)"/><text x="603.00" y="430.50"></text></g><g><title>array_sum (methods.c) (15 samples, 5.17%)</title><rect x="547" y="260" width="61" height="15" fill="rgb(236,52,34)"/><text x="550.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 5.17%)</title><rect x="547" y="276" width="61" height="15" fill="rgb(219,149,8)"/><text x="550.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 4.48%)</title><rect x="555" y="292" width="53" height="15" fill="rgb(225,152,40)"/><text x="558.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 4.14%)</title><rect x="559" y="308" width="49" height="15" fill="rgb(214,175,13)"/><text x="562.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.10%)</title><rect x="571" y="324" width="37" height="15" fill="rgb(250,37,16)"/><text x="574.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 2.76%)</title><rect x="575" y="340" width="33" height="15" fill="rgb(221,180,45)"/><text x="578.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="604" y="356" width="4" height="15" fill="rgb(247,181,54)"/><text x="607.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="604" y="372" width="4" height="15" fill="rgb(217,130,15)"/><text x="607.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="604" y="388" width="4" height="15" fill="rgb(234,81,15)"/><text x="607.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="604" y="404" width="4" height="15" fill="rgb(243,55,23)"/><text x="607.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.34%)</title><rect x="620" y="276" width="4" height="15" fill="rgb(233,81,10)"/><text x="623.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.34%)</title><rect x="620" y="292" width="4" height="15" fill="rgb(249,113,29)"/><text x="623.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="620" y="308" width="4" height="15" fill="rgb(218,93,52)"/><text x="623.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="620" y="324" width="4" height="15" fill="rgb(224,195,12)"/><text x="623.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="624" y="292" width="4" height="15" fill="rgb(224,33,8)"/><text x="627.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="628" y="308" width="4" height="15" fill="rgb(210,128,14)"/><text x="631.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="628" y="324" width="4" height="15" fill="rgb(216,120,4)"/><text x="631.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="628" y="340" width="4" height="15" fill="rgb(228,168,36)"/><text x="631.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="628" y="356" width="4" height="15" fill="rgb(251,169,42)"/><text x="631.00" y="366.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.34%)</title><rect x="636" y="340" width="4" height="15" fill="rgb(218,170,25)"/><text x="639.00" y="350.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="636" y="356" width="4" height="15" fill="rgb(232,215,20)"/><text x="639.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.38%)</title><rect x="628" y="292" width="16" height="15" fill="rgb(208,103,26)"/><text x="631.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.03%)</title><rect x="632" y="308" width="12" height="15" fill="rgb(205,124,14)"/><text x="635.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.69%)</title><rect x="636" y="324" width="8" height="15" fill="rgb(244,196,18)"/><text x="639.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="640" y="340" width="4" height="15" fill="rgb(236,6,26)"/><text x="643.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (93 samples, 32.07%)</title><rect x="270" y="100" width="378" height="15" fill="rgb(232,146,6)"/><text x="273.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (91 samples, 31.38%)</title><rect x="278" y="116" width="370" height="15" fill="rgb(240,63,19)"/><text x="281.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (90 samples, 31.03%)</title><rect x="282" y="132" width="366" height="15" fill="rgb(240,128,37)"/><text x="285.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (88 samples, 30.34%)</title><rect x="290" y="148" width="358" height="15" fill="rgb(225,217,26)"/><text x="293.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (85 samples, 29.31%)</title><rect x="302" y="164" width="346" height="15" fill="rgb(207,32,10)"/><text x="305.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (78 samples, 26.90%)</title><rect x="331" y="180" width="317" height="15" fill="rgb(244,94,41)"/><text x="334.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (66 samples, 22.76%)</title><rect x="380" y="196" width="268" height="15" fill="rgb(251,102,40)"/><text x="383.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (63 samples, 21.72%)</title><rect x="392" y="212" width="256" height="15" fill="rgb(240,86,54)"/><text x="395.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (27 samples, 9.31%)</title><rect x="538" y="228" width="110" height="15" fill="rgb(236,69,18)"/><text x="541.00" y="238.50">_run (mlprodi..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (26 samples, 8.97%)</title><rect x="543" y="244" width="105" height="15" fill="rgb(230,25,44)"/><text x="546.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.45%)</title><rect x="608" y="260" width="40" height="15" fill="rgb(207,29,1)"/><text x="611.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.07%)</title><rect x="624" y="276" width="24" height="15" fill="rgb(253,228,11)"/><text x="627.00" y="286.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="644" y="292" width="4" height="15" fill="rgb(249,89,13)"/><text x="647.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="644" y="308" width="4" height="15" fill="rgb(242,169,5)"/><text x="647.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (94 samples, 32.41%)</title><rect x="270" y="68" width="382" height="15" fill="rgb(253,64,44)"/><text x="273.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (94 samples, 32.41%)</title><rect x="270" y="84" width="382" height="15" fill="rgb(237,115,19)"/><text x="273.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="648" y="100" width="4" height="15" fill="rgb(216,117,41)"/><text x="651.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="648" y="116" width="4" height="15" fill="rgb(214,11,42)"/><text x="651.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="648" y="132" width="4" height="15" fill="rgb(211,87,15)"/><text x="651.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="648" y="148" width="4" height="15" fill="rgb(230,211,11)"/><text x="651.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="648" y="164" width="4" height="15" fill="rgb(244,2,2)"/><text x="651.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="648" y="180" width="4" height="15" fill="rgb(226,87,3)"/><text x="651.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.34%)</title><rect x="648" y="196" width="4" height="15" fill="rgb(215,199,39)"/><text x="651.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="212" width="4" height="15" fill="rgb(243,227,44)"/><text x="651.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="228" width="4" height="15" fill="rgb(207,183,32)"/><text x="651.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="244" width="4" height="15" fill="rgb(248,137,47)"/><text x="651.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="648" y="260" width="4" height="15" fill="rgb(245,105,7)"/><text x="651.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="276" width="4" height="15" fill="rgb(246,144,31)"/><text x="651.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.34%)</title><rect x="648" y="292" width="4" height="15" fill="rgb(252,203,32)"/><text x="651.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="308" width="4" height="15" fill="rgb(239,92,10)"/><text x="651.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="324" width="4" height="15" fill="rgb(206,132,53)"/><text x="651.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="340" width="4" height="15" fill="rgb(219,130,0)"/><text x="651.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="648" y="356" width="4" height="15" fill="rgb(219,122,46)"/><text x="651.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="372" width="4" height="15" fill="rgb(249,51,52)"/><text x="651.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.34%)</title><rect x="648" y="388" width="4" height="15" fill="rgb(229,63,46)"/><text x="651.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="404" width="4" height="15" fill="rgb(235,32,20)"/><text x="651.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="420" width="4" height="15" fill="rgb(250,140,35)"/><text x="651.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="436" width="4" height="15" fill="rgb(254,30,32)"/><text x="651.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="648" y="452" width="4" height="15" fill="rgb(228,216,23)"/><text x="651.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="648" y="468" width="4" height="15" fill="rgb(246,69,7)"/><text x="651.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.34%)</title><rect x="648" y="484" width="4" height="15" fill="rgb(232,160,53)"/><text x="651.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.34%)</title><rect x="648" y="500" width="4" height="15" fill="rgb(218,116,40)"/><text x="651.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="648" y="516" width="4" height="15" fill="rgb(228,90,26)"/><text x="651.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="648" y="532" width="4" height="15" fill="rgb(211,63,30)"/><text x="651.00" y="542.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="648" y="548" width="4" height="15" fill="rgb(219,32,48)"/><text x="651.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="648" y="564" width="4" height="15" fill="rgb(254,149,2)"/><text x="651.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="648" y="580" width="4" height="15" fill="rgb(252,189,18)"/><text x="651.00" y="590.50"></text></g><g><title>0x7f20aa58f1d6 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="697" y="180" width="4" height="15" fill="rgb(222,16,1)"/><text x="700.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.34%)</title><rect x="705" y="196" width="4" height="15" fill="rgb(244,75,23)"/><text x="708.00" y="206.50"></text></g><g><title>0x7f20a97903d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="705" y="212" width="4" height="15" fill="rgb(207,168,30)"/><text x="708.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.38%)</title><rect x="701" y="180" width="17" height="15" fill="rgb(235,173,53)"/><text x="704.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.69%)</title><rect x="709" y="196" width="9" height="15" fill="rgb(211,41,39)"/><text x="712.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.34%)</title><rect x="713" y="212" width="5" height="15" fill="rgb(216,172,50)"/><text x="716.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="713" y="228" width="5" height="15" fill="rgb(206,96,27)"/><text x="716.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.34%)</title><rect x="713" y="244" width="5" height="15" fill="rgb(241,40,21)"/><text x="716.00" y="254.50"></text></g><g><title>0x7f20a97919d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="718" y="276" width="4" height="15" fill="rgb(222,226,36)"/><text x="721.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.03%)</title><rect x="718" y="244" width="12" height="15" fill="rgb(249,92,32)"/><text x="721.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.03%)</title><rect x="718" y="260" width="12" height="15" fill="rgb(221,34,2)"/><text x="721.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.69%)</title><rect x="722" y="276" width="8" height="15" fill="rgb(231,204,0)"/><text x="725.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.69%)</title><rect x="722" y="292" width="8" height="15" fill="rgb(233,32,8)"/><text x="725.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.69%)</title><rect x="722" y="308" width="8" height="15" fill="rgb(234,139,35)"/><text x="725.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="738" y="308" width="4" height="15" fill="rgb(208,194,30)"/><text x="741.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.69%)</title><rect x="742" y="308" width="8" height="15" fill="rgb(243,202,19)"/><text x="745.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.38%)</title><rect x="738" y="292" width="16" height="15" fill="rgb(206,161,28)"/><text x="741.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="750" y="308" width="4" height="15" fill="rgb(211,139,22)"/><text x="753.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.34%)</title><rect x="750" y="324" width="4" height="15" fill="rgb(211,5,17)"/><text x="753.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="750" y="340" width="4" height="15" fill="rgb(234,199,26)"/><text x="753.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.34%)</title><rect x="754" y="292" width="4" height="15" fill="rgb(235,111,11)"/><text x="757.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.34%)</title><rect x="754" y="308" width="4" height="15" fill="rgb(226,192,25)"/><text x="757.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="754" y="324" width="4" height="15" fill="rgb(234,106,1)"/><text x="757.00" y="334.50"></text></g><g><title>0x7f20aa58ed62 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="754" y="340" width="4" height="15" fill="rgb(205,204,35)"/><text x="757.00" y="350.50"></text></g><g><title>array_sum (methods.c) (11 samples, 3.79%)</title><rect x="718" y="180" width="44" height="15" fill="rgb(248,10,24)"/><text x="721.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 3.79%)</title><rect x="718" y="196" width="44" height="15" fill="rgb(241,153,0)"/><text x="721.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 3.79%)</title><rect x="718" y="212" width="44" height="15" fill="rgb(248,19,35)"/><text x="721.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 3.79%)</title><rect x="718" y="228" width="44" height="15" fill="rgb(243,41,28)"/><text x="721.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 2.76%)</title><rect x="730" y="244" width="32" height="15" fill="rgb(207,216,48)"/><text x="733.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 2.41%)</title><rect x="734" y="260" width="28" height="15" fill="rgb(223,81,25)"/><text x="737.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.41%)</title><rect x="734" y="276" width="28" height="15" fill="rgb(217,72,6)"/><text x="737.00" y="286.50">P..</text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.34%)</title><rect x="758" y="292" width="4" height="15" fill="rgb(243,145,24)"/><text x="761.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="787" y="196" width="4" height="15" fill="rgb(236,187,51)"/><text x="790.00" y="206.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.34%)</title><rect x="795" y="292" width="4" height="15" fill="rgb(240,213,18)"/><text x="798.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.69%)</title><rect x="795" y="276" width="8" height="15" fill="rgb(252,198,48)"/><text x="798.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="799" y="292" width="4" height="15" fill="rgb(230,29,9)"/><text x="802.00" y="302.50"></text></g><g><title>array_add (number.c) (4 samples, 1.38%)</title><rect x="791" y="196" width="16" height="15" fill="rgb(219,9,48)"/><text x="794.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.38%)</title><rect x="791" y="212" width="16" height="15" fill="rgb(234,206,37)"/><text x="794.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.38%)</title><rect x="791" y="228" width="16" height="15" fill="rgb(217,17,15)"/><text x="794.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.03%)</title><rect x="795" y="244" width="12" height="15" fill="rgb(208,131,0)"/><text x="798.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.03%)</title><rect x="795" y="260" width="12" height="15" fill="rgb(233,35,22)"/><text x="798.00" y="270.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.34%)</title><rect x="803" y="276" width="4" height="15" fill="rgb(232,179,20)"/><text x="806.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.69%)</title><rect x="807" y="196" width="8" height="15" fill="rgb(240,94,34)"/><text x="810.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="811" y="212" width="4" height="15" fill="rgb(241,114,34)"/><text x="814.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.69%)</title><rect x="848" y="212" width="8" height="15" fill="rgb(241,94,19)"/><text x="851.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.34%)</title><rect x="856" y="212" width="4" height="15" fill="rgb(241,139,46)"/><text x="859.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="872" y="228" width="8" height="15" fill="rgb(216,14,5)"/><text x="875.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 2.07%)</title><rect x="860" y="212" width="24" height="15" fill="rgb(208,160,24)"/><text x="863.00" y="222.50">_..</text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.34%)</title><rect x="880" y="228" width="4" height="15" fill="rgb(226,81,36)"/><text x="883.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="884" y="212" width="4" height="15" fill="rgb(213,2,46)"/><text x="887.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.72%)</title><rect x="888" y="212" width="21" height="15" fill="rgb(251,184,19)"/><text x="891.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.34%)</title><rect x="905" y="228" width="4" height="15" fill="rgb(238,54,23)"/><text x="908.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.34%)</title><rect x="905" y="244" width="4" height="15" fill="rgb(232,146,17)"/><text x="908.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.34%)</title><rect x="909" y="212" width="4" height="15" fill="rgb(238,53,30)"/><text x="912.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 1.38%)</title><rect x="913" y="212" width="16" height="15" fill="rgb(244,100,23)"/><text x="916.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 1.03%)</title><rect x="917" y="228" width="12" height="15" fill="rgb(218,128,10)"/><text x="920.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (34 samples, 11.72%)</title><rect x="815" y="196" width="138" height="15" fill="rgb(244,156,13)"/><text x="818.00" y="206.50">check_array (skle..</text></g><g><title>simplefilter (warnings.py) (6 samples, 2.07%)</title><rect x="929" y="212" width="24" height="15" fill="rgb(231,60,52)"/><text x="932.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.07%)</title><rect x="929" y="228" width="24" height="15" fill="rgb(238,140,9)"/><text x="932.00" y="238.50">_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 3.45%)</title><rect x="953" y="196" width="41" height="15" fill="rgb(235,100,33)"/><text x="956.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.76%)</title><rect x="962" y="212" width="32" height="15" fill="rgb(247,229,27)"/><text x="965.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.69%)</title><rect x="986" y="228" width="8" height="15" fill="rgb(232,91,52)"/><text x="989.00" y="238.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.69%)</title><rect x="1006" y="212" width="9" height="15" fill="rgb(242,6,10)"/><text x="1009.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.34%)</title><rect x="1015" y="212" width="4" height="15" fill="rgb(232,223,18)"/><text x="1018.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.69%)</title><rect x="1019" y="260" width="8" height="15" fill="rgb(215,87,47)"/><text x="1022.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (2 samples, 0.69%)</title><rect x="1019" y="276" width="8" height="15" fill="rgb(241,18,16)"/><text x="1022.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.69%)</title><rect x="1019" y="292" width="8" height="15" fill="rgb(225,225,15)"/><text x="1022.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="1027" y="292" width="4" height="15" fill="rgb(223,176,26)"/><text x="1030.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.34%)</title><rect x="1027" y="308" width="4" height="15" fill="rgb(234,201,53)"/><text x="1030.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="1035" y="324" width="4" height="15" fill="rgb(248,167,38)"/><text x="1038.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.03%)</title><rect x="1031" y="292" width="12" height="15" fill="rgb(231,104,5)"/><text x="1034.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.03%)</title><rect x="1031" y="308" width="12" height="15" fill="rgb(245,22,27)"/><text x="1034.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="1039" y="324" width="4" height="15" fill="rgb(244,4,12)"/><text x="1042.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(254,87,4)"/><text x="1046.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 2.07%)</title><rect x="1027" y="260" width="24" height="15" fill="rgb(210,4,52)"/><text x="1030.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 2.07%)</title><rect x="1027" y="276" width="24" height="15" fill="rgb(211,2,7)"/><text x="1030.00" y="286.50">n..</text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1047" y="292" width="4" height="15" fill="rgb(252,119,23)"/><text x="1050.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1051" y="260" width="4" height="15" fill="rgb(243,51,42)"/><text x="1054.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="1051" y="276" width="4" height="15" fill="rgb(220,147,12)"/><text x="1054.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="1051" y="292" width="4" height="15" fill="rgb(232,211,51)"/><text x="1054.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="1051" y="308" width="4" height="15" fill="rgb(215,57,12)"/><text x="1054.00" y="318.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.34%)</title><rect x="1055" y="260" width="4" height="15" fill="rgb(228,125,16)"/><text x="1058.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1059" y="260" width="4" height="15" fill="rgb(252,73,27)"/><text x="1062.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (75 samples, 25.86%)</title><rect x="762" y="180" width="305" height="15" fill="rgb(232,159,54)"/><text x="765.00" y="190.50">decision_function (sklearn/linear_model/_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 6.21%)</title><rect x="994" y="196" width="73" height="15" fill="rgb(235,219,41)"/><text x="997.00" y="206.50">safe_spa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 4.14%)</title><rect x="1019" y="212" width="48" height="15" fill="rgb(211,122,35)"/><text x="1022.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 4.14%)</title><rect x="1019" y="228" width="48" height="15" fill="rgb(208,113,31)"/><text x="1022.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 4.14%)</title><rect x="1019" y="244" width="48" height="15" fill="rgb(226,101,31)"/><text x="1022.00" y="254.50">PyUF..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1063" y="260" width="4" height="15" fill="rgb(213,108,40)"/><text x="1066.00" y="270.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="1072" y="244" width="4" height="15" fill="rgb(238,195,9)"/><text x="1075.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.38%)</title><rect x="1067" y="196" width="17" height="15" fill="rgb(207,57,48)"/><text x="1070.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.38%)</title><rect x="1067" y="212" width="17" height="15" fill="rgb(245,215,10)"/><text x="1070.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (4 samples, 1.38%)</title><rect x="1067" y="228" width="17" height="15" fill="rgb(208,109,22)"/><text x="1070.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.69%)</title><rect x="1076" y="244" width="8" height="15" fill="rgb(230,174,47)"/><text x="1079.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.34%)</title><rect x="1084" y="228" width="4" height="15" fill="rgb(241,166,3)"/><text x="1087.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1084" y="244" width="4" height="15" fill="rgb(226,69,50)"/><text x="1087.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1084" y="260" width="4" height="15" fill="rgb(217,193,25)"/><text x="1087.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1084" y="276" width="4" height="15" fill="rgb(225,171,31)"/><text x="1087.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(215,176,39)"/><text x="1087.00" y="302.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1088" y="276" width="4" height="15" fill="rgb(209,170,53)"/><text x="1091.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.69%)</title><rect x="1088" y="260" width="8" height="15" fill="rgb(220,162,40)"/><text x="1091.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.34%)</title><rect x="1092" y="276" width="4" height="15" fill="rgb(227,39,46)"/><text x="1095.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.38%)</title><rect x="1084" y="212" width="16" height="15" fill="rgb(248,81,50)"/><text x="1087.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.03%)</title><rect x="1088" y="228" width="12" height="15" fill="rgb(238,59,2)"/><text x="1091.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.03%)</title><rect x="1088" y="244" width="12" height="15" fill="rgb(217,133,31)"/><text x="1091.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1096" y="260" width="4" height="15" fill="rgb(230,147,5)"/><text x="1099.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1100" y="212" width="4" height="15" fill="rgb(216,57,30)"/><text x="1103.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1100" y="228" width="4" height="15" fill="rgb(228,203,50)"/><text x="1103.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.76%)</title><rect x="1084" y="196" width="32" height="15" fill="rgb(218,80,31)"/><text x="1087.00" y="206.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 1.03%)</title><rect x="1104" y="212" width="12" height="15" fill="rgb(210,85,43)"/><text x="1107.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.69%)</title><rect x="1108" y="228" width="8" height="15" fill="rgb(224,119,21)"/><text x="1111.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.69%)</title><rect x="1108" y="244" width="8" height="15" fill="rgb(212,37,53)"/><text x="1111.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1112" y="260" width="4" height="15" fill="rgb(206,94,27)"/><text x="1115.00" y="270.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1112" y="276" width="4" height="15" fill="rgb(244,190,0)"/><text x="1115.00" y="286.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1112" y="292" width="4" height="15" fill="rgb(227,24,23)"/><text x="1115.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (107 samples, 36.90%)</title><rect x="685" y="164" width="435" height="15" fill="rgb(212,144,25)"/><text x="688.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.48%)</title><rect x="1067" y="180" width="53" height="15" fill="rgb(249,4,2)"/><text x="1070.00" y="190.50">ufunc..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1116" y="196" width="4" height="15" fill="rgb(241,173,54)"/><text x="1119.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.03%)</title><rect x="1161" y="196" width="12" height="15" fill="rgb(205,37,19)"/><text x="1164.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (127 samples, 43.79%)</title><rect x="669" y="132" width="516" height="15" fill="rgb(223,87,3)"/><text x="672.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (127 samples, 43.79%)</title><rect x="669" y="148" width="516" height="15" fill="rgb(210,172,12)"/><text x="672.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 5.52%)</title><rect x="1120" y="164" width="65" height="15" fill="rgb(252,136,2)"/><text x="1123.00" y="174.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 4.14%)</title><rect x="1137" y="180" width="48" height="15" fill="rgb(250,158,30)"/><text x="1140.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.03%)</title><rect x="1173" y="196" width="12" height="15" fill="rgb(208,172,49)"/><text x="1176.00" y="206.50"></text></g><g><title>all (290 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,45,21)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (290 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(254,229,50)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (132 samples, 45.52%)</title><rect x="652" y="68" width="538" height="15" fill="rgb(219,126,5)"/><text x="655.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (132 samples, 45.52%)</title><rect x="652" y="84" width="538" height="15" fill="rgb(219,90,4)"/><text x="655.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_on..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_nozipmap.py) (132 samples, 45.52%)</title><rect x="652" y="100" width="538" height="15" fill="rgb(209,121,13)"/><text x="655.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 45.17%)</title><rect x="656" y="116" width="534" height="15" fill="rgb(213,211,23)"/><text x="659.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(216,44,33)"/><text x="1188.00" y="142.50"></text></g></g></svg>