<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="10" y="1332" width="3" height="15" fill="rgb(216,90,46)"/><text x="13.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="10" y="1348" width="3" height="15" fill="rgb(250,130,49)"/><text x="13.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="10" y="1364" width="3" height="15" fill="rgb(224,184,13)"/><text x="13.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="10" y="1380" width="3" height="15" fill="rgb(222,82,31)"/><text x="13.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="10" y="1396" width="3" height="15" fill="rgb(240,127,10)"/><text x="13.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.30%)</title><rect x="10" y="1412" width="3" height="15" fill="rgb(225,183,26)"/><text x="13.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.30%)</title><rect x="10" y="1428" width="3" height="15" fill="rgb(219,31,28)"/><text x="13.00" y="1438.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="10" y="1444" width="3" height="15" fill="rgb(206,168,51)"/><text x="13.00" y="1454.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="10" y="1460" width="3" height="15" fill="rgb(239,217,6)"/><text x="13.00" y="1470.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="10" y="1476" width="3" height="15" fill="rgb(210,130,34)"/><text x="13.00" y="1486.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="10" y="1492" width="3" height="15" fill="rgb(220,130,45)"/><text x="13.00" y="1502.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="10" y="1508" width="3" height="15" fill="rgb(231,78,23)"/><text x="13.00" y="1518.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="10" y="1524" width="3" height="15" fill="rgb(210,27,19)"/><text x="13.00" y="1534.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="10" y="1540" width="3" height="15" fill="rgb(220,175,51)"/><text x="13.00" y="1550.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="10" y="1556" width="3" height="15" fill="rgb(245,125,29)"/><text x="13.00" y="1566.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.30%)</title><rect x="10" y="1572" width="3" height="15" fill="rgb(248,162,50)"/><text x="13.00" y="1582.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.30%)</title><rect x="10" y="1588" width="3" height="15" fill="rgb(228,220,47)"/><text x="13.00" y="1598.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="10" y="1604" width="3" height="15" fill="rgb(234,0,52)"/><text x="13.00" y="1614.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="10" y="1620" width="3" height="15" fill="rgb(222,128,13)"/><text x="13.00" y="1630.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="10" y="1636" width="3" height="15" fill="rgb(234,68,23)"/><text x="13.00" y="1646.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="10" y="1652" width="3" height="15" fill="rgb(216,29,36)"/><text x="13.00" y="1662.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.30%)</title><rect x="10" y="1668" width="3" height="15" fill="rgb(231,154,45)"/><text x="13.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(230,131,49)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(221,70,4)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(240,130,51)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(227,90,46)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(248,70,21)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(237,137,13)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.60%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(235,108,53)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(247,38,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(215,202,51)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(241,207,45)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(251,220,6)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(219,128,49)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(214,35,53)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(225,144,39)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(218,124,24)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(206,81,11)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(236,152,46)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(240,202,53)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(241,45,29)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(243,22,13)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(211,125,35)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.60%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(236,223,19)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="980" width="7" height="15" fill="rgb(250,162,21)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="996" width="7" height="15" fill="rgb(242,189,5)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1012" width="7" height="15" fill="rgb(211,74,26)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1028" width="7" height="15" fill="rgb(206,156,11)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1044" width="7" height="15" fill="rgb(247,102,33)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="1060" width="7" height="15" fill="rgb(224,142,2)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1076" width="7" height="15" fill="rgb(214,137,17)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.60%)</title><rect x="10" y="1092" width="7" height="15" fill="rgb(218,70,40)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1108" width="7" height="15" fill="rgb(247,222,54)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1124" width="7" height="15" fill="rgb(254,73,42)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1140" width="7" height="15" fill="rgb(206,14,18)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1156" width="7" height="15" fill="rgb(246,168,7)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1172" width="7" height="15" fill="rgb(252,134,35)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="1188" width="7" height="15" fill="rgb(227,38,51)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1204" width="7" height="15" fill="rgb(226,84,44)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.60%)</title><rect x="10" y="1220" width="7" height="15" fill="rgb(241,113,16)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1236" width="7" height="15" fill="rgb(233,78,14)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1252" width="7" height="15" fill="rgb(212,219,36)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1268" width="7" height="15" fill="rgb(244,135,51)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="10" y="1284" width="7" height="15" fill="rgb(234,183,25)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="10" y="1300" width="7" height="15" fill="rgb(236,86,3)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.60%)</title><rect x="10" y="1316" width="7" height="15" fill="rgb(247,44,51)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.30%)</title><rect x="13" y="1332" width="4" height="15" fill="rgb(247,44,52)"/><text x="16.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.30%)</title><rect x="13" y="1348" width="4" height="15" fill="rgb(252,100,26)"/><text x="16.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.30%)</title><rect x="13" y="1364" width="4" height="15" fill="rgb(211,36,28)"/><text x="16.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.30%)</title><rect x="13" y="1380" width="4" height="15" fill="rgb(249,15,8)"/><text x="16.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.30%)</title><rect x="13" y="1396" width="4" height="15" fill="rgb(211,26,51)"/><text x="16.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="13" y="1412" width="4" height="15" fill="rgb(239,52,37)"/><text x="16.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.30%)</title><rect x="13" y="1428" width="4" height="15" fill="rgb(240,51,31)"/><text x="16.00" y="1438.50"></text></g><g><title>0x7f9e140e60a7 (?) (1 samples, 0.30%)</title><rect x="13" y="1444" width="4" height="15" fill="rgb(244,219,34)"/><text x="16.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.90%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(228,71,23)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.30%)</title><rect x="17" y="628" width="3" height="15" fill="rgb(225,82,31)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="644" width="3" height="15" fill="rgb(208,126,3)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="660" width="3" height="15" fill="rgb(206,210,21)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="676" width="3" height="15" fill="rgb(249,167,28)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="692" width="3" height="15" fill="rgb(235,153,9)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="708" width="3" height="15" fill="rgb(216,108,0)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="724" width="3" height="15" fill="rgb(234,130,6)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="740" width="3" height="15" fill="rgb(240,46,43)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="756" width="3" height="15" fill="rgb(209,144,28)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="772" width="3" height="15" fill="rgb(246,161,42)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="788" width="3" height="15" fill="rgb(246,205,47)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="804" width="3" height="15" fill="rgb(242,96,34)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.30%)</title><rect x="17" y="820" width="3" height="15" fill="rgb(232,210,48)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="836" width="3" height="15" fill="rgb(213,203,38)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="852" width="3" height="15" fill="rgb(209,7,39)"/><text x="20.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(228,173,3)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(252,40,26)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(224,82,41)"/><text x="20.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(239,137,42)"/><text x="20.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(241,169,25)"/><text x="20.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(243,181,12)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(223,78,31)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(215,158,35)"/><text x="20.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(241,33,13)"/><text x="20.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(253,192,29)"/><text x="20.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="1028" width="3" height="15" fill="rgb(227,177,12)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1044" width="3" height="15" fill="rgb(220,15,8)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.30%)</title><rect x="17" y="1060" width="3" height="15" fill="rgb(234,112,43)"/><text x="20.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1076" width="3" height="15" fill="rgb(205,168,26)"/><text x="20.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1092" width="3" height="15" fill="rgb(227,69,36)"/><text x="20.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1108" width="3" height="15" fill="rgb(247,169,24)"/><text x="20.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="1124" width="3" height="15" fill="rgb(236,18,5)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1140" width="3" height="15" fill="rgb(227,18,17)"/><text x="20.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.30%)</title><rect x="17" y="1156" width="3" height="15" fill="rgb(212,9,18)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1172" width="3" height="15" fill="rgb(223,61,32)"/><text x="20.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1188" width="3" height="15" fill="rgb(232,197,18)"/><text x="20.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1204" width="3" height="15" fill="rgb(246,140,44)"/><text x="20.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="1220" width="3" height="15" fill="rgb(220,103,42)"/><text x="20.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1236" width="3" height="15" fill="rgb(250,191,5)"/><text x="20.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio5.py) (1 samples, 0.30%)</title><rect x="17" y="1252" width="3" height="15" fill="rgb(233,62,49)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1268" width="3" height="15" fill="rgb(245,144,41)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1284" width="3" height="15" fill="rgb(228,189,25)"/><text x="20.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1300" width="3" height="15" fill="rgb(208,104,33)"/><text x="20.00" y="1310.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1316" width="3" height="15" fill="rgb(229,65,34)"/><text x="20.00" y="1326.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="17" y="1332" width="3" height="15" fill="rgb(231,133,26)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="17" y="1348" width="3" height="15" fill="rgb(244,59,12)"/><text x="20.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(213,143,36)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(240,127,24)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(216,170,22)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(246,194,34)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(242,106,23)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(213,30,28)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.20%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(243,18,1)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(218,140,44)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(220,111,19)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(226,45,22)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(234,204,32)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(207,213,13)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.20%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(218,178,20)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(208,133,36)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(213,42,22)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(208,57,17)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(239,123,8)"/><text x="13.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="20" y="612" width="4" height="15" fill="rgb(252,14,25)"/><text x="23.00" y="622.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="20" y="628" width="4" height="15" fill="rgb(242,122,36)"/><text x="23.00" y="638.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="20" y="644" width="4" height="15" fill="rgb(215,11,16)"/><text x="23.00" y="654.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.30%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(223,199,10)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(209,203,40)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(220,139,4)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(208,10,54)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(210,224,46)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(233,119,1)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.30%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(243,39,26)"/><text x="27.00" y="878.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(217,59,20)"/><text x="27.00" y="894.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(250,132,31)"/><text x="27.00" y="910.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.30%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(242,221,49)"/><text x="27.00" y="926.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.30%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(206,51,30)"/><text x="27.00" y="942.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.30%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(224,214,14)"/><text x="27.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(233,60,43)"/><text x="27.00" y="974.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(206,192,6)"/><text x="27.00" y="990.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(248,45,44)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.80%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(245,90,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.80%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(236,20,39)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.80%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(224,215,0)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="340" width="7" height="15" fill="rgb(237,139,29)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="356" width="7" height="15" fill="rgb(217,219,15)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="372" width="7" height="15" fill="rgb(233,69,49)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.60%)</title><rect x="24" y="388" width="7" height="15" fill="rgb(210,215,36)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="404" width="7" height="15" fill="rgb(207,155,6)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="420" width="7" height="15" fill="rgb(232,146,50)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="436" width="7" height="15" fill="rgb(245,152,26)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="452" width="7" height="15" fill="rgb(227,82,25)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="468" width="7" height="15" fill="rgb(243,32,49)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.60%)</title><rect x="24" y="484" width="7" height="15" fill="rgb(243,133,33)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="500" width="7" height="15" fill="rgb(220,27,32)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="516" width="7" height="15" fill="rgb(242,163,44)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="532" width="7" height="15" fill="rgb(234,105,37)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="548" width="7" height="15" fill="rgb(208,152,22)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="564" width="7" height="15" fill="rgb(217,16,37)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.60%)</title><rect x="24" y="580" width="7" height="15" fill="rgb(211,145,1)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="596" width="7" height="15" fill="rgb(240,18,26)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="612" width="7" height="15" fill="rgb(214,53,51)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="628" width="7" height="15" fill="rgb(227,109,40)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="644" width="7" height="15" fill="rgb(228,67,35)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="660" width="7" height="15" fill="rgb(237,43,19)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.60%)</title><rect x="24" y="676" width="7" height="15" fill="rgb(229,60,44)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="692" width="7" height="15" fill="rgb(250,169,25)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="708" width="7" height="15" fill="rgb(245,14,0)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="724" width="7" height="15" fill="rgb(254,191,23)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="24" y="740" width="7" height="15" fill="rgb(228,165,39)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="24" y="756" width="7" height="15" fill="rgb(235,13,50)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py) (1 samples, 0.30%)</title><rect x="27" y="772" width="4" height="15" fill="rgb(217,33,14)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="788" width="4" height="15" fill="rgb(243,83,46)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="804" width="4" height="15" fill="rgb(207,139,31)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="27" y="820" width="4" height="15" fill="rgb(226,46,22)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="836" width="4" height="15" fill="rgb(214,36,39)"/><text x="30.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="852" width="4" height="15" fill="rgb(250,115,35)"/><text x="30.00" y="862.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="868" width="4" height="15" fill="rgb(241,224,47)"/><text x="30.00" y="878.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="27" y="884" width="4" height="15" fill="rgb(231,45,3)"/><text x="30.00" y="894.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(252,198,5)"/><text x="34.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(220,18,18)"/><text x="34.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(248,93,32)"/><text x="34.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(252,134,17)"/><text x="34.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="31" y="868" width="7" height="15" fill="rgb(208,8,18)"/><text x="34.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="31" y="884" width="7" height="15" fill="rgb(242,104,16)"/><text x="34.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="31" y="900" width="7" height="15" fill="rgb(212,88,46)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="31" y="916" width="7" height="15" fill="rgb(247,135,11)"/><text x="34.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="31" y="932" width="7" height="15" fill="rgb(234,4,26)"/><text x="34.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="31" y="948" width="7" height="15" fill="rgb(205,86,1)"/><text x="34.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="31" y="964" width="7" height="15" fill="rgb(228,181,39)"/><text x="34.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(223,229,22)"/><text x="37.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(252,137,1)"/><text x="37.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.30%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(227,159,54)"/><text x="37.00" y="1022.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(251,49,42)"/><text x="41.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(237,134,27)"/><text x="41.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(252,54,26)"/><text x="41.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(253,105,41)"/><text x="41.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(241,229,45)"/><text x="41.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(236,9,54)"/><text x="41.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.30%)</title><rect x="38" y="996" width="3" height="15" fill="rgb(222,37,43)"/><text x="41.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.99%)</title><rect x="10" y="196" width="35" height="15" fill="rgb(238,60,27)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.99%)</title><rect x="10" y="212" width="35" height="15" fill="rgb(246,200,23)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.99%)</title><rect x="10" y="228" width="35" height="15" fill="rgb(220,123,25)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.99%)</title><rect x="10" y="244" width="35" height="15" fill="rgb(221,116,4)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.99%)</title><rect x="10" y="260" width="35" height="15" fill="rgb(214,209,3)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.99%)</title><rect x="10" y="276" width="35" height="15" fill="rgb(222,142,24)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.20%)</title><rect x="31" y="292" width="14" height="15" fill="rgb(215,69,19)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="308" width="14" height="15" fill="rgb(248,113,23)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="324" width="14" height="15" fill="rgb(230,8,5)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="340" width="14" height="15" fill="rgb(229,140,14)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="31" y="356" width="14" height="15" fill="rgb(223,73,0)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="372" width="14" height="15" fill="rgb(236,143,14)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.20%)</title><rect x="31" y="388" width="14" height="15" fill="rgb(240,61,51)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="404" width="14" height="15" fill="rgb(249,45,11)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="420" width="14" height="15" fill="rgb(251,51,32)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="436" width="14" height="15" fill="rgb(231,29,30)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="31" y="452" width="14" height="15" fill="rgb(240,104,3)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="468" width="14" height="15" fill="rgb(224,207,53)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.20%)</title><rect x="31" y="484" width="14" height="15" fill="rgb(216,15,6)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="500" width="14" height="15" fill="rgb(245,160,44)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="516" width="14" height="15" fill="rgb(209,164,40)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="532" width="14" height="15" fill="rgb(254,42,12)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="31" y="548" width="14" height="15" fill="rgb(210,90,29)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="564" width="14" height="15" fill="rgb(250,159,11)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.20%)</title><rect x="31" y="580" width="14" height="15" fill="rgb(206,181,53)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="596" width="14" height="15" fill="rgb(235,141,6)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="612" width="14" height="15" fill="rgb(233,175,8)"/><text x="34.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="628" width="14" height="15" fill="rgb(222,155,20)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="644" width="14" height="15" fill="rgb(205,183,47)"/><text x="34.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="660" width="14" height="15" fill="rgb(247,192,16)"/><text x="34.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="676" width="14" height="15" fill="rgb(225,71,21)"/><text x="34.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="31" y="692" width="14" height="15" fill="rgb(216,199,44)"/><text x="34.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="708" width="14" height="15" fill="rgb(235,136,39)"/><text x="34.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.20%)</title><rect x="31" y="724" width="14" height="15" fill="rgb(213,113,14)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="740" width="14" height="15" fill="rgb(252,188,37)"/><text x="34.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="756" width="14" height="15" fill="rgb(241,61,11)"/><text x="34.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="772" width="14" height="15" fill="rgb(207,150,0)"/><text x="34.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.20%)</title><rect x="31" y="788" width="14" height="15" fill="rgb(237,31,50)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.20%)</title><rect x="31" y="804" width="14" height="15" fill="rgb(222,84,38)"/><text x="34.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.20%)</title><rect x="31" y="820" width="14" height="15" fill="rgb(248,210,42)"/><text x="34.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.20%)</title><rect x="31" y="836" width="14" height="15" fill="rgb(221,178,54)"/><text x="34.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.20%)</title><rect x="31" y="852" width="14" height="15" fill="rgb(217,188,5)"/><text x="34.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="38" y="868" width="7" height="15" fill="rgb(244,48,44)"/><text x="41.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.60%)</title><rect x="38" y="884" width="7" height="15" fill="rgb(234,11,22)"/><text x="41.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.30%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(253,205,51)"/><text x="44.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.30%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(235,181,35)"/><text x="44.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(207,117,18)"/><text x="44.00" y="942.50"></text></g><g><title>0x7f9e24065237 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(235,103,24)"/><text x="44.00" y="958.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.30%)</title><rect x="45" y="580" width="3" height="15" fill="rgb(244,127,38)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="596" width="3" height="15" fill="rgb(225,210,46)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="612" width="3" height="15" fill="rgb(232,227,52)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="628" width="3" height="15" fill="rgb(229,64,11)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="45" y="644" width="3" height="15" fill="rgb(250,181,46)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(252,114,54)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.30%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(223,182,51)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(228,151,1)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(224,20,38)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(225,96,17)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(240,113,5)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(235,179,29)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.30%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(232,49,25)"/><text x="48.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.30%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(240,9,29)"/><text x="48.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.30%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(238,54,39)"/><text x="48.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.30%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(236,38,13)"/><text x="48.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.30%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(208,7,22)"/><text x="48.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.30%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(212,156,37)"/><text x="48.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.30%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(254,138,11)"/><text x="48.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.30%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(224,31,21)"/><text x="48.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.30%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(231,137,35)"/><text x="48.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="68" width="42" height="15" fill="rgb(240,171,7)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="84" width="42" height="15" fill="rgb(217,156,25)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="100" width="42" height="15" fill="rgb(254,75,39)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.59%)</title><rect x="10" y="116" width="42" height="15" fill="rgb(229,64,3)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="132" width="42" height="15" fill="rgb(224,31,36)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (12 samples, 3.59%)</title><rect x="10" y="148" width="42" height="15" fill="rgb(239,59,16)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="164" width="42" height="15" fill="rgb(248,7,43)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.59%)</title><rect x="10" y="180" width="42" height="15" fill="rgb(232,26,44)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="196" width="7" height="15" fill="rgb(213,49,53)"/><text x="48.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="45" y="212" width="7" height="15" fill="rgb(245,11,35)"/><text x="48.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="228" width="7" height="15" fill="rgb(207,147,24)"/><text x="48.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (2 samples, 0.60%)</title><rect x="45" y="244" width="7" height="15" fill="rgb(246,204,4)"/><text x="48.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="260" width="7" height="15" fill="rgb(254,138,12)"/><text x="48.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="276" width="7" height="15" fill="rgb(230,101,13)"/><text x="48.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="292" width="7" height="15" fill="rgb(253,22,25)"/><text x="48.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="45" y="308" width="7" height="15" fill="rgb(252,183,37)"/><text x="48.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="324" width="7" height="15" fill="rgb(235,1,43)"/><text x="48.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.60%)</title><rect x="45" y="340" width="7" height="15" fill="rgb(238,58,25)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="356" width="7" height="15" fill="rgb(253,202,3)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="372" width="7" height="15" fill="rgb(242,58,39)"/><text x="48.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="388" width="7" height="15" fill="rgb(221,219,45)"/><text x="48.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="404" width="7" height="15" fill="rgb(236,166,7)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="420" width="7" height="15" fill="rgb(235,205,33)"/><text x="48.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="436" width="7" height="15" fill="rgb(216,76,14)"/><text x="48.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="45" y="452" width="7" height="15" fill="rgb(210,229,49)"/><text x="48.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="468" width="7" height="15" fill="rgb(221,101,5)"/><text x="48.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.60%)</title><rect x="45" y="484" width="7" height="15" fill="rgb(221,224,19)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="500" width="7" height="15" fill="rgb(213,82,23)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="516" width="7" height="15" fill="rgb(206,169,32)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="532" width="7" height="15" fill="rgb(242,27,5)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="45" y="548" width="7" height="15" fill="rgb(243,122,45)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="45" y="564" width="7" height="15" fill="rgb(223,48,38)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.30%)</title><rect x="48" y="580" width="4" height="15" fill="rgb(230,124,22)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="596" width="4" height="15" fill="rgb(226,212,11)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="612" width="4" height="15" fill="rgb(225,53,3)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="628" width="4" height="15" fill="rgb(227,82,9)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="644" width="4" height="15" fill="rgb(232,153,18)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="660" width="4" height="15" fill="rgb(247,11,6)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.30%)</title><rect x="48" y="676" width="4" height="15" fill="rgb(207,52,12)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="692" width="4" height="15" fill="rgb(252,75,38)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="708" width="4" height="15" fill="rgb(213,138,12)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="724" width="4" height="15" fill="rgb(226,11,12)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="740" width="4" height="15" fill="rgb(207,28,20)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="756" width="4" height="15" fill="rgb(253,159,12)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.30%)</title><rect x="48" y="772" width="4" height="15" fill="rgb(222,160,7)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="788" width="4" height="15" fill="rgb(227,194,11)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="804" width="4" height="15" fill="rgb(252,112,11)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="820" width="4" height="15" fill="rgb(228,77,10)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.30%)</title><rect x="48" y="836" width="4" height="15" fill="rgb(234,60,2)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="48" y="852" width="4" height="15" fill="rgb(245,162,24)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/exceptions.py) (1 samples, 0.30%)</title><rect x="48" y="868" width="4" height="15" fill="rgb(214,172,12)"/><text x="51.00" y="878.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.90%)</title><rect x="108" y="212" width="11" height="15" fill="rgb(244,195,39)"/><text x="111.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.90%)</title><rect x="108" y="228" width="11" height="15" fill="rgb(234,226,53)"/><text x="111.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.60%)</title><rect x="112" y="244" width="7" height="15" fill="rgb(227,103,33)"/><text x="115.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.60%)</title><rect x="112" y="260" width="7" height="15" fill="rgb(226,55,51)"/><text x="115.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.30%)</title><rect x="115" y="276" width="4" height="15" fill="rgb(220,128,5)"/><text x="118.00" y="286.50"></text></g><g><title>0x7f9e24045d94 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="115" y="292" width="4" height="15" fill="rgb(252,50,5)"/><text x="118.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.30%)</title><rect x="119" y="212" width="4" height="15" fill="rgb(237,95,51)"/><text x="122.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.30%)</title><rect x="119" y="228" width="4" height="15" fill="rgb(229,173,12)"/><text x="122.00" y="238.50"></text></g><g><title>0x7f9e24046124 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="144" y="244" width="3" height="15" fill="rgb(228,215,30)"/><text x="147.00" y="254.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src) (2 samples, 0.60%)</title><rect x="161" y="340" width="7" height="15" fill="rgb(250,15,28)"/><text x="164.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 2.10%)</title><rect x="147" y="244" width="25" height="15" fill="rgb(243,41,17)"/><text x="150.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 2.10%)</title><rect x="147" y="260" width="25" height="15" fill="rgb(244,98,31)"/><text x="150.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 2.10%)</title><rect x="147" y="276" width="25" height="15" fill="rgb(242,113,5)"/><text x="150.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.80%)</title><rect x="151" y="292" width="21" height="15" fill="rgb(214,76,11)"/><text x="154.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 1.20%)</title><rect x="158" y="308" width="14" height="15" fill="rgb(225,40,40)"/><text x="161.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 1.20%)</title><rect x="158" y="324" width="14" height="15" fill="rgb(235,224,16)"/><text x="161.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="168" y="340" width="4" height="15" fill="rgb(225,143,24)"/><text x="171.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="168" y="356" width="4" height="15" fill="rgb(211,30,52)"/><text x="171.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="168" y="372" width="4" height="15" fill="rgb(211,220,1)"/><text x="171.00" y="382.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.30%)</title><rect x="179" y="340" width="4" height="15" fill="rgb(247,205,21)"/><text x="182.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (18 samples, 5.39%)</title><rect x="172" y="276" width="64" height="15" fill="rgb(234,165,41)"/><text x="175.00" y="286.50">array_i..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (17 samples, 5.09%)</title><rect x="176" y="292" width="60" height="15" fill="rgb(236,109,1)"/><text x="179.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (17 samples, 5.09%)</title><rect x="176" y="308" width="60" height="15" fill="rgb(206,165,21)"/><text x="179.00" y="318.50">PyArra..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (16 samples, 4.79%)</title><rect x="179" y="324" width="57" height="15" fill="rgb(221,58,42)"/><text x="182.00" y="334.50">cblas_..</text></g><g><title>gemm (cblasfuncs.c) (15 samples, 4.49%)</title><rect x="183" y="340" width="53" height="15" fill="rgb(242,95,15)"/><text x="186.00" y="350.50">gemm ..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.49%)</title><rect x="183" y="356" width="53" height="15" fill="rgb(230,17,2)"/><text x="186.00" y="366.50">cblas..</text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.49%)</title><rect x="183" y="372" width="53" height="15" fill="rgb(218,75,53)"/><text x="186.00" y="382.50">dgemm..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.49%)</title><rect x="183" y="388" width="53" height="15" fill="rgb(224,219,21)"/><text x="186.00" y="398.50">dgemm..</text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="236" y="276" width="3" height="15" fill="rgb(224,214,27)"/><text x="239.00" y="286.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 5.99%)</title><rect x="239" y="276" width="71" height="15" fill="rgb(248,210,0)"/><text x="242.00" y="286.50">dgemm_ke..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (40 samples, 11.98%)</title><rect x="172" y="244" width="141" height="15" fill="rgb(246,139,38)"/><text x="175.00" y="254.50">numpy_dot_inplace..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (40 samples, 11.98%)</title><rect x="172" y="260" width="141" height="15" fill="rgb(225,35,30)"/><text x="175.00" y="270.50">dot (&lt;__array_fun..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.30%)</title><rect x="310" y="276" width="3" height="15" fill="rgb(216,196,30)"/><text x="313.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.30%)</title><rect x="313" y="260" width="4" height="15" fill="rgb(217,86,26)"/><text x="316.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.30%)</title><rect x="313" y="276" width="4" height="15" fill="rgb(249,187,46)"/><text x="316.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.30%)</title><rect x="313" y="292" width="4" height="15" fill="rgb(251,37,3)"/><text x="316.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.30%)</title><rect x="317" y="356" width="3" height="15" fill="rgb(243,69,42)"/><text x="320.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.90%)</title><rect x="317" y="308" width="10" height="15" fill="rgb(237,12,0)"/><text x="320.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.90%)</title><rect x="317" y="324" width="10" height="15" fill="rgb(240,169,47)"/><text x="320.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.90%)</title><rect x="317" y="340" width="10" height="15" fill="rgb(253,131,34)"/><text x="320.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.60%)</title><rect x="320" y="356" width="7" height="15" fill="rgb(226,12,47)"/><text x="323.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="327" y="308" width="4" height="15" fill="rgb(252,167,47)"/><text x="330.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.30%)</title><rect x="327" y="324" width="4" height="15" fill="rgb(242,43,9)"/><text x="330.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="327" y="340" width="4" height="15" fill="rgb(248,13,7)"/><text x="330.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="327" y="356" width="4" height="15" fill="rgb(215,66,11)"/><text x="330.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="327" y="372" width="4" height="15" fill="rgb(241,46,34)"/><text x="330.00" y="382.50"></text></g><g><title>0x7f9e24045d62 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="338" y="356" width="4" height="15" fill="rgb(218,127,31)"/><text x="341.00" y="366.50"></text></g><g><title>0x7f9e24045d6f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="342" y="356" width="3" height="15" fill="rgb(231,220,35)"/><text x="345.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 2.69%)</title><rect x="317" y="292" width="32" height="15" fill="rgb(250,55,41)"/><text x="320.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.50%)</title><rect x="331" y="308" width="18" height="15" fill="rgb(216,30,13)"/><text x="334.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.50%)</title><rect x="331" y="324" width="18" height="15" fill="rgb(216,103,32)"/><text x="334.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.50%)</title><rect x="331" y="340" width="18" height="15" fill="rgb(215,189,24)"/><text x="334.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="345" y="356" width="4" height="15" fill="rgb(225,166,35)"/><text x="348.00" y="366.50"></text></g><g><title>0x7f9e0642b9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="349" y="308" width="3" height="15" fill="rgb(249,172,36)"/><text x="352.00" y="318.50"></text></g><g><title>0x7f9e06409fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="356" y="340" width="3" height="15" fill="rgb(217,9,0)"/><text x="359.00" y="350.50"></text></g><g><title>0x7f9e065559f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="359" y="340" width="4" height="15" fill="rgb(233,213,7)"/><text x="362.00" y="350.50"></text></g><g><title>0x7f9e241711b0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="366" y="356" width="4" height="15" fill="rgb(249,107,5)"/><text x="369.00" y="366.50"></text></g><g><title>0x7f9e241f7bb4 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(206,17,47)"/><text x="373.00" y="366.50"></text></g><g><title>0x7f9e241f7bd3 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="373" y="356" width="4" height="15" fill="rgb(206,13,48)"/><text x="376.00" y="366.50"></text></g><g><title>0x7f9e241f7be7 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="377" y="356" width="3" height="15" fill="rgb(227,20,52)"/><text x="380.00" y="366.50"></text></g><g><title>0x7f9e241f7bf9 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="380" y="356" width="4" height="15" fill="rgb(251,177,5)"/><text x="383.00" y="366.50"></text></g><g><title>0x7f9e241f7c07 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="384" y="356" width="4" height="15" fill="rgb(237,77,27)"/><text x="387.00" y="366.50"></text></g><g><title>0x7f9e241f7c3e (libm-2.29.so) (2 samples, 0.60%)</title><rect x="388" y="356" width="7" height="15" fill="rgb(207,112,49)"/><text x="391.00" y="366.50"></text></g><g><title>0x7f9e0644c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.19%)</title><rect x="352" y="324" width="50" height="15" fill="rgb(215,129,41)"/><text x="355.00" y="334.50">0x7f9..</text></g><g><title>exp (libm-2.29.so) (11 samples, 3.29%)</title><rect x="363" y="340" width="39" height="15" fill="rgb(215,112,4)"/><text x="366.00" y="350.50">exp..</text></g><g><title>0x7f9e241f7c7b (libm-2.29.so) (2 samples, 0.60%)</title><rect x="395" y="356" width="7" height="15" fill="rgb(246,173,18)"/><text x="398.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (30 samples, 8.98%)</title><rect x="317" y="260" width="106" height="15" fill="rgb(254,185,42)"/><text x="320.00" y="270.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (30 samples, 8.98%)</title><rect x="317" y="276" width="106" height="15" fill="rgb(210,155,48)"/><text x="320.00" y="286.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (21 samples, 6.29%)</title><rect x="349" y="292" width="74" height="15" fill="rgb(227,103,24)"/><text x="352.00" y="302.50">trivial_..</text></g><g><title>0x7f9e0642b9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 5.99%)</title><rect x="352" y="308" width="71" height="15" fill="rgb(205,89,31)"/><text x="355.00" y="318.50">0x7f9e06..</text></g><g><title>0x7f9e0644c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.80%)</title><rect x="402" y="324" width="21" height="15" fill="rgb(220,119,11)"/><text x="405.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (82 samples, 24.55%)</title><rect x="137" y="228" width="289" height="15" fill="rgb(214,115,36)"/><text x="140.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_line..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 9.58%)</title><rect x="313" y="244" width="113" height="15" fill="rgb(227,60,21)"/><text x="316.00" y="254.50">ufunc_generic..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.30%)</title><rect x="423" y="260" width="3" height="15" fill="rgb(225,77,7)"/><text x="426.00" y="270.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.30%)</title><rect x="448" y="372" width="3" height="15" fill="rgb(247,223,38)"/><text x="451.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.30%)</title><rect x="451" y="372" width="4" height="15" fill="rgb(238,66,36)"/><text x="454.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.30%)</title><rect x="451" y="388" width="4" height="15" fill="rgb(252,216,53)"/><text x="454.00" y="398.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.30%)</title><rect x="455" y="420" width="3" height="15" fill="rgb(227,215,51)"/><text x="458.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.60%)</title><rect x="455" y="372" width="7" height="15" fill="rgb(246,63,52)"/><text x="458.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.60%)</title><rect x="455" y="388" width="7" height="15" fill="rgb(244,82,51)"/><text x="458.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.60%)</title><rect x="455" y="404" width="7" height="15" fill="rgb(235,194,12)"/><text x="458.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.30%)</title><rect x="458" y="420" width="4" height="15" fill="rgb(207,156,50)"/><text x="461.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 2.40%)</title><rect x="476" y="388" width="28" height="15" fill="rgb(243,213,51)"/><text x="479.00" y="398.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 1.50%)</title><rect x="486" y="404" width="18" height="15" fill="rgb(237,139,42)"/><text x="489.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (22 samples, 6.59%)</title><rect x="444" y="356" width="78" height="15" fill="rgb(233,62,50)"/><text x="447.00" y="366.50">PyUFunc_R..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 5.09%)</title><rect x="462" y="372" width="60" height="15" fill="rgb(238,76,4)"/><text x="465.00" y="382.50">reduce..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 1.50%)</title><rect x="504" y="388" width="18" height="15" fill="rgb(220,28,2)"/><text x="507.00" y="398.50"></text></g><g><title>array_sum (methods.c) (24 samples, 7.19%)</title><rect x="441" y="260" width="84" height="15" fill="rgb(254,80,16)"/><text x="444.00" y="270.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c) (24 samples, 7.19%)</title><rect x="441" y="276" width="84" height="15" fill="rgb(208,111,46)"/><text x="444.00" y="286.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py) (23 samples, 6.89%)</title><rect x="444" y="292" width="81" height="15" fill="rgb(209,153,21)"/><text x="447.00" y="302.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c) (23 samples, 6.89%)</title><rect x="444" y="308" width="81" height="15" fill="rgb(219,82,47)"/><text x="447.00" y="318.50">ufunc_red..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 6.89%)</title><rect x="444" y="324" width="81" height="15" fill="rgb(207,178,53)"/><text x="447.00" y="334.50">PyUFunc_G..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (23 samples, 6.89%)</title><rect x="444" y="340" width="81" height="15" fill="rgb(248,94,11)"/><text x="447.00" y="350.50">PyUFunc_R..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.30%)</title><rect x="522" y="356" width="3" height="15" fill="rgb(207,108,20)"/><text x="525.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.30%)</title><rect x="522" y="372" width="3" height="15" fill="rgb(213,109,31)"/><text x="525.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.60%)</title><rect x="529" y="276" width="7" height="15" fill="rgb(205,145,28)"/><text x="532.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.30%)</title><rect x="532" y="292" width="4" height="15" fill="rgb(238,102,10)"/><text x="535.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 1.50%)</title><rect x="539" y="324" width="18" height="15" fill="rgb(228,110,37)"/><text x="542.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 1.50%)</title><rect x="539" y="340" width="18" height="15" fill="rgb(232,115,54)"/><text x="542.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 1.50%)</title><rect x="539" y="356" width="18" height="15" fill="rgb(251,130,15)"/><text x="542.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 1.50%)</title><rect x="539" y="372" width="18" height="15" fill="rgb(208,165,28)"/><text x="542.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="557" y="324" width="4" height="15" fill="rgb(229,77,45)"/><text x="560.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.30%)</title><rect x="557" y="340" width="4" height="15" fill="rgb(215,187,38)"/><text x="560.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.30%)</title><rect x="557" y="356" width="4" height="15" fill="rgb(235,0,44)"/><text x="560.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.30%)</title><rect x="561" y="340" width="3" height="15" fill="rgb(226,175,10)"/><text x="564.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 2.99%)</title><rect x="539" y="308" width="36" height="15" fill="rgb(209,209,1)"/><text x="542.00" y="318.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 1.20%)</title><rect x="561" y="324" width="14" height="15" fill="rgb(240,150,26)"/><text x="564.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.90%)</title><rect x="564" y="340" width="11" height="15" fill="rgb(243,46,6)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.90%)</title><rect x="564" y="356" width="11" height="15" fill="rgb(208,36,6)"/><text x="567.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.60%)</title><rect x="568" y="372" width="7" height="15" fill="rgb(254,154,6)"/><text x="571.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 3.29%)</title><rect x="539" y="292" width="39" height="15" fill="rgb(248,42,21)"/><text x="542.00" y="302.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.30%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(243,104,41)"/><text x="578.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(240,7,16)"/><text x="578.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 3.89%)</title><rect x="536" y="276" width="46" height="15" fill="rgb(223,121,21)"/><text x="539.00" y="286.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.30%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(245,130,50)"/><text x="581.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (151 samples, 45.21%)</title><rect x="52" y="100" width="533" height="15" fill="rgb(226,164,44)"/><text x="55.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 45.21%)</title><rect x="52" y="116" width="533" height="15" fill="rgb(209,121,50)"/><text x="55.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 45.21%)</title><rect x="52" y="132" width="533" height="15" fill="rgb(239,88,24)"/><text x="55.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (151 samples, 45.21%)</title><rect x="52" y="148" width="533" height="15" fill="rgb(221,114,16)"/><text x="55.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (150 samples, 44.91%)</title><rect x="55" y="164" width="530" height="15" fill="rgb(208,95,29)"/><text x="58.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (145 samples, 43.41%)</title><rect x="73" y="180" width="512" height="15" fill="rgb(223,109,50)"/><text x="76.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (136 samples, 40.72%)</title><rect x="105" y="196" width="480" height="15" fill="rgb(229,210,36)"/><text x="108.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (131 samples, 39.22%)</title><rect x="123" y="212" width="462" height="15" fill="rgb(212,26,7)"/><text x="126.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (45 samples, 13.47%)</title><rect x="426" y="228" width="159" height="15" fill="rgb(228,7,28)"/><text x="429.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (44 samples, 13.17%)</title><rect x="430" y="244" width="155" height="15" fill="rgb(246,59,0)"/><text x="433.00" y="254.50">norm_l1 (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 5.09%)</title><rect x="525" y="260" width="60" height="15" fill="rgb(247,169,22)"/><text x="528.00" y="270.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.30%)</title><rect x="582" y="276" width="3" height="15" fill="rgb(239,220,50)"/><text x="585.00" y="286.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="585" y="676" width="4" height="15" fill="rgb(215,209,16)"/><text x="588.00" y="686.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="585" y="692" width="4" height="15" fill="rgb(229,199,47)"/><text x="588.00" y="702.50"></text></g><g><title>__new__ (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="585" y="708" width="4" height="15" fill="rgb(224,161,11)"/><text x="588.00" y="718.50"></text></g><g><title>sys_intern (python3.7) (1 samples, 0.30%)</title><rect x="585" y="724" width="4" height="15" fill="rgb(231,137,53)"/><text x="588.00" y="734.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (153 samples, 45.81%)</title><rect x="52" y="68" width="540" height="15" fill="rgb(233,168,47)"/><text x="55.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_o..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (153 samples, 45.81%)</title><rect x="52" y="84" width="540" height="15" fill="rgb(226,101,15)"/><text x="55.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.60%)</title><rect x="585" y="100" width="7" height="15" fill="rgb(228,130,53)"/><text x="588.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.60%)</title><rect x="585" y="116" width="7" height="15" fill="rgb(245,107,3)"/><text x="588.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.60%)</title><rect x="585" y="132" width="7" height="15" fill="rgb(205,3,3)"/><text x="588.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.60%)</title><rect x="585" y="148" width="7" height="15" fill="rgb(231,168,8)"/><text x="588.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.60%)</title><rect x="585" y="164" width="7" height="15" fill="rgb(250,101,15)"/><text x="588.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.60%)</title><rect x="585" y="180" width="7" height="15" fill="rgb(209,153,37)"/><text x="588.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.60%)</title><rect x="585" y="196" width="7" height="15" fill="rgb(238,219,4)"/><text x="588.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="212" width="7" height="15" fill="rgb(219,195,45)"/><text x="588.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="228" width="7" height="15" fill="rgb(213,3,33)"/><text x="588.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="244" width="7" height="15" fill="rgb(205,42,46)"/><text x="588.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="585" y="260" width="7" height="15" fill="rgb(228,119,17)"/><text x="588.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="276" width="7" height="15" fill="rgb(254,166,16)"/><text x="588.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.60%)</title><rect x="585" y="292" width="7" height="15" fill="rgb(227,225,52)"/><text x="588.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="308" width="7" height="15" fill="rgb(221,108,4)"/><text x="588.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="324" width="7" height="15" fill="rgb(222,105,53)"/><text x="588.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="340" width="7" height="15" fill="rgb(213,165,13)"/><text x="588.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="585" y="356" width="7" height="15" fill="rgb(238,65,4)"/><text x="588.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="372" width="7" height="15" fill="rgb(208,19,20)"/><text x="588.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.60%)</title><rect x="585" y="388" width="7" height="15" fill="rgb(240,11,33)"/><text x="588.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="404" width="7" height="15" fill="rgb(247,69,49)"/><text x="588.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="420" width="7" height="15" fill="rgb(230,66,40)"/><text x="588.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="436" width="7" height="15" fill="rgb(227,24,53)"/><text x="588.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.60%)</title><rect x="585" y="452" width="7" height="15" fill="rgb(246,22,13)"/><text x="588.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="585" y="468" width="7" height="15" fill="rgb(227,157,33)"/><text x="588.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.60%)</title><rect x="585" y="484" width="7" height="15" fill="rgb(221,143,44)"/><text x="588.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.60%)</title><rect x="585" y="500" width="7" height="15" fill="rgb(253,185,31)"/><text x="588.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="585" y="516" width="7" height="15" fill="rgb(254,126,45)"/><text x="588.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="585" y="532" width="7" height="15" fill="rgb(248,162,20)"/><text x="588.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="585" y="548" width="7" height="15" fill="rgb(223,43,34)"/><text x="588.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (2 samples, 0.60%)</title><rect x="585" y="564" width="7" height="15" fill="rgb(237,83,44)"/><text x="588.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="580" width="7" height="15" fill="rgb(247,219,0)"/><text x="588.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="596" width="7" height="15" fill="rgb(238,171,31)"/><text x="588.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="612" width="7" height="15" fill="rgb(232,20,53)"/><text x="588.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="628" width="7" height="15" fill="rgb(229,136,30)"/><text x="588.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="644" width="7" height="15" fill="rgb(215,79,51)"/><text x="588.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.60%)</title><rect x="585" y="660" width="7" height="15" fill="rgb(235,138,16)"/><text x="588.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="676" width="3" height="15" fill="rgb(207,109,23)"/><text x="592.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="692" width="3" height="15" fill="rgb(248,46,24)"/><text x="592.00" y="702.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="708" width="3" height="15" fill="rgb(229,89,48)"/><text x="592.00" y="718.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="724" width="3" height="15" fill="rgb(207,186,38)"/><text x="592.00" y="734.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="740" width="3" height="15" fill="rgb(234,215,40)"/><text x="592.00" y="750.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="756" width="3" height="15" fill="rgb(253,209,14)"/><text x="592.00" y="766.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="772" width="3" height="15" fill="rgb(247,160,38)"/><text x="592.00" y="782.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="788" width="3" height="15" fill="rgb(224,177,49)"/><text x="592.00" y="798.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="804" width="3" height="15" fill="rgb(211,119,51)"/><text x="592.00" y="814.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="820" width="3" height="15" fill="rgb(228,187,25)"/><text x="592.00" y="830.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="836" width="3" height="15" fill="rgb(239,180,33)"/><text x="592.00" y="846.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="852" width="3" height="15" fill="rgb(242,195,35)"/><text x="592.00" y="862.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="868" width="3" height="15" fill="rgb(242,202,35)"/><text x="592.00" y="878.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="884" width="3" height="15" fill="rgb(254,201,54)"/><text x="592.00" y="894.50"></text></g><g><title>parse_primary (jinja2/parser.py) (1 samples, 0.30%)</title><rect x="589" y="900" width="3" height="15" fill="rgb(254,184,44)"/><text x="592.00" y="910.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="589" y="916" width="3" height="15" fill="rgb(235,9,19)"/><text x="592.00" y="926.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="589" y="932" width="3" height="15" fill="rgb(226,60,33)"/><text x="592.00" y="942.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.30%)</title><rect x="589" y="948" width="3" height="15" fill="rgb(243,74,7)"/><text x="592.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.30%)</title><rect x="589" y="964" width="3" height="15" fill="rgb(216,84,22)"/><text x="592.00" y="974.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.30%)</title><rect x="628" y="308" width="3" height="15" fill="rgb(253,192,37)"/><text x="631.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.60%)</title><rect x="628" y="292" width="7" height="15" fill="rgb(238,6,35)"/><text x="631.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.30%)</title><rect x="631" y="308" width="4" height="15" fill="rgb(209,167,32)"/><text x="634.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.30%)</title><rect x="635" y="324" width="3" height="15" fill="rgb(253,199,22)"/><text x="638.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.60%)</title><rect x="635" y="292" width="7" height="15" fill="rgb(242,58,45)"/><text x="638.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.60%)</title><rect x="635" y="308" width="7" height="15" fill="rgb(215,131,13)"/><text x="638.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.30%)</title><rect x="638" y="324" width="4" height="15" fill="rgb(237,104,13)"/><text x="641.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.30%)</title><rect x="638" y="340" width="4" height="15" fill="rgb(246,85,17)"/><text x="641.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.30%)</title><rect x="638" y="356" width="4" height="15" fill="rgb(241,150,12)"/><text x="641.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (2 samples, 0.60%)</title><rect x="642" y="292" width="7" height="15" fill="rgb(249,3,22)"/><text x="645.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.30%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(237,69,43)"/><text x="648.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 1.50%)</title><rect x="652" y="308" width="18" height="15" fill="rgb(239,81,27)"/><text x="655.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.30%)</title><rect x="667" y="324" width="3" height="15" fill="rgb(249,114,5)"/><text x="670.00" y="334.50"></text></g><g><title>array_sum (methods.c) (17 samples, 5.09%)</title><rect x="617" y="180" width="60" height="15" fill="rgb(240,151,51)"/><text x="620.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (17 samples, 5.09%)</title><rect x="617" y="196" width="60" height="15" fill="rgb(234,223,19)"/><text x="620.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (17 samples, 5.09%)</title><rect x="617" y="212" width="60" height="15" fill="rgb(228,80,34)"/><text x="620.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (17 samples, 5.09%)</title><rect x="617" y="228" width="60" height="15" fill="rgb(227,64,39)"/><text x="620.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 5.09%)</title><rect x="617" y="244" width="60" height="15" fill="rgb(232,188,39)"/><text x="620.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 4.49%)</title><rect x="624" y="260" width="53" height="15" fill="rgb(205,179,40)"/><text x="627.00" y="270.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (15 samples, 4.49%)</title><rect x="624" y="276" width="53" height="15" fill="rgb(216,196,38)"/><text x="627.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (8 samples, 2.40%)</title><rect x="649" y="292" width="28" height="15" fill="rgb(247,29,22)"/><text x="652.00" y="302.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.60%)</title><rect x="670" y="308" width="7" height="15" fill="rgb(215,155,8)"/><text x="673.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.60%)</title><rect x="684" y="260" width="7" height="15" fill="rgb(245,94,28)"/><text x="687.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 1.20%)</title><rect x="691" y="276" width="14" height="15" fill="rgb(228,67,6)"/><text x="694.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.90%)</title><rect x="695" y="292" width="10" height="15" fill="rgb(244,66,52)"/><text x="698.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.90%)</title><rect x="695" y="308" width="10" height="15" fill="rgb(227,165,46)"/><text x="698.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.60%)</title><rect x="698" y="324" width="7" height="15" fill="rgb(242,55,54)"/><text x="701.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="705" y="276" width="4" height="15" fill="rgb(234,130,11)"/><text x="708.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.30%)</title><rect x="705" y="292" width="4" height="15" fill="rgb(206,145,51)"/><text x="708.00" y="302.50"></text></g><g><title>array_add (number.c) (9 samples, 2.69%)</title><rect x="684" y="196" width="32" height="15" fill="rgb(224,200,42)"/><text x="687.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.69%)</title><rect x="684" y="212" width="32" height="15" fill="rgb(249,95,43)"/><text x="687.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.69%)</title><rect x="684" y="228" width="32" height="15" fill="rgb(216,138,46)"/><text x="687.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 2.69%)</title><rect x="684" y="244" width="32" height="15" fill="rgb(223,159,21)"/><text x="687.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 2.10%)</title><rect x="691" y="260" width="25" height="15" fill="rgb(251,37,29)"/><text x="694.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.60%)</title><rect x="709" y="276" width="7" height="15" fill="rgb(244,96,3)"/><text x="712.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.60%)</title><rect x="709" y="292" width="7" height="15" fill="rgb(248,62,41)"/><text x="712.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.60%)</title><rect x="709" y="308" width="7" height="15" fill="rgb(212,124,47)"/><text x="712.00" y="318.50"></text></g><g><title>0x7f9e24045d6f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="713" y="324" width="3" height="15" fill="rgb(236,150,5)"/><text x="716.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.30%)</title><rect x="741" y="212" width="3" height="15" fill="rgb(235,64,24)"/><text x="744.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.60%)</title><rect x="755" y="228" width="7" height="15" fill="rgb(243,90,22)"/><text x="758.00" y="238.50"></text></g><g><title>0x7f9e2403bed2 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="758" y="244" width="4" height="15" fill="rgb(235,227,39)"/><text x="761.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.80%)</title><rect x="744" y="212" width="22" height="15" fill="rgb(238,86,48)"/><text x="747.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.30%)</title><rect x="762" y="228" width="4" height="15" fill="rgb(223,66,17)"/><text x="765.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.90%)</title><rect x="766" y="212" width="10" height="15" fill="rgb(242,170,30)"/><text x="769.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.30%)</title><rect x="773" y="228" width="3" height="15" fill="rgb(208,209,29)"/><text x="776.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.30%)</title><rect x="773" y="244" width="3" height="15" fill="rgb(251,159,42)"/><text x="776.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.30%)</title><rect x="776" y="212" width="4" height="15" fill="rgb(230,184,21)"/><text x="779.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.30%)</title><rect x="783" y="228" width="4" height="15" fill="rgb(223,59,9)"/><text x="786.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.90%)</title><rect x="780" y="212" width="10" height="15" fill="rgb(227,139,53)"/><text x="783.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.30%)</title><rect x="787" y="228" width="3" height="15" fill="rgb(238,54,35)"/><text x="790.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (22 samples, 6.59%)</title><rect x="716" y="196" width="78" height="15" fill="rgb(221,183,27)"/><text x="719.00" y="206.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.30%)</title><rect x="790" y="212" width="4" height="15" fill="rgb(233,222,9)"/><text x="793.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.30%)</title><rect x="790" y="228" width="4" height="15" fill="rgb(252,109,12)"/><text x="793.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="797" y="228" width="4" height="15" fill="rgb(208,165,43)"/><text x="800.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.90%)</title><rect x="797" y="212" width="11" height="15" fill="rgb(220,141,49)"/><text x="800.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="801" y="228" width="7" height="15" fill="rgb(217,75,48)"/><text x="804.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 1.50%)</title><rect x="794" y="196" width="17" height="15" fill="rgb(224,88,5)"/><text x="797.00" y="206.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.30%)</title><rect x="808" y="212" width="3" height="15" fill="rgb(239,99,15)"/><text x="811.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="815" y="212" width="11" height="15" fill="rgb(246,211,29)"/><text x="818.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 8.38%)</title><rect x="826" y="212" width="99" height="15" fill="rgb(221,9,39)"/><text x="829.00" y="222.50">dgemm_kerne..</text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="925" y="292" width="3" height="15" fill="rgb(215,198,36)"/><text x="928.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="925" y="308" width="3" height="15" fill="rgb(239,32,27)"/><text x="928.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (16 samples, 4.79%)</title><rect x="925" y="260" width="56" height="15" fill="rgb(242,203,0)"/><text x="928.00" y="270.50">DOUBL..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 4.79%)</title><rect x="925" y="276" width="56" height="15" fill="rgb(238,201,21)"/><text x="928.00" y="286.50">cblas..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.49%)</title><rect x="928" y="292" width="53" height="15" fill="rgb(249,167,15)"/><text x="931.00" y="302.50">dgemm..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 4.49%)</title><rect x="928" y="308" width="53" height="15" fill="rgb(209,23,14)"/><text x="931.00" y="318.50">dgemm..</text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.30%)</title><rect x="981" y="260" width="4" height="15" fill="rgb(213,108,17)"/><text x="984.00" y="270.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.30%)</title><rect x="985" y="260" width="3" height="15" fill="rgb(210,194,54)"/><text x="988.00" y="270.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.30%)</title><rect x="988" y="260" width="4" height="15" fill="rgb(242,38,13)"/><text x="991.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.30%)</title><rect x="988" y="276" width="4" height="15" fill="rgb(222,172,15)"/><text x="991.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.30%)</title><rect x="992" y="260" width="3" height="15" fill="rgb(247,175,7)"/><text x="995.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.30%)</title><rect x="992" y="276" width="3" height="15" fill="rgb(247,65,12)"/><text x="995.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.30%)</title><rect x="995" y="260" width="4" height="15" fill="rgb(210,174,20)"/><text x="998.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (92 samples, 27.54%)</title><rect x="677" y="180" width="325" height="15" fill="rgb(214,176,18)"/><text x="680.00" y="190.50">decision_function (sklearn/linear_model/_ba..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (54 samples, 16.17%)</title><rect x="811" y="196" width="191" height="15" fill="rgb(232,11,32)"/><text x="814.00" y="206.50">safe_sparse_dot (sklearn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 6.59%)</title><rect x="925" y="212" width="77" height="15" fill="rgb(247,93,53)"/><text x="928.00" y="222.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 6.59%)</title><rect x="925" y="228" width="77" height="15" fill="rgb(227,167,29)"/><text x="928.00" y="238.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 6.59%)</title><rect x="925" y="244" width="77" height="15" fill="rgb(249,0,23)"/><text x="928.00" y="254.50">PyUFunc_..</text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.30%)</title><rect x="999" y="260" width="3" height="15" fill="rgb(205,167,50)"/><text x="1002.00" y="270.50"></text></g><g><title>0x7f9e24045db3 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="999" y="276" width="3" height="15" fill="rgb(214,133,25)"/><text x="1002.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.30%)</title><rect x="1002" y="196" width="4" height="15" fill="rgb(212,67,3)"/><text x="1005.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.30%)</title><rect x="1002" y="212" width="4" height="15" fill="rgb(245,210,52)"/><text x="1005.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.30%)</title><rect x="1002" y="228" width="4" height="15" fill="rgb(207,45,14)"/><text x="1005.00" y="238.50"></text></g><g><title>0x7f9e2403be7a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1002" y="244" width="4" height="15" fill="rgb(218,31,20)"/><text x="1005.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1006" y="212" width="3" height="15" fill="rgb(237,122,16)"/><text x="1009.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.30%)</title><rect x="1006" y="228" width="3" height="15" fill="rgb(239,228,35)"/><text x="1009.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.30%)</title><rect x="1009" y="228" width="4" height="15" fill="rgb(249,200,46)"/><text x="1012.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1009" y="244" width="4" height="15" fill="rgb(207,118,40)"/><text x="1012.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1009" y="260" width="4" height="15" fill="rgb(238,80,54)"/><text x="1012.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1009" y="276" width="4" height="15" fill="rgb(222,38,15)"/><text x="1012.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.30%)</title><rect x="1009" y="292" width="4" height="15" fill="rgb(227,67,23)"/><text x="1012.00" y="302.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.30%)</title><rect x="1009" y="308" width="4" height="15" fill="rgb(243,119,13)"/><text x="1012.00" y="318.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.30%)</title><rect x="1009" y="324" width="4" height="15" fill="rgb(218,93,4)"/><text x="1012.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 1.50%)</title><rect x="1016" y="244" width="18" height="15" fill="rgb(213,88,4)"/><text x="1019.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 1.50%)</title><rect x="1016" y="260" width="18" height="15" fill="rgb(212,147,48)"/><text x="1019.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 1.50%)</title><rect x="1016" y="276" width="18" height="15" fill="rgb(240,206,34)"/><text x="1019.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 1.50%)</title><rect x="1016" y="292" width="18" height="15" fill="rgb(216,170,2)"/><text x="1019.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.30%)</title><rect x="1034" y="244" width="4" height="15" fill="rgb(234,30,24)"/><text x="1037.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.30%)</title><rect x="1034" y="260" width="4" height="15" fill="rgb(245,71,53)"/><text x="1037.00" y="270.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.30%)</title><rect x="1034" y="276" width="4" height="15" fill="rgb(216,161,31)"/><text x="1037.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 3.89%)</title><rect x="1013" y="228" width="46" height="15" fill="rgb(220,83,50)"/><text x="1016.00" y="238.50">iter..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.80%)</title><rect x="1038" y="244" width="21" height="15" fill="rgb(230,215,19)"/><text x="1041.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.80%)</title><rect x="1038" y="260" width="21" height="15" fill="rgb(213,203,28)"/><text x="1041.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.50%)</title><rect x="1041" y="276" width="18" height="15" fill="rgb(223,189,31)"/><text x="1044.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.90%)</title><rect x="1048" y="292" width="11" height="15" fill="rgb(233,48,16)"/><text x="1051.00" y="302.50"></text></g><g><title>0x7f9e0642b9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="1059" y="244" width="3" height="15" fill="rgb(250,180,26)"/><text x="1062.00" y="254.50"></text></g><g><title>0x7f9e06409fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="1062" y="276" width="4" height="15" fill="rgb(230,133,42)"/><text x="1065.00" y="286.50"></text></g><g><title>0x7f9e065559f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="1066" y="276" width="3" height="15" fill="rgb(206,161,40)"/><text x="1069.00" y="286.50"></text></g><g><title>0x7f9e241711b0 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1080" y="292" width="7" height="15" fill="rgb(229,104,34)"/><text x="1083.00" y="302.50"></text></g><g><title>0x7f9e241f7ba0 (libm-2.29.so) (3 samples, 0.90%)</title><rect x="1087" y="292" width="11" height="15" fill="rgb(239,48,52)"/><text x="1090.00" y="302.50"></text></g><g><title>0x7f9e241f7bf9 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1098" y="292" width="3" height="15" fill="rgb(248,90,53)"/><text x="1101.00" y="302.50"></text></g><g><title>0x7f9e241f7c07 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1101" y="292" width="7" height="15" fill="rgb(206,208,9)"/><text x="1104.00" y="302.50"></text></g><g><title>0x7f9e241f7c3e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(230,56,34)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f9e241f7c56 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1112" y="292" width="3" height="15" fill="rgb(249,92,12)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f9e0644c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.79%)</title><rect x="1062" y="260" width="57" height="15" fill="rgb(208,53,42)"/><text x="1065.00" y="270.50">0x7f9e..</text></g><g><title>exp (libm-2.29.so) (14 samples, 4.19%)</title><rect x="1069" y="276" width="50" height="15" fill="rgb(212,184,15)"/><text x="1072.00" y="286.50">exp (..</text></g><g><title>0x7f9e241f7c6a (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1115" y="292" width="4" height="15" fill="rgb(218,36,5)"/><text x="1118.00" y="302.50"></text></g><g><title>0x7f9e0644c275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="1119" y="260" width="7" height="15" fill="rgb(217,90,49)"/><text x="1122.00" y="270.50"></text></g><g><title>0x7f9e0642b9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 7.49%)</title><rect x="1062" y="244" width="89" height="15" fill="rgb(234,171,23)"/><text x="1065.00" y="254.50">0x7f9e0642..</text></g><g><title>0x7f9e0644c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.10%)</title><rect x="1126" y="260" width="25" height="15" fill="rgb(240,197,25)"/><text x="1129.00" y="270.50">0..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (43 samples, 12.87%)</title><rect x="1009" y="212" width="152" height="15" fill="rgb(215,179,5)"/><text x="1012.00" y="222.50">execute_legacy_ufun..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (29 samples, 8.68%)</title><rect x="1059" y="228" width="102" height="15" fill="rgb(213,193,26)"/><text x="1062.00" y="238.50">trivial_two_..</text></g><g><title>0x7f9e0642b9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.90%)</title><rect x="1151" y="244" width="10" height="15" fill="rgb(214,132,35)"/><text x="1154.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (156 samples, 46.71%)</title><rect x="614" y="164" width="551" height="15" fill="rgb(236,87,30)"/><text x="617.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 13.77%)</title><rect x="1002" y="180" width="163" height="15" fill="rgb(249,97,29)"/><text x="1005.00" y="190.50">ufunc_generic_call (u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (45 samples, 13.47%)</title><rect x="1006" y="196" width="159" height="15" fill="rgb(209,58,33)"/><text x="1009.00" y="206.50">PyUFunc_GenericFunct..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.30%)</title><rect x="1161" y="212" width="4" height="15" fill="rgb(234,31,36)"/><text x="1164.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.30%)</title><rect x="1161" y="228" width="4" height="15" fill="rgb(246,229,29)"/><text x="1164.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.60%)</title><rect x="1175" y="196" width="7" height="15" fill="rgb(209,130,45)"/><text x="1178.00" y="206.50"></text></g><g><title>all (334 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,8,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (334 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,6,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (169 samples, 50.60%)</title><rect x="592" y="68" width="598" height="15" fill="rgb(227,133,44)"/><text x="595.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (169 samples, 50.60%)</title><rect x="592" y="84" width="598" height="15" fill="rgb(248,21,8)"/><text x="595.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_100..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_.py) (169 samples, 50.60%)</title><rect x="592" y="100" width="598" height="15" fill="rgb(221,40,7)"/><text x="595.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (169 samples, 50.60%)</title><rect x="592" y="116" width="598" height="15" fill="rgb(248,19,17)"/><text x="595.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (168 samples, 50.30%)</title><rect x="596" y="132" width="594" height="15" fill="rgb(210,94,14)"/><text x="599.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (168 samples, 50.30%)</title><rect x="596" y="148" width="594" height="15" fill="rgb(235,67,52)"/><text x="599.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 2.10%)</title><rect x="1165" y="164" width="25" height="15" fill="rgb(244,196,19)"/><text x="1168.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 2.10%)</title><rect x="1165" y="180" width="25" height="15" fill="rgb(236,78,14)"/><text x="1168.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="1182" y="196" width="8" height="15" fill="rgb(245,183,34)"/><text x="1185.00" y="206.50"></text></g></g></svg>