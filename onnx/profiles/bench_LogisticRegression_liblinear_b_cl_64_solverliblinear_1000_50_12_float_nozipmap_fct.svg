<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(208,15,19)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(253,219,0)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(250,48,11)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(222,34,27)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(207,62,25)"/><text x="13.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(246,173,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(219,77,33)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(216,15,4)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(240,59,11)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(215,44,4)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(229,33,30)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(205,55,54)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(235,75,33)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(216,150,3)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(243,169,9)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(233,138,49)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(218,121,32)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(215,21,20)"/><text x="15.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(251,188,1)"/><text x="15.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(209,210,52)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.68%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(248,20,46)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(218,25,42)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(241,186,10)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(229,121,34)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(247,224,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(237,183,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.68%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(250,74,37)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(221,85,8)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(223,213,25)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(248,210,17)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(233,25,11)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(219,94,10)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(234,162,28)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(252,113,22)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(215,72,2)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.68%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(213,39,21)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(212,164,2)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(218,181,7)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(252,149,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(245,170,45)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(246,30,38)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.68%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(245,3,17)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="15" y="836" width="3" height="15" fill="rgb(226,203,47)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="15" y="852" width="3" height="15" fill="rgb(249,66,53)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(233,52,21)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(211,151,10)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(253,2,34)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.23%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(224,153,3)"/><text x="18.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.23%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(207,107,16)"/><text x="18.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(241,194,30)"/><text x="18.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(225,177,13)"/><text x="18.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(242,185,45)"/><text x="18.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="996" width="3" height="15" fill="rgb(252,216,13)"/><text x="18.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1012" width="3" height="15" fill="rgb(220,167,10)"/><text x="18.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1028" width="3" height="15" fill="rgb(238,105,20)"/><text x="18.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1044" width="3" height="15" fill="rgb(244,190,39)"/><text x="18.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1060" width="3" height="15" fill="rgb(208,82,11)"/><text x="18.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1076" width="3" height="15" fill="rgb(233,42,49)"/><text x="18.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1092" width="3" height="15" fill="rgb(212,11,6)"/><text x="18.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1108" width="3" height="15" fill="rgb(237,117,19)"/><text x="18.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1124" width="3" height="15" fill="rgb(228,115,23)"/><text x="18.00" y="1134.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1140" width="3" height="15" fill="rgb(205,54,41)"/><text x="18.00" y="1150.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.23%)</title><rect x="15" y="1156" width="3" height="15" fill="rgb(214,175,24)"/><text x="18.00" y="1166.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.91%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(227,191,54)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(240,198,34)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(206,201,3)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(233,141,19)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(209,74,35)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(241,219,1)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.91%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(248,47,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(239,114,39)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(206,135,31)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(210,141,43)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(212,150,4)"/><text x="13.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="18" y="468" width="2" height="15" fill="rgb(247,176,40)"/><text x="21.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="18" y="484" width="2" height="15" fill="rgb(242,214,24)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(245,12,52)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(207,210,41)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(211,108,33)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(251,149,26)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(241,28,21)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(206,80,37)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(219,152,51)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(205,2,11)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(211,226,45)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(223,91,5)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(232,8,27)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/sf_error.py) (1 samples, 0.23%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(243,58,43)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(206,72,5)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(248,71,39)"/><text x="26.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(252,22,20)"/><text x="26.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(250,110,17)"/><text x="26.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(229,107,54)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(232,17,5)"/><text x="26.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(249,117,43)"/><text x="26.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(221,35,51)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(242,6,33)"/><text x="26.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(250,188,1)"/><text x="26.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(241,142,31)"/><text x="26.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(230,141,11)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1108" width="3" height="15" fill="rgb(233,213,34)"/><text x="26.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.23%)</title><rect x="23" y="1124" width="3" height="15" fill="rgb(210,94,53)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1140" width="3" height="15" fill="rgb(254,73,33)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1156" width="3" height="15" fill="rgb(214,1,36)"/><text x="26.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1172" width="3" height="15" fill="rgb(222,111,41)"/><text x="26.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1188" width="3" height="15" fill="rgb(242,179,53)"/><text x="26.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1204" width="3" height="15" fill="rgb(225,27,19)"/><text x="26.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.23%)</title><rect x="23" y="1220" width="3" height="15" fill="rgb(225,163,20)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1236" width="3" height="15" fill="rgb(229,41,28)"/><text x="26.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1252" width="3" height="15" fill="rgb(222,166,26)"/><text x="26.00" y="1262.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="23" y="1268" width="3" height="15" fill="rgb(245,78,1)"/><text x="26.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1284" width="3" height="15" fill="rgb(231,109,32)"/><text x="26.00" y="1294.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1300" width="3" height="15" fill="rgb(249,129,34)"/><text x="26.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1316" width="3" height="15" fill="rgb(217,93,42)"/><text x="26.00" y="1326.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="23" y="1332" width="3" height="15" fill="rgb(216,8,35)"/><text x="26.00" y="1342.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(228,91,20)"/><text x="29.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.23%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(241,39,7)"/><text x="29.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(215,169,32)"/><text x="29.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(223,200,29)"/><text x="29.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(210,9,46)"/><text x="29.00" y="1134.50"></text></g><g><title>_signature_bound_method (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(237,14,38)"/><text x="29.00" y="1150.50"></text></g><g><title>replace (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(243,171,21)"/><text x="29.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.23%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(231,123,50)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.81%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(240,156,50)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.81%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(223,71,14)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.81%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(243,225,5)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.81%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(211,77,12)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.81%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(217,152,23)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.81%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(249,49,8)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.91%)</title><rect x="20" y="292" width="11" height="15" fill="rgb(240,19,36)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="308" width="11" height="15" fill="rgb(222,133,19)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="324" width="11" height="15" fill="rgb(234,91,13)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="340" width="11" height="15" fill="rgb(251,225,39)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="20" y="356" width="11" height="15" fill="rgb(218,11,1)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="372" width="11" height="15" fill="rgb(243,54,6)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.91%)</title><rect x="20" y="388" width="11" height="15" fill="rgb(224,144,28)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="404" width="11" height="15" fill="rgb(243,138,26)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="420" width="11" height="15" fill="rgb(225,155,30)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="436" width="11" height="15" fill="rgb(213,24,32)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="20" y="452" width="11" height="15" fill="rgb(208,50,19)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="468" width="11" height="15" fill="rgb(214,195,28)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.91%)</title><rect x="20" y="484" width="11" height="15" fill="rgb(250,12,33)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="500" width="11" height="15" fill="rgb(239,150,36)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="516" width="11" height="15" fill="rgb(208,27,29)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="532" width="11" height="15" fill="rgb(234,203,10)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="20" y="548" width="11" height="15" fill="rgb(248,127,0)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="564" width="11" height="15" fill="rgb(251,4,5)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 0.91%)</title><rect x="20" y="580" width="11" height="15" fill="rgb(243,176,30)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="596" width="11" height="15" fill="rgb(250,35,47)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="612" width="11" height="15" fill="rgb(223,159,28)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="628" width="11" height="15" fill="rgb(206,8,53)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="20" y="644" width="11" height="15" fill="rgb(253,195,15)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="660" width="11" height="15" fill="rgb(238,123,31)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 0.91%)</title><rect x="20" y="676" width="11" height="15" fill="rgb(217,208,6)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="692" width="11" height="15" fill="rgb(220,18,4)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="708" width="11" height="15" fill="rgb(240,142,19)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="724" width="11" height="15" fill="rgb(211,10,22)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.91%)</title><rect x="20" y="740" width="11" height="15" fill="rgb(241,162,21)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.91%)</title><rect x="20" y="756" width="11" height="15" fill="rgb(238,134,26)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 0.91%)</title><rect x="20" y="772" width="11" height="15" fill="rgb(221,50,6)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="788" width="8" height="15" fill="rgb(249,67,28)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="804" width="8" height="15" fill="rgb(251,224,54)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="820" width="8" height="15" fill="rgb(227,63,20)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="836" width="8" height="15" fill="rgb(253,213,24)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="852" width="8" height="15" fill="rgb(240,180,4)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="23" y="868" width="8" height="15" fill="rgb(249,125,20)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="23" y="884" width="8" height="15" fill="rgb(213,49,34)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.68%)</title><rect x="23" y="900" width="8" height="15" fill="rgb(235,213,22)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(206,53,35)"/><text x="29.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(244,149,31)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="948" width="5" height="15" fill="rgb(249,6,35)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(233,109,25)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(244,27,45)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(235,110,41)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(241,137,31)"/><text x="29.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.45%)</title><rect x="26" y="1028" width="5" height="15" fill="rgb(233,136,29)"/><text x="29.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.45%)</title><rect x="26" y="1044" width="5" height="15" fill="rgb(216,84,6)"/><text x="29.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(234,218,8)"/><text x="31.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.23%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(214,18,7)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.23%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(235,35,33)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1284" width="3" height="15" fill="rgb(207,205,36)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.23%)</title><rect x="31" y="1300" width="3" height="15" fill="rgb(252,111,54)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1316" width="3" height="15" fill="rgb(225,180,27)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1332" width="3" height="15" fill="rgb(231,68,14)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1348" width="3" height="15" fill="rgb(221,132,46)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1364" width="3" height="15" fill="rgb(232,32,48)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1380" width="3" height="15" fill="rgb(226,116,33)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.23%)</title><rect x="31" y="1396" width="3" height="15" fill="rgb(250,41,14)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1412" width="3" height="15" fill="rgb(244,29,28)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1428" width="3" height="15" fill="rgb(221,155,11)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1444" width="3" height="15" fill="rgb(209,126,12)"/><text x="34.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1460" width="3" height="15" fill="rgb(243,188,53)"/><text x="34.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1476" width="3" height="15" fill="rgb(232,30,37)"/><text x="34.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.23%)</title><rect x="31" y="1492" width="3" height="15" fill="rgb(221,126,9)"/><text x="34.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1508" width="3" height="15" fill="rgb(249,70,31)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1524" width="3" height="15" fill="rgb(226,203,35)"/><text x="34.00" y="1534.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1540" width="3" height="15" fill="rgb(220,94,29)"/><text x="34.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1556" width="3" height="15" fill="rgb(218,60,51)"/><text x="34.00" y="1566.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1572" width="3" height="15" fill="rgb(232,217,20)"/><text x="34.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1588" width="3" height="15" fill="rgb(251,228,5)"/><text x="34.00" y="1598.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1604" width="3" height="15" fill="rgb(210,36,9)"/><text x="34.00" y="1614.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="31" y="1620" width="3" height="15" fill="rgb(247,13,34)"/><text x="34.00" y="1630.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="31" y="1636" width="3" height="15" fill="rgb(239,146,22)"/><text x="34.00" y="1646.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.45%)</title><rect x="31" y="1204" width="5" height="15" fill="rgb(222,202,44)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1220" width="5" height="15" fill="rgb(212,197,14)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1236" width="5" height="15" fill="rgb(209,12,0)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1252" width="5" height="15" fill="rgb(249,120,23)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="1268" width="5" height="15" fill="rgb(209,211,43)"/><text x="34.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="1284" width="2" height="15" fill="rgb(247,117,0)"/><text x="37.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="34" y="1300" width="2" height="15" fill="rgb(214,207,16)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="31" y="1124" width="8" height="15" fill="rgb(217,137,3)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="31" y="1140" width="8" height="15" fill="rgb(212,57,8)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="31" y="1156" width="8" height="15" fill="rgb(216,51,36)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="31" y="1172" width="8" height="15" fill="rgb(222,104,48)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="31" y="1188" width="8" height="15" fill="rgb(229,20,15)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.23%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(206,216,42)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(217,186,35)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(241,177,45)"/><text x="39.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(207,3,50)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(250,82,39)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(221,191,23)"/><text x="39.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(216,207,3)"/><text x="39.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(241,39,52)"/><text x="39.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(241,192,27)"/><text x="39.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.23%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(210,99,31)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(250,39,48)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(223,229,8)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(209,85,30)"/><text x="39.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(253,111,10)"/><text x="39.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(209,92,10)"/><text x="39.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(247,59,24)"/><text x="39.00" y="1454.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(239,156,6)"/><text x="39.00" y="1470.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.23%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(237,116,53)"/><text x="39.00" y="1486.50"></text></g><g><title>0x7f032f56d0e9 (?) (1 samples, 0.23%)</title><rect x="39" y="1508" width="3" height="15" fill="rgb(227,139,26)"/><text x="42.00" y="1518.50"></text></g><g><title>0x7f032f553bc1 (?) (1 samples, 0.23%)</title><rect x="39" y="1524" width="3" height="15" fill="rgb(243,195,27)"/><text x="42.00" y="1534.50"></text></g><g><title>0x7f032f631b8e (?) (1 samples, 0.23%)</title><rect x="39" y="1540" width="3" height="15" fill="rgb(211,65,1)"/><text x="42.00" y="1550.50"></text></g><g><title>0x7f032f634a47 (?) (1 samples, 0.23%)</title><rect x="39" y="1556" width="3" height="15" fill="rgb(219,165,2)"/><text x="42.00" y="1566.50"></text></g><g><title>0x7f032f632001 (?) (1 samples, 0.23%)</title><rect x="39" y="1572" width="3" height="15" fill="rgb(240,77,41)"/><text x="42.00" y="1582.50"></text></g><g><title>0x7f032f63828d (?) (1 samples, 0.23%)</title><rect x="39" y="1588" width="3" height="15" fill="rgb(223,90,52)"/><text x="42.00" y="1598.50"></text></g><g><title>0x7f032f579132 (?) (1 samples, 0.23%)</title><rect x="39" y="1604" width="3" height="15" fill="rgb(209,43,17)"/><text x="42.00" y="1614.50"></text></g><g><title>0x7f032f578fb9 (?) (1 samples, 0.23%)</title><rect x="39" y="1620" width="3" height="15" fill="rgb(205,6,38)"/><text x="42.00" y="1630.50"></text></g><g><title>0x7f032f5626b0 (?) (1 samples, 0.23%)</title><rect x="39" y="1636" width="3" height="15" fill="rgb(235,132,28)"/><text x="42.00" y="1646.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.45%)</title><rect x="42" y="1508" width="5" height="15" fill="rgb(210,186,20)"/><text x="45.00" y="1518.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.23%)</title><rect x="47" y="1588" width="3" height="15" fill="rgb(220,43,26)"/><text x="50.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="47" y="1604" width="3" height="15" fill="rgb(245,5,33)"/><text x="50.00" y="1614.50"></text></g><g><title>pybind11::detail::function_call::~function_call (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="47" y="1620" width="3" height="15" fill="rgb(247,136,45)"/><text x="50.00" y="1630.50"></text></g><g><title>0x7f033f4b196a (libc-2.29.so) (1 samples, 0.23%)</title><rect x="47" y="1636" width="3" height="15" fill="rgb(211,78,0)"/><text x="50.00" y="1646.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.45%)</title><rect x="47" y="1508" width="5" height="15" fill="rgb(215,142,16)"/><text x="50.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.45%)</title><rect x="47" y="1524" width="5" height="15" fill="rgb(219,23,24)"/><text x="50.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.45%)</title><rect x="47" y="1540" width="5" height="15" fill="rgb(244,2,23)"/><text x="50.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.45%)</title><rect x="47" y="1556" width="5" height="15" fill="rgb(225,14,52)"/><text x="50.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.45%)</title><rect x="47" y="1572" width="5" height="15" fill="rgb(224,123,29)"/><text x="50.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.23%)</title><rect x="50" y="1588" width="2" height="15" fill="rgb(236,109,6)"/><text x="53.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="484" width="24" height="15" fill="rgb(242,127,49)"/><text x="34.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="500" width="24" height="15" fill="rgb(205,59,2)"/><text x="34.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="516" width="24" height="15" fill="rgb(249,108,36)"/><text x="34.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="532" width="24" height="15" fill="rgb(243,8,30)"/><text x="34.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="548" width="24" height="15" fill="rgb(230,35,54)"/><text x="34.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="564" width="24" height="15" fill="rgb(221,140,37)"/><text x="34.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (9 samples, 2.04%)</title><rect x="31" y="580" width="24" height="15" fill="rgb(242,85,50)"/><text x="34.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="596" width="24" height="15" fill="rgb(223,104,35)"/><text x="34.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="612" width="24" height="15" fill="rgb(209,69,25)"/><text x="34.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="628" width="24" height="15" fill="rgb(235,21,41)"/><text x="34.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="644" width="24" height="15" fill="rgb(232,30,31)"/><text x="34.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="660" width="24" height="15" fill="rgb(229,206,51)"/><text x="34.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (9 samples, 2.04%)</title><rect x="31" y="676" width="24" height="15" fill="rgb(238,113,45)"/><text x="34.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="692" width="24" height="15" fill="rgb(244,169,36)"/><text x="34.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="708" width="24" height="15" fill="rgb(245,226,40)"/><text x="34.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="724" width="24" height="15" fill="rgb(242,16,38)"/><text x="34.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="740" width="24" height="15" fill="rgb(227,178,39)"/><text x="34.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="756" width="24" height="15" fill="rgb(208,219,23)"/><text x="34.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (9 samples, 2.04%)</title><rect x="31" y="772" width="24" height="15" fill="rgb(206,224,6)"/><text x="34.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="788" width="24" height="15" fill="rgb(233,207,18)"/><text x="34.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="804" width="24" height="15" fill="rgb(246,178,42)"/><text x="34.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="820" width="24" height="15" fill="rgb(234,220,13)"/><text x="34.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="836" width="24" height="15" fill="rgb(240,192,24)"/><text x="34.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="852" width="24" height="15" fill="rgb(226,197,13)"/><text x="34.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (9 samples, 2.04%)</title><rect x="31" y="868" width="24" height="15" fill="rgb(236,115,4)"/><text x="34.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="884" width="24" height="15" fill="rgb(219,2,25)"/><text x="34.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="900" width="24" height="15" fill="rgb(224,35,36)"/><text x="34.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="916" width="24" height="15" fill="rgb(209,218,3)"/><text x="34.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="932" width="24" height="15" fill="rgb(239,34,28)"/><text x="34.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="948" width="24" height="15" fill="rgb(245,159,6)"/><text x="34.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="964" width="24" height="15" fill="rgb(206,75,30)"/><text x="34.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="980" width="24" height="15" fill="rgb(215,142,34)"/><text x="34.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="996" width="24" height="15" fill="rgb(206,197,41)"/><text x="34.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (9 samples, 2.04%)</title><rect x="31" y="1012" width="24" height="15" fill="rgb(222,217,52)"/><text x="34.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="1028" width="24" height="15" fill="rgb(225,124,36)"/><text x="34.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="1044" width="24" height="15" fill="rgb(219,89,54)"/><text x="34.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="1060" width="24" height="15" fill="rgb(224,141,39)"/><text x="34.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.04%)</title><rect x="31" y="1076" width="24" height="15" fill="rgb(228,10,10)"/><text x="34.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.04%)</title><rect x="31" y="1092" width="24" height="15" fill="rgb(248,228,34)"/><text x="34.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (9 samples, 2.04%)</title><rect x="31" y="1108" width="24" height="15" fill="rgb(228,217,17)"/><text x="34.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1124" width="16" height="15" fill="rgb(229,137,46)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1140" width="16" height="15" fill="rgb(214,159,12)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1156" width="16" height="15" fill="rgb(247,47,32)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1172" width="16" height="15" fill="rgb(238,178,22)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1188" width="16" height="15" fill="rgb(252,202,5)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.36%)</title><rect x="39" y="1204" width="16" height="15" fill="rgb(248,95,24)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1220" width="16" height="15" fill="rgb(225,186,45)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (6 samples, 1.36%)</title><rect x="39" y="1236" width="16" height="15" fill="rgb(247,119,5)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1252" width="16" height="15" fill="rgb(211,49,8)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1268" width="16" height="15" fill="rgb(205,13,11)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1284" width="16" height="15" fill="rgb(223,109,22)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1300" width="16" height="15" fill="rgb(254,148,36)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1316" width="16" height="15" fill="rgb(215,18,45)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.36%)</title><rect x="39" y="1332" width="16" height="15" fill="rgb(218,99,33)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1348" width="16" height="15" fill="rgb(239,132,16)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (6 samples, 1.36%)</title><rect x="39" y="1364" width="16" height="15" fill="rgb(241,215,49)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1380" width="16" height="15" fill="rgb(240,204,51)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1396" width="16" height="15" fill="rgb(242,218,13)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1412" width="16" height="15" fill="rgb(233,17,5)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.36%)</title><rect x="39" y="1428" width="16" height="15" fill="rgb(234,194,31)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.36%)</title><rect x="39" y="1444" width="16" height="15" fill="rgb(222,180,10)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.36%)</title><rect x="39" y="1460" width="16" height="15" fill="rgb(233,187,49)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.36%)</title><rect x="39" y="1476" width="16" height="15" fill="rgb(235,222,42)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.36%)</title><rect x="39" y="1492" width="16" height="15" fill="rgb(208,199,54)"/><text x="42.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="52" y="1508" width="3" height="15" fill="rgb(226,76,47)"/><text x="55.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="52" y="1524" width="3" height="15" fill="rgb(245,165,37)"/><text x="55.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="52" y="1540" width="3" height="15" fill="rgb(250,1,48)"/><text x="55.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver11::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="52" y="1556" width="3" height="15" fill="rgb(226,77,41)"/><text x="55.00" y="1566.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::SequenceErase_Onnx_ver11&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(249,214,21)"/><text x="55.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="772" width="3" height="15" fill="rgb(236,108,43)"/><text x="58.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="788" width="3" height="15" fill="rgb(250,218,15)"/><text x="58.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="804" width="3" height="15" fill="rgb(252,159,6)"/><text x="58.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="820" width="3" height="15" fill="rgb(213,178,28)"/><text x="58.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="836" width="3" height="15" fill="rgb(211,97,42)"/><text x="58.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="852" width="3" height="15" fill="rgb(208,168,15)"/><text x="58.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.23%)</title><rect x="55" y="868" width="3" height="15" fill="rgb(221,183,29)"/><text x="58.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="884" width="3" height="15" fill="rgb(236,52,47)"/><text x="58.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="900" width="3" height="15" fill="rgb(212,180,20)"/><text x="58.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="916" width="3" height="15" fill="rgb(251,218,9)"/><text x="58.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="932" width="3" height="15" fill="rgb(224,23,41)"/><text x="58.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="948" width="3" height="15" fill="rgb(209,159,42)"/><text x="58.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.23%)</title><rect x="55" y="964" width="3" height="15" fill="rgb(220,149,9)"/><text x="58.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="980" width="3" height="15" fill="rgb(212,160,18)"/><text x="58.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="996" width="3" height="15" fill="rgb(207,104,23)"/><text x="58.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="55" y="1012" width="3" height="15" fill="rgb(215,165,52)"/><text x="58.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="1028" width="3" height="15" fill="rgb(219,210,8)"/><text x="58.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="1044" width="3" height="15" fill="rgb(207,18,6)"/><text x="58.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="55" y="1060" width="3" height="15" fill="rgb(211,112,11)"/><text x="58.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="996" width="2" height="15" fill="rgb(226,86,32)"/><text x="61.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.23%)</title><rect x="58" y="1012" width="2" height="15" fill="rgb(248,22,43)"/><text x="61.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1028" width="2" height="15" fill="rgb(243,174,8)"/><text x="61.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1044" width="2" height="15" fill="rgb(250,8,46)"/><text x="61.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1060" width="2" height="15" fill="rgb(225,64,15)"/><text x="61.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1076" width="2" height="15" fill="rgb(228,94,46)"/><text x="61.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1092" width="2" height="15" fill="rgb(235,1,49)"/><text x="61.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.23%)</title><rect x="58" y="1108" width="2" height="15" fill="rgb(228,92,31)"/><text x="61.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1124" width="2" height="15" fill="rgb(222,216,37)"/><text x="61.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1140" width="2" height="15" fill="rgb(248,73,18)"/><text x="61.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1156" width="2" height="15" fill="rgb(238,187,12)"/><text x="61.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1172" width="2" height="15" fill="rgb(235,33,25)"/><text x="61.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1188" width="2" height="15" fill="rgb(217,227,44)"/><text x="61.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.23%)</title><rect x="58" y="1204" width="2" height="15" fill="rgb(247,61,41)"/><text x="61.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1220" width="2" height="15" fill="rgb(230,41,21)"/><text x="61.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1236" width="2" height="15" fill="rgb(231,228,33)"/><text x="61.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1252" width="2" height="15" fill="rgb(241,43,2)"/><text x="61.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1268" width="2" height="15" fill="rgb(224,187,36)"/><text x="61.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1284" width="2" height="15" fill="rgb(221,100,30)"/><text x="61.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.23%)</title><rect x="58" y="1300" width="2" height="15" fill="rgb(244,200,36)"/><text x="61.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1316" width="2" height="15" fill="rgb(217,187,32)"/><text x="61.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1332" width="2" height="15" fill="rgb(221,135,26)"/><text x="61.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1348" width="2" height="15" fill="rgb(243,186,49)"/><text x="61.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1364" width="2" height="15" fill="rgb(219,208,40)"/><text x="61.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1380" width="2" height="15" fill="rgb(208,96,8)"/><text x="61.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.23%)</title><rect x="58" y="1396" width="2" height="15" fill="rgb(249,139,50)"/><text x="61.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1412" width="2" height="15" fill="rgb(229,79,18)"/><text x="61.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1428" width="2" height="15" fill="rgb(219,15,4)"/><text x="61.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1444" width="2" height="15" fill="rgb(216,78,27)"/><text x="61.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1460" width="2" height="15" fill="rgb(218,216,2)"/><text x="61.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1476" width="2" height="15" fill="rgb(217,102,44)"/><text x="61.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.23%)</title><rect x="58" y="1492" width="2" height="15" fill="rgb(228,163,29)"/><text x="61.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1508" width="2" height="15" fill="rgb(242,127,45)"/><text x="61.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1524" width="2" height="15" fill="rgb(221,77,31)"/><text x="61.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1540" width="2" height="15" fill="rgb(247,110,11)"/><text x="61.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1556" width="2" height="15" fill="rgb(230,130,13)"/><text x="61.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1572" width="2" height="15" fill="rgb(227,49,29)"/><text x="61.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.23%)</title><rect x="58" y="1588" width="2" height="15" fill="rgb(241,221,24)"/><text x="61.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1604" width="2" height="15" fill="rgb(229,63,41)"/><text x="61.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1620" width="2" height="15" fill="rgb(215,103,30)"/><text x="61.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1636" width="2" height="15" fill="rgb(215,106,33)"/><text x="61.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1652" width="2" height="15" fill="rgb(251,153,46)"/><text x="61.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1668" width="2" height="15" fill="rgb(252,29,2)"/><text x="61.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.23%)</title><rect x="58" y="1684" width="2" height="15" fill="rgb(205,132,41)"/><text x="61.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1700" width="2" height="15" fill="rgb(214,201,10)"/><text x="61.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1716" width="2" height="15" fill="rgb(253,155,49)"/><text x="61.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1732" width="2" height="15" fill="rgb(241,7,17)"/><text x="61.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1748" width="2" height="15" fill="rgb(244,199,10)"/><text x="61.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1764" width="2" height="15" fill="rgb(209,143,34)"/><text x="61.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.23%)</title><rect x="58" y="1780" width="2" height="15" fill="rgb(219,128,51)"/><text x="61.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1796" width="2" height="15" fill="rgb(237,12,13)"/><text x="61.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1812" width="2" height="15" fill="rgb(249,162,45)"/><text x="61.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="58" y="1828" width="2" height="15" fill="rgb(219,165,25)"/><text x="61.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1844" width="2" height="15" fill="rgb(217,111,28)"/><text x="61.00" y="1854.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1860" width="2" height="15" fill="rgb(249,130,9)"/><text x="61.00" y="1870.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="58" y="1876" width="2" height="15" fill="rgb(226,100,30)"/><text x="61.00" y="1886.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="58" y="1892" width="2" height="15" fill="rgb(227,59,54)"/><text x="61.00" y="1902.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 2.72%)</title><rect x="31" y="244" width="32" height="15" fill="rgb(239,20,43)"/><text x="34.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="260" width="32" height="15" fill="rgb(245,16,38)"/><text x="34.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="276" width="32" height="15" fill="rgb(240,163,51)"/><text x="34.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="292" width="32" height="15" fill="rgb(243,128,45)"/><text x="34.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.72%)</title><rect x="31" y="308" width="32" height="15" fill="rgb(206,188,17)"/><text x="34.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="324" width="32" height="15" fill="rgb(206,41,42)"/><text x="34.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.72%)</title><rect x="31" y="340" width="32" height="15" fill="rgb(241,51,40)"/><text x="34.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="356" width="32" height="15" fill="rgb(235,8,51)"/><text x="34.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="372" width="32" height="15" fill="rgb(242,8,16)"/><text x="34.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="388" width="32" height="15" fill="rgb(239,169,10)"/><text x="34.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.72%)</title><rect x="31" y="404" width="32" height="15" fill="rgb(250,203,34)"/><text x="34.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="420" width="32" height="15" fill="rgb(230,108,23)"/><text x="34.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (12 samples, 2.72%)</title><rect x="31" y="436" width="32" height="15" fill="rgb(242,166,48)"/><text x="34.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="452" width="32" height="15" fill="rgb(207,146,30)"/><text x="34.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.72%)</title><rect x="31" y="468" width="32" height="15" fill="rgb(230,101,5)"/><text x="34.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="484" width="8" height="15" fill="rgb(224,144,6)"/><text x="58.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="55" y="500" width="8" height="15" fill="rgb(207,51,21)"/><text x="58.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="516" width="8" height="15" fill="rgb(211,118,43)"/><text x="58.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.68%)</title><rect x="55" y="532" width="8" height="15" fill="rgb(227,36,49)"/><text x="58.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="548" width="8" height="15" fill="rgb(229,13,3)"/><text x="58.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="564" width="8" height="15" fill="rgb(223,135,12)"/><text x="58.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="580" width="8" height="15" fill="rgb(212,68,34)"/><text x="58.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="55" y="596" width="8" height="15" fill="rgb(235,72,10)"/><text x="58.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="612" width="8" height="15" fill="rgb(216,73,48)"/><text x="58.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.68%)</title><rect x="55" y="628" width="8" height="15" fill="rgb(248,195,42)"/><text x="58.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="644" width="8" height="15" fill="rgb(254,124,48)"/><text x="58.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="660" width="8" height="15" fill="rgb(220,75,16)"/><text x="58.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="676" width="8" height="15" fill="rgb(251,131,49)"/><text x="58.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.68%)</title><rect x="55" y="692" width="8" height="15" fill="rgb(216,161,36)"/><text x="58.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="708" width="8" height="15" fill="rgb(220,192,12)"/><text x="58.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.68%)</title><rect x="55" y="724" width="8" height="15" fill="rgb(208,121,44)"/><text x="58.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="740" width="8" height="15" fill="rgb(245,1,34)"/><text x="58.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.68%)</title><rect x="55" y="756" width="8" height="15" fill="rgb(236,74,15)"/><text x="58.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="772" width="5" height="15" fill="rgb(243,121,36)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="58" y="788" width="5" height="15" fill="rgb(243,73,47)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="804" width="5" height="15" fill="rgb(218,121,23)"/><text x="61.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.45%)</title><rect x="58" y="820" width="5" height="15" fill="rgb(211,179,34)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="836" width="5" height="15" fill="rgb(254,137,43)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="852" width="5" height="15" fill="rgb(245,35,15)"/><text x="61.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="868" width="5" height="15" fill="rgb(231,144,23)"/><text x="61.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="58" y="884" width="5" height="15" fill="rgb(237,186,34)"/><text x="61.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="900" width="5" height="15" fill="rgb(239,171,45)"/><text x="61.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.45%)</title><rect x="58" y="916" width="5" height="15" fill="rgb(239,55,18)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="932" width="5" height="15" fill="rgb(247,136,10)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="948" width="5" height="15" fill="rgb(216,176,0)"/><text x="61.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="58" y="964" width="5" height="15" fill="rgb(245,228,6)"/><text x="61.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="58" y="980" width="5" height="15" fill="rgb(247,117,51)"/><text x="61.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="60" y="996" width="3" height="15" fill="rgb(222,203,39)"/><text x="63.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="60" y="1012" width="3" height="15" fill="rgb(245,52,9)"/><text x="63.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="60" y="1028" width="3" height="15" fill="rgb(224,109,49)"/><text x="63.00" y="1038.50"></text></g><g><title>0x7f033f4b38a4 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="60" y="1044" width="3" height="15" fill="rgb(246,113,27)"/><text x="63.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="68" width="56" height="15" fill="rgb(240,25,41)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="84" width="56" height="15" fill="rgb(212,8,9)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="100" width="56" height="15" fill="rgb(249,178,5)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 4.76%)</title><rect x="10" y="116" width="56" height="15" fill="rgb(233,89,46)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="132" width="56" height="15" fill="rgb(229,188,13)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (21 samples, 4.76%)</title><rect x="10" y="148" width="56" height="15" fill="rgb(211,154,38)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="164" width="56" height="15" fill="rgb(245,53,0)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.76%)</title><rect x="10" y="180" width="56" height="15" fill="rgb(235,124,18)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.95%)</title><rect x="31" y="196" width="35" height="15" fill="rgb(214,185,45)"/><text x="34.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.95%)</title><rect x="31" y="212" width="35" height="15" fill="rgb(232,144,29)"/><text x="34.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.95%)</title><rect x="31" y="228" width="35" height="15" fill="rgb(212,124,23)"/><text x="34.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.23%)</title><rect x="63" y="244" width="3" height="15" fill="rgb(214,142,16)"/><text x="66.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="260" width="3" height="15" fill="rgb(248,152,18)"/><text x="66.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="276" width="3" height="15" fill="rgb(219,121,2)"/><text x="66.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="292" width="3" height="15" fill="rgb(209,40,41)"/><text x="66.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="308" width="3" height="15" fill="rgb(243,119,15)"/><text x="66.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="324" width="3" height="15" fill="rgb(235,48,0)"/><text x="66.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="63" y="340" width="3" height="15" fill="rgb(210,151,7)"/><text x="66.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="356" width="3" height="15" fill="rgb(240,63,24)"/><text x="66.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.23%)</title><rect x="63" y="372" width="3" height="15" fill="rgb(236,193,53)"/><text x="66.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="388" width="3" height="15" fill="rgb(215,136,9)"/><text x="66.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="404" width="3" height="15" fill="rgb(237,184,11)"/><text x="66.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="420" width="3" height="15" fill="rgb(232,51,49)"/><text x="66.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="436" width="3" height="15" fill="rgb(251,99,51)"/><text x="66.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="452" width="3" height="15" fill="rgb(223,220,44)"/><text x="66.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="63" y="468" width="3" height="15" fill="rgb(225,146,26)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="63" y="484" width="3" height="15" fill="rgb(251,211,6)"/><text x="66.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.23%)</title><rect x="63" y="500" width="3" height="15" fill="rgb(226,150,39)"/><text x="66.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.23%)</title><rect x="63" y="516" width="3" height="15" fill="rgb(214,145,25)"/><text x="66.00" y="526.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.23%)</title><rect x="63" y="532" width="3" height="15" fill="rgb(249,135,11)"/><text x="66.00" y="542.50"></text></g><g><title>sub (re.py) (1 samples, 0.23%)</title><rect x="63" y="548" width="3" height="15" fill="rgb(239,154,48)"/><text x="66.00" y="558.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.23%)</title><rect x="63" y="564" width="3" height="15" fill="rgb(226,51,8)"/><text x="66.00" y="574.50"></text></g><g><title>0x7f02ff521ff9 (?) (1 samples, 0.23%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(215,155,2)"/><text x="77.00" y="222.50"></text></g><g><title>0x7f02ff51cef6 (?) (1 samples, 0.23%)</title><rect x="74" y="228" width="2" height="15" fill="rgb(207,9,24)"/><text x="77.00" y="238.50"></text></g><g><title>0x7f02ff511962 (?) (1 samples, 0.23%)</title><rect x="74" y="244" width="2" height="15" fill="rgb(211,123,41)"/><text x="77.00" y="254.50"></text></g><g><title>0x7f02ff5457a7 (?) (1 samples, 0.23%)</title><rect x="74" y="260" width="2" height="15" fill="rgb(223,93,4)"/><text x="77.00" y="270.50"></text></g><g><title>0x7f02ff545379 (?) (1 samples, 0.23%)</title><rect x="74" y="276" width="2" height="15" fill="rgb(215,210,8)"/><text x="77.00" y="286.50"></text></g><g><title>0x7f02ff9a38b8 (?) (1 samples, 0.23%)</title><rect x="74" y="292" width="2" height="15" fill="rgb(220,188,27)"/><text x="77.00" y="302.50"></text></g><g><title>0x7f02ff9a1c7f (?) (1 samples, 0.23%)</title><rect x="74" y="308" width="2" height="15" fill="rgb(251,85,35)"/><text x="77.00" y="318.50"></text></g><g><title>0x7f02ff9b499c (?) (1 samples, 0.23%)</title><rect x="74" y="324" width="2" height="15" fill="rgb(229,203,27)"/><text x="77.00" y="334.50"></text></g><g><title>0x7f02ff699d39 (?) (1 samples, 0.23%)</title><rect x="74" y="340" width="2" height="15" fill="rgb(235,148,5)"/><text x="77.00" y="350.50"></text></g><g><title>0x7f02ff69440d (?) (1 samples, 0.23%)</title><rect x="74" y="356" width="2" height="15" fill="rgb(206,12,52)"/><text x="77.00" y="366.50"></text></g><g><title>0x7f033f630ea6 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="74" y="372" width="2" height="15" fill="rgb(222,37,41)"/><text x="77.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.45%)</title><rect x="76" y="212" width="6" height="15" fill="rgb(217,83,49)"/><text x="79.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(249,188,47)"/><text x="82.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(240,133,41)"/><text x="82.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(218,29,54)"/><text x="82.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="84" y="260" width="3" height="15" fill="rgb(247,74,51)"/><text x="87.00" y="270.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="340" width="2" height="15" fill="rgb(208,81,46)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="356" width="2" height="15" fill="rgb(252,70,3)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="372" width="2" height="15" fill="rgb(222,106,48)"/><text x="93.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="90" y="388" width="2" height="15" fill="rgb(219,148,24)"/><text x="93.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="90" y="404" width="2" height="15" fill="rgb(246,4,8)"/><text x="93.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="90" y="420" width="2" height="15" fill="rgb(237,141,32)"/><text x="93.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="339" y="356" width="2" height="15" fill="rgb(223,193,3)"/><text x="342.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="339" y="372" width="2" height="15" fill="rgb(211,200,18)"/><text x="342.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputArgIndex (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="339" y="388" width="2" height="15" fill="rgb(227,146,38)"/><text x="342.00" y="398.50"></text></g><g><title>0x7f033f4d1dae (libc-2.29.so) (1 samples, 0.23%)</title><rect x="363" y="372" width="2" height="15" fill="rgb(224,49,53)"/><text x="366.00" y="382.50"></text></g><g><title>0x7f033f630e0a (libm-2.29.so) (1 samples, 0.23%)</title><rect x="365" y="372" width="3" height="15" fill="rgb(254,126,26)"/><text x="368.00" y="382.50"></text></g><g><title>0x7f033f630e2f (libm-2.29.so) (1 samples, 0.23%)</title><rect x="368" y="372" width="3" height="15" fill="rgb(248,63,43)"/><text x="371.00" y="382.50"></text></g><g><title>0x7f033f630e69 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="371" y="372" width="2" height="15" fill="rgb(243,59,9)"/><text x="374.00" y="382.50"></text></g><g><title>0x7f033f630e6d (libm-2.29.so) (2 samples, 0.45%)</title><rect x="373" y="372" width="6" height="15" fill="rgb(244,156,0)"/><text x="376.00" y="382.50"></text></g><g><title>0x7f033f630e7a (libm-2.29.so) (1 samples, 0.23%)</title><rect x="379" y="372" width="2" height="15" fill="rgb(226,189,41)"/><text x="382.00" y="382.50"></text></g><g><title>0x7f033f630e92 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="381" y="372" width="3" height="15" fill="rgb(222,40,8)"/><text x="384.00" y="382.50"></text></g><g><title>0x7f033f630e96 (libm-2.29.so) (2 samples, 0.45%)</title><rect x="384" y="372" width="5" height="15" fill="rgb(250,4,4)"/><text x="387.00" y="382.50"></text></g><g><title>0x7f033f630e9e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="389" y="372" width="3" height="15" fill="rgb(241,181,36)"/><text x="392.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (113 samples, 25.62%)</title><rect x="92" y="340" width="303" height="15" fill="rgb(217,77,10)"/><text x="95.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.54%)</title><rect x="341" y="356" width="54" height="15" fill="rgb(239,21,18)"/><text x="344.00" y="366.50">onnxr..</text></g><g><title>0x7f033f630ea6 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="392" y="372" width="3" height="15" fill="rgb(246,197,0)"/><text x="395.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 28.80%)</title><rect x="87" y="260" width="340" height="15" fill="rgb(252,211,44)"/><text x="90.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 28.57%)</title><rect x="90" y="276" width="337" height="15" fill="rgb(208,183,53)"/><text x="93.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 28.57%)</title><rect x="90" y="292" width="337" height="15" fill="rgb(219,183,44)"/><text x="93.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 28.57%)</title><rect x="90" y="308" width="337" height="15" fill="rgb(207,115,36)"/><text x="93.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (126 samples, 28.57%)</title><rect x="90" y="324" width="337" height="15" fill="rgb(221,53,46)"/><text x="93.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.72%)</title><rect x="395" y="340" width="32" height="15" fill="rgb(240,126,50)"/><text x="398.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.72%)</title><rect x="395" y="356" width="32" height="15" fill="rgb(237,104,14)"/><text x="398.00" y="366.50">on..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="427" y="260" width="3" height="15" fill="rgb(249,199,26)"/><text x="430.00" y="270.50"></text></g><g><title>0x7f033f4c7e50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="427" y="276" width="3" height="15" fill="rgb(226,118,40)"/><text x="430.00" y="286.50"></text></g><g><title>0x7f033f4d1d70 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="430" y="276" width="2" height="15" fill="rgb(219,121,32)"/><text x="433.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="430" y="260" width="5" height="15" fill="rgb(250,99,5)"/><text x="433.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.23%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(218,127,54)"/><text x="435.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="432" y="292" width="3" height="15" fill="rgb(206,59,36)"/><text x="435.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="432" y="308" width="3" height="15" fill="rgb(223,16,11)"/><text x="435.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (139 samples, 31.52%)</title><rect x="66" y="68" width="372" height="15" fill="rgb(217,31,47)"/><text x="69.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (139 samples, 31.52%)</title><rect x="66" y="84" width="372" height="15" fill="rgb(220,215,0)"/><text x="69.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (139 samples, 31.52%)</title><rect x="66" y="100" width="372" height="15" fill="rgb(251,194,5)"/><text x="69.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_6..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 31.52%)</title><rect x="66" y="116" width="372" height="15" fill="rgb(213,30,19)"/><text x="69.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 31.52%)</title><rect x="66" y="132" width="372" height="15" fill="rgb(236,78,29)"/><text x="69.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (138 samples, 31.29%)</title><rect x="68" y="148" width="370" height="15" fill="rgb(208,72,51)"/><text x="71.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (138 samples, 31.29%)</title><rect x="68" y="164" width="370" height="15" fill="rgb(245,143,16)"/><text x="71.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (138 samples, 31.29%)</title><rect x="68" y="180" width="370" height="15" fill="rgb(230,204,3)"/><text x="71.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (137 samples, 31.07%)</title><rect x="71" y="196" width="367" height="15" fill="rgb(245,174,25)"/><text x="74.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 30.16%)</title><rect x="82" y="212" width="356" height="15" fill="rgb(249,108,53)"/><text x="85.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 30.16%)</title><rect x="82" y="228" width="356" height="15" fill="rgb(233,170,44)"/><text x="85.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 30.16%)</title><rect x="82" y="244" width="356" height="15" fill="rgb(211,129,23)"/><text x="85.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="260" width="3" height="15" fill="rgb(245,48,19)"/><text x="438.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(238,202,51)"/><text x="438.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="292" width="3" height="15" fill="rgb(228,163,30)"/><text x="438.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="308" width="3" height="15" fill="rgb(217,41,6)"/><text x="438.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="324" width="3" height="15" fill="rgb(229,3,15)"/><text x="438.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="340" width="3" height="15" fill="rgb(209,211,43)"/><text x="438.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="356" width="3" height="15" fill="rgb(252,107,15)"/><text x="438.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="372" width="3" height="15" fill="rgb(210,156,52)"/><text x="438.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="435" y="388" width="3" height="15" fill="rgb(250,105,24)"/><text x="438.00" y="398.50"></text></g><g><title>0x7f033f4b19a8 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="435" y="404" width="3" height="15" fill="rgb(215,119,2)"/><text x="438.00" y="414.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (2 samples, 0.45%)</title><rect x="494" y="340" width="5" height="15" fill="rgb(220,182,0)"/><text x="497.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 1.81%)</title><rect x="480" y="244" width="22" height="15" fill="rgb(232,23,0)"/><text x="483.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.59%)</title><rect x="483" y="260" width="19" height="15" fill="rgb(209,77,7)"/><text x="486.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 1.59%)</title><rect x="483" y="276" width="19" height="15" fill="rgb(254,74,42)"/><text x="486.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.36%)</title><rect x="486" y="292" width="16" height="15" fill="rgb(253,153,19)"/><text x="489.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.13%)</title><rect x="488" y="308" width="14" height="15" fill="rgb(230,115,54)"/><text x="491.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 0.91%)</title><rect x="491" y="324" width="11" height="15" fill="rgb(241,57,23)"/><text x="494.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="499" y="340" width="3" height="15" fill="rgb(254,224,3)"/><text x="502.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="499" y="356" width="3" height="15" fill="rgb(234,112,41)"/><text x="502.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.23%)</title><rect x="499" y="372" width="3" height="15" fill="rgb(213,73,20)"/><text x="502.00" y="382.50"></text></g><g><title>0x7f033f4d2103 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="507" y="340" width="3" height="15" fill="rgb(216,205,39)"/><text x="510.00" y="350.50"></text></g><g><title>gemm (cblasfuncs.c) (8 samples, 1.81%)</title><rect x="510" y="340" width="21" height="15" fill="rgb(232,25,35)"/><text x="513.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.81%)</title><rect x="510" y="356" width="21" height="15" fill="rgb(230,27,47)"/><text x="513.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.81%)</title><rect x="510" y="372" width="21" height="15" fill="rgb(220,177,40)"/><text x="513.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.59%)</title><rect x="513" y="388" width="18" height="15" fill="rgb(254,142,10)"/><text x="516.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 2.27%)</title><rect x="507" y="276" width="27" height="15" fill="rgb(213,134,8)"/><text x="510.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (10 samples, 2.27%)</title><rect x="507" y="292" width="27" height="15" fill="rgb(243,79,23)"/><text x="510.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (10 samples, 2.27%)</title><rect x="507" y="308" width="27" height="15" fill="rgb(206,199,8)"/><text x="510.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (10 samples, 2.27%)</title><rect x="507" y="324" width="27" height="15" fill="rgb(207,66,21)"/><text x="510.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.23%)</title><rect x="531" y="340" width="3" height="15" fill="rgb(228,59,21)"/><text x="534.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.23%)</title><rect x="531" y="356" width="3" height="15" fill="rgb(215,142,51)"/><text x="534.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="531" y="372" width="3" height="15" fill="rgb(232,85,16)"/><text x="534.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="531" y="388" width="3" height="15" fill="rgb(244,194,0)"/><text x="534.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="531" y="404" width="3" height="15" fill="rgb(222,9,43)"/><text x="534.00" y="414.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="534" y="276" width="3" height="15" fill="rgb(209,217,36)"/><text x="537.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (46 samples, 10.43%)</title><rect x="502" y="244" width="123" height="15" fill="rgb(219,90,17)"/><text x="505.00" y="254.50">numpy_dot_inpla..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (44 samples, 9.98%)</title><rect x="507" y="260" width="118" height="15" fill="rgb(210,59,0)"/><text x="510.00" y="270.50">dot (&lt;__array_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 7.48%)</title><rect x="537" y="276" width="88" height="15" fill="rgb(245,131,36)"/><text x="540.00" y="286.50">sgemm_kern..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="625" y="260" width="3" height="15" fill="rgb(239,111,33)"/><text x="628.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(238,168,30)"/><text x="628.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="625" y="292" width="3" height="15" fill="rgb(219,117,53)"/><text x="628.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="625" y="308" width="3" height="15" fill="rgb(228,216,15)"/><text x="628.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(244,77,52)"/><text x="631.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="628" y="308" width="2" height="15" fill="rgb(225,6,2)"/><text x="631.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.23%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(240,118,50)"/><text x="631.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.23%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(205,38,11)"/><text x="631.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="628" y="356" width="2" height="15" fill="rgb(250,193,2)"/><text x="631.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="628" y="372" width="2" height="15" fill="rgb(233,60,45)"/><text x="631.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.23%)</title><rect x="630" y="308" width="3" height="15" fill="rgb(238,151,24)"/><text x="633.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="630" y="324" width="3" height="15" fill="rgb(243,75,21)"/><text x="633.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="630" y="340" width="3" height="15" fill="rgb(219,134,27)"/><text x="633.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.23%)</title><rect x="630" y="356" width="3" height="15" fill="rgb(212,51,14)"/><text x="633.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="636" y="324" width="2" height="15" fill="rgb(221,107,53)"/><text x="639.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.68%)</title><rect x="633" y="308" width="8" height="15" fill="rgb(216,17,7)"/><text x="636.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="638" y="324" width="3" height="15" fill="rgb(221,57,4)"/><text x="641.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="638" y="340" width="3" height="15" fill="rgb(233,92,5)"/><text x="641.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="641" y="308" width="3" height="15" fill="rgb(215,94,8)"/><text x="644.00" y="318.50"></text></g><g><title>0x7f033f4b1b35 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="641" y="324" width="3" height="15" fill="rgb(250,14,39)"/><text x="644.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.36%)</title><rect x="630" y="292" width="16" height="15" fill="rgb(245,109,9)"/><text x="633.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.23%)</title><rect x="644" y="308" width="2" height="15" fill="rgb(228,210,47)"/><text x="647.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(225,155,22)"/><text x="647.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="644" y="340" width="2" height="15" fill="rgb(225,11,18)"/><text x="647.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="644" y="356" width="2" height="15" fill="rgb(230,172,13)"/><text x="647.00" y="366.50"></text></g><g><title>0x7f032a7bb204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="646" y="324" width="6" height="15" fill="rgb(237,103,28)"/><text x="649.00" y="334.50"></text></g><g><title>0x7f032a7bb20c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="652" y="324" width="2" height="15" fill="rgb(240,14,7)"/><text x="655.00" y="334.50"></text></g><g><title>0x7f032a779890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="654" y="340" width="3" height="15" fill="rgb(226,123,3)"/><text x="657.00" y="350.50"></text></g><g><title>0x7f032a8c4c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="657" y="340" width="3" height="15" fill="rgb(237,90,39)"/><text x="660.00" y="350.50"></text></g><g><title>0x7f033f5fd1a0 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="660" y="356" width="2" height="15" fill="rgb(246,209,51)"/><text x="663.00" y="366.50"></text></g><g><title>0x7f033f630e00 (libm-2.29.so) (2 samples, 0.45%)</title><rect x="662" y="356" width="6" height="15" fill="rgb(222,89,9)"/><text x="665.00" y="366.50"></text></g><g><title>0x7f033f630e0e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="668" y="356" width="2" height="15" fill="rgb(240,87,13)"/><text x="671.00" y="366.50"></text></g><g><title>0x7f033f630e17 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="670" y="356" width="3" height="15" fill="rgb(217,123,6)"/><text x="673.00" y="366.50"></text></g><g><title>0x7f033f630e37 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="673" y="356" width="3" height="15" fill="rgb(244,97,15)"/><text x="676.00" y="366.50"></text></g><g><title>0x7f033f630e71 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="676" y="356" width="2" height="15" fill="rgb(235,111,42)"/><text x="679.00" y="366.50"></text></g><g><title>0x7f032a7bb214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.49%)</title><rect x="654" y="324" width="30" height="15" fill="rgb(210,109,53)"/><text x="657.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (9 samples, 2.04%)</title><rect x="660" y="340" width="24" height="15" fill="rgb(226,205,46)"/><text x="663.00" y="350.50">e..</text></g><g><title>0x7f033f630ea6 (libm-2.29.so) (2 samples, 0.45%)</title><rect x="678" y="356" width="6" height="15" fill="rgb(238,118,40)"/><text x="681.00" y="366.50"></text></g><g><title>0x7f032a7bb224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="684" y="324" width="5" height="15" fill="rgb(244,110,29)"/><text x="687.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (29 samples, 6.58%)</title><rect x="628" y="260" width="77" height="15" fill="rgb(205,121,36)"/><text x="631.00" y="270.50">PyUFunc_..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (29 samples, 6.58%)</title><rect x="628" y="276" width="77" height="15" fill="rgb(254,199,54)"/><text x="631.00" y="286.50">execute_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (22 samples, 4.99%)</title><rect x="646" y="292" width="59" height="15" fill="rgb(245,196,38)"/><text x="649.00" y="302.50">trivia..</text></g><g><title>0x7f032a79933d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 4.99%)</title><rect x="646" y="308" width="59" height="15" fill="rgb(235,82,39)"/><text x="649.00" y="318.50">0x7f03..</text></g><g><title>0x7f032a7bb228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.36%)</title><rect x="689" y="324" width="16" height="15" fill="rgb(233,7,20)"/><text x="692.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (88 samples, 19.95%)</title><rect x="475" y="228" width="236" height="15" fill="rgb(228,126,33)"/><text x="478.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 7.26%)</title><rect x="625" y="244" width="86" height="15" fill="rgb(215,79,36)"/><text x="628.00" y="254.50">ufunc_gene..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.45%)</title><rect x="705" y="260" width="6" height="15" fill="rgb(232,27,47)"/><text x="708.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="721" y="260" width="3" height="15" fill="rgb(230,103,27)"/><text x="724.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="724" y="260" width="3" height="15" fill="rgb(241,177,1)"/><text x="727.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="724" y="276" width="3" height="15" fill="rgb(217,14,24)"/><text x="727.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="724" y="292" width="3" height="15" fill="rgb(247,164,36)"/><text x="727.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.23%)</title><rect x="727" y="260" width="2" height="15" fill="rgb(206,218,10)"/><text x="730.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.23%)</title><rect x="727" y="276" width="2" height="15" fill="rgb(225,145,10)"/><text x="730.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.45%)</title><rect x="729" y="324" width="6" height="15" fill="rgb(221,35,25)"/><text x="732.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.45%)</title><rect x="729" y="340" width="6" height="15" fill="rgb(211,97,36)"/><text x="732.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.45%)</title><rect x="729" y="356" width="6" height="15" fill="rgb(207,67,4)"/><text x="732.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.45%)</title><rect x="729" y="372" width="6" height="15" fill="rgb(249,164,44)"/><text x="732.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.45%)</title><rect x="729" y="388" width="6" height="15" fill="rgb(226,203,23)"/><text x="732.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.23%)</title><rect x="737" y="372" width="3" height="15" fill="rgb(223,226,49)"/><text x="740.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 1.13%)</title><rect x="748" y="388" width="13" height="15" fill="rgb(221,61,53)"/><text x="751.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (4 samples, 0.91%)</title><rect x="751" y="404" width="10" height="15" fill="rgb(240,206,0)"/><text x="754.00" y="414.50"></text></g><g><title>array_sum (methods.c) (16 samples, 3.63%)</title><rect x="729" y="260" width="43" height="15" fill="rgb(242,48,44)"/><text x="732.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (16 samples, 3.63%)</title><rect x="729" y="276" width="43" height="15" fill="rgb(233,185,29)"/><text x="732.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (16 samples, 3.63%)</title><rect x="729" y="292" width="43" height="15" fill="rgb(226,99,25)"/><text x="732.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (16 samples, 3.63%)</title><rect x="729" y="308" width="43" height="15" fill="rgb(239,211,46)"/><text x="732.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (14 samples, 3.17%)</title><rect x="735" y="324" width="37" height="15" fill="rgb(234,210,45)"/><text x="738.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 2.95%)</title><rect x="737" y="340" width="35" height="15" fill="rgb(210,120,19)"/><text x="740.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (13 samples, 2.95%)</title><rect x="737" y="356" width="35" height="15" fill="rgb(238,26,9)"/><text x="740.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (12 samples, 2.72%)</title><rect x="740" y="372" width="32" height="15" fill="rgb(211,58,1)"/><text x="743.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.91%)</title><rect x="761" y="388" width="11" height="15" fill="rgb(211,46,40)"/><text x="764.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="769" y="404" width="3" height="15" fill="rgb(218,201,30)"/><text x="772.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="772" y="324" width="3" height="15" fill="rgb(235,191,20)"/><text x="775.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.23%)</title><rect x="772" y="340" width="3" height="15" fill="rgb(250,108,48)"/><text x="775.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="772" y="356" width="3" height="15" fill="rgb(205,204,42)"/><text x="775.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="775" y="340" width="2" height="15" fill="rgb(245,5,41)"/><text x="778.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="775" y="356" width="2" height="15" fill="rgb(218,164,40)"/><text x="778.00" y="366.50"></text></g><g><title>0x7f033f4b3700 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="775" y="372" width="2" height="15" fill="rgb(245,205,46)"/><text x="778.00" y="382.50"></text></g><g><title>0x7f033f4b0aa4 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="775" y="388" width="2" height="15" fill="rgb(254,225,51)"/><text x="778.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.13%)</title><rect x="772" y="308" width="13" height="15" fill="rgb(224,109,14)"/><text x="775.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.91%)</title><rect x="775" y="324" width="10" height="15" fill="rgb(205,54,8)"/><text x="778.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.68%)</title><rect x="777" y="340" width="8" height="15" fill="rgb(230,133,30)"/><text x="780.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.68%)</title><rect x="777" y="356" width="8" height="15" fill="rgb(212,189,17)"/><text x="780.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="783" y="372" width="2" height="15" fill="rgb(227,132,18)"/><text x="786.00" y="382.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 29.48%)</title><rect x="440" y="132" width="348" height="15" fill="rgb(224,64,50)"/><text x="443.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (130 samples, 29.48%)</title><rect x="440" y="148" width="348" height="15" fill="rgb(249,219,27)"/><text x="443.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (130 samples, 29.48%)</title><rect x="440" y="164" width="348" height="15" fill="rgb(231,110,15)"/><text x="443.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (126 samples, 28.57%)</title><rect x="451" y="180" width="337" height="15" fill="rgb(252,191,9)"/><text x="454.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (122 samples, 27.66%)</title><rect x="462" y="196" width="326" height="15" fill="rgb(250,229,30)"/><text x="465.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (120 samples, 27.21%)</title><rect x="467" y="212" width="321" height="15" fill="rgb(250,227,10)"/><text x="470.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 6.58%)</title><rect x="711" y="228" width="77" height="15" fill="rgb(238,221,22)"/><text x="714.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 6.58%)</title><rect x="711" y="244" width="77" height="15" fill="rgb(215,144,38)"/><text x="714.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.36%)</title><rect x="772" y="260" width="16" height="15" fill="rgb(245,107,45)"/><text x="775.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.36%)</title><rect x="772" y="276" width="16" height="15" fill="rgb(241,88,48)"/><text x="775.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.36%)</title><rect x="772" y="292" width="16" height="15" fill="rgb(221,60,41)"/><text x="775.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="785" y="308" width="3" height="15" fill="rgb(205,39,17)"/><text x="788.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.23%)</title><rect x="785" y="324" width="3" height="15" fill="rgb(228,191,5)"/><text x="788.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="785" y="340" width="3" height="15" fill="rgb(246,4,30)"/><text x="788.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="785" y="356" width="3" height="15" fill="rgb(205,148,35)"/><text x="788.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (132 samples, 29.93%)</title><rect x="438" y="68" width="353" height="15" fill="rgb(242,9,34)"/><text x="441.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (132 samples, 29.93%)</title><rect x="438" y="84" width="353" height="15" fill="rgb(244,80,31)"/><text x="441.00" y="94.50">setup_profile (bench_LogisticRegression_libline..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (132 samples, 29.93%)</title><rect x="438" y="100" width="353" height="15" fill="rgb(250,72,48)"/><text x="441.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 29.93%)</title><rect x="438" y="116" width="353" height="15" fill="rgb(221,213,11)"/><text x="441.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="788" y="132" width="3" height="15" fill="rgb(249,91,9)"/><text x="791.00" y="142.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="793" y="180" width="3" height="15" fill="rgb(219,74,1)"/><text x="796.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.23%)</title><rect x="796" y="180" width="3" height="15" fill="rgb(249,106,40)"/><text x="799.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.23%)</title><rect x="796" y="196" width="3" height="15" fill="rgb(241,143,2)"/><text x="799.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.23%)</title><rect x="796" y="212" width="3" height="15" fill="rgb(208,99,29)"/><text x="799.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="796" y="228" width="3" height="15" fill="rgb(240,180,25)"/><text x="799.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="796" y="244" width="3" height="15" fill="rgb(228,27,6)"/><text x="799.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="799" y="244" width="3" height="15" fill="rgb(210,26,28)"/><text x="802.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="799" y="260" width="3" height="15" fill="rgb(246,207,35)"/><text x="802.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.23%)</title><rect x="799" y="276" width="3" height="15" fill="rgb(214,227,14)"/><text x="802.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.23%)</title><rect x="799" y="292" width="3" height="15" fill="rgb(221,43,17)"/><text x="802.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.23%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(238,31,41)"/><text x="802.00" y="318.50"></text></g><g><title>0x7f033f4c7757 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="802" y="260" width="2" height="15" fill="rgb(205,153,0)"/><text x="805.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="804" y="292" width="3" height="15" fill="rgb(224,24,27)"/><text x="807.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="807" y="292" width="3" height="15" fill="rgb(226,60,15)"/><text x="810.00" y="302.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="810" y="324" width="2" height="15" fill="rgb(238,13,8)"/><text x="813.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="810" y="340" width="2" height="15" fill="rgb(243,139,37)"/><text x="813.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.45%)</title><rect x="810" y="292" width="5" height="15" fill="rgb(215,166,38)"/><text x="813.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.45%)</title><rect x="810" y="308" width="5" height="15" fill="rgb(234,56,35)"/><text x="813.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="812" y="324" width="3" height="15" fill="rgb(230,135,29)"/><text x="815.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="812" y="340" width="3" height="15" fill="rgb(208,160,1)"/><text x="815.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.45%)</title><rect x="820" y="308" width="6" height="15" fill="rgb(253,20,43)"/><text x="823.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (2 samples, 0.45%)</title><rect x="820" y="324" width="6" height="15" fill="rgb(247,196,39)"/><text x="823.00" y="334.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.72%)</title><rect x="799" y="180" width="32" height="15" fill="rgb(226,76,47)"/><text x="802.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 2.72%)</title><rect x="799" y="196" width="32" height="15" fill="rgb(240,107,18)"/><text x="802.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.72%)</title><rect x="799" y="212" width="32" height="15" fill="rgb(226,100,12)"/><text x="802.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.72%)</title><rect x="799" y="228" width="32" height="15" fill="rgb(220,20,38)"/><text x="802.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.49%)</title><rect x="802" y="244" width="29" height="15" fill="rgb(218,161,43)"/><text x="805.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 2.27%)</title><rect x="804" y="260" width="27" height="15" fill="rgb(245,34,17)"/><text x="807.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 2.27%)</title><rect x="804" y="276" width="27" height="15" fill="rgb(243,84,41)"/><text x="807.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.36%)</title><rect x="815" y="292" width="16" height="15" fill="rgb(243,101,29)"/><text x="818.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.45%)</title><rect x="826" y="308" width="5" height="15" fill="rgb(205,23,48)"/><text x="829.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="842" y="228" width="2" height="15" fill="rgb(235,170,28)"/><text x="845.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="842" y="244" width="2" height="15" fill="rgb(237,168,37)"/><text x="845.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.45%)</title><rect x="847" y="276" width="5" height="15" fill="rgb(219,14,35)"/><text x="850.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.45%)</title><rect x="847" y="292" width="5" height="15" fill="rgb(244,124,7)"/><text x="850.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.45%)</title><rect x="847" y="308" width="5" height="15" fill="rgb(254,159,29)"/><text x="850.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.45%)</title><rect x="847" y="324" width="5" height="15" fill="rgb(217,10,44)"/><text x="850.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="852" y="276" width="3" height="15" fill="rgb(224,48,0)"/><text x="855.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="852" y="292" width="3" height="15" fill="rgb(238,192,42)"/><text x="855.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.23%)</title><rect x="852" y="308" width="3" height="15" fill="rgb(235,89,47)"/><text x="855.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="852" y="324" width="3" height="15" fill="rgb(218,5,14)"/><text x="855.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="852" y="340" width="3" height="15" fill="rgb(218,85,42)"/><text x="855.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="855" y="276" width="3" height="15" fill="rgb(243,72,8)"/><text x="858.00" y="286.50"></text></g><g><title>0x7f033f4d1d50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="866" y="324" width="2" height="15" fill="rgb(209,6,19)"/><text x="869.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.13%)</title><rect x="858" y="276" width="13" height="15" fill="rgb(219,225,31)"/><text x="861.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.13%)</title><rect x="858" y="292" width="13" height="15" fill="rgb(240,198,13)"/><text x="861.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.91%)</title><rect x="860" y="308" width="11" height="15" fill="rgb(224,154,39)"/><text x="863.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="868" y="324" width="3" height="15" fill="rgb(233,56,38)"/><text x="871.00" y="334.50"></text></g><g><title>array_add (number.c) (12 samples, 2.72%)</title><rect x="842" y="196" width="32" height="15" fill="rgb(244,87,40)"/><text x="845.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.72%)</title><rect x="842" y="212" width="32" height="15" fill="rgb(230,7,39)"/><text x="845.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.49%)</title><rect x="844" y="228" width="30" height="15" fill="rgb(235,62,42)"/><text x="847.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 2.49%)</title><rect x="844" y="244" width="30" height="15" fill="rgb(251,84,42)"/><text x="847.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 2.49%)</title><rect x="844" y="260" width="30" height="15" fill="rgb(234,89,45)"/><text x="847.00" y="270.50">it..</text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.23%)</title><rect x="871" y="276" width="3" height="15" fill="rgb(253,145,45)"/><text x="874.00" y="286.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.23%)</title><rect x="876" y="212" width="3" height="15" fill="rgb(217,220,33)"/><text x="879.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.23%)</title><rect x="879" y="212" width="3" height="15" fill="rgb(240,172,18)"/><text x="882.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="882" y="228" width="2" height="15" fill="rgb(221,172,16)"/><text x="885.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.45%)</title><rect x="882" y="212" width="5" height="15" fill="rgb(248,23,29)"/><text x="885.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="884" y="228" width="3" height="15" fill="rgb(228,38,25)"/><text x="887.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.45%)</title><rect x="887" y="212" width="5" height="15" fill="rgb(226,2,20)"/><text x="890.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.23%)</title><rect x="890" y="228" width="2" height="15" fill="rgb(207,155,52)"/><text x="893.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.23%)</title><rect x="890" y="244" width="2" height="15" fill="rgb(228,3,34)"/><text x="893.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 2.04%)</title><rect x="874" y="196" width="24" height="15" fill="rgb(205,79,18)"/><text x="877.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.45%)</title><rect x="892" y="212" width="6" height="15" fill="rgb(254,88,24)"/><text x="895.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.45%)</title><rect x="892" y="228" width="6" height="15" fill="rgb(236,83,38)"/><text x="895.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.68%)</title><rect x="898" y="196" width="8" height="15" fill="rgb(209,137,7)"/><text x="901.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.45%)</title><rect x="901" y="212" width="5" height="15" fill="rgb(236,146,47)"/><text x="904.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="909" y="212" width="5" height="15" fill="rgb(214,75,17)"/><text x="912.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 3.63%)</title><rect x="914" y="212" width="43" height="15" fill="rgb(226,115,21)"/><text x="917.00" y="222.50">dgem..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.23%)</title><rect x="957" y="212" width="2" height="15" fill="rgb(209,211,34)"/><text x="960.00" y="222.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="965" y="292" width="2" height="15" fill="rgb(240,37,54)"/><text x="968.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (15 samples, 3.40%)</title><rect x="965" y="260" width="40" height="15" fill="rgb(216,183,36)"/><text x="968.00" y="270.50">DOU..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 3.40%)</title><rect x="965" y="276" width="40" height="15" fill="rgb(234,4,39)"/><text x="968.00" y="286.50">cbl..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.17%)</title><rect x="967" y="292" width="38" height="15" fill="rgb(219,121,12)"/><text x="970.00" y="302.50">dge..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.95%)</title><rect x="970" y="308" width="35" height="15" fill="rgb(229,175,28)"/><text x="973.00" y="318.50">dg..</text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="1008" y="324" width="2" height="15" fill="rgb(207,127,24)"/><text x="1011.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1008" y="340" width="2" height="15" fill="rgb(211,216,48)"/><text x="1011.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1008" y="356" width="2" height="15" fill="rgb(245,43,11)"/><text x="1011.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1010" y="324" width="3" height="15" fill="rgb(251,164,38)"/><text x="1013.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (16 samples, 3.63%)</title><rect x="1008" y="276" width="42" height="15" fill="rgb(205,86,10)"/><text x="1011.00" y="286.50">npy..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (16 samples, 3.63%)</title><rect x="1008" y="292" width="42" height="15" fill="rgb(252,148,18)"/><text x="1011.00" y="302.50">PyA..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (16 samples, 3.63%)</title><rect x="1008" y="308" width="42" height="15" fill="rgb(205,70,28)"/><text x="1011.00" y="318.50">raw..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (14 samples, 3.17%)</title><rect x="1013" y="324" width="37" height="15" fill="rgb(245,71,42)"/><text x="1016.00" y="334.50">_al..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (18 samples, 4.08%)</title><rect x="1005" y="260" width="48" height="15" fill="rgb(241,125,3)"/><text x="1008.00" y="270.50">NpyI..</text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1050" y="276" width="3" height="15" fill="rgb(244,102,46)"/><text x="1053.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="1050" y="292" width="3" height="15" fill="rgb(244,20,32)"/><text x="1053.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1053" y="260" width="3" height="15" fill="rgb(223,80,7)"/><text x="1056.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="1053" y="276" width="3" height="15" fill="rgb(221,220,34)"/><text x="1056.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="1053" y="292" width="3" height="15" fill="rgb(230,164,6)"/><text x="1056.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="1053" y="308" width="3" height="15" fill="rgb(250,124,2)"/><text x="1056.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.23%)</title><rect x="1053" y="324" width="3" height="15" fill="rgb(207,47,27)"/><text x="1056.00" y="334.50"></text></g><g><title>0x7f033f4b1b4f (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1053" y="340" width="3" height="15" fill="rgb(246,111,14)"/><text x="1056.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (85 samples, 19.27%)</title><rect x="831" y="180" width="227" height="15" fill="rgb(218,148,42)"/><text x="834.00" y="190.50">decision_function (sklearn/lin..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (57 samples, 12.93%)</title><rect x="906" y="196" width="152" height="15" fill="rgb(247,129,28)"/><text x="909.00" y="206.50">safe_sparse_dot (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (37 samples, 8.39%)</title><rect x="959" y="212" width="99" height="15" fill="rgb(221,41,1)"/><text x="962.00" y="222.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (36 samples, 8.16%)</title><rect x="962" y="228" width="96" height="15" fill="rgb(244,51,48)"/><text x="965.00" y="238.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (36 samples, 8.16%)</title><rect x="962" y="244" width="96" height="15" fill="rgb(234,18,41)"/><text x="965.00" y="254.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1056" y="260" width="2" height="15" fill="rgb(228,77,17)"/><text x="1059.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="1056" y="276" width="2" height="15" fill="rgb(235,65,52)"/><text x="1059.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.23%)</title><rect x="1056" y="292" width="2" height="15" fill="rgb(233,167,23)"/><text x="1059.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="1056" y="308" width="2" height="15" fill="rgb(227,26,36)"/><text x="1059.00" y="318.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1058" y="212" width="3" height="15" fill="rgb(235,135,39)"/><text x="1061.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="1064" y="228" width="2" height="15" fill="rgb(245,218,53)"/><text x="1067.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1064" y="244" width="2" height="15" fill="rgb(245,178,30)"/><text x="1067.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1064" y="260" width="2" height="15" fill="rgb(254,29,14)"/><text x="1067.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1064" y="276" width="2" height="15" fill="rgb(251,22,48)"/><text x="1067.00" y="286.50"></text></g><g><title>0x7f033f4697a5 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1064" y="292" width="2" height="15" fill="rgb(240,142,12)"/><text x="1067.00" y="302.50"></text></g><g><title>0x7f033f4697c2 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1064" y="308" width="2" height="15" fill="rgb(207,46,13)"/><text x="1067.00" y="318.50"></text></g><g><title>0x7f033f4698bd (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1064" y="324" width="2" height="15" fill="rgb(236,217,17)"/><text x="1067.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.23%)</title><rect x="1066" y="292" width="3" height="15" fill="rgb(248,161,25)"/><text x="1069.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (3 samples, 0.68%)</title><rect x="1066" y="244" width="8" height="15" fill="rgb(232,36,3)"/><text x="1069.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (3 samples, 0.68%)</title><rect x="1066" y="260" width="8" height="15" fill="rgb(236,3,7)"/><text x="1069.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (3 samples, 0.68%)</title><rect x="1066" y="276" width="8" height="15" fill="rgb(205,192,44)"/><text x="1069.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.45%)</title><rect x="1069" y="292" width="5" height="15" fill="rgb(219,73,19)"/><text x="1072.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.91%)</title><rect x="1066" y="228" width="11" height="15" fill="rgb(208,107,31)"/><text x="1069.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1074" y="244" width="3" height="15" fill="rgb(242,26,35)"/><text x="1077.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1074" y="260" width="3" height="15" fill="rgb(230,35,17)"/><text x="1077.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1074" y="276" width="3" height="15" fill="rgb(206,30,27)"/><text x="1077.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="1074" y="292" width="3" height="15" fill="rgb(214,86,10)"/><text x="1077.00" y="302.50"></text></g><g><title>0x7f032a79a9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.45%)</title><rect x="1077" y="244" width="5" height="15" fill="rgb(246,194,43)"/><text x="1080.00" y="254.50"></text></g><g><title>0x7f032a8c49f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1085" y="276" width="3" height="15" fill="rgb(217,140,41)"/><text x="1088.00" y="286.50"></text></g><g><title>0x7f033f5fd1b0 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1101" y="292" width="3" height="15" fill="rgb(246,131,27)"/><text x="1104.00" y="302.50"></text></g><g><title>0x7f033f683ba0 (libm-2.29.so) (2 samples, 0.45%)</title><rect x="1104" y="292" width="5" height="15" fill="rgb(238,8,54)"/><text x="1107.00" y="302.50"></text></g><g><title>0x7f033f683bd3 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1109" y="292" width="3" height="15" fill="rgb(251,157,39)"/><text x="1112.00" y="302.50"></text></g><g><title>0x7f033f683c07 (libm-2.29.so) (2 samples, 0.45%)</title><rect x="1112" y="292" width="5" height="15" fill="rgb(253,161,38)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f033f683c18 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1117" y="292" width="3" height="15" fill="rgb(243,135,26)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f033f683c3e (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(218,202,49)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7f033f683c56 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1123" y="292" width="2" height="15" fill="rgb(229,74,25)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7f033f683c6a (libm-2.29.so) (1 samples, 0.23%)</title><rect x="1125" y="292" width="3" height="15" fill="rgb(224,76,47)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f032a7bb265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 4.31%)</title><rect x="1082" y="260" width="51" height="15" fill="rgb(210,2,37)"/><text x="1085.00" y="270.50">0x7f0..</text></g><g><title>exp (libm-2.29.so) (17 samples, 3.85%)</title><rect x="1088" y="276" width="45" height="15" fill="rgb(242,115,26)"/><text x="1091.00" y="286.50">exp ..</text></g><g><title>0x7f033f683c7b (libm-2.29.so) (2 samples, 0.45%)</title><rect x="1128" y="292" width="5" height="15" fill="rgb(225,94,34)"/><text x="1131.00" y="302.50"></text></g><g><title>0x7f032a79a9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 6.35%)</title><rect x="1082" y="244" width="75" height="15" fill="rgb(246,106,3)"/><text x="1085.00" y="254.50">0x7f032a..</text></g><g><title>0x7f032a7bb279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.04%)</title><rect x="1133" y="260" width="24" height="15" fill="rgb(212,60,48)"/><text x="1136.00" y="270.50">0..</text></g><g><title>0x7f032a79a9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1157" y="244" width="3" height="15" fill="rgb(236,35,46)"/><text x="1160.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 8.62%)</title><rect x="1061" y="212" width="102" height="15" fill="rgb(208,71,27)"/><text x="1064.00" y="222.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (32 samples, 7.26%)</title><rect x="1077" y="228" width="86" height="15" fill="rgb(248,215,6)"/><text x="1080.00" y="238.50">trivial_tw..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1160" y="244" width="3" height="15" fill="rgb(232,143,11)"/><text x="1163.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1163" y="212" width="2" height="15" fill="rgb(215,86,46)"/><text x="1166.00" y="222.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.23%)</title><rect x="1163" y="228" width="2" height="15" fill="rgb(244,61,4)"/><text x="1166.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (140 samples, 31.75%)</title><rect x="793" y="164" width="375" height="15" fill="rgb(211,164,19)"/><text x="796.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 9.30%)</title><rect x="1058" y="180" width="110" height="15" fill="rgb(247,196,24)"/><text x="1061.00" y="190.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (41 samples, 9.30%)</title><rect x="1058" y="196" width="110" height="15" fill="rgb(232,150,23)"/><text x="1061.00" y="206.50">PyUFunc_Gener..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1165" y="212" width="3" height="15" fill="rgb(211,147,37)"/><text x="1168.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1165" y="228" width="3" height="15" fill="rgb(228,203,53)"/><text x="1168.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(208,76,33)"/><text x="1168.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.68%)</title><rect x="1173" y="180" width="8" height="15" fill="rgb(252,78,47)"/><text x="1176.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.23%)</title><rect x="1179" y="196" width="2" height="15" fill="rgb(209,157,46)"/><text x="1182.00" y="206.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (147 samples, 33.33%)</title><rect x="791" y="68" width="393" height="15" fill="rgb(250,102,53)"/><text x="794.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (147 samples, 33.33%)</title><rect x="791" y="84" width="393" height="15" fill="rgb(227,221,49)"/><text x="794.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (147 samples, 33.33%)</title><rect x="791" y="100" width="393" height="15" fill="rgb(222,150,42)"/><text x="794.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 33.33%)</title><rect x="791" y="116" width="393" height="15" fill="rgb(235,214,1)"/><text x="794.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 33.11%)</title><rect x="793" y="132" width="391" height="15" fill="rgb(222,120,2)"/><text x="796.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (146 samples, 33.11%)</title><rect x="793" y="148" width="391" height="15" fill="rgb(228,112,10)"/><text x="796.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.36%)</title><rect x="1168" y="164" width="16" height="15" fill="rgb(230,214,38)"/><text x="1171.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.23%)</title><rect x="1181" y="180" width="3" height="15" fill="rgb(210,185,29)"/><text x="1184.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1184" y="148" width="3" height="15" fill="rgb(211,219,26)"/><text x="1187.00" y="158.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1184" y="164" width="3" height="15" fill="rgb(238,40,45)"/><text x="1187.00" y="174.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1184" y="180" width="3" height="15" fill="rgb(244,9,54)"/><text x="1187.00" y="190.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1184" y="196" width="3" height="15" fill="rgb(249,225,23)"/><text x="1187.00" y="206.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="1184" y="212" width="3" height="15" fill="rgb(214,183,28)"/><text x="1187.00" y="222.50"></text></g><g><title>all (441 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(229,32,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (441 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,218,42)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_nozipmap.py) (2 samples, 0.45%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(232,70,9)"/><text x="1187.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (2 samples, 0.45%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(239,168,52)"/><text x="1187.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(252,26,25)"/><text x="1187.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(213,48,36)"/><text x="1187.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (2 samples, 0.45%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(247,35,18)"/><text x="1187.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.23%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(243,65,34)"/><text x="1190.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.23%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(244,57,45)"/><text x="1190.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py) (1 samples, 0.23%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(233,173,35)"/><text x="1190.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py) (1 samples, 0.23%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(243,3,54)"/><text x="1190.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(225,46,16)"/><text x="1190.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(222,50,22)"/><text x="1190.00" y="238.50"></text></g></g></svg>