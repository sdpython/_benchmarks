<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:18) (1 samples, 0.28%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(218,192,19)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(205,16,35)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.28%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(254,78,25)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.28%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(221,26,13)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.28%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(227,87,18)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.28%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(212,147,54)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.28%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(206,208,17)"/><text x="13.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.28%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(218,128,52)"/><text x="19.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.28%)</title><rect x="19" y="164" width="4" height="15" fill="rgb(205,108,50)"/><text x="22.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.83%)</title><rect x="39" y="196" width="10" height="15" fill="rgb(223,128,10)"/><text x="42.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (11 samples, 3.05%)</title><rect x="16" y="148" width="36" height="15" fill="rgb(223,169,14)"/><text x="19.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 2.49%)</title><rect x="23" y="164" width="29" height="15" fill="rgb(206,30,49)"/><text x="26.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.49%)</title><rect x="23" y="180" width="29" height="15" fill="rgb(246,116,25)"/><text x="26.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="49" y="196" width="3" height="15" fill="rgb(218,63,14)"/><text x="52.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.28%)</title><rect x="52" y="148" width="3" height="15" fill="rgb(237,63,34)"/><text x="55.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.83%)</title><rect x="62" y="180" width="10" height="15" fill="rgb(245,66,15)"/><text x="65.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.83%)</title><rect x="62" y="196" width="10" height="15" fill="rgb(231,22,12)"/><text x="65.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.55%)</title><rect x="65" y="212" width="7" height="15" fill="rgb(247,118,42)"/><text x="68.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="68" y="228" width="4" height="15" fill="rgb(254,177,49)"/><text x="71.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.55%)</title><rect x="72" y="196" width="6" height="15" fill="rgb(218,49,1)"/><text x="75.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.28%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(235,141,2)"/><text x="81.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.28%)</title><rect x="81" y="196" width="4" height="15" fill="rgb(246,13,6)"/><text x="84.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.28%)</title><rect x="94" y="212" width="4" height="15" fill="rgb(236,71,21)"/><text x="97.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.66%)</title><rect x="85" y="196" width="19" height="15" fill="rgb(237,115,20)"/><text x="88.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.55%)</title><rect x="98" y="212" width="6" height="15" fill="rgb(251,92,40)"/><text x="101.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.28%)</title><rect x="104" y="228" width="4" height="15" fill="rgb(218,55,40)"/><text x="107.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.55%)</title><rect x="104" y="196" width="7" height="15" fill="rgb(207,156,35)"/><text x="107.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.55%)</title><rect x="104" y="212" width="7" height="15" fill="rgb(210,198,41)"/><text x="107.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.28%)</title><rect x="108" y="228" width="3" height="15" fill="rgb(230,48,46)"/><text x="111.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.28%)</title><rect x="117" y="212" width="4" height="15" fill="rgb(238,0,3)"/><text x="120.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.11%)</title><rect x="111" y="196" width="13" height="15" fill="rgb(207,213,9)"/><text x="114.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.28%)</title><rect x="121" y="212" width="3" height="15" fill="rgb(210,196,10)"/><text x="124.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.28%)</title><rect x="124" y="196" width="3" height="15" fill="rgb(217,96,14)"/><text x="127.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.28%)</title><rect x="127" y="196" width="3" height="15" fill="rgb(222,78,38)"/><text x="130.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.28%)</title><rect x="130" y="196" width="4" height="15" fill="rgb(239,97,27)"/><text x="133.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.28%)</title><rect x="130" y="212" width="4" height="15" fill="rgb(245,217,6)"/><text x="133.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.28%)</title><rect x="130" y="228" width="4" height="15" fill="rgb(252,92,41)"/><text x="133.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.55%)</title><rect x="134" y="196" width="6" height="15" fill="rgb(247,5,31)"/><text x="137.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.55%)</title><rect x="134" y="212" width="6" height="15" fill="rgb(231,128,49)"/><text x="137.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.28%)</title><rect x="137" y="228" width="3" height="15" fill="rgb(241,174,45)"/><text x="140.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.28%)</title><rect x="140" y="212" width="4" height="15" fill="rgb(245,92,23)"/><text x="143.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.83%)</title><rect x="144" y="212" width="9" height="15" fill="rgb(233,153,4)"/><text x="147.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.55%)</title><rect x="147" y="228" width="6" height="15" fill="rgb(236,43,46)"/><text x="150.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.28%)</title><rect x="150" y="244" width="3" height="15" fill="rgb(220,62,23)"/><text x="153.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (26 samples, 7.20%)</title><rect x="72" y="180" width="85" height="15" fill="rgb(226,107,25)"/><text x="75.00" y="190.50">decision_f..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 1.39%)</title><rect x="140" y="196" width="17" height="15" fill="rgb(229,151,28)"/><text x="143.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.28%)</title><rect x="153" y="212" width="4" height="15" fill="rgb(251,229,4)"/><text x="156.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.28%)</title><rect x="157" y="180" width="3" height="15" fill="rgb(241,209,13)"/><text x="160.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.28%)</title><rect x="157" y="196" width="3" height="15" fill="rgb(211,120,24)"/><text x="160.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.28%)</title><rect x="157" y="212" width="3" height="15" fill="rgb(242,201,53)"/><text x="160.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.28%)</title><rect x="157" y="228" width="3" height="15" fill="rgb(243,180,7)"/><text x="160.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.28%)</title><rect x="157" y="244" width="3" height="15" fill="rgb(214,80,46)"/><text x="160.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.28%)</title><rect x="166" y="276" width="4" height="15" fill="rgb(208,161,53)"/><text x="169.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.28%)</title><rect x="166" y="292" width="4" height="15" fill="rgb(228,31,44)"/><text x="169.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="166" y="308" width="4" height="15" fill="rgb(227,62,13)"/><text x="169.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2063) (1 samples, 0.28%)</title><rect x="170" y="292" width="3" height="15" fill="rgb(239,222,16)"/><text x="173.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.28%)</title><rect x="173" y="308" width="3" height="15" fill="rgb(244,65,37)"/><text x="176.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.83%)</title><rect x="176" y="308" width="10" height="15" fill="rgb(226,152,49)"/><text x="179.00" y="318.50"></text></g><g><title>0x7fbe0987cd50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="186" y="324" width="3" height="15" fill="rgb(217,20,26)"/><text x="189.00" y="334.50"></text></g><g><title>0x7fbe0987cd67 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="189" y="324" width="4" height="15" fill="rgb(244,79,31)"/><text x="192.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 2.49%)</title><rect x="166" y="260" width="30" height="15" fill="rgb(218,199,14)"/><text x="169.00" y="270.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 2.22%)</title><rect x="170" y="276" width="26" height="15" fill="rgb(242,133,39)"/><text x="173.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.94%)</title><rect x="173" y="292" width="23" height="15" fill="rgb(227,120,18)"/><text x="176.00" y="302.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.83%)</title><rect x="186" y="308" width="10" height="15" fill="rgb(247,214,27)"/><text x="189.00" y="318.50"></text></g><g><title>0x7fbe0987cd6f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="193" y="324" width="3" height="15" fill="rgb(234,91,17)"/><text x="196.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.28%)</title><rect x="196" y="308" width="3" height="15" fill="rgb(224,222,17)"/><text x="199.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.28%)</title><rect x="196" y="324" width="3" height="15" fill="rgb(247,142,20)"/><text x="199.00" y="334.50"></text></g><g><title>array_add (number.c:330) (11 samples, 3.05%)</title><rect x="166" y="196" width="36" height="15" fill="rgb(230,192,54)"/><text x="169.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.05%)</title><rect x="166" y="212" width="36" height="15" fill="rgb(212,75,15)"/><text x="169.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 3.05%)</title><rect x="166" y="228" width="36" height="15" fill="rgb(216,68,46)"/><text x="169.00" y="238.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 3.05%)</title><rect x="166" y="244" width="36" height="15" fill="rgb(225,188,11)"/><text x="169.00" y="254.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.55%)</title><rect x="196" y="260" width="6" height="15" fill="rgb(245,93,39)"/><text x="199.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.55%)</title><rect x="196" y="276" width="6" height="15" fill="rgb(243,208,23)"/><text x="199.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.55%)</title><rect x="196" y="292" width="6" height="15" fill="rgb(251,101,53)"/><text x="199.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.28%)</title><rect x="199" y="308" width="3" height="15" fill="rgb(233,203,1)"/><text x="202.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.28%)</title><rect x="199" y="324" width="3" height="15" fill="rgb(219,35,31)"/><text x="202.00" y="334.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="202" y="212" width="4" height="15" fill="rgb(225,38,22)"/><text x="205.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.83%)</title><rect x="206" y="212" width="9" height="15" fill="rgb(238,195,24)"/><text x="209.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.28%)</title><rect x="215" y="244" width="4" height="15" fill="rgb(249,80,6)"/><text x="218.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.28%)</title><rect x="215" y="260" width="4" height="15" fill="rgb(252,100,43)"/><text x="218.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.28%)</title><rect x="219" y="244" width="3" height="15" fill="rgb(216,176,44)"/><text x="222.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="219" y="260" width="3" height="15" fill="rgb(231,46,50)"/><text x="222.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.28%)</title><rect x="219" y="276" width="3" height="15" fill="rgb(212,164,24)"/><text x="222.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.28%)</title><rect x="219" y="292" width="3" height="15" fill="rgb(220,33,7)"/><text x="222.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.28%)</title><rect x="219" y="308" width="3" height="15" fill="rgb(208,101,25)"/><text x="222.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.28%)</title><rect x="222" y="244" width="3" height="15" fill="rgb(221,143,16)"/><text x="225.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.28%)</title><rect x="222" y="260" width="3" height="15" fill="rgb(238,105,54)"/><text x="225.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="222" y="276" width="3" height="15" fill="rgb(217,121,5)"/><text x="225.00" y="286.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="222" y="292" width="3" height="15" fill="rgb(205,114,21)"/><text x="225.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="222" y="308" width="3" height="15" fill="rgb(247,107,1)"/><text x="225.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3010) (1 samples, 0.28%)</title><rect x="225" y="244" width="4" height="15" fill="rgb(244,195,7)"/><text x="228.00" y="254.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.28%)</title><rect x="225" y="260" width="4" height="15" fill="rgb(238,101,18)"/><text x="228.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3011) (1 samples, 0.28%)</title><rect x="229" y="244" width="3" height="15" fill="rgb(234,104,2)"/><text x="232.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="229" y="260" width="3" height="15" fill="rgb(207,123,47)"/><text x="232.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.66%)</title><rect x="215" y="212" width="20" height="15" fill="rgb(212,63,9)"/><text x="218.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (6 samples, 1.66%)</title><rect x="215" y="228" width="20" height="15" fill="rgb(238,128,20)"/><text x="218.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.28%)</title><rect x="232" y="244" width="3" height="15" fill="rgb(239,107,39)"/><text x="235.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 3.05%)</title><rect x="202" y="196" width="36" height="15" fill="rgb(229,214,28)"/><text x="205.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.28%)</title><rect x="235" y="212" width="3" height="15" fill="rgb(218,119,9)"/><text x="238.00" y="222.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.28%)</title><rect x="235" y="228" width="3" height="15" fill="rgb(226,143,54)"/><text x="238.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (25 samples, 6.93%)</title><rect x="160" y="180" width="82" height="15" fill="rgb(210,89,2)"/><text x="163.00" y="190.50">decision_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.28%)</title><rect x="238" y="196" width="4" height="15" fill="rgb(214,144,0)"/><text x="241.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (57 samples, 15.79%)</title><rect x="59" y="164" width="186" height="15" fill="rgb(245,197,23)"/><text x="62.00" y="174.50">_predict_proba_lr (sklea..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.28%)</title><rect x="242" y="180" width="3" height="15" fill="rgb(236,91,7)"/><text x="245.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="242" y="196" width="3" height="15" fill="rgb(219,36,45)"/><text x="245.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.55%)</title><rect x="248" y="180" width="7" height="15" fill="rgb(242,173,30)"/><text x="251.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.55%)</title><rect x="248" y="196" width="7" height="15" fill="rgb(248,36,24)"/><text x="251.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.55%)</title><rect x="248" y="212" width="7" height="15" fill="rgb(253,74,11)"/><text x="251.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.55%)</title><rect x="248" y="228" width="7" height="15" fill="rgb(240,2,10)"/><text x="251.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.28%)</title><rect x="255" y="212" width="3" height="15" fill="rgb(213,44,35)"/><text x="258.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.28%)</title><rect x="255" y="228" width="3" height="15" fill="rgb(224,31,26)"/><text x="258.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.28%)</title><rect x="255" y="244" width="3" height="15" fill="rgb(248,67,43)"/><text x="258.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.28%)</title><rect x="255" y="260" width="3" height="15" fill="rgb(238,22,42)"/><text x="258.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.28%)</title><rect x="255" y="276" width="3" height="15" fill="rgb(223,31,26)"/><text x="258.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.28%)</title><rect x="255" y="292" width="3" height="15" fill="rgb(218,227,0)"/><text x="258.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.28%)</title><rect x="255" y="308" width="3" height="15" fill="rgb(248,74,2)"/><text x="258.00" y="318.50"></text></g><g><title>0x7fbdf4b459da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="258" y="244" width="6" height="15" fill="rgb(242,169,52)"/><text x="261.00" y="254.50"></text></g><g><title>0x7fbdf4b459dd (?) (1 samples, 0.28%)</title><rect x="264" y="244" width="4" height="15" fill="rgb(249,33,11)"/><text x="267.00" y="254.50"></text></g><g><title>0x7fbdf4b66265 (?) (1 samples, 0.28%)</title><rect x="264" y="260" width="4" height="15" fill="rgb(240,37,27)"/><text x="267.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.28%)</title><rect x="264" y="276" width="4" height="15" fill="rgb(229,145,23)"/><text x="267.00" y="286.50"></text></g><g><title>0x7fbe09a2ec6a (libm-2.29.so) (1 samples, 0.28%)</title><rect x="264" y="292" width="4" height="15" fill="rgb(207,11,13)"/><text x="267.00" y="302.50"></text></g><g><title>0x7fbdf4b66254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="268" y="260" width="6" height="15" fill="rgb(227,31,28)"/><text x="271.00" y="270.50"></text></g><g><title>0x7fbdf4b23fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="281" y="276" width="6" height="15" fill="rgb(246,95,17)"/><text x="284.00" y="286.50"></text></g><g><title>0x7fbdf4c6f9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="287" y="276" width="7" height="15" fill="rgb(208,112,38)"/><text x="290.00" y="286.50"></text></g><g><title>0x7fbe099a81b0 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="313" y="292" width="7" height="15" fill="rgb(211,224,4)"/><text x="316.00" y="302.50"></text></g><g><title>0x7fbe09a2eba0 (libm-2.29.so) (3 samples, 0.83%)</title><rect x="320" y="292" width="10" height="15" fill="rgb(208,219,50)"/><text x="323.00" y="302.50"></text></g><g><title>0x7fbe09a2ebb4 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="330" y="292" width="6" height="15" fill="rgb(208,12,29)"/><text x="333.00" y="302.50"></text></g><g><title>0x7fbe09a2ebd3 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="336" y="292" width="7" height="15" fill="rgb(221,114,26)"/><text x="339.00" y="302.50"></text></g><g><title>0x7fbe09a2ebe7 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="343" y="292" width="6" height="15" fill="rgb(233,108,45)"/><text x="346.00" y="302.50"></text></g><g><title>0x7fbe09a2ebf9 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="349" y="292" width="4" height="15" fill="rgb(238,172,28)"/><text x="352.00" y="302.50"></text></g><g><title>0x7fbe09a2ec56 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="353" y="292" width="3" height="15" fill="rgb(244,45,5)"/><text x="356.00" y="302.50"></text></g><g><title>0x7fbdf4b66265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 7.20%)</title><rect x="274" y="260" width="85" height="15" fill="rgb(224,44,4)"/><text x="277.00" y="270.50">0x7fbdf4b6..</text></g><g><title>exp (libm-2.29.so) (20 samples, 5.54%)</title><rect x="294" y="276" width="65" height="15" fill="rgb(206,213,22)"/><text x="297.00" y="286.50">exp (li..</text></g><g><title>0x7fbe09a2ec6a (libm-2.29.so) (1 samples, 0.28%)</title><rect x="356" y="292" width="3" height="15" fill="rgb(237,102,46)"/><text x="359.00" y="302.50"></text></g><g><title>0x7fbdf4b66275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="359" y="260" width="4" height="15" fill="rgb(213,147,21)"/><text x="362.00" y="270.50"></text></g><g><title>0x7fbdf4b459dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (39 samples, 10.80%)</title><rect x="268" y="244" width="127" height="15" fill="rgb(239,183,1)"/><text x="271.00" y="254.50">0x7fbdf4b459dd ..</text></g><g><title>0x7fbdf4b66279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.77%)</title><rect x="363" y="260" width="32" height="15" fill="rgb(230,147,14)"/><text x="366.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (48 samples, 13.30%)</title><rect x="245" y="164" width="157" height="15" fill="rgb(250,186,5)"/><text x="248.00" y="174.50">_predict_proba_lr (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (45 samples, 12.47%)</title><rect x="255" y="180" width="147" height="15" fill="rgb(206,20,13)"/><text x="258.00" y="190.50">ufunc_generic_call..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (45 samples, 12.47%)</title><rect x="255" y="196" width="147" height="15" fill="rgb(245,146,14)"/><text x="258.00" y="206.50">PyUFunc_GenericFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (44 samples, 12.19%)</title><rect x="258" y="212" width="144" height="15" fill="rgb(251,143,16)"/><text x="261.00" y="222.50">execute_legacy_ufu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (44 samples, 12.19%)</title><rect x="258" y="228" width="144" height="15" fill="rgb(240,109,25)"/><text x="261.00" y="238.50">trivial_two_operan..</text></g><g><title>0x7fbdf4b459e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="395" y="244" width="7" height="15" fill="rgb(214,149,35)"/><text x="398.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.28%)</title><rect x="402" y="164" width="3" height="15" fill="rgb(216,227,30)"/><text x="405.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.28%)</title><rect x="408" y="180" width="4" height="15" fill="rgb(212,162,17)"/><text x="411.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.28%)</title><rect x="412" y="180" width="3" height="15" fill="rgb(224,190,30)"/><text x="415.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.28%)</title><rect x="412" y="196" width="3" height="15" fill="rgb(239,217,46)"/><text x="415.00" y="206.50"></text></g><g><title>0x7fbe09872757 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="412" y="212" width="3" height="15" fill="rgb(214,55,19)"/><text x="415.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.83%)</title><rect x="415" y="180" width="10" height="15" fill="rgb(214,171,4)"/><text x="418.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.28%)</title><rect x="421" y="196" width="4" height="15" fill="rgb(253,194,20)"/><text x="424.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.28%)</title><rect x="421" y="212" width="4" height="15" fill="rgb(205,37,18)"/><text x="424.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.28%)</title><rect x="421" y="228" width="4" height="15" fill="rgb(222,119,47)"/><text x="424.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.28%)</title><rect x="421" y="244" width="4" height="15" fill="rgb(246,220,28)"/><text x="424.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:265) (1 samples, 0.28%)</title><rect x="425" y="212" width="3" height="15" fill="rgb(227,4,29)"/><text x="428.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.55%)</title><rect x="425" y="180" width="6" height="15" fill="rgb(208,120,11)"/><text x="428.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.55%)</title><rect x="425" y="196" width="6" height="15" fill="rgb(246,209,53)"/><text x="428.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.28%)</title><rect x="428" y="212" width="3" height="15" fill="rgb(210,136,27)"/><text x="431.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.28%)</title><rect x="428" y="228" width="3" height="15" fill="rgb(250,21,41)"/><text x="431.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.28%)</title><rect x="428" y="244" width="3" height="15" fill="rgb(238,208,30)"/><text x="431.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.28%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(220,169,36)"/><text x="431.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.28%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(241,51,32)"/><text x="441.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.55%)</title><rect x="438" y="228" width="6" height="15" fill="rgb(235,64,32)"/><text x="441.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.55%)</title><rect x="438" y="244" width="6" height="15" fill="rgb(205,118,31)"/><text x="441.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.55%)</title><rect x="438" y="260" width="6" height="15" fill="rgb(210,57,13)"/><text x="441.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.28%)</title><rect x="441" y="276" width="3" height="15" fill="rgb(234,172,54)"/><text x="444.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.28%)</title><rect x="441" y="292" width="3" height="15" fill="rgb(239,108,21)"/><text x="444.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.28%)</title><rect x="441" y="308" width="3" height="15" fill="rgb(215,156,31)"/><text x="444.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="441" y="324" width="3" height="15" fill="rgb(214,88,8)"/><text x="444.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.55%)</title><rect x="444" y="244" width="7" height="15" fill="rgb(229,158,4)"/><text x="447.00" y="254.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:79) (1 samples, 0.28%)</title><rect x="448" y="260" width="3" height="15" fill="rgb(227,81,42)"/><text x="451.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.28%)</title><rect x="451" y="260" width="3" height="15" fill="rgb(219,162,31)"/><text x="454.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.28%)</title><rect x="451" y="276" width="3" height="15" fill="rgb(252,226,3)"/><text x="454.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.28%)</title><rect x="451" y="292" width="3" height="15" fill="rgb(246,119,52)"/><text x="454.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.28%)</title><rect x="451" y="308" width="3" height="15" fill="rgb(209,208,12)"/><text x="454.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.28%)</title><rect x="454" y="276" width="3" height="15" fill="rgb(206,107,37)"/><text x="457.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.28%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(215,217,32)"/><text x="457.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.28%)</title><rect x="454" y="308" width="3" height="15" fill="rgb(211,33,46)"/><text x="457.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.28%)</title><rect x="454" y="324" width="3" height="15" fill="rgb(223,191,38)"/><text x="457.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3899) (1 samples, 0.28%)</title><rect x="454" y="340" width="3" height="15" fill="rgb(226,31,28)"/><text x="457.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="457" y="292" width="4" height="15" fill="rgb(226,59,33)"/><text x="460.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1456) (1 samples, 0.28%)</title><rect x="457" y="308" width="4" height="15" fill="rgb(229,104,45)"/><text x="460.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.55%)</title><rect x="457" y="276" width="7" height="15" fill="rgb(211,164,37)"/><text x="460.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.28%)</title><rect x="461" y="292" width="3" height="15" fill="rgb(206,10,13)"/><text x="464.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.28%)</title><rect x="461" y="308" width="3" height="15" fill="rgb(217,131,2)"/><text x="464.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="461" y="324" width="3" height="15" fill="rgb(216,223,7)"/><text x="464.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (3 samples, 0.83%)</title><rect x="464" y="292" width="10" height="15" fill="rgb(206,108,10)"/><text x="467.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.28%)</title><rect x="474" y="292" width="3" height="15" fill="rgb(253,207,32)"/><text x="477.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.28%)</title><rect x="477" y="292" width="3" height="15" fill="rgb(251,76,6)"/><text x="480.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.28%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(242,107,33)"/><text x="483.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.28%)</title><rect x="483" y="308" width="4" height="15" fill="rgb(229,19,3)"/><text x="486.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.55%)</title><rect x="487" y="308" width="6" height="15" fill="rgb(251,0,40)"/><text x="490.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.28%)</title><rect x="500" y="324" width="3" height="15" fill="rgb(214,199,12)"/><text x="503.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.28%)</title><rect x="503" y="324" width="3" height="15" fill="rgb(247,153,30)"/><text x="506.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 1.39%)</title><rect x="493" y="308" width="17" height="15" fill="rgb(209,208,35)"/><text x="496.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.28%)</title><rect x="506" y="324" width="4" height="15" fill="rgb(251,228,43)"/><text x="509.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.28%)</title><rect x="510" y="308" width="3" height="15" fill="rgb(215,78,17)"/><text x="513.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (26 samples, 7.20%)</title><rect x="431" y="180" width="85" height="15" fill="rgb(229,181,45)"/><text x="434.00" y="190.50">array_sum ..</text></g><g><title>forward_ndarray_method (methods.c:108) (26 samples, 7.20%)</title><rect x="431" y="196" width="85" height="15" fill="rgb(232,139,49)"/><text x="434.00" y="206.50">forward_nd..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 6.65%)</title><rect x="438" y="212" width="78" height="15" fill="rgb(242,157,54)"/><text x="441.00" y="222.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 6.09%)</title><rect x="444" y="228" width="72" height="15" fill="rgb(219,216,10)"/><text x="447.00" y="238.50">ufunc_re..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 5.54%)</title><rect x="451" y="244" width="65" height="15" fill="rgb(252,201,4)"/><text x="454.00" y="254.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 5.26%)</title><rect x="454" y="260" width="62" height="15" fill="rgb(226,203,20)"/><text x="457.00" y="270.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (16 samples, 4.43%)</title><rect x="464" y="276" width="52" height="15" fill="rgb(247,172,26)"/><text x="467.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 2.77%)</title><rect x="483" y="292" width="33" height="15" fill="rgb(212,182,22)"/><text x="486.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.28%)</title><rect x="513" y="308" width="3" height="15" fill="rgb(242,96,32)"/><text x="516.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="516" y="196" width="3" height="15" fill="rgb(212,58,23)"/><text x="519.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.28%)</title><rect x="516" y="212" width="3" height="15" fill="rgb(214,3,25)"/><text x="519.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="519" y="196" width="4" height="15" fill="rgb(221,150,6)"/><text x="522.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.28%)</title><rect x="519" y="212" width="4" height="15" fill="rgb(209,96,39)"/><text x="522.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1637) (1 samples, 0.28%)</title><rect x="519" y="228" width="4" height="15" fill="rgb(214,132,11)"/><text x="522.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="523" y="244" width="3" height="15" fill="rgb(213,140,19)"/><text x="526.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.55%)</title><rect x="523" y="228" width="6" height="15" fill="rgb(218,58,53)"/><text x="526.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.28%)</title><rect x="526" y="244" width="3" height="15" fill="rgb(243,78,42)"/><text x="529.00" y="254.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2403) (1 samples, 0.28%)</title><rect x="526" y="260" width="3" height="15" fill="rgb(214,183,44)"/><text x="529.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:309) (1 samples, 0.28%)</title><rect x="529" y="244" width="3" height="15" fill="rgb(206,151,35)"/><text x="532.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.28%)</title><rect x="532" y="276" width="4" height="15" fill="rgb(252,185,46)"/><text x="535.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.28%)</title><rect x="536" y="276" width="3" height="15" fill="rgb(241,160,37)"/><text x="539.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.28%)</title><rect x="542" y="292" width="4" height="15" fill="rgb(207,223,8)"/><text x="545.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.83%)</title><rect x="539" y="276" width="10" height="15" fill="rgb(248,1,20)"/><text x="542.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.28%)</title><rect x="546" y="292" width="3" height="15" fill="rgb(225,38,25)"/><text x="549.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.94%)</title><rect x="529" y="228" width="23" height="15" fill="rgb(205,163,29)"/><text x="532.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.66%)</title><rect x="532" y="244" width="20" height="15" fill="rgb(223,115,42)"/><text x="535.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.66%)</title><rect x="532" y="260" width="20" height="15" fill="rgb(217,47,29)"/><text x="535.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:987) (1 samples, 0.28%)</title><rect x="549" y="276" width="3" height="15" fill="rgb(233,52,16)"/><text x="552.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 1.94%)</title><rect x="552" y="228" width="23" height="15" fill="rgb(227,206,51)"/><text x="555.00" y="238.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 1.94%)</title><rect x="552" y="244" width="23" height="15" fill="rgb(231,208,39)"/><text x="555.00" y="254.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 1.94%)</title><rect x="552" y="260" width="23" height="15" fill="rgb(221,157,45)"/><text x="555.00" y="270.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 1.94%)</title><rect x="552" y="276" width="23" height="15" fill="rgb(208,205,16)"/><text x="555.00" y="286.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 1.94%)</title><rect x="552" y="292" width="23" height="15" fill="rgb(227,98,33)"/><text x="555.00" y="302.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (172 samples, 47.65%)</title><rect x="16" y="132" width="562" height="15" fill="rgb(218,90,43)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (160 samples, 44.32%)</title><rect x="55" y="148" width="523" height="15" fill="rgb(240,186,3)"/><text x="58.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (53 samples, 14.68%)</title><rect x="405" y="164" width="173" height="15" fill="rgb(223,145,11)"/><text x="408.00" y="174.50">_predict_proba_lr (skl..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 5.26%)</title><rect x="516" y="180" width="62" height="15" fill="rgb(222,23,17)"/><text x="519.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 4.71%)</title><rect x="523" y="196" width="55" height="15" fill="rgb(213,3,37)"/><text x="526.00" y="206.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (17 samples, 4.71%)</title><rect x="523" y="212" width="55" height="15" fill="rgb(219,73,5)"/><text x="526.00" y="222.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="575" y="228" width="3" height="15" fill="rgb(236,85,36)"/><text x="578.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="575" y="244" width="3" height="15" fill="rgb(222,181,52)"/><text x="578.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:38) (175 samples, 48.48%)</title><rect x="10" y="52" width="572" height="15" fill="rgb(226,61,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:37) (175 samples, 48.48%)</title><rect x="10" y="68" width="572" height="15" fill="rgb(225,149,22)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:29) (175 samples, 48.48%)</title><rect x="10" y="84" width="572" height="15" fill="rgb(221,83,43)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:23) (174 samples, 48.20%)</title><rect x="13" y="100" width="569" height="15" fill="rgb(215,17,0)"/><text x="16.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (173 samples, 47.92%)</title><rect x="16" y="116" width="566" height="15" fill="rgb(254,131,26)"/><text x="19.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="578" y="132" width="4" height="15" fill="rgb(206,107,8)"/><text x="581.00" y="142.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.28%)</title><rect x="582" y="916" width="3" height="15" fill="rgb(212,94,28)"/><text x="585.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.28%)</title><rect x="582" y="932" width="3" height="15" fill="rgb(237,176,5)"/><text x="585.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.28%)</title><rect x="582" y="948" width="3" height="15" fill="rgb(228,217,39)"/><text x="585.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.55%)</title><rect x="582" y="852" width="6" height="15" fill="rgb(217,189,4)"/><text x="585.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.55%)</title><rect x="582" y="868" width="6" height="15" fill="rgb(239,117,9)"/><text x="585.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.55%)</title><rect x="582" y="884" width="6" height="15" fill="rgb(210,100,36)"/><text x="585.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.55%)</title><rect x="582" y="900" width="6" height="15" fill="rgb(209,33,37)"/><text x="585.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.28%)</title><rect x="585" y="916" width="3" height="15" fill="rgb(206,43,43)"/><text x="588.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.28%)</title><rect x="585" y="932" width="3" height="15" fill="rgb(250,19,26)"/><text x="588.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.28%)</title><rect x="585" y="948" width="3" height="15" fill="rgb(253,57,41)"/><text x="588.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.28%)</title><rect x="585" y="964" width="3" height="15" fill="rgb(214,82,21)"/><text x="588.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.28%)</title><rect x="585" y="980" width="3" height="15" fill="rgb(231,24,33)"/><text x="588.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="588" y="852" width="3" height="15" fill="rgb(223,129,44)"/><text x="591.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="588" y="868" width="3" height="15" fill="rgb(245,107,13)"/><text x="591.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.28%)</title><rect x="588" y="884" width="3" height="15" fill="rgb(206,81,46)"/><text x="591.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.28%)</title><rect x="588" y="900" width="3" height="15" fill="rgb(223,187,15)"/><text x="591.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="588" y="916" width="3" height="15" fill="rgb(219,1,19)"/><text x="591.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.28%)</title><rect x="588" y="932" width="3" height="15" fill="rgb(227,60,17)"/><text x="591.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.28%)</title><rect x="588" y="948" width="3" height="15" fill="rgb(229,223,2)"/><text x="591.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.28%)</title><rect x="588" y="964" width="3" height="15" fill="rgb(217,180,43)"/><text x="591.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.28%)</title><rect x="588" y="980" width="3" height="15" fill="rgb(242,227,48)"/><text x="591.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:88) (1 samples, 0.28%)</title><rect x="588" y="996" width="3" height="15" fill="rgb(217,55,54)"/><text x="591.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.28%)</title><rect x="591" y="884" width="4" height="15" fill="rgb(254,131,26)"/><text x="594.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.28%)</title><rect x="591" y="900" width="4" height="15" fill="rgb(243,83,11)"/><text x="594.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.28%)</title><rect x="591" y="916" width="4" height="15" fill="rgb(244,22,22)"/><text x="594.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.28%)</title><rect x="591" y="932" width="4" height="15" fill="rgb(240,214,38)"/><text x="594.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.28%)</title><rect x="591" y="948" width="4" height="15" fill="rgb(208,179,40)"/><text x="594.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.28%)</title><rect x="591" y="964" width="4" height="15" fill="rgb(239,194,3)"/><text x="594.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.28%)</title><rect x="591" y="980" width="4" height="15" fill="rgb(232,34,34)"/><text x="594.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.28%)</title><rect x="591" y="996" width="4" height="15" fill="rgb(208,89,19)"/><text x="594.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.28%)</title><rect x="591" y="1012" width="4" height="15" fill="rgb(220,9,43)"/><text x="594.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (5 samples, 1.39%)</title><rect x="582" y="148" width="16" height="15" fill="rgb(233,109,38)"/><text x="585.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="164" width="16" height="15" fill="rgb(221,228,0)"/><text x="585.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.39%)</title><rect x="582" y="180" width="16" height="15" fill="rgb(251,198,48)"/><text x="585.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="196" width="16" height="15" fill="rgb(230,204,53)"/><text x="585.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="212" width="16" height="15" fill="rgb(221,191,25)"/><text x="585.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="228" width="16" height="15" fill="rgb(223,25,2)"/><text x="585.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="244" width="16" height="15" fill="rgb(231,33,42)"/><text x="585.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="260" width="16" height="15" fill="rgb(207,45,50)"/><text x="585.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="276" width="16" height="15" fill="rgb(215,89,44)"/><text x="585.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.39%)</title><rect x="582" y="292" width="16" height="15" fill="rgb(218,56,35)"/><text x="585.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="308" width="16" height="15" fill="rgb(224,120,31)"/><text x="585.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="324" width="16" height="15" fill="rgb(253,141,45)"/><text x="585.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="340" width="16" height="15" fill="rgb(209,104,24)"/><text x="585.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="356" width="16" height="15" fill="rgb(227,202,16)"/><text x="585.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="372" width="16" height="15" fill="rgb(239,43,44)"/><text x="585.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.39%)</title><rect x="582" y="388" width="16" height="15" fill="rgb(222,143,54)"/><text x="585.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="404" width="16" height="15" fill="rgb(243,120,33)"/><text x="585.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="420" width="16" height="15" fill="rgb(236,150,46)"/><text x="585.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="436" width="16" height="15" fill="rgb(220,74,36)"/><text x="585.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="452" width="16" height="15" fill="rgb(222,23,8)"/><text x="585.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="468" width="16" height="15" fill="rgb(224,217,34)"/><text x="585.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.39%)</title><rect x="582" y="484" width="16" height="15" fill="rgb(219,189,29)"/><text x="585.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="500" width="16" height="15" fill="rgb(205,66,52)"/><text x="585.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="516" width="16" height="15" fill="rgb(232,4,0)"/><text x="585.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="532" width="16" height="15" fill="rgb(234,206,16)"/><text x="585.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="548" width="16" height="15" fill="rgb(250,185,20)"/><text x="585.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="564" width="16" height="15" fill="rgb(230,89,32)"/><text x="585.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.39%)</title><rect x="582" y="580" width="16" height="15" fill="rgb(236,30,50)"/><text x="585.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="596" width="16" height="15" fill="rgb(223,142,29)"/><text x="585.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.39%)</title><rect x="582" y="612" width="16" height="15" fill="rgb(252,96,10)"/><text x="585.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="628" width="16" height="15" fill="rgb(250,76,2)"/><text x="585.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="644" width="16" height="15" fill="rgb(241,138,49)"/><text x="585.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="660" width="16" height="15" fill="rgb(239,134,50)"/><text x="585.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="676" width="16" height="15" fill="rgb(248,142,50)"/><text x="585.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="692" width="16" height="15" fill="rgb(240,110,4)"/><text x="585.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="708" width="16" height="15" fill="rgb(252,153,45)"/><text x="585.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.39%)</title><rect x="582" y="724" width="16" height="15" fill="rgb(251,43,20)"/><text x="585.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="582" y="740" width="16" height="15" fill="rgb(214,92,13)"/><text x="585.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="582" y="756" width="16" height="15" fill="rgb(249,180,40)"/><text x="585.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="582" y="772" width="16" height="15" fill="rgb(237,188,5)"/><text x="585.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="582" y="788" width="16" height="15" fill="rgb(230,72,48)"/><text x="585.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="582" y="804" width="16" height="15" fill="rgb(236,163,41)"/><text x="585.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.39%)</title><rect x="582" y="820" width="16" height="15" fill="rgb(238,75,22)"/><text x="585.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.39%)</title><rect x="582" y="836" width="16" height="15" fill="rgb(216,211,40)"/><text x="585.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.55%)</title><rect x="591" y="852" width="7" height="15" fill="rgb(234,179,46)"/><text x="594.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.55%)</title><rect x="591" y="868" width="7" height="15" fill="rgb(233,16,42)"/><text x="594.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.28%)</title><rect x="595" y="884" width="3" height="15" fill="rgb(231,163,29)"/><text x="598.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.28%)</title><rect x="595" y="900" width="3" height="15" fill="rgb(232,200,45)"/><text x="598.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.28%)</title><rect x="595" y="916" width="3" height="15" fill="rgb(248,141,44)"/><text x="598.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.28%)</title><rect x="595" y="932" width="3" height="15" fill="rgb(239,92,37)"/><text x="598.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.28%)</title><rect x="595" y="948" width="3" height="15" fill="rgb(243,118,9)"/><text x="598.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.28%)</title><rect x="595" y="964" width="3" height="15" fill="rgb(211,45,1)"/><text x="598.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.28%)</title><rect x="595" y="980" width="3" height="15" fill="rgb(210,184,44)"/><text x="598.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (1 samples, 0.28%)</title><rect x="598" y="148" width="3" height="15" fill="rgb(217,129,46)"/><text x="601.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="164" width="3" height="15" fill="rgb(219,142,10)"/><text x="601.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="598" y="180" width="3" height="15" fill="rgb(215,136,33)"/><text x="601.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="196" width="3" height="15" fill="rgb(237,139,45)"/><text x="601.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="212" width="3" height="15" fill="rgb(231,222,36)"/><text x="601.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(212,152,7)"/><text x="601.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="244" width="3" height="15" fill="rgb(211,148,42)"/><text x="601.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="260" width="3" height="15" fill="rgb(250,207,47)"/><text x="601.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="276" width="3" height="15" fill="rgb(227,208,8)"/><text x="601.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.28%)</title><rect x="598" y="292" width="3" height="15" fill="rgb(223,192,15)"/><text x="601.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="308" width="3" height="15" fill="rgb(224,26,23)"/><text x="601.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="324" width="3" height="15" fill="rgb(220,60,6)"/><text x="601.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(235,226,13)"/><text x="601.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="356" width="3" height="15" fill="rgb(253,216,42)"/><text x="601.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="372" width="3" height="15" fill="rgb(253,184,29)"/><text x="601.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.28%)</title><rect x="598" y="388" width="3" height="15" fill="rgb(225,103,18)"/><text x="601.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="404" width="3" height="15" fill="rgb(223,210,29)"/><text x="601.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="420" width="3" height="15" fill="rgb(246,109,31)"/><text x="601.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="436" width="3" height="15" fill="rgb(205,89,20)"/><text x="601.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="452" width="3" height="15" fill="rgb(207,106,30)"/><text x="601.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="468" width="3" height="15" fill="rgb(250,20,18)"/><text x="601.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.28%)</title><rect x="598" y="484" width="3" height="15" fill="rgb(249,164,12)"/><text x="601.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="500" width="3" height="15" fill="rgb(242,5,19)"/><text x="601.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="516" width="3" height="15" fill="rgb(234,21,34)"/><text x="601.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="532" width="3" height="15" fill="rgb(218,11,39)"/><text x="601.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="548" width="3" height="15" fill="rgb(246,182,6)"/><text x="601.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="564" width="3" height="15" fill="rgb(229,117,21)"/><text x="601.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.28%)</title><rect x="598" y="580" width="3" height="15" fill="rgb(210,95,37)"/><text x="601.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="596" width="3" height="15" fill="rgb(254,176,21)"/><text x="601.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="612" width="3" height="15" fill="rgb(221,10,6)"/><text x="601.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="628" width="3" height="15" fill="rgb(212,170,30)"/><text x="601.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="644" width="3" height="15" fill="rgb(243,124,38)"/><text x="601.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="660" width="3" height="15" fill="rgb(235,80,28)"/><text x="601.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.28%)</title><rect x="598" y="676" width="3" height="15" fill="rgb(246,201,10)"/><text x="601.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="692" width="3" height="15" fill="rgb(207,181,45)"/><text x="601.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="708" width="3" height="15" fill="rgb(247,9,34)"/><text x="601.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="724" width="3" height="15" fill="rgb(237,76,4)"/><text x="601.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="740" width="3" height="15" fill="rgb(236,183,53)"/><text x="601.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="756" width="3" height="15" fill="rgb(220,221,14)"/><text x="601.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.28%)</title><rect x="598" y="772" width="3" height="15" fill="rgb(237,114,47)"/><text x="601.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="598" y="788" width="3" height="15" fill="rgb(242,154,29)"/><text x="601.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="804" width="3" height="15" fill="rgb(242,162,18)"/><text x="601.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="820" width="3" height="15" fill="rgb(241,129,27)"/><text x="601.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="836" width="3" height="15" fill="rgb(240,116,31)"/><text x="601.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="852" width="3" height="15" fill="rgb(243,219,28)"/><text x="601.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="868" width="3" height="15" fill="rgb(208,52,15)"/><text x="601.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="884" width="3" height="15" fill="rgb(213,108,20)"/><text x="601.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.28%)</title><rect x="598" y="900" width="3" height="15" fill="rgb(245,164,29)"/><text x="601.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="598" y="916" width="3" height="15" fill="rgb(209,38,0)"/><text x="601.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="932" width="3" height="15" fill="rgb(206,4,28)"/><text x="601.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="598" y="948" width="3" height="15" fill="rgb(222,132,18)"/><text x="601.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="598" y="964" width="3" height="15" fill="rgb(238,46,14)"/><text x="601.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="598" y="980" width="3" height="15" fill="rgb(236,49,29)"/><text x="601.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="598" y="996" width="3" height="15" fill="rgb(245,98,53)"/><text x="601.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="598" y="1012" width="3" height="15" fill="rgb(226,122,8)"/><text x="601.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:872) (1 samples, 0.28%)</title><rect x="598" y="1028" width="3" height="15" fill="rgb(221,116,22)"/><text x="601.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.28%)</title><rect x="598" y="1044" width="3" height="15" fill="rgb(213,117,41)"/><text x="601.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.28%)</title><rect x="598" y="1060" width="3" height="15" fill="rgb(228,164,46)"/><text x="601.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.28%)</title><rect x="601" y="580" width="3" height="15" fill="rgb(233,175,39)"/><text x="604.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="601" y="596" width="3" height="15" fill="rgb(235,134,39)"/><text x="604.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="601" y="612" width="3" height="15" fill="rgb(249,209,7)"/><text x="604.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="601" y="628" width="3" height="15" fill="rgb(214,44,30)"/><text x="604.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="601" y="644" width="3" height="15" fill="rgb(219,20,36)"/><text x="604.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="601" y="660" width="3" height="15" fill="rgb(232,62,21)"/><text x="604.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:60) (1 samples, 0.28%)</title><rect x="601" y="676" width="3" height="15" fill="rgb(238,162,26)"/><text x="604.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:38) (1 samples, 0.28%)</title><rect x="601" y="692" width="3" height="15" fill="rgb(220,91,52)"/><text x="604.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py:38) (1 samples, 0.28%)</title><rect x="601" y="708" width="3" height="15" fill="rgb(247,18,49)"/><text x="604.00" y="718.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.28%)</title><rect x="601" y="724" width="3" height="15" fill="rgb(230,74,42)"/><text x="604.00" y="734.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.28%)</title><rect x="601" y="740" width="3" height="15" fill="rgb(222,220,45)"/><text x="604.00" y="750.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.28%)</title><rect x="604" y="772" width="4" height="15" fill="rgb(239,38,6)"/><text x="607.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="604" y="788" width="4" height="15" fill="rgb(222,124,45)"/><text x="607.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="604" y="804" width="4" height="15" fill="rgb(234,28,47)"/><text x="607.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="604" y="820" width="4" height="15" fill="rgb(235,177,50)"/><text x="607.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="604" y="836" width="4" height="15" fill="rgb(208,87,34)"/><text x="607.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="604" y="852" width="4" height="15" fill="rgb(219,137,2)"/><text x="607.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="604" y="868" width="4" height="15" fill="rgb(212,63,21)"/><text x="607.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="604" y="884" width="4" height="15" fill="rgb(223,82,10)"/><text x="607.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:11) (1 samples, 0.28%)</title><rect x="604" y="900" width="4" height="15" fill="rgb(207,54,1)"/><text x="607.00" y="910.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="604" y="916" width="4" height="15" fill="rgb(225,163,16)"/><text x="607.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.83%)</title><rect x="601" y="244" width="10" height="15" fill="rgb(220,106,29)"/><text x="604.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="601" y="260" width="10" height="15" fill="rgb(218,12,0)"/><text x="604.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="601" y="276" width="10" height="15" fill="rgb(210,92,28)"/><text x="604.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="601" y="292" width="10" height="15" fill="rgb(225,130,12)"/><text x="604.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="601" y="308" width="10" height="15" fill="rgb(211,169,5)"/><text x="604.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="601" y="324" width="10" height="15" fill="rgb(223,106,54)"/><text x="604.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.83%)</title><rect x="601" y="340" width="10" height="15" fill="rgb(245,10,11)"/><text x="604.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="601" y="356" width="10" height="15" fill="rgb(252,210,47)"/><text x="604.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.83%)</title><rect x="601" y="372" width="10" height="15" fill="rgb(249,160,29)"/><text x="604.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="601" y="388" width="10" height="15" fill="rgb(228,194,36)"/><text x="604.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="601" y="404" width="10" height="15" fill="rgb(222,226,29)"/><text x="604.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="601" y="420" width="10" height="15" fill="rgb(207,130,32)"/><text x="604.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="601" y="436" width="10" height="15" fill="rgb(229,74,49)"/><text x="604.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="601" y="452" width="10" height="15" fill="rgb(215,227,45)"/><text x="604.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="601" y="468" width="10" height="15" fill="rgb(218,190,22)"/><text x="604.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 0.83%)</title><rect x="601" y="484" width="10" height="15" fill="rgb(234,177,53)"/><text x="604.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="601" y="500" width="10" height="15" fill="rgb(212,53,32)"/><text x="604.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="601" y="516" width="10" height="15" fill="rgb(225,202,50)"/><text x="604.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="601" y="532" width="10" height="15" fill="rgb(235,175,6)"/><text x="604.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="601" y="548" width="10" height="15" fill="rgb(211,52,23)"/><text x="604.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="601" y="564" width="10" height="15" fill="rgb(212,68,5)"/><text x="604.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.55%)</title><rect x="604" y="580" width="7" height="15" fill="rgb(212,85,8)"/><text x="607.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="604" y="596" width="7" height="15" fill="rgb(225,110,9)"/><text x="607.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="604" y="612" width="7" height="15" fill="rgb(233,41,32)"/><text x="607.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="604" y="628" width="7" height="15" fill="rgb(216,154,45)"/><text x="607.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="604" y="644" width="7" height="15" fill="rgb(219,173,10)"/><text x="607.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="604" y="660" width="7" height="15" fill="rgb(230,86,2)"/><text x="607.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.55%)</title><rect x="604" y="676" width="7" height="15" fill="rgb(248,223,40)"/><text x="607.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="604" y="692" width="7" height="15" fill="rgb(211,85,16)"/><text x="607.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="604" y="708" width="7" height="15" fill="rgb(219,42,36)"/><text x="607.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="604" y="724" width="7" height="15" fill="rgb(248,37,44)"/><text x="607.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="604" y="740" width="7" height="15" fill="rgb(241,98,13)"/><text x="607.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="604" y="756" width="7" height="15" fill="rgb(209,47,38)"/><text x="607.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.28%)</title><rect x="608" y="772" width="3" height="15" fill="rgb(234,171,35)"/><text x="611.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="608" y="788" width="3" height="15" fill="rgb(250,141,7)"/><text x="611.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="608" y="804" width="3" height="15" fill="rgb(238,56,18)"/><text x="611.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="608" y="820" width="3" height="15" fill="rgb(243,19,13)"/><text x="611.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="608" y="836" width="3" height="15" fill="rgb(248,103,30)"/><text x="611.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="608" y="852" width="3" height="15" fill="rgb(238,38,22)"/><text x="611.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:11) (1 samples, 0.28%)</title><rect x="608" y="868" width="3" height="15" fill="rgb(216,157,27)"/><text x="611.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.28%)</title><rect x="608" y="884" width="3" height="15" fill="rgb(252,173,30)"/><text x="611.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.28%)</title><rect x="611" y="436" width="3" height="15" fill="rgb(240,189,12)"/><text x="614.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="452" width="3" height="15" fill="rgb(206,150,41)"/><text x="614.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="468" width="3" height="15" fill="rgb(219,145,14)"/><text x="614.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="484" width="3" height="15" fill="rgb(231,172,45)"/><text x="614.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="500" width="3" height="15" fill="rgb(205,100,13)"/><text x="614.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="516" width="3" height="15" fill="rgb(224,150,36)"/><text x="614.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.28%)</title><rect x="611" y="532" width="3" height="15" fill="rgb(241,50,45)"/><text x="614.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="548" width="3" height="15" fill="rgb(213,100,32)"/><text x="614.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="564" width="3" height="15" fill="rgb(254,44,4)"/><text x="614.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="580" width="3" height="15" fill="rgb(238,136,38)"/><text x="614.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="596" width="3" height="15" fill="rgb(239,53,33)"/><text x="614.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="612" width="3" height="15" fill="rgb(233,165,31)"/><text x="614.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.28%)</title><rect x="611" y="628" width="3" height="15" fill="rgb(221,13,7)"/><text x="614.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="644" width="3" height="15" fill="rgb(241,142,35)"/><text x="614.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="660" width="3" height="15" fill="rgb(217,116,26)"/><text x="614.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="676" width="3" height="15" fill="rgb(224,163,46)"/><text x="614.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="692" width="3" height="15" fill="rgb(223,174,6)"/><text x="614.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="708" width="3" height="15" fill="rgb(249,160,43)"/><text x="614.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.28%)</title><rect x="611" y="724" width="3" height="15" fill="rgb(244,203,1)"/><text x="614.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="740" width="3" height="15" fill="rgb(211,202,18)"/><text x="614.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="756" width="3" height="15" fill="rgb(217,202,24)"/><text x="614.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="772" width="3" height="15" fill="rgb(219,100,35)"/><text x="614.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="788" width="3" height="15" fill="rgb(252,212,21)"/><text x="614.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="804" width="3" height="15" fill="rgb(205,142,20)"/><text x="614.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.28%)</title><rect x="611" y="820" width="3" height="15" fill="rgb(206,184,48)"/><text x="614.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="836" width="3" height="15" fill="rgb(234,134,25)"/><text x="614.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="852" width="3" height="15" fill="rgb(242,119,52)"/><text x="614.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="868" width="3" height="15" fill="rgb(226,201,16)"/><text x="614.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="884" width="3" height="15" fill="rgb(248,141,46)"/><text x="614.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="900" width="3" height="15" fill="rgb(212,181,34)"/><text x="614.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.28%)</title><rect x="611" y="916" width="3" height="15" fill="rgb(243,160,11)"/><text x="614.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="932" width="3" height="15" fill="rgb(240,49,48)"/><text x="614.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="948" width="3" height="15" fill="rgb(240,164,29)"/><text x="614.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="964" width="3" height="15" fill="rgb(222,199,8)"/><text x="614.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="980" width="3" height="15" fill="rgb(248,83,8)"/><text x="614.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="996" width="3" height="15" fill="rgb(226,79,46)"/><text x="614.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.28%)</title><rect x="611" y="1012" width="3" height="15" fill="rgb(226,192,16)"/><text x="614.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1028" width="3" height="15" fill="rgb(229,163,9)"/><text x="614.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1044" width="3" height="15" fill="rgb(226,43,30)"/><text x="614.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1060" width="3" height="15" fill="rgb(213,39,45)"/><text x="614.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1076" width="3" height="15" fill="rgb(253,66,44)"/><text x="614.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1092" width="3" height="15" fill="rgb(232,70,6)"/><text x="614.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.28%)</title><rect x="611" y="1108" width="3" height="15" fill="rgb(211,49,37)"/><text x="614.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1124" width="3" height="15" fill="rgb(243,97,48)"/><text x="614.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1140" width="3" height="15" fill="rgb(252,52,28)"/><text x="614.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1156" width="3" height="15" fill="rgb(207,220,22)"/><text x="614.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1172" width="3" height="15" fill="rgb(236,59,10)"/><text x="614.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1188" width="3" height="15" fill="rgb(213,41,27)"/><text x="614.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.28%)</title><rect x="611" y="1204" width="3" height="15" fill="rgb(221,73,17)"/><text x="614.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1220" width="3" height="15" fill="rgb(252,103,30)"/><text x="614.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1236" width="3" height="15" fill="rgb(208,161,11)"/><text x="614.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1252" width="3" height="15" fill="rgb(249,123,53)"/><text x="614.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1268" width="3" height="15" fill="rgb(245,100,35)"/><text x="614.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1284" width="3" height="15" fill="rgb(238,184,41)"/><text x="614.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.28%)</title><rect x="611" y="1300" width="3" height="15" fill="rgb(210,26,43)"/><text x="614.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1316" width="3" height="15" fill="rgb(221,77,21)"/><text x="614.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1332" width="3" height="15" fill="rgb(212,194,21)"/><text x="614.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1348" width="3" height="15" fill="rgb(205,54,24)"/><text x="614.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1364" width="3" height="15" fill="rgb(222,223,53)"/><text x="614.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1380" width="3" height="15" fill="rgb(208,14,36)"/><text x="614.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.28%)</title><rect x="611" y="1396" width="3" height="15" fill="rgb(251,133,35)"/><text x="614.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1412" width="3" height="15" fill="rgb(251,4,8)"/><text x="614.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1428" width="3" height="15" fill="rgb(249,116,48)"/><text x="614.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1444" width="3" height="15" fill="rgb(246,117,15)"/><text x="614.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1460" width="3" height="15" fill="rgb(232,166,15)"/><text x="614.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1476" width="3" height="15" fill="rgb(244,52,36)"/><text x="614.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.28%)</title><rect x="611" y="1492" width="3" height="15" fill="rgb(209,147,5)"/><text x="614.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1508" width="3" height="15" fill="rgb(242,84,8)"/><text x="614.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1524" width="3" height="15" fill="rgb(237,214,15)"/><text x="614.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1540" width="3" height="15" fill="rgb(232,18,47)"/><text x="614.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1556" width="3" height="15" fill="rgb(251,81,43)"/><text x="614.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1572" width="3" height="15" fill="rgb(227,39,25)"/><text x="614.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.28%)</title><rect x="611" y="1588" width="3" height="15" fill="rgb(241,118,45)"/><text x="614.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1604" width="3" height="15" fill="rgb(251,71,27)"/><text x="614.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1620" width="3" height="15" fill="rgb(235,64,33)"/><text x="614.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1636" width="3" height="15" fill="rgb(217,205,37)"/><text x="614.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1652" width="3" height="15" fill="rgb(232,114,41)"/><text x="614.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1668" width="3" height="15" fill="rgb(252,159,12)"/><text x="614.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.28%)</title><rect x="611" y="1684" width="3" height="15" fill="rgb(207,37,40)"/><text x="614.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="611" y="1700" width="3" height="15" fill="rgb(234,58,43)"/><text x="614.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="611" y="1716" width="3" height="15" fill="rgb(208,187,13)"/><text x="614.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="611" y="1732" width="3" height="15" fill="rgb(206,123,5)"/><text x="614.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="611" y="1748" width="3" height="15" fill="rgb(215,14,34)"/><text x="614.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="611" y="1764" width="3" height="15" fill="rgb(227,83,9)"/><text x="614.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:101) (1 samples, 0.28%)</title><rect x="611" y="1780" width="3" height="15" fill="rgb(211,45,54)"/><text x="614.00" y="1790.50"></text></g><g><title>&lt;dictcomp&gt; (matplotlib/cm.py:101) (1 samples, 0.28%)</title><rect x="611" y="1796" width="3" height="15" fill="rgb(244,65,31)"/><text x="614.00" y="1806.50"></text></g><g><title>_reverse_cmap_spec (matplotlib/cm.py:73) (1 samples, 0.28%)</title><rect x="611" y="1812" width="3" height="15" fill="rgb(229,60,26)"/><text x="614.00" y="1822.50"></text></g><g><title>revcmap (matplotlib/cm.py:60) (1 samples, 0.28%)</title><rect x="611" y="1828" width="3" height="15" fill="rgb(214,154,25)"/><text x="614.00" y="1838.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/cm.py:60) (1 samples, 0.28%)</title><rect x="611" y="1844" width="3" height="15" fill="rgb(209,204,34)"/><text x="614.00" y="1854.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.28%)</title><rect x="614" y="1204" width="3" height="15" fill="rgb(209,116,11)"/><text x="617.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="614" y="1220" width="3" height="15" fill="rgb(227,163,19)"/><text x="617.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="614" y="1236" width="3" height="15" fill="rgb(229,203,0)"/><text x="617.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="614" y="1252" width="3" height="15" fill="rgb(254,31,1)"/><text x="617.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="614" y="1268" width="3" height="15" fill="rgb(218,214,31)"/><text x="617.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="614" y="1284" width="3" height="15" fill="rgb(241,2,50)"/><text x="617.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="614" y="1300" width="3" height="15" fill="rgb(213,191,26)"/><text x="617.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="614" y="1316" width="3" height="15" fill="rgb(233,56,14)"/><text x="617.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="614" y="1332" width="3" height="15" fill="rgb(253,172,6)"/><text x="617.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:29) (1 samples, 0.28%)</title><rect x="614" y="1348" width="3" height="15" fill="rgb(233,131,51)"/><text x="617.00" y="1358.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.28%)</title><rect x="617" y="1380" width="4" height="15" fill="rgb(239,16,9)"/><text x="620.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.83%)</title><rect x="614" y="1108" width="10" height="15" fill="rgb(218,100,16)"/><text x="617.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="614" y="1124" width="10" height="15" fill="rgb(211,225,31)"/><text x="617.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="614" y="1140" width="10" height="15" fill="rgb(249,9,10)"/><text x="617.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="614" y="1156" width="10" height="15" fill="rgb(209,208,23)"/><text x="617.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="614" y="1172" width="10" height="15" fill="rgb(236,209,11)"/><text x="617.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="614" y="1188" width="10" height="15" fill="rgb(208,170,47)"/><text x="617.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.55%)</title><rect x="617" y="1204" width="7" height="15" fill="rgb(221,188,31)"/><text x="620.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="617" y="1220" width="7" height="15" fill="rgb(235,187,40)"/><text x="620.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="617" y="1236" width="7" height="15" fill="rgb(237,161,49)"/><text x="620.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="617" y="1252" width="7" height="15" fill="rgb(216,111,22)"/><text x="620.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="617" y="1268" width="7" height="15" fill="rgb(219,50,8)"/><text x="620.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="617" y="1284" width="7" height="15" fill="rgb(216,101,18)"/><text x="620.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.55%)</title><rect x="617" y="1300" width="7" height="15" fill="rgb(225,81,27)"/><text x="620.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.55%)</title><rect x="617" y="1316" width="7" height="15" fill="rgb(217,139,10)"/><text x="620.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.55%)</title><rect x="617" y="1332" width="7" height="15" fill="rgb(221,156,18)"/><text x="620.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.55%)</title><rect x="617" y="1348" width="7" height="15" fill="rgb(230,61,35)"/><text x="620.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.55%)</title><rect x="617" y="1364" width="7" height="15" fill="rgb(241,110,12)"/><text x="620.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:592) (1 samples, 0.28%)</title><rect x="621" y="1380" width="3" height="15" fill="rgb(213,85,11)"/><text x="624.00" y="1390.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.28%)</title><rect x="624" y="1572" width="3" height="15" fill="rgb(221,136,8)"/><text x="627.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.28%)</title><rect x="624" y="1588" width="3" height="15" fill="rgb(211,159,47)"/><text x="627.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:157) (1 samples, 0.28%)</title><rect x="624" y="1604" width="3" height="15" fill="rgb(215,222,6)"/><text x="627.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.39%)</title><rect x="614" y="676" width="17" height="15" fill="rgb(245,214,36)"/><text x="617.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="614" y="692" width="17" height="15" fill="rgb(207,129,9)"/><text x="617.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="614" y="708" width="17" height="15" fill="rgb(229,75,7)"/><text x="617.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="614" y="724" width="17" height="15" fill="rgb(240,54,42)"/><text x="617.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="614" y="740" width="17" height="15" fill="rgb(252,9,26)"/><text x="617.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="614" y="756" width="17" height="15" fill="rgb(244,24,14)"/><text x="617.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.39%)</title><rect x="614" y="772" width="17" height="15" fill="rgb(251,119,45)"/><text x="617.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="614" y="788" width="17" height="15" fill="rgb(241,122,30)"/><text x="617.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="614" y="804" width="17" height="15" fill="rgb(238,207,11)"/><text x="617.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="614" y="820" width="17" height="15" fill="rgb(210,98,27)"/><text x="617.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="614" y="836" width="17" height="15" fill="rgb(218,40,40)"/><text x="617.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="614" y="852" width="17" height="15" fill="rgb(235,212,31)"/><text x="617.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.39%)</title><rect x="614" y="868" width="17" height="15" fill="rgb(236,23,28)"/><text x="617.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="614" y="884" width="17" height="15" fill="rgb(220,22,22)"/><text x="617.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.39%)</title><rect x="614" y="900" width="17" height="15" fill="rgb(226,153,22)"/><text x="617.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="614" y="916" width="17" height="15" fill="rgb(224,86,10)"/><text x="617.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="614" y="932" width="17" height="15" fill="rgb(233,157,45)"/><text x="617.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="614" y="948" width="17" height="15" fill="rgb(211,156,39)"/><text x="617.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="614" y="964" width="17" height="15" fill="rgb(253,59,30)"/><text x="617.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="614" y="980" width="17" height="15" fill="rgb(238,38,11)"/><text x="617.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="614" y="996" width="17" height="15" fill="rgb(212,56,43)"/><text x="617.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.39%)</title><rect x="614" y="1012" width="17" height="15" fill="rgb(224,170,35)"/><text x="617.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.39%)</title><rect x="614" y="1028" width="17" height="15" fill="rgb(226,178,41)"/><text x="617.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.39%)</title><rect x="614" y="1044" width="17" height="15" fill="rgb(230,142,12)"/><text x="617.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.39%)</title><rect x="614" y="1060" width="17" height="15" fill="rgb(209,148,46)"/><text x="617.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.39%)</title><rect x="614" y="1076" width="17" height="15" fill="rgb(246,56,34)"/><text x="617.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.39%)</title><rect x="614" y="1092" width="17" height="15" fill="rgb(208,190,1)"/><text x="617.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.55%)</title><rect x="624" y="1108" width="7" height="15" fill="rgb(233,109,48)"/><text x="627.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.55%)</title><rect x="624" y="1124" width="7" height="15" fill="rgb(230,55,36)"/><text x="627.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="624" y="1140" width="7" height="15" fill="rgb(254,172,19)"/><text x="627.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="624" y="1156" width="7" height="15" fill="rgb(221,143,27)"/><text x="627.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="624" y="1172" width="7" height="15" fill="rgb(214,14,24)"/><text x="627.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="624" y="1188" width="7" height="15" fill="rgb(224,41,16)"/><text x="627.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="624" y="1204" width="7" height="15" fill="rgb(251,212,34)"/><text x="627.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="624" y="1220" width="7" height="15" fill="rgb(234,33,32)"/><text x="627.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.55%)</title><rect x="624" y="1236" width="7" height="15" fill="rgb(215,183,10)"/><text x="627.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.55%)</title><rect x="624" y="1252" width="7" height="15" fill="rgb(254,16,24)"/><text x="627.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="624" y="1268" width="7" height="15" fill="rgb(236,47,29)"/><text x="627.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="624" y="1284" width="7" height="15" fill="rgb(245,5,50)"/><text x="627.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="624" y="1300" width="7" height="15" fill="rgb(214,47,17)"/><text x="627.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="624" y="1316" width="7" height="15" fill="rgb(212,8,13)"/><text x="627.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="624" y="1332" width="7" height="15" fill="rgb(239,158,24)"/><text x="627.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="624" y="1348" width="7" height="15" fill="rgb(251,216,37)"/><text x="627.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.55%)</title><rect x="624" y="1364" width="7" height="15" fill="rgb(251,120,37)"/><text x="627.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="624" y="1380" width="7" height="15" fill="rgb(246,111,47)"/><text x="627.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="624" y="1396" width="7" height="15" fill="rgb(221,24,9)"/><text x="627.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="624" y="1412" width="7" height="15" fill="rgb(234,186,10)"/><text x="627.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="624" y="1428" width="7" height="15" fill="rgb(235,140,2)"/><text x="627.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="624" y="1444" width="7" height="15" fill="rgb(210,165,14)"/><text x="627.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.55%)</title><rect x="624" y="1460" width="7" height="15" fill="rgb(207,214,3)"/><text x="627.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.55%)</title><rect x="624" y="1476" width="7" height="15" fill="rgb(221,72,47)"/><text x="627.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.55%)</title><rect x="624" y="1492" width="7" height="15" fill="rgb(235,109,50)"/><text x="627.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.55%)</title><rect x="624" y="1508" width="7" height="15" fill="rgb(236,103,11)"/><text x="627.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.55%)</title><rect x="624" y="1524" width="7" height="15" fill="rgb(242,119,19)"/><text x="627.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.55%)</title><rect x="624" y="1540" width="7" height="15" fill="rgb(240,208,26)"/><text x="627.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.55%)</title><rect x="624" y="1556" width="7" height="15" fill="rgb(216,145,50)"/><text x="627.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:102) (1 samples, 0.28%)</title><rect x="627" y="1572" width="4" height="15" fill="rgb(251,57,42)"/><text x="630.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:4) (16 samples, 4.43%)</title><rect x="582" y="52" width="52" height="15" fill="rgb(222,29,32)"/><text x="585.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 4.43%)</title><rect x="582" y="68" width="52" height="15" fill="rgb(224,81,8)"/><text x="585.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 4.43%)</title><rect x="582" y="84" width="52" height="15" fill="rgb(229,25,33)"/><text x="585.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 4.43%)</title><rect x="582" y="100" width="52" height="15" fill="rgb(244,122,39)"/><text x="585.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 4.43%)</title><rect x="582" y="116" width="52" height="15" fill="rgb(243,69,0)"/><text x="585.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 4.43%)</title><rect x="582" y="132" width="52" height="15" fill="rgb(250,70,10)"/><text x="585.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (10 samples, 2.77%)</title><rect x="601" y="148" width="33" height="15" fill="rgb(237,150,50)"/><text x="604.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.77%)</title><rect x="601" y="164" width="33" height="15" fill="rgb(214,121,35)"/><text x="604.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.77%)</title><rect x="601" y="180" width="33" height="15" fill="rgb(218,103,41)"/><text x="604.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.77%)</title><rect x="601" y="196" width="33" height="15" fill="rgb(235,25,2)"/><text x="604.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.77%)</title><rect x="601" y="212" width="33" height="15" fill="rgb(213,179,20)"/><text x="604.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.77%)</title><rect x="601" y="228" width="33" height="15" fill="rgb(239,104,17)"/><text x="604.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.94%)</title><rect x="611" y="244" width="23" height="15" fill="rgb(208,196,46)"/><text x="614.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.94%)</title><rect x="611" y="260" width="23" height="15" fill="rgb(251,5,18)"/><text x="614.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.94%)</title><rect x="611" y="276" width="23" height="15" fill="rgb(214,100,54)"/><text x="614.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.94%)</title><rect x="611" y="292" width="23" height="15" fill="rgb(252,91,25)"/><text x="614.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.94%)</title><rect x="611" y="308" width="23" height="15" fill="rgb(231,59,15)"/><text x="614.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.94%)</title><rect x="611" y="324" width="23" height="15" fill="rgb(226,168,20)"/><text x="614.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.94%)</title><rect x="611" y="340" width="23" height="15" fill="rgb(208,46,51)"/><text x="614.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.94%)</title><rect x="611" y="356" width="23" height="15" fill="rgb(211,20,19)"/><text x="614.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.94%)</title><rect x="611" y="372" width="23" height="15" fill="rgb(244,88,44)"/><text x="614.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.94%)</title><rect x="611" y="388" width="23" height="15" fill="rgb(251,129,12)"/><text x="614.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.94%)</title><rect x="611" y="404" width="23" height="15" fill="rgb(226,36,3)"/><text x="614.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.94%)</title><rect x="611" y="420" width="23" height="15" fill="rgb(248,84,41)"/><text x="614.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.66%)</title><rect x="614" y="436" width="20" height="15" fill="rgb(250,186,37)"/><text x="617.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.66%)</title><rect x="614" y="452" width="20" height="15" fill="rgb(228,60,11)"/><text x="617.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.66%)</title><rect x="614" y="468" width="20" height="15" fill="rgb(217,85,25)"/><text x="617.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.66%)</title><rect x="614" y="484" width="20" height="15" fill="rgb(243,41,10)"/><text x="617.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.66%)</title><rect x="614" y="500" width="20" height="15" fill="rgb(251,127,22)"/><text x="617.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.66%)</title><rect x="614" y="516" width="20" height="15" fill="rgb(254,38,31)"/><text x="617.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.66%)</title><rect x="614" y="532" width="20" height="15" fill="rgb(247,177,3)"/><text x="617.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.66%)</title><rect x="614" y="548" width="20" height="15" fill="rgb(213,123,1)"/><text x="617.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.66%)</title><rect x="614" y="564" width="20" height="15" fill="rgb(246,25,24)"/><text x="617.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.66%)</title><rect x="614" y="580" width="20" height="15" fill="rgb(215,117,29)"/><text x="617.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.66%)</title><rect x="614" y="596" width="20" height="15" fill="rgb(217,22,41)"/><text x="617.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.66%)</title><rect x="614" y="612" width="20" height="15" fill="rgb(225,57,6)"/><text x="617.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.66%)</title><rect x="614" y="628" width="20" height="15" fill="rgb(225,56,39)"/><text x="617.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.66%)</title><rect x="614" y="644" width="20" height="15" fill="rgb(237,110,7)"/><text x="617.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.66%)</title><rect x="614" y="660" width="20" height="15" fill="rgb(209,110,51)"/><text x="617.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:21) (1 samples, 0.28%)</title><rect x="631" y="676" width="3" height="15" fill="rgb(212,117,7)"/><text x="634.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="631" y="692" width="3" height="15" fill="rgb(215,50,10)"/><text x="634.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="631" y="708" width="3" height="15" fill="rgb(229,205,44)"/><text x="634.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="631" y="724" width="3" height="15" fill="rgb(234,82,27)"/><text x="634.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="631" y="740" width="3" height="15" fill="rgb(215,170,27)"/><text x="634.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="631" y="756" width="3" height="15" fill="rgb(232,36,19)"/><text x="634.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_scenarios.py:290) (1 samples, 0.28%)</title><rect x="631" y="772" width="3" height="15" fill="rgb(245,68,25)"/><text x="634.00" y="782.50"></text></g><g><title>build_custom_scenarios (mlprodict/onnxrt/validate/validate_scenarios.py:55) (1 samples, 0.28%)</title><rect x="631" y="788" width="3" height="15" fill="rgb(207,64,25)"/><text x="634.00" y="798.50"></text></g><g><title>__init__ (sklearn/linear_model/_stochastic_gradient.py:952) (1 samples, 0.28%)</title><rect x="631" y="804" width="3" height="15" fill="rgb(226,34,29)"/><text x="634.00" y="814.50"></text></g><g><title>__init__ (sklearn/linear_model/_stochastic_gradient.py:467) (1 samples, 0.28%)</title><rect x="631" y="820" width="3" height="15" fill="rgb(206,146,50)"/><text x="634.00" y="830.50"></text></g><g><title>__init__ (sklearn/linear_model/_stochastic_gradient.py:81) (1 samples, 0.28%)</title><rect x="631" y="836" width="3" height="15" fill="rgb(216,207,49)"/><text x="634.00" y="846.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:18) (2 samples, 0.55%)</title><rect x="634" y="100" width="6" height="15" fill="rgb(233,188,5)"/><text x="637.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.55%)</title><rect x="634" y="116" width="6" height="15" fill="rgb(221,2,35)"/><text x="637.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.55%)</title><rect x="634" y="132" width="6" height="15" fill="rgb(246,196,10)"/><text x="637.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.55%)</title><rect x="634" y="148" width="6" height="15" fill="rgb(213,90,13)"/><text x="637.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.55%)</title><rect x="634" y="164" width="6" height="15" fill="rgb(217,146,52)"/><text x="637.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.55%)</title><rect x="634" y="180" width="6" height="15" fill="rgb(225,151,19)"/><text x="637.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (2 samples, 0.55%)</title><rect x="634" y="196" width="6" height="15" fill="rgb(238,39,21)"/><text x="637.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.55%)</title><rect x="634" y="212" width="6" height="15" fill="rgb(215,91,27)"/><text x="637.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (2 samples, 0.55%)</title><rect x="634" y="228" width="6" height="15" fill="rgb(228,66,8)"/><text x="637.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (2 samples, 0.55%)</title><rect x="634" y="244" width="6" height="15" fill="rgb(242,16,11)"/><text x="637.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.28%)</title><rect x="637" y="260" width="3" height="15" fill="rgb(224,182,42)"/><text x="640.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.28%)</title><rect x="637" y="276" width="3" height="15" fill="rgb(217,214,30)"/><text x="640.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.28%)</title><rect x="637" y="292" width="3" height="15" fill="rgb(247,197,35)"/><text x="640.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.28%)</title><rect x="637" y="308" width="3" height="15" fill="rgb(219,105,2)"/><text x="640.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.28%)</title><rect x="637" y="324" width="3" height="15" fill="rgb(226,144,46)"/><text x="640.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.28%)</title><rect x="637" y="340" width="3" height="15" fill="rgb(217,141,43)"/><text x="640.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.28%)</title><rect x="637" y="356" width="3" height="15" fill="rgb(244,55,12)"/><text x="640.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.28%)</title><rect x="637" y="372" width="3" height="15" fill="rgb(225,66,43)"/><text x="640.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="640" y="116" width="4" height="15" fill="rgb(222,130,15)"/><text x="643.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="640" y="132" width="4" height="15" fill="rgb(232,223,37)"/><text x="643.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="640" y="148" width="4" height="15" fill="rgb(245,139,33)"/><text x="643.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.28%)</title><rect x="644" y="164" width="3" height="15" fill="rgb(213,106,40)"/><text x="647.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.39%)</title><rect x="657" y="180" width="16" height="15" fill="rgb(239,181,44)"/><text x="660.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.28%)</title><rect x="670" y="196" width="3" height="15" fill="rgb(209,35,42)"/><text x="673.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.55%)</title><rect x="693" y="212" width="6" height="15" fill="rgb(213,222,26)"/><text x="696.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.28%)</title><rect x="696" y="228" width="3" height="15" fill="rgb(216,22,44)"/><text x="699.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.28%)</title><rect x="696" y="244" width="3" height="15" fill="rgb(227,27,33)"/><text x="699.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.28%)</title><rect x="696" y="260" width="3" height="15" fill="rgb(230,41,22)"/><text x="699.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.28%)</title><rect x="696" y="276" width="3" height="15" fill="rgb(208,34,33)"/><text x="699.00" y="286.50"></text></g><g><title>0x7fbe0987cd94 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="696" y="292" width="3" height="15" fill="rgb(239,26,16)"/><text x="699.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.66%)</title><rect x="689" y="196" width="20" height="15" fill="rgb(212,22,37)"/><text x="692.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.83%)</title><rect x="699" y="212" width="10" height="15" fill="rgb(243,20,20)"/><text x="702.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.55%)</title><rect x="702" y="228" width="7" height="15" fill="rgb(237,89,50)"/><text x="705.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.28%)</title><rect x="716" y="260" width="3" height="15" fill="rgb(249,109,48)"/><text x="719.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="719" y="260" width="3" height="15" fill="rgb(229,91,24)"/><text x="722.00" y="270.50"></text></g><g><title>0x7fbe0987d124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="719" y="276" width="3" height="15" fill="rgb(248,3,52)"/><text x="722.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="722" y="260" width="3" height="15" fill="rgb(237,22,11)"/><text x="725.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="722" y="276" width="3" height="15" fill="rgb(227,35,30)"/><text x="725.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="722" y="292" width="3" height="15" fill="rgb(220,95,3)"/><text x="725.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.28%)</title><rect x="732" y="356" width="3" height="15" fill="rgb(253,1,8)"/><text x="735.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.28%)</title><rect x="732" y="372" width="3" height="15" fill="rgb(243,228,53)"/><text x="735.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:45) (1 samples, 0.28%)</title><rect x="732" y="388" width="3" height="15" fill="rgb(248,221,31)"/><text x="735.00" y="398.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.28%)</title><rect x="732" y="404" width="3" height="15" fill="rgb(254,39,10)"/><text x="735.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.28%)</title><rect x="735" y="356" width="3" height="15" fill="rgb(234,139,30)"/><text x="738.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.28%)</title><rect x="735" y="372" width="3" height="15" fill="rgb(210,63,12)"/><text x="738.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.28%)</title><rect x="735" y="388" width="3" height="15" fill="rgb(233,154,31)"/><text x="738.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.28%)</title><rect x="735" y="404" width="3" height="15" fill="rgb(222,92,28)"/><text x="738.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="738" y="372" width="4" height="15" fill="rgb(242,100,51)"/><text x="741.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.28%)</title><rect x="738" y="388" width="4" height="15" fill="rgb(226,74,10)"/><text x="741.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (2 samples, 0.55%)</title><rect x="742" y="372" width="6" height="15" fill="rgb(229,16,45)"/><text x="745.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.55%)</title><rect x="742" y="388" width="6" height="15" fill="rgb(211,22,0)"/><text x="745.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.55%)</title><rect x="742" y="404" width="6" height="15" fill="rgb(206,150,54)"/><text x="745.00" y="414.50"></text></g><g><title>0x7fbe0985e6df (libc-2.29.so) (2 samples, 0.55%)</title><rect x="742" y="420" width="6" height="15" fill="rgb(224,212,35)"/><text x="745.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.28%)</title><rect x="748" y="388" width="3" height="15" fill="rgb(253,53,5)"/><text x="751.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (5 samples, 1.39%)</title><rect x="738" y="356" width="17" height="15" fill="rgb(231,211,4)"/><text x="741.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.55%)</title><rect x="748" y="372" width="7" height="15" fill="rgb(246,126,53)"/><text x="751.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.28%)</title><rect x="751" y="388" width="4" height="15" fill="rgb(243,99,5)"/><text x="754.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.28%)</title><rect x="755" y="372" width="3" height="15" fill="rgb(251,4,29)"/><text x="758.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="755" y="388" width="3" height="15" fill="rgb(230,18,46)"/><text x="758.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.28%)</title><rect x="758" y="372" width="3" height="15" fill="rgb(245,109,6)"/><text x="761.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.28%)</title><rect x="761" y="388" width="4" height="15" fill="rgb(236,225,11)"/><text x="764.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.28%)</title><rect x="765" y="388" width="3" height="15" fill="rgb(225,169,23)"/><text x="768.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.55%)</title><rect x="768" y="404" width="6" height="15" fill="rgb(231,149,48)"/><text x="771.00" y="414.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.83%)</title><rect x="774" y="404" width="10" height="15" fill="rgb(241,214,1)"/><text x="777.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 1.66%)</title><rect x="768" y="388" width="19" height="15" fill="rgb(233,109,41)"/><text x="771.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.28%)</title><rect x="784" y="404" width="3" height="15" fill="rgb(215,188,48)"/><text x="787.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.28%)</title><rect x="787" y="388" width="4" height="15" fill="rgb(247,49,39)"/><text x="790.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.28%)</title><rect x="791" y="388" width="3" height="15" fill="rgb(249,44,43)"/><text x="794.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.28%)</title><rect x="794" y="388" width="3" height="15" fill="rgb(250,115,23)"/><text x="797.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (23 samples, 6.37%)</title><rect x="725" y="260" width="76" height="15" fill="rgb(205,81,2)"/><text x="728.00" y="270.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c:108) (23 samples, 6.37%)</title><rect x="725" y="276" width="76" height="15" fill="rgb(208,97,15)"/><text x="728.00" y="286.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py:38) (22 samples, 6.09%)</title><rect x="729" y="292" width="72" height="15" fill="rgb(205,78,44)"/><text x="732.00" y="302.50">_sum (nu..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (21 samples, 5.82%)</title><rect x="732" y="308" width="69" height="15" fill="rgb(252,69,44)"/><text x="735.00" y="318.50">ufunc_r..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (21 samples, 5.82%)</title><rect x="732" y="324" width="69" height="15" fill="rgb(242,189,17)"/><text x="735.00" y="334.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (21 samples, 5.82%)</title><rect x="732" y="340" width="69" height="15" fill="rgb(248,152,37)"/><text x="735.00" y="350.50">PyUFunc..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 3.88%)</title><rect x="755" y="356" width="46" height="15" fill="rgb(240,20,37)"/><text x="758.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 3.32%)</title><rect x="761" y="372" width="40" height="15" fill="rgb(245,91,0)"/><text x="764.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.28%)</title><rect x="797" y="388" width="4" height="15" fill="rgb(213,125,27)"/><text x="800.00" y="398.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h:321) (1 samples, 0.28%)</title><rect x="801" y="372" width="3" height="15" fill="rgb(242,189,22)"/><text x="804.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (31 samples, 8.59%)</title><rect x="709" y="244" width="101" height="15" fill="rgb(238,96,46)"/><text x="712.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.83%)</title><rect x="801" y="260" width="9" height="15" fill="rgb(223,163,10)"/><text x="804.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.83%)</title><rect x="801" y="276" width="9" height="15" fill="rgb(208,197,29)"/><text x="804.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.83%)</title><rect x="801" y="292" width="9" height="15" fill="rgb(245,199,2)"/><text x="804.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 0.83%)</title><rect x="801" y="308" width="9" height="15" fill="rgb(218,160,23)"/><text x="804.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (3 samples, 0.83%)</title><rect x="801" y="324" width="9" height="15" fill="rgb(216,129,2)"/><text x="804.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:195) (3 samples, 0.83%)</title><rect x="801" y="340" width="9" height="15" fill="rgb(247,8,26)"/><text x="804.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src:1057) (3 samples, 0.83%)</title><rect x="801" y="356" width="9" height="15" fill="rgb(253,204,30)"/><text x="804.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.55%)</title><rect x="804" y="372" width="6" height="15" fill="rgb(211,42,23)"/><text x="807.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="810" y="276" width="4" height="15" fill="rgb(246,116,49)"/><text x="813.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1054) (1 samples, 0.28%)</title><rect x="810" y="292" width="4" height="15" fill="rgb(232,83,9)"/><text x="813.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.28%)</title><rect x="814" y="324" width="3" height="15" fill="rgb(251,194,28)"/><text x="817.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.28%)</title><rect x="817" y="340" width="3" height="15" fill="rgb(221,207,18)"/><text x="820.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.83%)</title><rect x="814" y="308" width="9" height="15" fill="rgb(241,185,34)"/><text x="817.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.55%)</title><rect x="817" y="324" width="6" height="15" fill="rgb(215,42,34)"/><text x="820.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.28%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(234,63,16)"/><text x="823.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.28%)</title><rect x="823" y="356" width="4" height="15" fill="rgb(213,22,36)"/><text x="826.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.28%)</title><rect x="827" y="356" width="3" height="15" fill="rgb(210,73,9)"/><text x="830.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.83%)</title><rect x="823" y="308" width="10" height="15" fill="rgb(248,217,41)"/><text x="826.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.83%)</title><rect x="823" y="324" width="10" height="15" fill="rgb(227,176,26)"/><text x="826.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.83%)</title><rect x="823" y="340" width="10" height="15" fill="rgb(211,172,6)"/><text x="826.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.28%)</title><rect x="830" y="356" width="3" height="15" fill="rgb(222,14,27)"/><text x="833.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.28%)</title><rect x="830" y="372" width="3" height="15" fill="rgb(210,102,52)"/><text x="833.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 2.22%)</title><rect x="833" y="308" width="26" height="15" fill="rgb(240,95,53)"/><text x="836.00" y="318.50">i..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (8 samples, 2.22%)</title><rect x="833" y="324" width="26" height="15" fill="rgb(214,58,28)"/><text x="836.00" y="334.50">D..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (8 samples, 2.22%)</title><rect x="833" y="340" width="26" height="15" fill="rgb(244,223,23)"/><text x="836.00" y="350.50">r..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (8 samples, 2.22%)</title><rect x="833" y="356" width="26" height="15" fill="rgb(229,10,43)"/><text x="836.00" y="366.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (8 samples, 2.22%)</title><rect x="833" y="372" width="26" height="15" fill="rgb(213,8,7)"/><text x="836.00" y="382.50">_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 4.16%)</title><rect x="814" y="276" width="49" height="15" fill="rgb(228,27,50)"/><text x="817.00" y="286.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 4.16%)</title><rect x="814" y="292" width="49" height="15" fill="rgb(213,0,53)"/><text x="817.00" y="302.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.28%)</title><rect x="859" y="308" width="4" height="15" fill="rgb(241,144,28)"/><text x="862.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.28%)</title><rect x="859" y="324" width="4" height="15" fill="rgb(237,201,18)"/><text x="862.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (48 samples, 13.30%)</title><rect x="709" y="196" width="157" height="15" fill="rgb(212,43,42)"/><text x="712.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (48 samples, 13.30%)</title><rect x="709" y="212" width="157" height="15" fill="rgb(213,178,31)"/><text x="712.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (48 samples, 13.30%)</title><rect x="709" y="228" width="157" height="15" fill="rgb(217,147,34)"/><text x="712.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (17 samples, 4.71%)</title><rect x="810" y="244" width="56" height="15" fill="rgb(218,146,29)"/><text x="813.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 4.71%)</title><rect x="810" y="260" width="56" height="15" fill="rgb(210,161,44)"/><text x="813.00" y="270.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3281) (1 samples, 0.28%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(208,106,34)"/><text x="866.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.28%)</title><rect x="869" y="244" width="3" height="15" fill="rgb(205,136,54)"/><text x="872.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.28%)</title><rect x="882" y="308" width="4" height="15" fill="rgb(238,142,11)"/><text x="885.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.28%)</title><rect x="882" y="324" width="4" height="15" fill="rgb(228,152,7)"/><text x="885.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.28%)</title><rect x="882" y="340" width="4" height="15" fill="rgb(231,40,10)"/><text x="885.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.28%)</title><rect x="882" y="356" width="4" height="15" fill="rgb(223,38,7)"/><text x="885.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.39%)</title><rect x="882" y="276" width="17" height="15" fill="rgb(235,115,52)"/><text x="885.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.39%)</title><rect x="882" y="292" width="17" height="15" fill="rgb(237,30,35)"/><text x="885.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 1.11%)</title><rect x="886" y="308" width="13" height="15" fill="rgb(226,220,5)"/><text x="889.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (4 samples, 1.11%)</title><rect x="886" y="324" width="13" height="15" fill="rgb(209,174,28)"/><text x="889.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:36) (4 samples, 1.11%)</title><rect x="886" y="340" width="13" height="15" fill="rgb(220,55,43)"/><text x="889.00" y="350.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.11%)</title><rect x="886" y="356" width="13" height="15" fill="rgb(226,159,54)"/><text x="889.00" y="366.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.11%)</title><rect x="886" y="372" width="13" height="15" fill="rgb(225,42,46)"/><text x="889.00" y="382.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.55%)</title><rect x="892" y="388" width="7" height="15" fill="rgb(227,85,8)"/><text x="895.00" y="398.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="899" y="276" width="3" height="15" fill="rgb(214,109,2)"/><text x="902.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (16 samples, 4.43%)</title><rect x="866" y="228" width="52" height="15" fill="rgb(237,177,48)"/><text x="869.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (14 samples, 3.88%)</title><rect x="872" y="244" width="46" height="15" fill="rgb(209,34,53)"/><text x="875.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (13 samples, 3.60%)</title><rect x="876" y="260" width="42" height="15" fill="rgb(223,62,42)"/><text x="879.00" y="270.50">dot..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.39%)</title><rect x="902" y="276" width="16" height="15" fill="rgb(243,48,15)"/><text x="905.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.28%)</title><rect x="918" y="228" width="3" height="15" fill="rgb(230,54,4)"/><text x="921.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="928" y="260" width="3" height="15" fill="rgb(217,65,13)"/><text x="931.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.28%)</title><rect x="928" y="276" width="3" height="15" fill="rgb(217,174,49)"/><text x="931.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1891) (1 samples, 0.28%)</title><rect x="928" y="292" width="3" height="15" fill="rgb(229,139,46)"/><text x="931.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.28%)</title><rect x="931" y="292" width="4" height="15" fill="rgb(230,225,39)"/><text x="934.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.28%)</title><rect x="931" y="308" width="4" height="15" fill="rgb(221,161,9)"/><text x="934.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.28%)</title><rect x="931" y="324" width="4" height="15" fill="rgb(244,144,23)"/><text x="934.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.28%)</title><rect x="931" y="340" width="4" height="15" fill="rgb(213,95,37)"/><text x="934.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.28%)</title><rect x="931" y="356" width="4" height="15" fill="rgb(246,93,10)"/><text x="934.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:324) (1 samples, 0.28%)</title><rect x="935" y="308" width="3" height="15" fill="rgb(242,136,49)"/><text x="938.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.28%)</title><rect x="935" y="324" width="3" height="15" fill="rgb(228,119,2)"/><text x="938.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.28%)</title><rect x="938" y="340" width="3" height="15" fill="rgb(221,159,10)"/><text x="941.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.28%)</title><rect x="941" y="340" width="3" height="15" fill="rgb(230,45,2)"/><text x="944.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.11%)</title><rect x="935" y="292" width="13" height="15" fill="rgb(220,29,20)"/><text x="938.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.83%)</title><rect x="938" y="308" width="10" height="15" fill="rgb(213,49,12)"/><text x="941.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.83%)</title><rect x="938" y="324" width="10" height="15" fill="rgb(234,160,50)"/><text x="941.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.28%)</title><rect x="944" y="340" width="4" height="15" fill="rgb(214,31,8)"/><text x="947.00" y="350.50"></text></g><g><title>0x7fbe0987cd6f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="944" y="356" width="4" height="15" fill="rgb(230,78,13)"/><text x="947.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.28%)</title><rect x="948" y="292" width="3" height="15" fill="rgb(238,35,35)"/><text x="951.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.28%)</title><rect x="948" y="308" width="3" height="15" fill="rgb(254,21,18)"/><text x="951.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.28%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(228,131,40)"/><text x="951.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.28%)</title><rect x="948" y="340" width="3" height="15" fill="rgb(206,214,54)"/><text x="951.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.28%)</title><rect x="948" y="356" width="3" height="15" fill="rgb(238,96,48)"/><text x="951.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(221,97,3)"/><text x="954.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="951" y="324" width="3" height="15" fill="rgb(212,120,48)"/><text x="954.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.22%)</title><rect x="931" y="260" width="26" height="15" fill="rgb(237,23,52)"/><text x="934.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.22%)</title><rect x="931" y="276" width="26" height="15" fill="rgb(249,58,36)"/><text x="934.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.55%)</title><rect x="951" y="292" width="6" height="15" fill="rgb(223,225,51)"/><text x="954.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="954" y="308" width="3" height="15" fill="rgb(215,84,9)"/><text x="957.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (12 samples, 3.32%)</title><rect x="921" y="228" width="40" height="15" fill="rgb(229,132,35)"/><text x="924.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.77%)</title><rect x="928" y="244" width="33" height="15" fill="rgb(225,71,18)"/><text x="931.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.28%)</title><rect x="957" y="260" width="4" height="15" fill="rgb(208,118,4)"/><text x="960.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.28%)</title><rect x="961" y="228" width="3" height="15" fill="rgb(230,183,3)"/><text x="964.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="964" y="260" width="3" height="15" fill="rgb(246,94,52)"/><text x="967.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.28%)</title><rect x="964" y="276" width="3" height="15" fill="rgb(250,46,46)"/><text x="967.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.28%)</title><rect x="964" y="292" width="3" height="15" fill="rgb(229,207,49)"/><text x="967.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.28%)</title><rect x="967" y="260" width="3" height="15" fill="rgb(247,180,19)"/><text x="970.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.28%)</title><rect x="967" y="276" width="3" height="15" fill="rgb(252,173,18)"/><text x="970.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="970" y="276" width="4" height="15" fill="rgb(231,139,29)"/><text x="973.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.28%)</title><rect x="970" y="292" width="4" height="15" fill="rgb(240,128,18)"/><text x="973.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.55%)</title><rect x="974" y="276" width="6" height="15" fill="rgb(235,115,16)"/><text x="977.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.55%)</title><rect x="974" y="292" width="6" height="15" fill="rgb(237,106,46)"/><text x="977.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.55%)</title><rect x="974" y="308" width="6" height="15" fill="rgb(243,224,43)"/><text x="977.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.55%)</title><rect x="974" y="324" width="6" height="15" fill="rgb(251,197,22)"/><text x="977.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.28%)</title><rect x="977" y="340" width="3" height="15" fill="rgb(221,29,11)"/><text x="980.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.28%)</title><rect x="977" y="356" width="3" height="15" fill="rgb(228,227,3)"/><text x="980.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.28%)</title><rect x="977" y="372" width="3" height="15" fill="rgb(211,103,15)"/><text x="980.00" y="382.50"></text></g><g><title>0x7fbdf4b459a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="980" y="308" width="4" height="15" fill="rgb(220,89,22)"/><text x="983.00" y="318.50"></text></g><g><title>0x7fbdf4b459da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="984" y="308" width="3" height="15" fill="rgb(221,171,38)"/><text x="987.00" y="318.50"></text></g><g><title>0x7fbdf4b66254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="987" y="324" width="3" height="15" fill="rgb(214,48,37)"/><text x="990.00" y="334.50"></text></g><g><title>0x7fbe099a81b0 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1006" y="356" width="7" height="15" fill="rgb(236,111,2)"/><text x="1009.00" y="366.50"></text></g><g><title>0x7fbe09a2eba0 (libm-2.29.so) (3 samples, 0.83%)</title><rect x="1013" y="356" width="10" height="15" fill="rgb(205,63,23)"/><text x="1016.00" y="366.50"></text></g><g><title>0x7fbe09a2ebb4 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1023" y="356" width="3" height="15" fill="rgb(205,220,18)"/><text x="1026.00" y="366.50"></text></g><g><title>0x7fbe09a2ebd3 (libm-2.29.so) (4 samples, 1.11%)</title><rect x="1026" y="356" width="13" height="15" fill="rgb(248,61,15)"/><text x="1029.00" y="366.50"></text></g><g><title>0x7fbe09a2ebe7 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1039" y="356" width="3" height="15" fill="rgb(235,191,43)"/><text x="1042.00" y="366.50"></text></g><g><title>0x7fbe09a2ebf9 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1042" y="356" width="4" height="15" fill="rgb(215,174,30)"/><text x="1045.00" y="366.50"></text></g><g><title>0x7fbe09a2ec18 (libm-2.29.so) (2 samples, 0.55%)</title><rect x="1046" y="356" width="6" height="15" fill="rgb(230,113,31)"/><text x="1049.00" y="366.50"></text></g><g><title>0x7fbe09a2ec3e (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1052" y="356" width="3" height="15" fill="rgb(243,4,15)"/><text x="1055.00" y="366.50"></text></g><g><title>0x7fbe09a2ec56 (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1055" y="356" width="4" height="15" fill="rgb(254,171,46)"/><text x="1058.00" y="366.50"></text></g><g><title>0x7fbe09a2ec6a (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1059" y="356" width="3" height="15" fill="rgb(215,170,33)"/><text x="1062.00" y="366.50"></text></g><g><title>0x7fbdf4b66265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 6.37%)</title><rect x="990" y="324" width="75" height="15" fill="rgb(226,52,42)"/><text x="993.00" y="334.50">0x7fbdf4..</text></g><g><title>exp (libm-2.29.so) (22 samples, 6.09%)</title><rect x="993" y="340" width="72" height="15" fill="rgb(238,118,29)"/><text x="996.00" y="350.50">exp (lib..</text></g><g><title>0x7fbe09a2ec7b (libm-2.29.so) (1 samples, 0.28%)</title><rect x="1062" y="356" width="3" height="15" fill="rgb(242,20,7)"/><text x="1065.00" y="366.50"></text></g><g><title>0x7fbdf4b66275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="1065" y="324" width="4" height="15" fill="rgb(232,6,51)"/><text x="1068.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (43 samples, 11.91%)</title><rect x="964" y="228" width="141" height="15" fill="rgb(246,99,14)"/><text x="967.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (43 samples, 11.91%)</title><rect x="964" y="244" width="141" height="15" fill="rgb(253,28,21)"/><text x="967.00" y="254.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (41 samples, 11.36%)</title><rect x="970" y="260" width="135" height="15" fill="rgb(249,153,31)"/><text x="973.00" y="270.50">PyUFunc_GenericFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (38 samples, 10.53%)</title><rect x="980" y="276" width="125" height="15" fill="rgb(247,211,38)"/><text x="983.00" y="286.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (38 samples, 10.53%)</title><rect x="980" y="292" width="125" height="15" fill="rgb(229,227,24)"/><text x="983.00" y="302.50">trivial_two_ope..</text></g><g><title>0x7fbdf4b459dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (36 samples, 9.97%)</title><rect x="987" y="308" width="118" height="15" fill="rgb(242,211,4)"/><text x="990.00" y="318.50">0x7fbdf4b459dd..</text></g><g><title>0x7fbdf4b66279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.05%)</title><rect x="1069" y="324" width="36" height="15" fill="rgb(235,147,20)"/><text x="1072.00" y="334.50">0x7..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.28%)</title><rect x="1108" y="244" width="3" height="15" fill="rgb(225,138,8)"/><text x="1111.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.28%)</title><rect x="1111" y="260" width="3" height="15" fill="rgb(209,16,38)"/><text x="1114.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.28%)</title><rect x="1124" y="356" width="3" height="15" fill="rgb(251,184,40)"/><text x="1127.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.28%)</title><rect x="1124" y="372" width="3" height="15" fill="rgb(228,15,3)"/><text x="1127.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1025) (1 samples, 0.28%)</title><rect x="1127" y="356" width="4" height="15" fill="rgb(241,176,41)"/><text x="1130.00" y="366.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (3 samples, 0.83%)</title><rect x="1124" y="324" width="10" height="15" fill="rgb(218,147,26)"/><text x="1127.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.83%)</title><rect x="1124" y="340" width="10" height="15" fill="rgb(210,23,31)"/><text x="1127.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.28%)</title><rect x="1131" y="356" width="3" height="15" fill="rgb(251,69,54)"/><text x="1134.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.28%)</title><rect x="1131" y="372" width="3" height="15" fill="rgb(235,47,22)"/><text x="1134.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.28%)</title><rect x="1131" y="388" width="3" height="15" fill="rgb(239,28,9)"/><text x="1134.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.28%)</title><rect x="1131" y="404" width="3" height="15" fill="rgb(219,219,32)"/><text x="1134.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1131" y="420" width="3" height="15" fill="rgb(247,133,44)"/><text x="1134.00" y="430.50"></text></g><g><title>0x7fbe0985e238 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1131" y="436" width="3" height="15" fill="rgb(205,127,8)"/><text x="1134.00" y="446.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3094) (1 samples, 0.28%)</title><rect x="1134" y="340" width="3" height="15" fill="rgb(208,104,2)"/><text x="1137.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (12 samples, 3.32%)</title><rect x="1105" y="228" width="39" height="15" fill="rgb(229,165,35)"/><text x="1108.00" y="238.50">_ru..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (10 samples, 2.77%)</title><rect x="1111" y="244" width="33" height="15" fill="rgb(215,21,6)"/><text x="1114.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.49%)</title><rect x="1114" y="260" width="30" height="15" fill="rgb(240,35,24)"/><text x="1117.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (9 samples, 2.49%)</title><rect x="1114" y="276" width="30" height="15" fill="rgb(245,216,21)"/><text x="1117.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 2.22%)</title><rect x="1118" y="292" width="26" height="15" fill="rgb(207,97,52)"/><text x="1121.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c:302) (6 samples, 1.66%)</title><rect x="1124" y="308" width="20" height="15" fill="rgb(222,126,12)"/><text x="1127.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (3 samples, 0.83%)</title><rect x="1134" y="324" width="10" height="15" fill="rgb(248,194,49)"/><text x="1137.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3127) (2 samples, 0.55%)</title><rect x="1137" y="340" width="7" height="15" fill="rgb(212,193,31)"/><text x="1140.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (86 samples, 23.82%)</title><rect x="866" y="196" width="281" height="15" fill="rgb(226,6,24)"/><text x="869.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (86 samples, 23.82%)</title><rect x="866" y="212" width="281" height="15" fill="rgb(244,181,2)"/><text x="869.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.28%)</title><rect x="1144" y="228" width="3" height="15" fill="rgb(228,181,43)"/><text x="1147.00" y="238.50"></text></g><g><title>0x7fbe0987d124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1144" y="244" width="3" height="15" fill="rgb(214,25,0)"/><text x="1147.00" y="254.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.28%)</title><rect x="1150" y="212" width="4" height="15" fill="rgb(220,164,11)"/><text x="1153.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.28%)</title><rect x="1150" y="228" width="4" height="15" fill="rgb(250,129,39)"/><text x="1153.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (148 samples, 41.00%)</title><rect x="673" y="180" width="484" height="15" fill="rgb(220,41,15)"/><text x="676.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.83%)</title><rect x="1147" y="196" width="10" height="15" fill="rgb(206,168,51)"/><text x="1150.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.28%)</title><rect x="1154" y="212" width="3" height="15" fill="rgb(254,1,10)"/><text x="1157.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.55%)</title><rect x="1157" y="180" width="6" height="15" fill="rgb(218,62,51)"/><text x="1160.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.28%)</title><rect x="1163" y="180" width="4" height="15" fill="rgb(230,220,43)"/><text x="1166.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (163 samples, 45.15%)</title><rect x="647" y="164" width="533" height="15" fill="rgb(235,114,25)"/><text x="650.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.11%)</title><rect x="1167" y="180" width="13" height="15" fill="rgb(252,33,48)"/><text x="1170.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (165 samples, 45.71%)</title><rect x="644" y="132" width="539" height="15" fill="rgb(230,147,12)"/><text x="647.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (165 samples, 45.71%)</title><rect x="644" y="148" width="539" height="15" fill="rgb(233,87,45)"/><text x="647.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.28%)</title><rect x="1180" y="164" width="3" height="15" fill="rgb(231,120,29)"/><text x="1183.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.28%)</title><rect x="1180" y="180" width="3" height="15" fill="rgb(247,188,4)"/><text x="1183.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.28%)</title><rect x="1180" y="196" width="3" height="15" fill="rgb(252,40,17)"/><text x="1183.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.28%)</title><rect x="1180" y="212" width="3" height="15" fill="rgb(231,18,32)"/><text x="1183.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1180" y="228" width="3" height="15" fill="rgb(224,216,12)"/><text x="1183.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:45) (169 samples, 46.81%)</title><rect x="634" y="52" width="552" height="15" fill="rgb(207,142,8)"/><text x="637.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:44) (169 samples, 46.81%)</title><rect x="634" y="68" width="552" height="15" fill="rgb(210,213,51)"/><text x="637.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_10..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:29) (169 samples, 46.81%)</title><rect x="634" y="84" width="552" height="15" fill="rgb(226,110,3)"/><text x="637.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:23) (167 samples, 46.26%)</title><rect x="640" y="100" width="546" height="15" fill="rgb(241,176,14)"/><text x="643.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (166 samples, 45.98%)</title><rect x="644" y="116" width="542" height="15" fill="rgb(218,210,9)"/><text x="647.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="1183" y="132" width="3" height="15" fill="rgb(245,155,34)"/><text x="1186.00" y="142.50"></text></g><g><title>all (361 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,50,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:52) (1 samples, 0.28%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(242,129,30)"/><text x="1189.00" y="62.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:51) (1 samples, 0.28%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(238,11,18)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_double_.py:28) (1 samples, 0.28%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(229,5,34)"/><text x="1189.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(206,122,5)"/><text x="1189.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.28%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(212,88,9)"/><text x="1189.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.28%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(218,126,16)"/><text x="1189.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.28%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(232,83,7)"/><text x="1189.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.28%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(254,72,29)"/><text x="1189.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.28%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(216,170,33)"/><text x="1189.00" y="190.50"></text></g><g><title>convert_sklearn_linear_classifier (skl2onnx/operator_converters/linear_classifier.py:112) (1 samples, 0.28%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(218,55,52)"/><text x="1189.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:404) (1 samples, 0.28%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(251,179,4)"/><text x="1189.00" y="222.50"></text></g></g></svg>