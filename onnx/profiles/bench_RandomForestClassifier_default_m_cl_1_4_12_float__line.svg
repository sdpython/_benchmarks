<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(218,205,48)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(218,27,20)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(214,177,45)"/><text x="13.00" y="158.50"></text></g><g><title>clone (sklearn/base.py:73) (1 samples, 0.31%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(245,199,47)"/><text x="13.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.31%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(224,225,17)"/><text x="13.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:160) (1 samples, 0.31%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(254,55,18)"/><text x="13.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/base.py:160) (1 samples, 0.31%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(218,61,19)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:31) (2 samples, 0.62%)</title><rect x="10" y="52" width="7" height="15" fill="rgb(234,134,38)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:11) (2 samples, 0.62%)</title><rect x="10" y="68" width="7" height="15" fill="rgb(220,4,46)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:39) (2 samples, 0.62%)</title><rect x="10" y="84" width="7" height="15" fill="rgb(242,143,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.62%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(215,110,10)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.31%)</title><rect x="13" y="116" width="4" height="15" fill="rgb(220,36,42)"/><text x="16.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.31%)</title><rect x="13" y="132" width="4" height="15" fill="rgb(247,90,11)"/><text x="16.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.31%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(236,68,25)"/><text x="16.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.31%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(246,38,31)"/><text x="16.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.31%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(254,206,40)"/><text x="16.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.31%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(253,128,25)"/><text x="16.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(254,196,51)"/><text x="16.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="13" y="228" width="4" height="15" fill="rgb(232,27,18)"/><text x="16.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (1 samples, 0.31%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(250,88,20)"/><text x="16.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (1 samples, 0.31%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(241,78,30)"/><text x="16.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.31%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(241,207,3)"/><text x="16.00" y="286.50"></text></g><g><title>0x7ff8df72ea66 (?) (1 samples, 0.31%)</title><rect x="13" y="292" width="4" height="15" fill="rgb(218,214,31)"/><text x="16.00" y="302.50"></text></g><g><title>0x7ff8df720579 (?) (1 samples, 0.31%)</title><rect x="13" y="308" width="4" height="15" fill="rgb(232,47,24)"/><text x="16.00" y="318.50"></text></g><g><title>0x7ff8df061713 (?) (1 samples, 0.31%)</title><rect x="13" y="324" width="4" height="15" fill="rgb(223,42,45)"/><text x="16.00" y="334.50"></text></g><g><title>0x7ff8df05a884 (?) (1 samples, 0.31%)</title><rect x="13" y="340" width="4" height="15" fill="rgb(214,3,25)"/><text x="16.00" y="350.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.31%)</title><rect x="13" y="356" width="4" height="15" fill="rgb(229,227,29)"/><text x="16.00" y="366.50"></text></g><g><title>0x7ff8dee3cdcf (?) (1 samples, 0.31%)</title><rect x="13" y="372" width="4" height="15" fill="rgb(214,179,22)"/><text x="16.00" y="382.50"></text></g><g><title>array_assign_subscript (mapping.c:1836) (1 samples, 0.31%)</title><rect x="13" y="388" width="4" height="15" fill="rgb(251,193,45)"/><text x="16.00" y="398.50"></text></g><g><title>UINT_setitem (arraytypes.c.src:216) (1 samples, 0.31%)</title><rect x="13" y="404" width="4" height="15" fill="rgb(229,91,1)"/><text x="16.00" y="414.50"></text></g><g><title>MyPyLong_AsUnsignedLong (arraytypes.c.src:144) (1 samples, 0.31%)</title><rect x="13" y="420" width="4" height="15" fill="rgb(232,162,39)"/><text x="16.00" y="430.50"></text></g><g><title>0x7ff8ed120487 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="17" y="548" width="3" height="15" fill="rgb(209,63,0)"/><text x="20.00" y="558.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (2 samples, 0.62%)</title><rect x="17" y="100" width="7" height="15" fill="rgb(223,223,35)"/><text x="20.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (2 samples, 0.62%)</title><rect x="17" y="116" width="7" height="15" fill="rgb(240,45,28)"/><text x="20.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (2 samples, 0.62%)</title><rect x="17" y="132" width="7" height="15" fill="rgb(223,66,50)"/><text x="20.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="17" y="148" width="7" height="15" fill="rgb(208,220,50)"/><text x="20.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="17" y="164" width="7" height="15" fill="rgb(217,180,42)"/><text x="20.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="17" y="180" width="7" height="15" fill="rgb(249,84,8)"/><text x="20.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="17" y="196" width="7" height="15" fill="rgb(243,85,34)"/><text x="20.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="17" y="212" width="7" height="15" fill="rgb(254,0,43)"/><text x="20.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (2 samples, 0.62%)</title><rect x="17" y="228" width="7" height="15" fill="rgb(227,54,29)"/><text x="20.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="17" y="244" width="7" height="15" fill="rgb(244,79,1)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="17" y="260" width="7" height="15" fill="rgb(225,80,53)"/><text x="20.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="17" y="276" width="7" height="15" fill="rgb(211,226,0)"/><text x="20.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="17" y="292" width="7" height="15" fill="rgb(238,0,5)"/><text x="20.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="17" y="308" width="7" height="15" fill="rgb(222,130,44)"/><text x="20.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:33) (2 samples, 0.62%)</title><rect x="17" y="324" width="7" height="15" fill="rgb(236,177,35)"/><text x="20.00" y="334.50"></text></g><g><title>_load_lib (lightgbm/basic.py:28) (2 samples, 0.62%)</title><rect x="17" y="340" width="7" height="15" fill="rgb(233,193,15)"/><text x="20.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (2 samples, 0.62%)</title><rect x="17" y="356" width="7" height="15" fill="rgb(205,160,53)"/><text x="20.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (2 samples, 0.62%)</title><rect x="17" y="372" width="7" height="15" fill="rgb(248,99,30)"/><text x="20.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (2 samples, 0.62%)</title><rect x="17" y="388" width="7" height="15" fill="rgb(249,64,51)"/><text x="20.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="404" width="7" height="15" fill="rgb(229,24,35)"/><text x="20.00" y="414.50"></text></g><g><title>0x7ff8ed0db995 (libdl-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="420" width="7" height="15" fill="rgb(214,155,40)"/><text x="20.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="436" width="7" height="15" fill="rgb(254,124,45)"/><text x="20.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="452" width="7" height="15" fill="rgb(238,47,26)"/><text x="20.00" y="462.50"></text></g><g><title>0x7ff8ed0db258 (libdl-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="468" width="7" height="15" fill="rgb(209,42,41)"/><text x="20.00" y="478.50"></text></g><g><title>0x7ff8ed128d7a (ld-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="484" width="7" height="15" fill="rgb(253,134,35)"/><text x="20.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="500" width="7" height="15" fill="rgb(216,227,10)"/><text x="20.00" y="510.50"></text></g><g><title>0x7ff8ed129345 (ld-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="516" width="7" height="15" fill="rgb(242,183,0)"/><text x="20.00" y="526.50"></text></g><g><title>0x7ff8ed121fec (ld-2.29.so) (2 samples, 0.62%)</title><rect x="17" y="532" width="7" height="15" fill="rgb(219,32,30)"/><text x="20.00" y="542.50"></text></g><g><title>0x7ff8ed120491 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="548" width="4" height="15" fill="rgb(243,140,23)"/><text x="23.00" y="558.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.31%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(219,40,23)"/><text x="27.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:171) (1 samples, 0.31%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(233,189,24)"/><text x="27.00" y="222.50"></text></g><g><title>0x7ff8c6885e5a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="24" y="228" width="4" height="15" fill="rgb(215,2,12)"/><text x="27.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1527) (1 samples, 0.31%)</title><rect x="24" y="244" width="4" height="15" fill="rgb(227,116,24)"/><text x="27.00" y="254.50"></text></g><g><title>_get_field_view (mapping.c:1429) (1 samples, 0.31%)</title><rect x="24" y="260" width="4" height="15" fill="rgb(217,229,12)"/><text x="27.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="24" y="276" width="4" height="15" fill="rgb(208,51,15)"/><text x="27.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.31%)</title><rect x="24" y="292" width="4" height="15" fill="rgb(241,131,39)"/><text x="27.00" y="302.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:28) (5 samples, 1.54%)</title><rect x="17" y="84" width="18" height="15" fill="rgb(244,214,16)"/><text x="20.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.93%)</title><rect x="24" y="100" width="11" height="15" fill="rgb(240,34,48)"/><text x="27.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.93%)</title><rect x="24" y="116" width="11" height="15" fill="rgb(251,32,10)"/><text x="27.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.93%)</title><rect x="24" y="132" width="11" height="15" fill="rgb(239,209,16)"/><text x="27.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.93%)</title><rect x="24" y="148" width="11" height="15" fill="rgb(248,108,43)"/><text x="27.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.93%)</title><rect x="24" y="164" width="11" height="15" fill="rgb(225,87,46)"/><text x="27.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.93%)</title><rect x="24" y="180" width="11" height="15" fill="rgb(219,104,13)"/><text x="27.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (2 samples, 0.62%)</title><rect x="28" y="196" width="7" height="15" fill="rgb(219,77,25)"/><text x="31.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.62%)</title><rect x="28" y="212" width="7" height="15" fill="rgb(239,91,26)"/><text x="31.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.62%)</title><rect x="28" y="228" width="7" height="15" fill="rgb(233,19,23)"/><text x="31.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="28" y="244" width="7" height="15" fill="rgb(246,119,35)"/><text x="31.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.62%)</title><rect x="28" y="260" width="7" height="15" fill="rgb(228,41,4)"/><text x="31.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (2 samples, 0.62%)</title><rect x="28" y="276" width="7" height="15" fill="rgb(219,228,48)"/><text x="31.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (2 samples, 0.62%)</title><rect x="28" y="292" width="7" height="15" fill="rgb(222,92,3)"/><text x="31.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:205) (2 samples, 0.62%)</title><rect x="28" y="308" width="7" height="15" fill="rgb(210,69,43)"/><text x="31.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.31%)</title><rect x="35" y="148" width="4" height="15" fill="rgb(239,165,48)"/><text x="38.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.31%)</title><rect x="35" y="164" width="4" height="15" fill="rgb(223,93,21)"/><text x="38.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.31%)</title><rect x="35" y="180" width="4" height="15" fill="rgb(249,176,39)"/><text x="38.00" y="190.50"></text></g><g><title>parse (distutils/version.py:314) (1 samples, 0.31%)</title><rect x="35" y="196" width="4" height="15" fill="rgb(223,82,23)"/><text x="38.00" y="206.50"></text></g><g><title>0x7ff8ece74120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="35" y="212" width="4" height="15" fill="rgb(220,131,30)"/><text x="38.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.31%)</title><rect x="39" y="180" width="3" height="15" fill="rgb(211,12,5)"/><text x="42.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.31%)</title><rect x="42" y="180" width="4" height="15" fill="rgb(251,81,11)"/><text x="45.00" y="190.50"></text></g><g><title>0x7ff8ece69782 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="42" y="196" width="4" height="15" fill="rgb(240,192,34)"/><text x="45.00" y="206.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.31%)</title><rect x="50" y="196" width="3" height="15" fill="rgb(221,28,40)"/><text x="53.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (3 samples, 0.93%)</title><rect x="46" y="180" width="11" height="15" fill="rgb(226,53,7)"/><text x="49.00" y="190.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.31%)</title><rect x="53" y="196" width="4" height="15" fill="rgb(230,118,37)"/><text x="56.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.31%)</title><rect x="53" y="212" width="4" height="15" fill="rgb(210,189,9)"/><text x="56.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (2 samples, 0.62%)</title><rect x="60" y="228" width="8" height="15" fill="rgb(246,77,15)"/><text x="63.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.31%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(219,24,0)"/><text x="71.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.31%)</title><rect x="71" y="228" width="4" height="15" fill="rgb(221,75,43)"/><text x="74.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (6 samples, 1.85%)</title><rect x="57" y="212" width="22" height="15" fill="rgb(214,93,30)"/><text x="60.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.31%)</title><rect x="75" y="228" width="4" height="15" fill="rgb(231,61,8)"/><text x="78.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (7 samples, 2.16%)</title><rect x="57" y="180" width="25" height="15" fill="rgb(213,184,42)"/><text x="60.00" y="190.50">d..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (7 samples, 2.16%)</title><rect x="57" y="196" width="25" height="15" fill="rgb(227,194,3)"/><text x="60.00" y="206.50">&lt;..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.31%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(215,135,36)"/><text x="82.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.31%)</title><rect x="82" y="180" width="4" height="15" fill="rgb(236,55,49)"/><text x="85.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.31%)</title><rect x="86" y="180" width="4" height="15" fill="rgb(205,14,45)"/><text x="89.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (2 samples, 0.62%)</title><rect x="90" y="196" width="7" height="15" fill="rgb(212,78,40)"/><text x="93.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.62%)</title><rect x="97" y="212" width="7" height="15" fill="rgb(214,23,35)"/><text x="100.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.31%)</title><rect x="101" y="228" width="3" height="15" fill="rgb(226,197,46)"/><text x="104.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:119) (1 samples, 0.31%)</title><rect x="104" y="212" width="4" height="15" fill="rgb(237,93,9)"/><text x="107.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (6 samples, 1.85%)</title><rect x="90" y="180" width="21" height="15" fill="rgb(213,219,21)"/><text x="93.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (4 samples, 1.23%)</title><rect x="97" y="196" width="14" height="15" fill="rgb(212,110,19)"/><text x="100.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.31%)</title><rect x="108" y="212" width="3" height="15" fill="rgb(218,136,31)"/><text x="111.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.62%)</title><rect x="111" y="196" width="8" height="15" fill="rgb(239,224,3)"/><text x="114.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.31%)</title><rect x="119" y="196" width="3" height="15" fill="rgb(243,195,14)"/><text x="122.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (4 samples, 1.23%)</title><rect x="111" y="180" width="15" height="15" fill="rgb(227,21,14)"/><text x="114.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.31%)</title><rect x="122" y="196" width="4" height="15" fill="rgb(252,96,5)"/><text x="125.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.31%)</title><rect x="126" y="196" width="4" height="15" fill="rgb(207,109,42)"/><text x="129.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.62%)</title><rect x="126" y="180" width="7" height="15" fill="rgb(227,6,10)"/><text x="129.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.31%)</title><rect x="130" y="196" width="3" height="15" fill="rgb(233,217,43)"/><text x="133.00" y="206.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.31%)</title><rect x="133" y="196" width="4" height="15" fill="rgb(237,83,42)"/><text x="136.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (2 samples, 0.62%)</title><rect x="133" y="180" width="8" height="15" fill="rgb(239,193,6)"/><text x="136.00" y="190.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.31%)</title><rect x="137" y="196" width="4" height="15" fill="rgb(224,135,35)"/><text x="140.00" y="206.50"></text></g><g><title>_get (queue.py:217) (1 samples, 0.31%)</title><rect x="137" y="212" width="4" height="15" fill="rgb(248,58,9)"/><text x="140.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.31%)</title><rect x="141" y="180" width="3" height="15" fill="rgb(238,224,1)"/><text x="144.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.31%)</title><rect x="152" y="260" width="3" height="15" fill="rgb(207,126,16)"/><text x="155.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:206) (1 samples, 0.31%)</title><rect x="155" y="260" width="4" height="15" fill="rgb(232,152,6)"/><text x="158.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.93%)</title><rect x="152" y="244" width="10" height="15" fill="rgb(206,203,45)"/><text x="155.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.31%)</title><rect x="159" y="260" width="3" height="15" fill="rgb(247,186,43)"/><text x="162.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="162" y="292" width="4" height="15" fill="rgb(236,209,25)"/><text x="165.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="162" y="308" width="4" height="15" fill="rgb(216,226,33)"/><text x="165.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="162" y="324" width="4" height="15" fill="rgb(249,171,1)"/><text x="165.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.31%)</title><rect x="173" y="324" width="4" height="15" fill="rgb(238,17,33)"/><text x="176.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 1.23%)</title><rect x="166" y="292" width="15" height="15" fill="rgb(243,0,5)"/><text x="169.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.93%)</title><rect x="170" y="308" width="11" height="15" fill="rgb(229,42,49)"/><text x="173.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.31%)</title><rect x="177" y="324" width="4" height="15" fill="rgb(250,215,24)"/><text x="180.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="177" y="340" width="4" height="15" fill="rgb(238,215,20)"/><text x="180.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (3 samples, 0.93%)</title><rect x="181" y="292" width="11" height="15" fill="rgb(206,135,10)"/><text x="184.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.62%)</title><rect x="184" y="308" width="8" height="15" fill="rgb(254,118,17)"/><text x="187.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.31%)</title><rect x="188" y="324" width="4" height="15" fill="rgb(227,73,31)"/><text x="191.00" y="334.50"></text></g><g><title>0x7ff8c68a5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="192" y="356" width="3" height="15" fill="rgb(238,134,0)"/><text x="195.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.31%)</title><rect x="192" y="372" width="3" height="15" fill="rgb(248,225,40)"/><text x="195.00" y="382.50"></text></g><g><title>0x7ff8c6896fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="192" y="324" width="11" height="15" fill="rgb(254,30,30)"/><text x="195.00" y="334.50"></text></g><g><title>0x7ff8c68a6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="192" y="340" width="11" height="15" fill="rgb(233,98,8)"/><text x="195.00" y="350.50"></text></g><g><title>0x7ff8c68a5644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="195" y="356" width="8" height="15" fill="rgb(251,227,27)"/><text x="198.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="199" y="372" width="4" height="15" fill="rgb(240,21,7)"/><text x="202.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.31%)</title><rect x="203" y="356" width="3" height="15" fill="rgb(249,134,35)"/><text x="206.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.31%)</title><rect x="203" y="372" width="3" height="15" fill="rgb(243,139,47)"/><text x="206.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="203" y="388" width="3" height="15" fill="rgb(248,227,16)"/><text x="206.00" y="398.50"></text></g><g><title>0x7ff8c689705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="203" y="324" width="7" height="15" fill="rgb(218,44,9)"/><text x="206.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.62%)</title><rect x="203" y="340" width="7" height="15" fill="rgb(223,89,34)"/><text x="206.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.31%)</title><rect x="206" y="356" width="4" height="15" fill="rgb(250,57,41)"/><text x="209.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="206" y="372" width="4" height="15" fill="rgb(244,108,15)"/><text x="209.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.31%)</title><rect x="206" y="388" width="4" height="15" fill="rgb(221,90,46)"/><text x="209.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.31%)</title><rect x="206" y="404" width="4" height="15" fill="rgb(247,76,9)"/><text x="209.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:168) (1 samples, 0.31%)</title><rect x="206" y="420" width="4" height="15" fill="rgb(234,146,27)"/><text x="209.00" y="430.50"></text></g><g><title>0x7ff8c689713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="210" y="324" width="3" height="15" fill="rgb(213,106,31)"/><text x="213.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="210" y="340" width="3" height="15" fill="rgb(240,21,28)"/><text x="213.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="210" y="356" width="3" height="15" fill="rgb(233,51,47)"/><text x="213.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="210" y="372" width="3" height="15" fill="rgb(225,148,53)"/><text x="213.00" y="382.50"></text></g><g><title>0x7ff8c689714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="213" y="324" width="4" height="15" fill="rgb(216,31,3)"/><text x="216.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="213" y="340" width="4" height="15" fill="rgb(240,229,36)"/><text x="216.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="213" y="356" width="4" height="15" fill="rgb(246,30,35)"/><text x="216.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="213" y="372" width="4" height="15" fill="rgb(227,78,11)"/><text x="216.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (8 samples, 2.47%)</title><rect x="192" y="292" width="29" height="15" fill="rgb(228,128,41)"/><text x="195.00" y="302.50">pr..</text></g><g><title>0x7ff8c6897d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.47%)</title><rect x="192" y="308" width="29" height="15" fill="rgb(222,88,8)"/><text x="195.00" y="318.50">0x..</text></g><g><title>0x7ff8c689718f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="217" y="324" width="4" height="15" fill="rgb(217,116,50)"/><text x="220.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.31%)</title><rect x="221" y="308" width="3" height="15" fill="rgb(234,38,10)"/><text x="224.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.31%)</title><rect x="221" y="324" width="3" height="15" fill="rgb(213,100,37)"/><text x="224.00" y="334.50"></text></g><g><title>multi_DECREF (mapping.c:148) (1 samples, 0.31%)</title><rect x="221" y="340" width="3" height="15" fill="rgb(215,142,33)"/><text x="224.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.31%)</title><rect x="224" y="324" width="4" height="15" fill="rgb(251,82,26)"/><text x="227.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.93%)</title><rect x="221" y="292" width="11" height="15" fill="rgb(240,125,28)"/><text x="224.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.62%)</title><rect x="224" y="308" width="8" height="15" fill="rgb(215,64,27)"/><text x="227.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.31%)</title><rect x="228" y="324" width="4" height="15" fill="rgb(224,46,2)"/><text x="231.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.31%)</title><rect x="228" y="340" width="4" height="15" fill="rgb(221,126,21)"/><text x="231.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.31%)</title><rect x="228" y="356" width="4" height="15" fill="rgb(251,67,27)"/><text x="231.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="235" y="308" width="4" height="15" fill="rgb(214,137,26)"/><text x="238.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.62%)</title><rect x="239" y="356" width="7" height="15" fill="rgb(207,42,25)"/><text x="242.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.62%)</title><rect x="239" y="372" width="7" height="15" fill="rgb(219,111,41)"/><text x="242.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.62%)</title><rect x="239" y="388" width="7" height="15" fill="rgb(226,95,54)"/><text x="242.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.62%)</title><rect x="239" y="404" width="7" height="15" fill="rgb(213,219,45)"/><text x="242.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.62%)</title><rect x="239" y="420" width="7" height="15" fill="rgb(218,32,0)"/><text x="242.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.62%)</title><rect x="239" y="436" width="7" height="15" fill="rgb(205,223,45)"/><text x="242.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.31%)</title><rect x="246" y="372" width="4" height="15" fill="rgb(234,116,27)"/><text x="249.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.31%)</title><rect x="250" y="388" width="4" height="15" fill="rgb(218,191,42)"/><text x="253.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.31%)</title><rect x="250" y="404" width="4" height="15" fill="rgb(245,103,54)"/><text x="253.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.31%)</title><rect x="250" y="420" width="4" height="15" fill="rgb(250,42,9)"/><text x="253.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:230) (1 samples, 0.31%)</title><rect x="254" y="420" width="3" height="15" fill="rgb(205,183,30)"/><text x="257.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.62%)</title><rect x="254" y="404" width="7" height="15" fill="rgb(223,165,32)"/><text x="257.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.31%)</title><rect x="257" y="420" width="4" height="15" fill="rgb(229,220,15)"/><text x="260.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.31%)</title><rect x="257" y="436" width="4" height="15" fill="rgb(218,208,39)"/><text x="260.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="257" y="452" width="4" height="15" fill="rgb(227,61,46)"/><text x="260.00" y="462.50"></text></g><g><title>0x7ff8ecdf5318 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="257" y="468" width="4" height="15" fill="rgb(242,117,40)"/><text x="260.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="261" y="420" width="3" height="15" fill="rgb(238,212,5)"/><text x="264.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1178) (1 samples, 0.31%)</title><rect x="261" y="436" width="3" height="15" fill="rgb(250,115,53)"/><text x="264.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.62%)</title><rect x="261" y="404" width="7" height="15" fill="rgb(207,117,34)"/><text x="264.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.31%)</title><rect x="264" y="420" width="4" height="15" fill="rgb(213,197,53)"/><text x="267.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.31%)</title><rect x="264" y="436" width="4" height="15" fill="rgb(223,144,4)"/><text x="267.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (11 samples, 3.40%)</title><rect x="232" y="292" width="40" height="15" fill="rgb(243,3,44)"/><text x="235.00" y="302.50">pre..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 2.78%)</title><rect x="239" y="308" width="33" height="15" fill="rgb(238,99,13)"/><text x="242.00" y="318.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 2.78%)</title><rect x="239" y="324" width="33" height="15" fill="rgb(226,12,36)"/><text x="242.00" y="334.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 2.78%)</title><rect x="239" y="340" width="33" height="15" fill="rgb(222,57,29)"/><text x="242.00" y="350.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.16%)</title><rect x="246" y="356" width="26" height="15" fill="rgb(223,131,1)"/><text x="249.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.85%)</title><rect x="250" y="372" width="22" height="15" fill="rgb(253,228,26)"/><text x="253.00" y="382.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.54%)</title><rect x="254" y="388" width="18" height="15" fill="rgb(253,82,49)"/><text x="257.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.31%)</title><rect x="268" y="404" width="4" height="15" fill="rgb(246,172,0)"/><text x="271.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.31%)</title><rect x="268" y="420" width="4" height="15" fill="rgb(241,28,30)"/><text x="271.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.31%)</title><rect x="272" y="292" width="3" height="15" fill="rgb(220,133,49)"/><text x="275.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.31%)</title><rect x="272" y="308" width="3" height="15" fill="rgb(213,6,37)"/><text x="275.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.31%)</title><rect x="272" y="324" width="3" height="15" fill="rgb(232,179,26)"/><text x="275.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="272" y="340" width="3" height="15" fill="rgb(210,125,21)"/><text x="275.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="272" y="356" width="3" height="15" fill="rgb(222,128,35)"/><text x="275.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="272" y="372" width="3" height="15" fill="rgb(213,181,21)"/><text x="275.00" y="382.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.31%)</title><rect x="275" y="340" width="4" height="15" fill="rgb(248,104,46)"/><text x="278.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.31%)</title><rect x="279" y="356" width="4" height="15" fill="rgb(227,187,15)"/><text x="282.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.93%)</title><rect x="275" y="324" width="11" height="15" fill="rgb(239,12,14)"/><text x="278.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.62%)</title><rect x="279" y="340" width="7" height="15" fill="rgb(220,31,47)"/><text x="282.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1689) (1 samples, 0.31%)</title><rect x="283" y="356" width="3" height="15" fill="rgb(237,143,39)"/><text x="286.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="286" y="324" width="4" height="15" fill="rgb(220,35,14)"/><text x="289.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="286" y="340" width="4" height="15" fill="rgb(241,141,19)"/><text x="289.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.31%)</title><rect x="290" y="356" width="4" height="15" fill="rgb(222,223,10)"/><text x="293.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="290" y="372" width="4" height="15" fill="rgb(234,16,9)"/><text x="293.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="290" y="388" width="4" height="15" fill="rgb(254,54,38)"/><text x="293.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.62%)</title><rect x="290" y="324" width="7" height="15" fill="rgb(247,179,20)"/><text x="293.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.62%)</title><rect x="290" y="340" width="7" height="15" fill="rgb(243,37,54)"/><text x="293.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.31%)</title><rect x="294" y="356" width="3" height="15" fill="rgb(219,99,22)"/><text x="297.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.31%)</title><rect x="294" y="372" width="3" height="15" fill="rgb(253,203,43)"/><text x="297.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.16%)</title><rect x="275" y="308" width="26" height="15" fill="rgb(207,139,24)"/><text x="278.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.31%)</title><rect x="297" y="324" width="4" height="15" fill="rgb(216,77,41)"/><text x="300.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.31%)</title><rect x="297" y="340" width="4" height="15" fill="rgb(208,182,48)"/><text x="300.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.31%)</title><rect x="297" y="356" width="4" height="15" fill="rgb(209,22,11)"/><text x="300.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (39 samples, 12.04%)</title><rect x="162" y="276" width="143" height="15" fill="rgb(222,190,22)"/><text x="165.00" y="286.50">_accumulate_predic..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 2.47%)</title><rect x="275" y="292" width="30" height="15" fill="rgb(242,72,53)"/><text x="278.00" y="302.50">pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="301" y="308" width="4" height="15" fill="rgb(254,18,28)"/><text x="304.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="301" y="324" width="4" height="15" fill="rgb(207,172,33)"/><text x="304.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.62%)</title><rect x="305" y="276" width="7" height="15" fill="rgb(230,124,35)"/><text x="308.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="312" y="308" width="3" height="15" fill="rgb(223,108,28)"/><text x="315.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.31%)</title><rect x="312" y="324" width="3" height="15" fill="rgb(208,117,36)"/><text x="315.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.62%)</title><rect x="312" y="292" width="7" height="15" fill="rgb(240,57,44)"/><text x="315.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="315" y="308" width="4" height="15" fill="rgb(253,15,36)"/><text x="318.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.31%)</title><rect x="315" y="324" width="4" height="15" fill="rgb(206,123,21)"/><text x="318.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.31%)</title><rect x="315" y="340" width="4" height="15" fill="rgb(209,225,20)"/><text x="318.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.31%)</title><rect x="315" y="356" width="4" height="15" fill="rgb(210,46,4)"/><text x="318.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.31%)</title><rect x="315" y="372" width="4" height="15" fill="rgb(238,4,20)"/><text x="318.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="315" y="388" width="4" height="15" fill="rgb(239,55,49)"/><text x="318.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="315" y="404" width="4" height="15" fill="rgb(253,12,31)"/><text x="318.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (44 samples, 13.58%)</title><rect x="162" y="260" width="161" height="15" fill="rgb(224,108,3)"/><text x="165.00" y="270.50">&lt;listcomp&gt; (joblib/p..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (3 samples, 0.93%)</title><rect x="312" y="276" width="11" height="15" fill="rgb(219,133,3)"/><text x="315.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.31%)</title><rect x="319" y="292" width="4" height="15" fill="rgb(244,37,52)"/><text x="322.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.31%)</title><rect x="319" y="308" width="4" height="15" fill="rgb(237,110,7)"/><text x="322.00" y="318.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.31%)</title><rect x="319" y="324" width="4" height="15" fill="rgb(216,65,28)"/><text x="322.00" y="334.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (50 samples, 15.43%)</title><rect x="144" y="212" width="182" height="15" fill="rgb(207,22,25)"/><text x="147.00" y="222.50">apply_async (joblib/_pa..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (50 samples, 15.43%)</title><rect x="144" y="228" width="182" height="15" fill="rgb(210,141,45)"/><text x="147.00" y="238.50">__init__ (joblib/_paral..</text></g><g><title>__call__ (joblib/parallel.py:256) (45 samples, 13.89%)</title><rect x="162" y="244" width="164" height="15" fill="rgb(251,0,44)"/><text x="165.00" y="254.50">__call__ (joblib/para..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.31%)</title><rect x="323" y="260" width="3" height="15" fill="rgb(221,224,11)"/><text x="326.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.31%)</title><rect x="323" y="276" width="3" height="15" fill="rgb(209,217,12)"/><text x="326.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.31%)</title><rect x="326" y="228" width="4" height="15" fill="rgb(209,1,33)"/><text x="329.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.31%)</title><rect x="330" y="228" width="4" height="15" fill="rgb(230,158,21)"/><text x="333.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:850) (1 samples, 0.31%)</title><rect x="330" y="244" width="4" height="15" fill="rgb(249,95,24)"/><text x="333.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (53 samples, 16.36%)</title><rect x="144" y="196" width="193" height="15" fill="rgb(223,220,51)"/><text x="147.00" y="206.50">_dispatch (joblib/paralle..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (3 samples, 0.93%)</title><rect x="326" y="212" width="11" height="15" fill="rgb(205,153,42)"/><text x="329.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.31%)</title><rect x="334" y="228" width="3" height="15" fill="rgb(254,175,6)"/><text x="337.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (83 samples, 25.62%)</title><rect x="39" y="164" width="302" height="15" fill="rgb(224,18,21)"/><text x="42.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (54 samples, 16.67%)</title><rect x="144" y="180" width="197" height="15" fill="rgb(214,132,23)"/><text x="147.00" y="190.50">dispatch_one_batch (jobli..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.31%)</title><rect x="337" y="196" width="4" height="15" fill="rgb(223,118,3)"/><text x="340.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.31%)</title><rect x="341" y="180" width="4" height="15" fill="rgb(248,152,7)"/><text x="344.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.31%)</title><rect x="345" y="180" width="3" height="15" fill="rgb(213,36,6)"/><text x="348.00" y="190.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:18) (87 samples, 26.85%)</title><rect x="35" y="100" width="317" height="15" fill="rgb(234,125,22)"/><text x="38.00" y="110.50">profile (bench_RandomForestClassifier_defa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (87 samples, 26.85%)</title><rect x="35" y="116" width="317" height="15" fill="rgb(216,168,13)"/><text x="38.00" y="126.50">time_predict (mlprodict/asv_benchmark/comm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (87 samples, 26.85%)</title><rect x="35" y="132" width="317" height="15" fill="rgb(205,181,11)"/><text x="38.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_a..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (86 samples, 26.54%)</title><rect x="39" y="148" width="313" height="15" fill="rgb(212,75,22)"/><text x="42.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py..</text></g><g><title>__call__ (joblib/parallel.py:1016) (3 samples, 0.93%)</title><rect x="341" y="164" width="11" height="15" fill="rgb(225,104,33)"/><text x="344.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.31%)</title><rect x="348" y="180" width="4" height="15" fill="rgb(250,158,0)"/><text x="351.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.31%)</title><rect x="352" y="148" width="3" height="15" fill="rgb(231,76,51)"/><text x="355.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:177) (1 samples, 0.31%)</title><rect x="352" y="164" width="3" height="15" fill="rgb(224,159,17)"/><text x="355.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.31%)</title><rect x="352" y="180" width="3" height="15" fill="rgb(223,22,32)"/><text x="355.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.31%)</title><rect x="352" y="196" width="3" height="15" fill="rgb(235,87,27)"/><text x="355.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:650) (1 samples, 0.31%)</title><rect x="355" y="164" width="4" height="15" fill="rgb(245,107,31)"/><text x="358.00" y="174.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (2 samples, 0.62%)</title><rect x="355" y="148" width="8" height="15" fill="rgb(248,102,28)"/><text x="358.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.31%)</title><rect x="359" y="164" width="4" height="15" fill="rgb(205,128,44)"/><text x="362.00" y="174.50"></text></g><g><title>__le__ (distutils/version.py:58) (1 samples, 0.31%)</title><rect x="359" y="180" width="4" height="15" fill="rgb(218,181,13)"/><text x="362.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (1 samples, 0.31%)</title><rect x="363" y="180" width="3" height="15" fill="rgb(242,89,48)"/><text x="366.00" y="190.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.31%)</title><rect x="363" y="196" width="3" height="15" fill="rgb(230,209,32)"/><text x="366.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.62%)</title><rect x="363" y="164" width="7" height="15" fill="rgb(248,80,52)"/><text x="366.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.31%)</title><rect x="366" y="180" width="4" height="15" fill="rgb(226,54,43)"/><text x="369.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.31%)</title><rect x="366" y="196" width="4" height="15" fill="rgb(216,206,54)"/><text x="369.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.31%)</title><rect x="366" y="212" width="4" height="15" fill="rgb(244,196,4)"/><text x="369.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.31%)</title><rect x="366" y="228" width="4" height="15" fill="rgb(246,146,26)"/><text x="369.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="366" y="244" width="4" height="15" fill="rgb(224,102,25)"/><text x="369.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="366" y="260" width="4" height="15" fill="rgb(217,148,33)"/><text x="369.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.31%)</title><rect x="366" y="276" width="4" height="15" fill="rgb(248,110,8)"/><text x="369.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.31%)</title><rect x="366" y="292" width="4" height="15" fill="rgb(244,69,4)"/><text x="369.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.31%)</title><rect x="366" y="308" width="4" height="15" fill="rgb(216,158,39)"/><text x="369.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="366" y="324" width="4" height="15" fill="rgb(222,91,8)"/><text x="369.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="366" y="340" width="4" height="15" fill="rgb(217,4,20)"/><text x="369.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.31%)</title><rect x="366" y="356" width="4" height="15" fill="rgb(238,177,0)"/><text x="369.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.31%)</title><rect x="366" y="372" width="4" height="15" fill="rgb(216,143,32)"/><text x="369.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1774) (1 samples, 0.31%)</title><rect x="366" y="388" width="4" height="15" fill="rgb(234,63,28)"/><text x="369.00" y="398.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.31%)</title><rect x="374" y="180" width="3" height="15" fill="rgb(223,178,19)"/><text x="377.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.31%)</title><rect x="377" y="180" width="4" height="15" fill="rgb(239,170,2)"/><text x="380.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (2 samples, 0.62%)</title><rect x="381" y="180" width="7" height="15" fill="rgb(235,3,28)"/><text x="384.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="385" y="196" width="3" height="15" fill="rgb(215,56,21)"/><text x="388.00" y="206.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.31%)</title><rect x="399" y="196" width="4" height="15" fill="rgb(216,192,18)"/><text x="402.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 1.54%)</title><rect x="388" y="180" width="18" height="15" fill="rgb(216,140,25)"/><text x="391.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.31%)</title><rect x="403" y="196" width="3" height="15" fill="rgb(239,41,21)"/><text x="406.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.31%)</title><rect x="406" y="180" width="4" height="15" fill="rgb(253,48,44)"/><text x="409.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.31%)</title><rect x="410" y="180" width="4" height="15" fill="rgb(213,9,47)"/><text x="413.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:297) (1 samples, 0.31%)</title><rect x="425" y="212" width="3" height="15" fill="rgb(233,192,39)"/><text x="428.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.31%)</title><rect x="428" y="212" width="4" height="15" fill="rgb(247,64,2)"/><text x="431.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.62%)</title><rect x="436" y="228" width="7" height="15" fill="rgb(233,121,7)"/><text x="439.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.31%)</title><rect x="443" y="228" width="4" height="15" fill="rgb(227,56,49)"/><text x="446.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (10 samples, 3.09%)</title><rect x="414" y="180" width="36" height="15" fill="rgb(223,64,14)"/><text x="417.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (8 samples, 2.47%)</title><rect x="421" y="196" width="29" height="15" fill="rgb(245,200,20)"/><text x="424.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (5 samples, 1.54%)</title><rect x="432" y="212" width="18" height="15" fill="rgb(253,58,34)"/><text x="435.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.31%)</title><rect x="447" y="228" width="3" height="15" fill="rgb(217,15,12)"/><text x="450.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.62%)</title><rect x="450" y="180" width="7" height="15" fill="rgb(214,140,5)"/><text x="453.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:206) (1 samples, 0.31%)</title><rect x="457" y="196" width="4" height="15" fill="rgb(253,123,42)"/><text x="460.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 1.54%)</title><rect x="461" y="212" width="18" height="15" fill="rgb(238,132,28)"/><text x="464.00" y="222.50"></text></g><g><title>0x7ff8ece69ed2 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="476" y="228" width="3" height="15" fill="rgb(245,16,28)"/><text x="479.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.31%)</title><rect x="479" y="212" width="4" height="15" fill="rgb(228,87,8)"/><text x="482.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (7 samples, 2.16%)</title><rect x="461" y="196" width="26" height="15" fill="rgb(205,7,54)"/><text x="464.00" y="206.50">g..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.31%)</title><rect x="483" y="212" width="4" height="15" fill="rgb(250,138,4)"/><text x="486.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (2 samples, 0.62%)</title><rect x="505" y="228" width="7" height="15" fill="rgb(230,34,41)"/><text x="508.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (10 samples, 3.09%)</title><rect x="487" y="212" width="36" height="15" fill="rgb(235,124,17)"/><text x="490.00" y="222.50">get..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (3 samples, 0.93%)</title><rect x="512" y="228" width="11" height="15" fill="rgb(239,108,45)"/><text x="515.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.31%)</title><rect x="523" y="212" width="4" height="15" fill="rgb(224,100,17)"/><text x="526.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.31%)</title><rect x="527" y="212" width="3" height="15" fill="rgb(236,131,35)"/><text x="530.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (24 samples, 7.41%)</title><rect x="457" y="180" width="88" height="15" fill="rgb(254,195,23)"/><text x="460.00" y="190.50">dispatch_o..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (16 samples, 4.94%)</title><rect x="487" y="196" width="58" height="15" fill="rgb(221,185,25)"/><text x="490.00" y="206.50">get_ne..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (4 samples, 1.23%)</title><rect x="530" y="212" width="15" height="15" fill="rgb(241,211,20)"/><text x="533.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.62%)</title><rect x="545" y="196" width="7" height="15" fill="rgb(227,140,19)"/><text x="548.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.93%)</title><rect x="545" y="180" width="11" height="15" fill="rgb(244,195,37)"/><text x="548.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.31%)</title><rect x="552" y="196" width="4" height="15" fill="rgb(224,204,0)"/><text x="555.00" y="206.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.31%)</title><rect x="563" y="196" width="4" height="15" fill="rgb(249,226,35)"/><text x="566.00" y="206.50"></text></g><g><title>put (queue.py:149) (3 samples, 0.93%)</title><rect x="567" y="196" width="11" height="15" fill="rgb(232,78,52)"/><text x="570.00" y="206.50"></text></g><g><title>_put (queue.py:213) (2 samples, 0.62%)</title><rect x="570" y="212" width="8" height="15" fill="rgb(236,220,30)"/><text x="573.00" y="222.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.31%)</title><rect x="581" y="212" width="4" height="15" fill="rgb(217,109,26)"/><text x="584.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.31%)</title><rect x="581" y="228" width="4" height="15" fill="rgb(207,9,30)"/><text x="584.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(235,203,8)"/><text x="584.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(251,176,21)"/><text x="584.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="581" y="276" width="4" height="15" fill="rgb(228,141,33)"/><text x="584.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (10 samples, 3.09%)</title><rect x="556" y="180" width="36" height="15" fill="rgb(208,121,29)"/><text x="559.00" y="190.50">dis..</text></g><g><title>put (queue.py:151) (4 samples, 1.23%)</title><rect x="578" y="196" width="14" height="15" fill="rgb(210,19,43)"/><text x="581.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.62%)</title><rect x="585" y="212" width="7" height="15" fill="rgb(240,74,53)"/><text x="588.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.31%)</title><rect x="592" y="196" width="4" height="15" fill="rgb(238,106,35)"/><text x="595.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.31%)</title><rect x="592" y="212" width="4" height="15" fill="rgb(247,12,33)"/><text x="595.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="592" y="228" width="4" height="15" fill="rgb(215,179,20)"/><text x="595.00" y="238.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.31%)</title><rect x="596" y="196" width="4" height="15" fill="rgb(217,218,18)"/><text x="599.00" y="206.50"></text></g><g><title>_qsize (queue.py:208) (1 samples, 0.31%)</title><rect x="596" y="212" width="4" height="15" fill="rgb(252,112,12)"/><text x="599.00" y="222.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.62%)</title><rect x="600" y="196" width="7" height="15" fill="rgb(205,78,48)"/><text x="603.00" y="206.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.62%)</title><rect x="600" y="212" width="7" height="15" fill="rgb(213,2,42)"/><text x="603.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.62%)</title><rect x="600" y="228" width="7" height="15" fill="rgb(250,75,36)"/><text x="603.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.62%)</title><rect x="600" y="244" width="7" height="15" fill="rgb(250,83,38)"/><text x="603.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (2 samples, 0.62%)</title><rect x="600" y="260" width="7" height="15" fill="rgb(207,173,12)"/><text x="603.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (2 samples, 0.62%)</title><rect x="600" y="276" width="7" height="15" fill="rgb(242,171,53)"/><text x="603.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (5 samples, 1.54%)</title><rect x="592" y="180" width="18" height="15" fill="rgb(234,92,10)"/><text x="595.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.31%)</title><rect x="607" y="196" width="3" height="15" fill="rgb(218,216,47)"/><text x="610.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.31%)</title><rect x="607" y="212" width="3" height="15" fill="rgb(233,172,8)"/><text x="610.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.31%)</title><rect x="614" y="196" width="4" height="15" fill="rgb(225,47,54)"/><text x="617.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.31%)</title><rect x="618" y="196" width="3" height="15" fill="rgb(220,15,3)"/><text x="621.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.31%)</title><rect x="632" y="260" width="4" height="15" fill="rgb(245,101,19)"/><text x="635.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.31%)</title><rect x="636" y="260" width="4" height="15" fill="rgb(227,63,53)"/><text x="639.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 1.23%)</title><rect x="629" y="244" width="14" height="15" fill="rgb(237,201,5)"/><text x="632.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.31%)</title><rect x="640" y="260" width="3" height="15" fill="rgb(228,129,54)"/><text x="643.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="672" y="324" width="4" height="15" fill="rgb(229,229,44)"/><text x="675.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.62%)</title><rect x="672" y="292" width="8" height="15" fill="rgb(241,200,43)"/><text x="675.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.62%)</title><rect x="672" y="308" width="8" height="15" fill="rgb(251,49,46)"/><text x="675.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="676" y="324" width="4" height="15" fill="rgb(243,155,8)"/><text x="679.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.31%)</title><rect x="683" y="308" width="4" height="15" fill="rgb(233,6,39)"/><text x="686.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.31%)</title><rect x="687" y="308" width="4" height="15" fill="rgb(248,209,24)"/><text x="690.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="691" y="308" width="3" height="15" fill="rgb(247,180,42)"/><text x="694.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 3.70%)</title><rect x="705" y="324" width="44" height="15" fill="rgb(222,160,3)"/><text x="708.00" y="334.50">&lt;lis..</text></g><g><title>unicode_endswith (python3.7) (6 samples, 1.85%)</title><rect x="727" y="340" width="22" height="15" fill="rgb(254,3,36)"/><text x="730.00" y="350.50">u..</text></g><g><title>0x7ff8ecf31130 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="745" y="356" width="4" height="15" fill="rgb(253,164,26)"/><text x="748.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (22 samples, 6.79%)</title><rect x="680" y="292" width="80" height="15" fill="rgb(208,169,29)"/><text x="683.00" y="302.50">predict_p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (18 samples, 5.56%)</title><rect x="694" y="308" width="66" height="15" fill="rgb(206,144,44)"/><text x="697.00" y="318.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.93%)</title><rect x="749" y="324" width="11" height="15" fill="rgb(227,167,52)"/><text x="752.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.31%)</title><rect x="760" y="292" width="3" height="15" fill="rgb(207,3,23)"/><text x="763.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.31%)</title><rect x="760" y="308" width="3" height="15" fill="rgb(236,130,28)"/><text x="763.00" y="318.50"></text></g><g><title>0x7ff8c6896f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(232,194,45)"/><text x="766.00" y="334.50"></text></g><g><title>0x7ff8c6886d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="763" y="340" width="4" height="15" fill="rgb(237,120,5)"/><text x="766.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="763" y="356" width="4" height="15" fill="rgb(242,145,9)"/><text x="766.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.31%)</title><rect x="763" y="372" width="4" height="15" fill="rgb(206,186,16)"/><text x="766.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="763" y="388" width="4" height="15" fill="rgb(248,23,47)"/><text x="766.00" y="398.50"></text></g><g><title>0x7ff8c68a5225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="767" y="356" width="4" height="15" fill="rgb(208,46,27)"/><text x="770.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.31%)</title><rect x="767" y="372" width="4" height="15" fill="rgb(236,147,23)"/><text x="770.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.31%)</title><rect x="767" y="388" width="4" height="15" fill="rgb(226,225,41)"/><text x="770.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.31%)</title><rect x="767" y="404" width="4" height="15" fill="rgb(240,193,26)"/><text x="770.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.31%)</title><rect x="767" y="420" width="4" height="15" fill="rgb(210,28,46)"/><text x="770.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.31%)</title><rect x="767" y="436" width="4" height="15" fill="rgb(230,106,54)"/><text x="770.00" y="446.50"></text></g><g><title>0x7ff8c687f10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="771" y="404" width="3" height="15" fill="rgb(220,45,23)"/><text x="774.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.31%)</title><rect x="774" y="436" width="4" height="15" fill="rgb(227,0,5)"/><text x="777.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.31%)</title><rect x="774" y="452" width="4" height="15" fill="rgb(226,214,35)"/><text x="777.00" y="462.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.31%)</title><rect x="778" y="436" width="4" height="15" fill="rgb(233,48,32)"/><text x="781.00" y="446.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.93%)</title><rect x="774" y="420" width="11" height="15" fill="rgb(213,52,28)"/><text x="777.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.31%)</title><rect x="782" y="436" width="3" height="15" fill="rgb(232,34,14)"/><text x="785.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.31%)</title><rect x="782" y="452" width="3" height="15" fill="rgb(216,178,21)"/><text x="785.00" y="462.50"></text></g><g><title>0x7ff8ece626c2 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="782" y="468" width="3" height="15" fill="rgb(205,186,35)"/><text x="785.00" y="478.50"></text></g><g><title>0x7ff8c6889666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.54%)</title><rect x="771" y="388" width="18" height="15" fill="rgb(227,105,8)"/><text x="774.00" y="398.50"></text></g><g><title>0x7ff8c687f2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.23%)</title><rect x="774" y="404" width="15" height="15" fill="rgb(218,108,15)"/><text x="777.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.31%)</title><rect x="785" y="420" width="4" height="15" fill="rgb(231,228,12)"/><text x="788.00" y="430.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.31%)</title><rect x="785" y="436" width="4" height="15" fill="rgb(240,211,3)"/><text x="788.00" y="446.50"></text></g><g><title>0x7ff8c68a52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.85%)</title><rect x="771" y="356" width="22" height="15" fill="rgb(210,178,49)"/><text x="774.00" y="366.50">0..</text></g><g><title>0x7ff8c6889d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.85%)</title><rect x="771" y="372" width="22" height="15" fill="rgb(224,85,21)"/><text x="774.00" y="382.50">0..</text></g><g><title>0x7ff8c68896fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="789" y="388" width="4" height="15" fill="rgb(227,127,28)"/><text x="792.00" y="398.50"></text></g><g><title>0x7ff8c68a5511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(206,140,43)"/><text x="796.00" y="366.50"></text></g><g><title>0x7ff8ece69757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="807" y="388" width="4" height="15" fill="rgb(224,68,18)"/><text x="810.00" y="398.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.31%)</title><rect x="811" y="388" width="3" height="15" fill="rgb(210,171,5)"/><text x="814.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.31%)</title><rect x="811" y="404" width="3" height="15" fill="rgb(227,18,16)"/><text x="814.00" y="414.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (7 samples, 2.16%)</title><rect x="796" y="372" width="26" height="15" fill="rgb(253,203,22)"/><text x="799.00" y="382.50">a..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="814" y="388" width="8" height="15" fill="rgb(214,82,20)"/><text x="817.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="822" y="420" width="3" height="15" fill="rgb(236,176,39)"/><text x="825.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.31%)</title><rect x="822" y="436" width="3" height="15" fill="rgb(253,179,6)"/><text x="825.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.31%)</title><rect x="822" y="452" width="3" height="15" fill="rgb(246,123,46)"/><text x="825.00" y="462.50"></text></g><g><title>0x7ff8c68a5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.78%)</title><rect x="796" y="356" width="33" height="15" fill="rgb(237,127,49)"/><text x="799.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.62%)</title><rect x="822" y="372" width="7" height="15" fill="rgb(230,71,45)"/><text x="825.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.62%)</title><rect x="822" y="388" width="7" height="15" fill="rgb(225,17,15)"/><text x="825.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.62%)</title><rect x="822" y="404" width="7" height="15" fill="rgb(254,173,46)"/><text x="825.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.31%)</title><rect x="825" y="420" width="4" height="15" fill="rgb(219,36,16)"/><text x="828.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.31%)</title><rect x="825" y="436" width="4" height="15" fill="rgb(250,132,41)"/><text x="828.00" y="446.50"></text></g><g><title>0x7ff8ece74120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="825" y="452" width="4" height="15" fill="rgb(209,84,49)"/><text x="828.00" y="462.50"></text></g><g><title>0x7ff8c68a5644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="829" y="356" width="4" height="15" fill="rgb(230,101,11)"/><text x="832.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="829" y="372" width="4" height="15" fill="rgb(238,157,11)"/><text x="832.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="833" y="372" width="3" height="15" fill="rgb(239,212,13)"/><text x="836.00" y="382.50"></text></g><g><title>0x7ff8c68a56fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="833" y="356" width="7" height="15" fill="rgb(235,47,18)"/><text x="836.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="836" y="372" width="4" height="15" fill="rgb(210,87,17)"/><text x="839.00" y="382.50"></text></g><g><title>0x7ff8c68a6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 6.48%)</title><rect x="767" y="340" width="77" height="15" fill="rgb(245,57,6)"/><text x="770.00" y="350.50">0x7ff8c6..</text></g><g><title>0x7ff8c68a5c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="840" y="356" width="4" height="15" fill="rgb(215,159,5)"/><text x="843.00" y="366.50"></text></g><g><title>0x7ff8c687d5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="840" y="372" width="4" height="15" fill="rgb(249,11,3)"/><text x="843.00" y="382.50"></text></g><g><title>0x7ff8c687d2a6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="840" y="388" width="4" height="15" fill="rgb(242,105,13)"/><text x="843.00" y="398.50"></text></g><g><title>0x7ff8c6896fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 7.10%)</title><rect x="767" y="324" width="84" height="15" fill="rgb(239,100,39)"/><text x="770.00" y="334.50">0x7ff8c68..</text></g><g><title>0x7ff8c68a6540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="844" y="340" width="7" height="15" fill="rgb(233,183,23)"/><text x="847.00" y="350.50"></text></g><g><title>0x7ff8c687b2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="844" y="356" width="7" height="15" fill="rgb(234,98,41)"/><text x="847.00" y="366.50"></text></g><g><title>0x7ff8c687a530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="844" y="372" width="7" height="15" fill="rgb(254,25,14)"/><text x="847.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.62%)</title><rect x="844" y="388" width="7" height="15" fill="rgb(228,61,51)"/><text x="847.00" y="398.50"></text></g><g><title>0x7ff8c6897002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="851" y="324" width="3" height="15" fill="rgb(220,37,9)"/><text x="854.00" y="334.50"></text></g><g><title>0x7ff8ece69e7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="862" y="356" width="3" height="15" fill="rgb(237,15,32)"/><text x="865.00" y="366.50"></text></g><g><title>0x7ff8c689705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.23%)</title><rect x="854" y="324" width="15" height="15" fill="rgb(225,49,14)"/><text x="857.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 1.23%)</title><rect x="854" y="340" width="15" height="15" fill="rgb(222,51,53)"/><text x="857.00" y="350.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.31%)</title><rect x="865" y="356" width="4" height="15" fill="rgb(238,151,2)"/><text x="868.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.31%)</title><rect x="865" y="372" width="4" height="15" fill="rgb(252,81,24)"/><text x="868.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.31%)</title><rect x="865" y="388" width="4" height="15" fill="rgb(237,115,10)"/><text x="868.00" y="398.50"></text></g><g><title>0x7ff8c689713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="869" y="324" width="4" height="15" fill="rgb(214,155,41)"/><text x="872.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="873" y="340" width="3" height="15" fill="rgb(245,175,54)"/><text x="876.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="873" y="356" width="3" height="15" fill="rgb(244,200,11)"/><text x="876.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.31%)</title><rect x="873" y="372" width="3" height="15" fill="rgb(247,201,44)"/><text x="876.00" y="382.50"></text></g><g><title>0x7ff8c689714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="873" y="324" width="7" height="15" fill="rgb(211,125,36)"/><text x="876.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.31%)</title><rect x="876" y="340" width="4" height="15" fill="rgb(221,57,41)"/><text x="879.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.31%)</title><rect x="876" y="356" width="4" height="15" fill="rgb(238,74,24)"/><text x="879.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (33 samples, 10.19%)</title><rect x="763" y="292" width="121" height="15" fill="rgb(244,166,0)"/><text x="766.00" y="302.50">predict_proba (..</text></g><g><title>0x7ff8c6897d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 10.19%)</title><rect x="763" y="308" width="121" height="15" fill="rgb(213,208,49)"/><text x="766.00" y="318.50">0x7ff8c6897d2e ..</text></g><g><title>0x7ff8c6897328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="880" y="324" width="4" height="15" fill="rgb(241,59,19)"/><text x="883.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.31%)</title><rect x="880" y="340" width="4" height="15" fill="rgb(248,31,19)"/><text x="883.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:51) (1 samples, 0.31%)</title><rect x="880" y="356" width="4" height="15" fill="rgb(228,191,36)"/><text x="883.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.31%)</title><rect x="884" y="292" width="3" height="15" fill="rgb(216,70,33)"/><text x="887.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.31%)</title><rect x="895" y="308" width="3" height="15" fill="rgb(206,56,9)"/><text x="898.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.31%)</title><rect x="895" y="324" width="3" height="15" fill="rgb(219,34,29)"/><text x="898.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (4 samples, 1.23%)</title><rect x="887" y="292" width="15" height="15" fill="rgb(252,204,5)"/><text x="890.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="898" y="308" width="4" height="15" fill="rgb(232,127,13)"/><text x="901.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.31%)</title><rect x="898" y="324" width="4" height="15" fill="rgb(209,221,15)"/><text x="901.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="909" y="308" width="4" height="15" fill="rgb(229,88,24)"/><text x="912.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.31%)</title><rect x="909" y="324" width="4" height="15" fill="rgb(240,156,23)"/><text x="912.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.31%)</title><rect x="909" y="340" width="4" height="15" fill="rgb(242,161,3)"/><text x="912.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.31%)</title><rect x="909" y="356" width="4" height="15" fill="rgb(217,152,36)"/><text x="912.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.31%)</title><rect x="913" y="436" width="3" height="15" fill="rgb(253,173,7)"/><text x="916.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="913" y="452" width="3" height="15" fill="rgb(208,63,49)"/><text x="916.00" y="462.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.93%)</title><rect x="913" y="356" width="11" height="15" fill="rgb(227,177,16)"/><text x="916.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.93%)</title><rect x="913" y="372" width="11" height="15" fill="rgb(240,114,25)"/><text x="916.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.93%)</title><rect x="913" y="388" width="11" height="15" fill="rgb(241,6,16)"/><text x="916.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.93%)</title><rect x="913" y="404" width="11" height="15" fill="rgb(254,135,10)"/><text x="916.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.93%)</title><rect x="913" y="420" width="11" height="15" fill="rgb(209,120,14)"/><text x="916.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.62%)</title><rect x="916" y="436" width="8" height="15" fill="rgb(219,101,45)"/><text x="919.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.31%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(227,179,2)"/><text x="927.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.31%)</title><rect x="927" y="452" width="4" height="15" fill="rgb(214,85,19)"/><text x="930.00" y="462.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3844) (1 samples, 0.31%)</title><rect x="927" y="468" width="4" height="15" fill="rgb(213,159,44)"/><text x="930.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.62%)</title><rect x="927" y="404" width="8" height="15" fill="rgb(248,21,48)"/><text x="930.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.62%)</title><rect x="927" y="420" width="8" height="15" fill="rgb(218,15,12)"/><text x="930.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.62%)</title><rect x="927" y="436" width="8" height="15" fill="rgb(236,33,12)"/><text x="930.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="931" y="452" width="4" height="15" fill="rgb(207,204,28)"/><text x="934.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.31%)</title><rect x="931" y="468" width="4" height="15" fill="rgb(220,158,3)"/><text x="934.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.31%)</title><rect x="931" y="484" width="4" height="15" fill="rgb(234,4,8)"/><text x="934.00" y="494.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1498) (1 samples, 0.31%)</title><rect x="931" y="500" width="4" height="15" fill="rgb(227,115,17)"/><text x="934.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="935" y="404" width="3" height="15" fill="rgb(223,107,13)"/><text x="938.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.31%)</title><rect x="935" y="420" width="3" height="15" fill="rgb(217,167,37)"/><text x="938.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.31%)</title><rect x="935" y="436" width="3" height="15" fill="rgb(213,46,2)"/><text x="938.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.31%)</title><rect x="938" y="436" width="4" height="15" fill="rgb(250,36,43)"/><text x="941.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.31%)</title><rect x="938" y="452" width="4" height="15" fill="rgb(254,47,34)"/><text x="941.00" y="462.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (12 samples, 3.70%)</title><rect x="902" y="292" width="43" height="15" fill="rgb(235,183,3)"/><text x="905.00" y="302.50">pred..</text></g><g><title>array_sum (methods.c:2215) (9 samples, 2.78%)</title><rect x="913" y="308" width="32" height="15" fill="rgb(213,0,1)"/><text x="916.00" y="318.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 2.78%)</title><rect x="913" y="324" width="32" height="15" fill="rgb(218,0,34)"/><text x="916.00" y="334.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 2.78%)</title><rect x="913" y="340" width="32" height="15" fill="rgb(224,95,50)"/><text x="916.00" y="350.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.85%)</title><rect x="924" y="356" width="21" height="15" fill="rgb(216,195,47)"/><text x="927.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.54%)</title><rect x="927" y="372" width="18" height="15" fill="rgb(212,218,36)"/><text x="930.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.54%)</title><rect x="927" y="388" width="18" height="15" fill="rgb(250,25,18)"/><text x="930.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.62%)</title><rect x="938" y="404" width="7" height="15" fill="rgb(213,82,26)"/><text x="941.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.62%)</title><rect x="938" y="420" width="7" height="15" fill="rgb(246,119,7)"/><text x="941.00" y="430.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.31%)</title><rect x="942" y="436" width="3" height="15" fill="rgb(207,165,13)"/><text x="945.00" y="446.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1883) (1 samples, 0.31%)</title><rect x="942" y="452" width="3" height="15" fill="rgb(217,196,10)"/><text x="945.00" y="462.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.31%)</title><rect x="949" y="308" width="4" height="15" fill="rgb(214,142,1)"/><text x="952.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.31%)</title><rect x="949" y="324" width="4" height="15" fill="rgb(240,40,54)"/><text x="952.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.31%)</title><rect x="949" y="340" width="4" height="15" fill="rgb(235,226,19)"/><text x="952.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.31%)</title><rect x="949" y="356" width="4" height="15" fill="rgb(245,167,33)"/><text x="952.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="949" y="372" width="4" height="15" fill="rgb(252,194,21)"/><text x="952.00" y="382.50"></text></g><g><title>0x7ff8ece0b767 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="949" y="388" width="4" height="15" fill="rgb(253,83,18)"/><text x="952.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c:1361) (1 samples, 0.31%)</title><rect x="953" y="308" width="3" height="15" fill="rgb(209,11,16)"/><text x="956.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.31%)</title><rect x="956" y="308" width="4" height="15" fill="rgb(239,73,29)"/><text x="959.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:147) (1 samples, 0.31%)</title><rect x="956" y="324" width="4" height="15" fill="rgb(234,150,12)"/><text x="959.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:121) (1 samples, 0.31%)</title><rect x="956" y="340" width="4" height="15" fill="rgb(215,62,45)"/><text x="959.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.31%)</title><rect x="964" y="356" width="3" height="15" fill="rgb(223,131,13)"/><text x="967.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.31%)</title><rect x="967" y="372" width="4" height="15" fill="rgb(253,155,43)"/><text x="970.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (6 samples, 1.85%)</title><rect x="964" y="340" width="22" height="15" fill="rgb(211,116,36)"/><text x="967.00" y="350.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (5 samples, 1.54%)</title><rect x="967" y="356" width="19" height="15" fill="rgb(229,166,34)"/><text x="970.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (4 samples, 1.23%)</title><rect x="971" y="372" width="15" height="15" fill="rgb(237,192,10)"/><text x="974.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (4 samples, 1.23%)</title><rect x="971" y="388" width="15" height="15" fill="rgb(220,34,25)"/><text x="974.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (4 samples, 1.23%)</title><rect x="971" y="404" width="15" height="15" fill="rgb(235,99,19)"/><text x="974.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (4 samples, 1.23%)</title><rect x="971" y="420" width="15" height="15" fill="rgb(235,125,47)"/><text x="974.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="986" y="340" width="3" height="15" fill="rgb(232,158,4)"/><text x="989.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.31%)</title><rect x="986" y="356" width="3" height="15" fill="rgb(234,17,17)"/><text x="989.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.31%)</title><rect x="986" y="372" width="3" height="15" fill="rgb(226,96,28)"/><text x="989.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.31%)</title><rect x="986" y="388" width="3" height="15" fill="rgb(219,16,22)"/><text x="989.00" y="398.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.31%)</title><rect x="986" y="404" width="3" height="15" fill="rgb(226,114,35)"/><text x="989.00" y="414.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.31%)</title><rect x="986" y="420" width="3" height="15" fill="rgb(240,105,53)"/><text x="989.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.47%)</title><rect x="964" y="324" width="29" height="15" fill="rgb(242,67,30)"/><text x="967.00" y="334.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="989" y="340" width="4" height="15" fill="rgb(252,46,41)"/><text x="992.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.31%)</title><rect x="989" y="356" width="4" height="15" fill="rgb(213,56,21)"/><text x="992.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="989" y="372" width="4" height="15" fill="rgb(205,119,39)"/><text x="992.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.31%)</title><rect x="989" y="388" width="4" height="15" fill="rgb(254,115,12)"/><text x="992.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (14 samples, 4.32%)</title><rect x="945" y="292" width="51" height="15" fill="rgb(232,53,49)"/><text x="948.00" y="302.50">predi..</text></g><g><title>array_richcompare (arrayobject.c:1445) (10 samples, 3.09%)</title><rect x="960" y="308" width="36" height="15" fill="rgb(250,5,22)"/><text x="963.00" y="318.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.31%)</title><rect x="993" y="324" width="3" height="15" fill="rgb(237,9,13)"/><text x="996.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.31%)</title><rect x="993" y="340" width="3" height="15" fill="rgb(216,114,51)"/><text x="996.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="996" y="308" width="4" height="15" fill="rgb(237,174,21)"/><text x="999.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="996" y="324" width="4" height="15" fill="rgb(243,104,9)"/><text x="999.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="996" y="340" width="4" height="15" fill="rgb(214,209,24)"/><text x="999.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.31%)</title><rect x="996" y="356" width="4" height="15" fill="rgb(213,115,2)"/><text x="999.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.31%)</title><rect x="1000" y="324" width="4" height="15" fill="rgb(243,34,4)"/><text x="1003.00" y="334.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.31%)</title><rect x="1000" y="340" width="4" height="15" fill="rgb(242,20,46)"/><text x="1003.00" y="350.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.31%)</title><rect x="1000" y="356" width="4" height="15" fill="rgb(209,159,37)"/><text x="1003.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.31%)</title><rect x="1004" y="340" width="3" height="15" fill="rgb(245,117,36)"/><text x="1007.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1716) (1 samples, 0.31%)</title><rect x="1004" y="356" width="3" height="15" fill="rgb(219,128,48)"/><text x="1007.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.62%)</title><rect x="1004" y="324" width="7" height="15" fill="rgb(248,223,51)"/><text x="1007.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2049) (1 samples, 0.31%)</title><rect x="1007" y="340" width="4" height="15" fill="rgb(227,143,43)"/><text x="1010.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.31%)</title><rect x="1011" y="340" width="4" height="15" fill="rgb(244,13,5)"/><text x="1014.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.62%)</title><rect x="1011" y="324" width="7" height="15" fill="rgb(214,150,36)"/><text x="1014.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.31%)</title><rect x="1015" y="340" width="3" height="15" fill="rgb(217,203,39)"/><text x="1018.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.31%)</title><rect x="1018" y="340" width="4" height="15" fill="rgb(246,97,7)"/><text x="1021.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.31%)</title><rect x="1018" y="356" width="4" height="15" fill="rgb(205,179,24)"/><text x="1021.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.31%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(227,209,33)"/><text x="1025.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="1022" y="372" width="4" height="15" fill="rgb(213,100,43)"/><text x="1025.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.31%)</title><rect x="1022" y="388" width="4" height="15" fill="rgb(209,204,27)"/><text x="1025.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.31%)</title><rect x="1022" y="404" width="4" height="15" fill="rgb(249,154,31)"/><text x="1025.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1584) (1 samples, 0.31%)</title><rect x="1026" y="356" width="3" height="15" fill="rgb(251,215,12)"/><text x="1029.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (100 samples, 30.86%)</title><rect x="669" y="276" width="364" height="15" fill="rgb(249,62,28)"/><text x="672.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest...</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (10 samples, 3.09%)</title><rect x="996" y="292" width="37" height="15" fill="rgb(238,224,46)"/><text x="999.00" y="302.50">pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.78%)</title><rect x="1000" y="308" width="33" height="15" fill="rgb(209,1,54)"/><text x="1003.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.23%)</title><rect x="1018" y="324" width="15" height="15" fill="rgb(226,187,37)"/><text x="1021.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.93%)</title><rect x="1022" y="340" width="11" height="15" fill="rgb(247,136,29)"/><text x="1025.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="1029" y="356" width="4" height="15" fill="rgb(223,196,42)"/><text x="1032.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.31%)</title><rect x="1029" y="372" width="4" height="15" fill="rgb(214,78,2)"/><text x="1032.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1029" y="388" width="4" height="15" fill="rgb(251,152,33)"/><text x="1032.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (2 samples, 0.62%)</title><rect x="1033" y="276" width="7" height="15" fill="rgb(217,111,2)"/><text x="1036.00" y="286.50"></text></g><g><title>array_inplace_add (number.c:709) (1 samples, 0.31%)</title><rect x="1040" y="292" width="4" height="15" fill="rgb(236,68,42)"/><text x="1043.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="1044" y="308" width="3" height="15" fill="rgb(249,81,25)"/><text x="1047.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.31%)</title><rect x="1044" y="324" width="3" height="15" fill="rgb(249,113,3)"/><text x="1047.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.31%)</title><rect x="1044" y="340" width="3" height="15" fill="rgb(252,44,19)"/><text x="1047.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.31%)</title><rect x="1047" y="308" width="4" height="15" fill="rgb(230,168,6)"/><text x="1050.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.31%)</title><rect x="1047" y="324" width="4" height="15" fill="rgb(225,177,37)"/><text x="1050.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.31%)</title><rect x="1051" y="356" width="4" height="15" fill="rgb(218,107,28)"/><text x="1054.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:601) (1 samples, 0.31%)</title><rect x="1051" y="372" width="4" height="15" fill="rgb(248,222,17)"/><text x="1054.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.62%)</title><rect x="1051" y="324" width="7" height="15" fill="rgb(233,132,11)"/><text x="1054.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.62%)</title><rect x="1051" y="340" width="7" height="15" fill="rgb(232,154,45)"/><text x="1054.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.31%)</title><rect x="1055" y="356" width="3" height="15" fill="rgb(227,41,10)"/><text x="1058.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:547) (1 samples, 0.31%)</title><rect x="1055" y="372" width="3" height="15" fill="rgb(238,149,20)"/><text x="1058.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1055" y="388" width="3" height="15" fill="rgb(217,8,26)"/><text x="1058.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (6 samples, 1.85%)</title><rect x="1040" y="276" width="22" height="15" fill="rgb(208,68,34)"/><text x="1043.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.54%)</title><rect x="1044" y="292" width="18" height="15" fill="rgb(229,53,5)"/><text x="1047.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.93%)</title><rect x="1051" y="308" width="11" height="15" fill="rgb(205,8,24)"/><text x="1054.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.31%)</title><rect x="1058" y="324" width="4" height="15" fill="rgb(209,80,39)"/><text x="1061.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.31%)</title><rect x="1058" y="340" width="4" height="15" fill="rgb(211,148,10)"/><text x="1061.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.31%)</title><rect x="1058" y="356" width="4" height="15" fill="rgb(237,215,54)"/><text x="1061.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.31%)</title><rect x="1058" y="372" width="4" height="15" fill="rgb(232,103,2)"/><text x="1061.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.31%)</title><rect x="1058" y="388" width="4" height="15" fill="rgb(210,179,37)"/><text x="1061.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.31%)</title><rect x="1058" y="404" width="4" height="15" fill="rgb(206,6,10)"/><text x="1061.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (112 samples, 34.57%)</title><rect x="658" y="260" width="408" height="15" fill="rgb(249,176,33)"/><text x="661.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.31%)</title><rect x="1062" y="276" width="4" height="15" fill="rgb(211,164,14)"/><text x="1065.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.31%)</title><rect x="1062" y="292" width="4" height="15" fill="rgb(241,53,25)"/><text x="1065.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.31%)</title><rect x="1062" y="308" width="4" height="15" fill="rgb(230,195,31)"/><text x="1065.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (124 samples, 38.27%)</title><rect x="625" y="212" width="452" height="15" fill="rgb(228,179,49)"/><text x="628.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (124 samples, 38.27%)</title><rect x="625" y="228" width="452" height="15" fill="rgb(214,171,42)"/><text x="628.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (119 samples, 36.73%)</title><rect x="643" y="244" width="434" height="15" fill="rgb(222,2,40)"/><text x="646.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.93%)</title><rect x="1066" y="260" width="11" height="15" fill="rgb(246,27,14)"/><text x="1069.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.31%)</title><rect x="1073" y="276" width="4" height="15" fill="rgb(249,110,53)"/><text x="1076.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.31%)</title><rect x="1084" y="228" width="4" height="15" fill="rgb(216,205,53)"/><text x="1087.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.31%)</title><rect x="1088" y="228" width="3" height="15" fill="rgb(220,101,29)"/><text x="1091.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.31%)</title><rect x="1091" y="228" width="4" height="15" fill="rgb(246,25,52)"/><text x="1094.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (133 samples, 41.05%)</title><rect x="621" y="196" width="485" height="15" fill="rgb(217,180,8)"/><text x="624.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (8 samples, 2.47%)</title><rect x="1077" y="212" width="29" height="15" fill="rgb(208,128,16)"/><text x="1080.00" y="222.50">ap..</text></g><g><title>__call__ (joblib/parallel.py:340) (3 samples, 0.93%)</title><rect x="1095" y="228" width="11" height="15" fill="rgb(244,150,11)"/><text x="1098.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (138 samples, 42.59%)</title><rect x="610" y="180" width="503" height="15" fill="rgb(254,146,54)"/><text x="613.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.62%)</title><rect x="1106" y="196" width="7" height="15" fill="rgb(245,40,39)"/><text x="1109.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (205 samples, 63.27%)</title><rect x="370" y="164" width="747" height="15" fill="rgb(249,126,3)"/><text x="373.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.31%)</title><rect x="1113" y="180" width="4" height="15" fill="rgb(226,42,32)"/><text x="1116.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.31%)</title><rect x="1117" y="180" width="3" height="15" fill="rgb(227,94,1)"/><text x="1120.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (2 samples, 0.62%)</title><rect x="1120" y="180" width="8" height="15" fill="rgb(226,185,33)"/><text x="1123.00" y="190.50"></text></g><g><title>0x7ff8ece73de6 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1124" y="196" width="4" height="15" fill="rgb(222,149,19)"/><text x="1127.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (5 samples, 1.54%)</title><rect x="1117" y="164" width="18" height="15" fill="rgb(236,150,1)"/><text x="1120.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (2 samples, 0.62%)</title><rect x="1128" y="180" width="7" height="15" fill="rgb(230,117,51)"/><text x="1131.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:38) (308 samples, 95.06%)</title><rect x="17" y="52" width="1122" height="15" fill="rgb(211,141,8)"/><text x="20.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:37) (308 samples, 95.06%)</title><rect x="17" y="68" width="1122" height="15" fill="rgb(213,197,24)"/><text x="20.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:29) (303 samples, 93.52%)</title><rect x="35" y="84" width="1104" height="15" fill="rgb(235,72,21)"/><text x="38.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:23) (216 samples, 66.67%)</title><rect x="352" y="100" width="787" height="15" fill="rgb(246,141,45)"/><text x="355.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (216 samples, 66.67%)</title><rect x="352" y="116" width="787" height="15" fill="rgb(229,206,17)"/><text x="355.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (216 samples, 66.67%)</title><rect x="352" y="132" width="787" height="15" fill="rgb(246,114,46)"/><text x="355.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (213 samples, 65.74%)</title><rect x="363" y="148" width="776" height="15" fill="rgb(220,6,9)"/><text x="366.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:949) (1 samples, 0.31%)</title><rect x="1135" y="164" width="4" height="15" fill="rgb(248,185,1)"/><text x="1138.00" y="174.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:722) (1 samples, 0.31%)</title><rect x="1135" y="180" width="4" height="15" fill="rgb(214,83,37)"/><text x="1138.00" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:710) (1 samples, 0.31%)</title><rect x="1135" y="196" width="4" height="15" fill="rgb(228,108,2)"/><text x="1138.00" y="206.50"></text></g><g><title>configure (joblib/_parallel_backends.py:76) (1 samples, 0.31%)</title><rect x="1135" y="212" width="4" height="15" fill="rgb(219,84,27)"/><text x="1138.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py:197) (1 samples, 0.31%)</title><rect x="1135" y="228" width="4" height="15" fill="rgb(212,11,13)"/><text x="1138.00" y="238.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="1139" y="852" width="3" height="15" fill="rgb(211,113,12)"/><text x="1142.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="1139" y="868" width="3" height="15" fill="rgb(233,171,53)"/><text x="1142.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.31%)</title><rect x="1139" y="884" width="3" height="15" fill="rgb(251,106,32)"/><text x="1142.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.31%)</title><rect x="1139" y="900" width="3" height="15" fill="rgb(215,113,11)"/><text x="1142.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.31%)</title><rect x="1139" y="916" width="3" height="15" fill="rgb(235,47,24)"/><text x="1142.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:2) (2 samples, 0.62%)</title><rect x="1139" y="148" width="7" height="15" fill="rgb(254,49,6)"/><text x="1142.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="164" width="7" height="15" fill="rgb(213,131,20)"/><text x="1142.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="1139" y="180" width="7" height="15" fill="rgb(208,142,28)"/><text x="1142.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="196" width="7" height="15" fill="rgb(222,173,9)"/><text x="1142.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="212" width="7" height="15" fill="rgb(240,45,42)"/><text x="1142.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="228" width="7" height="15" fill="rgb(239,128,21)"/><text x="1142.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="244" width="7" height="15" fill="rgb(251,164,47)"/><text x="1142.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="260" width="7" height="15" fill="rgb(235,198,1)"/><text x="1142.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="276" width="7" height="15" fill="rgb(244,10,15)"/><text x="1142.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.62%)</title><rect x="1139" y="292" width="7" height="15" fill="rgb(223,229,5)"/><text x="1142.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="308" width="7" height="15" fill="rgb(205,54,47)"/><text x="1142.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="324" width="7" height="15" fill="rgb(242,139,9)"/><text x="1142.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="340" width="7" height="15" fill="rgb(244,182,46)"/><text x="1142.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="356" width="7" height="15" fill="rgb(225,8,34)"/><text x="1142.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="372" width="7" height="15" fill="rgb(229,189,53)"/><text x="1142.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.62%)</title><rect x="1139" y="388" width="7" height="15" fill="rgb(227,28,11)"/><text x="1142.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="404" width="7" height="15" fill="rgb(210,214,50)"/><text x="1142.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="420" width="7" height="15" fill="rgb(248,86,54)"/><text x="1142.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="436" width="7" height="15" fill="rgb(217,24,49)"/><text x="1142.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="452" width="7" height="15" fill="rgb(245,229,22)"/><text x="1142.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="468" width="7" height="15" fill="rgb(235,181,54)"/><text x="1142.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.62%)</title><rect x="1139" y="484" width="7" height="15" fill="rgb(250,19,3)"/><text x="1142.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="500" width="7" height="15" fill="rgb(246,108,8)"/><text x="1142.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="516" width="7" height="15" fill="rgb(212,12,10)"/><text x="1142.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="532" width="7" height="15" fill="rgb(243,180,16)"/><text x="1142.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="548" width="7" height="15" fill="rgb(232,89,9)"/><text x="1142.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="564" width="7" height="15" fill="rgb(233,78,34)"/><text x="1142.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.62%)</title><rect x="1139" y="580" width="7" height="15" fill="rgb(254,82,17)"/><text x="1142.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="596" width="7" height="15" fill="rgb(238,90,26)"/><text x="1142.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="1139" y="612" width="7" height="15" fill="rgb(229,196,8)"/><text x="1142.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="628" width="7" height="15" fill="rgb(231,28,25)"/><text x="1142.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="644" width="7" height="15" fill="rgb(224,112,28)"/><text x="1142.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="660" width="7" height="15" fill="rgb(252,15,14)"/><text x="1142.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="676" width="7" height="15" fill="rgb(208,19,39)"/><text x="1142.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="692" width="7" height="15" fill="rgb(214,106,26)"/><text x="1142.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="708" width="7" height="15" fill="rgb(241,215,53)"/><text x="1142.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.62%)</title><rect x="1139" y="724" width="7" height="15" fill="rgb(236,2,26)"/><text x="1142.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1139" y="740" width="7" height="15" fill="rgb(231,128,30)"/><text x="1142.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1139" y="756" width="7" height="15" fill="rgb(243,110,51)"/><text x="1142.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1139" y="772" width="7" height="15" fill="rgb(252,208,41)"/><text x="1142.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1139" y="788" width="7" height="15" fill="rgb(239,79,5)"/><text x="1142.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1139" y="804" width="7" height="15" fill="rgb(242,153,23)"/><text x="1142.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.62%)</title><rect x="1139" y="820" width="7" height="15" fill="rgb(231,50,0)"/><text x="1142.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.62%)</title><rect x="1139" y="836" width="7" height="15" fill="rgb(216,20,48)"/><text x="1142.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.31%)</title><rect x="1142" y="852" width="4" height="15" fill="rgb(216,218,20)"/><text x="1145.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="1142" y="868" width="4" height="15" fill="rgb(243,71,10)"/><text x="1145.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="1142" y="884" width="4" height="15" fill="rgb(253,127,32)"/><text x="1145.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.31%)</title><rect x="1142" y="900" width="4" height="15" fill="rgb(242,51,35)"/><text x="1145.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="1142" y="916" width="4" height="15" fill="rgb(254,107,22)"/><text x="1145.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1142" y="932" width="4" height="15" fill="rgb(234,199,28)"/><text x="1145.00" y="942.50"></text></g><g><title>0x7ff8ece93237 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1142" y="948" width="4" height="15" fill="rgb(254,90,17)"/><text x="1145.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (1 samples, 0.31%)</title><rect x="1146" y="484" width="3" height="15" fill="rgb(220,50,38)"/><text x="1149.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="500" width="3" height="15" fill="rgb(236,89,33)"/><text x="1149.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="516" width="3" height="15" fill="rgb(223,185,26)"/><text x="1149.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="532" width="3" height="15" fill="rgb(218,51,13)"/><text x="1149.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1146" y="548" width="3" height="15" fill="rgb(224,81,29)"/><text x="1149.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="564" width="3" height="15" fill="rgb(224,98,3)"/><text x="1149.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:237) (1 samples, 0.31%)</title><rect x="1146" y="580" width="3" height="15" fill="rgb(209,82,0)"/><text x="1149.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="596" width="3" height="15" fill="rgb(235,63,37)"/><text x="1149.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="1146" y="612" width="3" height="15" fill="rgb(210,192,36)"/><text x="1149.00" y="622.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="1146" y="628" width="3" height="15" fill="rgb(230,5,30)"/><text x="1149.00" y="638.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="1146" y="644" width="3" height="15" fill="rgb(244,69,26)"/><text x="1149.00" y="654.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="1146" y="660" width="3" height="15" fill="rgb(244,46,52)"/><text x="1149.00" y="670.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.31%)</title><rect x="1146" y="676" width="3" height="15" fill="rgb(228,60,18)"/><text x="1149.00" y="686.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.31%)</title><rect x="1146" y="692" width="3" height="15" fill="rgb(228,0,25)"/><text x="1149.00" y="702.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="1146" y="708" width="3" height="15" fill="rgb(251,140,15)"/><text x="1149.00" y="718.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.31%)</title><rect x="1149" y="676" width="4" height="15" fill="rgb(217,25,20)"/><text x="1152.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="692" width="4" height="15" fill="rgb(238,83,20)"/><text x="1152.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="708" width="4" height="15" fill="rgb(216,33,39)"/><text x="1152.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="724" width="4" height="15" fill="rgb(220,43,33)"/><text x="1152.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="740" width="4" height="15" fill="rgb(247,17,33)"/><text x="1152.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="756" width="4" height="15" fill="rgb(246,201,32)"/><text x="1152.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.31%)</title><rect x="1149" y="772" width="4" height="15" fill="rgb(229,64,14)"/><text x="1152.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1149" y="788" width="4" height="15" fill="rgb(222,39,38)"/><text x="1152.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="804" width="4" height="15" fill="rgb(206,206,50)"/><text x="1152.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="820" width="4" height="15" fill="rgb(240,7,36)"/><text x="1152.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="836" width="4" height="15" fill="rgb(230,23,46)"/><text x="1152.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="852" width="4" height="15" fill="rgb(211,142,41)"/><text x="1152.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="868" width="4" height="15" fill="rgb(210,187,21)"/><text x="1152.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="884" width="4" height="15" fill="rgb(246,219,31)"/><text x="1152.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.31%)</title><rect x="1149" y="900" width="4" height="15" fill="rgb(235,72,21)"/><text x="1152.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1149" y="916" width="4" height="15" fill="rgb(235,60,3)"/><text x="1152.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="932" width="4" height="15" fill="rgb(244,115,46)"/><text x="1152.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="948" width="4" height="15" fill="rgb(206,22,20)"/><text x="1152.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="964" width="4" height="15" fill="rgb(231,136,51)"/><text x="1152.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="980" width="4" height="15" fill="rgb(242,182,25)"/><text x="1152.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="996" width="4" height="15" fill="rgb(231,166,16)"/><text x="1152.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1012" width="4" height="15" fill="rgb(226,221,24)"/><text x="1152.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:94) (1 samples, 0.31%)</title><rect x="1149" y="1028" width="4" height="15" fill="rgb(248,49,53)"/><text x="1152.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.31%)</title><rect x="1149" y="1044" width="4" height="15" fill="rgb(205,13,54)"/><text x="1152.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.31%)</title><rect x="1149" y="1060" width="4" height="15" fill="rgb(220,40,36)"/><text x="1152.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.31%)</title><rect x="1149" y="1076" width="4" height="15" fill="rgb(254,120,27)"/><text x="1152.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.31%)</title><rect x="1149" y="1092" width="4" height="15" fill="rgb(247,122,42)"/><text x="1152.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:4) (3 samples, 0.93%)</title><rect x="1146" y="148" width="11" height="15" fill="rgb(219,134,23)"/><text x="1149.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1146" y="164" width="11" height="15" fill="rgb(211,176,14)"/><text x="1149.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.93%)</title><rect x="1146" y="180" width="11" height="15" fill="rgb(217,53,31)"/><text x="1149.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1146" y="196" width="11" height="15" fill="rgb(245,91,42)"/><text x="1149.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1146" y="212" width="11" height="15" fill="rgb(223,32,40)"/><text x="1149.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1146" y="228" width="11" height="15" fill="rgb(246,28,28)"/><text x="1149.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1146" y="244" width="11" height="15" fill="rgb(236,118,17)"/><text x="1149.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1146" y="260" width="11" height="15" fill="rgb(216,93,21)"/><text x="1149.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1146" y="276" width="11" height="15" fill="rgb(253,103,47)"/><text x="1149.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.93%)</title><rect x="1146" y="292" width="11" height="15" fill="rgb(229,137,10)"/><text x="1149.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1146" y="308" width="11" height="15" fill="rgb(226,23,36)"/><text x="1149.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1146" y="324" width="11" height="15" fill="rgb(241,116,6)"/><text x="1149.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1146" y="340" width="11" height="15" fill="rgb(206,202,27)"/><text x="1149.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1146" y="356" width="11" height="15" fill="rgb(206,226,4)"/><text x="1149.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1146" y="372" width="11" height="15" fill="rgb(234,131,26)"/><text x="1149.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.93%)</title><rect x="1146" y="388" width="11" height="15" fill="rgb(208,224,54)"/><text x="1149.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1146" y="404" width="11" height="15" fill="rgb(250,73,0)"/><text x="1149.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1146" y="420" width="11" height="15" fill="rgb(217,220,30)"/><text x="1149.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1146" y="436" width="11" height="15" fill="rgb(214,163,34)"/><text x="1149.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1146" y="452" width="11" height="15" fill="rgb(216,122,8)"/><text x="1149.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1146" y="468" width="11" height="15" fill="rgb(230,136,41)"/><text x="1149.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.62%)</title><rect x="1149" y="484" width="8" height="15" fill="rgb(232,51,4)"/><text x="1152.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1149" y="500" width="8" height="15" fill="rgb(230,46,54)"/><text x="1152.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1149" y="516" width="8" height="15" fill="rgb(223,172,2)"/><text x="1152.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1149" y="532" width="8" height="15" fill="rgb(205,76,2)"/><text x="1152.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1149" y="548" width="8" height="15" fill="rgb(221,176,20)"/><text x="1152.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1149" y="564" width="8" height="15" fill="rgb(214,91,29)"/><text x="1152.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.62%)</title><rect x="1149" y="580" width="8" height="15" fill="rgb(216,144,4)"/><text x="1152.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1149" y="596" width="8" height="15" fill="rgb(226,53,4)"/><text x="1152.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1149" y="612" width="8" height="15" fill="rgb(224,218,11)"/><text x="1152.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1149" y="628" width="8" height="15" fill="rgb(209,150,43)"/><text x="1152.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1149" y="644" width="8" height="15" fill="rgb(233,138,5)"/><text x="1152.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1149" y="660" width="8" height="15" fill="rgb(236,223,4)"/><text x="1152.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:380) (1 samples, 0.31%)</title><rect x="1153" y="676" width="4" height="15" fill="rgb(205,5,51)"/><text x="1156.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.31%)</title><rect x="1157" y="244" width="3" height="15" fill="rgb(210,219,23)"/><text x="1160.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="260" width="3" height="15" fill="rgb(212,214,31)"/><text x="1160.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="276" width="3" height="15" fill="rgb(222,139,25)"/><text x="1160.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="292" width="3" height="15" fill="rgb(210,34,40)"/><text x="1160.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="308" width="3" height="15" fill="rgb(231,143,9)"/><text x="1160.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="324" width="3" height="15" fill="rgb(219,174,30)"/><text x="1160.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.31%)</title><rect x="1157" y="340" width="3" height="15" fill="rgb(247,51,54)"/><text x="1160.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="356" width="3" height="15" fill="rgb(240,196,23)"/><text x="1160.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="1157" y="372" width="3" height="15" fill="rgb(228,110,5)"/><text x="1160.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="388" width="3" height="15" fill="rgb(231,60,42)"/><text x="1160.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="404" width="3" height="15" fill="rgb(213,66,47)"/><text x="1160.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="420" width="3" height="15" fill="rgb(222,221,41)"/><text x="1160.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="436" width="3" height="15" fill="rgb(241,207,41)"/><text x="1160.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="452" width="3" height="15" fill="rgb(209,47,0)"/><text x="1160.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="468" width="3" height="15" fill="rgb(218,216,30)"/><text x="1160.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.31%)</title><rect x="1157" y="484" width="3" height="15" fill="rgb(211,152,53)"/><text x="1160.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="500" width="3" height="15" fill="rgb(219,185,22)"/><text x="1160.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="516" width="3" height="15" fill="rgb(232,90,24)"/><text x="1160.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="532" width="3" height="15" fill="rgb(222,126,28)"/><text x="1160.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="548" width="3" height="15" fill="rgb(247,141,14)"/><text x="1160.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="564" width="3" height="15" fill="rgb(224,130,30)"/><text x="1160.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.31%)</title><rect x="1157" y="580" width="3" height="15" fill="rgb(248,219,50)"/><text x="1160.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="596" width="3" height="15" fill="rgb(234,225,36)"/><text x="1160.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="612" width="3" height="15" fill="rgb(239,13,50)"/><text x="1160.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="628" width="3" height="15" fill="rgb(217,29,8)"/><text x="1160.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="644" width="3" height="15" fill="rgb(208,97,35)"/><text x="1160.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="660" width="3" height="15" fill="rgb(224,9,31)"/><text x="1160.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.31%)</title><rect x="1157" y="676" width="3" height="15" fill="rgb(226,97,35)"/><text x="1160.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="692" width="3" height="15" fill="rgb(238,94,54)"/><text x="1160.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="708" width="3" height="15" fill="rgb(206,193,53)"/><text x="1160.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="724" width="3" height="15" fill="rgb(250,155,31)"/><text x="1160.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="740" width="3" height="15" fill="rgb(233,217,44)"/><text x="1160.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="756" width="3" height="15" fill="rgb(221,171,20)"/><text x="1160.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.31%)</title><rect x="1157" y="772" width="3" height="15" fill="rgb(238,34,15)"/><text x="1160.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1157" y="788" width="3" height="15" fill="rgb(230,51,34)"/><text x="1160.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="804" width="3" height="15" fill="rgb(237,135,12)"/><text x="1160.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="820" width="3" height="15" fill="rgb(230,29,43)"/><text x="1160.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="836" width="3" height="15" fill="rgb(245,30,29)"/><text x="1160.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="852" width="3" height="15" fill="rgb(230,89,44)"/><text x="1160.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="868" width="3" height="15" fill="rgb(236,185,8)"/><text x="1160.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="884" width="3" height="15" fill="rgb(244,28,50)"/><text x="1160.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.31%)</title><rect x="1157" y="900" width="3" height="15" fill="rgb(241,131,3)"/><text x="1160.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="916" width="3" height="15" fill="rgb(247,115,39)"/><text x="1160.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="932" width="3" height="15" fill="rgb(205,226,51)"/><text x="1160.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="948" width="3" height="15" fill="rgb(219,16,39)"/><text x="1160.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="964" width="3" height="15" fill="rgb(245,33,43)"/><text x="1160.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="980" width="3" height="15" fill="rgb(226,43,29)"/><text x="1160.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.31%)</title><rect x="1157" y="996" width="3" height="15" fill="rgb(220,79,6)"/><text x="1160.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="1012" width="3" height="15" fill="rgb(250,226,30)"/><text x="1160.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="1028" width="3" height="15" fill="rgb(232,141,46)"/><text x="1160.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="1044" width="3" height="15" fill="rgb(219,59,3)"/><text x="1160.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="1060" width="3" height="15" fill="rgb(209,146,35)"/><text x="1160.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="1076" width="3" height="15" fill="rgb(238,62,51)"/><text x="1160.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:60) (1 samples, 0.31%)</title><rect x="1157" y="1092" width="3" height="15" fill="rgb(231,186,11)"/><text x="1160.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="1108" width="3" height="15" fill="rgb(222,107,36)"/><text x="1160.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="1124" width="3" height="15" fill="rgb(219,159,8)"/><text x="1160.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="1140" width="3" height="15" fill="rgb(253,123,53)"/><text x="1160.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="1156" width="3" height="15" fill="rgb(239,215,26)"/><text x="1160.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="1172" width="3" height="15" fill="rgb(231,157,34)"/><text x="1160.00" y="1182.50"></text></g><g><title>&lt;module&gt; (http/cookies.py:451) (1 samples, 0.31%)</title><rect x="1157" y="1188" width="3" height="15" fill="rgb(229,7,48)"/><text x="1160.00" y="1198.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1157" y="1204" width="3" height="15" fill="rgb(245,51,5)"/><text x="1160.00" y="1214.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1157" y="1220" width="3" height="15" fill="rgb(221,193,2)"/><text x="1160.00" y="1230.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.31%)</title><rect x="1157" y="1236" width="3" height="15" fill="rgb(238,123,30)"/><text x="1160.00" y="1246.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.31%)</title><rect x="1157" y="1252" width="3" height="15" fill="rgb(221,155,11)"/><text x="1160.00" y="1262.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.31%)</title><rect x="1157" y="1268" width="3" height="15" fill="rgb(219,176,2)"/><text x="1160.00" y="1278.50"></text></g><g><title>_compile (sre_compile.py:130) (1 samples, 0.31%)</title><rect x="1157" y="1284" width="3" height="15" fill="rgb(224,99,48)"/><text x="1160.00" y="1294.50"></text></g><g><title>_compile_charset (sre_compile.py:274) (1 samples, 0.31%)</title><rect x="1157" y="1300" width="3" height="15" fill="rgb(215,193,35)"/><text x="1160.00" y="1310.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.31%)</title><rect x="1160" y="340" width="4" height="15" fill="rgb(227,120,13)"/><text x="1163.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1160" y="356" width="4" height="15" fill="rgb(238,151,24)"/><text x="1163.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1160" y="372" width="4" height="15" fill="rgb(229,90,0)"/><text x="1163.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1160" y="388" width="4" height="15" fill="rgb(220,162,45)"/><text x="1163.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1160" y="404" width="4" height="15" fill="rgb(215,7,27)"/><text x="1163.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1160" y="420" width="4" height="15" fill="rgb(220,89,21)"/><text x="1163.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:19) (1 samples, 0.31%)</title><rect x="1160" y="436" width="4" height="15" fill="rgb(246,148,29)"/><text x="1163.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1160" y="452" width="4" height="15" fill="rgb(254,114,21)"/><text x="1163.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1160" y="468" width="4" height="15" fill="rgb(242,193,0)"/><text x="1163.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1160" y="484" width="4" height="15" fill="rgb(240,165,6)"/><text x="1163.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="1160" y="500" width="4" height="15" fill="rgb(249,89,24)"/><text x="1163.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="1160" y="516" width="4" height="15" fill="rgb(222,141,9)"/><text x="1163.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="1160" y="532" width="4" height="15" fill="rgb(242,145,46)"/><text x="1163.00" y="542.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.31%)</title><rect x="1164" y="436" width="4" height="15" fill="rgb(212,68,3)"/><text x="1167.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="452" width="4" height="15" fill="rgb(214,131,26)"/><text x="1167.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="468" width="4" height="15" fill="rgb(208,71,13)"/><text x="1167.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="484" width="4" height="15" fill="rgb(245,116,25)"/><text x="1167.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="500" width="4" height="15" fill="rgb(238,43,52)"/><text x="1167.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="516" width="4" height="15" fill="rgb(227,138,53)"/><text x="1167.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.31%)</title><rect x="1164" y="532" width="4" height="15" fill="rgb(229,81,2)"/><text x="1167.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="548" width="4" height="15" fill="rgb(220,202,9)"/><text x="1167.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="564" width="4" height="15" fill="rgb(211,136,3)"/><text x="1167.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="580" width="4" height="15" fill="rgb(215,19,32)"/><text x="1167.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="596" width="4" height="15" fill="rgb(249,45,4)"/><text x="1167.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="612" width="4" height="15" fill="rgb(209,196,54)"/><text x="1167.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.31%)</title><rect x="1164" y="628" width="4" height="15" fill="rgb(215,32,23)"/><text x="1167.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="644" width="4" height="15" fill="rgb(251,43,18)"/><text x="1167.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="660" width="4" height="15" fill="rgb(216,93,24)"/><text x="1167.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="676" width="4" height="15" fill="rgb(244,110,34)"/><text x="1167.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="692" width="4" height="15" fill="rgb(228,112,0)"/><text x="1167.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="708" width="4" height="15" fill="rgb(231,138,53)"/><text x="1167.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.31%)</title><rect x="1164" y="724" width="4" height="15" fill="rgb(222,119,2)"/><text x="1167.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="740" width="4" height="15" fill="rgb(212,70,21)"/><text x="1167.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="756" width="4" height="15" fill="rgb(209,226,49)"/><text x="1167.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="772" width="4" height="15" fill="rgb(240,199,9)"/><text x="1167.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="788" width="4" height="15" fill="rgb(219,75,45)"/><text x="1167.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="804" width="4" height="15" fill="rgb(228,8,35)"/><text x="1167.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.31%)</title><rect x="1164" y="820" width="4" height="15" fill="rgb(212,140,33)"/><text x="1167.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="836" width="4" height="15" fill="rgb(219,101,40)"/><text x="1167.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="852" width="4" height="15" fill="rgb(216,133,35)"/><text x="1167.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="868" width="4" height="15" fill="rgb(239,146,30)"/><text x="1167.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="884" width="4" height="15" fill="rgb(207,106,7)"/><text x="1167.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="900" width="4" height="15" fill="rgb(241,50,20)"/><text x="1167.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.31%)</title><rect x="1164" y="916" width="4" height="15" fill="rgb(242,227,46)"/><text x="1167.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="932" width="4" height="15" fill="rgb(227,12,28)"/><text x="1167.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="948" width="4" height="15" fill="rgb(248,51,19)"/><text x="1167.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="964" width="4" height="15" fill="rgb(210,174,6)"/><text x="1167.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="980" width="4" height="15" fill="rgb(245,202,27)"/><text x="1167.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="996" width="4" height="15" fill="rgb(221,83,19)"/><text x="1167.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.31%)</title><rect x="1164" y="1012" width="4" height="15" fill="rgb(230,24,34)"/><text x="1167.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1028" width="4" height="15" fill="rgb(236,104,33)"/><text x="1167.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1044" width="4" height="15" fill="rgb(215,126,47)"/><text x="1167.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1060" width="4" height="15" fill="rgb(212,209,5)"/><text x="1167.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1076" width="4" height="15" fill="rgb(224,120,12)"/><text x="1167.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1092" width="4" height="15" fill="rgb(228,6,3)"/><text x="1167.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.31%)</title><rect x="1164" y="1108" width="4" height="15" fill="rgb(205,113,21)"/><text x="1167.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1124" width="4" height="15" fill="rgb(219,222,39)"/><text x="1167.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1140" width="4" height="15" fill="rgb(233,46,22)"/><text x="1167.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1156" width="4" height="15" fill="rgb(244,176,39)"/><text x="1167.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1172" width="4" height="15" fill="rgb(205,81,40)"/><text x="1167.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1188" width="4" height="15" fill="rgb(219,229,10)"/><text x="1167.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.31%)</title><rect x="1164" y="1204" width="4" height="15" fill="rgb(238,170,12)"/><text x="1167.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1220" width="4" height="15" fill="rgb(217,49,39)"/><text x="1167.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1236" width="4" height="15" fill="rgb(212,178,54)"/><text x="1167.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1252" width="4" height="15" fill="rgb(213,187,32)"/><text x="1167.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1268" width="4" height="15" fill="rgb(229,152,34)"/><text x="1167.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1284" width="4" height="15" fill="rgb(251,147,43)"/><text x="1167.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.31%)</title><rect x="1164" y="1300" width="4" height="15" fill="rgb(221,218,27)"/><text x="1167.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1316" width="4" height="15" fill="rgb(208,76,9)"/><text x="1167.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1332" width="4" height="15" fill="rgb(230,8,12)"/><text x="1167.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1348" width="4" height="15" fill="rgb(247,103,6)"/><text x="1167.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1364" width="4" height="15" fill="rgb(205,134,7)"/><text x="1167.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1380" width="4" height="15" fill="rgb(252,152,3)"/><text x="1167.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.31%)</title><rect x="1164" y="1396" width="4" height="15" fill="rgb(251,47,19)"/><text x="1167.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1412" width="4" height="15" fill="rgb(234,31,31)"/><text x="1167.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1428" width="4" height="15" fill="rgb(222,37,1)"/><text x="1167.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1444" width="4" height="15" fill="rgb(247,24,35)"/><text x="1167.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1460" width="4" height="15" fill="rgb(218,126,19)"/><text x="1167.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1476" width="4" height="15" fill="rgb(206,219,17)"/><text x="1167.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.31%)</title><rect x="1164" y="1492" width="4" height="15" fill="rgb(241,132,33)"/><text x="1167.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1508" width="4" height="15" fill="rgb(231,48,2)"/><text x="1167.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1524" width="4" height="15" fill="rgb(242,90,0)"/><text x="1167.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1540" width="4" height="15" fill="rgb(241,145,53)"/><text x="1167.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1556" width="4" height="15" fill="rgb(218,78,7)"/><text x="1167.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1572" width="4" height="15" fill="rgb(231,103,10)"/><text x="1167.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.31%)</title><rect x="1164" y="1588" width="4" height="15" fill="rgb(236,191,33)"/><text x="1167.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1604" width="4" height="15" fill="rgb(253,203,35)"/><text x="1167.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1620" width="4" height="15" fill="rgb(242,151,3)"/><text x="1167.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1636" width="4" height="15" fill="rgb(238,168,38)"/><text x="1167.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1652" width="4" height="15" fill="rgb(254,171,47)"/><text x="1167.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1668" width="4" height="15" fill="rgb(232,196,29)"/><text x="1167.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.31%)</title><rect x="1164" y="1684" width="4" height="15" fill="rgb(228,198,34)"/><text x="1167.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="1700" width="4" height="15" fill="rgb(206,101,28)"/><text x="1167.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="1716" width="4" height="15" fill="rgb(219,169,19)"/><text x="1167.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="1732" width="4" height="15" fill="rgb(254,139,1)"/><text x="1167.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="1748" width="4" height="15" fill="rgb(212,99,34)"/><text x="1167.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="1764" width="4" height="15" fill="rgb(213,67,19)"/><text x="1167.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.31%)</title><rect x="1164" y="1780" width="4" height="15" fill="rgb(248,62,24)"/><text x="1167.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.31%)</title><rect x="1164" y="1796" width="4" height="15" fill="rgb(245,50,45)"/><text x="1167.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:748) (1 samples, 0.31%)</title><rect x="1164" y="1812" width="4" height="15" fill="rgb(245,93,15)"/><text x="1167.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;:6) (1 samples, 0.31%)</title><rect x="1164" y="1828" width="4" height="15" fill="rgb(248,70,46)"/><text x="1167.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.31%)</title><rect x="1164" y="1844" width="4" height="15" fill="rgb(241,154,49)"/><text x="1167.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py:136) (1 samples, 0.31%)</title><rect x="1164" y="1860" width="4" height="15" fill="rgb(246,176,2)"/><text x="1167.00" y="1870.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.31%)</title><rect x="1164" y="1876" width="4" height="15" fill="rgb(219,130,40)"/><text x="1167.00" y="1886.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="1164" y="1892" width="4" height="15" fill="rgb(230,191,13)"/><text x="1167.00" y="1902.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="1164" y="1908" width="4" height="15" fill="rgb(213,30,8)"/><text x="1167.00" y="1918.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.31%)</title><rect x="1164" y="1924" width="4" height="15" fill="rgb(230,94,3)"/><text x="1167.00" y="1934.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="1164" y="1940" width="4" height="15" fill="rgb(230,61,12)"/><text x="1167.00" y="1950.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.31%)</title><rect x="1164" y="1956" width="4" height="15" fill="rgb(225,0,44)"/><text x="1167.00" y="1966.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.31%)</title><rect x="1168" y="1108" width="3" height="15" fill="rgb(205,158,41)"/><text x="1171.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1168" y="1124" width="3" height="15" fill="rgb(241,32,17)"/><text x="1171.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1168" y="1140" width="3" height="15" fill="rgb(216,105,19)"/><text x="1171.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1168" y="1156" width="3" height="15" fill="rgb(244,89,0)"/><text x="1171.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1168" y="1172" width="3" height="15" fill="rgb(214,3,48)"/><text x="1171.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1168" y="1188" width="3" height="15" fill="rgb(233,109,21)"/><text x="1171.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:25) (1 samples, 0.31%)</title><rect x="1168" y="1204" width="3" height="15" fill="rgb(239,137,10)"/><text x="1171.00" y="1214.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1168" y="1220" width="3" height="15" fill="rgb(254,162,9)"/><text x="1171.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1168" y="1236" width="3" height="15" fill="rgb(233,60,33)"/><text x="1171.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1168" y="1252" width="3" height="15" fill="rgb(245,117,53)"/><text x="1171.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1168" y="1268" width="3" height="15" fill="rgb(225,92,25)"/><text x="1171.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1168" y="1284" width="3" height="15" fill="rgb(207,74,19)"/><text x="1171.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1168" y="1300" width="3" height="15" fill="rgb(254,65,39)"/><text x="1171.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1168" y="1316" width="3" height="15" fill="rgb(242,210,39)"/><text x="1171.00" y="1326.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/utils.py:15) (1 samples, 0.31%)</title><rect x="1168" y="1332" width="3" height="15" fill="rgb(213,146,44)"/><text x="1171.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1168" y="1348" width="3" height="15" fill="rgb(208,1,52)"/><text x="1171.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1168" y="1364" width="3" height="15" fill="rgb(249,208,10)"/><text x="1171.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1168" y="1380" width="3" height="15" fill="rgb(223,86,41)"/><text x="1171.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1168" y="1396" width="3" height="15" fill="rgb(243,189,33)"/><text x="1171.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1168" y="1412" width="3" height="15" fill="rgb(254,36,49)"/><text x="1171.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/data_types.py:7) (1 samples, 0.31%)</title><rect x="1168" y="1428" width="3" height="15" fill="rgb(205,19,49)"/><text x="1171.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1028) (1 samples, 0.31%)</title><rect x="1168" y="1444" width="3" height="15" fill="rgb(221,180,33)"/><text x="1171.00" y="1454.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:4) (10 samples, 3.09%)</title><rect x="1139" y="52" width="36" height="15" fill="rgb(240,162,6)"/><text x="1142.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.09%)</title><rect x="1139" y="68" width="36" height="15" fill="rgb(220,121,44)"/><text x="1142.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.09%)</title><rect x="1139" y="84" width="36" height="15" fill="rgb(225,149,53)"/><text x="1142.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.09%)</title><rect x="1139" y="100" width="36" height="15" fill="rgb(214,42,41)"/><text x="1142.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.09%)</title><rect x="1139" y="116" width="36" height="15" fill="rgb(241,205,14)"/><text x="1142.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.09%)</title><rect x="1139" y="132" width="36" height="15" fill="rgb(248,124,38)"/><text x="1142.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:7) (5 samples, 1.54%)</title><rect x="1157" y="148" width="18" height="15" fill="rgb(247,148,41)"/><text x="1160.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1157" y="164" width="18" height="15" fill="rgb(222,154,18)"/><text x="1160.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1157" y="180" width="18" height="15" fill="rgb(210,37,40)"/><text x="1160.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1157" y="196" width="18" height="15" fill="rgb(239,5,24)"/><text x="1160.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1157" y="212" width="18" height="15" fill="rgb(227,67,2)"/><text x="1160.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1157" y="228" width="18" height="15" fill="rgb(214,221,40)"/><text x="1160.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.23%)</title><rect x="1160" y="244" width="15" height="15" fill="rgb(207,36,48)"/><text x="1163.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="1160" y="260" width="15" height="15" fill="rgb(250,132,27)"/><text x="1163.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.23%)</title><rect x="1160" y="276" width="15" height="15" fill="rgb(212,205,40)"/><text x="1163.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.23%)</title><rect x="1160" y="292" width="15" height="15" fill="rgb(219,34,26)"/><text x="1163.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.23%)</title><rect x="1160" y="308" width="15" height="15" fill="rgb(224,77,28)"/><text x="1163.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="1160" y="324" width="15" height="15" fill="rgb(254,195,53)"/><text x="1163.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.93%)</title><rect x="1164" y="340" width="11" height="15" fill="rgb(235,32,16)"/><text x="1167.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1164" y="356" width="11" height="15" fill="rgb(214,129,3)"/><text x="1167.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1164" y="372" width="11" height="15" fill="rgb(254,104,11)"/><text x="1167.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1164" y="388" width="11" height="15" fill="rgb(230,227,29)"/><text x="1167.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1164" y="404" width="11" height="15" fill="rgb(229,197,38)"/><text x="1167.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1164" y="420" width="11" height="15" fill="rgb(234,153,46)"/><text x="1167.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.62%)</title><rect x="1168" y="436" width="7" height="15" fill="rgb(211,144,47)"/><text x="1171.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="452" width="7" height="15" fill="rgb(209,20,8)"/><text x="1171.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="1168" y="468" width="7" height="15" fill="rgb(237,163,53)"/><text x="1171.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="484" width="7" height="15" fill="rgb(235,119,14)"/><text x="1171.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="500" width="7" height="15" fill="rgb(247,29,22)"/><text x="1171.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="516" width="7" height="15" fill="rgb(229,227,7)"/><text x="1171.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="532" width="7" height="15" fill="rgb(206,102,39)"/><text x="1171.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="548" width="7" height="15" fill="rgb(231,168,19)"/><text x="1171.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="564" width="7" height="15" fill="rgb(241,179,48)"/><text x="1171.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.62%)</title><rect x="1168" y="580" width="7" height="15" fill="rgb(214,98,26)"/><text x="1171.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="596" width="7" height="15" fill="rgb(245,166,46)"/><text x="1171.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="612" width="7" height="15" fill="rgb(209,90,52)"/><text x="1171.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="628" width="7" height="15" fill="rgb(241,118,17)"/><text x="1171.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="644" width="7" height="15" fill="rgb(207,183,30)"/><text x="1171.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="660" width="7" height="15" fill="rgb(239,207,43)"/><text x="1171.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.62%)</title><rect x="1168" y="676" width="7" height="15" fill="rgb(237,144,6)"/><text x="1171.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="692" width="7" height="15" fill="rgb(205,30,11)"/><text x="1171.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="708" width="7" height="15" fill="rgb(231,4,2)"/><text x="1171.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="724" width="7" height="15" fill="rgb(240,131,37)"/><text x="1171.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="740" width="7" height="15" fill="rgb(250,195,30)"/><text x="1171.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="756" width="7" height="15" fill="rgb(205,227,44)"/><text x="1171.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.62%)</title><rect x="1168" y="772" width="7" height="15" fill="rgb(252,143,18)"/><text x="1171.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="788" width="7" height="15" fill="rgb(210,176,11)"/><text x="1171.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="804" width="7" height="15" fill="rgb(215,45,12)"/><text x="1171.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="820" width="7" height="15" fill="rgb(249,169,26)"/><text x="1171.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="836" width="7" height="15" fill="rgb(235,49,13)"/><text x="1171.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="852" width="7" height="15" fill="rgb(223,100,26)"/><text x="1171.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.62%)</title><rect x="1168" y="868" width="7" height="15" fill="rgb(246,72,4)"/><text x="1171.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="884" width="7" height="15" fill="rgb(247,122,17)"/><text x="1171.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="1168" y="900" width="7" height="15" fill="rgb(205,125,45)"/><text x="1171.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="916" width="7" height="15" fill="rgb(231,172,6)"/><text x="1171.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="932" width="7" height="15" fill="rgb(245,198,11)"/><text x="1171.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="948" width="7" height="15" fill="rgb(206,15,42)"/><text x="1171.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="964" width="7" height="15" fill="rgb(219,154,18)"/><text x="1171.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="980" width="7" height="15" fill="rgb(238,206,50)"/><text x="1171.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="996" width="7" height="15" fill="rgb(205,189,37)"/><text x="1171.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.62%)</title><rect x="1168" y="1012" width="7" height="15" fill="rgb(206,84,30)"/><text x="1171.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1168" y="1028" width="7" height="15" fill="rgb(238,116,50)"/><text x="1171.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1168" y="1044" width="7" height="15" fill="rgb(245,96,42)"/><text x="1171.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1168" y="1060" width="7" height="15" fill="rgb(247,108,30)"/><text x="1171.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1168" y="1076" width="7" height="15" fill="rgb(222,144,0)"/><text x="1171.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1168" y="1092" width="7" height="15" fill="rgb(207,211,52)"/><text x="1171.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.31%)</title><rect x="1171" y="1108" width="4" height="15" fill="rgb(245,185,39)"/><text x="1174.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1171" y="1124" width="4" height="15" fill="rgb(224,63,8)"/><text x="1174.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="1140" width="4" height="15" fill="rgb(253,104,28)"/><text x="1174.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="1156" width="4" height="15" fill="rgb(220,221,34)"/><text x="1174.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="1172" width="4" height="15" fill="rgb(217,162,40)"/><text x="1174.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1171" y="1188" width="4" height="15" fill="rgb(228,65,7)"/><text x="1174.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1171" y="1204" width="4" height="15" fill="rgb(241,206,35)"/><text x="1174.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="1220" width="4" height="15" fill="rgb(239,83,50)"/><text x="1174.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.31%)</title><rect x="1171" y="1236" width="4" height="15" fill="rgb(250,172,16)"/><text x="1174.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1171" y="1252" width="4" height="15" fill="rgb(248,54,53)"/><text x="1174.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="1268" width="4" height="15" fill="rgb(247,114,13)"/><text x="1174.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="1284" width="4" height="15" fill="rgb(231,212,39)"/><text x="1174.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="1300" width="4" height="15" fill="rgb(226,146,3)"/><text x="1174.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1171" y="1316" width="4" height="15" fill="rgb(231,67,5)"/><text x="1174.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1171" y="1332" width="4" height="15" fill="rgb(233,122,30)"/><text x="1174.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="1348" width="4" height="15" fill="rgb(238,136,0)"/><text x="1174.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.31%)</title><rect x="1171" y="1364" width="4" height="15" fill="rgb(221,90,20)"/><text x="1174.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="1380" width="4" height="15" fill="rgb(249,158,0)"/><text x="1174.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="1396" width="4" height="15" fill="rgb(246,188,49)"/><text x="1174.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1171" y="1412" width="4" height="15" fill="rgb(209,54,20)"/><text x="1174.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1171" y="1428" width="4" height="15" fill="rgb(211,105,45)"/><text x="1174.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="1444" width="4" height="15" fill="rgb(226,181,50)"/><text x="1174.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.31%)</title><rect x="1171" y="1460" width="4" height="15" fill="rgb(206,202,45)"/><text x="1174.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.31%)</title><rect x="1171" y="1476" width="4" height="15" fill="rgb(226,120,11)"/><text x="1174.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.31%)</title><rect x="1171" y="1492" width="4" height="15" fill="rgb(209,5,37)"/><text x="1174.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.31%)</title><rect x="1171" y="1508" width="4" height="15" fill="rgb(253,152,50)"/><text x="1174.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.31%)</title><rect x="1171" y="1524" width="4" height="15" fill="rgb(219,220,31)"/><text x="1174.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.31%)</title><rect x="1171" y="1540" width="4" height="15" fill="rgb(221,141,53)"/><text x="1174.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="1171" y="1556" width="4" height="15" fill="rgb(221,195,16)"/><text x="1174.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.31%)</title><rect x="1171" y="1572" width="4" height="15" fill="rgb(246,110,14)"/><text x="1174.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.31%)</title><rect x="1171" y="1588" width="4" height="15" fill="rgb(214,132,42)"/><text x="1174.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.31%)</title><rect x="1171" y="1604" width="4" height="15" fill="rgb(245,7,6)"/><text x="1174.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.31%)</title><rect x="1171" y="1620" width="4" height="15" fill="rgb(246,185,36)"/><text x="1174.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.31%)</title><rect x="1171" y="1636" width="4" height="15" fill="rgb(227,177,29)"/><text x="1174.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="1171" y="1652" width="4" height="15" fill="rgb(245,40,45)"/><text x="1174.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:45) (1 samples, 0.31%)</title><rect x="1175" y="52" width="4" height="15" fill="rgb(248,3,13)"/><text x="1178.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:44) (1 samples, 0.31%)</title><rect x="1175" y="68" width="4" height="15" fill="rgb(252,170,50)"/><text x="1178.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:29) (1 samples, 0.31%)</title><rect x="1175" y="84" width="4" height="15" fill="rgb(252,58,26)"/><text x="1178.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:23) (1 samples, 0.31%)</title><rect x="1175" y="100" width="4" height="15" fill="rgb(240,129,10)"/><text x="1178.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="1175" y="116" width="4" height="15" fill="rgb(238,92,50)"/><text x="1178.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="1175" y="132" width="4" height="15" fill="rgb(253,122,35)"/><text x="1178.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="1175" y="148" width="4" height="15" fill="rgb(238,200,6)"/><text x="1178.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.31%)</title><rect x="1175" y="164" width="4" height="15" fill="rgb(235,145,43)"/><text x="1178.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.31%)</title><rect x="1175" y="180" width="4" height="15" fill="rgb(219,102,31)"/><text x="1178.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.31%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(230,176,34)"/><text x="1178.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.31%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(205,16,13)"/><text x="1178.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.31%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(251,88,36)"/><text x="1178.00" y="238.50"></text></g><g><title>0x7ff8adaf1422 (?) (1 samples, 0.31%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(206,85,40)"/><text x="1178.00" y="254.50"></text></g><g><title>0x7ff8adaf789e (?) (1 samples, 0.31%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(250,76,46)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7ff8adaf774f (?) (1 samples, 0.31%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(227,92,38)"/><text x="1178.00" y="286.50"></text></g><g><title>0x7ff8adafda3a (?) (1 samples, 0.31%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(212,15,39)"/><text x="1178.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.31%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(207,180,45)"/><text x="1178.00" y="318.50"></text></g><g><title>0x7ff8b6e18daa (libgomp.so.1.0.0) (1 samples, 0.31%)</title><rect x="1175" y="324" width="4" height="15" fill="rgb(211,37,19)"/><text x="1178.00" y="334.50"></text></g><g><title>0x7ff8b6e1acf0 (libgomp.so.1.0.0) (1 samples, 0.31%)</title><rect x="1175" y="340" width="4" height="15" fill="rgb(227,147,27)"/><text x="1178.00" y="350.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.31%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(247,61,49)"/><text x="1182.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.31%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(248,84,5)"/><text x="1182.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:126) (1 samples, 0.31%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(214,117,46)"/><text x="1182.00" y="238.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:28) (2 samples, 0.62%)</title><rect x="1179" y="84" width="7" height="15" fill="rgb(216,133,13)"/><text x="1182.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.62%)</title><rect x="1179" y="100" width="7" height="15" fill="rgb(249,138,46)"/><text x="1182.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.62%)</title><rect x="1179" y="116" width="7" height="15" fill="rgb(216,159,34)"/><text x="1182.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.62%)</title><rect x="1179" y="132" width="7" height="15" fill="rgb(241,117,28)"/><text x="1182.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.62%)</title><rect x="1179" y="148" width="7" height="15" fill="rgb(212,52,42)"/><text x="1182.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.62%)</title><rect x="1179" y="164" width="7" height="15" fill="rgb(238,120,17)"/><text x="1182.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.62%)</title><rect x="1179" y="180" width="7" height="15" fill="rgb(230,150,17)"/><text x="1182.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.31%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(235,29,22)"/><text x="1185.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.31%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(254,60,35)"/><text x="1185.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.31%)</title><rect x="1182" y="228" width="4" height="15" fill="rgb(244,50,25)"/><text x="1185.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1182" y="244" width="4" height="15" fill="rgb(251,187,15)"/><text x="1185.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.31%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(249,177,47)"/><text x="1185.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.31%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(231,40,54)"/><text x="1185.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.31%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(247,71,36)"/><text x="1185.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:206) (1 samples, 0.31%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(252,117,44)"/><text x="1185.00" y="318.50"></text></g><g><title>all (324 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(220,178,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:52) (3 samples, 0.93%)</title><rect x="1179" y="52" width="11" height="15" fill="rgb(220,213,29)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:51) (3 samples, 0.93%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(234,175,3)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:29) (1 samples, 0.31%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(249,56,36)"/><text x="1189.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_4_12_float_.py:18) (1 samples, 0.31%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(241,201,34)"/><text x="1189.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(209,43,53)"/><text x="1189.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(210,208,48)"/><text x="1189.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(214,139,32)"/><text x="1189.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(225,54,22)"/><text x="1189.00" y="174.50"></text></g></g></svg>